{
  "version": 3,
  "sources": ["../lib/wasm/binding/ort-wasm.js", "../lib/wasm/wasm-factory.ts", "../lib/wasm/wasm-utils.ts", "../lib/wasm/run-options.ts", "../lib/wasm/session-options.ts", "../lib/wasm/wasm-common.ts", "../lib/wasm/wasm-core-impl.ts", "../lib/wasm/proxy-wrapper.ts", "../lib/wasm/session-handler.ts", "../lib/backend-wasm.ts", "../lib/index.ts", "../lib/version.ts"],
  "sourcesContent": ["\nvar ortWasm = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(moduleArg = {}) {\n\nvar f=moduleArg,aa,m;f.ready=new Promise((a,b)=>{aa=a;m=b});var ba=Object.assign({},f),ca=\"./this.program\",da=\"object\"==typeof window,q=\"function\"==typeof importScripts,ea=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,t=\"\",fa,w,x;\nif(ea){var fs=require(\"fs\"),ha=require(\"path\");t=q?ha.dirname(t)+\"/\":__dirname+\"/\";fa=(a,b)=>{a=a.startsWith(\"file://\")?new URL(a):ha.normalize(a);return fs.readFileSync(a,b?void 0:\"utf8\")};x=a=>{a=fa(a,!0);a.buffer||(a=new Uint8Array(a));return a};w=(a,b,c,d=!0)=>{a=a.startsWith(\"file://\")?new URL(a):ha.normalize(a);fs.readFile(a,d?void 0:\"utf8\",(e,h)=>{e?c(e):b(d?h.buffer:h)})};!f.thisProgram&&1<process.argv.length&&(ca=process.argv[1].replace(/\\\\/g,\"/\"));process.argv.slice(2);f.inspect=()=>\"[Emscripten Module object]\"}else if(da||\nq)q?t=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(t=document.currentScript.src),_scriptDir&&(t=_scriptDir),0!==t.indexOf(\"blob:\")?t=t.substr(0,t.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):t=\"\",fa=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);return b.responseText},q&&(x=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\"arraybuffer\";b.send(null);return new Uint8Array(b.response)}),w=(a,b,c)=>{var d=new XMLHttpRequest;d.open(\"GET\",a,!0);d.responseType=\n\"arraybuffer\";d.onload=()=>{200==d.status||0==d.status&&d.response?b(d.response):c()};d.onerror=c;d.send(null)};var ia=f.print||console.log.bind(console),z=f.printErr||console.error.bind(console);Object.assign(f,ba);ba=null;f.thisProgram&&(ca=f.thisProgram);var A;f.wasmBinary&&(A=f.wasmBinary);var noExitRuntime=f.noExitRuntime||!0;\"object\"!=typeof WebAssembly&&ja(\"no native wasm support detected\");var B,C,ka=!1,D,E,G,H,J,K,la,ma,na,oa;\nfunction pa(){var a=B.buffer;f.HEAP8=D=new Int8Array(a);f.HEAP16=G=new Int16Array(a);f.HEAP32=J=new Int32Array(a);f.HEAPU8=E=new Uint8Array(a);f.HEAPU16=H=new Uint16Array(a);f.HEAPU32=K=new Uint32Array(a);f.HEAPF32=la=new Float32Array(a);f.HEAPF64=oa=new Float64Array(a);f.HEAP64=ma=new BigInt64Array(a);f.HEAPU64=na=new BigUint64Array(a)}var qa=[],ra=[],sa=[];function ta(){var a=f.preRun.shift();qa.unshift(a)}var L=0,ua=null,M=null;\nfunction ja(a){if(f.onAbort)f.onAbort(a);a=\"Aborted(\"+a+\")\";z(a);ka=!0;a=new WebAssembly.RuntimeError(a+\". Build with -sASSERTIONS for more info.\");m(a);throw a;}function va(a){return a.startsWith(\"data:application/octet-stream;base64,\")}var N;N=\"ort-wasm.wasm\";if(!va(N)){var wa=N;N=f.locateFile?f.locateFile(wa,t):t+wa}function xa(a){if(a==N&&A)return new Uint8Array(A);if(x)return x(a);throw\"both async and sync fetching of the wasm failed\";}\nfunction ya(a){if(!A&&(da||q)){if(\"function\"==typeof fetch&&!a.startsWith(\"file://\"))return fetch(a,{credentials:\"same-origin\"}).then(b=>{if(!b.ok)throw\"failed to load wasm binary file at '\"+a+\"'\";return b.arrayBuffer()}).catch(()=>xa(a));if(w)return new Promise((b,c)=>{w(a,d=>b(new Uint8Array(d)),c)})}return Promise.resolve().then(()=>xa(a))}function za(a,b,c){return ya(a).then(d=>WebAssembly.instantiate(d,b)).then(d=>d).then(c,d=>{z(\"failed to asynchronously prepare wasm: \"+d);ja(d)})}\nfunction Aa(a,b){var c=N;return A||\"function\"!=typeof WebAssembly.instantiateStreaming||va(c)||c.startsWith(\"file://\")||ea||\"function\"!=typeof fetch?za(c,a,b):fetch(c,{credentials:\"same-origin\"}).then(d=>WebAssembly.instantiateStreaming(d,a).then(b,function(e){z(\"wasm streaming compile failed: \"+e);z(\"falling back to ArrayBuffer instantiation\");return za(c,a,b)}))}var Ba=a=>{for(;0<a.length;)a.shift()(f)};\nfunction Ca(a){this.Va=a-24;this.fb=function(b){K[this.Va+4>>2]=b};this.eb=function(b){K[this.Va+8>>2]=b};this.Za=function(b,c){this.$a();this.fb(b);this.eb(c)};this.$a=function(){K[this.Va+16>>2]=0}}\nvar Da=0,Ea=0,Fa=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0,O=(a,b,c)=>{var d=b+c;for(c=b;a[c]&&!(c>=d);)++c;if(16<c-b&&a.buffer&&Fa)return Fa.decode(a.subarray(b,c));for(d=\"\";b<c;){var e=a[b++];if(e&128){var h=a[b++]&63;if(192==(e&224))d+=String.fromCharCode((e&31)<<6|h);else{var l=a[b++]&63;e=224==(e&240)?(e&15)<<12|h<<6|l:(e&7)<<18|h<<12|l<<6|a[b++]&63;65536>e?d+=String.fromCharCode(e):(e-=65536,d+=String.fromCharCode(55296|e>>10,56320|e&1023))}}else d+=String.fromCharCode(e)}return d},\nP=a=>{for(var b=0,c=0;c<a.length;++c){var d=a.charCodeAt(c);127>=d?b++:2047>=d?b+=2:55296<=d&&57343>=d?(b+=4,++c):b+=3}return b},Q=(a,b,c,d)=>{if(!(0<d))return 0;var e=c;d=c+d-1;for(var h=0;h<a.length;++h){var l=a.charCodeAt(h);if(55296<=l&&57343>=l){var k=a.charCodeAt(++h);l=65536+((l&1023)<<10)|k&1023}if(127>=l){if(c>=d)break;b[c++]=l}else{if(2047>=l){if(c+1>=d)break;b[c++]=192|l>>6}else{if(65535>=l){if(c+2>=d)break;b[c++]=224|l>>12}else{if(c+3>=d)break;b[c++]=240|l>>18;b[c++]=128|l>>12&63}b[c++]=\n128|l>>6&63}b[c++]=128|l&63}}b[c]=0;return c-e};function Ga(a){if(null===a)return\"null\";var b=typeof a;return\"object\"===b||\"array\"===b||\"function\"===b?a.toString():\"\"+a}var Ha=void 0;function R(a){for(var b=\"\";E[a];)b+=Ha[E[a++]];return b}var Ia={},Ja={},Ka={},La=void 0;function S(a){throw new La(a);}\nfunction Ma(a,b,c={}){var d=b.name;a||S(`type \"${d}\" must have a positive integer typeid pointer`);if(Ja.hasOwnProperty(a)){if(c.gb)return;S(`Cannot register type '${d}' twice`)}Ja[a]=b;delete Ka[a];Ia.hasOwnProperty(a)&&(b=Ia[a],delete Ia[a],b.forEach(e=>e()))}function T(a,b,c={}){if(!(\"argPackAdvance\"in b))throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");Ma(a,b,c)}\nfunction Na(a,b,c){switch(b){case 0:return c?function(d){return D[d]}:function(d){return E[d]};case 1:return c?function(d){return G[d>>1]}:function(d){return H[d>>1]};case 2:return c?function(d){return J[d>>2]}:function(d){return K[d>>2]};case 3:return c?function(d){return ma[d>>3]}:function(d){return na[d>>3]};default:throw new TypeError(\"Unknown integer type: \"+a);}}\nfunction Oa(a){switch(a){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(`Unknown type size: ${a}`);}}function Pa(){this.Sa=[void 0];this.bb=[]}var U=new Pa;function Qa(a){a>=U.Va&&0===--U.get(a).cb&&U.$a(a)}var V=a=>{a||S(\"Cannot use deleted val. handle = \"+a);return U.get(a).value},W=a=>{switch(a){case void 0:return 1;case null:return 2;case !0:return 3;case !1:return 4;default:return U.Za({cb:1,value:a})}};\nfunction Ra(a){return this.fromWireType(J[a>>2])}function Sa(a,b){switch(b){case 2:return function(c){return this.fromWireType(la[c>>2])};case 3:return function(c){return this.fromWireType(oa[c>>3])};default:throw new TypeError(\"Unknown float type: \"+a);}}\nvar Ta=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf-16le\"):void 0,Ua=(a,b)=>{var c=a>>1;for(var d=c+b/2;!(c>=d)&&H[c];)++c;c<<=1;if(32<c-a&&Ta)return Ta.decode(E.subarray(a,c));c=\"\";for(d=0;!(d>=b/2);++d){var e=G[a+2*d>>1];if(0==e)break;c+=String.fromCharCode(e)}return c},Va=(a,b,c)=>{void 0===c&&(c=2147483647);if(2>c)return 0;c-=2;var d=b;c=c<2*a.length?c/2:a.length;for(var e=0;e<c;++e)G[b>>1]=a.charCodeAt(e),b+=2;G[b>>1]=0;return b-d},Wa=a=>2*a.length,Xa=(a,b)=>{for(var c=0,d=\"\";!(c>=b/\n4);){var e=J[a+4*c>>2];if(0==e)break;++c;65536<=e?(e-=65536,d+=String.fromCharCode(55296|e>>10,56320|e&1023)):d+=String.fromCharCode(e)}return d},Ya=(a,b,c)=>{void 0===c&&(c=2147483647);if(4>c)return 0;var d=b;c=d+c-4;for(var e=0;e<a.length;++e){var h=a.charCodeAt(e);if(55296<=h&&57343>=h){var l=a.charCodeAt(++e);h=65536+((h&1023)<<10)|l&1023}J[b>>2]=h;b+=4;if(b+4>c)break}J[b>>2]=0;return b-d},Za=a=>{for(var b=0,c=0;c<a.length;++c){var d=a.charCodeAt(c);55296<=d&&57343>=d&&++c;b+=4}return b};\nfunction $a(a,b){var c=Ja[a];if(void 0===c){a=ab(a);var d=R(a);X(a);S(b+\" has unknown type \"+d)}return c}var bb={};function cb(a){var b=bb[a];return void 0===b?R(a):b}var eb=[];function fb(){return\"object\"==typeof globalThis?globalThis:Function(\"return this\")()}function gb(a){var b=eb.length;eb.push(a);return b}function hb(a,b){for(var c=Array(a),d=0;d<a;++d)c[d]=$a(K[b+4*d>>2],\"parameter \"+d);return c}\nfunction ib(a){if(void 0===a)return\"_unknown\";a=a.replace(/[^a-zA-Z0-9_]/g,\"$\");var b=a.charCodeAt(0);return 48<=b&&57>=b?`_${a}`:a}var jb=[];function kb(a,b){a=ib(a);return{[a]:function(){return b.apply(this,arguments)}}[a]}\nfunction lb(a){var b=Function;if(!(b instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof b} which is not a function`);var c=kb(b.name||\"unknownFunctionName\",function(){});c.prototype=b.prototype;c=new c;a=b.apply(c,a);return a instanceof Object?a:c}\nfunction mb(a){for(var b=\"\",c=0;c<a;++c)b+=(0!==c?\", \":\"\")+\"arg\"+c;var d=\"return function emval_allocator_\"+a+\"(constructor, argTypes, args) {\\n  var HEAPU32 = getMemory();\\n\";for(c=0;c<a;++c)d+=\"var argType\"+c+\" = requireRegisteredType(HEAPU32[((argTypes)>>2)], 'parameter \"+c+\"');\\nvar arg\"+c+\" = argType\"+c+\".readValueFromPointer(args);\\nargs += argType\"+c+\"['argPackAdvance'];\\nargTypes += 4;\\n\";return(new Function(\"requireRegisteredType\",\"Module\",\"valueToHandle\",\"getMemory\",d+(\"var obj = new constructor(\"+\nb+\");\\nreturn valueToHandle(obj);\\n}\\n\")))($a,f,W,()=>K)}var nb={};function Y(a){return-9007199254740992>a||9007199254740992<a?NaN:Number(a)}\nvar Z=a=>0===a%4&&(0!==a%100||0===a%400),ob=[0,31,60,91,121,152,182,213,244,274,305,335],pb=[0,31,59,90,120,151,181,212,243,273,304,334],rb=a=>{var b=P(a)+1,c=qb(b);c&&Q(a,E,c,b);return c},sb={},ub=()=>{if(!tb){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:ca||\"./this.program\"},b;for(b in sb)void 0===sb[b]?delete a[b]:a[b]=sb[b];var c=[];for(b in a)c.push(`${b}=${a[b]}`);\ntb=c}return tb},tb,vb=[null,[],[]],wb=[31,29,31,30,31,30,31,31,30,31,30,31],xb=[31,28,31,30,31,30,31,31,30,31,30,31];function yb(a){var b=Array(P(a)+1);Q(a,b,0,b.length);return b}\nfor(var zb=(a,b,c,d)=>{function e(g,r,u){for(g=\"number\"==typeof g?g.toString():g||\"\";g.length<r;)g=u[0]+g;return g}function h(g,r){return e(g,r,\"0\")}function l(g,r){function u(db){return 0>db?-1:0<db?1:0}var I;0===(I=u(g.getFullYear()-r.getFullYear()))&&0===(I=u(g.getMonth()-r.getMonth()))&&(I=u(g.getDate()-r.getDate()));return I}function k(g){switch(g.getDay()){case 0:return new Date(g.getFullYear()-1,11,29);case 1:return g;case 2:return new Date(g.getFullYear(),0,3);case 3:return new Date(g.getFullYear(),\n0,2);case 4:return new Date(g.getFullYear(),0,1);case 5:return new Date(g.getFullYear()-1,11,31);case 6:return new Date(g.getFullYear()-1,11,30)}}function n(g){var r=g.Ta;for(g=new Date((new Date(g.Ua+1900,0,1)).getTime());0<r;){var u=g.getMonth(),I=(Z(g.getFullYear())?wb:xb)[u];if(r>I-g.getDate())r-=I-g.getDate()+1,g.setDate(1),11>u?g.setMonth(u+1):(g.setMonth(0),g.setFullYear(g.getFullYear()+1));else{g.setDate(g.getDate()+r);break}}u=new Date(g.getFullYear()+1,0,4);r=k(new Date(g.getFullYear(),\n0,4));u=k(u);return 0>=l(r,g)?0>=l(u,g)?g.getFullYear()+1:g.getFullYear():g.getFullYear()-1}var p=J[d+40>>2];d={kb:J[d>>2],jb:J[d+4>>2],Xa:J[d+8>>2],ab:J[d+12>>2],Ya:J[d+16>>2],Ua:J[d+20>>2],Oa:J[d+24>>2],Ta:J[d+28>>2],mb:J[d+32>>2],ib:J[d+36>>2],lb:p?p?O(E,p):\"\":\"\"};c=c?O(E,c):\"\";p={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\n\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var v in p)c=c.replace(new RegExp(v,\"g\"),p[v]);var y=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),F=\"January February March April May June July August September October November December\".split(\" \");p={\"%a\":g=>y[g.Oa].substring(0,3),\"%A\":g=>y[g.Oa],\"%b\":g=>F[g.Ya].substring(0,3),\"%B\":g=>F[g.Ya],\"%C\":g=>h((g.Ua+1900)/\n100|0,2),\"%d\":g=>h(g.ab,2),\"%e\":g=>e(g.ab,2,\" \"),\"%g\":g=>n(g).toString().substring(2),\"%G\":g=>n(g),\"%H\":g=>h(g.Xa,2),\"%I\":g=>{g=g.Xa;0==g?g=12:12<g&&(g-=12);return h(g,2)},\"%j\":g=>{for(var r=0,u=0;u<=g.Ya-1;r+=(Z(g.Ua+1900)?wb:xb)[u++]);return h(g.ab+r,3)},\"%m\":g=>h(g.Ya+1,2),\"%M\":g=>h(g.jb,2),\"%n\":()=>\"\\n\",\"%p\":g=>0<=g.Xa&&12>g.Xa?\"AM\":\"PM\",\"%S\":g=>h(g.kb,2),\"%t\":()=>\"\\t\",\"%u\":g=>g.Oa||7,\"%U\":g=>h(Math.floor((g.Ta+7-g.Oa)/7),2),\"%V\":g=>{var r=Math.floor((g.Ta+7-(g.Oa+6)%7)/7);2>=(g.Oa+371-g.Ta-2)%\n7&&r++;if(r)53==r&&(u=(g.Oa+371-g.Ta)%7,4==u||3==u&&Z(g.Ua)||(r=1));else{r=52;var u=(g.Oa+7-g.Ta-1)%7;(4==u||5==u&&Z(g.Ua%400-1))&&r++}return h(r,2)},\"%w\":g=>g.Oa,\"%W\":g=>h(Math.floor((g.Ta+7-(g.Oa+6)%7)/7),2),\"%y\":g=>(g.Ua+1900).toString().substring(2),\"%Y\":g=>g.Ua+1900,\"%z\":g=>{g=g.ib;var r=0<=g;g=Math.abs(g)/60;return(r?\"+\":\"-\")+String(\"0000\"+(g/60*100+g%60)).slice(-4)},\"%Z\":g=>g.lb,\"%%\":()=>\"%\"};c=c.replace(/%%/g,\"\\x00\\x00\");for(v in p)c.includes(v)&&(c=c.replace(new RegExp(v,\"g\"),p[v](d)));c=\nc.replace(/\\0\\0/g,\"%\");v=yb(c);if(v.length>b)return 0;D.set(v,a);return v.length-1},Ab=Array(256),Bb=0;256>Bb;++Bb)Ab[Bb]=String.fromCharCode(Bb);Ha=Ab;La=f.BindingError=class extends Error{constructor(a){super(a);this.name=\"BindingError\"}};f.InternalError=class extends Error{constructor(a){super(a);this.name=\"InternalError\"}};\nObject.assign(Pa.prototype,{get(a){return this.Sa[a]},has(a){return void 0!==this.Sa[a]},Za(a){var b=this.bb.pop()||this.Sa.length;this.Sa[b]=a;return b},$a(a){this.Sa[a]=void 0;this.bb.push(a)}});U.Sa.push({value:void 0},{value:null},{value:!0},{value:!1});U.Va=U.Sa.length;f.count_emval_handles=function(){for(var a=0,b=U.Va;b<U.Sa.length;++b)void 0!==U.Sa[b]&&++a;return a};\nvar Cb={a:function(a,b,c){(new Ca(a)).Za(b,c);Da=a;Ea++;throw Da;},v:function(){return 0},ba:()=>{},N:()=>{},P:()=>{},H:function(){return 0},$:()=>{},V:()=>{},_:()=>{},A:function(){},O:()=>{},L:()=>{},aa:()=>{},M:()=>{},D:function(a,b,c,d,e){b=R(b);c=Oa(c);var h=-1!=b.indexOf(\"u\");h&&(e=(1n<<64n)-1n);T(a,{name:b,fromWireType:function(l){return l},toWireType:function(l,k){if(\"bigint\"!=typeof k&&\"number\"!=typeof k)throw new TypeError(`Cannot convert \"${Ga(k)}\" to ${this.name}`);if(k<d||k>e)throw new TypeError(`Passing a number \"${Ga(k)}\" from JS side to C/C++ side to an argument of type \"${b}\", which is outside the valid range [${d}, ${e}]!`);\nreturn k},argPackAdvance:8,readValueFromPointer:Na(b,c,!h),Wa:null})},ea:function(a,b,c,d,e){var h=Oa(c);b=R(b);T(a,{name:b,fromWireType:function(l){return!!l},toWireType:function(l,k){return k?d:e},argPackAdvance:8,readValueFromPointer:function(l){if(1===c)var k=D;else if(2===c)k=G;else if(4===c)k=J;else throw new TypeError(\"Unknown boolean type size: \"+b);return this.fromWireType(k[l>>h])},Wa:null})},da:function(a,b){b=R(b);T(a,{name:b,fromWireType:function(c){var d=V(c);Qa(c);return d},toWireType:function(c,\nd){return W(d)},argPackAdvance:8,readValueFromPointer:Ra,Wa:null})},C:function(a,b,c){c=Oa(c);b=R(b);T(a,{name:b,fromWireType:function(d){return d},toWireType:function(d,e){return e},argPackAdvance:8,readValueFromPointer:Sa(b,c),Wa:null})},p:function(a,b,c,d,e){b=R(b);-1===e&&(e=4294967295);e=Oa(c);var h=k=>k;if(0===d){var l=32-8*c;h=k=>k<<l>>>l}c=b.includes(\"unsigned\")?function(k,n){return n>>>0}:function(k,n){return n};T(a,{name:b,fromWireType:h,toWireType:c,argPackAdvance:8,readValueFromPointer:Na(b,\ne,0!==d),Wa:null})},l:function(a,b,c){function d(h){h>>=2;var l=K;return new e(l.buffer,l[h+1],l[h])}var e=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][b];c=R(c);T(a,{name:c,fromWireType:d,argPackAdvance:8,readValueFromPointer:d},{gb:!0})},E:function(a,b){b=R(b);var c=\"std::string\"===b;T(a,{name:b,fromWireType:function(d){var e=K[d>>2],h=d+4;if(c)for(var l=h,k=0;k<=e;++k){var n=h+k;if(k==e||0==E[n]){l=l?O(E,l,n-l):\"\";if(void 0===\np)var p=l;else p+=String.fromCharCode(0),p+=l;l=n+1}}else{p=Array(e);for(k=0;k<e;++k)p[k]=String.fromCharCode(E[h+k]);p=p.join(\"\")}X(d);return p},toWireType:function(d,e){e instanceof ArrayBuffer&&(e=new Uint8Array(e));var h=\"string\"==typeof e;h||e instanceof Uint8Array||e instanceof Uint8ClampedArray||e instanceof Int8Array||S(\"Cannot pass non-string to std::string\");var l=c&&h?P(e):e.length;var k=qb(4+l+1),n=k+4;K[k>>2]=l;if(c&&h)Q(e,E,n,l+1);else if(h)for(h=0;h<l;++h){var p=e.charCodeAt(h);255<\np&&(X(n),S(\"String has UTF-16 code units that do not fit in 8 bits\"));E[n+h]=p}else for(h=0;h<l;++h)E[n+h]=e[h];null!==d&&d.push(X,k);return k},argPackAdvance:8,readValueFromPointer:Ra,Wa:function(d){X(d)}})},x:function(a,b,c){c=R(c);if(2===b){var d=Ua;var e=Va;var h=Wa;var l=()=>H;var k=1}else 4===b&&(d=Xa,e=Ya,h=Za,l=()=>K,k=2);T(a,{name:c,fromWireType:function(n){for(var p=K[n>>2],v=l(),y,F=n+4,g=0;g<=p;++g){var r=n+4+g*b;if(g==p||0==v[r>>k])F=d(F,r-F),void 0===y?y=F:(y+=String.fromCharCode(0),\ny+=F),F=r+b}X(n);return y},toWireType:function(n,p){\"string\"!=typeof p&&S(`Cannot pass non-string to C++ string type ${c}`);var v=h(p),y=qb(4+v+b);K[y>>2]=v>>k;e(p,y+4,v+b);null!==n&&n.push(X,y);return y},argPackAdvance:8,readValueFromPointer:Ra,Wa:function(n){X(n)}})},fa:function(a,b){b=R(b);T(a,{hb:!0,name:b,argPackAdvance:0,fromWireType:function(){},toWireType:function(){}})},ca:()=>!0,o:function(a,b,c){a=V(a);b=$a(b,\"emval::as\");var d=[],e=W(d);K[c>>2]=e;return b.toWireType(d,a)},h:function(a,\nb,c,d,e){a=eb[a];b=V(b);c=cb(c);var h=[];K[d>>2]=W(h);return a(b,c,h,e)},r:function(a,b,c,d){a=eb[a];b=V(b);c=cb(c);a(b,c,null,d)},b:Qa,F:function(a,b){a=V(a);b=V(b);return a==b},u:function(a){if(0===a)return W(fb());a=cb(a);return W(fb()[a])},g:function(a,b){var c=hb(a,b),d=c[0];b=d.name+\"_$\"+c.slice(1).map(function(v){return v.name}).join(\"_\")+\"$\";var e=jb[b];if(void 0!==e)return e;e=[\"retType\"];for(var h=[d],l=\"\",k=0;k<a-1;++k)l+=(0!==k?\", \":\"\")+\"arg\"+k,e.push(\"argType\"+k),h.push(c[1+k]);var n=\n\"return function \"+ib(\"methodCaller_\"+b)+\"(handle, name, destructors, args) {\\n\",p=0;for(k=0;k<a-1;++k)n+=\"    var arg\"+k+\" = argType\"+k+\".readValueFromPointer(args\"+(p?\"+\"+p:\"\")+\");\\n\",p+=c[k+1].argPackAdvance;n+=\"    var rv = handle[name](\"+l+\");\\n\";for(k=0;k<a-1;++k)c[k+1].deleteObject&&(n+=\"    argType\"+k+\".deleteObject(arg\"+k+\");\\n\");d.hb||(n+=\"    return retType.toWireType(destructors, rv);\\n\");e.push(n+\"};\\n\");a=lb(e).apply(null,h);e=gb(a);return jb[b]=e},q:function(a,b){a=V(a);b=V(b);return W(a[b])},\nc:function(a){4<a&&(U.get(a).cb+=1)},G:function(a,b,c,d){a=V(a);var e=nb[b];e||(e=mb(b),nb[b]=e);return e(a,c,d)},s:function(){return W([])},k:function(a){a=V(a);for(var b=Array(a.length),c=0;c<a.length;c++)b[c]=a[c];return W(b)},d:function(a){return W(cb(a))},j:function(){return W({})},f:function(a){for(var b=V(a);b.length;){var c=b.pop();b.pop()(c)}Qa(a)},i:function(a,b,c){a=V(a);b=V(b);c=V(c);a[b]=c},e:function(a,b){a=$a(a,\"_emval_take_value\");a=a.readValueFromPointer(b);return W(a)},S:function(a,\nb){a=Y(a);b=Y(b);a=new Date(1E3*a);J[b>>2]=a.getUTCSeconds();J[b+4>>2]=a.getUTCMinutes();J[b+8>>2]=a.getUTCHours();J[b+12>>2]=a.getUTCDate();J[b+16>>2]=a.getUTCMonth();J[b+20>>2]=a.getUTCFullYear()-1900;J[b+24>>2]=a.getUTCDay();J[b+28>>2]=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864E5|0},T:function(a,b){a=Y(a);b=Y(b);a=new Date(1E3*a);J[b>>2]=a.getSeconds();J[b+4>>2]=a.getMinutes();J[b+8>>2]=a.getHours();J[b+12>>2]=a.getDate();J[b+16>>2]=a.getMonth();J[b+20>>2]=a.getFullYear()-1900;\nJ[b+24>>2]=a.getDay();J[b+28>>2]=(Z(a.getFullYear())?ob:pb)[a.getMonth()]+a.getDate()-1|0;J[b+36>>2]=-(60*a.getTimezoneOffset());var c=(new Date(a.getFullYear(),6,1)).getTimezoneOffset(),d=(new Date(a.getFullYear(),0,1)).getTimezoneOffset();J[b+32>>2]=(c!=d&&a.getTimezoneOffset()==Math.min(d,c))|0},U:function(a){a=Y(a);var b=new Date(J[a+20>>2]+1900,J[a+16>>2],J[a+12>>2],J[a+8>>2],J[a+4>>2],J[a>>2],0),c=J[a+32>>2],d=b.getTimezoneOffset(),e=(new Date(b.getFullYear(),6,1)).getTimezoneOffset(),h=(new Date(b.getFullYear(),\n0,1)).getTimezoneOffset(),l=Math.min(h,e);0>c?J[a+32>>2]=Number(e!=h&&l==d):0<c!=(l==d)&&(e=Math.max(h,e),b.setTime(b.getTime()+6E4*((0<c?l:e)-d)));J[a+24>>2]=b.getDay();J[a+28>>2]=(Z(b.getFullYear())?ob:pb)[b.getMonth()]+b.getDate()-1|0;J[a>>2]=b.getSeconds();J[a+4>>2]=b.getMinutes();J[a+8>>2]=b.getHours();J[a+12>>2]=b.getDate();J[a+16>>2]=b.getMonth();J[a+20>>2]=b.getYear();return BigInt(b.getTime()/1E3)},Q:function(){return-52},R:function(){},J:(a,b,c)=>{function d(n){return(n=n.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?\nn[1]:\"GMT\"}var e=(new Date).getFullYear(),h=new Date(e,0,1),l=new Date(e,6,1);e=h.getTimezoneOffset();var k=l.getTimezoneOffset();K[a>>2]=60*Math.max(e,k);J[b>>2]=Number(e!=k);a=d(h);b=d(l);a=rb(a);b=rb(b);k<e?(K[c>>2]=a,K[c+4>>2]=b):(K[c>>2]=b,K[c+4>>2]=a)},t:()=>{ja(\"\")},B:function(){return Date.now()},K:()=>2147483648,n:()=>performance.now(),Z:(a,b,c)=>E.copyWithin(a,b,b+c),I:a=>{var b=E.length;a>>>=0;if(2147483648<a)return!1;for(var c=1;4>=c;c*=2){var d=b*(1+.2/c);d=Math.min(d,a+100663296);var e=\nMath;d=Math.max(a,d);a:{e=e.min.call(e,2147483648,d+(65536-d%65536)%65536)-B.buffer.byteLength+65535>>>16;try{B.grow(e);pa();var h=1;break a}catch(l){}h=void 0}if(h)return!0}return!1},X:(a,b)=>{var c=0;ub().forEach(function(d,e){var h=b+c;e=K[a+4*e>>2]=h;for(h=0;h<d.length;++h)D[e++>>0]=d.charCodeAt(h);D[e>>0]=0;c+=d.length+1});return 0},Y:(a,b)=>{var c=ub();K[a>>2]=c.length;var d=0;c.forEach(function(e){d+=e.length+1});K[b>>2]=d;return 0},w:()=>52,z:()=>52,W:function(){return 70},y:(a,b,c,d)=>{for(var e=\n0,h=0;h<c;h++){var l=K[b>>2],k=K[b+4>>2];b+=8;for(var n=0;n<k;n++){var p=E[l+n],v=vb[a];0===p||10===p?((1===a?ia:z)(O(v,0)),v.length=0):v.push(p)}e+=k}K[d>>2]=e;return 0},ga:zb,m:(a,b,c,d)=>zb(a,b,c,d)};\n(function(){function a(c){C=c=c.exports;B=C.ha;pa();ra.unshift(C.ia);L--;f.monitorRunDependencies&&f.monitorRunDependencies(L);if(0==L&&(null!==ua&&(clearInterval(ua),ua=null),M)){var d=M;M=null;d()}return c}var b={a:Cb};L++;f.monitorRunDependencies&&f.monitorRunDependencies(L);if(f.instantiateWasm)try{return f.instantiateWasm(b,a)}catch(c){z(\"Module.instantiateWasm callback failed with error: \"+c),m(c)}Aa(b,function(c){a(c.instance)}).catch(m);return{}})();f._OrtInit=(a,b)=>(f._OrtInit=C.ja)(a,b);\nf._OrtGetLastError=(a,b)=>(f._OrtGetLastError=C.ka)(a,b);f._OrtCreateSessionOptions=(a,b,c,d,e,h,l,k,n,p)=>(f._OrtCreateSessionOptions=C.la)(a,b,c,d,e,h,l,k,n,p);f._OrtAppendExecutionProvider=(a,b)=>(f._OrtAppendExecutionProvider=C.ma)(a,b);f._OrtAddFreeDimensionOverride=(a,b,c)=>(f._OrtAddFreeDimensionOverride=C.na)(a,b,c);f._OrtAddSessionConfigEntry=(a,b,c)=>(f._OrtAddSessionConfigEntry=C.oa)(a,b,c);f._OrtReleaseSessionOptions=a=>(f._OrtReleaseSessionOptions=C.pa)(a);\nf._OrtCreateSession=(a,b,c)=>(f._OrtCreateSession=C.qa)(a,b,c);f._OrtReleaseSession=a=>(f._OrtReleaseSession=C.ra)(a);f._OrtGetInputOutputCount=(a,b,c)=>(f._OrtGetInputOutputCount=C.sa)(a,b,c);f._OrtGetInputName=(a,b)=>(f._OrtGetInputName=C.ta)(a,b);f._OrtGetOutputName=(a,b)=>(f._OrtGetOutputName=C.ua)(a,b);f._OrtFree=a=>(f._OrtFree=C.va)(a);f._OrtCreateTensor=(a,b,c,d,e,h)=>(f._OrtCreateTensor=C.wa)(a,b,c,d,e,h);f._OrtGetTensorData=(a,b,c,d,e)=>(f._OrtGetTensorData=C.xa)(a,b,c,d,e);\nf._OrtReleaseTensor=a=>(f._OrtReleaseTensor=C.ya)(a);f._OrtCreateRunOptions=(a,b,c,d)=>(f._OrtCreateRunOptions=C.za)(a,b,c,d);f._OrtAddRunConfigEntry=(a,b,c)=>(f._OrtAddRunConfigEntry=C.Aa)(a,b,c);f._OrtReleaseRunOptions=a=>(f._OrtReleaseRunOptions=C.Ba)(a);f._OrtCreateBinding=a=>(f._OrtCreateBinding=C.Ca)(a);f._OrtBindInput=(a,b,c)=>(f._OrtBindInput=C.Da)(a,b,c);f._OrtBindOutput=(a,b,c,d)=>(f._OrtBindOutput=C.Ea)(a,b,c,d);f._OrtClearBoundOutputs=a=>(f._OrtClearBoundOutputs=C.Fa)(a);\nf._OrtReleaseBinding=a=>(f._OrtReleaseBinding=C.Ga)(a);f._OrtRunWithBinding=(a,b,c,d,e)=>(f._OrtRunWithBinding=C.Ha)(a,b,c,d,e);f._OrtRun=(a,b,c,d,e,h,l,k)=>(f._OrtRun=C.Ia)(a,b,c,d,e,h,l,k);f._OrtEndProfiling=a=>(f._OrtEndProfiling=C.Ja)(a);var qb=f._malloc=a=>(qb=f._malloc=C.Ka)(a),X=f._free=a=>(X=f._free=C.La)(a),ab=a=>(ab=C.Ma)(a);f.__embind_initialize_bindings=()=>(f.__embind_initialize_bindings=C.Na)();var Db=()=>(Db=C.Pa)(),Eb=a=>(Eb=C.Qa)(a),Fb=a=>(Fb=C.Ra)(a);f.stackAlloc=Fb;\nf.stackSave=Db;f.stackRestore=Eb;f.UTF8ToString=(a,b)=>a?O(E,a,b):\"\";f.stringToUTF8=(a,b,c)=>Q(a,E,b,c);f.lengthBytesUTF8=P;var Gb;M=function Hb(){Gb||Ib();Gb||(M=Hb)};\nfunction Ib(){function a(){if(!Gb&&(Gb=!0,f.calledRun=!0,!ka)){Ba(ra);aa(f);if(f.onRuntimeInitialized)f.onRuntimeInitialized();if(f.postRun)for(\"function\"==typeof f.postRun&&(f.postRun=[f.postRun]);f.postRun.length;){var b=f.postRun.shift();sa.unshift(b)}Ba(sa)}}if(!(0<L)){if(f.preRun)for(\"function\"==typeof f.preRun&&(f.preRun=[f.preRun]);f.preRun.length;)ta();Ba(qa);0<L||(f.setStatus?(f.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){f.setStatus(\"\")},1);a()},1)):a())}}\nif(f.preInit)for(\"function\"==typeof f.preInit&&(f.preInit=[f.preInit]);0<f.preInit.length;)f.preInit.pop()();Ib();\n\n\n  return moduleArg.ready\n}\n\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = ortWasm;\nelse if (typeof define === 'function' && define['amd'])\n  define([], () => ortWasm);\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport * as path from 'node:path';\nimport {Env} from 'onnxruntime-common';\n\nimport {OrtWasmModule} from './binding/ort-wasm';\nimport {OrtWasmThreadedModule} from './binding/ort-wasm-threaded';\n\n/* eslint-disable @typescript-eslint/no-require-imports */\nconst ortWasmFactory: EmscriptenModuleFactory<OrtWasmModule> =\n    BUILD_DEFS.DISABLE_WEBGPU ? require('./binding/ort-wasm.js') : require('./binding/ort-wasm-simd.jsep.js');\n\nconst ortWasmFactoryThreaded: EmscriptenModuleFactory<OrtWasmModule> = !BUILD_DEFS.DISABLE_WASM_THREAD ?\n    (BUILD_DEFS.DISABLE_WEBGPU ? require('./binding/ort-wasm-threaded.js') :\n                                 require('./binding/ort-wasm-simd-threaded.jsep.js')) :\n    ortWasmFactory;\n/* eslint-enable @typescript-eslint/no-require-imports */\n\nlet wasm: OrtWasmModule|undefined;\nlet initialized = false;\nlet initializing = false;\nlet aborted = false;\n\nconst isMultiThreadSupported = (): boolean => {\n  try {\n    // If 'SharedArrayBuffer' is not available, WebAssembly threads will not work.\n    if (typeof SharedArrayBuffer === 'undefined') {\n      return false;\n    }\n\n    // Test for transferability of SABs (for browsers. needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    if (typeof MessageChannel !== 'undefined') {\n      new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    }\n\n    // Test for WebAssembly threads capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing threaded instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isSimdSupported = (): boolean => {\n  try {\n    // Test for WebAssembly SIMD capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing SIMD instructions.\n\n    // The binary data is generated from the following code by wat2wasm:\n    //\n    // (module\n    //   (type $t0 (func))\n    //   (func $f0 (type $t0)\n    //     (drop\n    //       (i32x4.dot_i16x8_s\n    //         (i8x16.splat\n    //           (i32.const 0))\n    //         (v128.const i32x4 0x00000000 0x00000000 0x00000000 0x00000000)))))\n\n    return WebAssembly.validate(new Uint8Array([\n      0,   97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 30, 1,   28,  0, 65, 0,\n      253, 15, 253, 12,  0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0,  0,  253, 186, 1, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst getWasmFileName = (useSimd: boolean, useThreads: boolean) => {\n  if (useThreads) {\n    return useSimd ? 'ort-wasm-simd-threaded.wasm' : 'ort-wasm-threaded.wasm';\n  } else {\n    return useSimd ? 'ort-wasm-simd.wasm' : 'ort-wasm.wasm';\n  }\n};\n\nexport const initializeWebAssembly = async(flags: Env.WebAssemblyFlags): Promise<void> => {\n  if (initialized) {\n    return Promise.resolve();\n  }\n  if (initializing) {\n    throw new Error('multiple calls to \\'initializeWebAssembly()\\' detected.');\n  }\n  if (aborted) {\n    throw new Error('previous call to \\'initializeWebAssembly()\\' failed.');\n  }\n\n  initializing = true;\n\n  // wasm flags are already initialized\n  const timeout = flags.initTimeout!;\n  const numThreads = flags.numThreads!;\n  const simd = flags.simd!;\n\n  const useThreads = numThreads > 1 && isMultiThreadSupported();\n  const useSimd = simd && isSimdSupported();\n\n  const wasmPaths = flags.wasmPaths;\n  const wasmPrefixOverride = typeof wasmPaths === 'string' ? wasmPaths : undefined;\n  const wasmFileName = getWasmFileName(useSimd, useThreads);\n  const wasmPathOverride = typeof wasmPaths === 'object' ? wasmPaths[wasmFileName] : undefined;\n\n  let isTimeout = false;\n\n  const tasks: Array<Promise<void>> = [];\n\n  // promise for timeout\n  if (timeout > 0) {\n    tasks.push(new Promise((resolve) => {\n      setTimeout(() => {\n        isTimeout = true;\n        resolve();\n      }, timeout);\n    }));\n  }\n\n  // promise for module initialization\n  tasks.push(new Promise((resolve, reject) => {\n    const factory = useThreads ? ortWasmFactoryThreaded : ortWasmFactory;\n    const config: Partial<OrtWasmModule> = {\n      locateFile: (fileName: string, scriptDirectory: string) => {\n        if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads && fileName.endsWith('.worker.js') &&\n            typeof Blob !== 'undefined') {\n          return URL.createObjectURL(new Blob(\n              [\n                // This require() function is handled by esbuild plugin to load file content as string.\n                // eslint-disable-next-line @typescript-eslint/no-require-imports\n                require('./binding/ort-wasm-threaded.worker.js')\n              ],\n              {type: 'text/javascript'}));\n        }\n\n        if (fileName.endsWith('.wasm')) {\n          if (wasmPathOverride) {\n            return wasmPathOverride;\n          }\n\n          const prefix = wasmPrefixOverride ?? scriptDirectory;\n\n          if (!BUILD_DEFS.DISABLE_WEBGPU) {\n            if (wasmFileName === 'ort-wasm-simd.wasm') {\n              return prefix + 'ort-wasm-simd.jsep.wasm';\n            } else if (wasmFileName === 'ort-wasm-simd-threaded.wasm') {\n              return prefix + 'ort-wasm-simd-threaded.jsep.wasm';\n            }\n          }\n\n          return prefix + wasmFileName;\n        }\n\n        return scriptDirectory + fileName;\n      }\n    };\n\n    if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads) {\n      if (typeof Blob === 'undefined') {\n        config.mainScriptUrlOrBlob = path.join(__dirname, 'ort-wasm-threaded.js');\n      } else {\n        const scriptSourceCode = `var ortWasmThreaded=${factory.toString()};`;\n        config.mainScriptUrlOrBlob = new Blob([scriptSourceCode], {type: 'text/javascript'});\n      }\n    }\n\n    factory(config).then(\n        // wasm module initialized successfully\n        module => {\n          initializing = false;\n          initialized = true;\n          wasm = module;\n          resolve();\n        },\n        // wasm module failed to initialize\n        (what) => {\n          initializing = false;\n          aborted = true;\n          reject(what);\n        });\n  }));\n\n  await Promise.race(tasks);\n\n  if (isTimeout) {\n    throw new Error(`WebAssembly backend initializing failed due to timeout: ${timeout}ms`);\n  }\n};\n\nexport const getInstance = (): OrtWasmModule => {\n  if (initialized && wasm) {\n    return wasm;\n  }\n\n  throw new Error('WebAssembly is not initialized yet.');\n};\n\nexport const dispose = (): void => {\n  if (initialized && !initializing && !aborted) {\n    initializing = true;\n\n    (wasm as OrtWasmThreadedModule).PThread?.terminateAllThreads();\n    wasm = undefined;\n\n    initializing = false;\n    initialized = false;\n    aborted = true;\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getInstance} from './wasm-factory';\n\nexport const allocWasmString = (data: string, allocs: number[]): number => {\n  const wasm = getInstance();\n\n  const dataLength = wasm.lengthBytesUTF8(data) + 1;\n  const dataOffset = wasm._malloc(dataLength);\n  wasm.stringToUTF8(data, dataOffset, dataLength);\n  allocs.push(dataOffset);\n\n  return dataOffset;\n};\n\ninterface ExtraOptionsHandler {\n  (name: string, value: string): void;\n}\n\nexport const iterateExtraOptions =\n    (options: Record<string, unknown>, prefix: string, seen: WeakSet<Record<string, unknown>>,\n     handler: ExtraOptionsHandler): void => {\n      if (typeof options == 'object' && options !== null) {\n        if (seen.has(options)) {\n          throw new Error('Circular reference in options');\n        } else {\n          seen.add(options);\n        }\n      }\n\n      Object.entries(options).forEach(([key, value]) => {\n        const name = (prefix) ? prefix + key : key;\n        if (typeof value === 'object') {\n          iterateExtraOptions(value as Record<string, unknown>, name + '.', seen, handler);\n        } else if (typeof value === 'string' || typeof value === 'number') {\n          handler(name, value.toString());\n        } else if (typeof value === 'boolean') {\n          handler(name, (value) ? '1' : '0');\n        } else {\n          throw new Error(`Can't handle extra config type: ${typeof value}`);\n        }\n      });\n    };\n\n/**\n * check web assembly API's last error and throw error if any error occurred.\n * @param message a message used when an error occurred.\n */\nexport const checkLastError = (message: string): void => {\n  const wasm = getInstance();\n\n  const stack = wasm.stackSave();\n  try {\n    const paramsOffset = wasm.stackAlloc(8);\n    wasm._OrtGetLastError(paramsOffset, paramsOffset + 4);\n    const errorCode = wasm.HEAP32[paramsOffset / 4];\n    const errorMessagePointer = wasm.HEAPU32[paramsOffset / 4 + 1];\n    const errorMessage = errorMessagePointer ? wasm.UTF8ToString(errorMessagePointer) : '';\n    throw new Error(`${message} ERROR_CODE: ${errorCode}, ERROR_MESSAGE: ${errorMessage}`);\n  } finally {\n    wasm.stackRestore(stack);\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {getInstance} from './wasm-factory';\nimport {allocWasmString, checkLastError, iterateExtraOptions} from './wasm-utils';\n\nexport const setRunOptions = (options: InferenceSession.RunOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let runOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const runOptions: InferenceSession.RunOptions = options || {};\n\n  try {\n    if (options?.logSeverityLevel === undefined) {\n      runOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      runOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.terminate === undefined) {\n      runOptions.terminate = false;\n    }\n\n    let tagDataOffset = 0;\n    if (options?.tag !== undefined) {\n      tagDataOffset = allocWasmString(options.tag, allocs);\n    }\n\n    runOptionsHandle = wasm._OrtCreateRunOptions(\n        runOptions.logSeverityLevel!, runOptions.logVerbosityLevel!, !!runOptions.terminate!, tagDataOffset);\n    if (runOptionsHandle === 0) {\n      checkLastError('Can\\'t create run options.');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddRunConfigEntry(runOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          checkLastError(`Can't set a run config entry: ${key} - ${value}.`);\n        }\n      });\n    }\n\n    return [runOptionsHandle, allocs];\n  } catch (e) {\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    allocs.forEach(alloc => wasm._free(alloc));\n    throw e;\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {getInstance} from './wasm-factory';\nimport {allocWasmString, checkLastError, iterateExtraOptions} from './wasm-utils';\n\nconst getGraphOptimzationLevel = (graphOptimizationLevel: string|unknown): number => {\n  switch (graphOptimizationLevel) {\n    case 'disabled':\n      return 0;\n    case 'basic':\n      return 1;\n    case 'extended':\n      return 2;\n    case 'all':\n      return 99;\n    default:\n      throw new Error(`unsupported graph optimization level: ${graphOptimizationLevel}`);\n  }\n};\n\nconst getExecutionMode = (executionMode: 'sequential'|'parallel'): number => {\n  switch (executionMode) {\n    case 'sequential':\n      return 0;\n    case 'parallel':\n      return 1;\n    default:\n      throw new Error(`unsupported execution mode: ${executionMode}`);\n  }\n};\n\nconst appendDefaultOptions = (options: InferenceSession.SessionOptions): void => {\n  if (!options.extra) {\n    options.extra = {};\n  }\n  if (!options.extra.session) {\n    options.extra.session = {};\n  }\n  const session = options.extra.session as Record<string, string>;\n  if (!session.use_ort_model_bytes_directly) {\n    // eslint-disable-next-line camelcase\n    session.use_ort_model_bytes_directly = '1';\n  }\n\n  // if using JSEP with WebGPU, always disable memory pattern\n  if (options.executionProviders &&\n      options.executionProviders.some(ep => (typeof ep === 'string' ? ep : ep.name) === 'webgpu')) {\n    options.enableMemPattern = false;\n  }\n};\n\nconst setExecutionProviders =\n    (sessionOptionsHandle: number, executionProviders: readonly InferenceSession.ExecutionProviderConfig[],\n     allocs: number[]): void => {\n      for (const ep of executionProviders) {\n        let epName = typeof ep === 'string' ? ep : ep.name;\n\n        // check EP name\n        switch (epName) {\n          case 'xnnpack':\n            epName = 'XNNPACK';\n            break;\n          case 'webnn':\n            epName = 'WEBNN';\n            if (typeof ep !== 'string') {\n              const webnnOptions = ep as InferenceSession.WebNNExecutionProviderOption;\n              if (webnnOptions?.deviceType) {\n                const keyDataOffset = allocWasmString('deviceType', allocs);\n                const valueDataOffset = allocWasmString(webnnOptions.deviceType, allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  checkLastError(`Can't set a session config entry: 'deviceType' - ${webnnOptions.deviceType}.`);\n                }\n              }\n              if (webnnOptions?.powerPreference) {\n                const keyDataOffset = allocWasmString('powerPreference', allocs);\n                const valueDataOffset = allocWasmString(webnnOptions.powerPreference, allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  checkLastError(\n                      `Can't set a session config entry: 'powerPreference' - ${webnnOptions.powerPreference}.`);\n                }\n              }\n            }\n            break;\n          case 'webgpu':\n            epName = 'JS';\n            if (typeof ep !== 'string') {\n              const webgpuOptions = ep as InferenceSession.WebGpuExecutionProviderOption;\n              if (webgpuOptions?.preferredLayout) {\n                if (webgpuOptions.preferredLayout !== 'NCHW' && webgpuOptions.preferredLayout !== 'NHWC') {\n                  throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${webgpuOptions.preferredLayout}`);\n                }\n                const keyDataOffset = allocWasmString('preferredLayout', allocs);\n                const valueDataOffset = allocWasmString(webgpuOptions.preferredLayout, allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  checkLastError(\n                      `Can't set a session config entry: 'preferredLayout' - ${webgpuOptions.preferredLayout}.`);\n                }\n              }\n            }\n            break;\n          case 'wasm':\n          case 'cpu':\n            continue;\n          default:\n            throw new Error(`not supported execution provider: ${epName}`);\n        }\n\n        const epNameDataOffset = allocWasmString(epName, allocs);\n        if (getInstance()._OrtAppendExecutionProvider(sessionOptionsHandle, epNameDataOffset) !== 0) {\n          checkLastError(`Can't append execution provider: ${epName}.`);\n        }\n      }\n    };\n\nexport const setSessionOptions = (options?: InferenceSession.SessionOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let sessionOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const sessionOptions: InferenceSession.SessionOptions = options || {};\n  appendDefaultOptions(sessionOptions);\n\n  try {\n    const graphOptimizationLevel = getGraphOptimzationLevel(sessionOptions.graphOptimizationLevel ?? 'all');\n    const executionMode = getExecutionMode(sessionOptions.executionMode ?? 'sequential');\n    const logIdDataOffset =\n        typeof sessionOptions.logId === 'string' ? allocWasmString(sessionOptions.logId, allocs) : 0;\n\n    const logSeverityLevel = sessionOptions.logSeverityLevel ?? 2;  // Default to 2 - warning\n    if (!Number.isInteger(logSeverityLevel) || logSeverityLevel < 0 || logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${logSeverityLevel}`);\n    }\n\n    const logVerbosityLevel = sessionOptions.logVerbosityLevel ?? 0;  // Default to 0 - verbose\n    if (!Number.isInteger(logVerbosityLevel) || logVerbosityLevel < 0 || logVerbosityLevel > 4) {\n      throw new Error(`log verbosity level is not valid: ${logVerbosityLevel}`);\n    }\n\n    const optimizedModelFilePathOffset = typeof sessionOptions.optimizedModelFilePath === 'string' ?\n        allocWasmString(sessionOptions.optimizedModelFilePath, allocs) :\n        0;\n\n    sessionOptionsHandle = wasm._OrtCreateSessionOptions(\n        graphOptimizationLevel, !!sessionOptions.enableCpuMemArena, !!sessionOptions.enableMemPattern, executionMode,\n        !!sessionOptions.enableProfiling, 0, logIdDataOffset, logSeverityLevel, logVerbosityLevel,\n        optimizedModelFilePathOffset);\n    if (sessionOptionsHandle === 0) {\n      checkLastError('Can\\'t create session options.');\n    }\n\n    if (sessionOptions.executionProviders) {\n      setExecutionProviders(sessionOptionsHandle, sessionOptions.executionProviders, allocs);\n    }\n\n    if (sessionOptions.freeDimensionOverrides) {\n      for (const [name, value] of Object.entries(sessionOptions.freeDimensionOverrides)) {\n        if (typeof name !== 'string') {\n          throw new Error(`free dimension override name must be a string: ${name}`);\n        }\n        if (typeof value !== 'number' || !Number.isInteger(value) || value < 0) {\n          throw new Error(`free dimension override value must be a non-negative integer: ${value}`);\n        }\n        const nameOffset = allocWasmString(name, allocs);\n        if (wasm._OrtAddFreeDimensionOverride(sessionOptionsHandle, nameOffset, value) !== 0) {\n          checkLastError(`Can't set a free dimension override: ${name} - ${value}.`);\n        }\n      }\n    }\n\n    if (sessionOptions.extra !== undefined) {\n      iterateExtraOptions(sessionOptions.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          checkLastError(`Can't set a session config entry: ${key} - ${value}.`);\n        }\n      });\n    }\n\n    return [sessionOptionsHandle, allocs];\n  } catch (e) {\n    if (sessionOptionsHandle !== 0) {\n      wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n    }\n    allocs.forEach(alloc => wasm._free(alloc));\n    throw e;\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from 'onnxruntime-common';\n\n// This file includes common definitions. They do NOT have dependency on the WebAssembly instance.\n\n/**\n * Copied from ONNX definition. Use this to drop dependency 'onnx_proto' to decrease compiled .js file size.\n */\nexport const enum DataType {\n  undefined = 0,\n  float = 1,\n  uint8 = 2,\n  int8 = 3,\n  uint16 = 4,\n  int16 = 5,\n  int32 = 6,\n  int64 = 7,\n  string = 8,\n  bool = 9,\n  float16 = 10,\n  double = 11,\n  uint32 = 12,\n  uint64 = 13,\n  complex64 = 14,\n  complex128 = 15,\n  bfloat16 = 16\n}\n\n/**\n * Map string tensor data to enum value\n */\nexport const tensorDataTypeStringToEnum = (type: string): DataType => {\n  switch (type) {\n    case 'int8':\n      return DataType.int8;\n    case 'uint8':\n      return DataType.uint8;\n    case 'bool':\n      return DataType.bool;\n    case 'int16':\n      return DataType.int16;\n    case 'uint16':\n      return DataType.uint16;\n    case 'int32':\n      return DataType.int32;\n    case 'uint32':\n      return DataType.uint32;\n    case 'float16':\n      return DataType.float16;\n    case 'float32':\n      return DataType.float;\n    case 'float64':\n      return DataType.double;\n    case 'string':\n      return DataType.string;\n    case 'int64':\n      return DataType.int64;\n    case 'uint64':\n      return DataType.uint64;\n\n    default:\n      throw new Error(`unsupported data type: ${type}`);\n  }\n};\n\n/**\n * Map enum value to string tensor data\n */\nexport const tensorDataTypeEnumToString = (typeProto: DataType): Tensor.Type => {\n  switch (typeProto) {\n    case DataType.int8:\n      return 'int8';\n    case DataType.uint8:\n      return 'uint8';\n    case DataType.bool:\n      return 'bool';\n    case DataType.int16:\n      return 'int16';\n    case DataType.uint16:\n      return 'uint16';\n    case DataType.int32:\n      return 'int32';\n    case DataType.uint32:\n      return 'uint32';\n    case DataType.float16:\n      return 'float16';\n    case DataType.float:\n      return 'float32';\n    case DataType.double:\n      return 'float64';\n    case DataType.string:\n      return 'string';\n    case DataType.int64:\n      return 'int64';\n    case DataType.uint64:\n      return 'uint64';\n\n    default:\n      throw new Error(`unsupported data type: ${typeProto}`);\n  }\n};\n\n/**\n * get tensor element size in bytes by the given data type\n * @returns size in integer or undefined if the data type is not supported\n */\nexport const getTensorElementSize = (dateType: number): number|\n    undefined => [undefined, 4, 1, 1, 2, 2, 4, 8, undefined, 1, 2, 8, 4, 8, undefined, undefined, undefined][dateType];\n\n/**\n * get typed array constructor by the given tensor type\n */\nexport const tensorTypeToTypedArrayConstructor = (type: Tensor.Type): Float32ArrayConstructor|Uint8ArrayConstructor|\n    Int8ArrayConstructor|Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|\n    Uint8ArrayConstructor|Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor => {\n      switch (type) {\n        case 'float16':\n          return Uint16Array;\n        case 'float32':\n          return Float32Array;\n        case 'uint8':\n          return Uint8Array;\n        case 'int8':\n          return Int8Array;\n        case 'uint16':\n          return Uint16Array;\n        case 'int16':\n          return Int16Array;\n        case 'int32':\n          return Int32Array;\n        case 'bool':\n          return Uint8Array;\n        case 'float64':\n          return Float64Array;\n        case 'uint32':\n          return Uint32Array;\n        case 'int64':\n          return BigInt64Array;\n        case 'uint64':\n          return BigUint64Array;\n        default:\n          throw new Error(`unsupported type: ${type}`);\n      }\n    };\n\n/**\n * Map string log level to integer value\n */\nexport const logLevelStringToEnum = (logLevel?: 'verbose'|'info'|'warning'|'error'|'fatal'): number => {\n  switch (logLevel) {\n    case 'verbose':\n      return 0;\n    case 'info':\n      return 1;\n    case 'warning':\n      return 2;\n    case 'error':\n      return 3;\n    case 'fatal':\n      return 4;\n    default:\n      throw new Error(`unsupported logging level: ${logLevel}`);\n  }\n};\n\n/**\n * Check whether the given tensor type is supported by GPU buffer\n */\nexport const isGpuBufferSupportedType = (type: Tensor.Type): type is Tensor.GpuBufferDataTypes => type === 'float32' ||\n    type === 'int32' || type === 'int64' || type === 'bool' || type === 'float16' || type === 'uint32';\n\n/**\n * Map string data location to integer value\n */\nexport const dataLocationStringToEnum = (location: Tensor.DataLocation): number => {\n  switch (location) {\n    case 'none':\n      return 0;\n    case 'cpu':\n      return 1;\n    case 'cpu-pinned':\n      return 2;\n    case 'texture':\n      return 3;\n    case 'gpu-buffer':\n      return 4;\n    default:\n      throw new Error(`unsupported data location: ${location}`);\n  }\n};\n\n/**\n * Map integer data location to string value\n */\nexport const dataLocationEnumToString = (location: number): Tensor.DataLocation|undefined =>\n    (['none', 'cpu', 'cpu-pinned', 'texture', 'gpu-buffer'] as const)[location];\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env, InferenceSession, Tensor} from 'onnxruntime-common';\n\nimport {SerializableModeldata, SerializableSessionMetadata, SerializableTensorMetadata, TensorMetadata} from './proxy-messages';\nimport {setRunOptions} from './run-options';\nimport {setSessionOptions} from './session-options';\nimport {dataLocationStringToEnum, getTensorElementSize, isGpuBufferSupportedType, logLevelStringToEnum, tensorDataTypeEnumToString, tensorDataTypeStringToEnum, tensorTypeToTypedArrayConstructor} from './wasm-common';\nimport {getInstance} from './wasm-factory';\nimport {allocWasmString, checkLastError} from './wasm-utils';\n\n/**\n * get the input/output count of the session.\n * @param sessionHandle the handle representing the session. should be non-zero.\n * @returns a tuple including 2 numbers, representing the input count and output count.\n */\nconst getSessionInputOutputCount = (sessionHandle: number): [number, number] => {\n  const wasm = getInstance();\n  const stack = wasm.stackSave();\n  try {\n    const dataOffset = wasm.stackAlloc(8);\n    const errorCode = wasm._OrtGetInputOutputCount(sessionHandle, dataOffset, dataOffset + 4);\n    if (errorCode !== 0) {\n      checkLastError('Can\\'t get session input/output count.');\n    }\n    return [wasm.HEAP32[dataOffset / 4], wasm.HEAP32[dataOffset / 4 + 1]];\n  } finally {\n    wasm.stackRestore(stack);\n  }\n};\n\n/**\n * initialize ORT environment.\n * @param numThreads SetGlobalIntraOpNumThreads(numThreads)\n * @param loggingLevel CreateEnv(static_cast<OrtLoggingLevel>(logging_level))\n */\nconst initOrt = (numThreads: number, loggingLevel: number): void => {\n  const errorCode = getInstance()._OrtInit(numThreads, loggingLevel);\n  if (errorCode !== 0) {\n    checkLastError('Can\\'t initialize onnxruntime.');\n  }\n};\n\n/**\n * intialize runtime environment.\n * @param env passed in the environment config object.\n */\nexport const initRuntime = async(env: Env): Promise<void> => {\n  // init ORT\n  initOrt(env.wasm.numThreads!, logLevelStringToEnum(env.logLevel));\n\n  if (!BUILD_DEFS.DISABLE_WEBGPU) {\n    // init JSEP if available\n\n    // eslint-disable-next-line @typescript-eslint/no-require-imports, @typescript-eslint/no-var-requires\n    const initJsep = require('./jsep/init').init;\n    await initJsep(getInstance(), env);\n  }\n};\n\n/**\n * valid data locations for input/output tensors.\n */\ntype SupportedTensorDataLocationForInputOutput = 'cpu'|'cpu-pinned'|'gpu-buffer';\n\ntype IOBindingState = {\n  /**\n   * the handle of IO binding.\n   */\n  readonly handle: number;\n\n  /**\n   * the preferred location for each output tensor.\n   *\n   * value is one of 'cpu', 'cpu-pinned', 'gpu-buffer'.\n   */\n  readonly outputPreferredLocations: readonly SupportedTensorDataLocationForInputOutput[];\n\n  /**\n   * enum value of the preferred location for each output tensor.\n   */\n  readonly outputPreferredLocationsEncoded: readonly number[];\n};\n\n/**\n *  tuple elements are: InferenceSession ID; inputNamesUTF8Encoded; outputNamesUTF8Encoded; bindingState\n */\ntype SessionMetadata = [\n  inferenceSessionId: number, inputNamesUTF8Encoded: number[], outputNamesUTF8Encoded: number[],\n  bindingState: IOBindingState|null\n];\n\nconst activeSessions = new Map<number, SessionMetadata>();\n\n/**\n * allocate the memory and memcpy the model bytes, preparing for creating an instance of InferenceSession.\n * @returns a 2-elements tuple - the pointer and size of the allocated buffer\n */\nexport const createSessionAllocate = (model: Uint8Array): [number, number] => {\n  const wasm = getInstance();\n  const modelDataOffset = wasm._malloc(model.byteLength);\n  if (modelDataOffset === 0) {\n    throw new Error(`Can't create a session. failed to allocate a buffer of size ${model.byteLength}.`);\n  }\n  wasm.HEAPU8.set(model, modelDataOffset);\n  return [modelDataOffset, model.byteLength];\n};\n\n/**\n * create an inference session using the prepared buffer containing the model data.\n * @param modelData a 2-elements tuple containing the pointer and size of the model data buffer.\n * @param options an optional session options object.\n * @returns a 3-elements tuple containing [session handle, input names, output names]\n */\nexport const createSessionFinalize =\n    (modelData: SerializableModeldata, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const wasm = getInstance();\n\n      let sessionHandle = 0;\n      let sessionOptionsHandle = 0;\n      let ioBindingHandle = 0;\n      let allocs: number[] = [];\n      const inputNamesUTF8Encoded = [];\n      const outputNamesUTF8Encoded = [];\n\n      try {\n        [sessionOptionsHandle, allocs] = setSessionOptions(options);\n\n        sessionHandle = wasm._OrtCreateSession(modelData[0], modelData[1], sessionOptionsHandle);\n        if (sessionHandle === 0) {\n          checkLastError('Can\\'t create a session.');\n        }\n\n        const [inputCount, outputCount] = getSessionInputOutputCount(sessionHandle);\n\n        const inputNames = [];\n        const outputNames = [];\n        const outputPreferredLocations: SupportedTensorDataLocationForInputOutput[] = [];\n        for (let i = 0; i < inputCount; i++) {\n          const name = wasm._OrtGetInputName(sessionHandle, i);\n          if (name === 0) {\n            checkLastError('Can\\'t get an input name.');\n          }\n          inputNamesUTF8Encoded.push(name);\n          inputNames.push(wasm.UTF8ToString(name));\n        }\n        for (let i = 0; i < outputCount; i++) {\n          const name = wasm._OrtGetOutputName(sessionHandle, i);\n          if (name === 0) {\n            checkLastError('Can\\'t get an output name.');\n          }\n          outputNamesUTF8Encoded.push(name);\n          const nameString = wasm.UTF8ToString(name);\n          outputNames.push(nameString);\n\n          if (!BUILD_DEFS.DISABLE_WEBGPU) {\n            const location = typeof options?.preferredOutputLocation === 'string' ?\n                options.preferredOutputLocation :\n                options?.preferredOutputLocation?.[nameString] ?? 'cpu';\n            if (location !== 'cpu' && location !== 'cpu-pinned' && location !== 'gpu-buffer') {\n              throw new Error(`Not supported preferred output location: ${location}.`);\n            }\n            outputPreferredLocations.push(location);\n          }\n        }\n\n        // use IO binding only when at least one output is preffered to be on GPU.\n        let bindingState: IOBindingState|null = null;\n        if (!BUILD_DEFS.DISABLE_WEBGPU && outputPreferredLocations.some(l => l === 'gpu-buffer')) {\n          ioBindingHandle = wasm._OrtCreateBinding(sessionHandle);\n          if (ioBindingHandle === 0) {\n            checkLastError('Can\\'t create IO binding.');\n          }\n\n          bindingState = {\n            handle: ioBindingHandle,\n            outputPreferredLocations,\n            outputPreferredLocationsEncoded: outputPreferredLocations.map(l => dataLocationStringToEnum(l)),\n          };\n        }\n\n        activeSessions.set(sessionHandle, [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded, bindingState]);\n        return [sessionHandle, inputNames, outputNames];\n      } catch (e) {\n        inputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n        outputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n\n        if (ioBindingHandle !== 0) {\n          wasm._OrtReleaseBinding(ioBindingHandle);\n        }\n\n        if (sessionHandle !== 0) {\n          wasm._OrtReleaseSession(sessionHandle);\n        }\n        throw e;\n      } finally {\n        wasm._free(modelData[0]);\n        if (sessionOptionsHandle !== 0) {\n          wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n        }\n        allocs.forEach(alloc => wasm._free(alloc));\n      }\n    };\n\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSession =\n    (model: Uint8Array, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const modelData: SerializableModeldata = createSessionAllocate(model);\n      return createSessionFinalize(modelData, options);\n    };\n\nexport const releaseSession = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error(`cannot release session. invalid session id: ${sessionId}`);\n  }\n  const [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded, ioBindingState] = session;\n\n  if (ioBindingState) {\n    wasm._OrtReleaseBinding(ioBindingState.handle);\n  }\n\n  wasm.jsepUnregisterBuffers?.(sessionId);\n\n  inputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n  outputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n  wasm._OrtReleaseSession(sessionHandle);\n  activeSessions.delete(sessionId);\n};\n\nconst prepareInputOutputTensor =\n    (tensor: TensorMetadata|null, tensorHandles: number[], allocs: number[], sessionId: number, index: number):\n        void => {\n          if (!tensor) {\n            tensorHandles.push(0);\n            return;\n          }\n\n          const wasm = getInstance();\n\n          const dataType = tensor[0];\n          const dims = tensor[1];\n          const location = tensor[3];\n\n          let rawData: number;\n          let dataByteLength: number;\n\n          if (dataType === 'string' && location === 'gpu-buffer') {\n            throw new Error('String tensor is not supported on GPU.');\n          }\n\n          if (location === 'gpu-buffer') {\n            const gpuBuffer = tensor[2].gpuBuffer as GPUBuffer;\n            const elementSizeInBytes = getTensorElementSize(tensorDataTypeStringToEnum(dataType))!;\n            dataByteLength = dims.reduce((a, b) => a * b, 1) * elementSizeInBytes;\n            rawData = wasm.jsepRegisterBuffer(sessionId, index, gpuBuffer, dataByteLength);\n          } else {\n            const data = tensor[2];\n\n            if (Array.isArray(data)) {\n              // string tensor\n              dataByteLength = 4 * data.length;\n              rawData = wasm._malloc(dataByteLength);\n              allocs.push(rawData);\n              let dataIndex = rawData / 4;\n              for (let i = 0; i < data.length; i++) {\n                if (typeof data[i] !== 'string') {\n                  throw new TypeError(`tensor data at index ${i} is not a string`);\n                }\n                wasm.HEAPU32[dataIndex++] = allocWasmString(data[i], allocs);\n              }\n            } else {\n              dataByteLength = data.byteLength;\n              rawData = wasm._malloc(dataByteLength);\n              allocs.push(rawData);\n              wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), rawData);\n            }\n          }\n\n          const stack = wasm.stackSave();\n          const dimsOffset = wasm.stackAlloc(4 * dims.length);\n          try {\n            let dimIndex = dimsOffset / 4;\n            dims.forEach(d => wasm.HEAP32[dimIndex++] = d);\n            const tensor = wasm._OrtCreateTensor(\n                tensorDataTypeStringToEnum(dataType), rawData, dataByteLength, dimsOffset, dims.length,\n                dataLocationStringToEnum(location));\n            if (tensor === 0) {\n              checkLastError(`Can't create tensor for input/output. session=${sessionId}, index=${index}.`);\n            }\n            tensorHandles.push(tensor);\n          } finally {\n            wasm.stackRestore(stack);\n          }\n        };\n\n/**\n * perform inference run\n */\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputTensors: TensorMetadata[], outputIndices: number[],\n    outputTensors: Array<TensorMetadata|null>, options: InferenceSession.RunOptions): Promise<TensorMetadata[]> => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error(`cannot run inference. invalid session id: ${sessionId}`);\n  }\n  const [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded, ioBindingState] = session;\n\n  const inputCount = inputIndices.length;\n  const outputCount = outputIndices.length;\n\n  let runOptionsHandle = 0;\n  let runOptionsAllocs: number[] = [];\n\n  const inputTensorHandles: number[] = [];\n  const outputTensorHandles: number[] = [];\n  const inputOutputAllocs: number[] = [];\n\n  const beforeRunStack = wasm.stackSave();\n  const inputValuesOffset = wasm.stackAlloc(inputCount * 4);\n  const inputNamesOffset = wasm.stackAlloc(inputCount * 4);\n  const outputValuesOffset = wasm.stackAlloc(outputCount * 4);\n  const outputNamesOffset = wasm.stackAlloc(outputCount * 4);\n\n  try {\n    [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n    // create input tensors\n    for (let i = 0; i < inputCount; i++) {\n      prepareInputOutputTensor(inputTensors[i], inputTensorHandles, inputOutputAllocs, sessionId, inputIndices[i]);\n    }\n\n    // create output tensors\n    for (let i = 0; i < outputCount; i++) {\n      prepareInputOutputTensor(\n          outputTensors[i], outputTensorHandles, inputOutputAllocs, sessionId, inputCount + outputIndices[i]);\n    }\n\n    let inputValuesIndex = inputValuesOffset / 4;\n    let inputNamesIndex = inputNamesOffset / 4;\n    let outputValuesIndex = outputValuesOffset / 4;\n    let outputNamesIndex = outputNamesOffset / 4;\n    for (let i = 0; i < inputCount; i++) {\n      wasm.HEAPU32[inputValuesIndex++] = inputTensorHandles[i];\n      wasm.HEAPU32[inputNamesIndex++] = inputNamesUTF8Encoded[inputIndices[i]];\n    }\n    for (let i = 0; i < outputCount; i++) {\n      wasm.HEAPU32[outputValuesIndex++] = outputTensorHandles[i];\n      wasm.HEAPU32[outputNamesIndex++] = outputNamesUTF8Encoded[outputIndices[i]];\n    }\n\n    if (!BUILD_DEFS.DISABLE_WEBGPU && ioBindingState) {\n      const {handle, outputPreferredLocations, outputPreferredLocationsEncoded} = ioBindingState;\n\n      if (inputNamesUTF8Encoded.length !== inputCount) {\n        throw new Error(`input count from feeds (${\n            inputCount}) is expected to be always equal to model's input count (${inputNamesUTF8Encoded.length}).`);\n      }\n\n      // process inputs\n      for (let i = 0; i < inputCount; i++) {\n        const index = inputIndices[i];\n        const errorCode = await wasm._OrtBindInput(handle, inputNamesUTF8Encoded[index], inputTensorHandles[i]);\n        if (errorCode !== 0) {\n          checkLastError(`Can't bind input[${i}] for session=${sessionId}.`);\n        }\n      }\n\n      // process pre-allocated outputs\n      for (let i = 0; i < outputCount; i++) {\n        const index = outputIndices[i];\n        const location = outputTensors[i]?.[3];  // undefined means output is not pre-allocated.\n\n        if (location) {\n          // output is pre-allocated. bind the tensor.\n          const errorCode = wasm._OrtBindOutput(handle, outputNamesUTF8Encoded[index], outputTensorHandles[i], 0);\n          if (errorCode !== 0) {\n            checkLastError(`Can't bind pre-allocated output[${i}] for session=${sessionId}.`);\n          }\n        } else {\n          // output is not pre-allocated. reset preferred location.\n          const errorCode =\n              wasm._OrtBindOutput(handle, outputNamesUTF8Encoded[index], 0, outputPreferredLocationsEncoded[index]);\n          if (errorCode !== 0) {\n            checkLastError(`Can't bind output[${i}] to ${outputPreferredLocations[i]} for session=${sessionId}.`);\n          }\n        }\n      }\n    }\n\n    let errorCode: number;\n\n    if (!BUILD_DEFS.DISABLE_WEBGPU && ioBindingState) {\n      errorCode = await wasm._OrtRunWithBinding(\n          sessionHandle, ioBindingState.handle, outputCount, outputValuesOffset, runOptionsHandle);\n    } else {\n      errorCode = await wasm._OrtRun(\n          sessionHandle, inputNamesOffset, inputValuesOffset, inputCount, outputNamesOffset, outputCount,\n          outputValuesOffset, runOptionsHandle);\n    }\n\n    if (errorCode !== 0) {\n      checkLastError('failed to call OrtRun().');\n    }\n\n    const output: TensorMetadata[] = [];\n\n    for (let i = 0; i < outputCount; i++) {\n      const tensor = wasm.HEAPU32[outputValuesOffset / 4 + i];\n      if (tensor === outputTensorHandles[i]) {\n        // output tensor is pre-allocated. no need to copy data.\n        output.push(outputTensors[i]!);\n        continue;\n      }\n\n      const beforeGetTensorDataStack = wasm.stackSave();\n      // stack allocate 4 pointer value\n      const tensorDataOffset = wasm.stackAlloc(4 * 4);\n\n      let keepOutputTensor = false;\n      let type: Tensor.Type|undefined, dataOffset = 0;\n      try {\n        const errorCode = wasm._OrtGetTensorData(\n            tensor, tensorDataOffset, tensorDataOffset + 4, tensorDataOffset + 8, tensorDataOffset + 12);\n        if (errorCode !== 0) {\n          checkLastError(`Can't access output tensor data on index ${i}.`);\n        }\n        let tensorDataIndex = tensorDataOffset / 4;\n        const dataType = wasm.HEAPU32[tensorDataIndex++];\n        dataOffset = wasm.HEAPU32[tensorDataIndex++];\n        const dimsOffset = wasm.HEAPU32[tensorDataIndex++];\n        const dimsLength = wasm.HEAPU32[tensorDataIndex++];\n        const dims = [];\n        for (let i = 0; i < dimsLength; i++) {\n          dims.push(wasm.HEAPU32[dimsOffset / 4 + i]);\n        }\n        wasm._OrtFree(dimsOffset);\n\n        const size = dims.reduce((a, b) => a * b, 1);\n        type = tensorDataTypeEnumToString(dataType);\n\n        const preferredLocation = ioBindingState?.outputPreferredLocations[outputIndices[i]];\n\n        if (type === 'string') {\n          if (preferredLocation === 'gpu-buffer') {\n            throw new Error('String tensor is not supported on GPU.');\n          }\n          const stringData: string[] = [];\n          let dataIndex = dataOffset / 4;\n          for (let i = 0; i < size; i++) {\n            const offset = wasm.HEAPU32[dataIndex++];\n            const maxBytesToRead = i === size - 1 ? undefined : wasm.HEAPU32[dataIndex] - offset;\n            stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\n          }\n          output.push([type, dims, stringData, 'cpu']);\n        } else {\n          // If a certain output's preferred location is GPU but the tensor is empty, we still need to create a CPU\n          // tensor for it. There is no mapping GPU buffer for an empty tensor.\n          if (preferredLocation === 'gpu-buffer' && size > 0) {\n            const gpuBuffer = wasm.jsepGetBuffer(dataOffset);\n            const elementSize = getTensorElementSize(dataType);\n            if (elementSize === undefined || !isGpuBufferSupportedType(type)) {\n              throw new Error(`Unsupported data type: ${type}`);\n            }\n\n            // do not release the tensor right now. it will be released when user calls tensor.dispose().\n            keepOutputTensor = true;\n\n            output.push([\n              type, dims, {\n                gpuBuffer,\n                download: wasm.jsepCreateDownloader(gpuBuffer, size * elementSize, type),\n                dispose: () => {\n                  wasm._OrtReleaseTensor(tensor);\n                }\n              },\n              'gpu-buffer'\n            ]);\n          } else {\n            const typedArrayConstructor = tensorTypeToTypedArrayConstructor(type);\n            const data = new typedArrayConstructor(size);\n            new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\n                .set(wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength));\n            output.push([type, dims, data, 'cpu']);\n          }\n        }\n      } finally {\n        wasm.stackRestore(beforeGetTensorDataStack);\n        if (type === 'string' && dataOffset) {\n          wasm._free(dataOffset);\n        }\n        if (!keepOutputTensor) {\n          wasm._OrtReleaseTensor(tensor);\n        }\n      }\n    }\n\n    if (ioBindingState) {\n      wasm._OrtClearBoundOutputs(ioBindingState.handle);\n    }\n\n    return output;\n  } finally {\n    wasm.stackRestore(beforeRunStack);\n\n    inputTensorHandles.forEach(v => wasm._OrtReleaseTensor(v));\n    outputTensorHandles.forEach(v => wasm._OrtReleaseTensor(v));\n    inputOutputAllocs.forEach(p => wasm._free(p));\n\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    runOptionsAllocs.forEach(p => wasm._free(p));\n  }\n};\n\n/**\n * end profiling\n */\nexport const endProfiling = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n\n  // profile file name is not used yet, but it must be freed.\n  const profileFileName = wasm._OrtEndProfiling(sessionHandle);\n  if (profileFileName === 0) {\n    checkLastError('Can\\'t get an profile file name.');\n  }\n  wasm._OrtFree(profileFileName);\n};\n\nexport const extractTransferableBuffers = (tensors: readonly SerializableTensorMetadata[]): ArrayBufferLike[] => {\n  const buffers: ArrayBufferLike[] = [];\n  for (const tensor of tensors) {\n    const data = tensor[2];\n    if (!Array.isArray(data) && 'buffer' in data) {\n      buffers.push(data.buffer);\n    }\n  }\n  return buffers;\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env, env, InferenceSession} from 'onnxruntime-common';\n\nimport {OrtWasmMessage, SerializableModeldata, SerializableSessionMetadata, SerializableTensorMetadata, TensorMetadata} from './proxy-messages';\nimport * as core from './wasm-core-impl';\nimport {initializeWebAssembly} from './wasm-factory';\n\nconst isProxy = (): boolean => !!env.wasm.proxy && typeof document !== 'undefined';\nlet proxyWorker: Worker|undefined;\nlet initializing = false;\nlet initialized = false;\nlet aborted = false;\n\n// resolve; reject\ntype PromiseCallbacks<T = void> = [(result: T) => void, (reason: unknown) => void];\n\nlet initWasmCallbacks: PromiseCallbacks;\nlet initOrtCallbacks: PromiseCallbacks;\nconst createSessionAllocateCallbacks: Array<PromiseCallbacks<SerializableModeldata>> = [];\nconst createSessionFinalizeCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst createSessionCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst releaseSessionCallbacks: Array<PromiseCallbacks<void>> = [];\nconst runCallbacks: Array<PromiseCallbacks<SerializableTensorMetadata[]>> = [];\nconst endProfilingCallbacks: Array<PromiseCallbacks<void>> = [];\n\nconst ensureWorker = (): void => {\n  if (initializing || !initialized || aborted || !proxyWorker) {\n    throw new Error('worker not ready');\n  }\n};\n\nconst onProxyWorkerMessage = (ev: MessageEvent<OrtWasmMessage>): void => {\n  switch (ev.data.type) {\n    case 'init-wasm':\n      initializing = false;\n      if (ev.data.err) {\n        aborted = true;\n        initWasmCallbacks[1](ev.data.err);\n      } else {\n        initialized = true;\n        initWasmCallbacks[0]();\n      }\n      break;\n    case 'init-ort':\n      if (ev.data.err) {\n        initOrtCallbacks[1](ev.data.err);\n      } else {\n        initOrtCallbacks[0]();\n      }\n      break;\n    case 'create_allocate':\n      if (ev.data.err) {\n        createSessionAllocateCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionAllocateCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'create_finalize':\n      if (ev.data.err) {\n        createSessionFinalizeCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionFinalizeCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'create':\n      if (ev.data.err) {\n        createSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'release':\n      if (ev.data.err) {\n        releaseSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        releaseSessionCallbacks.shift()![0]();\n      }\n      break;\n    case 'run':\n      if (ev.data.err) {\n        runCallbacks.shift()![1](ev.data.err);\n      } else {\n        runCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'end-profiling':\n      if (ev.data.err) {\n        endProfilingCallbacks.shift()![1](ev.data.err);\n      } else {\n        endProfilingCallbacks.shift()![0]();\n      }\n      break;\n    default:\n  }\n};\n\nconst scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src : undefined;\n\nexport const initializeWebAssemblyInstance = async(): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    if (initialized) {\n      return;\n    }\n    if (initializing) {\n      throw new Error('multiple calls to \\'initWasm()\\' detected.');\n    }\n    if (aborted) {\n      throw new Error('previous call to \\'initWasm()\\' failed.');\n    }\n\n    initializing = true;\n\n    // overwrite wasm filepaths\n    if (env.wasm.wasmPaths === undefined) {\n      if (scriptSrc && scriptSrc.indexOf('blob:') !== 0) {\n        env.wasm.wasmPaths = scriptSrc.substr(0, +(scriptSrc).lastIndexOf('/') + 1);\n      }\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      proxyWorker?.terminate();\n\n      const workerUrl = URL.createObjectURL(new Blob(\n          [\n            // This require() function is handled by esbuild plugin to load file content as string.\n            // eslint-disable-next-line @typescript-eslint/no-require-imports\n            require('./proxy-worker/main')\n          ],\n          {type: 'text/javascript'}));\n      proxyWorker = new Worker(workerUrl, {name: 'ort-wasm-proxy-worker'});\n      proxyWorker.onerror = (ev: ErrorEvent) => reject(ev);\n      proxyWorker.onmessage = onProxyWorkerMessage;\n      URL.revokeObjectURL(workerUrl);\n      initWasmCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-wasm', in : env.wasm};\n      proxyWorker.postMessage(message);\n    });\n\n  } else {\n    return initializeWebAssembly(env.wasm);\n  }\n};\n\nexport const initializeRuntime = async(env: Env): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      initOrtCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-ort', in : env};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    await core.initRuntime(env);\n  }\n};\n\nexport const createSessionAllocate = async(model: Uint8Array): Promise<SerializableModeldata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableModeldata>((resolve, reject) => {\n      createSessionAllocateCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create_allocate', in : {model}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSessionAllocate(model);\n  }\n};\n\nexport const createSessionFinalize = async(modeldata: SerializableModeldata, options?: InferenceSession.SessionOptions):\n    Promise<SerializableSessionMetadata> => {\n      if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n        ensureWorker();\n        return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n          createSessionFinalizeCallbacks.push([resolve, reject]);\n          const message: OrtWasmMessage = {type: 'create_finalize', in : {modeldata, options}};\n          proxyWorker!.postMessage(message);\n        });\n      } else {\n        return core.createSessionFinalize(modeldata, options);\n      }\n    };\n\nexport const createSession =\n    async(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SerializableSessionMetadata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    // check unsupported options\n    if (options?.preferredOutputLocation) {\n      throw new Error('session option \"preferredOutputLocation\" is not supported for proxy.');\n    }\n    ensureWorker();\n    return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n      createSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create', in : {model, options}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSession(model, options);\n  }\n};\n\nexport const releaseSession = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      releaseSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'release', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.releaseSession(sessionId);\n  }\n};\n\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: TensorMetadata[], outputIndices: number[],\n    outputs: Array<TensorMetadata|null>, options: InferenceSession.RunOptions): Promise<TensorMetadata[]> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    // check inputs location\n    if (inputs.some(t => t[3] !== 'cpu')) {\n      throw new Error('input tensor on GPU is not supported for proxy.');\n    }\n    // check outputs location\n    if (outputs.some(t => t)) {\n      throw new Error('pre-allocated output tensor is not supported for proxy.');\n    }\n    ensureWorker();\n    return new Promise<SerializableTensorMetadata[]>((resolve, reject) => {\n      runCallbacks.push([resolve, reject]);\n      const serializableInputs = inputs as SerializableTensorMetadata[];  // every input is on CPU.\n      const message: OrtWasmMessage =\n          {type: 'run', in : {sessionId, inputIndices, inputs: serializableInputs, outputIndices, options}};\n      proxyWorker!.postMessage(message, core.extractTransferableBuffers(serializableInputs));\n    });\n  } else {\n    return core.run(sessionId, inputIndices, inputs, outputIndices, outputs, options);\n  }\n};\n\nexport const endProfiling = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      endProfilingCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'end-profiling', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.endProfiling(sessionId);\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'node:fs/promises';\nimport {env, InferenceSession, InferenceSessionHandler, SessionHandler, Tensor} from 'onnxruntime-common';\n\nimport {SerializableModeldata, TensorMetadata} from './proxy-messages';\nimport {createSession, createSessionAllocate, createSessionFinalize, endProfiling, initializeRuntime, releaseSession, run} from './proxy-wrapper';\nimport {isGpuBufferSupportedType} from './wasm-common';\n\nlet runtimeInitialized: boolean;\nlet runtimeInitializationPromise: Promise<void>|undefined;\n\nconst encodeTensorMetadata = (tensor: Tensor, getName: () => string): TensorMetadata => {\n  switch (tensor.location) {\n    case 'cpu':\n      return [tensor.type, tensor.dims, tensor.data, 'cpu'];\n    case 'gpu-buffer':\n      return [tensor.type, tensor.dims, {gpuBuffer: tensor.gpuBuffer}, 'gpu-buffer'];\n    default:\n      throw new Error(`invalid data location: ${tensor.location} for ${getName()}`);\n  }\n};\n\nconst decodeTensorMetadata = (tensor: TensorMetadata): Tensor => {\n  switch (tensor[3]) {\n    case 'cpu':\n      return new Tensor(tensor[0], tensor[2], tensor[1]);\n    case 'gpu-buffer': {\n      const dataType = tensor[0];\n      if (!isGpuBufferSupportedType(dataType)) {\n        throw new Error(`not supported data type: ${dataType} for deserializing GPU tensor`);\n      }\n      const {gpuBuffer, download, dispose} = tensor[2];\n      return Tensor.fromGpuBuffer(gpuBuffer, {dataType, dims: tensor[1], download, dispose});\n    }\n    default:\n      throw new Error(`invalid data location: ${tensor[3]}`);\n  }\n};\n\nexport class OnnxruntimeWebAssemblySessionHandler implements InferenceSessionHandler {\n  private sessionId: number;\n\n  inputNames: string[];\n  outputNames: string[];\n\n  async createSessionAllocate(path: string): Promise<SerializableModeldata> {\n    // fetch model from url and move to wasm heap. The arraybufffer that held the http\n    // response is freed once we return\n    const response = await fetch(path);\n    if (response.status !== 200) {\n      throw new Error(`failed to load model: ${path}`);\n    }\n    const arrayBuffer = await response.arrayBuffer();\n    return createSessionAllocate(new Uint8Array(arrayBuffer));\n  }\n\n  async loadModel(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions): Promise<void> {\n    if (!runtimeInitialized) {\n      if (!runtimeInitializationPromise) {\n        runtimeInitializationPromise = initializeRuntime(env);\n      }\n      await runtimeInitializationPromise;\n      runtimeInitializationPromise = undefined;\n      runtimeInitialized = true;\n    }\n\n    if (typeof pathOrBuffer === 'string') {\n      if (typeof process !== 'undefined' && process.versions && process.versions.node) {\n        // node\n        const model = await readFile(pathOrBuffer);\n        [this.sessionId, this.inputNames, this.outputNames] = await createSession(model, options);\n      } else {\n        // browser\n        // fetch model and move to wasm heap.\n        const modelData: SerializableModeldata = await this.createSessionAllocate(pathOrBuffer);\n        // create the session\n        [this.sessionId, this.inputNames, this.outputNames] = await createSessionFinalize(modelData, options);\n      }\n    } else {\n      [this.sessionId, this.inputNames, this.outputNames] = await createSession(pathOrBuffer, options);\n    }\n  }\n\n  async dispose(): Promise<void> {\n    return releaseSession(this.sessionId);\n  }\n\n  async run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType, options: InferenceSession.RunOptions):\n      Promise<SessionHandler.ReturnType> {\n    const inputArray: Tensor[] = [];\n    const inputIndices: number[] = [];\n    Object.entries(feeds).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.inputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid input '${name}'`);\n      }\n      inputArray.push(tensor);\n      inputIndices.push(index);\n    });\n\n    const outputArray: Array<Tensor|null> = [];\n    const outputIndices: number[] = [];\n    Object.entries(fetches).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.outputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid output '${name}'`);\n      }\n      outputArray.push(tensor);\n      outputIndices.push(index);\n    });\n\n    const inputs =\n        inputArray.map((t, i) => encodeTensorMetadata(t, () => `input \"${this.inputNames[inputIndices[i]]}\"`));\n    const outputs = outputArray.map(\n        (t, i) => t ? encodeTensorMetadata(t, () => `output \"${this.outputNames[outputIndices[i]]}\"`) : null);\n\n    const results = await run(this.sessionId, inputIndices, inputs, outputIndices, outputs, options);\n\n    const resultMap: SessionHandler.ReturnType = {};\n    for (let i = 0; i < results.length; i++) {\n      resultMap[this.outputNames[outputIndices[i]]] = outputArray[i] ?? decodeTensorMetadata(results[i]);\n    }\n    return resultMap;\n  }\n\n  startProfiling(): void {\n    // TODO: implement profiling\n  }\n\n  endProfiling(): void {\n    void endProfiling(this.sessionId);\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {cpus} from 'node:os';\nimport {Backend, env, InferenceSession, InferenceSessionHandler} from 'onnxruntime-common';\n\nimport {initializeWebAssemblyInstance} from './wasm/proxy-wrapper';\nimport {OnnxruntimeWebAssemblySessionHandler} from './wasm/session-handler';\n\n/**\n * This function initializes all flags for WebAssembly.\n *\n * Those flags are accessible from `ort.env.wasm`. Users are allow to set those flags before the first inference session\n * being created, to override default value.\n */\nexport const initializeFlags = (): void => {\n  if (typeof env.wasm.initTimeout !== 'number' || env.wasm.initTimeout < 0) {\n    env.wasm.initTimeout = 0;\n  }\n\n  if (typeof env.wasm.simd !== 'boolean') {\n    env.wasm.simd = true;\n  }\n\n  if (typeof env.wasm.proxy !== 'boolean') {\n    env.wasm.proxy = false;\n  }\n\n  if (typeof env.wasm.numThreads !== 'number' || !Number.isInteger(env.wasm.numThreads) || env.wasm.numThreads <= 0) {\n    const numCpuLogicalCores = typeof navigator === 'undefined' ? cpus().length : navigator.hardwareConcurrency;\n    env.wasm.numThreads = Math.min(4, Math.ceil((numCpuLogicalCores || 1) / 2));\n  }\n};\n\nclass OnnxruntimeWebAssemblyBackend implements Backend {\n  async init(): Promise<void> {\n    // populate wasm flags\n    initializeFlags();\n\n    // init wasm\n    await initializeWebAssemblyInstance();\n  }\n  createInferenceSessionHandler(path: string, options?: InferenceSession.SessionOptions):\n      Promise<InferenceSessionHandler>;\n  createInferenceSessionHandler(buffer: Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<InferenceSessionHandler>;\n  async createInferenceSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<InferenceSessionHandler> {\n    const handler = new OnnxruntimeWebAssemblySessionHandler();\n    await handler.loadModel(pathOrBuffer, options);\n    return Promise.resolve(handler);\n  }\n}\n\nexport const wasmBackend = new OnnxruntimeWebAssemblyBackend();\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports */\n// We use \"require\" instead of \"import\" here because import statement must be put in top level. Our current code does\n// not allow terser to tree-shaking code as expected because some codes are treated as having side effects.\n// So we import code inside the if-clause to allow terser remove the code safely.\n\nexport * from 'onnxruntime-common';\nimport {registerBackend, env} from 'onnxruntime-common';\nimport {version} from './version';\n\nif (!BUILD_DEFS.DISABLE_WEBGL) {\n  const onnxjsBackend = require('./backend-onnxjs').onnxjsBackend;\n  registerBackend('webgl', onnxjsBackend, -10);\n}\n\nif (!BUILD_DEFS.DISABLE_WASM) {\n  const wasmBackend = require('./backend-wasm').wasmBackend;\n  if (!BUILD_DEFS.DISABLE_WEBGPU && typeof navigator !== 'undefined' && navigator.gpu) {\n    registerBackend('webgpu', wasmBackend, 5);\n  }\n  registerBackend('cpu', wasmBackend, 10);\n  registerBackend('wasm', wasmBackend, 10);\n  registerBackend('xnnpack', wasmBackend, 9);\n  registerBackend('webnn', wasmBackend, 9);\n}\n\nObject.defineProperty(env.versions, 'web', {value: version, enumerable: true});\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n// This file is generated by /js/scripts/update-version.ts\n// Do not modify file content manually.\n\nexport const version = '1.17.0';\n"],
  "mappings": "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",
  "names": ["require_ort_wasm", "__commonJSMin", "exports", "module", "ortWasm", "_scriptDir", "moduleArg", "f", "aa", "m", "a", "b", "ba", "ca", "da", "q", "ea", "t", "fa", "w", "x", "fs", "ha", "c", "d", "e", "h", "ia", "z", "A", "noExitRuntime", "ja", "B", "C", "ka", "D", "E", "G", "H", "J", "K", "la", "ma", "na", "oa", "pa", "qa", "ra", "sa", "ta", "L", "ua", "M", "va", "N", "wa", "xa", "ya", "za", "Aa", "Ba", "Ca", "Da", "Ea", "Fa", "O", "l", "P", "Q", "k", "Ga", "Ha", "R", "Ia", "Ja", "Ka", "La", "S", "Ma", "T", "Na", "Oa", "Pa", "U", "Qa", "V", "W", "Ra", "Sa", "Ta", "Ua", "Va", "Wa", "Xa", "Ya", "Za", "$a", "ab", "X", "bb", "cb", "eb", "fb", "gb", "hb", "ib", "jb", "kb", "lb", "mb", "nb", "Y", "Z", "ob", "pb", "rb", "qb", "sb", "ub", "tb", "vb", "wb", "xb", "yb", "zb", "g", "r", "u", "db", "I", "n", "p", "v", "y", "F", "Ab", "Bb", "Cb", "Db", "Eb", "Fb", "Gb", "Hb", "Ib", "ortWasmFactory", "ortWasmFactoryThreaded", "wasm", "initialized", "initializing", "aborted", "isMultiThreadSupported", "isSimdSupported", "getWasmFileName", "initializeWebAssembly", "getInstance", "init_wasm_factory", "__esmMin", "useSimd", "useThreads", "flags", "timeout", "numThreads", "simd", "wasmPaths", "wasmPrefixOverride", "wasmFileName", "wasmPathOverride", "isTimeout", "tasks", "resolve", "reject", "fileName", "scriptDirectory", "module", "what", "allocWasmString", "iterateExtraOptions", "checkLastError", "init_wasm_utils", "__esmMin", "init_wasm_factory", "data", "allocs", "wasm", "getInstance", "dataLength", "dataOffset", "options", "prefix", "seen", "handler", "key", "value", "name", "message", "stack", "paramsOffset", "errorCode", "errorMessagePointer", "errorMessage", "setRunOptions", "init_run_options", "__esmMin", "init_wasm_factory", "init_wasm_utils", "options", "wasm", "getInstance", "runOptionsHandle", "allocs", "runOptions", "tagDataOffset", "allocWasmString", "checkLastError", "iterateExtraOptions", "key", "value", "keyDataOffset", "valueDataOffset", "e", "alloc", "getGraphOptimzationLevel", "getExecutionMode", "appendDefaultOptions", "setExecutionProviders", "setSessionOptions", "init_session_options", "__esmMin", "init_wasm_factory", "init_wasm_utils", "graphOptimizationLevel", "executionMode", "options", "session", "ep", "sessionOptionsHandle", "executionProviders", "allocs", "epName", "webnnOptions", "keyDataOffset", "allocWasmString", "valueDataOffset", "getInstance", "checkLastError", "webgpuOptions", "epNameDataOffset", "wasm", "sessionOptions", "logIdDataOffset", "logSeverityLevel", "logVerbosityLevel", "optimizedModelFilePathOffset", "name", "value", "nameOffset", "iterateExtraOptions", "key", "e", "alloc", "tensorDataTypeStringToEnum", "tensorDataTypeEnumToString", "getTensorElementSize", "tensorTypeToTypedArrayConstructor", "logLevelStringToEnum", "isGpuBufferSupportedType", "dataLocationStringToEnum", "init_wasm_common", "__esmMin", "type", "typeProto", "dateType", "logLevel", "location", "getSessionInputOutputCount", "initOrt", "initRuntime", "activeSessions", "createSessionAllocate", "createSessionFinalize", "createSession", "releaseSession", "prepareInputOutputTensor", "run", "endProfiling", "init_wasm_core_impl", "__esmMin", "init_run_options", "init_session_options", "init_wasm_common", "init_wasm_factory", "init_wasm_utils", "sessionHandle", "wasm", "getInstance", "stack", "dataOffset", "checkLastError", "numThreads", "loggingLevel", "env", "logLevelStringToEnum", "model", "modelDataOffset", "modelData", "options", "sessionOptionsHandle", "ioBindingHandle", "allocs", "inputNamesUTF8Encoded", "outputNamesUTF8Encoded", "setSessionOptions", "inputCount", "outputCount", "inputNames", "outputNames", "outputPreferredLocations", "i", "name", "nameString", "bindingState", "e", "buf", "alloc", "sessionId", "session", "ioBindingState", "tensor", "tensorHandles", "index", "dataType", "dims", "location", "rawData", "dataByteLength", "gpuBuffer", "elementSizeInBytes", "getTensorElementSize", "tensorDataTypeStringToEnum", "a", "b", "data", "dataIndex", "allocWasmString", "dimsOffset", "dimIndex", "d", "dataLocationStringToEnum", "inputIndices", "inputTensors", "outputIndices", "outputTensors", "runOptionsHandle", "runOptionsAllocs", "inputTensorHandles", "outputTensorHandles", "inputOutputAllocs", "beforeRunStack", "inputValuesOffset", "inputNamesOffset", "outputValuesOffset", "outputNamesOffset", "setRunOptions", "inputValuesIndex", "inputNamesIndex", "outputValuesIndex", "outputNamesIndex", "errorCode", "output", "beforeGetTensorDataStack", "tensorDataOffset", "keepOutputTensor", "type", "tensorDataIndex", "dimsLength", "size", "tensorDataTypeEnumToString", "preferredLocation", "stringData", "offset", "maxBytesToRead", "elementSize", "isGpuBufferSupportedType", "typedArrayConstructor", "tensorTypeToTypedArrayConstructor", "v", "p", "profileFileName", "import_onnxruntime_common", "scriptSrc", "initializeWebAssemblyInstance", "initializeRuntime", "createSessionAllocate", "createSessionFinalize", "createSession", "releaseSession", "run", "endProfiling", "init_proxy_wrapper", "__esmMin", "init_wasm_core_impl", "init_wasm_factory", "initializeWebAssembly", "env", "initRuntime", "model", "modeldata", "options", "sessionId", "inputIndices", "inputs", "outputIndices", "outputs", "import_promises", "import_onnxruntime_common", "runtimeInitialized", "runtimeInitializationPromise", "encodeTensorMetadata", "decodeTensorMetadata", "OnnxruntimeWebAssemblySessionHandler", "init_session_handler", "__esmMin", "init_proxy_wrapper", "init_wasm_common", "tensor", "getName", "dataType", "isGpuBufferSupportedType", "gpuBuffer", "download", "dispose", "path", "response", "arrayBuffer", "createSessionAllocate", "pathOrBuffer", "options", "initializeRuntime", "model", "createSession", "modelData", "createSessionFinalize", "releaseSession", "feeds", "fetches", "inputArray", "inputIndices", "kvp", "name", "index", "outputArray", "outputIndices", "inputs", "t", "i", "outputs", "results", "run", "resultMap", "endProfiling", "backend_wasm_exports", "__export", "initializeFlags", "wasmBackend", "import_node_os", "import_onnxruntime_common", "OnnxruntimeWebAssemblyBackend", "init_backend_wasm", "__esmMin", "init_proxy_wrapper", "init_session_handler", "numCpuLogicalCores", "initializeWebAssemblyInstance", "pathOrBuffer", "options", "handler", "OnnxruntimeWebAssemblySessionHandler", "lib_exports", "__toCommonJS", "__reExport", "import_onnxruntime_common", "version", "wasmBackend", "version"]
}
