{
  "version": 3,
  "sources": ["../../node_modules/onnxruntime-common/lib/backend-impl.ts", "../../node_modules/onnxruntime-common/lib/backend.ts", "../../node_modules/onnxruntime-common/lib/version.ts", "../../node_modules/onnxruntime-common/lib/env-impl.ts", "../../node_modules/onnxruntime-common/lib/env.ts", "../../node_modules/onnxruntime-common/lib/tensor-conversion-impl.ts", "../../node_modules/onnxruntime-common/lib/tensor-factory-impl.ts", "../../node_modules/onnxruntime-common/lib/tensor-impl-type-mapping.ts", "../../node_modules/onnxruntime-common/lib/tensor-utils-impl.ts", "../../node_modules/onnxruntime-common/lib/tensor-impl.ts", "../../node_modules/onnxruntime-common/lib/tensor.ts", "../../node_modules/onnxruntime-common/lib/trace.ts", "../../node_modules/onnxruntime-common/lib/inference-session-impl.ts", "../../node_modules/onnxruntime-common/lib/inference-session.ts", "../../node_modules/onnxruntime-common/lib/onnx-value.ts", "../../node_modules/onnxruntime-common/lib/training-session-impl.ts", "../../node_modules/onnxruntime-common/lib/training-session.ts", "../../node_modules/onnxruntime-common/lib/index.ts", "nodejs-ignore:fs", "nodejs-ignore:path", "../../lib/wasm/binding/ort-wasm.js", "nodejs-ignore:worker_threads", "nodejs-ignore:perf_hooks", "nodejs-ignore:os", "../../lib/wasm/binding/ort-wasm-threaded.js", "../../lib/wasm/binding/ort-wasm-threaded.worker.js", "../../lib/wasm/wasm-factory.ts", "../../lib/wasm/wasm-utils.ts", "../../lib/wasm/run-options.ts", "../../lib/wasm/session-options.ts", "../../lib/wasm/wasm-common.ts", "../../lib/wasm/wasm-utils-load-file.ts", "../../lib/wasm/wasm-core-impl.ts", "proxy-worker:./proxy-worker/main", "../../lib/wasm/proxy-wrapper.ts", "../../lib/wasm/session-handler-inference.ts", "../../lib/backend-wasm.ts", "../../lib/backend-wasm-inference.ts", "../../lib/index.ts", "../../lib/version.ts"],
  "sourcesContent": ["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Backend} from './backend.js';\n\ninterface BackendInfo {\n  backend: Backend;\n  priority: number;\n\n  initPromise?: Promise<void>;\n  initialized?: boolean;\n  aborted?: boolean;\n}\n\nconst backends: Map<string, BackendInfo> = new Map();\nconst backendsSortedByPriority: string[] = [];\n\n/**\n * Register a backend.\n *\n * @param name - the name as a key to lookup as an execution provider.\n * @param backend - the backend object.\n * @param priority - an integer indicating the priority of the backend. Higher number means higher priority. if priority\n * < 0, it will be considered as a 'beta' version and will not be used as a fallback backend by default.\n *\n * @ignore\n */\nexport const registerBackend = (name: string, backend: Backend, priority: number): void => {\n  if (backend && typeof backend.init === 'function' && typeof backend.createInferenceSessionHandler === 'function') {\n    const currentBackend = backends.get(name);\n    if (currentBackend === undefined) {\n      backends.set(name, {backend, priority});\n    } else if (currentBackend.priority > priority) {\n      // same name is already registered with a higher priority. skip registeration.\n      return;\n    } else if (currentBackend.priority === priority) {\n      if (currentBackend.backend !== backend) {\n        throw new Error(`cannot register backend \"${name}\" using priority ${priority}`);\n      }\n    }\n\n    if (priority >= 0) {\n      const i = backendsSortedByPriority.indexOf(name);\n      if (i !== -1) {\n        backendsSortedByPriority.splice(i, 1);\n      }\n\n      for (let i = 0; i < backendsSortedByPriority.length; i++) {\n        if (backends.get(backendsSortedByPriority[i])!.priority <= priority) {\n          backendsSortedByPriority.splice(i, 0, name);\n          return;\n        }\n      }\n      backendsSortedByPriority.push(name);\n    }\n    return;\n  }\n\n  throw new TypeError('not a valid backend');\n};\n\n/**\n * Resolve backend by specified hints.\n *\n * @param backendHints - a list of execution provider names to lookup. If omitted use registered backends as list.\n * @returns a promise that resolves to the backend.\n *\n * @ignore\n */\nexport const resolveBackend = async(backendHints: readonly string[]): Promise<Backend> => {\n  const backendNames = backendHints.length === 0 ? backendsSortedByPriority : backendHints;\n  const errors = [];\n  for (const backendName of backendNames) {\n    const backendInfo = backends.get(backendName);\n    if (backendInfo) {\n      if (backendInfo.initialized) {\n        return backendInfo.backend;\n      } else if (backendInfo.aborted) {\n        continue;  // current backend is unavailable; try next\n      }\n\n      const isInitializing = !!backendInfo.initPromise;\n      try {\n        if (!isInitializing) {\n          backendInfo.initPromise = backendInfo.backend.init(backendName);\n        }\n        await backendInfo.initPromise;\n        backendInfo.initialized = true;\n        return backendInfo.backend;\n      } catch (e) {\n        if (!isInitializing) {\n          errors.push({name: backendName, err: e});\n        }\n        backendInfo.aborted = true;\n      } finally {\n        delete backendInfo.initPromise;\n      }\n    }\n  }\n\n  throw new Error(`no available backend found. ERR: ${errors.map(e => `[${e.name}] ${e.err}`).join(', ')}`);\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from './inference-session.js';\nimport {OnnxValue} from './onnx-value.js';\nimport {TrainingSession} from './training-session.js';\n\n/**\n * @ignore\n */\nexport declare namespace SessionHandler {\n  type FeedsType = {[name: string]: OnnxValue};\n  type FetchesType = {[name: string]: OnnxValue | null};\n  type ReturnType = {[name: string]: OnnxValue};\n}\n\n/**\n * Represents shared SessionHandler functionality\n *\n * @ignore\n */\ninterface SessionHandler {\n  dispose(): Promise<void>;\n\n  readonly inputNames: readonly string[];\n  readonly outputNames: readonly string[];\n}\n\n/**\n * Represent a handler instance of an inference session.\n *\n * @ignore\n */\nexport interface InferenceSessionHandler extends SessionHandler {\n  startProfiling(): void;\n  endProfiling(): void;\n\n  run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType,\n      options: InferenceSession.RunOptions): Promise<SessionHandler.ReturnType>;\n}\n\n/**\n * Represent a handler instance of a training inference session.\n *\n * @ignore\n */\nexport interface TrainingSessionHandler extends SessionHandler {\n  readonly evalInputNames: readonly string[];\n  readonly evalOutputNames: readonly string[];\n\n  lazyResetGrad(): Promise<void>;\n  runTrainStep(\n      feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType,\n      options: InferenceSession.RunOptions): Promise<SessionHandler.ReturnType>;\n  runOptimizerStep(options: InferenceSession.RunOptions): Promise<void>;\n  runEvalStep(\n      feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType,\n      options: InferenceSession.RunOptions): Promise<SessionHandler.ReturnType>;\n\n  getParametersSize(trainableOnly: boolean): Promise<number>;\n  loadParametersBuffer(array: Uint8Array, trainableOnly: boolean): Promise<void>;\n  getContiguousParameters(trainableOnly: boolean): Promise<OnnxValue>;\n}\n\n/**\n * Represent a backend that provides implementation of model inferencing.\n *\n * @ignore\n */\nexport interface Backend {\n  /**\n   * Initialize the backend asynchronously. Should throw when failed.\n   */\n  init(backendName: string): Promise<void>;\n\n  createInferenceSessionHandler(uriOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<InferenceSessionHandler>;\n\n  createTrainingSessionHandler?\n      (checkpointStateUriOrBuffer: TrainingSession.URIorBuffer, trainModelUriOrBuffer: TrainingSession.URIorBuffer,\n       evalModelUriOrBuffer: TrainingSession.URIorBuffer, optimizerModelUriOrBuffer: TrainingSession.URIorBuffer,\n       options: InferenceSession.SessionOptions): Promise<TrainingSessionHandler>;\n}\n\nexport {registerBackend} from './backend-impl.js';\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n// This file is generated by /js/scripts/update-version.ts\n// Do not modify file content manually.\n\nexport const version = '1.18.0';\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from './env.js';\nimport {version} from './version.js';\n\ntype LogLevelType = Env['logLevel'];\n\nlet logLevelValue: Required<LogLevelType> = 'warning';\n\nexport const env: Env = {\n  wasm: {} as Env.WebAssemblyFlags,\n  webgl: {} as Env.WebGLFlags,\n  webgpu: {} as Env.WebGpuFlags,\n  versions: {common: version},\n\n  set logLevel(value: LogLevelType) {\n    if (value === undefined) {\n      return;\n    }\n    if (typeof value !== 'string' || ['verbose', 'info', 'warning', 'error', 'fatal'].indexOf(value) === -1) {\n      throw new Error(`Unsupported logging level: ${value}`);\n    }\n    logLevelValue = value;\n  },\n  get logLevel(): Required<LogLevelType> {\n    return logLevelValue;\n  },\n};\n\n// set property 'logLevel' so that they can be correctly transferred to worker by `postMessage()`.\nObject.defineProperty(env, 'logLevel', {enumerable: true});\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env as envImpl} from './env-impl.js';\n\nexport declare namespace Env {\n  export type WasmPrefixOrFilePaths = string|{\n    /* eslint-disable @typescript-eslint/naming-convention */\n    'ort-wasm.wasm'?: string;\n    'ort-wasm-threaded.wasm'?: string;\n    'ort-wasm-simd.wasm'?: string;\n    'ort-training-wasm-simd.wasm'?: string;\n    'ort-wasm-simd-threaded.wasm'?: string;\n    /* eslint-enable @typescript-eslint/naming-convention */\n  };\n  export interface WebAssemblyFlags {\n    /**\n     * set or get number of thread(s). If omitted or set to 0, number of thread(s) will be determined by system. If set\n     * to 1, no worker thread will be spawned.\n     *\n     * This setting is available only when WebAssembly multithread feature is available in current context.\n     *\n     * @defaultValue `0`\n     */\n    numThreads?: number;\n\n    /**\n     * set or get a boolean value indicating whether to enable SIMD. If set to false, SIMD will be forcely disabled.\n     *\n     * This setting is available only when WebAssembly SIMD feature is available in current context.\n     *\n     * @defaultValue `true`\n     */\n    simd?: boolean;\n\n    /**\n     * set or get a boolean value indicating whether to enable trace.\n     *\n     * @defaultValue `false`\n     */\n    trace?: boolean;\n\n    /**\n     * Set or get a number specifying the timeout for initialization of WebAssembly backend, in milliseconds. A zero\n     * value indicates no timeout is set.\n     *\n     * @defaultValue `0`\n     */\n    initTimeout?: number;\n\n    /**\n     * Set a custom URL prefix to the .wasm files or a set of overrides for each .wasm file. The override path should be\n     * an absolute path.\n     */\n    wasmPaths?: WasmPrefixOrFilePaths;\n\n    /**\n     * Set or get a boolean value indicating whether to proxy the execution of main thread to a worker thread.\n     *\n     * @defaultValue `false`\n     */\n    proxy?: boolean;\n  }\n\n  export interface WebGLFlags {\n    /**\n     * Set or get the WebGL Context ID (webgl or webgl2).\n     *\n     * @defaultValue `'webgl2'`\n     */\n    contextId?: 'webgl'|'webgl2';\n    /**\n     * Get the WebGL rendering context.\n     */\n    readonly context: WebGLRenderingContext;\n    /**\n     * Set or get the maximum batch size for matmul. 0 means to disable batching.\n     *\n     * @deprecated\n     */\n    matmulMaxBatchSize?: number;\n    /**\n     * Set or get the texture cache mode.\n     *\n     * @defaultValue `'full'`\n     */\n    textureCacheMode?: 'initializerOnly'|'full';\n    /**\n     * Set or get the packed texture mode\n     *\n     * @defaultValue `false`\n     */\n    pack?: boolean;\n    /**\n     * Set or get whether enable async download.\n     *\n     * @defaultValue `false`\n     */\n    async?: boolean;\n  }\n\n  export interface WebGpuProfilingDataV1TensorMetadata {\n    dims: readonly number[];\n    dataType: string;\n  }\n  export interface WebGpuProfilingDataV1 {\n    version: 1;\n    inputsMetadata: readonly WebGpuProfilingDataV1TensorMetadata[];\n    outputsMetadata: readonly WebGpuProfilingDataV1TensorMetadata[];\n    kernelId: number;\n    kernelType: string;\n    kernelName: string;\n    programName: string;\n    startTime: number;\n    endTime: number;\n  }\n\n  export type WebGpuProfilingData = WebGpuProfilingDataV1;\n\n  export interface WebGpuFlags {\n    /**\n     * Set or get the profiling mode.\n     *\n     * @deprecated Use `env.webgpu.profiling.mode` instead. If `env.webgpu.profiling.mode` is set, this property will be\n     * ignored.\n     */\n    profilingMode?: 'off'|'default';\n    /**\n     * Set or get the profiling configuration.\n     */\n    profiling?: {\n      /**\n       * Set or get the profiling mode.\n       *\n       * @defaultValue `'off'`\n       */\n      mode?: 'off'|'default';\n\n      /**\n       * Set or get a callback function when a profiling data is received. If not set, the profiling data will be\n       * printed to console.\n       */\n      ondata?: (data: WebGpuProfilingData) => void;\n    };\n    /**\n     * Get the device for WebGPU.\n     *\n     * When use with TypeScript, the type of this property is `GPUDevice` defined in \"@webgpu/types\".\n     * Use `const device = env.webgpu.device as GPUDevice;` in TypeScript to access this property with correct type.\n     *\n     * see comments on {@link GpuBufferType} for more details about why not use types defined in \"@webgpu/types\".\n     */\n    readonly device: unknown;\n    /**\n     * Set or get whether validate input content.\n     *\n     * @defaultValue `false`\n     */\n    validateInputContent?: boolean;\n  }\n}\n\nexport interface Env {\n  /**\n   * set the severity level for logging.\n   *\n   * @defaultValue `'warning'`\n   */\n  logLevel?: 'verbose'|'info'|'warning'|'error'|'fatal';\n  /**\n   * Indicate whether run in debug mode.\n   *\n   * @defaultValue `false`\n   */\n  debug?: boolean;\n\n  /**\n   * Get version of the current package.\n   */\n  readonly versions: {\n    readonly common: string;\n    readonly web?: string;\n    readonly node?: string;\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    readonly 'react-native'?: string;\n  };\n\n  /**\n   * Represent a set of flags for WebAssembly\n   */\n  readonly wasm: Env.WebAssemblyFlags;\n\n  /**\n   * Represent a set of flags for WebGL\n   */\n  readonly webgl: Env.WebGLFlags;\n\n  /**\n   * Represent a set of flags for WebGPU\n   */\n  readonly webgpu: Env.WebGpuFlags;\n\n  [name: string]: unknown;\n}\n\n/**\n * Represent a set of flags as a global singleton.\n */\nexport const env: Env = envImpl;\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorToDataUrlOptions, TensorToImageDataOptions} from './tensor-conversion.js';\nimport {Tensor} from './tensor.js';\n\n/**\n * implementation of Tensor.toDataURL()\n */\nexport const tensorToDataURL = (tensor: Tensor, options?: TensorToDataUrlOptions): string => {\n  const canvas = typeof document !== 'undefined' ? document.createElement('canvas') : (new OffscreenCanvas(1, 1));\n  canvas.width = tensor.dims[3];\n  canvas.height = tensor.dims[2];\n  const pixels2DContext =\n      canvas.getContext('2d') as (CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D | null);\n\n  if (pixels2DContext != null) {\n    // Default values for height and width & format\n    let width: number;\n    let height: number;\n    if (options?.tensorLayout !== undefined && options.tensorLayout === 'NHWC') {\n      width = tensor.dims[2];\n      height = tensor.dims[3];\n    } else {  // Default layout is NCWH\n      width = tensor.dims[3];\n      height = tensor.dims[2];\n    }\n\n    const inputformat = options?.format !== undefined ? options.format : 'RGB';\n\n    const norm = options?.norm;\n    let normMean: [number, number, number, number];\n    let normBias: [number, number, number, number];\n    if (norm === undefined || norm.mean === undefined) {\n      normMean = [255, 255, 255, 255];\n    } else {\n      if (typeof (norm.mean) === 'number') {\n        normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n      } else {\n        normMean = [norm.mean[0], norm.mean[1], norm.mean[2], 0];\n        if (norm.mean[3] !== undefined) {\n          normMean[3] = norm.mean[3];\n        }\n      }\n    }\n    if (norm === undefined || norm.bias === undefined) {\n      normBias = [0, 0, 0, 0];\n    } else {\n      if (typeof (norm.bias) === 'number') {\n        normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n      } else {\n        normBias = [norm.bias[0], norm.bias[1], norm.bias[2], 0];\n        if (norm.bias[3] !== undefined) {\n          normBias[3] = norm.bias[3];\n        }\n      }\n    }\n\n    const stride = height * width;\n    // Default pointer assignments\n    let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n\n    // Updating the pointer assignments based on the input image format\n    if (inputformat === 'RGBA') {\n      rTensorPointer = 0;\n      gTensorPointer = stride;\n      bTensorPointer = stride * 2;\n      aTensorPointer = stride * 3;\n    } else if (inputformat === 'RGB') {\n      rTensorPointer = 0;\n      gTensorPointer = stride;\n      bTensorPointer = stride * 2;\n    } else if (inputformat === 'RBG') {\n      rTensorPointer = 0;\n      bTensorPointer = stride;\n      gTensorPointer = stride * 2;\n    }\n\n    for (let i = 0; i < height; i++) {\n      for (let j = 0; j < width; j++) {\n        const R = ((tensor.data[rTensorPointer++] as number) - normBias[0]) * normMean[0];  // R value\n        const G = ((tensor.data[gTensorPointer++] as number) - normBias[1]) * normMean[1];  // G value\n        const B = ((tensor.data[bTensorPointer++] as number) - normBias[2]) * normMean[2];  // B value\n        const A = aTensorPointer === -1 ?\n            255 :\n            ((tensor.data[aTensorPointer++] as number) - normBias[3]) * normMean[3];  // A value\n        // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n        pixels2DContext.fillStyle = 'rgba(' + R + ',' + G + ',' + B + ',' + A + ')';\n        pixels2DContext.fillRect(j, i, 1, 1);\n      }\n    }\n    if ('toDataURL' in canvas) {\n      return canvas.toDataURL();\n    } else {\n      throw new Error('toDataURL is not supported');\n    }\n  } else {\n    throw new Error('Can not access image data');\n  }\n};\n\n/**\n * implementation of Tensor.toImageData()\n */\nexport const tensorToImageData = (tensor: Tensor, options?: TensorToImageDataOptions): ImageData => {\n  const pixels2DContext = typeof document !== 'undefined' ?\n      document.createElement('canvas').getContext('2d') :\n      new OffscreenCanvas(1, 1).getContext('2d') as OffscreenCanvasRenderingContext2D;\n  let image: ImageData;\n  if (pixels2DContext != null) {\n    // Default values for height and width & format\n    let width: number;\n    let height: number;\n    let channels: number;\n    if (options?.tensorLayout !== undefined && options.tensorLayout === 'NHWC') {\n      width = tensor.dims[2];\n      height = tensor.dims[1];\n      channels = tensor.dims[3];\n    } else {  // Default layout is NCWH\n      width = tensor.dims[3];\n      height = tensor.dims[2];\n      channels = tensor.dims[1];\n    }\n    const inputformat = options !== undefined ? (options.format !== undefined ? options.format : 'RGB') : 'RGB';\n\n    const norm = options?.norm;\n    let normMean: [number, number, number, number];\n    let normBias: [number, number, number, number];\n    if (norm === undefined || norm.mean === undefined) {\n      normMean = [255, 255, 255, 255];\n    } else {\n      if (typeof (norm.mean) === 'number') {\n        normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n      } else {\n        normMean = [norm.mean[0], norm.mean[1], norm.mean[2], 255];\n        if (norm.mean[3] !== undefined) {\n          normMean[3] = norm.mean[3];\n        }\n      }\n    }\n    if (norm === undefined || norm.bias === undefined) {\n      normBias = [0, 0, 0, 0];\n    } else {\n      if (typeof (norm.bias) === 'number') {\n        normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n      } else {\n        normBias = [norm.bias[0], norm.bias[1], norm.bias[2], 0];\n        if (norm.bias[3] !== undefined) {\n          normBias[3] = norm.bias[3];\n        }\n      }\n    }\n\n    const stride = height * width;\n    if (options !== undefined) {\n      if (options.format !== undefined && (channels === 4 && options.format !== 'RGBA') ||\n          (channels === 3 && (options.format !== 'RGB' && options.format !== 'BGR'))) {\n        throw new Error('Tensor format doesn\\'t match input tensor dims');\n      }\n    }\n\n    // Default pointer assignments\n    const step = 4;\n    let rImagePointer = 0, gImagePointer = 1, bImagePointer = 2, aImagePointer = 3;\n    let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n\n    // Updating the pointer assignments based on the input image format\n    if (inputformat === 'RGBA') {\n      rTensorPointer = 0;\n      gTensorPointer = stride;\n      bTensorPointer = stride * 2;\n      aTensorPointer = stride * 3;\n    } else if (inputformat === 'RGB') {\n      rTensorPointer = 0;\n      gTensorPointer = stride;\n      bTensorPointer = stride * 2;\n    } else if (inputformat === 'RBG') {\n      rTensorPointer = 0;\n      bTensorPointer = stride;\n      gTensorPointer = stride * 2;\n    }\n\n    image = pixels2DContext.createImageData(width, height);\n\n    for (let i = 0; i < height * width;\n         rImagePointer += step, gImagePointer += step, bImagePointer += step, aImagePointer += step, i++) {\n      image.data[rImagePointer] = ((tensor.data[rTensorPointer++] as number) - normBias[0]) * normMean[0];  // R value\n      image.data[gImagePointer] = ((tensor.data[gTensorPointer++] as number) - normBias[1]) * normMean[1];  // G value\n      image.data[bImagePointer] = ((tensor.data[bTensorPointer++] as number) - normBias[2]) * normMean[2];  // B value\n      image.data[aImagePointer] = aTensorPointer === -1 ?\n          255 :\n          ((tensor.data[aTensorPointer++] as number) - normBias[3]) * normMean[3];  // A value\n    }\n\n  } else {\n    throw new Error('Can not access image data');\n  }\n  return image;\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {OptionsDimensions, OptionsFormat, OptionsNormalizationParameters, OptionsTensorFormat, OptionsTensorLayout, TensorFromGpuBufferOptions, TensorFromImageBitmapOptions, TensorFromImageDataOptions, TensorFromImageElementOptions, TensorFromTextureOptions, TensorFromUrlOptions} from './tensor-factory.js';\nimport {Tensor} from './tensor-impl.js';\nimport {Tensor as TensorInterface} from './tensor.js';\n\ninterface BufferToTensorOptions extends OptionsDimensions, OptionsTensorLayout, OptionsNormalizationParameters,\n                                        OptionsFormat, OptionsTensorFormat {}\n\n/**\n * Create a new tensor object from image object\n *\n * @param buffer - Extracted image buffer data - assuming RGBA format\n * @param imageFormat - input image configuration - required configurations height, width, format\n * @param tensorFormat - output tensor configuration - Default is RGB format\n */\nexport const bufferToTensor = (buffer: Uint8ClampedArray|undefined, options: BufferToTensorOptions): Tensor => {\n  if (buffer === undefined) {\n    throw new Error('Image buffer must be defined');\n  }\n  if (options.height === undefined || options.width === undefined) {\n    throw new Error('Image height and width must be defined');\n  }\n  if (options.tensorLayout === 'NHWC') {\n    throw new Error('NHWC Tensor layout is not supported yet');\n  }\n\n  const {height, width} = options;\n\n  const norm = options.norm ?? {mean: 255, bias: 0};\n  let normMean: [number, number, number, number];\n  let normBias: [number, number, number, number];\n\n  if (typeof (norm.mean) === 'number') {\n    normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n  } else {\n    normMean = [norm.mean![0], norm.mean![1], norm.mean![2], norm.mean![3] ?? 255];\n  }\n\n  if (typeof (norm.bias) === 'number') {\n    normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n  } else {\n    normBias = [norm.bias![0], norm.bias![1], norm.bias![2], norm.bias![3] ?? 0];\n  }\n\n  const inputformat = options.format !== undefined ? options.format : 'RGBA';\n  // default value is RGBA since imagedata and HTMLImageElement uses it\n\n  const outputformat =\n      options.tensorFormat !== undefined ? (options.tensorFormat !== undefined ? options.tensorFormat : 'RGB') : 'RGB';\n  const stride = height * width;\n  const float32Data = outputformat === 'RGBA' ? new Float32Array(stride * 4) : new Float32Array(stride * 3);\n\n  // Default pointer assignments\n  let step = 4, rImagePointer = 0, gImagePointer = 1, bImagePointer = 2, aImagePointer = 3;\n  let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n\n  // Updating the pointer assignments based on the input image format\n  if (inputformat === 'RGB') {\n    step = 3;\n    rImagePointer = 0;\n    gImagePointer = 1;\n    bImagePointer = 2;\n    aImagePointer = -1;\n  }\n\n  // Updating the pointer assignments based on the output tensor format\n  if (outputformat === 'RGBA') {\n    aTensorPointer = stride * 3;\n  } else if (outputformat === 'RBG') {\n    rTensorPointer = 0;\n    bTensorPointer = stride;\n    gTensorPointer = stride * 2;\n  } else if (outputformat === 'BGR') {\n    bTensorPointer = 0;\n    gTensorPointer = stride;\n    rTensorPointer = stride * 2;\n  }\n\n  for (let i = 0; i < stride;\n       i++, rImagePointer += step, bImagePointer += step, gImagePointer += step, aImagePointer += step) {\n    float32Data[rTensorPointer++] = (buffer[rImagePointer] + normBias[0]) / normMean[0];\n    float32Data[gTensorPointer++] = (buffer[gImagePointer] + normBias[1]) / normMean[1];\n    float32Data[bTensorPointer++] = (buffer[bImagePointer] + normBias[2]) / normMean[2];\n    if (aTensorPointer !== -1 && aImagePointer !== -1) {\n      float32Data[aTensorPointer++] = (buffer[aImagePointer] + normBias[3]) / normMean[3];\n    }\n  }\n\n  // Float32Array -> ort.Tensor\n  const outputTensor = outputformat === 'RGBA' ? new Tensor('float32', float32Data, [1, 4, height, width]) :\n                                                 new Tensor('float32', float32Data, [1, 3, height, width]);\n  return outputTensor;\n};\n\n/**\n * implementation of Tensor.fromImage().\n */\nexport const tensorFromImage = async(\n    image: ImageData|HTMLImageElement|ImageBitmap|string,\n    options?: TensorFromImageDataOptions|TensorFromImageElementOptions|TensorFromImageBitmapOptions|\n    TensorFromUrlOptions): Promise<Tensor> => {\n  // checking the type of image object\n  const isHTMLImageEle = typeof (HTMLImageElement) !== 'undefined' && image instanceof HTMLImageElement;\n  const isImageDataEle = typeof (ImageData) !== 'undefined' && image instanceof ImageData;\n  const isImageBitmap = typeof (ImageBitmap) !== 'undefined' && image instanceof ImageBitmap;\n  const isString = typeof image === 'string';\n\n  let data: Uint8ClampedArray|undefined;\n  let bufferToTensorOptions: BufferToTensorOptions = options ?? {};\n\n  const createCanvas = () => {\n    if (typeof document !== 'undefined') {\n      return document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      return new OffscreenCanvas(1, 1);\n    } else {\n      throw new Error('Canvas is not supported');\n    }\n  };\n  const createCanvasContext = (canvas: HTMLCanvasElement|OffscreenCanvas) => {\n    if (canvas instanceof HTMLCanvasElement) {\n      return canvas.getContext('2d');\n    } else if (canvas instanceof OffscreenCanvas) {\n      return canvas.getContext('2d') as OffscreenCanvasRenderingContext2D;\n    } else {\n      return null;\n    }\n  };\n  // filling and checking image configuration options\n  if (isHTMLImageEle) {\n    // HTMLImageElement - image object - format is RGBA by default\n    const canvas = createCanvas();\n    canvas.width = image.width;\n    canvas.height = image.height;\n    const pixels2DContext = createCanvasContext(canvas);\n\n    if (pixels2DContext != null) {\n      let height = image.height;\n      let width = image.width;\n      if (options !== undefined && options.resizedHeight !== undefined && options.resizedWidth !== undefined) {\n        height = options.resizedHeight;\n        width = options.resizedWidth;\n      }\n\n      if (options !== undefined) {\n        bufferToTensorOptions = options;\n        if (options.tensorFormat !== undefined) {\n          throw new Error('Image input config format must be RGBA for HTMLImageElement');\n        } else {\n          bufferToTensorOptions.tensorFormat = 'RGBA';\n        }\n        bufferToTensorOptions.height = height;\n        bufferToTensorOptions.width = width;\n      } else {\n        bufferToTensorOptions.tensorFormat = 'RGBA';\n        bufferToTensorOptions.height = height;\n        bufferToTensorOptions.width = width;\n      }\n\n      pixels2DContext.drawImage(image, 0, 0);\n      data = pixels2DContext.getImageData(0, 0, width, height).data;\n    } else {\n      throw new Error('Can not access image data');\n    }\n  } else if (isImageDataEle) {\n    let height: number;\n    let width: number;\n\n    if (options !== undefined && options.resizedWidth !== undefined && options.resizedHeight !== undefined) {\n      height = options.resizedHeight;\n      width = options.resizedWidth;\n    } else {\n      height = image.height;\n      width = image.width;\n    }\n\n    if (options !== undefined) {\n      bufferToTensorOptions = options;\n    }\n    bufferToTensorOptions.format = 'RGBA';\n    bufferToTensorOptions.height = height;\n    bufferToTensorOptions.width = width;\n\n    if (options !== undefined) {\n      const tempCanvas = createCanvas();\n\n      tempCanvas.width = width;\n      tempCanvas.height = height;\n\n      const pixels2DContext = createCanvasContext(tempCanvas);\n\n      if (pixels2DContext != null) {\n        pixels2DContext.putImageData(image, 0, 0);\n        data = pixels2DContext.getImageData(0, 0, width, height).data;\n      } else {\n        throw new Error('Can not access image data');\n      }\n    } else {\n      data = image.data;\n    }\n  } else if (isImageBitmap) {\n    // ImageBitmap - image object - format must be provided by user\n    if (options === undefined) {\n      throw new Error('Please provide image config with format for Imagebitmap');\n    }\n\n    const canvas = createCanvas();\n    canvas.width = image.width;\n    canvas.height = image.height;\n    const pixels2DContext = createCanvasContext(canvas);\n\n    if (pixels2DContext != null) {\n      const height = image.height;\n      const width = image.width;\n      pixels2DContext.drawImage(image, 0, 0, width, height);\n      data = pixels2DContext.getImageData(0, 0, width, height).data;\n      bufferToTensorOptions.height = height;\n      bufferToTensorOptions.width = width;\n      return bufferToTensor(data, bufferToTensorOptions);\n    } else {\n      throw new Error('Can not access image data');\n    }\n  } else if (isString) {\n    return new Promise((resolve, reject) => {\n      const canvas = createCanvas();\n      const context = createCanvasContext(canvas);\n      if (!image || !context) {\n        return reject();\n      }\n      const newImage = new Image();\n      newImage.crossOrigin = 'Anonymous';\n      newImage.src = image;\n      newImage.onload = () => {\n        canvas.width = newImage.width;\n        canvas.height = newImage.height;\n        context.drawImage(newImage, 0, 0, canvas.width, canvas.height);\n        const img = context.getImageData(0, 0, canvas.width, canvas.height);\n\n        bufferToTensorOptions.height = canvas.height;\n        bufferToTensorOptions.width = canvas.width;\n        resolve(bufferToTensor(img.data, bufferToTensorOptions));\n      };\n    });\n  } else {\n    throw new Error('Input data provided is not supported - aborted tensor creation');\n  }\n\n  if (data !== undefined) {\n    return bufferToTensor(data, bufferToTensorOptions);\n  } else {\n    throw new Error('Input data provided is not supported - aborted tensor creation');\n  }\n};\n\n/**\n * implementation of Tensor.fromTexture().\n */\nexport const tensorFromTexture = <T extends TensorInterface.TextureDataTypes>(\n    texture: TensorInterface.TextureType, options: TensorFromTextureOptions<T>): Tensor => {\n  const {width, height, download, dispose} = options;\n  // Always assume RGBAF32. TODO: support different texture format\n  const dims = [1, height, width, 4];\n  return new Tensor({location: 'texture', type: 'float32', texture, dims, download, dispose});\n};\n\n/**\n * implementation of Tensor.fromGpuBuffer().\n */\nexport const tensorFromGpuBuffer = <T extends TensorInterface.GpuBufferDataTypes>(\n    gpuBuffer: TensorInterface.GpuBufferType, options: TensorFromGpuBufferOptions<T>): Tensor => {\n  const {dataType, dims, download, dispose} = options;\n  return new Tensor({location: 'gpu-buffer', type: dataType ?? 'float32', gpuBuffer, dims, download, dispose});\n};\n\n/**\n * implementation of Tensor.fromPinnedBuffer().\n */\nexport const tensorFromPinnedBuffer = <T extends TensorInterface.CpuPinnedDataTypes>(\n    type: T, buffer: TensorInterface.DataTypeMap[T], dims?: readonly number[]): Tensor =>\n    new Tensor({location: 'cpu-pinned', type, data: buffer, dims: dims ?? [buffer.length]});\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from './tensor.js';\n\nexport type SupportedTypedArrayConstructors = Float32ArrayConstructor|Uint8ArrayConstructor|Int8ArrayConstructor|\n    Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|Uint8ArrayConstructor|\n    Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor;\nexport type SupportedTypedArray = InstanceType<SupportedTypedArrayConstructors>;\n\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nexport const NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP = new Map<string, SupportedTypedArrayConstructors>([\n  ['float32', Float32Array],\n  ['uint8', Uint8Array],\n  ['int8', Int8Array],\n  ['uint16', Uint16Array],\n  ['float16', Uint16Array],\n  ['int16', Int16Array],\n  ['int32', Int32Array],\n  ['bool', Uint8Array],\n  ['float64', Float64Array],\n  ['uint32', Uint32Array],\n]);\n\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nexport const NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP = new Map<SupportedTypedArrayConstructors, Tensor.Type>([\n  [Float32Array, 'float32'],\n  [Uint8Array, 'uint8'],\n  [Int8Array, 'int8'],\n  [Uint16Array, 'uint16'],\n  [Int16Array, 'int16'],\n  [Int32Array, 'int32'],\n  [Float64Array, 'float64'],\n  [Uint32Array, 'uint32'],\n]);\n\n// the following code allows delaying execution of BigInt checking. This allows lazy initialization for\n// NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP and NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP, which allows BigInt polyfill\n// if available.\nlet isBigIntChecked = false;\nexport const checkBigInt = () => {\n  if (!isBigIntChecked) {\n    isBigIntChecked = true;\n    const isBigInt64ArrayAvailable = typeof BigInt64Array !== 'undefined' && typeof BigInt64Array.from === 'function';\n    const isBigUint64ArrayAvailable =\n        typeof BigUint64Array !== 'undefined' && typeof BigUint64Array.from === 'function';\n\n    if (isBigInt64ArrayAvailable) {\n      NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('int64', BigInt64Array);\n      NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigInt64Array, 'int64');\n    }\n    if (isBigUint64ArrayAvailable) {\n      NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('uint64', BigUint64Array);\n      NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigUint64Array, 'uint64');\n    }\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {CpuPinnedConstructorParameters, GpuBufferConstructorParameters, TextureConstructorParameters} from './tensor-factory.js';\nimport {Tensor} from './tensor-impl.js';\n\n/**\n * calculate size from dims.\n *\n * @param dims the dims array. May be an illegal input.\n */\nexport const calculateSize = (dims: readonly unknown[]): number => {\n  let size = 1;\n  for (let i = 0; i < dims.length; i++) {\n    const dim = dims[i];\n    if (typeof dim !== 'number' || !Number.isSafeInteger(dim)) {\n      throw new TypeError(`dims[${i}] must be an integer, got: ${dim}`);\n    }\n    if (dim < 0) {\n      throw new RangeError(`dims[${i}] must be a non-negative integer, got: ${dim}`);\n    }\n    size *= dim;\n  }\n  return size;\n};\n\n/**\n * implementation of Tensor.reshape()\n */\nexport const tensorReshape = (tensor: Tensor, dims: readonly number[]): Tensor => {\n  switch (tensor.location) {\n    case 'cpu':\n      return new Tensor(tensor.type, tensor.data, dims);\n    case 'cpu-pinned':\n      return new Tensor({\n        location: 'cpu-pinned',\n        data: tensor.data as CpuPinnedConstructorParameters['data'],\n        type: tensor.type as CpuPinnedConstructorParameters['type'],\n        dims,\n      });\n    case 'texture':\n      return new Tensor({\n        location: 'texture',\n        texture: tensor.texture,\n        type: tensor.type as TextureConstructorParameters['type'],\n        dims,\n      });\n    case 'gpu-buffer':\n      return new Tensor({\n        location: 'gpu-buffer',\n        gpuBuffer: tensor.gpuBuffer,\n        type: tensor.type as GpuBufferConstructorParameters['type'],\n        dims,\n      });\n    default:\n      throw new Error(`tensorReshape: tensor location ${tensor.location} is not supported`);\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {tensorToDataURL, tensorToImageData} from './tensor-conversion-impl.js';\nimport {TensorToDataUrlOptions, TensorToImageDataOptions} from './tensor-conversion.js';\nimport {tensorFromGpuBuffer, tensorFromImage, tensorFromPinnedBuffer, tensorFromTexture} from './tensor-factory-impl.js';\nimport {CpuPinnedConstructorParameters, GpuBufferConstructorParameters, TensorFromGpuBufferOptions, TensorFromImageBitmapOptions, TensorFromImageDataOptions, TensorFromImageElementOptions, TensorFromTextureOptions, TensorFromUrlOptions, TextureConstructorParameters} from './tensor-factory.js';\nimport {checkBigInt, NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP, NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP, SupportedTypedArray, SupportedTypedArrayConstructors} from './tensor-impl-type-mapping.js';\nimport {calculateSize, tensorReshape} from './tensor-utils-impl.js';\nimport {Tensor as TensorInterface} from './tensor.js';\n\n// type aliases for those exported from Tensor interface\n\ntype TensorType = TensorInterface.Type;\ntype TensorDataType = TensorInterface.DataType;\ntype TensorDataLocation = TensorInterface.DataLocation;\ntype TensorTextureType = TensorInterface.TextureType;\ntype TensorGpuBufferType = TensorInterface.GpuBufferType;\n\n/**\n * the implementation of Tensor interface.\n *\n * @ignore\n */\nexport class Tensor implements TensorInterface {\n  // #region constructors\n\n  /**\n   * Construct a new CPU tensor object from the given type, data and dims.\n   */\n  constructor(\n      type: TensorType, data: TensorDataType|readonly string[]|readonly number[]|readonly boolean[],\n      dims?: readonly number[]);\n  /**\n   * Construct a new CPU tensor object from the given data and dims. Type is inferred from data.\n   */\n  constructor(data: TensorDataType|readonly string[]|readonly boolean[], dims?: readonly number[]);\n  /**\n   * Construct a new tensor object from the pinned CPU data with the given type and dims.\n   *\n   * Tensor's location will be set to 'cpu-pinned'.\n   *\n   * @param params - Specify the parameters to construct the tensor.\n   */\n  constructor(params: CpuPinnedConstructorParameters);\n  /**\n   * Construct a new tensor object from the WebGL texture with the given type and dims.\n   *\n   * Tensor's location will be set to 'texture'.\n   *\n   * @param params - Specify the parameters to construct the tensor.\n   */\n  constructor(params: TextureConstructorParameters);\n  /**\n   * Construct a new tensor object from the WebGPU buffer with the given type and dims.\n   *\n   * Tensor's location will be set to 'gpu-buffer'.\n   *\n   * @param params - Specify the parameters to construct the tensor.\n   */\n  constructor(params: GpuBufferConstructorParameters);\n\n  /**\n   * implementation.\n   */\n  constructor(\n      arg0: TensorType|TensorDataType|readonly string[]|readonly boolean[]|CpuPinnedConstructorParameters|\n      TextureConstructorParameters|GpuBufferConstructorParameters,\n      arg1?: TensorDataType|readonly number[]|readonly string[]|readonly boolean[], arg2?: readonly number[]) {\n    // perform one-time check for BigInt support\n    checkBigInt();\n\n    let type: TensorType;\n    let dims: readonly number[];\n\n    if (typeof arg0 === 'object' && 'location' in arg0) {\n      //\n      // constructing tensor from specific location\n      //\n      this.dataLocation = arg0.location;\n      type = arg0.type;\n      dims = arg0.dims;\n      switch (arg0.location) {\n        case 'cpu-pinned': {\n          const expectedTypedArrayConstructor = NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(type);\n          if (!expectedTypedArrayConstructor) {\n            throw new TypeError(`unsupported type \"${type}\" to create tensor from pinned buffer`);\n          }\n          if (!(arg0.data instanceof expectedTypedArrayConstructor)) {\n            throw new TypeError(`buffer should be of type ${expectedTypedArrayConstructor.name}`);\n          }\n          this.cpuData = arg0.data;\n          break;\n        }\n        case 'texture': {\n          if (type !== 'float32') {\n            throw new TypeError(`unsupported type \"${type}\" to create tensor from texture`);\n          }\n          this.gpuTextureData = arg0.texture;\n          this.downloader = arg0.download;\n          this.disposer = arg0.dispose;\n          break;\n        }\n        case 'gpu-buffer': {\n          if ((type !== 'float32' && type !== 'float16' && type !== 'int32' && type !== 'int64' && type !== 'uint32' &&\n               type !== 'bool')) {\n            throw new TypeError(`unsupported type \"${type}\" to create tensor from gpu buffer`);\n          }\n          this.gpuBufferData = arg0.gpuBuffer;\n          this.downloader = arg0.download;\n          this.disposer = arg0.dispose;\n          break;\n        }\n        default:\n          throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`);\n      }\n    } else {\n      //\n      // constructing tensor of location 'cpu'\n      //\n      let data: TensorDataType;\n      let maybeDims: typeof arg1|typeof arg2;\n      // check whether arg0 is type or data\n      if (typeof arg0 === 'string') {\n        //\n        // Override: constructor(type, data, ...)\n        //\n        type = arg0;\n        maybeDims = arg2;\n        if (arg0 === 'string') {\n          // string tensor\n          if (!Array.isArray(arg1)) {\n            throw new TypeError('A string tensor\\'s data must be a string array.');\n          }\n          // we don't check whether every element in the array is string; this is too slow. we assume it's correct and\n          // error will be populated at inference\n          data = arg1;\n        } else {\n          // numeric tensor\n          const typedArrayConstructor = NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(arg0);\n          if (typedArrayConstructor === undefined) {\n            throw new TypeError(`Unsupported tensor type: ${arg0}.`);\n          }\n          if (Array.isArray(arg1)) {\n            if (arg0 === 'float16') {\n              // Throw error here because when user try to use number array as data,\n              // e.g. new Tensor('float16', [1, 2, 3, 4], dims)), it will actually call\n              // Uint16Array.from(arg1) which generates wrong data.\n              throw new TypeError(\n                  'Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.');\n            } else if (arg0 === 'uint64' || arg0 === 'int64') {\n              // use 'as any' here because:\n              // 1. TypeScript's check on type of 'Array.isArray()' does not work with readonly arrays.\n              // see https://github.com/microsoft/TypeScript/issues/17002\n              // 2. TypeScript's check on union type of '(BigInt64ArrayConstructor|BigUint64ArrayConstructor).from()'\n              // does not accept parameter mapFn.\n              // 3. parameters of 'SupportedTypedArrayConstructors.from()' does not match the requirement of the union\n              // type.\n\n              // assume 'arg1' is of type \"readonly number[]|readonly bigint[]\" here.\n\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              data = (typedArrayConstructor as any).from(arg1, BigInt);\n            } else {\n              // assume 'arg1' is of type \"readonly number[]\" here.\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              data = (typedArrayConstructor as any).from(arg1);\n            }\n          } else if (arg1 instanceof typedArrayConstructor) {\n            data = arg1;\n          } else {\n            throw new TypeError(`A ${type} tensor's data must be type of ${typedArrayConstructor}`);\n          }\n        }\n      } else {\n        //\n        // Override: constructor(data, ...)\n        //\n        maybeDims = arg1;\n        if (Array.isArray(arg0)) {\n          // only boolean[] and string[] is supported\n          if (arg0.length === 0) {\n            throw new TypeError('Tensor type cannot be inferred from an empty array.');\n          }\n          const firstElementType = typeof arg0[0];\n          if (firstElementType === 'string') {\n            type = 'string';\n            data = arg0;\n          } else if (firstElementType === 'boolean') {\n            type = 'bool';\n            // 'arg0' is of type 'boolean[]'. Uint8Array.from(boolean[]) actually works, but typescript thinks this is\n            // wrong type. We use 'as any' to make it happy.\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            data = Uint8Array.from(arg0 as any[]);\n          } else {\n            throw new TypeError(`Invalid element type of data array: ${firstElementType}.`);\n          }\n        } else {\n          // get tensor type from TypedArray\n          const mappedType =\n              NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(arg0.constructor as SupportedTypedArrayConstructors);\n          if (mappedType === undefined) {\n            throw new TypeError(`Unsupported type for tensor data: ${arg0.constructor}.`);\n          }\n          type = mappedType;\n          data = arg0 as SupportedTypedArray;\n        }\n      }\n\n      // type and data is processed, now processing dims\n      if (maybeDims === undefined) {\n        // assume 1-D tensor if dims omitted\n        maybeDims = [data.length];\n      } else if (!Array.isArray(maybeDims)) {\n        throw new TypeError('A tensor\\'s dims must be a number array');\n      }\n      dims = maybeDims as readonly number[];\n\n      this.cpuData = data;\n      this.dataLocation = 'cpu';\n    }\n\n    // perform check on dims\n    const size = calculateSize(dims);\n    // if data is on CPU, check whether data length matches tensor size\n    if (this.cpuData && size !== this.cpuData.length) {\n      throw new Error(`Tensor's size(${size}) does not match data length(${this.cpuData.length}).`);\n    }\n\n    this.type = type;\n    this.dims = dims;\n    this.size = size;\n  }\n  // #endregion\n\n  // #region factory\n  static async fromImage(\n      image: ImageData|HTMLImageElement|ImageBitmap|string,\n      options?: TensorFromImageDataOptions|TensorFromImageElementOptions|TensorFromImageBitmapOptions|\n      TensorFromUrlOptions): Promise<TensorInterface> {\n    return tensorFromImage(image, options);\n  }\n\n  static fromTexture<T extends TensorInterface.TextureDataTypes>(\n      texture: TensorTextureType, options: TensorFromTextureOptions<T>): TensorInterface {\n    return tensorFromTexture(texture, options);\n  }\n\n  static fromGpuBuffer<T extends TensorInterface.GpuBufferDataTypes>(\n      gpuBuffer: TensorGpuBufferType, options: TensorFromGpuBufferOptions<T>): TensorInterface {\n    return tensorFromGpuBuffer(gpuBuffer, options);\n  }\n\n  static fromPinnedBuffer<T extends TensorInterface.CpuPinnedDataTypes>(\n      type: T, buffer: TensorInterface.DataTypeMap[T], dims?: readonly number[]): Tensor {\n    return tensorFromPinnedBuffer(type, buffer, dims);\n  }\n\n  // #endregion\n\n  // #region conversions\n  toDataURL(options?: TensorToDataUrlOptions): string {\n    return tensorToDataURL(this, options);\n  }\n\n  toImageData(options?: TensorToImageDataOptions): ImageData {\n    return tensorToImageData(this, options);\n  }\n  // #endregion\n\n  // #region public fields\n  readonly dims: readonly number[];\n  readonly type: TensorType;\n  readonly size: number;\n  // #endregion\n\n  // #region private fields\n\n  /**\n   * stores the location of the data.\n   */\n  private dataLocation: TensorDataLocation;\n\n  /**\n   * stores the data on CPU, if location is 'cpu' or 'cpu-pinned'. otherwise empty.\n   */\n  private cpuData?: TensorDataType;\n\n  /**\n   * stores the underlying texture when location is 'texture'. otherwise empty.\n   */\n  private gpuTextureData?: TensorTextureType;\n\n  /**\n   * stores the underlying GPU buffer when location is 'gpu-buffer'. otherwise empty.\n   */\n  private gpuBufferData?: TensorGpuBufferType;\n\n  /**\n   * stores an optional downloader function to download data from GPU to CPU.\n   */\n  private downloader?(): Promise<TensorDataType>;\n\n  /**\n   * a flag indicating whether the data is being downloaded from GPU to CPU.\n   */\n  private isDownloading?: boolean;\n\n  /**\n   * stores an optional disposer function to dispose the underlying data.\n   */\n  private disposer?(): void;\n  // #endregion\n\n  // #region properties\n  get data(): TensorDataType {\n    this.ensureValid();\n    if (!this.cpuData) {\n      throw new Error(\n          'The data is not on CPU. Use `getData()` to download GPU data to CPU, ' +\n          'or use `texture` or `gpuBuffer` property to access the GPU data directly.');\n    }\n    return this.cpuData;\n  }\n\n  get location(): TensorDataLocation {\n    return this.dataLocation;\n  }\n\n  get texture(): TensorTextureType {\n    this.ensureValid();\n    if (!this.gpuTextureData) {\n      throw new Error('The data is not stored as a WebGL texture.');\n    }\n    return this.gpuTextureData;\n  }\n\n  get gpuBuffer(): TensorGpuBufferType {\n    this.ensureValid();\n    if (!this.gpuBufferData) {\n      throw new Error('The data is not stored as a WebGPU buffer.');\n    }\n    return this.gpuBufferData;\n  }\n  // #endregion\n\n  // #region methods\n\n  async getData(releaseData?: boolean): Promise<TensorDataType> {\n    this.ensureValid();\n    switch (this.dataLocation) {\n      case 'cpu':\n      case 'cpu-pinned':\n        return this.data;\n      case 'texture':\n      case 'gpu-buffer': {\n        if (!this.downloader) {\n          throw new Error('The current tensor is not created with a specified data downloader.');\n        }\n        if (this.isDownloading) {\n          throw new Error('The current tensor is being downloaded.');\n        }\n        try {\n          this.isDownloading = true;\n          const data = await this.downloader();\n          this.downloader = undefined;\n          this.dataLocation = 'cpu';\n          this.cpuData = data;\n\n          if (releaseData && this.disposer) {\n            this.disposer();\n            this.disposer = undefined;\n          }\n\n          return data;\n\n        } finally {\n          this.isDownloading = false;\n        }\n      }\n      default:\n        throw new Error(`cannot get data from location: ${this.dataLocation}`);\n    }\n  }\n\n  dispose(): void {\n    if (this.isDownloading) {\n      throw new Error('The current tensor is being downloaded.');\n    }\n\n    if (this.disposer) {\n      this.disposer();\n      this.disposer = undefined;\n    }\n    this.cpuData = undefined;\n    this.gpuTextureData = undefined;\n    this.gpuBufferData = undefined;\n    this.downloader = undefined;\n    this.isDownloading = undefined;\n\n    this.dataLocation = 'none';\n  }\n\n  // #endregion\n\n  // #region tensor utilities\n  private ensureValid(): void {\n    if (this.dataLocation === 'none') {\n      throw new Error('The tensor is disposed.');\n    }\n  }\n\n  reshape(dims: readonly number[]): TensorInterface {\n    this.ensureValid();\n    if (this.downloader || this.disposer) {\n      throw new Error('Cannot reshape a tensor that owns GPU resource.');\n    }\n    return tensorReshape(this, dims);\n  }\n  // #endregion\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorFactory} from './tensor-factory.js';\nimport {Tensor as TensorImpl} from './tensor-impl.js';\nimport {TypedTensorUtils} from './tensor-utils.js';\n\n/* eslint-disable @typescript-eslint/no-redeclare */\n\n/**\n * represent a basic tensor with specified dimensions and data type.\n */\ninterface TypedTensorBase<T extends Tensor.Type> {\n  /**\n   * Get the dimensions of the tensor.\n   */\n  readonly dims: readonly number[];\n  /**\n   * Get the data type of the tensor.\n   */\n  readonly type: T;\n  /**\n   * Get the buffer data of the tensor.\n   *\n   * If the data is not on CPU (eg. it's in the form of WebGL texture or WebGPU buffer), throw error.\n   */\n  readonly data: Tensor.DataTypeMap[T];\n  /**\n   * Get the location of the data.\n   */\n  readonly location: Tensor.DataLocation;\n  /**\n   * Get the WebGL texture that holds the tensor data.\n   *\n   * If the data is not on GPU as WebGL texture, throw error.\n   */\n  readonly texture: Tensor.TextureType;\n  /**\n   * Get the WebGPU buffer that holds the tensor data.\n   *\n   * If the data is not on GPU as WebGPU buffer, throw error.\n   */\n  readonly gpuBuffer: Tensor.GpuBufferType;\n\n  /**\n   * Get the buffer data of the tensor.\n   *\n   * If the data is on CPU, returns the data immediately.\n   * If the data is on GPU, downloads the data and returns the promise.\n   *\n   * @param releaseData - whether release the data on GPU. Ignore if data is already on CPU.\n   */\n  getData(releaseData?: boolean): Promise<Tensor.DataTypeMap[T]>;\n\n  /**\n   * Dispose the tensor data.\n   *\n   * If the data is on CPU, remove its internal reference to the underlying data.\n   * If the data is on GPU, release the data on GPU.\n   *\n   * After calling this function, the tensor is considered no longer valid. Its location will be set to 'none'.\n   */\n  dispose(): void;\n}\n\nexport declare namespace Tensor {\n  interface DataTypeMap {\n    float32: Float32Array;\n    uint8: Uint8Array;\n    int8: Int8Array;\n    uint16: Uint16Array;\n    int16: Int16Array;\n    int32: Int32Array;\n    int64: BigInt64Array;\n    string: string[];\n    bool: Uint8Array;\n    float16: Uint16Array;  // Keep using Uint16Array until we have a concrete solution for float 16.\n    float64: Float64Array;\n    uint32: Uint32Array;\n    uint64: BigUint64Array;\n    // complex64: never;\n    // complex128: never;\n    // bfloat16: never;\n  }\n\n  interface ElementTypeMap {\n    float32: number;\n    uint8: number;\n    int8: number;\n    uint16: number;\n    int16: number;\n    int32: number;\n    int64: bigint;\n    string: string;\n    bool: boolean;\n    float16: number;  // Keep using Uint16Array until we have a concrete solution for float 16.\n    float64: number;\n    uint32: number;\n    uint64: bigint;\n    // complex64: never;\n    // complex128: never;\n    // bfloat16: never;\n  }\n\n  type DataType = DataTypeMap[Type];\n  type ElementType = ElementTypeMap[Type];\n\n  /**\n   * supported data types for constructing a tensor from a pinned CPU buffer\n   */\n  export type CpuPinnedDataTypes = Exclude<Tensor.Type, 'string'>;\n\n  /**\n   * type alias for WebGL texture\n   */\n  export type TextureType = WebGLTexture;\n\n  /**\n   * supported data types for constructing a tensor from a WebGL texture\n   */\n  export type TextureDataTypes = 'float32';\n\n  /**\n   * type alias for WebGPU buffer\n   *\n   * The reason why we don't use type \"GPUBuffer\" defined in webgpu.d.ts from @webgpu/types is because \"@webgpu/types\"\n   * requires \"@types/dom-webcodecs\" as peer dependency when using TypeScript < v5.1 and its version need to be chosen\n   * carefully according to the TypeScript version being used. This means so far there is not a way to keep every\n   * TypeScript version happy. It turns out that we will easily broke users on some TypeScript version.\n   *\n   * for more info see https://github.com/gpuweb/types/issues/127\n   */\n  export type GpuBufferType = {size: number; mapState: 'unmapped' | 'pending' | 'mapped'};\n\n  /**\n   * supported data types for constructing a tensor from a WebGPU buffer\n   */\n  export type GpuBufferDataTypes = 'float32'|'float16'|'int32'|'int64'|'uint32'|'bool';\n\n  /**\n   * represent where the tensor data is stored\n   */\n  export type DataLocation = 'none'|'cpu'|'cpu-pinned'|'texture'|'gpu-buffer';\n\n  /**\n   * represent the data type of a tensor\n   */\n  export type Type = keyof DataTypeMap;\n}\n\n/**\n * Represent multi-dimensional arrays to feed to or fetch from model inferencing.\n */\nexport interface TypedTensor<T extends Tensor.Type> extends TypedTensorBase<T>, TypedTensorUtils<T> {}\n/**\n * Represent multi-dimensional arrays to feed to or fetch from model inferencing.\n */\nexport interface Tensor extends TypedTensorBase<Tensor.Type>, TypedTensorUtils<Tensor.Type> {}\n\n/**\n * type TensorConstructor defines the constructors of 'Tensor' to create CPU tensor instances.\n */\nexport interface TensorConstructor {\n  // #region CPU tensor - specify element type\n  /**\n   * Construct a new string tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(type: 'string', data: Tensor.DataTypeMap['string']|readonly string[],\n      dims?: readonly number[]): TypedTensor<'string'>;\n\n  /**\n   * Construct a new bool tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(type: 'bool', data: Tensor.DataTypeMap['bool']|readonly boolean[], dims?: readonly number[]): TypedTensor<'bool'>;\n\n  /**\n   * Construct a new 64-bit integer typed tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new<T extends 'uint64'|'int64'>(\n      type: T, data: Tensor.DataTypeMap[T]|readonly bigint[]|readonly number[],\n      dims?: readonly number[]): TypedTensor<T>;\n\n  /**\n   * Construct a new numeric tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new<T extends Exclude<Tensor.Type, 'string'|'bool'|'uint64'|'int64'>>(\n      type: T, data: Tensor.DataTypeMap[T]|readonly number[], dims?: readonly number[]): TypedTensor<T>;\n  // #endregion\n\n  // #region CPU tensor - infer element types\n\n  /**\n   * Construct a new float32 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Float32Array, dims?: readonly number[]): TypedTensor<'float32'>;\n\n  /**\n   * Construct a new int8 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Int8Array, dims?: readonly number[]): TypedTensor<'int8'>;\n\n  /**\n   * Construct a new uint8 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Uint8Array, dims?: readonly number[]): TypedTensor<'uint8'>;\n\n  /**\n   * Construct a new uint16 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Uint16Array, dims?: readonly number[]): TypedTensor<'uint16'>;\n\n  /**\n   * Construct a new int16 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Int16Array, dims?: readonly number[]): TypedTensor<'int16'>;\n\n  /**\n   * Construct a new int32 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Int32Array, dims?: readonly number[]): TypedTensor<'int32'>;\n\n  /**\n   * Construct a new int64 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: BigInt64Array, dims?: readonly number[]): TypedTensor<'int64'>;\n\n  /**\n   * Construct a new string tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: readonly string[], dims?: readonly number[]): TypedTensor<'string'>;\n\n  /**\n   * Construct a new bool tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: readonly boolean[], dims?: readonly number[]): TypedTensor<'bool'>;\n\n  /**\n   * Construct a new float64 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Float64Array, dims?: readonly number[]): TypedTensor<'float64'>;\n\n  /**\n   * Construct a new uint32 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Uint32Array, dims?: readonly number[]): TypedTensor<'uint32'>;\n\n  /**\n   * Construct a new uint64 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: BigUint64Array, dims?: readonly number[]): TypedTensor<'uint64'>;\n\n  // #endregion\n\n  // #region CPU tensor - fall back to non-generic tensor type declaration\n\n  /**\n   * Construct a new tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(type: Tensor.Type, data: Tensor.DataType|readonly number[]|readonly string[]|readonly bigint[]|readonly boolean[],\n      dims?: readonly number[]): Tensor;\n\n  /**\n   * Construct a new tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Tensor.DataType, dims?: readonly number[]): Tensor;\n  // #endregion\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const Tensor = TensorImpl as (TensorConstructor & TensorFactory);\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from './env-impl.js';\n\nexport const TRACE = (deviceType: string, label: string) => {\n  if (!env.wasm.trace) {\n    return;\n  }\n  // eslint-disable-next-line no-console\n  console.timeStamp(`${deviceType}::ORT::${label}`);\n};\n\nconst TRACE_FUNC = (msg: string, extraMsg?: string) => {\n  const stack = new Error().stack?.split(/\\r\\n|\\r|\\n/g) || [];\n  let hasTraceFunc = false;\n  for (let i = 0; i < stack.length; i++) {\n    if (hasTraceFunc && !stack[i].includes('TRACE_FUNC')) {\n      let label = `FUNC_${msg}::${stack[i].trim().split(' ')[1]}`;\n      if (extraMsg) {\n        label += `::${extraMsg}`;\n      }\n      TRACE('CPU', label);\n      return;\n    }\n    if (stack[i].includes('TRACE_FUNC')) {\n      hasTraceFunc = true;\n    }\n  }\n};\n\nexport const TRACE_FUNC_BEGIN = (extraMsg?: string) => {\n  if (!env.wasm.trace) {\n    return;\n  }\n  TRACE_FUNC('BEGIN', extraMsg);\n};\n\nexport const TRACE_FUNC_END = (extraMsg?: string) => {\n  if (!env.wasm.trace) {\n    return;\n  }\n  TRACE_FUNC('END', extraMsg);\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {resolveBackend} from './backend-impl.js';\nimport {InferenceSessionHandler} from './backend.js';\nimport {InferenceSession as InferenceSessionInterface} from './inference-session.js';\nimport {OnnxValue} from './onnx-value.js';\nimport {Tensor} from './tensor.js';\nimport {TRACE_FUNC_BEGIN, TRACE_FUNC_END} from './trace.js';\n\ntype SessionOptions = InferenceSessionInterface.SessionOptions;\ntype RunOptions = InferenceSessionInterface.RunOptions;\ntype FeedsType = InferenceSessionInterface.FeedsType;\ntype FetchesType = InferenceSessionInterface.FetchesType;\ntype ReturnType = InferenceSessionInterface.ReturnType;\n\nexport class InferenceSession implements InferenceSessionInterface {\n  private constructor(handler: InferenceSessionHandler) {\n    this.handler = handler;\n  }\n  run(feeds: FeedsType, options?: RunOptions): Promise<ReturnType>;\n  run(feeds: FeedsType, fetches: FetchesType, options?: RunOptions): Promise<ReturnType>;\n  async run(feeds: FeedsType, arg1?: FetchesType|RunOptions, arg2?: RunOptions): Promise<ReturnType> {\n    TRACE_FUNC_BEGIN();\n    const fetches: {[name: string]: OnnxValue|null} = {};\n    let options: RunOptions = {};\n    // check inputs\n    if (typeof feeds !== 'object' || feeds === null || feeds instanceof Tensor || Array.isArray(feeds)) {\n      throw new TypeError(\n          '\\'feeds\\' must be an object that use input names as keys and OnnxValue as corresponding values.');\n    }\n\n    let isFetchesEmpty = true;\n    // determine which override is being used\n    if (typeof arg1 === 'object') {\n      if (arg1 === null) {\n        throw new TypeError('Unexpected argument[1]: cannot be null.');\n      }\n      if (arg1 instanceof Tensor) {\n        throw new TypeError('\\'fetches\\' cannot be a Tensor');\n      }\n\n      if (Array.isArray(arg1)) {\n        if (arg1.length === 0) {\n          throw new TypeError('\\'fetches\\' cannot be an empty array.');\n        }\n        isFetchesEmpty = false;\n        // output names\n        for (const name of arg1) {\n          if (typeof name !== 'string') {\n            throw new TypeError('\\'fetches\\' must be a string array or an object.');\n          }\n          if (this.outputNames.indexOf(name) === -1) {\n            throw new RangeError(`'fetches' contains invalid output name: ${name}.`);\n          }\n          fetches[name] = null;\n        }\n\n        if (typeof arg2 === 'object' && arg2 !== null) {\n          options = arg2;\n        } else if (typeof arg2 !== 'undefined') {\n          throw new TypeError('\\'options\\' must be an object.');\n        }\n      } else {\n        // decide whether arg1 is fetches or options\n        // if any output name is present and its value is valid OnnxValue, we consider it fetches\n        let isFetches = false;\n        const arg1Keys = Object.getOwnPropertyNames(arg1);\n        for (const name of this.outputNames) {\n          if (arg1Keys.indexOf(name) !== -1) {\n            const v = (arg1 as InferenceSessionInterface.NullableOnnxValueMapType)[name];\n            if (v === null || v instanceof Tensor) {\n              isFetches = true;\n              isFetchesEmpty = false;\n              fetches[name] = v;\n            }\n          }\n        }\n\n        if (isFetches) {\n          if (typeof arg2 === 'object' && arg2 !== null) {\n            options = arg2;\n          } else if (typeof arg2 !== 'undefined') {\n            throw new TypeError('\\'options\\' must be an object.');\n          }\n        } else {\n          options = arg1 as RunOptions;\n        }\n      }\n    } else if (typeof arg1 !== 'undefined') {\n      throw new TypeError('Unexpected argument[1]: must be \\'fetches\\' or \\'options\\'.');\n    }\n\n    // check if all inputs are in feed\n    for (const name of this.inputNames) {\n      if (typeof feeds[name] === 'undefined') {\n        throw new Error(`input '${name}' is missing in 'feeds'.`);\n      }\n    }\n\n    // if no fetches is specified, we use the full output names list\n    if (isFetchesEmpty) {\n      for (const name of this.outputNames) {\n        fetches[name] = null;\n      }\n    }\n\n    // feeds, fetches and options are prepared\n\n    const results = await this.handler.run(feeds, fetches, options);\n    const returnValue: {[name: string]: OnnxValue} = {};\n    for (const key in results) {\n      if (Object.hasOwnProperty.call(results, key)) {\n        const result = results[key];\n        if (result instanceof Tensor) {\n          returnValue[key] = result;\n        } else {\n          returnValue[key] = new Tensor(result.type, result.data, result.dims);\n        }\n      }\n    }\n    TRACE_FUNC_END();\n    return returnValue;\n  }\n\n  async release(): Promise<void> {\n    return this.handler.dispose();\n  }\n\n  static create(path: string, options?: SessionOptions): Promise<InferenceSessionInterface>;\n  static create(buffer: ArrayBufferLike, options?: SessionOptions): Promise<InferenceSessionInterface>;\n  static create(buffer: ArrayBufferLike, byteOffset: number, byteLength?: number, options?: SessionOptions):\n      Promise<InferenceSessionInterface>;\n  static create(buffer: Uint8Array, options?: SessionOptions): Promise<InferenceSessionInterface>;\n  static async create(\n      arg0: string|ArrayBufferLike|Uint8Array, arg1?: SessionOptions|number, arg2?: number,\n      arg3?: SessionOptions): Promise<InferenceSessionInterface> {\n    TRACE_FUNC_BEGIN();\n    // either load from a file or buffer\n    let filePathOrUint8Array: string|Uint8Array;\n    let options: SessionOptions = {};\n\n    if (typeof arg0 === 'string') {\n      filePathOrUint8Array = arg0;\n      if (typeof arg1 === 'object' && arg1 !== null) {\n        options = arg1;\n      } else if (typeof arg1 !== 'undefined') {\n        throw new TypeError('\\'options\\' must be an object.');\n      }\n    } else if (arg0 instanceof Uint8Array) {\n      filePathOrUint8Array = arg0;\n      if (typeof arg1 === 'object' && arg1 !== null) {\n        options = arg1;\n      } else if (typeof arg1 !== 'undefined') {\n        throw new TypeError('\\'options\\' must be an object.');\n      }\n    } else if (\n        arg0 instanceof ArrayBuffer ||\n        (typeof SharedArrayBuffer !== 'undefined' && arg0 instanceof SharedArrayBuffer)) {\n      const buffer = arg0;\n      let byteOffset = 0;\n      let byteLength = arg0.byteLength;\n      if (typeof arg1 === 'object' && arg1 !== null) {\n        options = arg1;\n      } else if (typeof arg1 === 'number') {\n        byteOffset = arg1;\n        if (!Number.isSafeInteger(byteOffset)) {\n          throw new RangeError('\\'byteOffset\\' must be an integer.');\n        }\n        if (byteOffset < 0 || byteOffset >= buffer.byteLength) {\n          throw new RangeError(`'byteOffset' is out of range [0, ${buffer.byteLength}).`);\n        }\n        byteLength = arg0.byteLength - byteOffset;\n        if (typeof arg2 === 'number') {\n          byteLength = arg2;\n          if (!Number.isSafeInteger(byteLength)) {\n            throw new RangeError('\\'byteLength\\' must be an integer.');\n          }\n          if (byteLength <= 0 || byteOffset + byteLength > buffer.byteLength) {\n            throw new RangeError(`'byteLength' is out of range (0, ${buffer.byteLength - byteOffset}].`);\n          }\n          if (typeof arg3 === 'object' && arg3 !== null) {\n            options = arg3;\n          } else if (typeof arg3 !== 'undefined') {\n            throw new TypeError('\\'options\\' must be an object.');\n          }\n        } else if (typeof arg2 !== 'undefined') {\n          throw new TypeError('\\'byteLength\\' must be a number.');\n        }\n      } else if (typeof arg1 !== 'undefined') {\n        throw new TypeError('\\'options\\' must be an object.');\n      }\n      filePathOrUint8Array = new Uint8Array(buffer, byteOffset, byteLength);\n    } else {\n      throw new TypeError('Unexpected argument[0]: must be \\'path\\' or \\'buffer\\'.');\n    }\n\n    // get backend hints\n    const eps = options.executionProviders || [];\n    const backendHints = eps.map(i => typeof i === 'string' ? i : i.name);\n    const backend = await resolveBackend(backendHints);\n    const handler = await backend.createInferenceSessionHandler(filePathOrUint8Array, options);\n    TRACE_FUNC_END();\n    return new InferenceSession(handler);\n  }\n\n  startProfiling(): void {\n    this.handler.startProfiling();\n  }\n  endProfiling(): void {\n    this.handler.endProfiling();\n  }\n\n  get inputNames(): readonly string[] {\n    return this.handler.inputNames;\n  }\n  get outputNames(): readonly string[] {\n    return this.handler.outputNames;\n  }\n\n  private handler: InferenceSessionHandler;\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession as InferenceSessionImpl} from './inference-session-impl.js';\nimport {OnnxModelOptions} from './onnx-model.js';\nimport {OnnxValue, OnnxValueDataLocation} from './onnx-value.js';\n\n/* eslint-disable @typescript-eslint/no-redeclare */\n\nexport declare namespace InferenceSession {\n  // #region input/output types\n\n  type OnnxValueMapType = {readonly [name: string]: OnnxValue};\n  type NullableOnnxValueMapType = {readonly [name: string]: OnnxValue | null};\n\n  /**\n   * A feeds (model inputs) is an object that uses input names as keys and OnnxValue as corresponding values.\n   */\n  type FeedsType = OnnxValueMapType;\n\n  /**\n   * A fetches (model outputs) could be one of the following:\n   *\n   * - Omitted. Use model's output names definition.\n   * - An array of string indicating the output names.\n   * - An object that use output names as keys and OnnxValue or null as corresponding values.\n   *\n   * @remark\n   * different from input argument, in output, OnnxValue is optional. If an OnnxValue is present it will be\n   * used as a pre-allocated value by the inference engine; if omitted, inference engine will allocate buffer\n   * internally.\n   */\n  type FetchesType = readonly string[]|NullableOnnxValueMapType;\n\n  /**\n   * A inferencing return type is an object that uses output names as keys and OnnxValue as corresponding values.\n   */\n  type ReturnType = OnnxValueMapType;\n\n  // #endregion\n\n  // #region session options\n\n  /**\n   * A set of configurations for session behavior.\n   */\n  export interface SessionOptions extends OnnxModelOptions {\n    /**\n     * An array of execution provider options.\n     *\n     * An execution provider option can be a string indicating the name of the execution provider,\n     * or an object of corresponding type.\n     */\n    executionProviders?: readonly ExecutionProviderConfig[];\n\n    /**\n     * The intra OP threads number.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native).\n     */\n    intraOpNumThreads?: number;\n\n    /**\n     * The inter OP threads number.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native).\n     */\n    interOpNumThreads?: number;\n\n    /**\n     * The free dimension override.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    freeDimensionOverrides?: {readonly [dimensionName: string]: number};\n\n    /**\n     * The optimization level.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    graphOptimizationLevel?: 'disabled'|'basic'|'extended'|'all';\n\n    /**\n     * Whether enable CPU memory arena.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    enableCpuMemArena?: boolean;\n\n    /**\n     * Whether enable memory pattern.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    enableMemPattern?: boolean;\n\n    /**\n     * Execution mode.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    executionMode?: 'sequential'|'parallel';\n\n    /**\n     * Optimized model file path.\n     *\n     * If this setting is specified, the optimized model will be dumped. In browser, a blob will be created\n     * with a pop-up window.\n     */\n    optimizedModelFilePath?: string;\n\n    /**\n     * Wether enable profiling.\n     *\n     * This setting is a placeholder for a future use.\n     */\n    enableProfiling?: boolean;\n\n    /**\n     * File prefix for profiling.\n     *\n     * This setting is a placeholder for a future use.\n     */\n    profileFilePrefix?: string;\n\n    /**\n     * Log ID.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    logId?: string;\n\n    /**\n     * Log severity level. See\n     * https://github.com/microsoft/onnxruntime/blob/main/include/onnxruntime/core/common/logging/severity.h\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    logSeverityLevel?: 0|1|2|3|4;\n\n    /**\n     * Log verbosity level.\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     */\n    logVerbosityLevel?: number;\n\n    /**\n     * Specify string as a preferred data location for all outputs, or an object that use output names as keys and a\n     * preferred data location as corresponding values.\n     *\n     * This setting is available only in ONNXRuntime Web for WebGL and WebGPU EP.\n     */\n    preferredOutputLocation?: OnnxValueDataLocation|{readonly [outputName: string]: OnnxValueDataLocation};\n\n    /**\n     * Store configurations for a session. See\n     * https://github.com/microsoft/onnxruntime/blob/main/include/onnxruntime/core/session/\n     * onnxruntime_session_options_config_keys.h\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     *\n     * @example\n     * ```js\n     * extra: {\n     *   session: {\n     *     set_denormal_as_zero: \"1\",\n     *     disable_prepacking: \"1\"\n     *   },\n     *   optimization: {\n     *     enable_gelu_approximation: \"1\"\n     *   }\n     * }\n     * ```\n     */\n    extra?: Record<string, unknown>;\n  }\n\n  // #region execution providers\n\n  // Currently, we have the following backends to support execution providers:\n  // Backend Node.js binding: supports 'cpu' and 'cuda'.\n  // Backend WebAssembly: supports 'cpu', 'wasm', 'webgpu' and 'webnn'.\n  // Backend ONNX.js: supports 'webgl'.\n  // Backend React Native: supports 'cpu', 'xnnpack', 'coreml' (iOS), 'nnapi' (Android).\n  interface ExecutionProviderOptionMap {\n    cpu: CpuExecutionProviderOption;\n    coreml: CoreMlExecutionProviderOption;\n    cuda: CudaExecutionProviderOption;\n    dml: DmlExecutionProviderOption;\n    tensorrt: TensorRtExecutionProviderOption;\n    wasm: WebAssemblyExecutionProviderOption;\n    webgl: WebGLExecutionProviderOption;\n    xnnpack: XnnpackExecutionProviderOption;\n    webgpu: WebGpuExecutionProviderOption;\n    webnn: WebNNExecutionProviderOption;\n    nnapi: NnapiExecutionProviderOption;\n  }\n\n  type ExecutionProviderName = keyof ExecutionProviderOptionMap;\n  type ExecutionProviderConfig =\n      ExecutionProviderOptionMap[ExecutionProviderName]|ExecutionProviderOption|ExecutionProviderName|string;\n\n  export interface ExecutionProviderOption {\n    readonly name: string;\n  }\n  export interface CpuExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'cpu';\n    useArena?: boolean;\n  }\n  export interface CudaExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'cuda';\n    deviceId?: number;\n  }\n  export interface CoreMlExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'coreml';\n    coreMlFlags?: number;\n  }\n  export interface DmlExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'dml';\n    deviceId?: number;\n  }\n  export interface TensorRtExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'tensorrt';\n    deviceId?: number;\n  }\n  export interface WebAssemblyExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'wasm';\n  }\n  export interface WebGLExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'webgl';\n    // TODO: add flags\n  }\n  export interface XnnpackExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'xnnpack';\n  }\n  export interface WebGpuExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'webgpu';\n    preferredLayout?: 'NCHW'|'NHWC';\n  }\n  export interface WebNNExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'webnn';\n    deviceType?: 'cpu'|'gpu';\n    numThreads?: number;\n    powerPreference?: 'default'|'low-power'|'high-performance';\n  }\n  export interface CoreMLExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'coreml';\n    useCPUOnly?: boolean;\n    enableOnSubgraph?: boolean;\n    onlyEnableDeviceWithANE?: boolean;\n  }\n  export interface NnapiExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'nnapi';\n    useFP16?: boolean;\n    useNCHW?: boolean;\n    cpuDisabled?: boolean;\n    cpuOnly?: boolean;\n  }\n  // #endregion\n\n  // #endregion\n\n  // #region run options\n\n  /**\n   * A set of configurations for inference run behavior\n   */\n  export interface RunOptions {\n    /**\n     * Log severity level. See\n     * https://github.com/microsoft/onnxruntime/blob/main/include/onnxruntime/core/common/logging/severity.h\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    logSeverityLevel?: 0|1|2|3|4;\n\n    /**\n     * Log verbosity level.\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     */\n    logVerbosityLevel?: number;\n\n    /**\n     * Terminate all incomplete OrtRun calls as soon as possible if true\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     */\n    terminate?: boolean;\n\n    /**\n     * A tag for the Run() calls using this\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    tag?: string;\n\n    /**\n     * Set a single run configuration entry. See\n     * https://github.com/microsoft/onnxruntime/blob/main/include/onnxruntime/core/session/\n     * onnxruntime_run_options_config_keys.h\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     *\n     * @example\n     *\n     * ```js\n     * extra: {\n     *   memory: {\n     *     enable_memory_arena_shrinkage: \"1\",\n     *   }\n     * }\n     * ```\n     */\n    extra?: Record<string, unknown>;\n  }\n\n  // #endregion\n\n  // #region value metadata\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-interface\n  interface ValueMetadata {\n    // TBD\n  }\n\n  // #endregion\n}\n\n/**\n * Represent a runtime instance of an ONNX model.\n */\nexport interface InferenceSession {\n  // #region run()\n\n  /**\n   * Execute the model asynchronously with the given feeds and options.\n   *\n   * @param feeds - Representation of the model input. See type description of `InferenceSession.InputType` for detail.\n   * @param options - Optional. A set of options that controls the behavior of model inference.\n   * @returns A promise that resolves to a map, which uses output names as keys and OnnxValue as corresponding values.\n   */\n  run(feeds: InferenceSession.FeedsType, options?: InferenceSession.RunOptions): Promise<InferenceSession.ReturnType>;\n\n  /**\n   * Execute the model asynchronously with the given feeds, fetches and options.\n   *\n   * @param feeds - Representation of the model input. See type description of `InferenceSession.InputType` for detail.\n   * @param fetches - Representation of the model output. See type description of `InferenceSession.OutputType` for\n   * detail.\n   * @param options - Optional. A set of options that controls the behavior of model inference.\n   * @returns A promise that resolves to a map, which uses output names as keys and OnnxValue as corresponding values.\n   */\n  run(feeds: InferenceSession.FeedsType, fetches: InferenceSession.FetchesType,\n      options?: InferenceSession.RunOptions): Promise<InferenceSession.ReturnType>;\n\n  // #endregion\n\n  // #region release()\n\n  /**\n   * Release the inference session and the underlying resources.\n   */\n  release(): Promise<void>;\n\n  // #endregion\n\n  // #region profiling\n\n  /**\n   * Start profiling.\n   */\n  startProfiling(): void;\n\n  /**\n   * End profiling.\n   */\n  endProfiling(): void;\n\n  // #endregion\n\n  // #region metadata\n\n  /**\n   * Get input names of the loaded model.\n   */\n  readonly inputNames: readonly string[];\n\n  /**\n   * Get output names of the loaded model.\n   */\n  readonly outputNames: readonly string[];\n\n  // /**\n  //  * Get input metadata of the loaded model.\n  //  */\n  // readonly inputMetadata: ReadonlyArray<Readonly<InferenceSession.ValueMetadata>>;\n\n  // /**\n  //  * Get output metadata of the loaded model.\n  //  */\n  // readonly outputMetadata: ReadonlyArray<Readonly<InferenceSession.ValueMetadata>>;\n\n  // #endregion\n}\n\nexport interface InferenceSessionFactory {\n  // #region create()\n\n  /**\n   * Create a new inference session and load model asynchronously from an ONNX model file.\n   *\n   * @param uri - The URI or file path of the model to load.\n   * @param options - specify configuration for creating a new inference session.\n   * @returns A promise that resolves to an InferenceSession object.\n   */\n  create(uri: string, options?: InferenceSession.SessionOptions): Promise<InferenceSession>;\n\n  /**\n   * Create a new inference session and load model asynchronously from an array bufer.\n   *\n   * @param buffer - An ArrayBuffer representation of an ONNX model.\n   * @param options - specify configuration for creating a new inference session.\n   * @returns A promise that resolves to an InferenceSession object.\n   */\n  create(buffer: ArrayBufferLike, options?: InferenceSession.SessionOptions): Promise<InferenceSession>;\n\n  /**\n   * Create a new inference session and load model asynchronously from segment of an array bufer.\n   *\n   * @param buffer - An ArrayBuffer representation of an ONNX model.\n   * @param byteOffset - The beginning of the specified portion of the array buffer.\n   * @param byteLength - The length in bytes of the array buffer.\n   * @param options - specify configuration for creating a new inference session.\n   * @returns A promise that resolves to an InferenceSession object.\n   */\n  create(buffer: ArrayBufferLike, byteOffset: number, byteLength?: number, options?: InferenceSession.SessionOptions):\n      Promise<InferenceSession>;\n\n  /**\n   * Create a new inference session and load model asynchronously from a Uint8Array.\n   *\n   * @param buffer - A Uint8Array representation of an ONNX model.\n   * @param options - specify configuration for creating a new inference session.\n   * @returns A promise that resolves to an InferenceSession object.\n   */\n  create(buffer: Uint8Array, options?: InferenceSession.SessionOptions): Promise<InferenceSession>;\n\n  // #endregion\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const InferenceSession: InferenceSessionFactory = InferenceSessionImpl;\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from './tensor.js';\n\ntype NonTensorType = never;\n\n/**\n * Type OnnxValue Represents both tensors and non-tensors value for model's inputs/outputs.\n *\n * NOTE: currently not support non-tensor\n */\nexport type OnnxValue = Tensor|NonTensorType;\n\n/**\n * Type OnnxValueDataLocation represents the location of the data of an OnnxValue.\n */\nexport type OnnxValueDataLocation = Tensor.DataLocation;\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {resolveBackend} from './backend-impl.js';\nimport {SessionHandler, TrainingSessionHandler} from './backend.js';\nimport {InferenceSession as InferenceSession} from './inference-session.js';\nimport {OnnxValue} from './onnx-value.js';\nimport {Tensor} from './tensor.js';\nimport {TrainingSession as TrainingSessionInterface, TrainingSessionCreateOptions} from './training-session.js';\n\ntype SessionOptions = InferenceSession.SessionOptions;\ntype FeedsType = InferenceSession.FeedsType;\ntype FetchesType = InferenceSession.FetchesType;\ntype ReturnType = InferenceSession.ReturnType;\ntype RunOptions = InferenceSession.RunOptions;\n\nconst noBackendErrMsg: string = 'Training backend could not be resolved. ' +\n    'Make sure you\\'re using the correct configuration & WebAssembly files.';\n\nexport class TrainingSession implements TrainingSessionInterface {\n  private constructor(handler: TrainingSessionHandler, hasOptimizerModel: boolean, hasEvalModel: boolean) {\n    this.handler = handler;\n    this.hasOptimizerModel = hasOptimizerModel;\n    this.hasEvalModel = hasEvalModel;\n  }\n  private handler: TrainingSessionHandler;\n  private hasOptimizerModel: boolean;\n  private hasEvalModel: boolean;\n\n  get trainingInputNames(): readonly string[] {\n    return this.handler.inputNames;\n  }\n  get trainingOutputNames(): readonly string[] {\n    return this.handler.outputNames;\n  }\n\n  get evalInputNames(): readonly string[] {\n    if (this.hasEvalModel) {\n      return this.handler.evalInputNames;\n    } else {\n      throw new Error('This training session has no evalModel loaded.');\n    }\n  }\n  get evalOutputNames(): readonly string[] {\n    if (this.hasEvalModel) {\n      return this.handler.evalOutputNames;\n    } else {\n      throw new Error('This training session has no evalModel loaded.');\n    }\n  }\n\n  static async create(trainingOptions: TrainingSessionCreateOptions, sessionOptions?: SessionOptions):\n      Promise<TrainingSession> {\n    const evalModel: string|Uint8Array = trainingOptions.evalModel || '';\n    const optimizerModel: string|Uint8Array = trainingOptions.optimizerModel || '';\n    const options: SessionOptions = sessionOptions || {};\n\n    // get backend hints\n    const eps = options.executionProviders || [];\n    const backendHints = eps.map(i => typeof i === 'string' ? i : i.name);\n    const backend = await resolveBackend(backendHints);\n    if (backend.createTrainingSessionHandler) {\n      const handler = await backend.createTrainingSessionHandler(\n          trainingOptions.checkpointState, trainingOptions.trainModel, evalModel, optimizerModel, options);\n      return new TrainingSession(handler, !!trainingOptions.optimizerModel, !!trainingOptions.evalModel);\n    } else {\n      throw new Error(noBackendErrMsg);\n    }\n  }\n\n  /**\n   * Helper function for runTrainStep and future runStep methods that handles the type-narrowing conversion from\n   * the given parameters to SessionHandler.FetchesType and RunOptions.\n   *\n   * @param inputNames the feeds object is checked that they contain all input names in the provided list of input\n   * names.\n   * @param outputNames the fetches object is checked that their keys match up with valid names in the list of output\n   * names.\n   * @param feeds the required input\n   * @param arg1 narrowed & converted into the SessionHandler.FetchesType or RunOptions object\n   * @param arg2 optional RunOptions object.\n   * @returns\n   */\n  typeNarrowingForRunStep(\n      inputNames: readonly string[], outputNames: readonly string[], feeds: FeedsType, arg1?: FetchesType|RunOptions,\n      arg2?: RunOptions): [SessionHandler.FetchesType, RunOptions] {\n    const fetches: {[name: string]: OnnxValue|null} = {};\n    let options: RunOptions = {};\n    // check inputs\n    if (typeof feeds !== 'object' || feeds === null || feeds instanceof Tensor || Array.isArray(feeds)) {\n      throw new TypeError(\n          '\\'feeds\\' must be an object that use input names as keys and OnnxValue as corresponding values.');\n    }\n\n    let isFetchesEmpty = true;\n    // determine which override is being used\n    if (typeof arg1 === 'object') {\n      if (arg1 === null) {\n        throw new TypeError('Unexpected argument[1]: cannot be null.');\n      }\n      if (arg1 instanceof Tensor) {\n        throw new TypeError('\\'fetches\\' cannot be a Tensor');\n      }\n\n      if (Array.isArray(arg1)) {\n        if (arg1.length === 0) {\n          throw new TypeError('\\'fetches\\' cannot be an empty array.');\n        }\n        isFetchesEmpty = false;\n        // output names\n        for (const name of arg1) {\n          if (typeof name !== 'string') {\n            throw new TypeError('\\'fetches\\' must be a string array or an object.');\n          }\n          if (outputNames.indexOf(name) === -1) {\n            throw new RangeError(`'fetches' contains invalid output name: ${name}.`);\n          }\n          fetches[name] = null;\n        }\n\n        if (typeof arg2 === 'object' && arg2 !== null) {\n          options = arg2;\n        } else if (typeof arg2 !== 'undefined') {\n          throw new TypeError('\\'options\\' must be an object.');\n        }\n      } else {\n        // decide whether arg1 is fetches or options\n        // if any output name is present and its value is valid OnnxValue, we consider it fetches\n        let isFetches = false;\n        const arg1Keys = Object.getOwnPropertyNames(arg1);\n        for (const name of outputNames) {\n          if (arg1Keys.indexOf(name) !== -1) {\n            const v = (arg1 as InferenceSession.NullableOnnxValueMapType)[name];\n            if (v === null || v instanceof Tensor) {\n              isFetches = true;\n              isFetchesEmpty = false;\n              fetches[name] = v;\n            }\n          }\n        }\n\n        if (isFetches) {\n          if (typeof arg2 === 'object' && arg2 !== null) {\n            options = arg2;\n          } else if (typeof arg2 !== 'undefined') {\n            throw new TypeError('\\'options\\' must be an object.');\n          }\n        } else {\n          options = arg1 as RunOptions;\n        }\n      }\n    } else if (typeof arg1 !== 'undefined') {\n      throw new TypeError('Unexpected argument[1]: must be \\'fetches\\' or \\'options\\'.');\n    }\n\n    // check if all inputs are in feed\n    for (const name of inputNames) {\n      if (typeof feeds[name] === 'undefined') {\n        throw new Error(`input '${name}' is missing in 'feeds'.`);\n      }\n    }\n\n    // if no fetches is specified, we use the full output names list\n    if (isFetchesEmpty) {\n      for (const name of outputNames) {\n        fetches[name] = null;\n      }\n    }\n\n    return [fetches, options];\n  }\n\n  /**\n   * Helper method for runTrainStep and any other runStep methods. Takes the ReturnType result from the SessionHandler\n   * and changes it into a map of Tensors.\n   *\n   * @param results\n   * @returns\n   */\n  convertHandlerReturnTypeToMapOfTensors(results: SessionHandler.ReturnType): ReturnType {\n    const returnValue: {[name: string]: OnnxValue} = {};\n    for (const key in results) {\n      if (Object.hasOwnProperty.call(results, key)) {\n        const result = results[key];\n        if (result instanceof Tensor) {\n          returnValue[key] = result;\n        } else {\n          returnValue[key] = new Tensor(result.type, result.data, result.dims);\n        }\n      }\n    }\n    return returnValue;\n  }\n\n  async lazyResetGrad(): Promise<void> {\n    await this.handler.lazyResetGrad();\n  }\n\n  runTrainStep(feeds: FeedsType, options?: RunOptions): Promise<ReturnType>;\n  runTrainStep(feeds: FeedsType, fetches: FetchesType, options?: RunOptions): Promise<ReturnType>;\n  async runTrainStep(feeds: FeedsType, arg1?: FetchesType|RunOptions, arg2?: RunOptions): Promise<ReturnType> {\n    const [fetches, options] =\n        this.typeNarrowingForRunStep(this.trainingInputNames, this.trainingOutputNames, feeds, arg1, arg2);\n    const results = await this.handler.runTrainStep(feeds, fetches, options);\n    return this.convertHandlerReturnTypeToMapOfTensors(results);\n  }\n\n  async runOptimizerStep(options?: InferenceSession.RunOptions|undefined): Promise<void> {\n    if (this.hasOptimizerModel) {\n      await this.handler.runOptimizerStep(options || {});\n    } else {\n      throw new Error('This TrainingSession has no OptimizerModel loaded.');\n    }\n  }\n\n  runEvalStep(feeds: FeedsType, options?: RunOptions|undefined): Promise<ReturnType>;\n  runEvalStep(feeds: FeedsType, fetches: FetchesType, options?: RunOptions|undefined): Promise<ReturnType>;\n  async runEvalStep(feeds: FeedsType, arg1?: FetchesType|RunOptions, arg2?: RunOptions): Promise<ReturnType> {\n    if (this.hasEvalModel) {\n      const [fetches, options] =\n          this.typeNarrowingForRunStep(this.evalInputNames, this.evalOutputNames, feeds, arg1, arg2);\n      const results = await this.handler.runEvalStep(feeds, fetches, options);\n      return this.convertHandlerReturnTypeToMapOfTensors(results);\n    } else {\n      throw new Error('This TrainingSession has no EvalModel loaded.');\n    }\n  }\n\n  async getParametersSize(trainableOnly = true): Promise<number> {\n    return this.handler.getParametersSize(trainableOnly);\n  }\n\n  async loadParametersBuffer(array: Uint8Array, trainableOnly = true): Promise<void> {\n    const paramsSize = await this.getParametersSize(trainableOnly);\n    // checking that the size of the Uint8Array is equivalent to the byte length of a Float32Array of the number\n    // of parameters\n    if (array.length !== 4 * paramsSize) {\n      throw new Error(\n          'Size of the buffer passed into loadParametersBuffer must match the number of parameters in ' +\n          'the model. Please use getParametersSize method to check.');\n    }\n    return this.handler.loadParametersBuffer(array, trainableOnly);\n  }\n\n  async getContiguousParameters(trainableOnly = true): Promise<OnnxValue> {\n    return this.handler.getContiguousParameters(trainableOnly);\n  }\n\n  async release(): Promise<void> {\n    return this.handler.dispose();\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from './inference-session.js';\nimport {OnnxValue} from './onnx-value.js';\nimport {TrainingSession as TrainingSessionImpl} from './training-session-impl.js';\n\n/* eslint-disable @typescript-eslint/no-redeclare */\n\nexport declare namespace TrainingSession {\n  /**\n   * Either URI file path (string) or Uint8Array containing model or checkpoint information.\n   */\n  type URIorBuffer = string|Uint8Array;\n}\n\n/**\n * Represent a runtime instance of an ONNX training session,\n * which contains a model that can be trained, and, optionally,\n * an eval and optimizer model.\n */\nexport interface TrainingSession {\n  // #region run()\n\n  /**\n   * Lazily resets the gradients of all trainable parameters to zero. Should happen after the invocation of\n   * runOptimizerStep.\n   */\n  lazyResetGrad(): Promise<void>;\n\n  /**\n   * Run TrainStep asynchronously with the given feeds and options.\n   *\n   * @param feeds - Representation of the model input. See type description of `InferenceSession.InputType` for\n   detail.\n   * @param options - Optional. A set of options that controls the behavior of model training.\n   * @returns A promise that resolves to a map, which uses output names as keys and OnnxValue as corresponding values.\n   */\n  runTrainStep(feeds: InferenceSession.FeedsType, options?: InferenceSession.RunOptions):\n      Promise<InferenceSession.ReturnType>;\n\n  /**\n   * Run a single train step with the given inputs and options.\n   *\n   * @param feeds - Representation of the model input.\n   * @param fetches - Representation of the model output.\n   * detail.\n   * @param options - Optional. A set of options that controls the behavior of model training.\n   * @returns A promise that resolves to a map, which uses output names as keys and OnnxValue as corresponding\n   values.\n   */\n  runTrainStep(\n      feeds: InferenceSession.FeedsType, fetches: InferenceSession.FetchesType,\n      options?: InferenceSession.RunOptions): Promise<InferenceSession.ReturnType>;\n\n  /**\n   * Runs a single optimizer step, which performs weight updates for the trainable parameters using the optimizer model.\n   *\n   * @param options - Optional. A set of options that controls the behavior of model optimizing.\n   */\n  runOptimizerStep(options?: InferenceSession.RunOptions): Promise<void>;\n\n  /**\n   * Run a single eval step with the given inputs and options using the eval model.\n   *\n   * @param feeds - Representation of the model input.\n   * @param options - Optional. A set of options that controls the behavior of model eval step.\n   * @returns A promise that resolves to a map, which uses output names as keys and OnnxValue as corresponding\n   values.\n   */\n  runEvalStep(feeds: InferenceSession.FeedsType, options?: InferenceSession.RunOptions):\n      Promise<InferenceSession.ReturnType>;\n\n  /**\n   * Run a single eval step with the given inputs and options using the eval model.\n   *\n   * @param feeds - Representation of the model input.\n   * @param fetches - Representation of the model output.\n   * detail.\n   * @param options - Optional. A set of options that controls the behavior of model eval step.\n   * @returns A promise that resolves to a map, which uses output names as keys and OnnxValue as corresponding\n   values.\n   */\n  runEvalStep(\n      feeds: InferenceSession.FeedsType, fetches: InferenceSession.FetchesType,\n      options?: InferenceSession.RunOptions): Promise<InferenceSession.ReturnType>;\n\n  // #endregion\n\n  // #region copy parameters\n\n  /**\n   * Retrieves the size of all parameters for the training state. Calculates the total number of primitive (datatype of\n   * the parameters) elements of all the parameters in the training state.\n   *\n   * @param trainableOnly - When set to true, the size is calculated for trainable params only. Default value is true.\n   */\n  getParametersSize(trainableOnly: boolean): Promise<number>;\n\n  /**\n   * Copies parameter values from the given array to the training state. Currently, only supporting models with\n   * parameters of type Float32.\n   *\n   * @param buffer - Float32 buffer containing parameters converted to a Uint8Array.\n   * @param trainableOnly - True if trainable parameters only to be modified, false otherwise. Default value is true.\n   */\n  loadParametersBuffer(array: Uint8Array, trainableOnly: boolean): Promise<void>;\n\n  /**\n   * Copies the model parameters to a contiguous buffer. Usually used in the context of Federated Learning.\n   * Currently, only supporting models with parameters of type Float32.\n   *\n   * @param trainableOnly - When set to true, only trainable parameters are copied. Trainable parameters are parameters\n   * for which requires_grad is set to true. Default value is true.\n   * @returns A promise that resolves to a Float32 OnnxValue of the requested parameters.\n   */\n  getContiguousParameters(trainableOnly: boolean): Promise<OnnxValue>;\n  // #endregion\n\n  // #region release()\n\n  /**\n   * Release the inference session and the underlying resources.\n   */\n  release(): Promise<void>;\n  // #endregion\n\n  // #region metadata\n\n  /**\n   * Get input names of the loaded training model.\n   */\n  readonly trainingInputNames: readonly string[];\n\n  /**\n   * Get output names of the loaded training model.\n   */\n  readonly trainingOutputNames: readonly string[];\n\n  /**\n   * Get input names of the loaded eval model. Is an empty array if no eval model is loaded.\n   */\n  readonly evalInputNames: readonly string[];\n\n  /**\n   * Get output names of the loaded eval model. Is an empty array if no eval model is loaded.\n   */\n  readonly evalOutputNames: readonly string[];\n\n  // #endregion\n}\n\n/**\n * Represents the optional parameters that can be passed into the TrainingSessionFactory.\n */\nexport interface TrainingSessionCreateOptions {\n  /**\n   * URI or buffer for a .ckpt file that contains the checkpoint for the training model.\n   */\n  checkpointState: TrainingSession.URIorBuffer;\n  /**\n   * URI or buffer for the .onnx training file.\n   */\n  trainModel: TrainingSession.URIorBuffer;\n  /**\n   * Optional. URI or buffer for the .onnx optimizer model file.\n   */\n  optimizerModel?: TrainingSession.URIorBuffer;\n  /**\n   * Optional. URI or buffer for the .onnx eval model file.\n   */\n  evalModel?: TrainingSession.URIorBuffer;\n}\n\n/**\n * Defines method overload possibilities for creating a TrainingSession.\n */\nexport interface TrainingSessionFactory {\n  // #region create()\n\n  /**\n   * Creates a new TrainingSession and asynchronously loads any models passed in through trainingOptions\n   *\n   * @param trainingOptions specify models and checkpoints to load into the Training Session\n   * @param sessionOptions specify configuration for training session behavior\n   *\n   * @returns Promise that resolves to a TrainingSession object\n   */\n  create(trainingOptions: TrainingSessionCreateOptions, sessionOptions?: InferenceSession.SessionOptions):\n      Promise<TrainingSession>;\n\n  // #endregion\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const TrainingSession: TrainingSessionFactory = TrainingSessionImpl;\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * # ONNX Runtime JavaScript API\n *\n * ONNX Runtime JavaScript API is a unified API for all JavaScript usages, including the following NPM packages:\n *\n * - [onnxruntime-node](https://www.npmjs.com/package/onnxruntime-node)\n * - [onnxruntime-web](https://www.npmjs.com/package/onnxruntime-web)\n * - [onnxruntime-react-native](https://www.npmjs.com/package/onnxruntime-react-native)\n *\n * See also:\n * - [Get Started](https://onnxruntime.ai/docs/get-started/with-javascript.html)\n * - [Inference examples](https://github.com/microsoft/onnxruntime-inference-examples/tree/main/js)\n *\n * @packageDocumentation\n */\n\nexport * from './backend.js';\nexport * from './env.js';\nexport * from './inference-session.js';\nexport * from './tensor.js';\nexport * from './trace.js';\nexport * from './onnx-value.js';\nexport * from './training-session.js';\n", "export const readFile = undefined;export const readFileSync = undefined;export const createReadStream = undefined;", "export const join = undefined;", "\nvar ortWasm = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(moduleArg = {}) {\n\nvar g=moduleArg,aa,l;g.ready=new Promise((a,b)=>{aa=a;l=b});var ba=Object.assign({},g),ca=\"./this.program\",da=\"object\"==typeof window,p=\"function\"==typeof importScripts,ea=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,t=\"\",fa,w,x;\nif(ea){var fs=require(\"fs\"),ha=require(\"path\");t=p?ha.dirname(t)+\"/\":__dirname+\"/\";fa=(a,b)=>{a=z(a)?new URL(a):ha.normalize(a);return fs.readFileSync(a,b?void 0:\"utf8\")};x=a=>{a=fa(a,!0);a.buffer||(a=new Uint8Array(a));return a};w=(a,b,c,d=!0)=>{a=z(a)?new URL(a):ha.normalize(a);fs.readFile(a,d?void 0:\"utf8\",(e,h)=>{e?c(e):b(d?h.buffer:h)})};!g.thisProgram&&1<process.argv.length&&(ca=process.argv[1].replace(/\\\\/g,\"/\"));process.argv.slice(2);g.inspect=()=>\"[Emscripten Module object]\"}else if(da||\np)p?t=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(t=document.currentScript.src),_scriptDir&&(t=_scriptDir),0!==t.indexOf(\"blob:\")?t=t.substr(0,t.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):t=\"\",fa=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);return b.responseText},p&&(x=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\"arraybuffer\";b.send(null);return new Uint8Array(b.response)}),w=(a,b,c)=>{var d=new XMLHttpRequest;d.open(\"GET\",a,!0);d.responseType=\n\"arraybuffer\";d.onload=()=>{200==d.status||0==d.status&&d.response?b(d.response):c()};d.onerror=c;d.send(null)};var ia=console.log.bind(console),A=console.error.bind(console);Object.assign(g,ba);ba=null;\"object\"!=typeof WebAssembly&&ja(\"no native wasm support detected\");var B,ka=!1,C,D,E,G,I,J,la,ma,na,oa;\nfunction pa(){var a=B.buffer;g.HEAP8=C=new Int8Array(a);g.HEAP16=E=new Int16Array(a);g.HEAPU8=D=new Uint8Array(a);g.HEAPU16=G=new Uint16Array(a);g.HEAP32=I=new Int32Array(a);g.HEAPU32=J=new Uint32Array(a);g.HEAPF32=la=new Float32Array(a);g.HEAPF64=oa=new Float64Array(a);g.HEAP64=ma=new BigInt64Array(a);g.HEAPU64=na=new BigUint64Array(a)}var qa=[],ra=[],sa=[],K=0,ta=null,L=null;\nfunction ja(a){a=\"Aborted(\"+a+\")\";A(a);ka=!0;a=new WebAssembly.RuntimeError(a+\". Build with -sASSERTIONS for more info.\");l(a);throw a;}var ua=a=>a.startsWith(\"data:application/octet-stream;base64,\"),z=a=>a.startsWith(\"file://\"),M;M=\"ort-wasm.wasm\";if(!ua(M)){var va=M;M=g.locateFile?g.locateFile(va,t):t+va}function wa(a){if(x)return x(a);throw\"both async and sync fetching of the wasm failed\";}\nfunction xa(a){if(da||p){if(\"function\"==typeof fetch&&!z(a))return fetch(a,{credentials:\"same-origin\"}).then(b=>{if(!b.ok)throw\"failed to load wasm binary file at '\"+a+\"'\";return b.arrayBuffer()}).catch(()=>wa(a));if(w)return new Promise((b,c)=>{w(a,d=>b(new Uint8Array(d)),c)})}return Promise.resolve().then(()=>wa(a))}function ya(a,b,c){return xa(a).then(d=>WebAssembly.instantiate(d,b)).then(d=>d).then(c,d=>{A(`failed to asynchronously prepare wasm: ${d}`);ja(d)})}\nfunction za(a,b){var c=M;return\"function\"!=typeof WebAssembly.instantiateStreaming||ua(c)||z(c)||ea||\"function\"!=typeof fetch?ya(c,a,b):fetch(c,{credentials:\"same-origin\"}).then(d=>WebAssembly.instantiateStreaming(d,a).then(b,function(e){A(`wasm streaming compile failed: ${e}`);A(\"falling back to ArrayBuffer instantiation\");return ya(c,a,b)}))}\nvar Aa={1359336:(a,b,c,d)=>{if(\"undefined\"==typeof g||!g.cb)return 1;a=N(a>>>0);a.startsWith(\"./\")&&(a=a.substring(2));a=g.cb.get(a);if(!a)return 2;b>>>=0;c>>>=0;if(b+c>a.byteLength)return 3;try{return D.set(a.subarray(b,b+c),d>>>0>>>0),0}catch{return 4}}};function Ba(a){this.Ua=a-24;this.fb=function(b){J[this.Ua+4>>>2>>>0]=b};this.eb=function(b){J[this.Ua+8>>>2>>>0]=b};this.Ya=function(b,c){this.Za();this.fb(b);this.eb(c)};this.Za=function(){J[this.Ua+16>>>2>>>0]=0}}\nvar Ca=0,Da=0,Ea=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0,Fa=(a,b,c)=>{b>>>=0;var d=b+c;for(c=b;a[c]&&!(c>=d);)++c;if(16<c-b&&a.buffer&&Ea)return Ea.decode(a.subarray(b,c));for(d=\"\";b<c;){var e=a[b++];if(e&128){var h=a[b++]&63;if(192==(e&224))d+=String.fromCharCode((e&31)<<6|h);else{var k=a[b++]&63;e=224==(e&240)?(e&15)<<12|h<<6|k:(e&7)<<18|h<<12|k<<6|a[b++]&63;65536>e?d+=String.fromCharCode(e):(e-=65536,d+=String.fromCharCode(55296|e>>10,56320|e&1023))}}else d+=String.fromCharCode(e)}return d},\nN=(a,b)=>(a>>>=0)?Fa(D,a,b):\"\",O=a=>{for(var b=0,c=0;c<a.length;++c){var d=a.charCodeAt(c);127>=d?b++:2047>=d?b+=2:55296<=d&&57343>=d?(b+=4,++c):b+=3}return b},P=(a,b,c,d)=>{c>>>=0;if(!(0<d))return 0;var e=c;d=c+d-1;for(var h=0;h<a.length;++h){var k=a.charCodeAt(h);if(55296<=k&&57343>=k){var m=a.charCodeAt(++h);k=65536+((k&1023)<<10)|m&1023}if(127>=k){if(c>=d)break;b[c++>>>0]=k}else{if(2047>=k){if(c+1>=d)break;b[c++>>>0]=192|k>>6}else{if(65535>=k){if(c+2>=d)break;b[c++>>>0]=224|k>>12}else{if(c+3>=\nd)break;b[c++>>>0]=240|k>>18;b[c++>>>0]=128|k>>12&63}b[c++>>>0]=128|k>>6&63}b[c++>>>0]=128|k&63}}b[c>>>0]=0;return c-e},Ga=a=>{if(null===a)return\"null\";var b=typeof a;return\"object\"===b||\"array\"===b||\"function\"===b?a.toString():\"\"+a},Ha,Q=a=>{for(var b=\"\";D[a>>>0];)b+=Ha[D[a++>>>0]];return b},Ia={},Ja={},Ka={},R;\nfunction La(a,b,c={}){var d=b.name;if(!a)throw new R(`type \"${d}\" must have a positive integer typeid pointer`);if(Ja.hasOwnProperty(a)){if(c.gb)return;throw new R(`Cannot register type '${d}' twice`);}Ja[a]=b;delete Ka[a];Ia.hasOwnProperty(a)&&(b=Ia[a],delete Ia[a],b.forEach(e=>e()))}function S(a,b,c={}){if(!(\"argPackAdvance\"in b))throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");La(a,b,c)}\nvar Ma=(a,b,c)=>{switch(b){case 1:return c?d=>C[d>>>0>>>0]:d=>D[d>>>0>>>0];case 2:return c?d=>E[d>>>1>>>0]:d=>G[d>>>1>>>0];case 4:return c?d=>I[d>>>2>>>0]:d=>J[d>>>2>>>0];case 8:return c?d=>ma[d>>>3]:d=>na[d>>>3];default:throw new TypeError(`invalid integer width (${b}): ${a}`);}};function Na(){this.Ra=[void 0];this.ab=[]}var T=new Na;function Oa(a){a>>>=0;a>=T.Ua&&0===--T.get(a).bb&&T.Za(a)}\nvar U=a=>{if(!a)throw new R(\"Cannot use deleted val. handle = \"+a);return T.get(a).value},V=a=>{switch(a){case void 0:return 1;case null:return 2;case !0:return 3;case !1:return 4;default:return T.Ya({bb:1,value:a})}};function Pa(a){return this.fromWireType(I[a>>>2>>>0])}var Qa=(a,b)=>{switch(b){case 4:return function(c){return this.fromWireType(la[c>>>2>>>0])};case 8:return function(c){return this.fromWireType(oa[c>>>3>>>0])};default:throw new TypeError(`invalid float width (${b}): ${a}`);}};\nfunction Ra(a){return this.fromWireType(J[a>>>2>>>0])}\nvar Sa=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf-16le\"):void 0,Ta=(a,b)=>{var c=a>>1;for(var d=c+b/2;!(c>=d)&&G[c>>>0];)++c;c<<=1;if(32<c-a&&Sa)return Sa.decode(D.subarray(a>>>0,c>>>0));c=\"\";for(d=0;!(d>=b/2);++d){var e=E[a+2*d>>>1>>>0];if(0==e)break;c+=String.fromCharCode(e)}return c},Ua=(a,b,c)=>{c??=2147483647;if(2>c)return 0;c-=2;var d=b;c=c<2*a.length?c/2:a.length;for(var e=0;e<c;++e)E[b>>>1>>>0]=a.charCodeAt(e),b+=2;E[b>>>1>>>0]=0;return b-d},Va=a=>2*a.length,Wa=(a,b)=>{for(var c=\n0,d=\"\";!(c>=b/4);){var e=I[a+4*c>>>2>>>0];if(0==e)break;++c;65536<=e?(e-=65536,d+=String.fromCharCode(55296|e>>10,56320|e&1023)):d+=String.fromCharCode(e)}return d},Xa=(a,b,c)=>{b>>>=0;c??=2147483647;if(4>c)return 0;var d=b;c=d+c-4;for(var e=0;e<a.length;++e){var h=a.charCodeAt(e);if(55296<=h&&57343>=h){var k=a.charCodeAt(++e);h=65536+((h&1023)<<10)|k&1023}I[b>>>2>>>0]=h;b+=4;if(b+4>c)break}I[b>>>2>>>0]=0;return b-d},Ya=a=>{for(var b=0,c=0;c<a.length;++c){var d=a.charCodeAt(c);55296<=d&&57343>=d&&\n++c;b+=4}return b},$a=(a,b)=>{var c=Ja[a];if(void 0===c)throw a=Za(a),c=Q(a),W(a),new R(b+\" has unknown type \"+c);return c},ab=(a,b,c)=>{var d=[];a=a.toWireType(d,c);d.length&&(J[b>>>2>>>0]=V(d));return a},X=[],cb={},db=a=>{var b=cb[a];return void 0===b?Q(a):b},eb=()=>\"object\"==typeof globalThis?globalThis:Function(\"return this\")(),fb=a=>{var b=X.length;X.push(a);return b},gb=(a,b)=>{for(var c=Array(a),d=0;d<a;++d)c[d]=$a(J[b+4*d>>>2>>>0],\"parameter \"+d);return c},hb=(a,b)=>Object.defineProperty(b,\n\"name\",{value:a});function ib(a){var b=Function;if(!(b instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof b} which is not a function`);var c=hb(b.name||\"unknownFunctionName\",function(){});c.prototype=b.prototype;c=new c;a=b.apply(c,a);return a instanceof Object?a:c}\nvar Y=a=>0===a%4&&(0!==a%100||0===a%400),jb=[0,31,60,91,121,152,182,213,244,274,305,335],kb=[0,31,59,90,120,151,181,212,243,273,304,334],mb=a=>{var b=O(a)+1,c=lb(b);c&&P(a,D,c,b);return c},nb=[],ob={},qb=()=>{if(!pb){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:ca||\"./this.program\"},b;for(b in ob)void 0===ob[b]?delete a[b]:a[b]=ob[b];var c=[];for(b in a)c.push(`${b}=${a[b]}`);\npb=c}return pb},pb,rb=[null,[],[]],sb=[31,29,31,30,31,30,31,31,30,31,30,31],tb=[31,28,31,30,31,30,31,31,30,31,30,31];function ub(a){var b=Array(O(a)+1);P(a,b,0,b.length);return b}\nfunction vb(a,b,c,d){function e(f,r,u){for(f=\"number\"==typeof f?f.toString():f||\"\";f.length<r;)f=u[0]+f;return f}function h(f,r){return e(f,r,\"0\")}function k(f,r){function u(bb){return 0>bb?-1:0<bb?1:0}var H;0===(H=u(f.getFullYear()-r.getFullYear()))&&0===(H=u(f.getMonth()-r.getMonth()))&&(H=u(f.getDate()-r.getDate()));return H}function m(f){switch(f.getDay()){case 0:return new Date(f.getFullYear()-1,11,29);case 1:return f;case 2:return new Date(f.getFullYear(),0,3);case 3:return new Date(f.getFullYear(),\n0,2);case 4:return new Date(f.getFullYear(),0,1);case 5:return new Date(f.getFullYear()-1,11,31);case 6:return new Date(f.getFullYear()-1,11,30)}}function q(f){var r=f.Sa;for(f=new Date((new Date(f.Ta+1900,0,1)).getTime());0<r;){var u=f.getMonth(),H=(Y(f.getFullYear())?sb:tb)[u];if(r>H-f.getDate())r-=H-f.getDate()+1,f.setDate(1),11>u?f.setMonth(u+1):(f.setMonth(0),f.setFullYear(f.getFullYear()+1));else{f.setDate(f.getDate()+r);break}}u=new Date(f.getFullYear()+1,0,4);r=m(new Date(f.getFullYear(),\n0,4));u=m(u);return 0>=k(r,f)?0>=k(u,f)?f.getFullYear()+1:f.getFullYear():f.getFullYear()-1}a>>>=0;b>>>=0;c>>>=0;d>>>=0;var n=J[d+40>>>2>>>0];d={kb:I[d>>>2>>>0],jb:I[d+4>>>2>>>0],Wa:I[d+8>>>2>>>0],$a:I[d+12>>>2>>>0],Xa:I[d+16>>>2>>>0],Ta:I[d+20>>>2>>>0],Na:I[d+24>>>2>>>0],Sa:I[d+28>>>2>>>0],mb:I[d+32>>>2>>>0],ib:I[d+36>>>2>>>0],lb:n?N(n):\"\"};c=N(c);n={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\n\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var v in n)c=c.replace(new RegExp(v,\"g\"),n[v]);var y=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),F=\"January February March April May June July August September October November December\".split(\" \");n={\"%a\":f=>y[f.Na].substring(0,3),\"%A\":f=>y[f.Na],\"%b\":f=>\nF[f.Xa].substring(0,3),\"%B\":f=>F[f.Xa],\"%C\":f=>h((f.Ta+1900)/100|0,2),\"%d\":f=>h(f.$a,2),\"%e\":f=>e(f.$a,2,\" \"),\"%g\":f=>q(f).toString().substring(2),\"%G\":f=>q(f),\"%H\":f=>h(f.Wa,2),\"%I\":f=>{f=f.Wa;0==f?f=12:12<f&&(f-=12);return h(f,2)},\"%j\":f=>{for(var r=0,u=0;u<=f.Xa-1;r+=(Y(f.Ta+1900)?sb:tb)[u++]);return h(f.$a+r,3)},\"%m\":f=>h(f.Xa+1,2),\"%M\":f=>h(f.jb,2),\"%n\":()=>\"\\n\",\"%p\":f=>0<=f.Wa&&12>f.Wa?\"AM\":\"PM\",\"%S\":f=>h(f.kb,2),\"%t\":()=>\"\\t\",\"%u\":f=>f.Na||7,\"%U\":f=>h(Math.floor((f.Sa+7-f.Na)/7),2),\"%V\":f=>\n{var r=Math.floor((f.Sa+7-(f.Na+6)%7)/7);2>=(f.Na+371-f.Sa-2)%7&&r++;if(r)53==r&&(u=(f.Na+371-f.Sa)%7,4==u||3==u&&Y(f.Ta)||(r=1));else{r=52;var u=(f.Na+7-f.Sa-1)%7;(4==u||5==u&&Y(f.Ta%400-1))&&r++}return h(r,2)},\"%w\":f=>f.Na,\"%W\":f=>h(Math.floor((f.Sa+7-(f.Na+6)%7)/7),2),\"%y\":f=>(f.Ta+1900).toString().substring(2),\"%Y\":f=>f.Ta+1900,\"%z\":f=>{f=f.ib;var r=0<=f;f=Math.abs(f)/60;return(r?\"+\":\"-\")+String(\"0000\"+(f/60*100+f%60)).slice(-4)},\"%Z\":f=>f.lb,\"%%\":()=>\"%\"};c=c.replace(/%%/g,\"\\x00\\x00\");for(v in n)c.includes(v)&&\n(c=c.replace(new RegExp(v,\"g\"),n[v](d)));c=c.replace(/\\0\\0/g,\"%\");v=ub(c);if(v.length>b)return 0;C.set(v,a>>>0);return v.length-1}for(var wb=Array(256),xb=0;256>xb;++xb)wb[xb]=String.fromCharCode(xb);Ha=wb;R=g.BindingError=class extends Error{constructor(a){super(a);this.name=\"BindingError\"}};g.InternalError=class extends Error{constructor(a){super(a);this.name=\"InternalError\"}};\nObject.assign(Na.prototype,{get(a){return this.Ra[a]},has(a){return void 0!==this.Ra[a]},Ya(a){var b=this.ab.pop()||this.Ra.length;this.Ra[b]=a;return b},Za(a){this.Ra[a]=void 0;this.ab.push(a)}});T.Ra.push({value:void 0},{value:null},{value:!0},{value:!1});T.Ua=T.Ra.length;g.count_emval_handles=()=>{for(var a=0,b=T.Ua;b<T.Ra.length;++b)void 0!==T.Ra[b]&&++a;return a};\nvar zb={a:function(a,b,c){a>>>=0;(new Ba(a)).Ya(b>>>0,c>>>0);Ca=a;Da++;throw Ca;},t:function(){return 0},$:function(){},M:function(){},O:function(){},G:function(){return 0},Z:function(){},U:function(){},Y:function(){},B:function(){},N:function(){},K:function(){},_:function(){},L:function(){},E:function(a,b,c,d,e){b>>>=0;b=Q(b);var h=-1!=b.indexOf(\"u\");h&&(e=(1n<<64n)-1n);S(a>>>0,{name:b,fromWireType:k=>k,toWireType:function(k,m){if(\"bigint\"!=typeof m&&\"number\"!=typeof m)throw new TypeError(`Cannot convert \"${Ga(m)}\" to ${this.name}`);\nif(m<d||m>e)throw new TypeError(`Passing a number \"${Ga(m)}\" from JS side to C/C++ side to an argument of type \"${b}\", which is outside the valid range [${d}, ${e}]!`);return m},argPackAdvance:8,readValueFromPointer:Ma(b,c>>>0,!h),Va:null})},da:function(a,b,c,d){b=Q(b>>>0);S(a>>>0,{name:b,fromWireType:function(e){return!!e},toWireType:function(e,h){return h?c:d},argPackAdvance:8,readValueFromPointer:function(e){return this.fromWireType(D[e>>>0])},Va:null})},ca:function(a,b){b=Q(b>>>0);S(a>>>0,{name:b,\nfromWireType:c=>{var d=U(c);Oa(c);return d},toWireType:(c,d)=>V(d),argPackAdvance:8,readValueFromPointer:Pa,Va:null})},D:function(a,b,c){b=Q(b>>>0);S(a>>>0,{name:b,fromWireType:d=>d,toWireType:(d,e)=>e,argPackAdvance:8,readValueFromPointer:Qa(b,c>>>0),Va:null})},q:function(a,b,c,d,e){a>>>=0;c>>>=0;b=Q(b>>>0);-1===e&&(e=4294967295);e=m=>m;if(0===d){var h=32-8*c;e=m=>m<<h>>>h}var k=b.includes(\"unsigned\")?function(m,q){return q>>>0}:function(m,q){return q};S(a,{name:b,fromWireType:e,toWireType:k,argPackAdvance:8,\nreadValueFromPointer:Ma(b,c,0!==d),Va:null})},l:function(a,b,c){function d(h){return new e(C.buffer,J[h+4>>>2>>>0],J[h>>>2>>>0])}var e=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][b];c=Q(c>>>0);S(a>>>0,{name:c,fromWireType:d,argPackAdvance:8,readValueFromPointer:d},{gb:!0})},F:function(a,b){b=Q(b>>>0);var c=\"std::string\"===b;S(a>>>0,{name:b,fromWireType:function(d){var e=J[d>>>2>>>0],h=d+4;if(c)for(var k=h,m=0;m<=e;++m){var q=\nh+m;if(m==e||0==D[q>>>0]){k=N(k,q-k);if(void 0===n)var n=k;else n+=String.fromCharCode(0),n+=k;k=q+1}}else{n=Array(e);for(m=0;m<e;++m)n[m]=String.fromCharCode(D[h+m>>>0]);n=n.join(\"\")}W(d);return n},toWireType:function(d,e){e instanceof ArrayBuffer&&(e=new Uint8Array(e));var h=\"string\"==typeof e;if(!(h||e instanceof Uint8Array||e instanceof Uint8ClampedArray||e instanceof Int8Array))throw new R(\"Cannot pass non-string to std::string\");var k=c&&h?O(e):e.length;var m=lb(4+k+1),q=m+4;J[m>>>2>>>0]=k;\nif(c&&h)P(e,D,q,k+1);else if(h)for(h=0;h<k;++h){var n=e.charCodeAt(h);if(255<n)throw W(q),new R(\"String has UTF-16 code units that do not fit in 8 bits\");D[q+h>>>0]=n}else for(h=0;h<k;++h)D[q+h>>>0]=e[h];null!==d&&d.push(W,m);return m},argPackAdvance:8,readValueFromPointer:Ra,Va(d){W(d)}})},v:function(a,b,c){b>>>=0;c>>>=0;c=Q(c);if(2===b){var d=Ta;var e=Ua;var h=Va;var k=()=>G;var m=1}else 4===b&&(d=Wa,e=Xa,h=Ya,k=()=>J,m=2);S(a>>>0,{name:c,fromWireType:q=>{for(var n=J[q>>>2>>>0],v=k(),y,F=q+4,f=\n0;f<=n;++f){var r=q+4+f*b;if(f==n||0==v[r>>>m])F=d(F,r-F),void 0===y?y=F:(y+=String.fromCharCode(0),y+=F),F=r+b}W(q);return y},toWireType:(q,n)=>{if(\"string\"!=typeof n)throw new R(`Cannot pass non-string to C++ string type ${c}`);var v=h(n),y=lb(4+v+b);J[y>>>2]=v>>m;e(n,y+4,v+b);null!==q&&q.push(W,y);return y},argPackAdvance:8,readValueFromPointer:Pa,Va(q){W(q)}})},ea:function(a,b){b=Q(b>>>0);S(a>>>0,{hb:!0,name:b,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},aa:()=>1,o:function(a,b,c){b>>>=\n0;c>>>=0;a=U(a>>>0);b=$a(b,\"emval::as\");return ab(b,c,a)},x:function(a,b,c,d){c>>>=0;d>>>=0;a=X[a>>>0];b=U(b>>>0);return a(null,b,c,d)},j:function(a,b,c,d,e){c>>>=0;d>>>=0;e>>>=0;a=X[a>>>0];b=U(b>>>0);c=db(c);return a(b,b[c],d,e)},b:Oa,w:function(a,b){b>>>=0;a=U(a>>>0);b=U(b);return a==b},s:function(a){a>>>=0;if(0===a)return V(eb());a=db(a);return V(eb()[a])},i:function(a,b,c){b=gb(a,b>>>0);var d=b.shift();a--;var e=\"return function (obj, func, destructorsRef, args) {\\n\",h=0,k=[];0===c&&k.push(\"obj\");\nfor(var m=[\"retType\"],q=[d],n=0;n<a;++n)k.push(\"arg\"+n),m.push(\"argType\"+n),q.push(b[n]),e+=`  var arg${n} = argType${n}.readValueFromPointer(args${h?\"+\"+h:\"\"});\\n`,h+=b[n].argPackAdvance;e+=`  var rv = ${1===c?\"new func\":\"func.call\"}(${k.join(\", \")});\\n`;for(n=0;n<a;++n)b[n].deleteObject&&(e+=`  argType${n}.deleteObject(arg${n});\\n`);d.hb||(m.push(\"emval_returnValue\"),q.push(ab),e+=\"  return emval_returnValue(retType, destructorsRef, rv);\\n\");m.push(e+\"};\\n\");a=ib(m).apply(null,q);c=`methodCaller<(${b.map(v=>\nv.name).join(\", \")}) => ${d.name}>`;return fb(hb(c,a))},p:function(a,b){b>>>=0;a=U(a>>>0);b=U(b);return V(a[b])},c:function(a){a>>>=0;4<a&&(T.get(a).bb+=1)},r:function(){return V([])},k:function(a){a=U(a>>>0);for(var b=Array(a.length),c=0;c<a.length;c++)b[c]=a[c];return V(b)},d:function(a){return V(db(a>>>0))},h:function(){return V({})},g:function(a){a>>>=0;for(var b=U(a);b.length;){var c=b.pop();b.pop()(c)}Oa(a)},f:function(a,b,c){b>>>=0;c>>>=0;a=U(a>>>0);b=U(b);c=U(c);a[b]=c},e:function(a,b){b>>>=\n0;a=$a(a>>>0,\"_emval_take_value\");a=a.readValueFromPointer(b);return V(a)},R:function(a,b){a=-9007199254740992>a||9007199254740992<a?NaN:Number(a);b>>>=0;a=new Date(1E3*a);I[b>>>2>>>0]=a.getUTCSeconds();I[b+4>>>2>>>0]=a.getUTCMinutes();I[b+8>>>2>>>0]=a.getUTCHours();I[b+12>>>2>>>0]=a.getUTCDate();I[b+16>>>2>>>0]=a.getUTCMonth();I[b+20>>>2>>>0]=a.getUTCFullYear()-1900;I[b+24>>>2>>>0]=a.getUTCDay();I[b+28>>>2>>>0]=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864E5|0},S:function(a,b){a=-9007199254740992>\na||9007199254740992<a?NaN:Number(a);b>>>=0;a=new Date(1E3*a);I[b>>>2>>>0]=a.getSeconds();I[b+4>>>2>>>0]=a.getMinutes();I[b+8>>>2>>>0]=a.getHours();I[b+12>>>2>>>0]=a.getDate();I[b+16>>>2>>>0]=a.getMonth();I[b+20>>>2>>>0]=a.getFullYear()-1900;I[b+24>>>2>>>0]=a.getDay();I[b+28>>>2>>>0]=(Y(a.getFullYear())?jb:kb)[a.getMonth()]+a.getDate()-1|0;I[b+36>>>2>>>0]=-(60*a.getTimezoneOffset());var c=(new Date(a.getFullYear(),6,1)).getTimezoneOffset(),d=(new Date(a.getFullYear(),0,1)).getTimezoneOffset();I[b+\n32>>>2>>>0]=(c!=d&&a.getTimezoneOffset()==Math.min(d,c))|0},T:function(a){a>>>=0;var b=new Date(I[a+20>>>2>>>0]+1900,I[a+16>>>2>>>0],I[a+12>>>2>>>0],I[a+8>>>2>>>0],I[a+4>>>2>>>0],I[a>>>2>>>0],0),c=I[a+32>>>2>>>0],d=b.getTimezoneOffset(),e=(new Date(b.getFullYear(),6,1)).getTimezoneOffset(),h=(new Date(b.getFullYear(),0,1)).getTimezoneOffset(),k=Math.min(h,e);0>c?I[a+32>>>2>>>0]=Number(e!=h&&k==d):0<c!=(k==d)&&(e=Math.max(h,e),b.setTime(b.getTime()+6E4*((0<c?k:e)-d)));I[a+24>>>2>>>0]=b.getDay();I[a+\n28>>>2>>>0]=(Y(b.getFullYear())?jb:kb)[b.getMonth()]+b.getDate()-1|0;I[a>>>2>>>0]=b.getSeconds();I[a+4>>>2>>>0]=b.getMinutes();I[a+8>>>2>>>0]=b.getHours();I[a+12>>>2>>>0]=b.getDate();I[a+16>>>2>>>0]=b.getMonth();I[a+20>>>2>>>0]=b.getYear();a=b.getTime();isNaN(a)?(I[yb()>>>2>>>0]=61,a=-1):a/=1E3;return BigInt(a)},P:function(){return-52},Q:function(){},I:function(a,b,c){function d(q){return(q=q.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?q[1]:\"GMT\"}c>>>=0;var e=(new Date).getFullYear(),h=new Date(e,\n0,1),k=new Date(e,6,1);e=h.getTimezoneOffset();var m=k.getTimezoneOffset();J[a>>>0>>>2>>>0]=60*Math.max(e,m);I[b>>>0>>>2>>>0]=Number(e!=m);a=d(h);b=d(k);a=mb(a);b=mb(b);m<e?(J[c>>>2>>>0]=a,J[c+4>>>2>>>0]=b):(J[c>>>2>>>0]=b,J[c+4>>>2>>>0]=a)},y:()=>{ja(\"\")},fa:function(a,b,c){a>>>=0;b>>>=0;c>>>=0;nb.length=0;for(var d;d=D[b++>>>0];){var e=105!=d;e&=112!=d;c+=e&&c%8?4:0;nb.push(112==d?J[c>>>2>>>0]:106==d?ma[c>>>3]:105==d?I[c>>>2>>>0]:oa[c>>>3>>>0]);c+=e?8:4}return Aa[a].apply(null,nb)},C:()=>Date.now(),\nJ:function(){return 4294901760},n:()=>performance.now(),H:function(a){a>>>=0;var b=D.length;if(4294901760<a)return!1;for(var c=1;4>=c;c*=2){var d=b*(1+.2/c);d=Math.min(d,a+100663296);var e=Math;d=Math.max(a,d);a:{e=(e.min.call(e,4294901760,d+(65536-d%65536)%65536)-B.buffer.byteLength+65535)/65536;try{B.grow(e);pa();var h=1;break a}catch(k){}h=void 0}if(h)return!0}return!1},W:function(a,b){a>>>=0;b>>>=0;var c=0;qb().forEach((d,e)=>{var h=b+c;e=J[a+4*e>>>2>>>0]=h;for(h=0;h<d.length;++h)C[e++>>>0>>>\n0]=d.charCodeAt(h);C[e>>>0>>>0]=0;c+=d.length+1});return 0},X:function(a,b){a>>>=0;b>>>=0;var c=qb();J[a>>>2>>>0]=c.length;var d=0;c.forEach(e=>d+=e.length+1);J[b>>>2>>>0]=d;return 0},u:()=>52,A:function(){return 52},V:function(){return 70},z:function(a,b,c,d){b>>>=0;c>>>=0;d>>>=0;for(var e=0,h=0;h<c;h++){var k=J[b>>>2>>>0],m=J[b+4>>>2>>>0];b+=8;for(var q=0;q<m;q++){var n=D[k+q>>>0],v=rb[a];0===n||10===n?((1===a?ia:A)(Fa(v,0)),v.length=0):v.push(n)}e+=m}J[d>>>2>>>0]=e;return 0},ba:vb,m:function(a,\nb,c,d){return vb(a>>>0,b>>>0,c>>>0,d>>>0)}},Z=function(){function a(c){Z=c.exports;Z=Ab();B=Z.ga;pa();ra.unshift(Z.ha);K--;0==K&&(null!==ta&&(clearInterval(ta),ta=null),L&&(c=L,L=null,c()));return Z}var b={a:zb};K++;if(g.instantiateWasm)try{return g.instantiateWasm(b,a)}catch(c){A(`Module.instantiateWasm callback failed with error: ${c}`),l(c)}za(b,function(c){a(c.instance)}).catch(l);return{}}();g._OrtInit=(a,b)=>(g._OrtInit=Z.ia)(a,b);g._OrtGetLastError=(a,b)=>(g._OrtGetLastError=Z.ja)(a,b);\ng._OrtCreateSessionOptions=(a,b,c,d,e,h,k,m,q,n)=>(g._OrtCreateSessionOptions=Z.ka)(a,b,c,d,e,h,k,m,q,n);g._OrtAppendExecutionProvider=(a,b)=>(g._OrtAppendExecutionProvider=Z.la)(a,b);g._OrtAddFreeDimensionOverride=(a,b,c)=>(g._OrtAddFreeDimensionOverride=Z.ma)(a,b,c);g._OrtAddSessionConfigEntry=(a,b,c)=>(g._OrtAddSessionConfigEntry=Z.na)(a,b,c);g._OrtReleaseSessionOptions=a=>(g._OrtReleaseSessionOptions=Z.oa)(a);g._OrtCreateSession=(a,b,c)=>(g._OrtCreateSession=Z.pa)(a,b,c);\ng._OrtReleaseSession=a=>(g._OrtReleaseSession=Z.qa)(a);g._OrtGetInputOutputCount=(a,b,c)=>(g._OrtGetInputOutputCount=Z.ra)(a,b,c);g._OrtGetInputName=(a,b)=>(g._OrtGetInputName=Z.sa)(a,b);g._OrtGetOutputName=(a,b)=>(g._OrtGetOutputName=Z.ta)(a,b);g._OrtFree=a=>(g._OrtFree=Z.ua)(a);g._OrtCreateTensor=(a,b,c,d,e,h)=>(g._OrtCreateTensor=Z.va)(a,b,c,d,e,h);g._OrtGetTensorData=(a,b,c,d,e)=>(g._OrtGetTensorData=Z.wa)(a,b,c,d,e);g._OrtReleaseTensor=a=>(g._OrtReleaseTensor=Z.xa)(a);\ng._OrtCreateRunOptions=(a,b,c,d)=>(g._OrtCreateRunOptions=Z.ya)(a,b,c,d);g._OrtAddRunConfigEntry=(a,b,c)=>(g._OrtAddRunConfigEntry=Z.za)(a,b,c);g._OrtReleaseRunOptions=a=>(g._OrtReleaseRunOptions=Z.Aa)(a);g._OrtCreateBinding=a=>(g._OrtCreateBinding=Z.Ba)(a);g._OrtBindInput=(a,b,c)=>(g._OrtBindInput=Z.Ca)(a,b,c);g._OrtBindOutput=(a,b,c,d)=>(g._OrtBindOutput=Z.Da)(a,b,c,d);g._OrtClearBoundOutputs=a=>(g._OrtClearBoundOutputs=Z.Ea)(a);g._OrtReleaseBinding=a=>(g._OrtReleaseBinding=Z.Fa)(a);\ng._OrtRunWithBinding=(a,b,c,d,e)=>(g._OrtRunWithBinding=Z.Ga)(a,b,c,d,e);g._OrtRun=(a,b,c,d,e,h,k,m)=>(g._OrtRun=Z.Ha)(a,b,c,d,e,h,k,m);g._OrtEndProfiling=a=>(g._OrtEndProfiling=Z.Ia)(a);var yb=()=>(yb=Z.Ja)(),lb=g._malloc=a=>(lb=g._malloc=Z.Ka)(a),W=g._free=a=>(W=g._free=Z.La)(a),Za=a=>(Za=Z.Ma)(a),Bb=()=>(Bb=Z.Oa)(),Cb=a=>(Cb=Z.Pa)(a),Db=a=>(Db=Z.Qa)(a);\nfunction Ab(){var a=Z;a=Object.assign({},a);var b=d=>()=>d()>>>0,c=d=>e=>d(e)>>>0;a.Ja=b(a.Ja);a.Ka=c(a.Ka);a.Ma=c(a.Ma);a.Oa=b(a.Oa);a.Qa=c(a.Qa);return a}g.stackAlloc=Db;g.stackSave=Bb;g.stackRestore=Cb;g.UTF8ToString=N;g.stringToUTF8=(a,b,c)=>P(a,D,b,c);g.lengthBytesUTF8=O;var Eb;L=function Fb(){Eb||Gb();Eb||(L=Fb)};\nfunction Gb(){if(!(0<K)){if(g.preRun)for(\"function\"==typeof g.preRun&&(g.preRun=[g.preRun]);g.preRun.length;){var a=g.preRun.shift();qa.unshift(a)}for(;0<qa.length;)qa.shift()(g);if(!(0<K||Eb||(Eb=!0,g.calledRun=!0,ka))){for(;0<ra.length;)ra.shift()(g);for(aa(g);0<sa.length;)sa.shift()(g)}}}Gb();\n\n\n  return moduleArg.ready\n}\n);\n})();\n;\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = ortWasm;\nelse if (typeof define === 'function' && define['amd'])\n  define([], () => ortWasm);\n", "", "", "export const cpus = undefined;", "\nvar ortWasmThreaded = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(moduleArg = {}) {\n\nfunction aa(){e.buffer!=l.buffer&&m();return l}function n(){e.buffer!=l.buffer&&m();return ba}function p(){e.buffer!=l.buffer&&m();return ca}function r(){e.buffer!=l.buffer&&m();return da}function ea(){e.buffer!=l.buffer&&m();return fa}var v=moduleArg,ha,x;v.ready=new Promise((a,b)=>{ha=a;x=b});\nvar ia=Object.assign({},v),ja=\"./this.program\",z=(a,b)=>{throw b;},ka=\"object\"==typeof window,A=\"function\"==typeof importScripts,B=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,D=v.ENVIRONMENT_IS_PTHREAD||!1,E=\"\";function la(a){return v.locateFile?v.locateFile(a,E):E+a}var ma,G,H;\nif(B){var fs=require(\"fs\"),na=require(\"path\");E=A?na.dirname(E)+\"/\":__dirname+\"/\";ma=(b,c)=>{b=I(b)?new URL(b):na.normalize(b);return fs.readFileSync(b,c?void 0:\"utf8\")};H=b=>{b=ma(b,!0);b.buffer||(b=new Uint8Array(b));return b};G=(b,c,d,g=!0)=>{b=I(b)?new URL(b):na.normalize(b);fs.readFile(b,g?void 0:\"utf8\",(h,k)=>{h?d(h):c(g?k.buffer:k)})};!v.thisProgram&&1<process.argv.length&&(ja=process.argv[1].replace(/\\\\/g,\"/\"));process.argv.slice(2);z=(b,c)=>{process.exitCode=b;throw c;};v.inspect=()=>\"[Emscripten Module object]\";\nlet a;try{a=require(\"worker_threads\")}catch(b){throw console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?'),b;}global.Worker=a.Worker}else if(ka||A)A?E=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(E=document.currentScript.src),(typeof _scriptDir !== \"undefined\" && _scriptDir)&&(E=_scriptDir),0!==E.indexOf(\"blob:\")?E=E.substr(0,E.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):E=\"\",B||(ma=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);\nreturn b.responseText},A&&(H=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\"arraybuffer\";b.send(null);return new Uint8Array(b.response)}),G=(a,b,c)=>{var d=new XMLHttpRequest;d.open(\"GET\",a,!0);d.responseType=\"arraybuffer\";d.onload=()=>{200==d.status||0==d.status&&d.response?b(d.response):c()};d.onerror=c;d.send(null)});B&&\"undefined\"==typeof performance&&(global.performance=require(\"perf_hooks\").performance);var oa=console.log.bind(console),pa=console.error.bind(console);\nB&&(oa=(...a)=>fs.writeSync(1,a.join(\" \")+\"\\n\"),pa=(...a)=>fs.writeSync(2,a.join(\" \")+\"\\n\"));var qa=oa,J=pa;Object.assign(v,ia);ia=null;\"object\"!=typeof WebAssembly&&ra(\"no native wasm support detected\");var e,sa,K=!1,L,l,ba,ca,da,fa;function m(){var a=e.buffer;v.HEAP8=l=new Int8Array(a);v.HEAP16=new Int16Array(a);v.HEAPU8=ba=new Uint8Array(a);v.HEAPU16=new Uint16Array(a);v.HEAP32=ca=new Int32Array(a);v.HEAPU32=da=new Uint32Array(a);v.HEAPF32=new Float32Array(a);v.HEAPF64=fa=new Float64Array(a)}\nvar ta=16777216;\nif(D)e=v.wasmMemory;else if(v.wasmMemory)e=v.wasmMemory;else if(e=new WebAssembly.Memory({initial:ta/65536,maximum:65536,shared:!0}),!(e.buffer instanceof SharedArrayBuffer))throw J(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\"),B&&J(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)\"),Error(\"bad memory\");\nm();ta=e.buffer.byteLength;var ua=[],va=[],wa=[],M=0,xa=null,N=null;function ya(){M--;if(0==M&&(null!==xa&&(clearInterval(xa),xa=null),N)){var a=N;N=null;a()}}function ra(a){a=\"Aborted(\"+a+\")\";J(a);K=!0;L=1;a=new WebAssembly.RuntimeError(a+\". Build with -sASSERTIONS for more info.\");x(a);throw a;}var za=a=>a.startsWith(\"data:application/octet-stream;base64,\"),I=a=>a.startsWith(\"file://\"),O;O=\"ort-wasm-threaded.wasm\";za(O)||(O=la(O));\nfunction Aa(a){if(H)return H(a);throw\"both async and sync fetching of the wasm failed\";}function Ba(a){if(ka||A){if(\"function\"==typeof fetch&&!I(a))return fetch(a,{credentials:\"same-origin\"}).then(b=>{if(!b.ok)throw\"failed to load wasm binary file at '\"+a+\"'\";return b.arrayBuffer()}).catch(()=>Aa(a));if(G)return new Promise((b,c)=>{G(a,d=>b(new Uint8Array(d)),c)})}return Promise.resolve().then(()=>Aa(a))}\nfunction Ca(a,b,c){return Ba(a).then(d=>WebAssembly.instantiate(d,b)).then(d=>d).then(c,d=>{J(`failed to asynchronously prepare wasm: ${d}`);ra(d)})}function Da(a,b){var c=O;return\"function\"!=typeof WebAssembly.instantiateStreaming||za(c)||I(c)||B||\"function\"!=typeof fetch?Ca(c,a,b):fetch(c,{credentials:\"same-origin\"}).then(d=>WebAssembly.instantiateStreaming(d,a).then(b,function(g){J(`wasm streaming compile failed: ${g}`);J(\"falling back to ArrayBuffer instantiation\");return Ca(c,a,b)}))}\nvar P,Ea={921212:(a,b,c,d)=>{if(\"undefined\"==typeof v||!v.cb)return 1;a=Q(a>>>0);a.startsWith(\"./\")&&(a=a.substring(2));a=v.cb.get(a);if(!a)return 2;b>>>=0;c>>>=0;d>>>=0;if(b+c>a.byteLength)return 3;try{return n().set(a.subarray(b,b+c),d>>>0),0}catch{return 4}}};function R(a){this.name=\"ExitStatus\";this.message=`Program terminated with exit(${a})`;this.status=a}\nvar Fa=a=>{a.terminate();a.onmessage=()=>{}},Ha=a=>{0==S.Pa.length&&(Ga(),S.Ya(S.Pa[0]));var b=S.Pa.pop();if(!b)return 6;S.Qa.push(b);S.Ma[a.Oa]=b;b.Oa=a.Oa;var c={cmd:\"run\",start_routine:a.kb,arg:a.hb,pthread_ptr:a.Oa};B&&b.unref();b.postMessage(c,a.qb);return 0},T=0,Ia=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0,Ja=(a,b,c)=>{b>>>=0;var d=b+c;for(c=b;a[c]&&!(c>=d);)++c;if(16<c-b&&a.buffer&&Ia)return Ia.decode(a.buffer instanceof SharedArrayBuffer?a.slice(b,c):a.subarray(b,c));\nfor(d=\"\";b<c;){var g=a[b++];if(g&128){var h=a[b++]&63;if(192==(g&224))d+=String.fromCharCode((g&31)<<6|h);else{var k=a[b++]&63;g=224==(g&240)?(g&15)<<12|h<<6|k:(g&7)<<18|h<<12|k<<6|a[b++]&63;65536>g?d+=String.fromCharCode(g):(g-=65536,d+=String.fromCharCode(55296|g>>10,56320|g&1023))}}else d+=String.fromCharCode(g)}return d},Q=(a,b)=>(a>>>=0)?Ja(n(),a,b):\"\",La=a=>{var b=Ka();a=a();U(b);return a};\nfunction V(a,b){var c=arguments.length-2,d=arguments;return La(()=>{for(var g=Ma(8*c),h=g>>>3,k=0;k<c;k++){var t=d[2+k];ea()[h+k>>>0]=t}return Na(a,c,g,b)})}function Oa(a){if(D)return V(0,1,a);L=a;0<T||(S.lb(),v.onExit?.(a),K=!0);z(a,new R(a))}var Qa=a=>{L=a;if(D)throw Pa(a),\"unwind\";Oa(a)};function Ra(){for(var a=v.numThreads;a--;)Ga();ua.unshift(()=>{M++;Sa(()=>ya())})}function Ga(){var a=la(\"ort-wasm-threaded.worker.js\");a=new Worker(a);S.Pa.push(a)}\nfunction Sa(a){D?a():Promise.all(S.Pa.map(S.Ya)).then(a)}\nvar S={Pa:[],Qa:[],bb:[],Ma:{},Wa(){D?(S.receiveObjectTransfer=S.jb,S.threadInitTLS=S.ab,S.setExitStatus=S.$a):Ra()},$a:a=>L=a,tb:[\"$terminateWorker\"],lb:()=>{for(var a of S.Qa)Fa(a);for(a of S.Pa)Fa(a);S.Pa=[];S.Qa=[];S.Ma=[]},Za:a=>{var b=a.Oa;delete S.Ma[b];S.Pa.push(a);S.Qa.splice(S.Qa.indexOf(a),1);a.Oa=0;Ta(b)},jb(){},ab(){S.bb.forEach(a=>a())},Ya:a=>new Promise(b=>{a.onmessage=h=>{h=h.data;var k=h.cmd;if(h.targetThread&&h.targetThread!=W()){var t=S.Ma[h.targetThread];t?t.postMessage(h,h.transferList):\nJ(`Internal error! Worker sent a message \"${k}\" to target pthread ${h.targetThread}, but that thread no longer exists!`)}else if(\"checkMailbox\"===k)X();else if(\"spawnThread\"===k)Ha(h);else if(\"cleanupThread\"===k)S.Za(S.Ma[h.thread]);else if(\"killThread\"===k)h=h.thread,k=S.Ma[h],delete S.Ma[h],Fa(k),Ta(h),S.Qa.splice(S.Qa.indexOf(k),1),k.Oa=0;else if(\"cancelThread\"===k)S.Ma[h.thread].postMessage({cmd:\"cancel\"});else if(\"loaded\"===k)a.loaded=!0,B&&!a.Oa&&a.unref(),b(a);else if(\"alert\"===k)alert(`Thread ${h.threadId}: ${h.text}`);\nelse if(\"setimmediate\"===h.target)a.postMessage(h);else if(\"callHandler\"===k)v[h.handler](...h.args);else k&&J(`worker sent an unknown command ${k}`)};a.onerror=h=>{J(`${\"worker sent an error!\"} ${h.filename}:${h.lineno}: ${h.message}`);throw h;};B&&(a.on(\"message\",h=>a.onmessage({data:h})),a.on(\"error\",h=>a.onerror(h)));var c=[],d=[\"onExit\"],g;for(g of d)v.hasOwnProperty(g)&&c.push(g);a.postMessage({cmd:\"load\",handlers:c,urlOrBlob:v.mainScriptUrlOrBlob||_scriptDir,wasmMemory:e,wasmModule:sa})})};\nv.PThread=S;var Ua=a=>{for(;0<a.length;)a.shift()(v)};v.establishStackSpace=()=>{var a=W(),b=r()[a+52>>>2>>>0];a=r()[a+56>>>2>>>0];Va(b,b-a);U(b)};function Pa(a){if(D)return V(1,0,a);Qa(a)}var Wa=[],Xa;v.invokeEntryPoint=(a,b)=>{var c=Wa[a];c||(a>=Wa.length&&(Wa.length=a+1),Wa[a]=c=Xa.get(a));a=c(b);0<T?S.$a(a):Ya(a)};\nfunction Za(a){this.Va=a-24;this.gb=function(b){r()[this.Va+4>>>2>>>0]=b};this.fb=function(b){r()[this.Va+8>>>2>>>0]=b};this.Wa=function(b,c){this.eb();this.gb(b);this.fb(c)};this.eb=function(){r()[this.Va+16>>>2>>>0]=0}}var $a=0,ab=0;function bb(a,b,c,d){return D?V(2,1,a,b,c,d):cb(a,b,c,d)}\nfunction cb(a,b,c,d){a>>>=0;b>>>=0;c>>>=0;d>>>=0;if(\"undefined\"==typeof SharedArrayBuffer)return J(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\"),6;var g=[];if(D&&0===g.length)return bb(a,b,c,d);a={kb:c,Oa:a,hb:d,qb:g};return D?(a.sb=\"spawnThread\",postMessage(a,g),0):Ha(a)}function db(a,b,c){return D?V(3,1,a,b,c):0}function eb(a,b){if(D)return V(4,1,a,b)}\nvar fb=a=>{for(var b=0,c=0;c<a.length;++c){var d=a.charCodeAt(c);127>=d?b++:2047>=d?b+=2:55296<=d&&57343>=d?(b+=4,++c):b+=3}return b},gb=(a,b,c,d)=>{c>>>=0;if(!(0<d))return 0;var g=c;d=c+d-1;for(var h=0;h<a.length;++h){var k=a.charCodeAt(h);if(55296<=k&&57343>=k){var t=a.charCodeAt(++h);k=65536+((k&1023)<<10)|t&1023}if(127>=k){if(c>=d)break;b[c++>>>0]=k}else{if(2047>=k){if(c+1>=d)break;b[c++>>>0]=192|k>>6}else{if(65535>=k){if(c+2>=d)break;b[c++>>>0]=224|k>>12}else{if(c+3>=d)break;b[c++>>>0]=240|k>>\n18;b[c++>>>0]=128|k>>12&63}b[c++>>>0]=128|k>>6&63}b[c++>>>0]=128|k&63}}b[c>>>0]=0;return c-g},hb=(a,b,c)=>gb(a,n(),b,c);function ib(a,b){if(D)return V(5,1,a,b)}function jb(a,b,c){if(D)return V(6,1,a,b,c)}function kb(a,b,c){return D?V(7,1,a,b,c):0}function lb(a,b){if(D)return V(8,1,a,b)}function mb(a,b,c){if(D)return V(9,1,a,b,c)}function nb(a,b,c,d){if(D)return V(10,1,a,b,c,d)}function ob(a,b,c,d){if(D)return V(11,1,a,b,c,d)}function pb(a,b,c,d){if(D)return V(12,1,a,b,c,d)}\nfunction qb(a){if(D)return V(13,1,a)}function rb(a,b){if(D)return V(14,1,a,b)}function sb(a,b,c){if(D)return V(15,1,a,b,c)}function tb(a){a>>>=0;\"function\"===typeof Atomics.rb&&(Atomics.rb(p(),a>>>2,a).value.then(X),a+=128,Atomics.store(p(),a>>>2,1))}v.__emscripten_thread_mailbox_await=tb;var X=()=>{var a=W();if(a&&(tb(a),a=ub,!K))try{if(a(),!(0<T))try{D?Ya(L):Qa(L)}catch(b){b instanceof R||\"unwind\"==b||z(1,b)}}catch(b){b instanceof R||\"unwind\"==b||z(1,b)}};v.checkMailbox=X;\nvar vb=[],Y=a=>0===a%4&&(0!==a%100||0===a%400),wb=[0,31,60,91,121,152,182,213,244,274,305,335],xb=[0,31,59,90,120,151,181,212,243,273,304,334];function yb(a,b,c,d,g,h,k,t){return D?V(16,1,a,b,c,d,g,h,k,t):-52}function zb(a,b,c,d,g,h,k){if(D)return V(17,1,a,b,c,d,g,h,k)}\nvar Bb=a=>{var b=fb(a)+1,c=Ab(b);c&&hb(a,c,b);return c},Cb=[],Db={},Fb=()=>{if(!Eb){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:ja||\"./this.program\"},b;for(b in Db)void 0===Db[b]?delete a[b]:a[b]=Db[b];var c=[];for(b in a)c.push(`${b}=${a[b]}`);Eb=c}return Eb},Eb;\nfunction Gb(a,b){if(D)return V(18,1,a,b);a>>>=0;b>>>=0;var c=0;Fb().forEach((d,g)=>{var h=b+c;g=r()[a+4*g>>>2>>>0]=h;for(h=0;h<d.length;++h)aa()[g++>>>0>>>0]=d.charCodeAt(h);aa()[g>>>0>>>0]=0;c+=d.length+1});return 0}function Kb(a,b){if(D)return V(19,1,a,b);a>>>=0;b>>>=0;var c=Fb();r()[a>>>2>>>0]=c.length;var d=0;c.forEach(g=>d+=g.length+1);r()[b>>>2>>>0]=d;return 0}function Lb(a){return D?V(20,1,a):52}function Mb(a,b,c,d){return D?V(21,1,a,b,c,d):52}\nfunction Nb(a,b,c,d,g){return D?V(22,1,a,b,c,d,g):70}var Ob=[null,[],[]];function Pb(a,b,c,d){if(D)return V(23,1,a,b,c,d);b>>>=0;c>>>=0;d>>>=0;for(var g=0,h=0;h<c;h++){var k=r()[b>>>2>>>0],t=r()[b+4>>>2>>>0];b+=8;for(var C=0;C<t;C++){var w=n()[k+C>>>0],y=Ob[a];0===w||10===w?((1===a?qa:J)(Ja(y,0)),y.length=0):y.push(w)}g+=t}r()[d>>>2>>>0]=g;return 0}var Qb=[31,29,31,30,31,30,31,31,30,31,30,31],Rb=[31,28,31,30,31,30,31,31,30,31,30,31];\nfunction Sb(a){var b=Array(fb(a)+1);gb(a,b,0,b.length);return b}var Tb=(a,b)=>{aa().set(a,b>>>0)};\nfunction Ub(a,b,c,d){function g(f,q,u){for(f=\"number\"==typeof f?f.toString():f||\"\";f.length<q;)f=u[0]+f;return f}function h(f,q){return g(f,q,\"0\")}function k(f,q){function u(Hb){return 0>Hb?-1:0<Hb?1:0}var F;0===(F=u(f.getFullYear()-q.getFullYear()))&&0===(F=u(f.getMonth()-q.getMonth()))&&(F=u(f.getDate()-q.getDate()));return F}function t(f){switch(f.getDay()){case 0:return new Date(f.getFullYear()-1,11,29);case 1:return f;case 2:return new Date(f.getFullYear(),0,3);case 3:return new Date(f.getFullYear(),\n0,2);case 4:return new Date(f.getFullYear(),0,1);case 5:return new Date(f.getFullYear()-1,11,31);case 6:return new Date(f.getFullYear()-1,11,30)}}function C(f){var q=f.Ra;for(f=new Date((new Date(f.Sa+1900,0,1)).getTime());0<q;){var u=f.getMonth(),F=(Y(f.getFullYear())?Qb:Rb)[u];if(q>F-f.getDate())q-=F-f.getDate()+1,f.setDate(1),11>u?f.setMonth(u+1):(f.setMonth(0),f.setFullYear(f.getFullYear()+1));else{f.setDate(f.getDate()+q);break}}u=new Date(f.getFullYear()+1,0,4);q=t(new Date(f.getFullYear(),\n0,4));u=t(u);return 0>=k(q,f)?0>=k(u,f)?f.getFullYear()+1:f.getFullYear():f.getFullYear()-1}a>>>=0;b>>>=0;c>>>=0;d>>>=0;var w=r()[d+40>>>2>>>0];d={ob:p()[d>>>2>>>0],nb:p()[d+4>>>2>>>0],Ta:p()[d+8>>>2>>>0],Xa:p()[d+12>>>2>>>0],Ua:p()[d+16>>>2>>>0],Sa:p()[d+20>>>2>>>0],Na:p()[d+24>>>2>>>0],Ra:p()[d+28>>>2>>>0],ub:p()[d+32>>>2>>>0],mb:p()[d+36>>>2>>>0],pb:w?Q(w):\"\"};c=Q(c);w={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\n\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var y in w)c=c.replace(new RegExp(y,\"g\"),w[y]);var Ib=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),Jb=\"January February March April May June July August September October November December\".split(\" \");w={\"%a\":f=>Ib[f.Na].substring(0,3),\n\"%A\":f=>Ib[f.Na],\"%b\":f=>Jb[f.Ua].substring(0,3),\"%B\":f=>Jb[f.Ua],\"%C\":f=>h((f.Sa+1900)/100|0,2),\"%d\":f=>h(f.Xa,2),\"%e\":f=>g(f.Xa,2,\" \"),\"%g\":f=>C(f).toString().substring(2),\"%G\":f=>C(f),\"%H\":f=>h(f.Ta,2),\"%I\":f=>{f=f.Ta;0==f?f=12:12<f&&(f-=12);return h(f,2)},\"%j\":f=>{for(var q=0,u=0;u<=f.Ua-1;q+=(Y(f.Sa+1900)?Qb:Rb)[u++]);return h(f.Xa+q,3)},\"%m\":f=>h(f.Ua+1,2),\"%M\":f=>h(f.nb,2),\"%n\":()=>\"\\n\",\"%p\":f=>0<=f.Ta&&12>f.Ta?\"AM\":\"PM\",\"%S\":f=>h(f.ob,2),\"%t\":()=>\"\\t\",\"%u\":f=>f.Na||7,\"%U\":f=>h(Math.floor((f.Ra+\n7-f.Na)/7),2),\"%V\":f=>{var q=Math.floor((f.Ra+7-(f.Na+6)%7)/7);2>=(f.Na+371-f.Ra-2)%7&&q++;if(q)53==q&&(u=(f.Na+371-f.Ra)%7,4==u||3==u&&Y(f.Sa)||(q=1));else{q=52;var u=(f.Na+7-f.Ra-1)%7;(4==u||5==u&&Y(f.Sa%400-1))&&q++}return h(q,2)},\"%w\":f=>f.Na,\"%W\":f=>h(Math.floor((f.Ra+7-(f.Na+6)%7)/7),2),\"%y\":f=>(f.Sa+1900).toString().substring(2),\"%Y\":f=>f.Sa+1900,\"%z\":f=>{f=f.mb;var q=0<=f;f=Math.abs(f)/60;return(q?\"+\":\"-\")+String(\"0000\"+(f/60*100+f%60)).slice(-4)},\"%Z\":f=>f.pb,\"%%\":()=>\"%\"};c=c.replace(/%%/g,\n\"\\x00\\x00\");for(y in w)c.includes(y)&&(c=c.replace(new RegExp(y,\"g\"),w[y](d)));c=c.replace(/\\0\\0/g,\"%\");y=Sb(c);if(y.length>b)return 0;Tb(y,a);return y.length-1}S.Wa();\nvar Vb=[Oa,Pa,bb,db,eb,ib,jb,kb,lb,mb,nb,ob,pb,qb,rb,sb,yb,zb,Gb,Kb,Lb,Mb,Nb,Pb],Zb={b:function(a,b,c){a>>>=0;(new Za(a)).Wa(b>>>0,c>>>0);$a=a;ab++;throw $a;},L:function(a){Wb(a>>>0,!A,1,!ka,131072,!1);S.ab()},j:function(a){a>>>=0;D?postMessage({cmd:\"cleanupThread\",thread:a}):S.Za(S.Ma[a])},H:cb,h:db,S:eb,D:ib,F:jb,T:kb,Q:lb,J:mb,P:nb,n:ob,E:pb,B:qb,R:rb,C:sb,p:()=>1,z:function(a,b){a>>>=0;a==b>>>0?setTimeout(()=>X()):D?postMessage({targetThread:a,cmd:\"checkMailbox\"}):(a=S.Ma[a])&&a.postMessage({cmd:\"checkMailbox\"})},\nI:function(a,b,c,d){b>>>=0;vb.length=c;d=d>>>0>>>3;for(var g=0;g<c;g++)vb[g]=ea()[d+g>>>0];a=0>a?Ea[-a-1]:Vb[a];S.ib=b;b=a.apply(null,vb);S.ib=0;return b},K:tb,o:function(a){B&&S.Ma[a>>>0].ref()},s:function(a,b,c){a=b+2097152>>>0<4194305-!!a?(a>>>0)+4294967296*b:NaN;c>>>=0;a=new Date(1E3*a);p()[c>>>2>>>0]=a.getUTCSeconds();p()[c+4>>>2>>>0]=a.getUTCMinutes();p()[c+8>>>2>>>0]=a.getUTCHours();p()[c+12>>>2>>>0]=a.getUTCDate();p()[c+16>>>2>>>0]=a.getUTCMonth();p()[c+20>>>2>>>0]=a.getUTCFullYear()-1900;\np()[c+24>>>2>>>0]=a.getUTCDay();a=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864E5|0;p()[c+28>>>2>>>0]=a},t:function(a,b,c){a=b+2097152>>>0<4194305-!!a?(a>>>0)+4294967296*b:NaN;c>>>=0;a=new Date(1E3*a);p()[c>>>2>>>0]=a.getSeconds();p()[c+4>>>2>>>0]=a.getMinutes();p()[c+8>>>2>>>0]=a.getHours();p()[c+12>>>2>>>0]=a.getDate();p()[c+16>>>2>>>0]=a.getMonth();p()[c+20>>>2>>>0]=a.getFullYear()-1900;p()[c+24>>>2>>>0]=a.getDay();b=(Y(a.getFullYear())?wb:xb)[a.getMonth()]+a.getDate()-1|0;p()[c+28>>>\n2>>>0]=b;p()[c+36>>>2>>>0]=-(60*a.getTimezoneOffset());b=(new Date(a.getFullYear(),6,1)).getTimezoneOffset();var d=(new Date(a.getFullYear(),0,1)).getTimezoneOffset();a=(b!=d&&a.getTimezoneOffset()==Math.min(d,b))|0;p()[c+32>>>2>>>0]=a},u:function(a){a>>>=0;var b=new Date(p()[a+20>>>2>>>0]+1900,p()[a+16>>>2>>>0],p()[a+12>>>2>>>0],p()[a+8>>>2>>>0],p()[a+4>>>2>>>0],p()[a>>>2>>>0],0),c=p()[a+32>>>2>>>0],d=b.getTimezoneOffset(),g=(new Date(b.getFullYear(),6,1)).getTimezoneOffset(),h=(new Date(b.getFullYear(),\n0,1)).getTimezoneOffset(),k=Math.min(h,g);0>c?p()[a+32>>>2>>>0]=Number(g!=h&&k==d):0<c!=(k==d)&&(g=Math.max(h,g),b.setTime(b.getTime()+6E4*((0<c?k:g)-d)));p()[a+24>>>2>>>0]=b.getDay();c=(Y(b.getFullYear())?wb:xb)[b.getMonth()]+b.getDate()-1|0;p()[a+28>>>2>>>0]=c;p()[a>>>2>>>0]=b.getSeconds();p()[a+4>>>2>>>0]=b.getMinutes();p()[a+8>>>2>>>0]=b.getHours();p()[a+12>>>2>>>0]=b.getDate();p()[a+16>>>2>>>0]=b.getMonth();p()[a+20>>>2>>>0]=b.getYear();a=b.getTime();isNaN(a)?(p()[Xb()>>>2>>>0]=61,a=-1):a/=1E3;\nreturn Yb((P=a,1<=+Math.abs(P)?0<P?+Math.floor(P/4294967296)>>>0:~~+Math.ceil((P-+(~~P>>>0))/4294967296)>>>0:0)),a>>>0},q:yb,r:zb,y:function(a,b,c){function d(w){return(w=w.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?w[1]:\"GMT\"}a>>>=0;b>>>=0;c>>>=0;var g=(new Date).getFullYear(),h=new Date(g,0,1),k=new Date(g,6,1);g=h.getTimezoneOffset();var t=k.getTimezoneOffset(),C=Math.max(g,t);r()[a>>>2>>>0]=60*C;p()[b>>>2>>>0]=Number(g!=t);a=d(h);b=d(k);a=Bb(a);b=Bb(b);t<g?(r()[c>>>2>>>0]=a,r()[c+4>>>2>>>0]=b):\n(r()[c>>>2>>>0]=b,r()[c+4>>>2>>>0]=a)},c:()=>{ra(\"\")},O:function(a,b,c){a>>>=0;b>>>=0;c>>>=0;Cb.length=0;for(var d;d=n()[b++>>>0];){var g=105!=d;g&=112!=d;c+=g&&c%8?4:0;Cb.push(112==d?r()[c>>>2>>>0]:105==d?p()[c>>>2>>>0]:ea()[c>>>3>>>0]);c+=g?8:4}return Ea[a].apply(null,Cb)},k:()=>{},i:()=>Date.now(),U:()=>{T+=1;throw\"unwind\";},A:function(){return 4294901760},e:()=>performance.timeOrigin+performance.now(),f:()=>B?require(\"os\").cpus().length:navigator.hardwareConcurrency,x:function(a){a>>>=0;var b=\nn().length;if(a<=b||4294901760<a)return!1;for(var c=1;4>=c;c*=2){var d=b*(1+.2/c);d=Math.min(d,a+100663296);var g=Math;d=Math.max(a,d);a:{g=(g.min.call(g,4294901760,d+(65536-d%65536)%65536)-e.buffer.byteLength+65535)/65536;try{e.grow(g);m();var h=1;break a}catch(k){}h=void 0}if(h)return!0}return!1},M:Gb,N:Kb,G:Qa,g:Lb,m:Mb,v:Nb,l:Pb,a:e||v.wasmMemory,w:Ub,d:function(a,b,c,d){return Ub(a>>>0,b>>>0,c>>>0,d>>>0)}},Z=function(){function a(c,d){Z=c.exports;Z=$b();S.bb.push(Z.za);Xa=Z.Aa;va.unshift(Z.V);\nsa=d;ya();return Z}var b={a:Zb};M++;if(v.instantiateWasm)try{return v.instantiateWasm(b,a)}catch(c){J(`Module.instantiateWasm callback failed with error: ${c}`),x(c)}Da(b,function(c){a(c.instance,c.module)}).catch(x);return{}}();v._OrtInit=(a,b)=>(v._OrtInit=Z.W)(a,b);v._OrtGetLastError=(a,b)=>(v._OrtGetLastError=Z.X)(a,b);v._OrtCreateSessionOptions=(a,b,c,d,g,h,k,t,C,w)=>(v._OrtCreateSessionOptions=Z.Y)(a,b,c,d,g,h,k,t,C,w);\nv._OrtAppendExecutionProvider=(a,b)=>(v._OrtAppendExecutionProvider=Z.Z)(a,b);v._OrtAddFreeDimensionOverride=(a,b,c)=>(v._OrtAddFreeDimensionOverride=Z._)(a,b,c);v._OrtAddSessionConfigEntry=(a,b,c)=>(v._OrtAddSessionConfigEntry=Z.$)(a,b,c);v._OrtReleaseSessionOptions=a=>(v._OrtReleaseSessionOptions=Z.aa)(a);v._OrtCreateSession=(a,b,c)=>(v._OrtCreateSession=Z.ba)(a,b,c);v._OrtReleaseSession=a=>(v._OrtReleaseSession=Z.ca)(a);v._OrtGetInputOutputCount=(a,b,c)=>(v._OrtGetInputOutputCount=Z.da)(a,b,c);\nv._OrtGetInputName=(a,b)=>(v._OrtGetInputName=Z.ea)(a,b);v._OrtGetOutputName=(a,b)=>(v._OrtGetOutputName=Z.fa)(a,b);v._OrtFree=a=>(v._OrtFree=Z.ga)(a);v._OrtCreateTensor=(a,b,c,d,g,h)=>(v._OrtCreateTensor=Z.ha)(a,b,c,d,g,h);v._OrtGetTensorData=(a,b,c,d,g)=>(v._OrtGetTensorData=Z.ia)(a,b,c,d,g);v._OrtReleaseTensor=a=>(v._OrtReleaseTensor=Z.ja)(a);v._OrtCreateRunOptions=(a,b,c,d)=>(v._OrtCreateRunOptions=Z.ka)(a,b,c,d);v._OrtAddRunConfigEntry=(a,b,c)=>(v._OrtAddRunConfigEntry=Z.la)(a,b,c);\nv._OrtReleaseRunOptions=a=>(v._OrtReleaseRunOptions=Z.ma)(a);v._OrtCreateBinding=a=>(v._OrtCreateBinding=Z.na)(a);v._OrtBindInput=(a,b,c)=>(v._OrtBindInput=Z.oa)(a,b,c);v._OrtBindOutput=(a,b,c,d)=>(v._OrtBindOutput=Z.pa)(a,b,c,d);v._OrtClearBoundOutputs=a=>(v._OrtClearBoundOutputs=Z.qa)(a);v._OrtReleaseBinding=a=>(v._OrtReleaseBinding=Z.ra)(a);v._OrtRunWithBinding=(a,b,c,d,g)=>(v._OrtRunWithBinding=Z.sa)(a,b,c,d,g);v._OrtRun=(a,b,c,d,g,h,k,t)=>(v._OrtRun=Z.ta)(a,b,c,d,g,h,k,t);\nv._OrtEndProfiling=a=>(v._OrtEndProfiling=Z.ua)(a);var Xb=()=>(Xb=Z.va)(),W=v._pthread_self=()=>(W=v._pthread_self=Z.wa)(),Ab=v._malloc=a=>(Ab=v._malloc=Z.xa)(a);v._free=a=>(v._free=Z.ya)(a);v.__emscripten_tls_init=()=>(v.__emscripten_tls_init=Z.za)();var Wb=v.__emscripten_thread_init=(a,b,c,d,g,h)=>(Wb=v.__emscripten_thread_init=Z.Ba)(a,b,c,d,g,h);v.__emscripten_thread_crashed=()=>(v.__emscripten_thread_crashed=Z.Ca)();\nvar Na=(a,b,c,d)=>(Na=Z.Da)(a,b,c,d),Ta=a=>(Ta=Z.Ea)(a),Ya=v.__emscripten_thread_exit=a=>(Ya=v.__emscripten_thread_exit=Z.Fa)(a),ub=()=>(ub=Z.Ga)(),Yb=a=>(Yb=Z.Ha)(a),Va=(a,b)=>(Va=Z.Ia)(a,b),Ka=()=>(Ka=Z.Ja)(),U=a=>(U=Z.Ka)(a),Ma=a=>(Ma=Z.La)(a);function $b(){var a=Z;a=Object.assign({},a);var b=d=>()=>d()>>>0,c=d=>g=>d(g)>>>0;a.va=b(a.va);a.wa=b(a.wa);a.xa=c(a.xa);a.emscripten_main_runtime_thread_id=b(a.emscripten_main_runtime_thread_id);a.Ja=b(a.Ja);a.La=c(a.La);return a}v.wasmMemory=e;\nv.stackAlloc=Ma;v.stackSave=Ka;v.stackRestore=U;v.keepRuntimeAlive=()=>0<T;v.UTF8ToString=Q;v.stringToUTF8=hb;v.lengthBytesUTF8=fb;v.ExitStatus=R;v.PThread=S;var ac;N=function bc(){ac||cc();ac||(N=bc)};function cc(){if(!(0<M))if(D)ha(v),D||Ua(va),startWorker(v);else{if(v.preRun)for(\"function\"==typeof v.preRun&&(v.preRun=[v.preRun]);v.preRun.length;)ua.unshift(v.preRun.shift());Ua(ua);0<M||ac||(ac=!0,v.calledRun=!0,K||(D||Ua(va),ha(v),D||Ua(wa)))}}cc();\n\n\n  return moduleArg.ready\n}\n);\n})();\n;\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = ortWasmThreaded;\nelse if (typeof define === 'function' && define['amd'])\n  define([], () => ortWasmThreaded);\n", "\"use strict\";var Module={},ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require(\"worker_threads\"),parentPort=nodeWorkerThreads.parentPort;parentPort.on(\"message\",e=>onmessage({data:e}));var fs=require(\"fs\"),vm=require(\"vm\");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,\"utf8\"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(\" \");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(\" \");postMessage({cmd:\"alert\",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd===\"load\"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:\"loaded\"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:\"callHandler\",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob==\"string\")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd===\"run\"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!=\"unwind\")throw a}}else e.data.cmd===\"cancel\"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target===\"setimmediate\"||(e.data.cmd===\"checkMailbox\"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed?.(),a}}self.onmessage=handleMessage;\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport * as path from 'node:path';\nimport {Env} from 'onnxruntime-common';\n\nimport {OrtWasmModule} from './binding/ort-wasm';\nimport {OrtWasmThreadedModule} from './binding/ort-wasm-threaded';\n\n/* eslint-disable @typescript-eslint/no-require-imports */\nlet ortWasmFactory: EmscriptenModuleFactory<OrtWasmModule>;\n\nif (!BUILD_DEFS.DISABLE_TRAINING) {\n  ortWasmFactory = require('./binding/ort-training-wasm-simd.js');\n} else {\n  ortWasmFactory =\n      BUILD_DEFS.DISABLE_WEBGPU ? require('./binding/ort-wasm.js') : require('./binding/ort-wasm-simd.jsep.js');\n}\n\nconst ortWasmFactoryThreaded: EmscriptenModuleFactory<OrtWasmModule> = !BUILD_DEFS.DISABLE_WASM_THREAD ?\n    (BUILD_DEFS.DISABLE_WEBGPU ? require('./binding/ort-wasm-threaded.js') :\n                                 require('./binding/ort-wasm-simd-threaded.jsep.js')) :\n    ortWasmFactory;\n/* eslint-enable @typescript-eslint/no-require-imports */\n\nlet wasm: OrtWasmModule|undefined;\nlet initialized = false;\nlet initializing = false;\nlet aborted = false;\n\nconst isMultiThreadSupported = (numThreads: number): boolean => {\n  // WebAssembly threads are set to 1 (single thread).\n  if (numThreads === 1) {\n    return false;\n  }\n\n  // If 'SharedArrayBuffer' is not available, WebAssembly threads will not work.\n  if (typeof SharedArrayBuffer === 'undefined') {\n    if (typeof self !== 'undefined' && !self.crossOriginIsolated) {\n      // eslint-disable-next-line no-console\n      console.warn(\n          'env.wasm.numThreads is set to ' + numThreads +\n          ', but this will not work unless you enable crossOriginIsolated mode. ' +\n          'See https://web.dev/cross-origin-isolation-guide/ for more info.');\n    }\n    return false;\n  }\n\n  // onnxruntime-web does not support multi-threads in Node.js.\n  if (typeof process !== 'undefined' && process.versions && process.versions.node) {\n    // eslint-disable-next-line no-console\n    console.warn(\n        'env.wasm.numThreads is set to ' + numThreads +\n        ', however, currently onnxruntime-web does not support multi-threads in Node.js. ' +\n        'Please consider using onnxruntime-node for performance critical scenarios.');\n  }\n\n  try {\n    // Test for transferability of SABs (for browsers. needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    if (typeof MessageChannel !== 'undefined') {\n      new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    }\n\n    // Test for WebAssembly threads capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing threaded instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isSimdSupported = (): boolean => {\n  try {\n    // Test for WebAssembly SIMD capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing SIMD instructions.\n\n    // The binary data is generated from the following code by wat2wasm:\n    //\n    // (module\n    //   (type $t0 (func))\n    //   (func $f0 (type $t0)\n    //     (drop\n    //       (i32x4.dot_i16x8_s\n    //         (i8x16.splat\n    //           (i32.const 0))\n    //         (v128.const i32x4 0x00000000 0x00000000 0x00000000 0x00000000)))))\n\n    return WebAssembly.validate(new Uint8Array([\n      0,   97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 30, 1,   28,  0, 65, 0,\n      253, 15, 253, 12,  0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0,  0,  253, 186, 1, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst getWasmFileName = (useSimd: boolean, useThreads: boolean) => {\n  if (useSimd) {\n    if (!BUILD_DEFS.DISABLE_TRAINING) {\n      return 'ort-training-wasm-simd.wasm';\n    }\n    return useThreads ? 'ort-wasm-simd-threaded.wasm' : 'ort-wasm-simd.wasm';\n  } else {\n    return useThreads ? 'ort-wasm-threaded.wasm' : 'ort-wasm.wasm';\n  }\n};\n\nexport const initializeWebAssembly = async(flags: Env.WebAssemblyFlags): Promise<void> => {\n  if (initialized) {\n    return Promise.resolve();\n  }\n  if (initializing) {\n    throw new Error('multiple calls to \\'initializeWebAssembly()\\' detected.');\n  }\n  if (aborted) {\n    throw new Error('previous call to \\'initializeWebAssembly()\\' failed.');\n  }\n\n  initializing = true;\n\n  // wasm flags are already initialized\n  const timeout = flags.initTimeout!;\n  const numThreads = flags.numThreads!;\n  const simd = flags.simd!;\n\n  const useThreads = isMultiThreadSupported(numThreads);\n  const useSimd = simd && isSimdSupported();\n\n  const wasmPaths = flags.wasmPaths;\n  const wasmPrefixOverride = typeof wasmPaths === 'string' ? wasmPaths : undefined;\n  const wasmFileName = getWasmFileName(useSimd, useThreads);\n  const wasmPathOverride = typeof wasmPaths === 'object' ? wasmPaths[wasmFileName] : undefined;\n\n  let isTimeout = false;\n\n  const tasks: Array<Promise<void>> = [];\n\n  // promise for timeout\n  if (timeout > 0) {\n    tasks.push(new Promise((resolve) => {\n      setTimeout(() => {\n        isTimeout = true;\n        resolve();\n      }, timeout);\n    }));\n  }\n\n  // promise for module initialization\n  tasks.push(new Promise((resolve, reject) => {\n    const factory = useThreads ? ortWasmFactoryThreaded : ortWasmFactory;\n    const config: Partial<OrtWasmModule> = {\n      locateFile: (fileName: string, scriptDirectory: string) => {\n        if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads && fileName.endsWith('.worker.js') &&\n            typeof Blob !== 'undefined') {\n          return URL.createObjectURL(new Blob(\n              [\n                // This require() function is handled by esbuild plugin to load file content as string.\n                // eslint-disable-next-line @typescript-eslint/no-require-imports\n                require('./binding/ort-wasm-threaded.worker.js')\n              ],\n              {type: 'text/javascript'}));\n        }\n\n        if (fileName.endsWith('.wasm')) {\n          if (wasmPathOverride) {\n            return wasmPathOverride;\n          }\n\n          const prefix = wasmPrefixOverride ?? scriptDirectory;\n\n          if (!BUILD_DEFS.DISABLE_WEBGPU) {\n            if (wasmFileName === 'ort-wasm-simd.wasm') {\n              return prefix + 'ort-wasm-simd.jsep.wasm';\n            } else if (wasmFileName === 'ort-wasm-simd-threaded.wasm') {\n              return prefix + 'ort-wasm-simd-threaded.jsep.wasm';\n            }\n          }\n\n          return prefix + wasmFileName;\n        }\n\n        return scriptDirectory + fileName;\n      }\n    };\n\n    if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads) {\n      config.numThreads = numThreads;\n      if (typeof Blob === 'undefined') {\n        config.mainScriptUrlOrBlob = path.join(__dirname, 'ort-wasm-threaded.js');\n      } else {\n        const scriptSourceCode = `var ortWasmThreaded=${factory.toString()};`;\n        config.mainScriptUrlOrBlob = new Blob([scriptSourceCode], {type: 'text/javascript'});\n      }\n    }\n\n    factory(config).then(\n        // wasm module initialized successfully\n        module => {\n          initializing = false;\n          initialized = true;\n          wasm = module;\n          resolve();\n        },\n        // wasm module failed to initialize\n        (what) => {\n          initializing = false;\n          aborted = true;\n          reject(what);\n        });\n  }));\n\n  await Promise.race(tasks);\n\n  if (isTimeout) {\n    throw new Error(`WebAssembly backend initializing failed due to timeout: ${timeout}ms`);\n  }\n};\n\nexport const getInstance = (): OrtWasmModule => {\n  if (initialized && wasm) {\n    return wasm;\n  }\n\n  throw new Error('WebAssembly is not initialized yet.');\n};\n\nexport const dispose = (): void => {\n  if (initialized && !initializing && !aborted) {\n    initializing = true;\n\n    (wasm as OrtWasmThreadedModule).PThread?.terminateAllThreads();\n    wasm = undefined;\n\n    initializing = false;\n    initialized = false;\n    aborted = true;\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getInstance} from './wasm-factory';\n\nexport const allocWasmString = (data: string, allocs: number[]): number => {\n  const wasm = getInstance();\n\n  const dataLength = wasm.lengthBytesUTF8(data) + 1;\n  const dataOffset = wasm._malloc(dataLength);\n  wasm.stringToUTF8(data, dataOffset, dataLength);\n  allocs.push(dataOffset);\n\n  return dataOffset;\n};\n\ninterface ExtraOptionsHandler {\n  (name: string, value: string): void;\n}\n\nexport const iterateExtraOptions =\n    (options: Record<string, unknown>, prefix: string, seen: WeakSet<Record<string, unknown>>,\n     handler: ExtraOptionsHandler): void => {\n      if (typeof options == 'object' && options !== null) {\n        if (seen.has(options)) {\n          throw new Error('Circular reference in options');\n        } else {\n          seen.add(options);\n        }\n      }\n\n      Object.entries(options).forEach(([key, value]) => {\n        const name = (prefix) ? prefix + key : key;\n        if (typeof value === 'object') {\n          iterateExtraOptions(value as Record<string, unknown>, name + '.', seen, handler);\n        } else if (typeof value === 'string' || typeof value === 'number') {\n          handler(name, value.toString());\n        } else if (typeof value === 'boolean') {\n          handler(name, (value) ? '1' : '0');\n        } else {\n          throw new Error(`Can't handle extra config type: ${typeof value}`);\n        }\n      });\n    };\n\n/**\n * check web assembly API's last error and throw error if any error occurred.\n * @param message a message used when an error occurred.\n */\nexport const checkLastError = (message: string): void => {\n  const wasm = getInstance();\n\n  const stack = wasm.stackSave();\n  try {\n    const paramsOffset = wasm.stackAlloc(8);\n    wasm._OrtGetLastError(paramsOffset, paramsOffset + 4);\n    const errorCode = wasm.HEAP32[paramsOffset / 4];\n    const errorMessagePointer = wasm.HEAPU32[paramsOffset / 4 + 1];\n    const errorMessage = errorMessagePointer ? wasm.UTF8ToString(errorMessagePointer) : '';\n    throw new Error(`${message} ERROR_CODE: ${errorCode}, ERROR_MESSAGE: ${errorMessage}`);\n  } finally {\n    wasm.stackRestore(stack);\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {getInstance} from './wasm-factory';\nimport {allocWasmString, checkLastError, iterateExtraOptions} from './wasm-utils';\n\nexport const setRunOptions = (options: InferenceSession.RunOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let runOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const runOptions: InferenceSession.RunOptions = options || {};\n\n  try {\n    if (options?.logSeverityLevel === undefined) {\n      runOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      runOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.terminate === undefined) {\n      runOptions.terminate = false;\n    }\n\n    let tagDataOffset = 0;\n    if (options?.tag !== undefined) {\n      tagDataOffset = allocWasmString(options.tag, allocs);\n    }\n\n    runOptionsHandle = wasm._OrtCreateRunOptions(\n        runOptions.logSeverityLevel!, runOptions.logVerbosityLevel!, !!runOptions.terminate!, tagDataOffset);\n    if (runOptionsHandle === 0) {\n      checkLastError('Can\\'t create run options.');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddRunConfigEntry(runOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          checkLastError(`Can't set a run config entry: ${key} - ${value}.`);\n        }\n      });\n    }\n\n    return [runOptionsHandle, allocs];\n  } catch (e) {\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    allocs.forEach(alloc => wasm._free(alloc));\n    throw e;\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {getInstance} from './wasm-factory';\nimport {allocWasmString, checkLastError, iterateExtraOptions} from './wasm-utils';\n\nconst getGraphOptimzationLevel = (graphOptimizationLevel: string|unknown): number => {\n  switch (graphOptimizationLevel) {\n    case 'disabled':\n      return 0;\n    case 'basic':\n      return 1;\n    case 'extended':\n      return 2;\n    case 'all':\n      return 99;\n    default:\n      throw new Error(`unsupported graph optimization level: ${graphOptimizationLevel}`);\n  }\n};\n\nconst getExecutionMode = (executionMode: 'sequential'|'parallel'): number => {\n  switch (executionMode) {\n    case 'sequential':\n      return 0;\n    case 'parallel':\n      return 1;\n    default:\n      throw new Error(`unsupported execution mode: ${executionMode}`);\n  }\n};\n\nconst appendDefaultOptions = (options: InferenceSession.SessionOptions): void => {\n  if (!options.extra) {\n    options.extra = {};\n  }\n  if (!options.extra.session) {\n    options.extra.session = {};\n  }\n  const session = options.extra.session as Record<string, string>;\n  if (!session.use_ort_model_bytes_directly) {\n    // eslint-disable-next-line camelcase\n    session.use_ort_model_bytes_directly = '1';\n  }\n\n  // if using JSEP with WebGPU, always disable memory pattern\n  if (options.executionProviders &&\n      options.executionProviders.some(ep => (typeof ep === 'string' ? ep : ep.name) === 'webgpu')) {\n    options.enableMemPattern = false;\n  }\n};\n\nconst setExecutionProviders =\n    (sessionOptionsHandle: number, executionProviders: readonly InferenceSession.ExecutionProviderConfig[],\n     allocs: number[]): void => {\n      for (const ep of executionProviders) {\n        let epName = typeof ep === 'string' ? ep : ep.name;\n\n        // check EP name\n        switch (epName) {\n          case 'webnn':\n            epName = 'WEBNN';\n            if (typeof ep !== 'string') {\n              const webnnOptions = ep as InferenceSession.WebNNExecutionProviderOption;\n              if (webnnOptions?.deviceType) {\n                const keyDataOffset = allocWasmString('deviceType', allocs);\n                const valueDataOffset = allocWasmString(webnnOptions.deviceType, allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  checkLastError(`Can't set a session config entry: 'deviceType' - ${webnnOptions.deviceType}.`);\n                }\n              }\n              if (webnnOptions?.numThreads) {\n                let numThreads = webnnOptions.numThreads;\n                // Just ignore invalid webnnOptions.numThreads.\n                if (typeof numThreads != 'number' || !Number.isInteger(numThreads) || numThreads < 0) {\n                  numThreads = 0;\n                }\n                const keyDataOffset = allocWasmString('numThreads', allocs);\n                const valueDataOffset = allocWasmString(numThreads.toString(), allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  checkLastError(`Can't set a session config entry: 'numThreads' - ${webnnOptions.numThreads}.`);\n                }\n              }\n              if (webnnOptions?.powerPreference) {\n                const keyDataOffset = allocWasmString('powerPreference', allocs);\n                const valueDataOffset = allocWasmString(webnnOptions.powerPreference, allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  checkLastError(\n                      `Can't set a session config entry: 'powerPreference' - ${webnnOptions.powerPreference}.`);\n                }\n              }\n            }\n            break;\n          case 'webgpu':\n            epName = 'JS';\n            if (typeof ep !== 'string') {\n              const webgpuOptions = ep as InferenceSession.WebGpuExecutionProviderOption;\n              if (webgpuOptions?.preferredLayout) {\n                if (webgpuOptions.preferredLayout !== 'NCHW' && webgpuOptions.preferredLayout !== 'NHWC') {\n                  throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${webgpuOptions.preferredLayout}`);\n                }\n                const keyDataOffset = allocWasmString('preferredLayout', allocs);\n                const valueDataOffset = allocWasmString(webgpuOptions.preferredLayout, allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  checkLastError(\n                      `Can't set a session config entry: 'preferredLayout' - ${webgpuOptions.preferredLayout}.`);\n                }\n              }\n            }\n            break;\n          case 'wasm':\n          case 'cpu':\n            continue;\n          default:\n            throw new Error(`not supported execution provider: ${epName}`);\n        }\n\n        const epNameDataOffset = allocWasmString(epName, allocs);\n        if (getInstance()._OrtAppendExecutionProvider(sessionOptionsHandle, epNameDataOffset) !== 0) {\n          checkLastError(`Can't append execution provider: ${epName}.`);\n        }\n      }\n    };\n\nexport const setSessionOptions = (options?: InferenceSession.SessionOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let sessionOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const sessionOptions: InferenceSession.SessionOptions = options || {};\n  appendDefaultOptions(sessionOptions);\n\n  try {\n    const graphOptimizationLevel = getGraphOptimzationLevel(sessionOptions.graphOptimizationLevel ?? 'all');\n    const executionMode = getExecutionMode(sessionOptions.executionMode ?? 'sequential');\n    const logIdDataOffset =\n        typeof sessionOptions.logId === 'string' ? allocWasmString(sessionOptions.logId, allocs) : 0;\n\n    const logSeverityLevel = sessionOptions.logSeverityLevel ?? 2;  // Default to 2 - warning\n    if (!Number.isInteger(logSeverityLevel) || logSeverityLevel < 0 || logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${logSeverityLevel}`);\n    }\n\n    const logVerbosityLevel = sessionOptions.logVerbosityLevel ?? 0;  // Default to 0 - verbose\n    if (!Number.isInteger(logVerbosityLevel) || logVerbosityLevel < 0 || logVerbosityLevel > 4) {\n      throw new Error(`log verbosity level is not valid: ${logVerbosityLevel}`);\n    }\n\n    const optimizedModelFilePathOffset = typeof sessionOptions.optimizedModelFilePath === 'string' ?\n        allocWasmString(sessionOptions.optimizedModelFilePath, allocs) :\n        0;\n\n    sessionOptionsHandle = wasm._OrtCreateSessionOptions(\n        graphOptimizationLevel, !!sessionOptions.enableCpuMemArena, !!sessionOptions.enableMemPattern, executionMode,\n        !!sessionOptions.enableProfiling, 0, logIdDataOffset, logSeverityLevel, logVerbosityLevel,\n        optimizedModelFilePathOffset);\n    if (sessionOptionsHandle === 0) {\n      checkLastError('Can\\'t create session options.');\n    }\n\n    if (sessionOptions.executionProviders) {\n      setExecutionProviders(sessionOptionsHandle, sessionOptions.executionProviders, allocs);\n    }\n\n    if (sessionOptions.freeDimensionOverrides) {\n      for (const [name, value] of Object.entries(sessionOptions.freeDimensionOverrides)) {\n        if (typeof name !== 'string') {\n          throw new Error(`free dimension override name must be a string: ${name}`);\n        }\n        if (typeof value !== 'number' || !Number.isInteger(value) || value < 0) {\n          throw new Error(`free dimension override value must be a non-negative integer: ${value}`);\n        }\n        const nameOffset = allocWasmString(name, allocs);\n        if (wasm._OrtAddFreeDimensionOverride(sessionOptionsHandle, nameOffset, value) !== 0) {\n          checkLastError(`Can't set a free dimension override: ${name} - ${value}.`);\n        }\n      }\n    }\n\n    if (sessionOptions.extra !== undefined) {\n      iterateExtraOptions(sessionOptions.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          checkLastError(`Can't set a session config entry: ${key} - ${value}.`);\n        }\n      });\n    }\n\n    return [sessionOptionsHandle, allocs];\n  } catch (e) {\n    if (sessionOptionsHandle !== 0) {\n      wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n    }\n    allocs.forEach(alloc => wasm._free(alloc));\n    throw e;\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from 'onnxruntime-common';\n\n// This file includes common definitions. They do NOT have dependency on the WebAssembly instance.\n\n/**\n * Copied from ONNX definition. Use this to drop dependency 'onnx_proto' to decrease compiled .js file size.\n */\nexport const enum DataType {\n  undefined = 0,\n  float = 1,\n  uint8 = 2,\n  int8 = 3,\n  uint16 = 4,\n  int16 = 5,\n  int32 = 6,\n  int64 = 7,\n  string = 8,\n  bool = 9,\n  float16 = 10,\n  double = 11,\n  uint32 = 12,\n  uint64 = 13,\n  complex64 = 14,\n  complex128 = 15,\n  bfloat16 = 16\n}\n\n/**\n * Map string tensor data to enum value\n */\nexport const tensorDataTypeStringToEnum = (type: string): DataType => {\n  switch (type) {\n    case 'int8':\n      return DataType.int8;\n    case 'uint8':\n      return DataType.uint8;\n    case 'bool':\n      return DataType.bool;\n    case 'int16':\n      return DataType.int16;\n    case 'uint16':\n      return DataType.uint16;\n    case 'int32':\n      return DataType.int32;\n    case 'uint32':\n      return DataType.uint32;\n    case 'float16':\n      return DataType.float16;\n    case 'float32':\n      return DataType.float;\n    case 'float64':\n      return DataType.double;\n    case 'string':\n      return DataType.string;\n    case 'int64':\n      return DataType.int64;\n    case 'uint64':\n      return DataType.uint64;\n\n    default:\n      throw new Error(`unsupported data type: ${type}`);\n  }\n};\n\n/**\n * Map enum value to string tensor data\n */\nexport const tensorDataTypeEnumToString = (typeProto: DataType): Tensor.Type => {\n  switch (typeProto) {\n    case DataType.int8:\n      return 'int8';\n    case DataType.uint8:\n      return 'uint8';\n    case DataType.bool:\n      return 'bool';\n    case DataType.int16:\n      return 'int16';\n    case DataType.uint16:\n      return 'uint16';\n    case DataType.int32:\n      return 'int32';\n    case DataType.uint32:\n      return 'uint32';\n    case DataType.float16:\n      return 'float16';\n    case DataType.float:\n      return 'float32';\n    case DataType.double:\n      return 'float64';\n    case DataType.string:\n      return 'string';\n    case DataType.int64:\n      return 'int64';\n    case DataType.uint64:\n      return 'uint64';\n\n    default:\n      throw new Error(`unsupported data type: ${typeProto}`);\n  }\n};\n\n/**\n * get tensor element size in bytes by the given data type\n * @returns size in integer or undefined if the data type is not supported\n */\nexport const getTensorElementSize = (dateType: number): number|\n    undefined => [undefined, 4, 1, 1, 2, 2, 4, 8, undefined, 1, 2, 8, 4, 8, undefined, undefined, undefined][dateType];\n\n/**\n * get typed array constructor by the given tensor type\n */\nexport const tensorTypeToTypedArrayConstructor = (type: Tensor.Type): Float32ArrayConstructor|Uint8ArrayConstructor|\n    Int8ArrayConstructor|Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|\n    Uint8ArrayConstructor|Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor => {\n      switch (type) {\n        case 'float16':\n          return Uint16Array;\n        case 'float32':\n          return Float32Array;\n        case 'uint8':\n          return Uint8Array;\n        case 'int8':\n          return Int8Array;\n        case 'uint16':\n          return Uint16Array;\n        case 'int16':\n          return Int16Array;\n        case 'int32':\n          return Int32Array;\n        case 'bool':\n          return Uint8Array;\n        case 'float64':\n          return Float64Array;\n        case 'uint32':\n          return Uint32Array;\n        case 'int64':\n          return BigInt64Array;\n        case 'uint64':\n          return BigUint64Array;\n        default:\n          throw new Error(`unsupported type: ${type}`);\n      }\n    };\n\n/**\n * Map string log level to integer value\n */\nexport const logLevelStringToEnum = (logLevel?: 'verbose'|'info'|'warning'|'error'|'fatal'): number => {\n  switch (logLevel) {\n    case 'verbose':\n      return 0;\n    case 'info':\n      return 1;\n    case 'warning':\n      return 2;\n    case 'error':\n      return 3;\n    case 'fatal':\n      return 4;\n    default:\n      throw new Error(`unsupported logging level: ${logLevel}`);\n  }\n};\n\n/**\n * Check whether the given tensor type is supported by GPU buffer\n */\nexport const isGpuBufferSupportedType = (type: Tensor.Type): type is Tensor.GpuBufferDataTypes => type === 'float32' ||\n    type === 'int32' || type === 'int64' || type === 'bool' || type === 'float16' || type === 'uint32';\n\n/**\n * Map string data location to integer value\n */\nexport const dataLocationStringToEnum = (location: Tensor.DataLocation): number => {\n  switch (location) {\n    case 'none':\n      return 0;\n    case 'cpu':\n      return 1;\n    case 'cpu-pinned':\n      return 2;\n    case 'texture':\n      return 3;\n    case 'gpu-buffer':\n      return 4;\n    default:\n      throw new Error(`unsupported data location: ${location}`);\n  }\n};\n\n/**\n * Map integer data location to string value\n */\nexport const dataLocationEnumToString = (location: number): Tensor.DataLocation|undefined =>\n    (['none', 'cpu', 'cpu-pinned', 'texture', 'gpu-buffer'] as const)[location];\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport * as fs from 'fs';\nimport {readFile} from 'node:fs/promises';\n\n/**\n * Load a file into a Uint8Array.\n *\n * @param file - the file to load. Can be a URL/path, a Blob, an ArrayBuffer, or a Uint8Array.\n * @returns a Uint8Array containing the file data.\n */\nexport const loadFile = async(file: string|Blob|ArrayBufferLike|Uint8Array): Promise<Uint8Array> => {\n  if (typeof file === 'string') {\n    if (typeof process !== 'undefined' && process.versions && process.versions.node) {\n      // load file into ArrayBuffer in Node.js\n      try {\n        return new Uint8Array(await readFile(file));\n      } catch (e) {\n        if (e.code === 'ERR_FS_FILE_TOO_LARGE') {\n          // file is too large, use fs.createReadStream instead\n          const stream = fs.createReadStream(file);\n          const chunks: Uint8Array[] = [];\n          for await (const chunk of stream) {\n            chunks.push(chunk);\n          }\n          return new Uint8Array(Buffer.concat(chunks));\n        }\n        throw e;\n      }\n    } else {\n      // load file into ArrayBuffer in browsers\n      const response = await fetch(file);\n      if (!response.ok) {\n        throw new Error(`failed to load external data file: ${file}`);\n      }\n      const contentLengthHeader = response.headers.get('Content-Length');\n      const fileSize = contentLengthHeader ? parseInt(contentLengthHeader, 10) : 0;\n      if (fileSize < 1073741824 /* 1GB */) {\n        // when Content-Length header is not set, we cannot determine the file size. We assume it is small enough to\n        // load into memory.\n        return new Uint8Array(await response.arrayBuffer());\n      } else {\n        // file is too large, use stream instead\n        if (!response.body) {\n          throw new Error(`failed to load external data file: ${file}, no response body.`);\n        }\n        const reader = response.body.getReader();\n\n        let buffer;\n        try {\n          // try to create ArrayBuffer directly\n          buffer = new ArrayBuffer(fileSize);\n        } catch (e) {\n          if (e instanceof RangeError) {\n            // use WebAssembly Memory to allocate larger ArrayBuffer\n            const pages = Math.ceil(fileSize / 65536);\n            buffer = new WebAssembly.Memory({initial: pages, maximum: pages}).buffer;\n          } else {\n            throw e;\n          }\n        }\n\n        let offset = 0;\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n          const {done, value} = await reader.read();\n          if (done) {\n            break;\n          }\n          const chunkSize = value.byteLength;\n          const chunk = new Uint8Array(buffer, offset, chunkSize);\n          chunk.set(value);\n          offset += chunkSize;\n        }\n        return new Uint8Array(buffer, 0, fileSize);\n      }\n    }\n\n  } else if (file instanceof Blob) {\n    return new Uint8Array(await file.arrayBuffer());\n  } else if (file instanceof Uint8Array) {\n    return file;\n  } else {\n    return new Uint8Array(file);\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env, InferenceSession, Tensor} from 'onnxruntime-common';\n\nimport {SerializableInternalBuffer, SerializableSessionMetadata, SerializableTensorMetadata, TensorMetadata} from './proxy-messages';\nimport {setRunOptions} from './run-options';\nimport {setSessionOptions} from './session-options';\nimport {dataLocationStringToEnum, getTensorElementSize, isGpuBufferSupportedType, logLevelStringToEnum, tensorDataTypeEnumToString, tensorDataTypeStringToEnum, tensorTypeToTypedArrayConstructor} from './wasm-common';\nimport {getInstance} from './wasm-factory';\nimport {allocWasmString, checkLastError} from './wasm-utils';\nimport {loadFile} from './wasm-utils-load-file';\n\n// #region Initializations\n\n/**\n * There are 4 different \"initialization\" steps for ORT. They happen in different places and different time.\n *\n * 1. JavaScript initialization for onnxruntime-common and onnxruntime-web.\n *    This is the first initialization step. In this step, onnxruntime-web calls onnxruntime-common's registerBackend()\n * function multiple times to register all the available backends. The backend registration is very fast. It only\n * registers the backend name with the uninitialized backend object. No heavy initialization is done in this step.\n *    Refer to web/lib/index.ts for the backend registration.\n *\n * 2. WebAssembly artifact initialization.\n *    This happens when any registered wasm backend is used for the first time (ie. `ort.InferenceSession.create()` or\n * `ort.TrainingSession.create()` is called). In this step, onnxruntime-web does the followings:\n *     - create a proxy worker and make sure the proxy worker is ready to receive messages, if proxy is enabled.\n *     - perform feature detection, locate correct WebAssembly artifact path and call the Emscripten generated\n * JavaScript code to initialize the WebAssembly runtime.\n *         - if proxy is enabled, this step happens in the proxy worker using message 'init-wasm'.\n *         - downloading the 'ort-wasm{...}.wasm' file is done in this step.\n *         - if multi-thread is enabled, one or more webworker will be created to initialize the PThread threadpool.\n *\n * 3. ORT environment initialization.\n *    This happens after step 2. In this step, onnxruntime-web performs ONNX Runtime environment initialization.\n * Function `_OrtInit()` is called in this step.\n *     - if proxy is enabled, this step happens in the proxy worker using message 'init-ort'.\n *     - logging level (ort.env.logLevel) and thread number (ort.env.wasm.numThreads) are set in this step.\n *\n * 4. Session initialization.\n *    This happens when `ort.InferenceSession.create()` or `ort.TrainingSession.create()` is called. Unlike the first 3\n * steps (they only called once), this step will be done for each session. In this step, onnxruntime-web does the\n * followings:\n *    If the parameter is a URL:\n *    - download the model data from the URL.\n *    - copy the model data to the WASM heap. (proxy: 'copy-from')\n *    - dereference the model buffer. This step allows the original ArrayBuffer to be garbage collected.\n *    - call `_OrtCreateSession()` to create the session. (proxy: 'create')\n *\n *    If the parameter is a Uint8Array object:\n *    - copy the model data to the WASM heap. (proxy: 'copy-from')\n *    - call `_OrtCreateSession()` to create the session. (proxy: 'create')\n *\n *\n */\n\n/**\n * initialize ORT environment.\n *\n * @param numThreads SetGlobalIntraOpNumThreads(numThreads)\n * @param loggingLevel CreateEnv(static_cast<OrtLoggingLevel>(logging_level))\n */\nconst initOrt = (numThreads: number, loggingLevel: number): void => {\n  const errorCode = getInstance()._OrtInit(numThreads, loggingLevel);\n  if (errorCode !== 0) {\n    checkLastError('Can\\'t initialize onnxruntime.');\n  }\n};\n\n/**\n * intialize runtime environment.\n * @param env passed in the environment config object.\n */\nexport const initRuntime = async(env: Env): Promise<void> => {\n  // init ORT\n  initOrt(env.wasm.numThreads!, logLevelStringToEnum(env.logLevel));\n};\n\n/**\n * perform EP specific initialization.\n *\n * @param env\n * @param epName\n */\nexport const initEp = async(env: Env, epName: string): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WEBGPU && epName === 'webgpu') {\n    // perform WebGPU availability check\n    if (typeof navigator === 'undefined' || !navigator.gpu) {\n      throw new Error('WebGPU is not supported in current environment');\n    }\n    const adapter = await navigator.gpu.requestAdapter();\n    if (!adapter) {\n      throw new Error(\n          'Failed to get GPU adapter. You may need to enable flag \"--enable-unsafe-webgpu\" if you are using Chrome.');\n    }\n\n    if (!env.wasm.simd) {\n      throw new Error(\n          'Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP');\n    }\n\n    // init JSEP if available\n\n    // eslint-disable-next-line @typescript-eslint/no-require-imports, @typescript-eslint/no-var-requires\n    const initJsep = require('./jsep/init').init;\n    await initJsep(getInstance(), env, adapter);\n  }\n};\n\n// #endregion Initializations\n\n/**\n * valid data locations for input/output tensors.\n */\ntype SupportedTensorDataLocationForInputOutput = 'cpu'|'cpu-pinned'|'gpu-buffer';\n\ntype IOBindingState = {\n  /**\n   * the handle of IO binding.\n   */\n  readonly handle: number;\n\n  /**\n   * the preferred location for each output tensor.\n   *\n   * value is one of 'cpu', 'cpu-pinned', 'gpu-buffer'.\n   */\n  readonly outputPreferredLocations: readonly SupportedTensorDataLocationForInputOutput[];\n\n  /**\n   * enum value of the preferred location for each output tensor.\n   */\n  readonly outputPreferredLocationsEncoded: readonly number[];\n};\n\n/**\n *  tuple elements are: InferenceSession ID; inputNamesUTF8Encoded; outputNamesUTF8Encoded; bindingState\n */\ntype SessionMetadata = [\n  inferenceSessionId: number, inputNamesUTF8Encoded: number[], outputNamesUTF8Encoded: number[],\n  bindingState: IOBindingState|null\n];\n\nconst activeSessions = new Map<number, SessionMetadata>();\n\n/**\n * get the input/output count of the session.\n * @param sessionHandle the handle representing the session. should be non-zero.\n * @returns a tuple including 2 numbers, representing the input count and output count.\n */\nconst getSessionInputOutputCount = (sessionHandle: number): [number, number] => {\n  const wasm = getInstance();\n  const stack = wasm.stackSave();\n  try {\n    const dataOffset = wasm.stackAlloc(8);\n    const errorCode = wasm._OrtGetInputOutputCount(sessionHandle, dataOffset, dataOffset + 4);\n    if (errorCode !== 0) {\n      checkLastError('Can\\'t get session input/output count.');\n    }\n    return [wasm.HEAP32[dataOffset / 4], wasm.HEAP32[dataOffset / 4 + 1]];\n  } finally {\n    wasm.stackRestore(stack);\n  }\n};\n\n/**\n * allocate the memory and memcpy the external buffer.\n *\n * @param model - the external buffer containing the model data. Must not be the same buffer as the WASM heap.\n * @returns a 2-elements tuple - the pointer and size of the allocated buffer\n */\nexport const copyFromExternalBuffer = (model: Uint8Array): [number, number] => {\n  const wasm = getInstance();\n  const modelDataOffset = wasm._malloc(model.byteLength);\n  if (modelDataOffset === 0) {\n    throw new Error(`Can't create a session. failed to allocate a buffer of size ${model.byteLength}.`);\n  }\n  wasm.HEAPU8.set(model, modelDataOffset);\n  return [modelDataOffset, model.byteLength];\n};\n\n/**\n * create an inference session from a model data buffer.\n *\n * @param modelData - either a Uint8Array object representing the model data, or a 2-elements tuple containing the\n *     pointer and size of the model data buffer.\n * @param options an optional session options object.\n * @returns a 3-elements tuple containing [session handle, input names, output names]\n */\nexport const createSession = async(\n    modelData: Uint8Array|SerializableInternalBuffer,\n    options?: InferenceSession.SessionOptions): Promise<SerializableSessionMetadata> => {\n  let modelDataOffset: number, modelDataLength: number;\n  const wasm = getInstance();\n\n  if (Array.isArray(modelData)) {\n    // if model data is an array, it must be a 2-elements tuple containing the pointer and size of the model data\n    [modelDataOffset, modelDataLength] = modelData;\n  } else if (modelData.buffer === wasm.HEAPU8.buffer) {\n    // if model data uses the same buffer as the WASM heap, we don't need to copy it.\n    [modelDataOffset, modelDataLength] = [modelData.byteOffset, modelData.byteLength];\n  } else {\n    // otherwise, copy the model data to the WASM heap.\n    [modelDataOffset, modelDataLength] = copyFromExternalBuffer(modelData);\n  }\n\n  let sessionHandle = 0;\n  let sessionOptionsHandle = 0;\n  let ioBindingHandle = 0;\n  let allocs: number[] = [];\n  const inputNamesUTF8Encoded = [];\n  const outputNamesUTF8Encoded = [];\n\n  try {\n    [sessionOptionsHandle, allocs] = setSessionOptions(options);\n\n    if (options?.externalData && wasm.mountExternalData) {\n      const loadingPromises = [];\n      for (const file of options.externalData) {\n        const path = typeof file === 'string' ? file : file.path;\n        loadingPromises.push(loadFile(typeof file === 'string' ? file : file.data).then(data => {\n          wasm.mountExternalData!(path, data);\n        }));\n      }\n\n      // wait for all external data files to be loaded\n      await Promise.all(loadingPromises);\n    }\n\n    sessionHandle = wasm._OrtCreateSession(modelDataOffset, modelDataLength, sessionOptionsHandle);\n    if (sessionHandle === 0) {\n      checkLastError('Can\\'t create a session.');\n    }\n\n    const [inputCount, outputCount] = getSessionInputOutputCount(sessionHandle);\n\n    const inputNames = [];\n    const outputNames = [];\n    const outputPreferredLocations: SupportedTensorDataLocationForInputOutput[] = [];\n    for (let i = 0; i < inputCount; i++) {\n      const name = wasm._OrtGetInputName(sessionHandle, i);\n      if (name === 0) {\n        checkLastError('Can\\'t get an input name.');\n      }\n      inputNamesUTF8Encoded.push(name);\n      inputNames.push(wasm.UTF8ToString(name));\n    }\n    for (let i = 0; i < outputCount; i++) {\n      const name = wasm._OrtGetOutputName(sessionHandle, i);\n      if (name === 0) {\n        checkLastError('Can\\'t get an output name.');\n      }\n      outputNamesUTF8Encoded.push(name);\n      const nameString = wasm.UTF8ToString(name);\n      outputNames.push(nameString);\n\n      if (!BUILD_DEFS.DISABLE_WEBGPU) {\n        const location = typeof options?.preferredOutputLocation === 'string' ?\n            options.preferredOutputLocation :\n            options?.preferredOutputLocation?.[nameString] ?? 'cpu';\n        if (location !== 'cpu' && location !== 'cpu-pinned' && location !== 'gpu-buffer') {\n          throw new Error(`Not supported preferred output location: ${location}.`);\n        }\n        outputPreferredLocations.push(location);\n      }\n    }\n\n    // use IO binding only when at least one output is preffered to be on GPU.\n    let bindingState: IOBindingState|null = null;\n    if (!BUILD_DEFS.DISABLE_WEBGPU && outputPreferredLocations.some(l => l === 'gpu-buffer')) {\n      ioBindingHandle = wasm._OrtCreateBinding(sessionHandle);\n      if (ioBindingHandle === 0) {\n        checkLastError('Can\\'t create IO binding.');\n      }\n\n      bindingState = {\n        handle: ioBindingHandle,\n        outputPreferredLocations,\n        outputPreferredLocationsEncoded: outputPreferredLocations.map(l => dataLocationStringToEnum(l)),\n      };\n    }\n\n    activeSessions.set(sessionHandle, [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded, bindingState]);\n    return [sessionHandle, inputNames, outputNames];\n  } catch (e) {\n    inputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n    outputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n\n    if (ioBindingHandle !== 0) {\n      wasm._OrtReleaseBinding(ioBindingHandle);\n    }\n\n    if (sessionHandle !== 0) {\n      wasm._OrtReleaseSession(sessionHandle);\n    }\n    throw e;\n  } finally {\n    wasm._free(modelDataOffset);\n    if (sessionOptionsHandle !== 0) {\n      wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n    }\n    allocs.forEach(alloc => wasm._free(alloc));\n\n    // unmount external data if necessary\n    wasm.unmountExternalData?.();\n  }\n};\n\nexport const releaseSession = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error(`cannot release session. invalid session id: ${sessionId}`);\n  }\n  const [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded, ioBindingState] = session;\n\n  if (ioBindingState) {\n    wasm._OrtReleaseBinding(ioBindingState.handle);\n  }\n\n  wasm.jsepUnregisterBuffers?.(sessionId);\n\n  inputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n  outputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n  wasm._OrtReleaseSession(sessionHandle);\n  activeSessions.delete(sessionId);\n};\n\nexport const prepareInputOutputTensor =\n    (tensor: TensorMetadata|null, tensorHandles: number[], allocs: number[], sessionId: number, index: number):\n        void => {\n          if (!tensor) {\n            tensorHandles.push(0);\n            return;\n          }\n\n          const wasm = getInstance();\n\n          const dataType = tensor[0];\n          const dims = tensor[1];\n          const location = tensor[3];\n\n          let rawData: number;\n          let dataByteLength: number;\n\n          if (dataType === 'string' && location === 'gpu-buffer') {\n            throw new Error('String tensor is not supported on GPU.');\n          }\n\n          if (location === 'gpu-buffer') {\n            const gpuBuffer = tensor[2].gpuBuffer as GPUBuffer;\n            const elementSizeInBytes = getTensorElementSize(tensorDataTypeStringToEnum(dataType))!;\n            dataByteLength = dims.reduce((a, b) => a * b, 1) * elementSizeInBytes;\n            rawData = wasm.jsepRegisterBuffer(sessionId, index, gpuBuffer, dataByteLength);\n          } else {\n            const data = tensor[2];\n\n            if (Array.isArray(data)) {\n              // string tensor\n              dataByteLength = 4 * data.length;\n              rawData = wasm._malloc(dataByteLength);\n              allocs.push(rawData);\n              let dataIndex = rawData / 4;\n              for (let i = 0; i < data.length; i++) {\n                if (typeof data[i] !== 'string') {\n                  throw new TypeError(`tensor data at index ${i} is not a string`);\n                }\n                wasm.HEAPU32[dataIndex++] = allocWasmString(data[i], allocs);\n              }\n            } else {\n              dataByteLength = data.byteLength;\n              rawData = wasm._malloc(dataByteLength);\n              allocs.push(rawData);\n              wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), rawData);\n            }\n          }\n\n          const stack = wasm.stackSave();\n          const dimsOffset = wasm.stackAlloc(4 * dims.length);\n          try {\n            let dimIndex = dimsOffset / 4;\n            dims.forEach(d => wasm.HEAP32[dimIndex++] = d);\n            const tensor = wasm._OrtCreateTensor(\n                tensorDataTypeStringToEnum(dataType), rawData, dataByteLength, dimsOffset, dims.length,\n                dataLocationStringToEnum(location));\n            if (tensor === 0) {\n              checkLastError(`Can't create tensor for input/output. session=${sessionId}, index=${index}.`);\n            }\n            tensorHandles.push(tensor);\n          } finally {\n            wasm.stackRestore(stack);\n          }\n        };\n\n/**\n * perform inference run\n */\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputTensors: TensorMetadata[], outputIndices: number[],\n    outputTensors: Array<TensorMetadata|null>, options: InferenceSession.RunOptions): Promise<TensorMetadata[]> => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error(`cannot run inference. invalid session id: ${sessionId}`);\n  }\n  const [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded, ioBindingState] = session;\n\n  const inputCount = inputIndices.length;\n  const outputCount = outputIndices.length;\n\n  let runOptionsHandle = 0;\n  let runOptionsAllocs: number[] = [];\n\n  const inputTensorHandles: number[] = [];\n  const outputTensorHandles: number[] = [];\n  const inputOutputAllocs: number[] = [];\n\n  const beforeRunStack = wasm.stackSave();\n  const inputValuesOffset = wasm.stackAlloc(inputCount * 4);\n  const inputNamesOffset = wasm.stackAlloc(inputCount * 4);\n  const outputValuesOffset = wasm.stackAlloc(outputCount * 4);\n  const outputNamesOffset = wasm.stackAlloc(outputCount * 4);\n\n  try {\n    [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n    // create input tensors\n    for (let i = 0; i < inputCount; i++) {\n      prepareInputOutputTensor(inputTensors[i], inputTensorHandles, inputOutputAllocs, sessionId, inputIndices[i]);\n    }\n\n    // create output tensors\n    for (let i = 0; i < outputCount; i++) {\n      prepareInputOutputTensor(\n          outputTensors[i], outputTensorHandles, inputOutputAllocs, sessionId, inputCount + outputIndices[i]);\n    }\n\n    let inputValuesIndex = inputValuesOffset / 4;\n    let inputNamesIndex = inputNamesOffset / 4;\n    let outputValuesIndex = outputValuesOffset / 4;\n    let outputNamesIndex = outputNamesOffset / 4;\n    for (let i = 0; i < inputCount; i++) {\n      wasm.HEAPU32[inputValuesIndex++] = inputTensorHandles[i];\n      wasm.HEAPU32[inputNamesIndex++] = inputNamesUTF8Encoded[inputIndices[i]];\n    }\n    for (let i = 0; i < outputCount; i++) {\n      wasm.HEAPU32[outputValuesIndex++] = outputTensorHandles[i];\n      wasm.HEAPU32[outputNamesIndex++] = outputNamesUTF8Encoded[outputIndices[i]];\n    }\n\n    if (!BUILD_DEFS.DISABLE_WEBGPU && ioBindingState) {\n      const {handle, outputPreferredLocations, outputPreferredLocationsEncoded} = ioBindingState;\n\n      if (inputNamesUTF8Encoded.length !== inputCount) {\n        throw new Error(`input count from feeds (${\n            inputCount}) is expected to be always equal to model's input count (${inputNamesUTF8Encoded.length}).`);\n      }\n\n      // process inputs\n      for (let i = 0; i < inputCount; i++) {\n        const index = inputIndices[i];\n        const errorCode = await wasm._OrtBindInput(handle, inputNamesUTF8Encoded[index], inputTensorHandles[i]);\n        if (errorCode !== 0) {\n          checkLastError(`Can't bind input[${i}] for session=${sessionId}.`);\n        }\n      }\n\n      // process pre-allocated outputs\n      for (let i = 0; i < outputCount; i++) {\n        const index = outputIndices[i];\n        const location = outputTensors[i]?.[3];  // undefined means output is not pre-allocated.\n\n        if (location) {\n          // output is pre-allocated. bind the tensor.\n          const errorCode = wasm._OrtBindOutput(handle, outputNamesUTF8Encoded[index], outputTensorHandles[i], 0);\n          if (errorCode !== 0) {\n            checkLastError(`Can't bind pre-allocated output[${i}] for session=${sessionId}.`);\n          }\n        } else {\n          // output is not pre-allocated. reset preferred location.\n          const errorCode =\n              wasm._OrtBindOutput(handle, outputNamesUTF8Encoded[index], 0, outputPreferredLocationsEncoded[index]);\n          if (errorCode !== 0) {\n            checkLastError(`Can't bind output[${i}] to ${outputPreferredLocations[i]} for session=${sessionId}.`);\n          }\n        }\n      }\n    }\n\n    wasm.jsepOnRunStart?.();\n    let errorCode: number;\n    if (!BUILD_DEFS.DISABLE_WEBGPU && ioBindingState) {\n      errorCode = await wasm._OrtRunWithBinding(\n          sessionHandle, ioBindingState.handle, outputCount, outputValuesOffset, runOptionsHandle);\n    } else {\n      errorCode = await wasm._OrtRun(\n          sessionHandle, inputNamesOffset, inputValuesOffset, inputCount, outputNamesOffset, outputCount,\n          outputValuesOffset, runOptionsHandle);\n    }\n\n    if (errorCode !== 0) {\n      checkLastError('failed to call OrtRun().');\n    }\n\n    const output: TensorMetadata[] = [];\n\n    for (let i = 0; i < outputCount; i++) {\n      const tensor = wasm.HEAPU32[outputValuesOffset / 4 + i];\n      if (tensor === outputTensorHandles[i]) {\n        // output tensor is pre-allocated. no need to copy data.\n        output.push(outputTensors[i]!);\n        continue;\n      }\n\n      const beforeGetTensorDataStack = wasm.stackSave();\n      // stack allocate 4 pointer value\n      const tensorDataOffset = wasm.stackAlloc(4 * 4);\n\n      let keepOutputTensor = false;\n      let type: Tensor.Type|undefined, dataOffset = 0;\n      try {\n        const errorCode = wasm._OrtGetTensorData(\n            tensor, tensorDataOffset, tensorDataOffset + 4, tensorDataOffset + 8, tensorDataOffset + 12);\n        if (errorCode !== 0) {\n          checkLastError(`Can't access output tensor data on index ${i}.`);\n        }\n        let tensorDataIndex = tensorDataOffset / 4;\n        const dataType = wasm.HEAPU32[tensorDataIndex++];\n        dataOffset = wasm.HEAPU32[tensorDataIndex++];\n        const dimsOffset = wasm.HEAPU32[tensorDataIndex++];\n        const dimsLength = wasm.HEAPU32[tensorDataIndex++];\n        const dims = [];\n        for (let i = 0; i < dimsLength; i++) {\n          dims.push(wasm.HEAPU32[dimsOffset / 4 + i]);\n        }\n        wasm._OrtFree(dimsOffset);\n\n        const size = dims.reduce((a, b) => a * b, 1);\n        type = tensorDataTypeEnumToString(dataType);\n\n        const preferredLocation = ioBindingState?.outputPreferredLocations[outputIndices[i]];\n\n        if (type === 'string') {\n          if (preferredLocation === 'gpu-buffer') {\n            throw new Error('String tensor is not supported on GPU.');\n          }\n          const stringData: string[] = [];\n          let dataIndex = dataOffset / 4;\n          for (let i = 0; i < size; i++) {\n            const offset = wasm.HEAPU32[dataIndex++];\n            const maxBytesToRead = i === size - 1 ? undefined : wasm.HEAPU32[dataIndex] - offset;\n            stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\n          }\n          output.push([type, dims, stringData, 'cpu']);\n        } else {\n          // If a certain output's preferred location is GPU but the tensor is empty, we still need to create a CPU\n          // tensor for it. There is no mapping GPU buffer for an empty tensor.\n          if (preferredLocation === 'gpu-buffer' && size > 0) {\n            const gpuBuffer = wasm.jsepGetBuffer(dataOffset);\n            const elementSize = getTensorElementSize(dataType);\n            if (elementSize === undefined || !isGpuBufferSupportedType(type)) {\n              throw new Error(`Unsupported data type: ${type}`);\n            }\n\n            // do not release the tensor right now. it will be released when user calls tensor.dispose().\n            keepOutputTensor = true;\n\n            output.push([\n              type, dims, {\n                gpuBuffer,\n                download: wasm.jsepCreateDownloader(gpuBuffer, size * elementSize, type),\n                dispose: () => {\n                  wasm._OrtReleaseTensor(tensor);\n                }\n              },\n              'gpu-buffer'\n            ]);\n          } else {\n            const typedArrayConstructor = tensorTypeToTypedArrayConstructor(type);\n            const data = new typedArrayConstructor(size);\n            new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\n                .set(wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength));\n            output.push([type, dims, data, 'cpu']);\n          }\n        }\n      } finally {\n        wasm.stackRestore(beforeGetTensorDataStack);\n        if (type === 'string' && dataOffset) {\n          wasm._free(dataOffset);\n        }\n        if (!keepOutputTensor) {\n          wasm._OrtReleaseTensor(tensor);\n        }\n      }\n    }\n\n    if (ioBindingState) {\n      wasm._OrtClearBoundOutputs(ioBindingState.handle);\n    }\n\n    return output;\n  } finally {\n    wasm.stackRestore(beforeRunStack);\n\n    inputTensorHandles.forEach(v => wasm._OrtReleaseTensor(v));\n    outputTensorHandles.forEach(v => wasm._OrtReleaseTensor(v));\n    inputOutputAllocs.forEach(p => wasm._free(p));\n\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    runOptionsAllocs.forEach(p => wasm._free(p));\n  }\n};\n\n/**\n * end profiling\n */\nexport const endProfiling = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n\n  // profile file name is not used yet, but it must be freed.\n  const profileFileName = wasm._OrtEndProfiling(sessionHandle);\n  if (profileFileName === 0) {\n    checkLastError('Can\\'t get an profile file name.');\n  }\n  wasm._OrtFree(profileFileName);\n};\n\nexport const extractTransferableBuffers = (tensors: readonly SerializableTensorMetadata[]): ArrayBufferLike[] => {\n  const buffers: ArrayBufferLike[] = [];\n  for (const tensor of tensors) {\n    const data = tensor[2];\n    if (!Array.isArray(data) && 'buffer' in data) {\n      buffers.push(data.buffer);\n    }\n  }\n  return buffers;\n};\n", "/*!\n * ONNX Runtime Web v1.18.0\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\"use strict\";(()=>{var Kt=Object.defineProperty;var Jr=Object.getOwnPropertyDescriptor;var Xr=Object.getOwnPropertyNames;var Qr=Object.prototype.hasOwnProperty;var er=(f,m)=>()=>(f&&(m=f(f=0)),m);var Dt=(f,m)=>()=>(m||f((m={exports:{}}).exports,m),m.exports),tr=(f,m)=>{for(var s in m)Kt(f,s,{get:m[s],enumerable:!0})},Zr=(f,m,s,v)=>{if(m&&typeof m==\"object\"||typeof m==\"function\")for(let c of Xr(m))!Qr.call(f,c)&&c!==s&&Kt(f,c,{get:()=>m[c],enumerable:!(v=Jr(m,c))||v.enumerable});return f};var Ut=f=>Zr(Kt({},\"__esModule\",{value:!0}),f);var rr={};tr(rr,{createReadStream:()=>yr,readFile:()=>Kr,readFileSync:()=>en});var Kr,en,yr,nr=er(()=>{Kr=void 0,en=void 0,yr=void 0});var ar={};tr(ar,{join:()=>tn});var tn,or=er(()=>{tn=void 0});var Or=Dt((wr,ir)=>{\"use strict\";var vr=(()=>{var f=typeof document<\"u\"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<\"u\"&&(f=f||__filename),function(m={}){var s=m,v,c;s.ready=new Promise((e,r)=>{v=e,c=r});var _=Object.assign({},s),y=\"./this.program\",u=typeof window==\"object\",C=typeof importScripts==\"function\",F=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\",B=\"\",$,R,I;if(F){var H=(nr(),Ut(rr)),W=(or(),Ut(ar));B=C?W.dirname(B)+\"/\":__dirname+\"/\",$=(e,r)=>(e=Me(e)?new URL(e):W.normalize(e),H.readFileSync(e,r?void 0:\"utf8\")),I=e=>(e=$(e,!0),e.buffer||(e=new Uint8Array(e)),e),R=(e,r,a,i=!0)=>{e=Me(e)?new URL(e):W.normalize(e),H.readFile(e,i?void 0:\"utf8\",(d,w)=>{d?a(d):r(i?w.buffer:w)})},!s.thisProgram&&1<process.argv.length&&(y=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),s.inspect=()=>\"[Emscripten Module object]\"}else(u||C)&&(C?B=self.location.href:typeof document<\"u\"&&document.currentScript&&(B=document.currentScript.src),f&&(B=f),B.indexOf(\"blob:\")!==0?B=B.substr(0,B.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):B=\"\",$=e=>{var r=new XMLHttpRequest;return r.open(\"GET\",e,!1),r.send(null),r.responseText},C&&(I=e=>{var r=new XMLHttpRequest;return r.open(\"GET\",e,!1),r.responseType=\"arraybuffer\",r.send(null),new Uint8Array(r.response)}),R=(e,r,a)=>{var i=new XMLHttpRequest;i.open(\"GET\",e,!0),i.responseType=\"arraybuffer\",i.onload=()=>{i.status==200||i.status==0&&i.response?r(i.response):a()},i.onerror=a,i.send(null)});var T=console.log.bind(console),x=console.error.bind(console);Object.assign(s,_),_=null,typeof WebAssembly!=\"object\"&&_e(\"no native wasm support detected\");var j,Oe=!1,se,z,me,Ae,E,k,Qe,ne,J,be;function L(){var e=j.buffer;s.HEAP8=se=new Int8Array(e),s.HEAP16=me=new Int16Array(e),s.HEAPU8=z=new Uint8Array(e),s.HEAPU16=Ae=new Uint16Array(e),s.HEAP32=E=new Int32Array(e),s.HEAPU32=k=new Uint32Array(e),s.HEAPF32=Qe=new Float32Array(e),s.HEAPF64=be=new Float64Array(e),s.HEAP64=ne=new BigInt64Array(e),s.HEAPU64=J=new BigUint64Array(e)}var ue=[],ge=[],ye=[],ve=0,te=null,ae=null;function _e(e){throw e=\"Aborted(\"+e+\")\",x(e),Oe=!0,e=new WebAssembly.RuntimeError(e+\". Build with -sASSERTIONS for more info.\"),c(e),e}var xe=e=>e.startsWith(\"data:application/octet-stream;base64,\"),Me=e=>e.startsWith(\"file://\"),Ee;if(Ee=\"ort-wasm.wasm\",!xe(Ee)){var Ze=Ee;Ee=s.locateFile?s.locateFile(Ze,B):B+Ze}function de(e){if(I)return I(e);throw\"both async and sync fetching of the wasm failed\"}function Ce(e){if(u||C){if(typeof fetch==\"function\"&&!Me(e))return fetch(e,{credentials:\"same-origin\"}).then(r=>{if(!r.ok)throw\"failed to load wasm binary file at '\"+e+\"'\";return r.arrayBuffer()}).catch(()=>de(e));if(R)return new Promise((r,a)=>{R(e,i=>r(new Uint8Array(i)),a)})}return Promise.resolve().then(()=>de(e))}function Pe(e,r,a){return Ce(e).then(i=>WebAssembly.instantiate(i,r)).then(i=>i).then(a,i=>{x(`failed to asynchronously prepare wasm: ${i}`),_e(i)})}function oe(e,r){var a=Ee;return typeof WebAssembly.instantiateStreaming!=\"function\"||xe(a)||Me(a)||F||typeof fetch!=\"function\"?Pe(a,e,r):fetch(a,{credentials:\"same-origin\"}).then(i=>WebAssembly.instantiateStreaming(i,e).then(r,function(d){return x(`wasm streaming compile failed: ${d}`),x(\"falling back to ArrayBuffer instantiation\"),Pe(a,e,r)}))}var re={1359336:(e,r,a,i)=>{if(typeof s>\"u\"||!s.cb)return 1;if(e=He(e>>>0),e.startsWith(\"./\")&&(e=e.substring(2)),e=s.cb.get(e),!e)return 2;if(r>>>=0,a>>>=0,r+a>e.byteLength)return 3;try{return z.set(e.subarray(r,r+a),i>>>0>>>0),0}catch{return 4}}};function $e(e){this.Ua=e-24,this.fb=function(r){k[this.Ua+4>>>2>>>0]=r},this.eb=function(r){k[this.Ua+8>>>2>>>0]=r},this.Ya=function(r,a){this.Za(),this.fb(r),this.eb(a)},this.Za=function(){k[this.Ua+16>>>2>>>0]=0}}var Re=0,Le=0,ft=typeof TextDecoder<\"u\"?new TextDecoder(\"utf8\"):void 0,Rt=(e,r,a)=>{r>>>=0;var i=r+a;for(a=r;e[a]&&!(a>=i);)++a;if(16<a-r&&e.buffer&&ft)return ft.decode(e.subarray(r,a));for(i=\"\";r<a;){var d=e[r++];if(d&128){var w=e[r++]&63;if((d&224)==192)i+=String.fromCharCode((d&31)<<6|w);else{var h=e[r++]&63;d=(d&240)==224?(d&15)<<12|w<<6|h:(d&7)<<18|w<<12|h<<6|e[r++]&63,65536>d?i+=String.fromCharCode(d):(d-=65536,i+=String.fromCharCode(55296|d>>10,56320|d&1023))}}else i+=String.fromCharCode(d)}return i},He=(e,r)=>(e>>>=0)?Rt(z,e,r):\"\",Ke=e=>{for(var r=0,a=0;a<e.length;++a){var i=e.charCodeAt(a);127>=i?r++:2047>=i?r+=2:55296<=i&&57343>=i?(r+=4,++a):r+=3}return r},De=(e,r,a,i)=>{if(a>>>=0,!(0<i))return 0;var d=a;i=a+i-1;for(var w=0;w<e.length;++w){var h=e.charCodeAt(w);if(55296<=h&&57343>=h){var A=e.charCodeAt(++w);h=65536+((h&1023)<<10)|A&1023}if(127>=h){if(a>=i)break;r[a++>>>0]=h}else{if(2047>=h){if(a+1>=i)break;r[a++>>>0]=192|h>>6}else{if(65535>=h){if(a+2>=i)break;r[a++>>>0]=224|h>>12}else{if(a+3>=i)break;r[a++>>>0]=240|h>>18,r[a++>>>0]=128|h>>12&63}r[a++>>>0]=128|h>>6&63}r[a++>>>0]=128|h&63}}return r[a>>>0]=0,a-d},lt=e=>{if(e===null)return\"null\";var r=typeof e;return r===\"object\"||r===\"array\"||r===\"function\"?e.toString():\"\"+e},ze,pe=e=>{for(var r=\"\";z[e>>>0];)r+=ze[z[e++>>>0]];return r},et={},We={},It={},Ue;function tt(e,r,a={}){var i=r.name;if(!e)throw new Ue(`type \"${i}\" must have a positive integer typeid pointer`);if(We.hasOwnProperty(e)){if(a.gb)return;throw new Ue(`Cannot register type '${i}' twice`)}We[e]=r,delete It[e],et.hasOwnProperty(e)&&(r=et[e],delete et[e],r.forEach(d=>d()))}function Fe(e,r,a={}){if(!(\"argPackAdvance\"in r))throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");tt(e,r,a)}var Y=(e,r,a)=>{switch(r){case 1:return a?i=>se[i>>>0>>>0]:i=>z[i>>>0>>>0];case 2:return a?i=>me[i>>>1>>>0]:i=>Ae[i>>>1>>>0];case 4:return a?i=>E[i>>>2>>>0]:i=>k[i>>>2>>>0];case 8:return a?i=>ne[i>>>3]:i=>J[i>>>3];default:throw new TypeError(`invalid integer width (${r}): ${e}`)}};function ct(){this.Ra=[void 0],this.ab=[]}var fe=new ct;function dt(e){e>>>=0,e>=fe.Ua&&--fe.get(e).bb===0&&fe.Za(e)}var le=e=>{if(!e)throw new Ue(\"Cannot use deleted val. handle = \"+e);return fe.get(e).value},Se=e=>{switch(e){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return fe.Ya({bb:1,value:e})}};function P(e){return this.fromWireType(E[e>>>2>>>0])}var rt=(e,r)=>{switch(r){case 4:return function(a){return this.fromWireType(Qe[a>>>2>>>0])};case 8:return function(a){return this.fromWireType(be[a>>>3>>>0])};default:throw new TypeError(`invalid float width (${r}): ${e}`)}};function Bt(e){return this.fromWireType(k[e>>>2>>>0])}var Ve=typeof TextDecoder<\"u\"?new TextDecoder(\"utf-16le\"):void 0,Lt=(e,r)=>{for(var a=e>>1,i=a+r/2;!(a>=i)&&Ae[a>>>0];)++a;if(a<<=1,32<a-e&&Ve)return Ve.decode(z.subarray(e>>>0,a>>>0));for(a=\"\",i=0;!(i>=r/2);++i){var d=me[e+2*i>>>1>>>0];if(d==0)break;a+=String.fromCharCode(d)}return a},Jt=(e,r,a)=>{if(a??=2147483647,2>a)return 0;a-=2;var i=r;a=a<2*e.length?a/2:e.length;for(var d=0;d<a;++d)me[r>>>1>>>0]=e.charCodeAt(d),r+=2;return me[r>>>1>>>0]=0,r-i},Wt=e=>2*e.length,Xt=(e,r)=>{for(var a=0,i=\"\";!(a>=r/4);){var d=E[e+4*a>>>2>>>0];if(d==0)break;++a,65536<=d?(d-=65536,i+=String.fromCharCode(55296|d>>10,56320|d&1023)):i+=String.fromCharCode(d)}return i},Nt=(e,r,a)=>{if(r>>>=0,a??=2147483647,4>a)return 0;var i=r;a=i+a-4;for(var d=0;d<e.length;++d){var w=e.charCodeAt(d);if(55296<=w&&57343>=w){var h=e.charCodeAt(++d);w=65536+((w&1023)<<10)|h&1023}if(E[r>>>2>>>0]=w,r+=4,r+4>a)break}return E[r>>>2>>>0]=0,r-i},kt=e=>{for(var r=0,a=0;a<e.length;++a){var i=e.charCodeAt(a);55296<=i&&57343>=i&&++a,r+=4}return r},nt=(e,r)=>{var a=We[e];if(a===void 0)throw e=Tt(e),a=pe(e),Te(e),new Ue(r+\" has unknown type \"+a);return a},pt=(e,r,a)=>{var i=[];return e=e.toWireType(i,a),i.length&&(k[r>>>2>>>0]=Se(i)),e},je=[],$t={},at=e=>{var r=$t[e];return r===void 0?pe(e):r},mt=()=>typeof globalThis==\"object\"?globalThis:Function(\"return this\")(),Ht=e=>{var r=je.length;return je.push(e),r},jt=(e,r)=>{for(var a=Array(e),i=0;i<e;++i)a[i]=nt(k[r+4*i>>>2>>>0],\"parameter \"+i);return a},gt=(e,r)=>Object.defineProperty(r,\"name\",{value:e});function Yt(e){var r=Function;if(!(r instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof r} which is not a function`);var a=gt(r.name||\"unknownFunctionName\",function(){});return a.prototype=r.prototype,a=new a,e=r.apply(a,e),e instanceof Object?e:a}var Ne=e=>e%4===0&&(e%100!==0||e%400===0),ht=[0,31,60,91,121,152,182,213,244,274,305,335],yt=[0,31,59,90,120,151,181,212,243,273,304,334],vt=e=>{var r=Ke(e)+1,a=Ge(r);return a&&De(e,z,a,r),a},ot=[],it={},st=()=>{if(!Ye){var e={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(typeof navigator==\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:y||\"./this.program\"},r;for(r in it)it[r]===void 0?delete e[r]:e[r]=it[r];var a=[];for(r in e)a.push(`${r}=${e[r]}`);Ye=a}return Ye},Ye,wt=[null,[],[]],ke=[31,29,31,30,31,30,31,31,30,31,30,31],Ot=[31,28,31,30,31,30,31,31,30,31,30,31];function Gt(e){var r=Array(Ke(e)+1);return De(e,r,0,r.length),r}function bt(e,r,a,i){function d(p,N,q){for(p=typeof p==\"number\"?p.toString():p||\"\";p.length<N;)p=q[0]+p;return p}function w(p,N){return d(p,N,\"0\")}function h(p,N){function q(ut){return 0>ut?-1:0<ut?1:0}var Ie;return(Ie=q(p.getFullYear()-N.getFullYear()))===0&&(Ie=q(p.getMonth()-N.getMonth()))===0&&(Ie=q(p.getDate()-N.getDate())),Ie}function A(p){switch(p.getDay()){case 0:return new Date(p.getFullYear()-1,11,29);case 1:return p;case 2:return new Date(p.getFullYear(),0,3);case 3:return new Date(p.getFullYear(),0,2);case 4:return new Date(p.getFullYear(),0,1);case 5:return new Date(p.getFullYear()-1,11,31);case 6:return new Date(p.getFullYear()-1,11,30)}}function U(p){var N=p.Sa;for(p=new Date(new Date(p.Ta+1900,0,1).getTime());0<N;){var q=p.getMonth(),Ie=(Ne(p.getFullYear())?ke:Ot)[q];if(N>Ie-p.getDate())N-=Ie-p.getDate()+1,p.setDate(1),11>q?p.setMonth(q+1):(p.setMonth(0),p.setFullYear(p.getFullYear()+1));else{p.setDate(p.getDate()+N);break}}return q=new Date(p.getFullYear()+1,0,4),N=A(new Date(p.getFullYear(),0,4)),q=A(q),0>=h(N,p)?0>=h(q,p)?p.getFullYear()+1:p.getFullYear():p.getFullYear()-1}e>>>=0,r>>>=0,a>>>=0,i>>>=0;var M=k[i+40>>>2>>>0];i={kb:E[i>>>2>>>0],jb:E[i+4>>>2>>>0],Wa:E[i+8>>>2>>>0],$a:E[i+12>>>2>>>0],Xa:E[i+16>>>2>>>0],Ta:E[i+20>>>2>>>0],Na:E[i+24>>>2>>>0],Sa:E[i+28>>>2>>>0],mb:E[i+32>>>2>>>0],ib:E[i+36>>>2>>>0],lb:M?He(M):\"\"},a=He(a),M={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var V in M)a=a.replace(new RegExp(V,\"g\"),M[V]);var ce=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),we=\"January February March April May June July August September October November December\".split(\" \");M={\"%a\":p=>ce[p.Na].substring(0,3),\"%A\":p=>ce[p.Na],\"%b\":p=>we[p.Xa].substring(0,3),\"%B\":p=>we[p.Xa],\"%C\":p=>w((p.Ta+1900)/100|0,2),\"%d\":p=>w(p.$a,2),\"%e\":p=>d(p.$a,2,\" \"),\"%g\":p=>U(p).toString().substring(2),\"%G\":p=>U(p),\"%H\":p=>w(p.Wa,2),\"%I\":p=>(p=p.Wa,p==0?p=12:12<p&&(p-=12),w(p,2)),\"%j\":p=>{for(var N=0,q=0;q<=p.Xa-1;N+=(Ne(p.Ta+1900)?ke:Ot)[q++]);return w(p.$a+N,3)},\"%m\":p=>w(p.Xa+1,2),\"%M\":p=>w(p.jb,2),\"%n\":()=>`\n`,\"%p\":p=>0<=p.Wa&&12>p.Wa?\"AM\":\"PM\",\"%S\":p=>w(p.kb,2),\"%t\":()=>\"\t\",\"%u\":p=>p.Na||7,\"%U\":p=>w(Math.floor((p.Sa+7-p.Na)/7),2),\"%V\":p=>{var N=Math.floor((p.Sa+7-(p.Na+6)%7)/7);if(2>=(p.Na+371-p.Sa-2)%7&&N++,N)N==53&&(q=(p.Na+371-p.Sa)%7,q==4||q==3&&Ne(p.Ta)||(N=1));else{N=52;var q=(p.Na+7-p.Sa-1)%7;(q==4||q==5&&Ne(p.Ta%400-1))&&N++}return w(N,2)},\"%w\":p=>p.Na,\"%W\":p=>w(Math.floor((p.Sa+7-(p.Na+6)%7)/7),2),\"%y\":p=>(p.Ta+1900).toString().substring(2),\"%Y\":p=>p.Ta+1900,\"%z\":p=>{p=p.ib;var N=0<=p;return p=Math.abs(p)/60,(N?\"+\":\"-\")+(\"0000\"+(p/60*100+p%60)).slice(-4)},\"%Z\":p=>p.lb,\"%%\":()=>\"%\"},a=a.replace(/%%/g,\"\\0\\0\");for(V in M)a.includes(V)&&(a=a.replace(new RegExp(V,\"g\"),M[V](i)));return a=a.replace(/\\0\\0/g,\"%\"),V=Gt(a),V.length>r?0:(se.set(V,e>>>0),V.length-1)}for(var _t=Array(256),qe=0;256>qe;++qe)_t[qe]=String.fromCharCode(qe);ze=_t,Ue=s.BindingError=class extends Error{constructor(e){super(e),this.name=\"BindingError\"}},s.InternalError=class extends Error{constructor(e){super(e),this.name=\"InternalError\"}},Object.assign(ct.prototype,{get(e){return this.Ra[e]},has(e){return this.Ra[e]!==void 0},Ya(e){var r=this.ab.pop()||this.Ra.length;return this.Ra[r]=e,r},Za(e){this.Ra[e]=void 0,this.ab.push(e)}}),fe.Ra.push({value:void 0},{value:null},{value:!0},{value:!1}),fe.Ua=fe.Ra.length,s.count_emval_handles=()=>{for(var e=0,r=fe.Ua;r<fe.Ra.length;++r)fe.Ra[r]!==void 0&&++e;return e};var Et={a:function(e,r,a){throw e>>>=0,new $e(e).Ya(r>>>0,a>>>0),Re=e,Le++,Re},t:function(){return 0},$:function(){},M:function(){},O:function(){},G:function(){return 0},Z:function(){},U:function(){},Y:function(){},B:function(){},N:function(){},K:function(){},_:function(){},L:function(){},E:function(e,r,a,i,d){r>>>=0,r=pe(r);var w=r.indexOf(\"u\")!=-1;w&&(d=(1n<<64n)-1n),Fe(e>>>0,{name:r,fromWireType:h=>h,toWireType:function(h,A){if(typeof A!=\"bigint\"&&typeof A!=\"number\")throw new TypeError(`Cannot convert \"${lt(A)}\" to ${this.name}`);if(A<i||A>d)throw new TypeError(`Passing a number \"${lt(A)}\" from JS side to C/C++ side to an argument of type \"${r}\", which is outside the valid range [${i}, ${d}]!`);return A},argPackAdvance:8,readValueFromPointer:Y(r,a>>>0,!w),Va:null})},da:function(e,r,a,i){r=pe(r>>>0),Fe(e>>>0,{name:r,fromWireType:function(d){return!!d},toWireType:function(d,w){return w?a:i},argPackAdvance:8,readValueFromPointer:function(d){return this.fromWireType(z[d>>>0])},Va:null})},ca:function(e,r){r=pe(r>>>0),Fe(e>>>0,{name:r,fromWireType:a=>{var i=le(a);return dt(a),i},toWireType:(a,i)=>Se(i),argPackAdvance:8,readValueFromPointer:P,Va:null})},D:function(e,r,a){r=pe(r>>>0),Fe(e>>>0,{name:r,fromWireType:i=>i,toWireType:(i,d)=>d,argPackAdvance:8,readValueFromPointer:rt(r,a>>>0),Va:null})},q:function(e,r,a,i,d){if(e>>>=0,a>>>=0,r=pe(r>>>0),d===-1&&(d=4294967295),d=A=>A,i===0){var w=32-8*a;d=A=>A<<w>>>w}var h=r.includes(\"unsigned\")?function(A,U){return U>>>0}:function(A,U){return U};Fe(e,{name:r,fromWireType:d,toWireType:h,argPackAdvance:8,readValueFromPointer:Y(r,a,i!==0),Va:null})},l:function(e,r,a){function i(w){return new d(se.buffer,k[w+4>>>2>>>0],k[w>>>2>>>0])}var d=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][r];a=pe(a>>>0),Fe(e>>>0,{name:a,fromWireType:i,argPackAdvance:8,readValueFromPointer:i},{gb:!0})},F:function(e,r){r=pe(r>>>0);var a=r===\"std::string\";Fe(e>>>0,{name:r,fromWireType:function(i){var d=k[i>>>2>>>0],w=i+4;if(a)for(var h=w,A=0;A<=d;++A){var U=w+A;if(A==d||z[U>>>0]==0){if(h=He(h,U-h),M===void 0)var M=h;else M+=String.fromCharCode(0),M+=h;h=U+1}}else{for(M=Array(d),A=0;A<d;++A)M[A]=String.fromCharCode(z[w+A>>>0]);M=M.join(\"\")}return Te(i),M},toWireType:function(i,d){d instanceof ArrayBuffer&&(d=new Uint8Array(d));var w=typeof d==\"string\";if(!(w||d instanceof Uint8Array||d instanceof Uint8ClampedArray||d instanceof Int8Array))throw new Ue(\"Cannot pass non-string to std::string\");var h=a&&w?Ke(d):d.length,A=Ge(4+h+1),U=A+4;if(k[A>>>2>>>0]=h,a&&w)De(d,z,U,h+1);else if(w)for(w=0;w<h;++w){var M=d.charCodeAt(w);if(255<M)throw Te(U),new Ue(\"String has UTF-16 code units that do not fit in 8 bits\");z[U+w>>>0]=M}else for(w=0;w<h;++w)z[U+w>>>0]=d[w];return i!==null&&i.push(Te,A),A},argPackAdvance:8,readValueFromPointer:Bt,Va(i){Te(i)}})},v:function(e,r,a){if(r>>>=0,a>>>=0,a=pe(a),r===2)var i=Lt,d=Jt,w=Wt,h=()=>Ae,A=1;else r===4&&(i=Xt,d=Nt,w=kt,h=()=>k,A=2);Fe(e>>>0,{name:a,fromWireType:U=>{for(var M=k[U>>>2>>>0],V=h(),ce,we=U+4,p=0;p<=M;++p){var N=U+4+p*r;(p==M||V[N>>>A]==0)&&(we=i(we,N-we),ce===void 0?ce=we:(ce+=String.fromCharCode(0),ce+=we),we=N+r)}return Te(U),ce},toWireType:(U,M)=>{if(typeof M!=\"string\")throw new Ue(`Cannot pass non-string to C++ string type ${a}`);var V=w(M),ce=Ge(4+V+r);return k[ce>>>2]=V>>A,d(M,ce+4,V+r),U!==null&&U.push(Te,ce),ce},argPackAdvance:8,readValueFromPointer:P,Va(U){Te(U)}})},ea:function(e,r){r=pe(r>>>0),Fe(e>>>0,{hb:!0,name:r,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},aa:()=>1,o:function(e,r,a){return r>>>=0,a>>>=0,e=le(e>>>0),r=nt(r,\"emval::as\"),pt(r,a,e)},x:function(e,r,a,i){return a>>>=0,i>>>=0,e=je[e>>>0],r=le(r>>>0),e(null,r,a,i)},j:function(e,r,a,i,d){return a>>>=0,i>>>=0,d>>>=0,e=je[e>>>0],r=le(r>>>0),a=at(a),e(r,r[a],i,d)},b:dt,w:function(e,r){return r>>>=0,e=le(e>>>0),r=le(r),e==r},s:function(e){return e>>>=0,e===0?Se(mt()):(e=at(e),Se(mt()[e]))},i:function(e,r,a){r=jt(e,r>>>0);var i=r.shift();e--;var d=`return function (obj, func, destructorsRef, args) {\n`,w=0,h=[];a===0&&h.push(\"obj\");for(var A=[\"retType\"],U=[i],M=0;M<e;++M)h.push(\"arg\"+M),A.push(\"argType\"+M),U.push(r[M]),d+=`  var arg${M} = argType${M}.readValueFromPointer(args${w?\"+\"+w:\"\"});\n`,w+=r[M].argPackAdvance;for(d+=`  var rv = ${a===1?\"new func\":\"func.call\"}(${h.join(\", \")});\n`,M=0;M<e;++M)r[M].deleteObject&&(d+=`  argType${M}.deleteObject(arg${M});\n`);return i.hb||(A.push(\"emval_returnValue\"),U.push(pt),d+=`  return emval_returnValue(retType, destructorsRef, rv);\n`),A.push(d+`};\n`),e=Yt(A).apply(null,U),a=`methodCaller<(${r.map(V=>V.name).join(\", \")}) => ${i.name}>`,Ht(gt(a,e))},p:function(e,r){return r>>>=0,e=le(e>>>0),r=le(r),Se(e[r])},c:function(e){e>>>=0,4<e&&(fe.get(e).bb+=1)},r:function(){return Se([])},k:function(e){e=le(e>>>0);for(var r=Array(e.length),a=0;a<e.length;a++)r[a]=e[a];return Se(r)},d:function(e){return Se(at(e>>>0))},h:function(){return Se({})},g:function(e){e>>>=0;for(var r=le(e);r.length;){var a=r.pop();r.pop()(a)}dt(e)},f:function(e,r,a){r>>>=0,a>>>=0,e=le(e>>>0),r=le(r),a=le(a),e[r]=a},e:function(e,r){return r>>>=0,e=nt(e>>>0,\"_emval_take_value\"),e=e.readValueFromPointer(r),Se(e)},R:function(e,r){e=-9007199254740992>e||9007199254740992<e?NaN:Number(e),r>>>=0,e=new Date(1e3*e),E[r>>>2>>>0]=e.getUTCSeconds(),E[r+4>>>2>>>0]=e.getUTCMinutes(),E[r+8>>>2>>>0]=e.getUTCHours(),E[r+12>>>2>>>0]=e.getUTCDate(),E[r+16>>>2>>>0]=e.getUTCMonth(),E[r+20>>>2>>>0]=e.getUTCFullYear()-1900,E[r+24>>>2>>>0]=e.getUTCDay(),E[r+28>>>2>>>0]=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},S:function(e,r){e=-9007199254740992>e||9007199254740992<e?NaN:Number(e),r>>>=0,e=new Date(1e3*e),E[r>>>2>>>0]=e.getSeconds(),E[r+4>>>2>>>0]=e.getMinutes(),E[r+8>>>2>>>0]=e.getHours(),E[r+12>>>2>>>0]=e.getDate(),E[r+16>>>2>>>0]=e.getMonth(),E[r+20>>>2>>>0]=e.getFullYear()-1900,E[r+24>>>2>>>0]=e.getDay(),E[r+28>>>2>>>0]=(Ne(e.getFullYear())?ht:yt)[e.getMonth()]+e.getDate()-1|0,E[r+36>>>2>>>0]=-(60*e.getTimezoneOffset());var a=new Date(e.getFullYear(),6,1).getTimezoneOffset(),i=new Date(e.getFullYear(),0,1).getTimezoneOffset();E[r+32>>>2>>>0]=(a!=i&&e.getTimezoneOffset()==Math.min(i,a))|0},T:function(e){e>>>=0;var r=new Date(E[e+20>>>2>>>0]+1900,E[e+16>>>2>>>0],E[e+12>>>2>>>0],E[e+8>>>2>>>0],E[e+4>>>2>>>0],E[e>>>2>>>0],0),a=E[e+32>>>2>>>0],i=r.getTimezoneOffset(),d=new Date(r.getFullYear(),6,1).getTimezoneOffset(),w=new Date(r.getFullYear(),0,1).getTimezoneOffset(),h=Math.min(w,d);return 0>a?E[e+32>>>2>>>0]=+(d!=w&&h==i):0<a!=(h==i)&&(d=Math.max(w,d),r.setTime(r.getTime()+6e4*((0<a?h:d)-i))),E[e+24>>>2>>>0]=r.getDay(),E[e+28>>>2>>>0]=(Ne(r.getFullYear())?ht:yt)[r.getMonth()]+r.getDate()-1|0,E[e>>>2>>>0]=r.getSeconds(),E[e+4>>>2>>>0]=r.getMinutes(),E[e+8>>>2>>>0]=r.getHours(),E[e+12>>>2>>>0]=r.getDate(),E[e+16>>>2>>>0]=r.getMonth(),E[e+20>>>2>>>0]=r.getYear(),e=r.getTime(),isNaN(e)?(E[St()>>>2>>>0]=61,e=-1):e/=1e3,BigInt(e)},P:function(){return-52},Q:function(){},I:function(e,r,a){function i(U){return(U=U.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?U[1]:\"GMT\"}a>>>=0;var d=new Date().getFullYear(),w=new Date(d,0,1),h=new Date(d,6,1);d=w.getTimezoneOffset();var A=h.getTimezoneOffset();k[e>>>0>>>2>>>0]=60*Math.max(d,A),E[r>>>0>>>2>>>0]=+(d!=A),e=i(w),r=i(h),e=vt(e),r=vt(r),A<d?(k[a>>>2>>>0]=e,k[a+4>>>2>>>0]=r):(k[a>>>2>>>0]=r,k[a+4>>>2>>>0]=e)},y:()=>{_e(\"\")},fa:function(e,r,a){e>>>=0,r>>>=0,a>>>=0,ot.length=0;for(var i;i=z[r++>>>0];){var d=i!=105;d&=i!=112,a+=d&&a%8?4:0,ot.push(i==112?k[a>>>2>>>0]:i==106?ne[a>>>3]:i==105?E[a>>>2>>>0]:be[a>>>3>>>0]),a+=d?8:4}return re[e].apply(null,ot)},C:()=>Date.now(),J:function(){return 4294901760},n:()=>performance.now(),H:function(e){e>>>=0;var r=z.length;if(4294901760<e)return!1;for(var a=1;4>=a;a*=2){var i=r*(1+.2/a);i=Math.min(i,e+100663296);var d=Math;i=Math.max(e,i);e:{d=(d.min.call(d,4294901760,i+(65536-i%65536)%65536)-j.buffer.byteLength+65535)/65536;try{j.grow(d),L();var w=1;break e}catch{}w=void 0}if(w)return!0}return!1},W:function(e,r){e>>>=0,r>>>=0;var a=0;return st().forEach((i,d)=>{var w=r+a;for(d=k[e+4*d>>>2>>>0]=w,w=0;w<i.length;++w)se[d++>>>0>>>0]=i.charCodeAt(w);se[d>>>0>>>0]=0,a+=i.length+1}),0},X:function(e,r){e>>>=0,r>>>=0;var a=st();k[e>>>2>>>0]=a.length;var i=0;return a.forEach(d=>i+=d.length+1),k[r>>>2>>>0]=i,0},u:()=>52,A:function(){return 52},V:function(){return 70},z:function(e,r,a,i){r>>>=0,a>>>=0,i>>>=0;for(var d=0,w=0;w<a;w++){var h=k[r>>>2>>>0],A=k[r+4>>>2>>>0];r+=8;for(var U=0;U<A;U++){var M=z[h+U>>>0],V=wt[e];M===0||M===10?((e===1?T:x)(Rt(V,0)),V.length=0):V.push(M)}d+=A}return k[i>>>2>>>0]=d,0},ba:bt,m:function(e,r,a,i){return bt(e>>>0,r>>>0,a>>>0,i>>>0)}},D=function(){function e(a){return D=a.exports,D=Qt(),j=D.ga,L(),ge.unshift(D.ha),ve--,ve==0&&(te!==null&&(clearInterval(te),te=null),ae&&(a=ae,ae=null,a())),D}var r={a:Et};if(ve++,s.instantiateWasm)try{return s.instantiateWasm(r,e)}catch(a){x(`Module.instantiateWasm callback failed with error: ${a}`),c(a)}return oe(r,function(a){e(a.instance)}).catch(c),{}}();s._OrtInit=(e,r)=>(s._OrtInit=D.ia)(e,r),s._OrtGetLastError=(e,r)=>(s._OrtGetLastError=D.ja)(e,r),s._OrtCreateSessionOptions=(e,r,a,i,d,w,h,A,U,M)=>(s._OrtCreateSessionOptions=D.ka)(e,r,a,i,d,w,h,A,U,M),s._OrtAppendExecutionProvider=(e,r)=>(s._OrtAppendExecutionProvider=D.la)(e,r),s._OrtAddFreeDimensionOverride=(e,r,a)=>(s._OrtAddFreeDimensionOverride=D.ma)(e,r,a),s._OrtAddSessionConfigEntry=(e,r,a)=>(s._OrtAddSessionConfigEntry=D.na)(e,r,a),s._OrtReleaseSessionOptions=e=>(s._OrtReleaseSessionOptions=D.oa)(e),s._OrtCreateSession=(e,r,a)=>(s._OrtCreateSession=D.pa)(e,r,a),s._OrtReleaseSession=e=>(s._OrtReleaseSession=D.qa)(e),s._OrtGetInputOutputCount=(e,r,a)=>(s._OrtGetInputOutputCount=D.ra)(e,r,a),s._OrtGetInputName=(e,r)=>(s._OrtGetInputName=D.sa)(e,r),s._OrtGetOutputName=(e,r)=>(s._OrtGetOutputName=D.ta)(e,r),s._OrtFree=e=>(s._OrtFree=D.ua)(e),s._OrtCreateTensor=(e,r,a,i,d,w)=>(s._OrtCreateTensor=D.va)(e,r,a,i,d,w),s._OrtGetTensorData=(e,r,a,i,d)=>(s._OrtGetTensorData=D.wa)(e,r,a,i,d),s._OrtReleaseTensor=e=>(s._OrtReleaseTensor=D.xa)(e),s._OrtCreateRunOptions=(e,r,a,i)=>(s._OrtCreateRunOptions=D.ya)(e,r,a,i),s._OrtAddRunConfigEntry=(e,r,a)=>(s._OrtAddRunConfigEntry=D.za)(e,r,a),s._OrtReleaseRunOptions=e=>(s._OrtReleaseRunOptions=D.Aa)(e),s._OrtCreateBinding=e=>(s._OrtCreateBinding=D.Ba)(e),s._OrtBindInput=(e,r,a)=>(s._OrtBindInput=D.Ca)(e,r,a),s._OrtBindOutput=(e,r,a,i)=>(s._OrtBindOutput=D.Da)(e,r,a,i),s._OrtClearBoundOutputs=e=>(s._OrtClearBoundOutputs=D.Ea)(e),s._OrtReleaseBinding=e=>(s._OrtReleaseBinding=D.Fa)(e),s._OrtRunWithBinding=(e,r,a,i,d)=>(s._OrtRunWithBinding=D.Ga)(e,r,a,i,d),s._OrtRun=(e,r,a,i,d,w,h,A)=>(s._OrtRun=D.Ha)(e,r,a,i,d,w,h,A),s._OrtEndProfiling=e=>(s._OrtEndProfiling=D.Ia)(e);var St=()=>(St=D.Ja)(),Ge=s._malloc=e=>(Ge=s._malloc=D.Ka)(e),Te=s._free=e=>(Te=s._free=D.La)(e),Tt=e=>(Tt=D.Ma)(e),At=()=>(At=D.Oa)(),Mt=e=>(Mt=D.Pa)(e),Ct=e=>(Ct=D.Qa)(e);function Qt(){var e=D;e=Object.assign({},e);var r=i=>()=>i()>>>0,a=i=>d=>i(d)>>>0;return e.Ja=r(e.Ja),e.Ka=a(e.Ka),e.Ma=a(e.Ma),e.Oa=r(e.Oa),e.Qa=a(e.Qa),e}s.stackAlloc=Ct,s.stackSave=At,s.stackRestore=Mt,s.UTF8ToString=He,s.stringToUTF8=(e,r,a)=>De(e,z,r,a),s.lengthBytesUTF8=Ke;var Je;ae=function e(){Je||Pt(),Je||(ae=e)};function Pt(){if(!(0<ve)){if(s.preRun)for(typeof s.preRun==\"function\"&&(s.preRun=[s.preRun]);s.preRun.length;){var e=s.preRun.shift();ue.unshift(e)}for(;0<ue.length;)ue.shift()(s);if(!(0<ve||Je||(Je=!0,s.calledRun=!0,Oe))){for(;0<ge.length;)ge.shift()(s);for(v(s);0<ye.length;)ye.shift()(s)}}}return Pt(),m.ready}})();typeof wr==\"object\"&&typeof ir==\"object\"?ir.exports=vr:typeof define==\"function\"&&define.amd&&define([],()=>vr)});var br=Dt(()=>{});var _r=Dt(()=>{});var Er={};tr(Er,{cpus:()=>rn});var rn,Sr=er(()=>{rn=void 0});var Mr=Dt((Ar,sr)=>{\"use strict\";var Tr=(()=>{var f=typeof document<\"u\"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<\"u\"&&(f=f||__filename),function(m={}){function s(){return J.buffer!=ge.buffer&&_e(),ge}function v(){return J.buffer!=ge.buffer&&_e(),ye}function c(){return J.buffer!=ge.buffer&&_e(),ve}function _(){return J.buffer!=ge.buffer&&_e(),te}function y(){return J.buffer!=ge.buffer&&_e(),ae}var u=m,C,F;u.ready=new Promise((t,n)=>{C=t,F=n});var B=Object.assign({},u),$=\"./this.program\",R=(t,n)=>{throw n},I=typeof window==\"object\",H=typeof importScripts==\"function\",W=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\",T=u.ENVIRONMENT_IS_PTHREAD||!1,x=\"\";function j(t){return u.locateFile?u.locateFile(t,x):x+t}var Oe,se,z;if(W){var me=(nr(),Ut(rr)),Ae=(or(),Ut(ar));x=H?Ae.dirname(x)+\"/\":__dirname+\"/\",Oe=(n,o)=>(n=Re(n)?new URL(n):Ae.normalize(n),me.readFileSync(n,o?void 0:\"utf8\")),z=n=>(n=Oe(n,!0),n.buffer||(n=new Uint8Array(n)),n),se=(n,o,l,O=!0)=>{n=Re(n)?new URL(n):Ae.normalize(n),me.readFile(n,O?void 0:\"utf8\",(b,S)=>{b?l(b):o(O?S.buffer:S)})},!u.thisProgram&&1<process.argv.length&&($=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),R=(n,o)=>{throw process.exitCode=n,o},u.inspect=()=>\"[Emscripten Module object]\";let t;try{t=br()}catch(n){throw console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?'),n}global.Worker=t.Worker}else(I||H)&&(H?x=self.location.href:typeof document<\"u\"&&document.currentScript&&(x=document.currentScript.src),typeof f<\"u\"&&f&&(x=f),x.indexOf(\"blob:\")!==0?x=x.substr(0,x.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):x=\"\",W||(Oe=t=>{var n=new XMLHttpRequest;return n.open(\"GET\",t,!1),n.send(null),n.responseText},H&&(z=t=>{var n=new XMLHttpRequest;return n.open(\"GET\",t,!1),n.responseType=\"arraybuffer\",n.send(null),new Uint8Array(n.response)}),se=(t,n,o)=>{var l=new XMLHttpRequest;l.open(\"GET\",t,!0),l.responseType=\"arraybuffer\",l.onload=()=>{l.status==200||l.status==0&&l.response?n(l.response):o()},l.onerror=o,l.send(null)}));W&&typeof performance>\"u\"&&(global.performance=_r().performance);var E=console.log.bind(console),k=console.error.bind(console);W&&(E=(...t)=>me.writeSync(1,t.join(\" \")+`\n`),k=(...t)=>me.writeSync(2,t.join(\" \")+`\n`));var Qe=E,ne=k;Object.assign(u,B),B=null,typeof WebAssembly!=\"object\"&&re(\"no native wasm support detected\");var J,be,L=!1,ue,ge,ye,ve,te,ae;function _e(){var t=J.buffer;u.HEAP8=ge=new Int8Array(t),u.HEAP16=new Int16Array(t),u.HEAPU8=ye=new Uint8Array(t),u.HEAPU16=new Uint16Array(t),u.HEAP32=ve=new Int32Array(t),u.HEAPU32=te=new Uint32Array(t),u.HEAPF32=new Float32Array(t),u.HEAPF64=ae=new Float64Array(t)}var xe=16777216;if(T)J=u.wasmMemory;else if(u.wasmMemory)J=u.wasmMemory;else if(J=new WebAssembly.Memory({initial:xe/65536,maximum:65536,shared:!0}),!(J.buffer instanceof SharedArrayBuffer))throw ne(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\"),W&&ne(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)\"),Error(\"bad memory\");_e(),xe=J.buffer.byteLength;var Me=[],Ee=[],Ze=[],de=0,Ce=null,Pe=null;function oe(){if(de--,de==0&&(Ce!==null&&(clearInterval(Ce),Ce=null),Pe)){var t=Pe;Pe=null,t()}}function re(t){throw t=\"Aborted(\"+t+\")\",ne(t),L=!0,ue=1,t=new WebAssembly.RuntimeError(t+\". Build with -sASSERTIONS for more info.\"),F(t),t}var $e=t=>t.startsWith(\"data:application/octet-stream;base64,\"),Re=t=>t.startsWith(\"file://\"),Le;Le=\"ort-wasm-threaded.wasm\",$e(Le)||(Le=j(Le));function ft(t){if(z)return z(t);throw\"both async and sync fetching of the wasm failed\"}function Rt(t){if(I||H){if(typeof fetch==\"function\"&&!Re(t))return fetch(t,{credentials:\"same-origin\"}).then(n=>{if(!n.ok)throw\"failed to load wasm binary file at '\"+t+\"'\";return n.arrayBuffer()}).catch(()=>ft(t));if(se)return new Promise((n,o)=>{se(t,l=>n(new Uint8Array(l)),o)})}return Promise.resolve().then(()=>ft(t))}function He(t,n,o){return Rt(t).then(l=>WebAssembly.instantiate(l,n)).then(l=>l).then(o,l=>{ne(`failed to asynchronously prepare wasm: ${l}`),re(l)})}function Ke(t,n){var o=Le;return typeof WebAssembly.instantiateStreaming!=\"function\"||$e(o)||Re(o)||W||typeof fetch!=\"function\"?He(o,t,n):fetch(o,{credentials:\"same-origin\"}).then(l=>WebAssembly.instantiateStreaming(l,t).then(n,function(O){return ne(`wasm streaming compile failed: ${O}`),ne(\"falling back to ArrayBuffer instantiation\"),He(o,t,n)}))}var De,lt={921212:(t,n,o,l)=>{if(typeof u>\"u\"||!u.cb)return 1;if(t=tt(t>>>0),t.startsWith(\"./\")&&(t=t.substring(2)),t=u.cb.get(t),!t)return 2;if(n>>>=0,o>>>=0,l>>>=0,n+o>t.byteLength)return 3;try{return v().set(t.subarray(n,n+o),l>>>0),0}catch{return 4}}};function ze(t){this.name=\"ExitStatus\",this.message=`Program terminated with exit(${t})`,this.status=t}var pe=t=>{t.terminate(),t.onmessage=()=>{}},et=t=>{P.Pa.length==0&&(le(),P.Ya(P.Pa[0]));var n=P.Pa.pop();if(!n)return 6;P.Qa.push(n),P.Ma[t.Oa]=n,n.Oa=t.Oa;var o={cmd:\"run\",start_routine:t.kb,arg:t.hb,pthread_ptr:t.Oa};return W&&n.unref(),n.postMessage(o,t.qb),0},We=0,It=typeof TextDecoder<\"u\"?new TextDecoder(\"utf8\"):void 0,Ue=(t,n,o)=>{n>>>=0;var l=n+o;for(o=n;t[o]&&!(o>=l);)++o;if(16<o-n&&t.buffer&&It)return It.decode(t.buffer instanceof SharedArrayBuffer?t.slice(n,o):t.subarray(n,o));for(l=\"\";n<o;){var O=t[n++];if(O&128){var b=t[n++]&63;if((O&224)==192)l+=String.fromCharCode((O&31)<<6|b);else{var S=t[n++]&63;O=(O&240)==224?(O&15)<<12|b<<6|S:(O&7)<<18|b<<12|S<<6|t[n++]&63,65536>O?l+=String.fromCharCode(O):(O-=65536,l+=String.fromCharCode(55296|O>>10,56320|O&1023))}}else l+=String.fromCharCode(O)}return l},tt=(t,n)=>(t>>>=0)?Ue(v(),t,n):\"\",Fe=t=>{var n=ut();return t=t(),zt(n),t};function Y(t,n){var o=arguments.length-2,l=arguments;return Fe(()=>{for(var O=Zt(8*o),b=O>>>3,S=0;S<o;S++){var X=l[2+S];y()[b+S>>>0]=X}return ce(t,o,O,n)})}function ct(t){if(T)return Y(0,1,t);ue=t,0<We||(P.lb(),u.onExit?.(t),L=!0),R(t,new ze(t))}var fe=t=>{if(ue=t,T)throw Bt(t),\"unwind\";ct(t)};function dt(){for(var t=u.numThreads;t--;)le();Me.unshift(()=>{de++,Se(()=>oe())})}function le(){var t=j(\"ort-wasm-threaded.worker.js\");t=new Worker(t),P.Pa.push(t)}function Se(t){T?t():Promise.all(P.Pa.map(P.Ya)).then(t)}var P={Pa:[],Qa:[],bb:[],Ma:{},Wa(){T?(P.receiveObjectTransfer=P.jb,P.threadInitTLS=P.ab,P.setExitStatus=P.$a):dt()},$a:t=>ue=t,tb:[\"$terminateWorker\"],lb:()=>{for(var t of P.Qa)pe(t);for(t of P.Pa)pe(t);P.Pa=[],P.Qa=[],P.Ma=[]},Za:t=>{var n=t.Oa;delete P.Ma[n],P.Pa.push(t),P.Qa.splice(P.Qa.indexOf(t),1),t.Oa=0,we(n)},jb(){},ab(){P.bb.forEach(t=>t())},Ya:t=>new Promise(n=>{t.onmessage=b=>{b=b.data;var S=b.cmd;if(b.targetThread&&b.targetThread!=U()){var X=P.Ma[b.targetThread];X?X.postMessage(b,b.transferList):ne(`Internal error! Worker sent a message \"${S}\" to target pthread ${b.targetThread}, but that thread no longer exists!`)}else S===\"checkMailbox\"?Ye():S===\"spawnThread\"?et(b):S===\"cleanupThread\"?P.Za(P.Ma[b.thread]):S===\"killThread\"?(b=b.thread,S=P.Ma[b],delete P.Ma[b],pe(S),we(b),P.Qa.splice(P.Qa.indexOf(S),1),S.Oa=0):S===\"cancelThread\"?P.Ma[b.thread].postMessage({cmd:\"cancel\"}):S===\"loaded\"?(t.loaded=!0,W&&!t.Oa&&t.unref(),n(t)):S===\"alert\"?alert(`Thread ${b.threadId}: ${b.text}`):b.target===\"setimmediate\"?t.postMessage(b):S===\"callHandler\"?u[b.handler](...b.args):S&&ne(`worker sent an unknown command ${S}`)},t.onerror=b=>{throw ne(`worker sent an error! ${b.filename}:${b.lineno}: ${b.message}`),b},W&&(t.on(\"message\",b=>t.onmessage({data:b})),t.on(\"error\",b=>t.onerror(b)));var o=[],l=[\"onExit\"],O;for(O of l)u.hasOwnProperty(O)&&o.push(O);t.postMessage({cmd:\"load\",handlers:o,urlOrBlob:u.mainScriptUrlOrBlob||f,wasmMemory:J,wasmModule:be})})};u.PThread=P;var rt=t=>{for(;0<t.length;)t.shift()(u)};u.establishStackSpace=()=>{var t=U(),n=_()[t+52>>>2>>>0];t=_()[t+56>>>2>>>0],Ie(n,n-t),zt(n)};function Bt(t){if(T)return Y(1,0,t);fe(t)}var Ve=[],Lt;u.invokeEntryPoint=(t,n)=>{var o=Ve[t];o||(t>=Ve.length&&(Ve.length=t+1),Ve[t]=o=Lt.get(t)),t=o(n),0<We?P.$a(t):p(t)};function Jt(t){this.Va=t-24,this.gb=function(n){_()[this.Va+4>>>2>>>0]=n},this.fb=function(n){_()[this.Va+8>>>2>>>0]=n},this.Wa=function(n,o){this.eb(),this.gb(n),this.fb(o)},this.eb=function(){_()[this.Va+16>>>2>>>0]=0}}var Wt=0,Xt=0;function Nt(t,n,o,l){return T?Y(2,1,t,n,o,l):kt(t,n,o,l)}function kt(t,n,o,l){if(t>>>=0,n>>>=0,o>>>=0,l>>>=0,typeof SharedArrayBuffer>\"u\")return ne(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\"),6;var O=[];return T&&O.length===0?Nt(t,n,o,l):(t={kb:o,Oa:t,hb:l,qb:O},T?(t.sb=\"spawnThread\",postMessage(t,O),0):et(t))}function nt(t,n,o){return T?Y(3,1,t,n,o):0}function pt(t,n){if(T)return Y(4,1,t,n)}var je=t=>{for(var n=0,o=0;o<t.length;++o){var l=t.charCodeAt(o);127>=l?n++:2047>=l?n+=2:55296<=l&&57343>=l?(n+=4,++o):n+=3}return n},$t=(t,n,o,l)=>{if(o>>>=0,!(0<l))return 0;var O=o;l=o+l-1;for(var b=0;b<t.length;++b){var S=t.charCodeAt(b);if(55296<=S&&57343>=S){var X=t.charCodeAt(++b);S=65536+((S&1023)<<10)|X&1023}if(127>=S){if(o>=l)break;n[o++>>>0]=S}else{if(2047>=S){if(o+1>=l)break;n[o++>>>0]=192|S>>6}else{if(65535>=S){if(o+2>=l)break;n[o++>>>0]=224|S>>12}else{if(o+3>=l)break;n[o++>>>0]=240|S>>18,n[o++>>>0]=128|S>>12&63}n[o++>>>0]=128|S>>6&63}n[o++>>>0]=128|S&63}}return n[o>>>0]=0,o-O},at=(t,n,o)=>$t(t,v(),n,o);function mt(t,n){if(T)return Y(5,1,t,n)}function Ht(t,n,o){if(T)return Y(6,1,t,n,o)}function jt(t,n,o){return T?Y(7,1,t,n,o):0}function gt(t,n){if(T)return Y(8,1,t,n)}function Yt(t,n,o){if(T)return Y(9,1,t,n,o)}function Ne(t,n,o,l){if(T)return Y(10,1,t,n,o,l)}function ht(t,n,o,l){if(T)return Y(11,1,t,n,o,l)}function yt(t,n,o,l){if(T)return Y(12,1,t,n,o,l)}function vt(t){if(T)return Y(13,1,t)}function ot(t,n){if(T)return Y(14,1,t,n)}function it(t,n,o){if(T)return Y(15,1,t,n,o)}function st(t){t>>>=0,typeof Atomics.rb==\"function\"&&(Atomics.rb(c(),t>>>2,t).value.then(Ye),t+=128,Atomics.store(c(),t>>>2,1))}u.__emscripten_thread_mailbox_await=st;var Ye=()=>{var t=U();if(t&&(st(t),t=N,!L))try{if(t(),!(0<We))try{T?p(ue):fe(ue)}catch(n){n instanceof ze||n==\"unwind\"||R(1,n)}}catch(n){n instanceof ze||n==\"unwind\"||R(1,n)}};u.checkMailbox=Ye;var wt=[],ke=t=>t%4===0&&(t%100!==0||t%400===0),Ot=[0,31,60,91,121,152,182,213,244,274,305,335],Gt=[0,31,59,90,120,151,181,212,243,273,304,334];function bt(t,n,o,l,O,b,S,X){return T?Y(16,1,t,n,o,l,O,b,S,X):-52}function _t(t,n,o,l,O,b,S){if(T)return Y(17,1,t,n,o,l,O,b,S)}var qe=t=>{var n=je(t)+1,o=M(n);return o&&at(t,o,n),o},Et=[],D={},St=()=>{if(!Ge){var t={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(typeof navigator==\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:$||\"./this.program\"},n;for(n in D)D[n]===void 0?delete t[n]:t[n]=D[n];var o=[];for(n in t)o.push(`${n}=${t[n]}`);Ge=o}return Ge},Ge;function Te(t,n){if(T)return Y(18,1,t,n);t>>>=0,n>>>=0;var o=0;return St().forEach((l,O)=>{var b=n+o;for(O=_()[t+4*O>>>2>>>0]=b,b=0;b<l.length;++b)s()[O++>>>0>>>0]=l.charCodeAt(b);s()[O>>>0>>>0]=0,o+=l.length+1}),0}function Tt(t,n){if(T)return Y(19,1,t,n);t>>>=0,n>>>=0;var o=St();_()[t>>>2>>>0]=o.length;var l=0;return o.forEach(O=>l+=O.length+1),_()[n>>>2>>>0]=l,0}function At(t){return T?Y(20,1,t):52}function Mt(t,n,o,l){return T?Y(21,1,t,n,o,l):52}function Ct(t,n,o,l,O){return T?Y(22,1,t,n,o,l,O):70}var Qt=[null,[],[]];function Je(t,n,o,l){if(T)return Y(23,1,t,n,o,l);n>>>=0,o>>>=0,l>>>=0;for(var O=0,b=0;b<o;b++){var S=_()[n>>>2>>>0],X=_()[n+4>>>2>>>0];n+=8;for(var Be=0;Be<X;Be++){var ie=v()[S+Be>>>0],he=Qt[t];ie===0||ie===10?((t===1?Qe:ne)(Ue(he,0)),he.length=0):he.push(ie)}O+=X}return _()[l>>>2>>>0]=O,0}var Pt=[31,29,31,30,31,30,31,31,30,31,30,31],e=[31,28,31,30,31,30,31,31,30,31,30,31];function r(t){var n=Array(je(t)+1);return $t(t,n,0,n.length),n}var a=(t,n)=>{s().set(t,n>>>0)};function i(t,n,o,l){function O(g,G,Q){for(g=typeof g==\"number\"?g.toString():g||\"\";g.length<G;)g=Q[0]+g;return g}function b(g,G){return O(g,G,\"0\")}function S(g,G){function Q(hr){return 0>hr?-1:0<hr?1:0}var Xe;return(Xe=Q(g.getFullYear()-G.getFullYear()))===0&&(Xe=Q(g.getMonth()-G.getMonth()))===0&&(Xe=Q(g.getDate()-G.getDate())),Xe}function X(g){switch(g.getDay()){case 0:return new Date(g.getFullYear()-1,11,29);case 1:return g;case 2:return new Date(g.getFullYear(),0,3);case 3:return new Date(g.getFullYear(),0,2);case 4:return new Date(g.getFullYear(),0,1);case 5:return new Date(g.getFullYear()-1,11,31);case 6:return new Date(g.getFullYear()-1,11,30)}}function Be(g){var G=g.Ra;for(g=new Date(new Date(g.Sa+1900,0,1).getTime());0<G;){var Q=g.getMonth(),Xe=(ke(g.getFullYear())?Pt:e)[Q];if(G>Xe-g.getDate())G-=Xe-g.getDate()+1,g.setDate(1),11>Q?g.setMonth(Q+1):(g.setMonth(0),g.setFullYear(g.getFullYear()+1));else{g.setDate(g.getDate()+G);break}}return Q=new Date(g.getFullYear()+1,0,4),G=X(new Date(g.getFullYear(),0,4)),Q=X(Q),0>=S(G,g)?0>=S(Q,g)?g.getFullYear()+1:g.getFullYear():g.getFullYear()-1}t>>>=0,n>>>=0,o>>>=0,l>>>=0;var ie=_()[l+40>>>2>>>0];l={ob:c()[l>>>2>>>0],nb:c()[l+4>>>2>>>0],Ta:c()[l+8>>>2>>>0],Xa:c()[l+12>>>2>>>0],Ua:c()[l+16>>>2>>>0],Sa:c()[l+20>>>2>>>0],Na:c()[l+24>>>2>>>0],Ra:c()[l+28>>>2>>>0],ub:c()[l+32>>>2>>>0],mb:c()[l+36>>>2>>>0],pb:ie?tt(ie):\"\"},o=tt(o),ie={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var he in ie)o=o.replace(new RegExp(he,\"g\"),ie[he]);var mr=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),gr=\"January February March April May June July August September October November December\".split(\" \");ie={\"%a\":g=>mr[g.Na].substring(0,3),\"%A\":g=>mr[g.Na],\"%b\":g=>gr[g.Ua].substring(0,3),\"%B\":g=>gr[g.Ua],\"%C\":g=>b((g.Sa+1900)/100|0,2),\"%d\":g=>b(g.Xa,2),\"%e\":g=>O(g.Xa,2,\" \"),\"%g\":g=>Be(g).toString().substring(2),\"%G\":g=>Be(g),\"%H\":g=>b(g.Ta,2),\"%I\":g=>(g=g.Ta,g==0?g=12:12<g&&(g-=12),b(g,2)),\"%j\":g=>{for(var G=0,Q=0;Q<=g.Ua-1;G+=(ke(g.Sa+1900)?Pt:e)[Q++]);return b(g.Xa+G,3)},\"%m\":g=>b(g.Ua+1,2),\"%M\":g=>b(g.nb,2),\"%n\":()=>`\n`,\"%p\":g=>0<=g.Ta&&12>g.Ta?\"AM\":\"PM\",\"%S\":g=>b(g.ob,2),\"%t\":()=>\"\t\",\"%u\":g=>g.Na||7,\"%U\":g=>b(Math.floor((g.Ra+7-g.Na)/7),2),\"%V\":g=>{var G=Math.floor((g.Ra+7-(g.Na+6)%7)/7);if(2>=(g.Na+371-g.Ra-2)%7&&G++,G)G==53&&(Q=(g.Na+371-g.Ra)%7,Q==4||Q==3&&ke(g.Sa)||(G=1));else{G=52;var Q=(g.Na+7-g.Ra-1)%7;(Q==4||Q==5&&ke(g.Sa%400-1))&&G++}return b(G,2)},\"%w\":g=>g.Na,\"%W\":g=>b(Math.floor((g.Ra+7-(g.Na+6)%7)/7),2),\"%y\":g=>(g.Sa+1900).toString().substring(2),\"%Y\":g=>g.Sa+1900,\"%z\":g=>{g=g.mb;var G=0<=g;return g=Math.abs(g)/60,(G?\"+\":\"-\")+(\"0000\"+(g/60*100+g%60)).slice(-4)},\"%Z\":g=>g.pb,\"%%\":()=>\"%\"},o=o.replace(/%%/g,\"\\0\\0\");for(he in ie)o.includes(he)&&(o=o.replace(new RegExp(he,\"g\"),ie[he](l)));return o=o.replace(/\\0\\0/g,\"%\"),he=r(o),he.length>n?0:(a(he,t),he.length-1)}P.Wa();var d=[ct,Bt,Nt,nt,pt,mt,Ht,jt,gt,Yt,Ne,ht,yt,vt,ot,it,bt,_t,Te,Tt,At,Mt,Ct,Je],w={b:function(t,n,o){throw t>>>=0,new Jt(t).Wa(n>>>0,o>>>0),Wt=t,Xt++,Wt},L:function(t){V(t>>>0,!H,1,!I,131072,!1),P.ab()},j:function(t){t>>>=0,T?postMessage({cmd:\"cleanupThread\",thread:t}):P.Za(P.Ma[t])},H:kt,h:nt,S:pt,D:mt,F:Ht,T:jt,Q:gt,J:Yt,P:Ne,n:ht,E:yt,B:vt,R:ot,C:it,p:()=>1,z:function(t,n){t>>>=0,t==n>>>0?setTimeout(()=>Ye()):T?postMessage({targetThread:t,cmd:\"checkMailbox\"}):(t=P.Ma[t])&&t.postMessage({cmd:\"checkMailbox\"})},I:function(t,n,o,l){n>>>=0,wt.length=o,l=l>>>0>>>3;for(var O=0;O<o;O++)wt[O]=y()[l+O>>>0];return t=0>t?lt[-t-1]:d[t],P.ib=n,n=t.apply(null,wt),P.ib=0,n},K:st,o:function(t){W&&P.Ma[t>>>0].ref()},s:function(t,n,o){t=n+2097152>>>0<4194305-!!t?(t>>>0)+4294967296*n:NaN,o>>>=0,t=new Date(1e3*t),c()[o>>>2>>>0]=t.getUTCSeconds(),c()[o+4>>>2>>>0]=t.getUTCMinutes(),c()[o+8>>>2>>>0]=t.getUTCHours(),c()[o+12>>>2>>>0]=t.getUTCDate(),c()[o+16>>>2>>>0]=t.getUTCMonth(),c()[o+20>>>2>>>0]=t.getUTCFullYear()-1900,c()[o+24>>>2>>>0]=t.getUTCDay(),t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,c()[o+28>>>2>>>0]=t},t:function(t,n,o){t=n+2097152>>>0<4194305-!!t?(t>>>0)+4294967296*n:NaN,o>>>=0,t=new Date(1e3*t),c()[o>>>2>>>0]=t.getSeconds(),c()[o+4>>>2>>>0]=t.getMinutes(),c()[o+8>>>2>>>0]=t.getHours(),c()[o+12>>>2>>>0]=t.getDate(),c()[o+16>>>2>>>0]=t.getMonth(),c()[o+20>>>2>>>0]=t.getFullYear()-1900,c()[o+24>>>2>>>0]=t.getDay(),n=(ke(t.getFullYear())?Ot:Gt)[t.getMonth()]+t.getDate()-1|0,c()[o+28>>>2>>>0]=n,c()[o+36>>>2>>>0]=-(60*t.getTimezoneOffset()),n=new Date(t.getFullYear(),6,1).getTimezoneOffset();var l=new Date(t.getFullYear(),0,1).getTimezoneOffset();t=(n!=l&&t.getTimezoneOffset()==Math.min(l,n))|0,c()[o+32>>>2>>>0]=t},u:function(t){t>>>=0;var n=new Date(c()[t+20>>>2>>>0]+1900,c()[t+16>>>2>>>0],c()[t+12>>>2>>>0],c()[t+8>>>2>>>0],c()[t+4>>>2>>>0],c()[t>>>2>>>0],0),o=c()[t+32>>>2>>>0],l=n.getTimezoneOffset(),O=new Date(n.getFullYear(),6,1).getTimezoneOffset(),b=new Date(n.getFullYear(),0,1).getTimezoneOffset(),S=Math.min(b,O);return 0>o?c()[t+32>>>2>>>0]=+(O!=b&&S==l):0<o!=(S==l)&&(O=Math.max(b,O),n.setTime(n.getTime()+6e4*((0<o?S:O)-l))),c()[t+24>>>2>>>0]=n.getDay(),o=(ke(n.getFullYear())?Ot:Gt)[n.getMonth()]+n.getDate()-1|0,c()[t+28>>>2>>>0]=o,c()[t>>>2>>>0]=n.getSeconds(),c()[t+4>>>2>>>0]=n.getMinutes(),c()[t+8>>>2>>>0]=n.getHours(),c()[t+12>>>2>>>0]=n.getDate(),c()[t+16>>>2>>>0]=n.getMonth(),c()[t+20>>>2>>>0]=n.getYear(),t=n.getTime(),isNaN(t)?(c()[A()>>>2>>>0]=61,t=-1):t/=1e3,q((De=t,1<=+Math.abs(De)?0<De?+Math.floor(De/4294967296)>>>0:~~+Math.ceil((De-+(~~De>>>0))/4294967296)>>>0:0)),t>>>0},q:bt,r:_t,y:function(t,n,o){function l(ie){return(ie=ie.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?ie[1]:\"GMT\"}t>>>=0,n>>>=0,o>>>=0;var O=new Date().getFullYear(),b=new Date(O,0,1),S=new Date(O,6,1);O=b.getTimezoneOffset();var X=S.getTimezoneOffset(),Be=Math.max(O,X);_()[t>>>2>>>0]=60*Be,c()[n>>>2>>>0]=+(O!=X),t=l(b),n=l(S),t=qe(t),n=qe(n),X<O?(_()[o>>>2>>>0]=t,_()[o+4>>>2>>>0]=n):(_()[o>>>2>>>0]=n,_()[o+4>>>2>>>0]=t)},c:()=>{re(\"\")},O:function(t,n,o){t>>>=0,n>>>=0,o>>>=0,Et.length=0;for(var l;l=v()[n++>>>0];){var O=l!=105;O&=l!=112,o+=O&&o%8?4:0,Et.push(l==112?_()[o>>>2>>>0]:l==105?c()[o>>>2>>>0]:y()[o>>>3>>>0]),o+=O?8:4}return lt[t].apply(null,Et)},k:()=>{},i:()=>Date.now(),U:()=>{throw We+=1,\"unwind\"},A:function(){return 4294901760},e:()=>performance.timeOrigin+performance.now(),f:()=>W?(Sr(),Ut(Er)).cpus().length:navigator.hardwareConcurrency,x:function(t){t>>>=0;var n=v().length;if(t<=n||4294901760<t)return!1;for(var o=1;4>=o;o*=2){var l=n*(1+.2/o);l=Math.min(l,t+100663296);var O=Math;l=Math.max(t,l);e:{O=(O.min.call(O,4294901760,l+(65536-l%65536)%65536)-J.buffer.byteLength+65535)/65536;try{J.grow(O),_e();var b=1;break e}catch{}b=void 0}if(b)return!0}return!1},M:Te,N:Tt,G:fe,g:At,m:Mt,v:Ct,l:Je,a:J||u.wasmMemory,w:i,d:function(t,n,o,l){return i(t>>>0,n>>>0,o>>>0,l>>>0)}},h=function(){function t(o,l){return h=o.exports,h=qr(),P.bb.push(h.za),Lt=h.Aa,Ee.unshift(h.V),be=l,oe(),h}var n={a:w};if(de++,u.instantiateWasm)try{return u.instantiateWasm(n,t)}catch(o){ne(`Module.instantiateWasm callback failed with error: ${o}`),F(o)}return Ke(n,function(o){t(o.instance,o.module)}).catch(F),{}}();u._OrtInit=(t,n)=>(u._OrtInit=h.W)(t,n),u._OrtGetLastError=(t,n)=>(u._OrtGetLastError=h.X)(t,n),u._OrtCreateSessionOptions=(t,n,o,l,O,b,S,X,Be,ie)=>(u._OrtCreateSessionOptions=h.Y)(t,n,o,l,O,b,S,X,Be,ie),u._OrtAppendExecutionProvider=(t,n)=>(u._OrtAppendExecutionProvider=h.Z)(t,n),u._OrtAddFreeDimensionOverride=(t,n,o)=>(u._OrtAddFreeDimensionOverride=h._)(t,n,o),u._OrtAddSessionConfigEntry=(t,n,o)=>(u._OrtAddSessionConfigEntry=h.$)(t,n,o),u._OrtReleaseSessionOptions=t=>(u._OrtReleaseSessionOptions=h.aa)(t),u._OrtCreateSession=(t,n,o)=>(u._OrtCreateSession=h.ba)(t,n,o),u._OrtReleaseSession=t=>(u._OrtReleaseSession=h.ca)(t),u._OrtGetInputOutputCount=(t,n,o)=>(u._OrtGetInputOutputCount=h.da)(t,n,o),u._OrtGetInputName=(t,n)=>(u._OrtGetInputName=h.ea)(t,n),u._OrtGetOutputName=(t,n)=>(u._OrtGetOutputName=h.fa)(t,n),u._OrtFree=t=>(u._OrtFree=h.ga)(t),u._OrtCreateTensor=(t,n,o,l,O,b)=>(u._OrtCreateTensor=h.ha)(t,n,o,l,O,b),u._OrtGetTensorData=(t,n,o,l,O)=>(u._OrtGetTensorData=h.ia)(t,n,o,l,O),u._OrtReleaseTensor=t=>(u._OrtReleaseTensor=h.ja)(t),u._OrtCreateRunOptions=(t,n,o,l)=>(u._OrtCreateRunOptions=h.ka)(t,n,o,l),u._OrtAddRunConfigEntry=(t,n,o)=>(u._OrtAddRunConfigEntry=h.la)(t,n,o),u._OrtReleaseRunOptions=t=>(u._OrtReleaseRunOptions=h.ma)(t),u._OrtCreateBinding=t=>(u._OrtCreateBinding=h.na)(t),u._OrtBindInput=(t,n,o)=>(u._OrtBindInput=h.oa)(t,n,o),u._OrtBindOutput=(t,n,o,l)=>(u._OrtBindOutput=h.pa)(t,n,o,l),u._OrtClearBoundOutputs=t=>(u._OrtClearBoundOutputs=h.qa)(t),u._OrtReleaseBinding=t=>(u._OrtReleaseBinding=h.ra)(t),u._OrtRunWithBinding=(t,n,o,l,O)=>(u._OrtRunWithBinding=h.sa)(t,n,o,l,O),u._OrtRun=(t,n,o,l,O,b,S,X)=>(u._OrtRun=h.ta)(t,n,o,l,O,b,S,X),u._OrtEndProfiling=t=>(u._OrtEndProfiling=h.ua)(t);var A=()=>(A=h.va)(),U=u._pthread_self=()=>(U=u._pthread_self=h.wa)(),M=u._malloc=t=>(M=u._malloc=h.xa)(t);u._free=t=>(u._free=h.ya)(t),u.__emscripten_tls_init=()=>(u.__emscripten_tls_init=h.za)();var V=u.__emscripten_thread_init=(t,n,o,l,O,b)=>(V=u.__emscripten_thread_init=h.Ba)(t,n,o,l,O,b);u.__emscripten_thread_crashed=()=>(u.__emscripten_thread_crashed=h.Ca)();var ce=(t,n,o,l)=>(ce=h.Da)(t,n,o,l),we=t=>(we=h.Ea)(t),p=u.__emscripten_thread_exit=t=>(p=u.__emscripten_thread_exit=h.Fa)(t),N=()=>(N=h.Ga)(),q=t=>(q=h.Ha)(t),Ie=(t,n)=>(Ie=h.Ia)(t,n),ut=()=>(ut=h.Ja)(),zt=t=>(zt=h.Ka)(t),Zt=t=>(Zt=h.La)(t);function qr(){var t=h;t=Object.assign({},t);var n=l=>()=>l()>>>0,o=l=>O=>l(O)>>>0;return t.va=n(t.va),t.wa=n(t.wa),t.xa=o(t.xa),t.emscripten_main_runtime_thread_id=n(t.emscripten_main_runtime_thread_id),t.Ja=n(t.Ja),t.La=o(t.La),t}u.wasmMemory=J,u.stackAlloc=Zt,u.stackSave=ut,u.stackRestore=zt,u.keepRuntimeAlive=()=>0<We,u.UTF8ToString=tt,u.stringToUTF8=at,u.lengthBytesUTF8=je,u.ExitStatus=ze,u.PThread=P;var Vt;Pe=function t(){Vt||pr(),Vt||(Pe=t)};function pr(){if(!(0<de))if(T)C(u),T||rt(Ee),startWorker(u);else{if(u.preRun)for(typeof u.preRun==\"function\"&&(u.preRun=[u.preRun]);u.preRun.length;)Me.unshift(u.preRun.shift());rt(Me),0<de||Vt||(Vt=!0,u.calledRun=!0,L||(T||rt(Ee),C(u),T||rt(Ze)))}}return pr(),m.ready}})();typeof Ar==\"object\"&&typeof sr==\"object\"?sr.exports=Tr:typeof define==\"function\"&&define.amd&&define([],()=>Tr)});var Cr=Dt((_n,nn)=>{nn.exports='\"use strict\";var Module={},ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require(\"worker_threads\"),parentPort=nodeWorkerThreads.parentPort;parentPort.on(\"message\",e=>onmessage({data:e}));var fs=require(\"fs\"),vm=require(\"vm\");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,\"utf8\"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(\" \");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(\" \");postMessage({cmd:\"alert\",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd===\"load\"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:\"loaded\"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:\"callHandler\",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob==\"string\")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd===\"run\"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!=\"unwind\")throw a}}else e.data.cmd===\"cancel\"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target===\"setimmediate\"||(e.data.cmd===\"checkMailbox\"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed?.(),a}}self.onmessage=handleMessage;\\n'});var Dr;Dr=Or();var an=Mr(),ur,fr=!1,qt=!1,Pr=!1,on=f=>{if(f===1)return!1;if(typeof SharedArrayBuffer>\"u\")return typeof self<\"u\"&&!self.crossOriginIsolated&&console.warn(\"env.wasm.numThreads is set to \"+f+\", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info.\"),!1;typeof process<\"u\"&&process.versions&&process.versions.node&&console.warn(\"env.wasm.numThreads is set to \"+f+\", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.\");try{return typeof MessageChannel<\"u\"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},sn=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},un=(f,m)=>f?m?\"ort-wasm-simd-threaded.wasm\":\"ort-wasm-simd.wasm\":m?\"ort-wasm-threaded.wasm\":\"ort-wasm.wasm\",Ur=async f=>{if(fr)return Promise.resolve();if(qt)throw new Error(\"multiple calls to 'initializeWebAssembly()' detected.\");if(Pr)throw new Error(\"previous call to 'initializeWebAssembly()' failed.\");qt=!0;let m=f.initTimeout,s=f.numThreads,v=f.simd,c=on(s),_=v&&sn(),y=f.wasmPaths,u=typeof y==\"string\"?y:void 0,C=un(_,c),F=typeof y==\"object\"?y[C]:void 0,B=!1,$=[];if(m>0&&$.push(new Promise(R=>{setTimeout(()=>{B=!0,R()},m)})),$.push(new Promise((R,I)=>{let H=c?an:Dr,W={locateFile:(T,x)=>c&&T.endsWith(\".worker.js\")&&typeof Blob<\"u\"?URL.createObjectURL(new Blob([Cr()],{type:\"text/javascript\"})):T.endsWith(\".wasm\")?F||(u??x)+C:x+T};if(c)if(W.numThreads=s,typeof Blob>\"u\")W.mainScriptUrlOrBlob=(void 0)(__dirname,\"ort-wasm-threaded.js\");else{let T=`var ortWasmThreaded=${H.toString()};`;W.mainScriptUrlOrBlob=new Blob([T],{type:\"text/javascript\"})}H(W).then(T=>{qt=!1,fr=!0,ur=T,R()},T=>{qt=!1,Pr=!0,I(T)})})),await Promise.race($),B)throw new Error(`WebAssembly backend initializing failed due to timeout: ${m}ms`)},K=()=>{if(fr&&ur)return ur;throw new Error(\"WebAssembly is not initialized yet.\")};var ee=(f,m)=>{let s=K(),v=s.lengthBytesUTF8(f)+1,c=s._malloc(v);return s.stringToUTF8(f,c,v),m.push(c),c},Ft=(f,m,s,v)=>{if(typeof f==\"object\"&&f!==null){if(s.has(f))throw new Error(\"Circular reference in options\");s.add(f)}Object.entries(f).forEach(([c,_])=>{let y=m?m+c:c;if(typeof _==\"object\")Ft(_,y+\".\",s,v);else if(typeof _==\"string\"||typeof _==\"number\")v(y,_.toString());else if(typeof _==\"boolean\")v(y,_?\"1\":\"0\");else throw new Error(`Can't handle extra config type: ${typeof _}`)})},Z=f=>{let m=K(),s=m.stackSave();try{let v=m.stackAlloc(8);m._OrtGetLastError(v,v+4);let c=m.HEAP32[v/4],_=m.HEAPU32[v/4+1],y=_?m.UTF8ToString(_):\"\";throw new Error(`${f} ERROR_CODE: ${c}, ERROR_MESSAGE: ${y}`)}finally{m.stackRestore(s)}};var Fr=f=>{let m=K(),s=0,v=[],c=f||{};try{if(f?.logSeverityLevel===void 0)c.logSeverityLevel=2;else if(typeof f.logSeverityLevel!=\"number\"||!Number.isInteger(f.logSeverityLevel)||f.logSeverityLevel<0||f.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${f.logSeverityLevel}`);if(f?.logVerbosityLevel===void 0)c.logVerbosityLevel=0;else if(typeof f.logVerbosityLevel!=\"number\"||!Number.isInteger(f.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${f.logVerbosityLevel}`);f?.terminate===void 0&&(c.terminate=!1);let _=0;return f?.tag!==void 0&&(_=ee(f.tag,v)),s=m._OrtCreateRunOptions(c.logSeverityLevel,c.logVerbosityLevel,!!c.terminate,_),s===0&&Z(\"Can't create run options.\"),f?.extra!==void 0&&Ft(f.extra,\"\",new WeakSet,(y,u)=>{let C=ee(y,v),F=ee(u,v);m._OrtAddRunConfigEntry(s,C,F)!==0&&Z(`Can't set a run config entry: ${y} - ${u}.`)}),[s,v]}catch(_){throw s!==0&&m._OrtReleaseRunOptions(s),v.forEach(y=>m._free(y)),_}};var fn=f=>{switch(f){case\"disabled\":return 0;case\"basic\":return 1;case\"extended\":return 2;case\"all\":return 99;default:throw new Error(`unsupported graph optimization level: ${f}`)}},ln=f=>{switch(f){case\"sequential\":return 0;case\"parallel\":return 1;default:throw new Error(`unsupported execution mode: ${f}`)}},cn=f=>{f.extra||(f.extra={}),f.extra.session||(f.extra.session={});let m=f.extra.session;m.use_ort_model_bytes_directly||(m.use_ort_model_bytes_directly=\"1\"),f.executionProviders&&f.executionProviders.some(s=>(typeof s==\"string\"?s:s.name)===\"webgpu\")&&(f.enableMemPattern=!1)},dn=(f,m,s)=>{for(let v of m){let c=typeof v==\"string\"?v:v.name;switch(c){case\"webnn\":if(c=\"WEBNN\",typeof v!=\"string\"){let y=v;if(y?.deviceType){let u=ee(\"deviceType\",s),C=ee(y.deviceType,s);K()._OrtAddSessionConfigEntry(f,u,C)!==0&&Z(`Can't set a session config entry: 'deviceType' - ${y.deviceType}.`)}if(y?.numThreads){let u=y.numThreads;(typeof u!=\"number\"||!Number.isInteger(u)||u<0)&&(u=0);let C=ee(\"numThreads\",s),F=ee(u.toString(),s);K()._OrtAddSessionConfigEntry(f,C,F)!==0&&Z(`Can't set a session config entry: 'numThreads' - ${y.numThreads}.`)}if(y?.powerPreference){let u=ee(\"powerPreference\",s),C=ee(y.powerPreference,s);K()._OrtAddSessionConfigEntry(f,u,C)!==0&&Z(`Can't set a session config entry: 'powerPreference' - ${y.powerPreference}.`)}}break;case\"webgpu\":if(c=\"JS\",typeof v!=\"string\"){let y=v;if(y?.preferredLayout){if(y.preferredLayout!==\"NCHW\"&&y.preferredLayout!==\"NHWC\")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${y.preferredLayout}`);let u=ee(\"preferredLayout\",s),C=ee(y.preferredLayout,s);K()._OrtAddSessionConfigEntry(f,u,C)!==0&&Z(`Can't set a session config entry: 'preferredLayout' - ${y.preferredLayout}.`)}}break;case\"wasm\":case\"cpu\":continue;default:throw new Error(`not supported execution provider: ${c}`)}let _=ee(c,s);K()._OrtAppendExecutionProvider(f,_)!==0&&Z(`Can't append execution provider: ${c}.`)}},xr=f=>{let m=K(),s=0,v=[],c=f||{};cn(c);try{let _=fn(c.graphOptimizationLevel??\"all\"),y=ln(c.executionMode??\"sequential\"),u=typeof c.logId==\"string\"?ee(c.logId,v):0,C=c.logSeverityLevel??2;if(!Number.isInteger(C)||C<0||C>4)throw new Error(`log serverity level is not valid: ${C}`);let F=c.logVerbosityLevel??0;if(!Number.isInteger(F)||F<0||F>4)throw new Error(`log verbosity level is not valid: ${F}`);let B=typeof c.optimizedModelFilePath==\"string\"?ee(c.optimizedModelFilePath,v):0;if(s=m._OrtCreateSessionOptions(_,!!c.enableCpuMemArena,!!c.enableMemPattern,y,!!c.enableProfiling,0,u,C,F,B),s===0&&Z(\"Can't create session options.\"),c.executionProviders&&dn(s,c.executionProviders,v),c.freeDimensionOverrides)for(let[$,R]of Object.entries(c.freeDimensionOverrides)){if(typeof $!=\"string\")throw new Error(`free dimension override name must be a string: ${$}`);if(typeof R!=\"number\"||!Number.isInteger(R)||R<0)throw new Error(`free dimension override value must be a non-negative integer: ${R}`);let I=ee($,v);m._OrtAddFreeDimensionOverride(s,I,R)!==0&&Z(`Can't set a free dimension override: ${$} - ${R}.`)}return c.extra!==void 0&&Ft(c.extra,\"\",new WeakSet,($,R)=>{let I=ee($,v),H=ee(R,v);m._OrtAddSessionConfigEntry(s,I,H)!==0&&Z(`Can't set a session config entry: ${$} - ${R}.`)}),[s,v]}catch(_){throw s!==0&&m._OrtReleaseSessionOptions(s),v.forEach(y=>m._free(y)),_}};var lr=f=>{switch(f){case\"int8\":return 3;case\"uint8\":return 2;case\"bool\":return 9;case\"int16\":return 5;case\"uint16\":return 4;case\"int32\":return 6;case\"uint32\":return 12;case\"float16\":return 10;case\"float32\":return 1;case\"float64\":return 11;case\"string\":return 8;case\"int64\":return 7;case\"uint64\":return 13;default:throw new Error(`unsupported data type: ${f}`)}},Rr=f=>{switch(f){case 3:return\"int8\";case 2:return\"uint8\";case 9:return\"bool\";case 5:return\"int16\";case 4:return\"uint16\";case 6:return\"int32\";case 12:return\"uint32\";case 10:return\"float16\";case 1:return\"float32\";case 11:return\"float64\";case 8:return\"string\";case 7:return\"int64\";case 13:return\"uint64\";default:throw new Error(`unsupported data type: ${f}`)}},cr=f=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][f],Ir=f=>{switch(f){case\"float16\":return Uint16Array;case\"float32\":return Float32Array;case\"uint8\":return Uint8Array;case\"int8\":return Int8Array;case\"uint16\":return Uint16Array;case\"int16\":return Int16Array;case\"int32\":return Int32Array;case\"bool\":return Uint8Array;case\"float64\":return Float64Array;case\"uint32\":return Uint32Array;case\"int64\":return BigInt64Array;case\"uint64\":return BigUint64Array;default:throw new Error(`unsupported type: ${f}`)}},Br=f=>{switch(f){case\"verbose\":return 0;case\"info\":return 1;case\"warning\":return 2;case\"error\":return 3;case\"fatal\":return 4;default:throw new Error(`unsupported logging level: ${f}`)}},Lr=f=>f===\"float32\"||f===\"int32\"||f===\"int64\"||f===\"bool\"||f===\"float16\"||f===\"uint32\",Wr=f=>{switch(f){case\"none\":return 0;case\"cpu\":return 1;case\"cpu-pinned\":return 2;case\"texture\":return 3;case\"gpu-buffer\":return 4;default:throw new Error(`unsupported data location: ${f}`)}};var Nr=async f=>{if(typeof f==\"string\")if(typeof process<\"u\"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(f))}catch(m){if(m.code===\"ERR_FS_FILE_TOO_LARGE\"){let s=(void 0)(f),v=[];for await(let c of s)v.push(c);return new Uint8Array(Buffer.concat(v))}throw m}else{let m=await fetch(f);if(!m.ok)throw new Error(`failed to load external data file: ${f}`);let s=m.headers.get(\"Content-Length\"),v=s?parseInt(s,10):0;if(v<1073741824)return new Uint8Array(await m.arrayBuffer());{if(!m.body)throw new Error(`failed to load external data file: ${f}, no response body.`);let c=m.body.getReader(),_;try{_=new ArrayBuffer(v)}catch(u){if(u instanceof RangeError){let C=Math.ceil(v/65536);_=new WebAssembly.Memory({initial:C,maximum:C}).buffer}else throw u}let y=0;for(;;){let{done:u,value:C}=await c.read();if(u)break;let F=C.byteLength;new Uint8Array(_,y,F).set(C),y+=F}return new Uint8Array(_,0,v)}}else return f instanceof Blob?new Uint8Array(await f.arrayBuffer()):f instanceof Uint8Array?f:new Uint8Array(f)};var pn=(f,m)=>{K()._OrtInit(f,m)!==0&&Z(\"Can't initialize onnxruntime.\")},$r=async f=>{pn(f.wasm.numThreads,Br(f.logLevel))},Hr=async(f,m)=>{},xt=new Map,mn=f=>{let m=K(),s=m.stackSave();try{let v=m.stackAlloc(8);return m._OrtGetInputOutputCount(f,v,v+4)!==0&&Z(\"Can't get session input/output count.\"),[m.HEAP32[v/4],m.HEAP32[v/4+1]]}finally{m.stackRestore(s)}},dr=f=>{let m=K(),s=m._malloc(f.byteLength);if(s===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${f.byteLength}.`);return m.HEAPU8.set(f,s),[s,f.byteLength]},jr=async(f,m)=>{let s,v,c=K();Array.isArray(f)?[s,v]=f:f.buffer===c.HEAPU8.buffer?[s,v]=[f.byteOffset,f.byteLength]:[s,v]=dr(f);let _=0,y=0,u=0,C=[],F=[],B=[];try{if([y,C]=xr(m),m?.externalData&&c.mountExternalData){let x=[];for(let j of m.externalData){let Oe=typeof j==\"string\"?j:j.path;x.push(Nr(typeof j==\"string\"?j:j.data).then(se=>{c.mountExternalData(Oe,se)}))}await Promise.all(x)}_=c._OrtCreateSession(s,v,y),_===0&&Z(\"Can't create a session.\");let[$,R]=mn(_),I=[],H=[],W=[];for(let x=0;x<$;x++){let j=c._OrtGetInputName(_,x);j===0&&Z(\"Can't get an input name.\"),F.push(j),I.push(c.UTF8ToString(j))}for(let x=0;x<R;x++){let j=c._OrtGetOutputName(_,x);j===0&&Z(\"Can't get an output name.\"),B.push(j);let Oe=c.UTF8ToString(j);H.push(Oe)}let T=null;return xt.set(_,[_,F,B,T]),[_,I,H]}catch($){throw F.forEach(R=>c._OrtFree(R)),B.forEach(R=>c._OrtFree(R)),u!==0&&c._OrtReleaseBinding(u),_!==0&&c._OrtReleaseSession(_),$}finally{c._free(s),y!==0&&c._OrtReleaseSessionOptions(y),C.forEach($=>c._free($)),c.unmountExternalData?.()}},Yr=f=>{let m=K(),s=xt.get(f);if(!s)throw new Error(`cannot release session. invalid session id: ${f}`);let[v,c,_,y]=s;y&&m._OrtReleaseBinding(y.handle),m.jsepUnregisterBuffers?.(f),c.forEach(u=>m._OrtFree(u)),_.forEach(u=>m._OrtFree(u)),m._OrtReleaseSession(v),xt.delete(f)},kr=(f,m,s,v,c)=>{if(!f){m.push(0);return}let _=K(),y=f[0],u=f[1],C=f[3],F,B;if(y===\"string\"&&C===\"gpu-buffer\")throw new Error(\"String tensor is not supported on GPU.\");if(C===\"gpu-buffer\"){let I=f[2].gpuBuffer,H=cr(lr(y));B=u.reduce((W,T)=>W*T,1)*H,F=_.jsepRegisterBuffer(v,c,I,B)}else{let I=f[2];if(Array.isArray(I)){B=4*I.length,F=_._malloc(B),s.push(F);let H=F/4;for(let W=0;W<I.length;W++){if(typeof I[W]!=\"string\")throw new TypeError(`tensor data at index ${W} is not a string`);_.HEAPU32[H++]=ee(I[W],s)}}else B=I.byteLength,F=_._malloc(B),s.push(F),_.HEAPU8.set(new Uint8Array(I.buffer,I.byteOffset,B),F)}let $=_.stackSave(),R=_.stackAlloc(4*u.length);try{let I=R/4;u.forEach(W=>_.HEAP32[I++]=W);let H=_._OrtCreateTensor(lr(y),F,B,R,u.length,Wr(C));H===0&&Z(`Can't create tensor for input/output. session=${v}, index=${c}.`),m.push(H)}finally{_.stackRestore($)}},Gr=async(f,m,s,v,c,_)=>{let y=K(),u=xt.get(f);if(!u)throw new Error(`cannot run inference. invalid session id: ${f}`);let[C,F,B,$]=u,R=m.length,I=v.length,H=0,W=[],T=[],x=[],j=[],Oe=y.stackSave(),se=y.stackAlloc(R*4),z=y.stackAlloc(R*4),me=y.stackAlloc(I*4),Ae=y.stackAlloc(I*4);try{[H,W]=Fr(_);for(let L=0;L<R;L++)kr(s[L],T,j,f,m[L]);for(let L=0;L<I;L++)kr(c[L],x,j,f,R+v[L]);let E=se/4,k=z/4,Qe=me/4,ne=Ae/4;for(let L=0;L<R;L++)y.HEAPU32[E++]=T[L],y.HEAPU32[k++]=F[m[L]];for(let L=0;L<I;L++)y.HEAPU32[Qe++]=x[L],y.HEAPU32[ne++]=B[v[L]];y.jsepOnRunStart?.();let J;J=await y._OrtRun(C,z,se,R,Ae,I,me,H),J!==0&&Z(\"failed to call OrtRun().\");let be=[];for(let L=0;L<I;L++){let ue=y.HEAPU32[me/4+L];if(ue===x[L]){be.push(c[L]);continue}let ge=y.stackSave(),ye=y.stackAlloc(4*4),ve=!1,te,ae=0;try{y._OrtGetTensorData(ue,ye,ye+4,ye+8,ye+12)!==0&&Z(`Can't access output tensor data on index ${L}.`);let xe=ye/4,Me=y.HEAPU32[xe++];ae=y.HEAPU32[xe++];let Ee=y.HEAPU32[xe++],Ze=y.HEAPU32[xe++],de=[];for(let oe=0;oe<Ze;oe++)de.push(y.HEAPU32[Ee/4+oe]);y._OrtFree(Ee);let Ce=de.reduce((oe,re)=>oe*re,1);te=Rr(Me);let Pe=$?.outputPreferredLocations[v[L]];if(te===\"string\"){if(Pe===\"gpu-buffer\")throw new Error(\"String tensor is not supported on GPU.\");let oe=[],re=ae/4;for(let $e=0;$e<Ce;$e++){let Re=y.HEAPU32[re++],Le=$e===Ce-1?void 0:y.HEAPU32[re]-Re;oe.push(y.UTF8ToString(Re,Le))}be.push([te,de,oe,\"cpu\"])}else if(Pe===\"gpu-buffer\"&&Ce>0){let oe=y.jsepGetBuffer(ae),re=cr(Me);if(re===void 0||!Lr(te))throw new Error(`Unsupported data type: ${te}`);ve=!0,be.push([te,de,{gpuBuffer:oe,download:y.jsepCreateDownloader(oe,Ce*re,te),dispose:()=>{y._OrtReleaseTensor(ue)}},\"gpu-buffer\"])}else{let oe=Ir(te),re=new oe(Ce);new Uint8Array(re.buffer,re.byteOffset,re.byteLength).set(y.HEAPU8.subarray(ae,ae+re.byteLength)),be.push([te,de,re,\"cpu\"])}}finally{y.stackRestore(ge),te===\"string\"&&ae&&y._free(ae),ve||y._OrtReleaseTensor(ue)}}return $&&y._OrtClearBoundOutputs($.handle),be}finally{y.stackRestore(Oe),T.forEach(E=>y._OrtReleaseTensor(E)),x.forEach(E=>y._OrtReleaseTensor(E)),j.forEach(E=>y._free(E)),H!==0&&y._OrtReleaseRunOptions(H),W.forEach(E=>y._free(E))}},zr=f=>{let m=K(),s=xt.get(f);if(!s)throw new Error(\"invalid session id\");let v=s[0],c=m._OrtEndProfiling(v);c===0&&Z(\"Can't get an profile file name.\"),m._OrtFree(c)},Vr=f=>{let m=[];for(let s of f){let v=s[2];!Array.isArray(v)&&\"buffer\"in v&&m.push(v.buffer)}return m};self.onmessage=f=>{let{type:m,in:s}=f.data;try{switch(m){case\"init-wasm\":Ur(s.wasm).then(()=>{$r(s).then(()=>{postMessage({type:m})},v=>{postMessage({type:m,err:v})})},v=>{postMessage({type:m,err:v})});break;case\"init-ep\":{let{epName:v,env:c}=s;Hr(c,v).then(()=>{postMessage({type:m})},_=>{postMessage({type:m,err:_})});break}case\"copy-from\":{let{buffer:v}=s,c=dr(v);postMessage({type:m,out:c});break}case\"create\":{let{model:v,options:c}=s;jr(v,c).then(_=>{postMessage({type:m,out:_})},_=>{postMessage({type:m,err:_})});break}case\"release\":Yr(s),postMessage({type:m});break;case\"run\":{let{sessionId:v,inputIndices:c,inputs:_,outputIndices:y,options:u}=s;Gr(v,c,_,y,new Array(y.length).fill(null),u).then(C=>{C.some(F=>F[3]!==\"cpu\")?postMessage({type:m,err:\"Proxy does not support non-cpu tensor location.\"}):postMessage({type:m,out:C},Vr(C))},C=>{postMessage({type:m,err:C})});break}case\"end-profiling\":zr(s),postMessage({type:m});break;default:}}catch(v){postMessage({type:m,err:v})}};})();\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env, InferenceSession} from 'onnxruntime-common';\n\nimport {OrtWasmMessage, SerializableInternalBuffer, SerializableSessionMetadata, SerializableTensorMetadata, TensorMetadata} from './proxy-messages';\nimport * as core from './wasm-core-impl';\nimport {initializeWebAssembly} from './wasm-factory';\n\nconst isProxy = (): boolean => !!env.wasm.proxy && typeof document !== 'undefined';\nlet proxyWorker: Worker|undefined;\nlet initializing = false;\nlet initialized = false;\nlet aborted = false;\n\ntype PromiseCallbacks<T = void> = [resolve: (result: T) => void, reject: (reason: unknown) => void];\nlet initWasmCallbacks: PromiseCallbacks;\nconst queuedCallbacks: Map<OrtWasmMessage['type'], Array<PromiseCallbacks<unknown>>> = new Map();\n\nconst enqueueCallbacks = (type: OrtWasmMessage['type'], callbacks: PromiseCallbacks<unknown>): void => {\n  const queue = queuedCallbacks.get(type);\n  if (queue) {\n    queue.push(callbacks);\n  } else {\n    queuedCallbacks.set(type, [callbacks]);\n  }\n};\n\nconst ensureWorker = (): void => {\n  if (initializing || !initialized || aborted || !proxyWorker) {\n    throw new Error('worker not ready');\n  }\n};\n\nconst onProxyWorkerMessage = (ev: MessageEvent<OrtWasmMessage>): void => {\n  switch (ev.data.type) {\n    case 'init-wasm':\n      initializing = false;\n      if (ev.data.err) {\n        aborted = true;\n        initWasmCallbacks[1](ev.data.err);\n      } else {\n        initialized = true;\n        initWasmCallbacks[0]();\n      }\n      break;\n    case 'init-ep':\n    case 'copy-from':\n    case 'create':\n    case 'release':\n    case 'run':\n    case 'end-profiling': {\n      const callbacks = queuedCallbacks.get(ev.data.type)!;\n      if (ev.data.err) {\n        callbacks.shift()![1](ev.data.err);\n      } else {\n        callbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    }\n    default:\n  }\n};\n\nconst scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src : undefined;\n\nexport const initializeWebAssemblyAndOrtRuntime = async(): Promise<void> => {\n  if (initialized) {\n    return;\n  }\n  if (initializing) {\n    throw new Error('multiple calls to \\'initWasm()\\' detected.');\n  }\n  if (aborted) {\n    throw new Error('previous call to \\'initWasm()\\' failed.');\n  }\n\n  initializing = true;\n\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    // overwrite wasm filepaths\n    if (env.wasm.wasmPaths === undefined) {\n      if (scriptSrc && scriptSrc.indexOf('blob:') !== 0) {\n        env.wasm.wasmPaths = scriptSrc.substr(0, +(scriptSrc).lastIndexOf('/') + 1);\n      }\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      proxyWorker?.terminate();\n\n      const workerUrl = URL.createObjectURL(new Blob(\n          [\n            // This require() function is handled by esbuild plugin to load file content as string.\n            // eslint-disable-next-line @typescript-eslint/no-require-imports\n            require('./proxy-worker/main')\n          ],\n          {type: 'text/javascript'}));\n      proxyWorker = new Worker(workerUrl, {name: 'ort-wasm-proxy-worker'});\n      proxyWorker.onerror = (ev: ErrorEvent) => reject(ev);\n      proxyWorker.onmessage = onProxyWorkerMessage;\n      URL.revokeObjectURL(workerUrl);\n      initWasmCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-wasm', in : env};\n      proxyWorker.postMessage(message);\n    });\n\n  } else {\n    try {\n      await initializeWebAssembly(env.wasm);\n      await core.initRuntime(env);\n      initialized = true;\n    } catch (e) {\n      aborted = true;\n      throw e;\n    } finally {\n      initializing = false;\n    }\n  }\n};\n\nexport const initializeOrtEp = async(epName: string): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      enqueueCallbacks('init-ep', [resolve, reject]);\n      const message: OrtWasmMessage = {type: 'init-ep', in : {epName, env}};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    await core.initEp(env, epName);\n  }\n};\n\nexport const copyFromExternalBuffer = async(buffer: Uint8Array): Promise<SerializableInternalBuffer> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableInternalBuffer>((resolve, reject) => {\n      enqueueCallbacks('copy-from', [resolve, reject]);\n      const message: OrtWasmMessage = {type: 'copy-from', in : {buffer}};\n      proxyWorker!.postMessage(message, [buffer.buffer]);\n    });\n  } else {\n    return core.copyFromExternalBuffer(buffer);\n  }\n};\n\nexport const createSession =\n    async(model: SerializableInternalBuffer|Uint8Array, options?: InferenceSession.SessionOptions):\n        Promise<SerializableSessionMetadata> => {\n          if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n            // check unsupported options\n            if (options?.preferredOutputLocation) {\n              throw new Error('session option \"preferredOutputLocation\" is not supported for proxy.');\n            }\n            ensureWorker();\n            return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n              enqueueCallbacks('create', [resolve, reject]);\n              const message: OrtWasmMessage = {type: 'create', in : {model, options}};\n              const transferable: Transferable[] = [];\n              if (model instanceof Uint8Array) {\n                transferable.push(model.buffer);\n              }\n              proxyWorker!.postMessage(message, transferable);\n            });\n          } else {\n            return core.createSession(model, options);\n          }\n        };\n\nexport const releaseSession = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      enqueueCallbacks('release', [resolve, reject]);\n      const message: OrtWasmMessage = {type: 'release', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.releaseSession(sessionId);\n  }\n};\n\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: TensorMetadata[], outputIndices: number[],\n    outputs: Array<TensorMetadata|null>, options: InferenceSession.RunOptions): Promise<TensorMetadata[]> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    // check inputs location\n    if (inputs.some(t => t[3] !== 'cpu')) {\n      throw new Error('input tensor on GPU is not supported for proxy.');\n    }\n    // check outputs location\n    if (outputs.some(t => t)) {\n      throw new Error('pre-allocated output tensor is not supported for proxy.');\n    }\n    ensureWorker();\n    return new Promise<SerializableTensorMetadata[]>((resolve, reject) => {\n      enqueueCallbacks('run', [resolve, reject]);\n      const serializableInputs = inputs as SerializableTensorMetadata[];  // every input is on CPU.\n      const message: OrtWasmMessage =\n          {type: 'run', in : {sessionId, inputIndices, inputs: serializableInputs, outputIndices, options}};\n      proxyWorker!.postMessage(message, core.extractTransferableBuffers(serializableInputs));\n    });\n  } else {\n    return core.run(sessionId, inputIndices, inputs, outputIndices, outputs, options);\n  }\n};\n\nexport const endProfiling = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      enqueueCallbacks('end-profiling', [resolve, reject]);\n      const message: OrtWasmMessage = {type: 'end-profiling', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.endProfiling(sessionId);\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, InferenceSessionHandler, SessionHandler, Tensor, TRACE_FUNC_BEGIN, TRACE_FUNC_END} from 'onnxruntime-common';\n\nimport {SerializableInternalBuffer, TensorMetadata} from './proxy-messages';\nimport {copyFromExternalBuffer, createSession, endProfiling, releaseSession, run} from './proxy-wrapper';\nimport {isGpuBufferSupportedType} from './wasm-common';\nimport {loadFile} from './wasm-utils-load-file';\n\nexport const encodeTensorMetadata = (tensor: Tensor, getName: () => string): TensorMetadata => {\n  switch (tensor.location) {\n    case 'cpu':\n      return [tensor.type, tensor.dims, tensor.data, 'cpu'];\n    case 'gpu-buffer':\n      return [tensor.type, tensor.dims, {gpuBuffer: tensor.gpuBuffer}, 'gpu-buffer'];\n    default:\n      throw new Error(`invalid data location: ${tensor.location} for ${getName()}`);\n  }\n};\n\nexport const decodeTensorMetadata = (tensor: TensorMetadata): Tensor => {\n  switch (tensor[3]) {\n    case 'cpu':\n      return new Tensor(tensor[0], tensor[2], tensor[1]);\n    case 'gpu-buffer': {\n      const dataType = tensor[0];\n      if (!isGpuBufferSupportedType(dataType)) {\n        throw new Error(`not supported data type: ${dataType} for deserializing GPU tensor`);\n      }\n      const {gpuBuffer, download, dispose} = tensor[2];\n      return Tensor.fromGpuBuffer(gpuBuffer, {dataType, dims: tensor[1], download, dispose});\n    }\n    default:\n      throw new Error(`invalid data location: ${tensor[3]}`);\n  }\n};\n\nexport class OnnxruntimeWebAssemblySessionHandler implements InferenceSessionHandler {\n  private sessionId: number;\n\n  inputNames: string[];\n  outputNames: string[];\n\n  async fetchModelAndCopyToWasmMemory(path: string): Promise<SerializableInternalBuffer> {\n    // fetch model from url and move to wasm heap.\n    return copyFromExternalBuffer(await loadFile(path));\n  }\n\n  async loadModel(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions): Promise<void> {\n    TRACE_FUNC_BEGIN();\n    let model: Parameters<typeof createSession>[0];\n\n    if (typeof pathOrBuffer === 'string') {\n      if (typeof process !== 'undefined' && process.versions && process.versions.node) {\n        // node\n        model = await loadFile(pathOrBuffer);\n      } else {\n        // browser\n        // fetch model and copy to wasm heap.\n        model = await this.fetchModelAndCopyToWasmMemory(pathOrBuffer);\n      }\n    } else {\n      model = pathOrBuffer;\n    }\n\n    [this.sessionId, this.inputNames, this.outputNames] = await createSession(model, options);\n    TRACE_FUNC_END();\n  }\n\n  async dispose(): Promise<void> {\n    return releaseSession(this.sessionId);\n  }\n\n  async run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType, options: InferenceSession.RunOptions):\n      Promise<SessionHandler.ReturnType> {\n    TRACE_FUNC_BEGIN();\n    const inputArray: Tensor[] = [];\n    const inputIndices: number[] = [];\n    Object.entries(feeds).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.inputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid input '${name}'`);\n      }\n      inputArray.push(tensor);\n      inputIndices.push(index);\n    });\n\n    const outputArray: Array<Tensor|null> = [];\n    const outputIndices: number[] = [];\n    Object.entries(fetches).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.outputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid output '${name}'`);\n      }\n      outputArray.push(tensor);\n      outputIndices.push(index);\n    });\n\n    const inputs =\n        inputArray.map((t, i) => encodeTensorMetadata(t, () => `input \"${this.inputNames[inputIndices[i]]}\"`));\n    const outputs = outputArray.map(\n        (t, i) => t ? encodeTensorMetadata(t, () => `output \"${this.outputNames[outputIndices[i]]}\"`) : null);\n\n    const results = await run(this.sessionId, inputIndices, inputs, outputIndices, outputs, options);\n\n    const resultMap: SessionHandler.ReturnType = {};\n    for (let i = 0; i < results.length; i++) {\n      resultMap[this.outputNames[outputIndices[i]]] = outputArray[i] ?? decodeTensorMetadata(results[i]);\n    }\n    TRACE_FUNC_END();\n    return resultMap;\n  }\n\n  startProfiling(): void {\n    // TODO: implement profiling\n  }\n\n  endProfiling(): void {\n    void endProfiling(this.sessionId);\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {cpus} from 'node:os';\nimport {Backend, env, InferenceSession, InferenceSessionHandler} from 'onnxruntime-common';\n\nimport {initializeOrtEp, initializeWebAssemblyAndOrtRuntime} from './wasm/proxy-wrapper';\nimport {OnnxruntimeWebAssemblySessionHandler} from './wasm/session-handler-inference';\n\n/**\n * This function initializes all flags for WebAssembly.\n *\n * Those flags are accessible from `ort.env.wasm`. Users are allow to set those flags before the first inference session\n * being created, to override default value.\n */\nexport const initializeFlags = (): void => {\n  if (typeof env.wasm.initTimeout !== 'number' || env.wasm.initTimeout < 0) {\n    env.wasm.initTimeout = 0;\n  }\n\n  if (typeof env.wasm.simd !== 'boolean') {\n    env.wasm.simd = true;\n  }\n\n  if (typeof env.wasm.proxy !== 'boolean') {\n    env.wasm.proxy = false;\n  }\n\n  if (typeof env.wasm.trace !== 'boolean') {\n    env.wasm.trace = false;\n  }\n\n  if (typeof env.wasm.numThreads !== 'number' || !Number.isInteger(env.wasm.numThreads) || env.wasm.numThreads <= 0) {\n    // Web: when crossOriginIsolated is false, SharedArrayBuffer is not available so WebAssembly threads will not work.\n    // Node.js: onnxruntime-web does not support multi-threads in Node.js.\n    if ((typeof self !== 'undefined' && !self.crossOriginIsolated) ||\n        (typeof process !== 'undefined' && process.versions && process.versions.node)) {\n      env.wasm.numThreads = 1;\n    }\n    const numCpuLogicalCores = typeof navigator === 'undefined' ? cpus().length : navigator.hardwareConcurrency;\n    env.wasm.numThreads = Math.min(4, Math.ceil((numCpuLogicalCores || 1) / 2));\n  }\n};\n\nexport class OnnxruntimeWebAssemblyBackend implements Backend {\n  /**\n   * This function initializes the WebAssembly backend.\n   *\n   * This function will be called only once for each backend name. It will be called the first time when\n   * `ort.InferenceSession.create()` is called with a registered backend name.\n   *\n   * @param backendName - the registered backend name.\n   */\n  async init(backendName: string): Promise<void> {\n    // populate wasm flags\n    initializeFlags();\n\n    // init wasm\n    await initializeWebAssemblyAndOrtRuntime();\n\n    // performe EP specific initialization\n    await initializeOrtEp(backendName);\n  }\n  createInferenceSessionHandler(path: string, options?: InferenceSession.SessionOptions):\n      Promise<InferenceSessionHandler>;\n  createInferenceSessionHandler(buffer: Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<InferenceSessionHandler>;\n  async createInferenceSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<InferenceSessionHandler> {\n    const handler = new OnnxruntimeWebAssemblySessionHandler();\n    await handler.loadModel(pathOrBuffer, options);\n    return Promise.resolve(handler);\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {OnnxruntimeWebAssemblyBackend} from './backend-wasm';\nexport const wasmBackend = new OnnxruntimeWebAssemblyBackend();\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports */\n// We use \"require\" instead of \"import\" here because import statement must be put in top level. Our current code does\n// not allow bundler to tree-shaking code as expected because some codes are treated as having side effects.\n// So we import code inside the if-clause to allow bundler remove the code safely.\n\nexport * from 'onnxruntime-common';\nimport * as ort from 'onnxruntime-common';\nexport default ort;\n\nimport {registerBackend, env} from 'onnxruntime-common';\nimport {version} from './version';\n\nif (!BUILD_DEFS.DISABLE_WEBGL) {\n  const onnxjsBackend = require('./backend-onnxjs').onnxjsBackend;\n  registerBackend('webgl', onnxjsBackend, -10);\n}\n\nif (!BUILD_DEFS.DISABLE_WASM) {\n  const wasmBackend = BUILD_DEFS.DISABLE_TRAINING ? require('./backend-wasm-inference').wasmBackend :\n                                                    require('./backend-wasm-training').wasmBackend;\n  if (!BUILD_DEFS.DISABLE_WEBGPU) {\n    registerBackend('webgpu', wasmBackend, 5);\n  }\n  registerBackend('cpu', wasmBackend, 10);\n  registerBackend('wasm', wasmBackend, 10);\n  if (!BUILD_DEFS.DISABLE_WEBNN) {\n    registerBackend('webnn', wasmBackend, 9);\n  }\n}\n\nObject.defineProperty(env.versions, 'web', {value: version, enumerable: true});\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n// This file is generated by /js/scripts/update-version.ts\n// Do not modify file content manually.\n\nexport const version = '1.18.0';\n"],
  "mappings": "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",
  "names": ["backends", "backendsSortedByPriority", "registerBackend", "resolveBackend", "init_backend_impl", "__esmMin", "name", "backend", "priority", "currentBackend", "i", "backendHints", "backendNames", "errors", "backendName", "backendInfo", "isInitializing", "e", "init_backend", "__esmMin", "init_backend_impl", "version", "init_version", "__esmMin", "logLevelValue", "env", "init_env_impl", "__esmMin", "init_version", "version", "value", "env", "init_env", "__esmMin", "init_env_impl", "tensorToDataURL", "tensorToImageData", "init_tensor_conversion_impl", "__esmMin", "tensor", "options", "canvas", "pixels2DContext", "width", "height", "inputformat", "norm", "normMean", "normBias", "stride", "rTensorPointer", "gTensorPointer", "bTensorPointer", "aTensorPointer", "i", "j", "R", "G", "B", "A", "image", "channels", "step", "rImagePointer", "gImagePointer", "bImagePointer", "aImagePointer", "bufferToTensor", "tensorFromImage", "tensorFromTexture", "tensorFromGpuBuffer", "tensorFromPinnedBuffer", "init_tensor_factory_impl", "__esmMin", "init_tensor_impl", "buffer", "options", "height", "width", "norm", "normMean", "normBias", "inputformat", "outputformat", "stride", "float32Data", "step", "rImagePointer", "gImagePointer", "bImagePointer", "aImagePointer", "rTensorPointer", "gTensorPointer", "bTensorPointer", "aTensorPointer", "i", "Tensor", "image", "isHTMLImageEle", "isImageDataEle", "isImageBitmap", "isString", "data", "bufferToTensorOptions", "createCanvas", "createCanvasContext", "canvas", "pixels2DContext", "tempCanvas", "resolve", "reject", "context", "newImage", "img", "texture", "download", "dispose", "dims", "gpuBuffer", "dataType", "type", "NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP", "NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP", "isBigIntChecked", "checkBigInt", "init_tensor_impl_type_mapping", "__esmMin", "isBigInt64ArrayAvailable", "isBigUint64ArrayAvailable", "calculateSize", "tensorReshape", "init_tensor_utils_impl", "__esmMin", "init_tensor_impl", "dims", "size", "i", "dim", "tensor", "Tensor", "Tensor", "init_tensor_impl", "__esmMin", "init_tensor_conversion_impl", "init_tensor_factory_impl", "init_tensor_impl_type_mapping", "init_tensor_utils_impl", "arg0", "arg1", "arg2", "checkBigInt", "type", "dims", "expectedTypedArrayConstructor", "NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP", "data", "maybeDims", "typedArrayConstructor", "firstElementType", "mappedType", "NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP", "size", "calculateSize", "image", "options", "tensorFromImage", "texture", "tensorFromTexture", "gpuBuffer", "tensorFromGpuBuffer", "buffer", "tensorFromPinnedBuffer", "tensorToDataURL", "tensorToImageData", "releaseData", "tensorReshape", "Tensor", "init_tensor", "__esmMin", "init_tensor_impl", "TRACE", "TRACE_FUNC", "TRACE_FUNC_BEGIN", "TRACE_FUNC_END", "init_trace", "__esmMin", "init_env_impl", "deviceType", "label", "env", "msg", "extraMsg", "stack", "hasTraceFunc", "i", "InferenceSession", "init_inference_session_impl", "__esmMin", "init_backend_impl", "init_tensor", "init_trace", "_InferenceSession", "handler", "feeds", "arg1", "arg2", "TRACE_FUNC_BEGIN", "fetches", "options", "Tensor", "isFetchesEmpty", "name", "isFetches", "arg1Keys", "v", "results", "returnValue", "key", "result", "TRACE_FUNC_END", "arg0", "arg3", "filePathOrUint8Array", "buffer", "byteOffset", "byteLength", "backendHints", "i", "resolveBackend", "InferenceSession", "init_inference_session", "__esmMin", "init_inference_session_impl", "init_onnx_value", "__esmMin", "noBackendErrMsg", "TrainingSession", "init_training_session_impl", "__esmMin", "init_backend_impl", "init_tensor", "_TrainingSession", "handler", "hasOptimizerModel", "hasEvalModel", "trainingOptions", "sessionOptions", "evalModel", "optimizerModel", "options", "backendHints", "i", "backend", "resolveBackend", "inputNames", "outputNames", "feeds", "arg1", "arg2", "fetches", "Tensor", "isFetchesEmpty", "name", "isFetches", "arg1Keys", "v", "results", "returnValue", "key", "result", "trainableOnly", "array", "paramsSize", "TrainingSession", "init_training_session", "__esmMin", "init_training_session_impl", "esm_exports", "__export", "InferenceSession", "TRACE", "TRACE_FUNC_BEGIN", "TRACE_FUNC_END", "Tensor", "TrainingSession", "env", "registerBackend", "init_esm", "__esmMin", "init_backend", "init_env", "init_inference_session", "init_tensor", "init_trace", "init_onnx_value", "init_training_session", "fs_exports", "__export", "createReadStream", "readFile", "readFileSync", "init_fs", "__esmMin", "path_exports", "__export", "join", "init_path", "__esmMin", "require_ort_wasm", "__commonJSMin", "exports", "module", "ortWasm", "_scriptDir", "moduleArg", "g", "aa", "l", "a", "b", "ba", "ca", "da", "p", "ea", "t", "fa", "w", "x", "fs", "ha", "z", "c", "d", "e", "h", "ia", "A", "ja", "B", "ka", "C", "D", "E", "G", "I", "J", "la", "ma", "na", "oa", "pa", "qa", "ra", "sa", "K", "ta", "L", "ua", "M", "va", "wa", "xa", "ya", "za", "Aa", "N", "Ba", "Ca", "Da", "Ea", "Fa", "k", "O", "P", "m", "Ga", "Ha", "Q", "Ia", "Ja", "Ka", "R", "La", "S", "Ma", "Na", "T", "Oa", "U", "V", "Pa", "Qa", "Ra", "Sa", "Ta", "Ua", "Va", "Wa", "Xa", "Ya", "$a", "Za", "W", "ab", "X", "cb", "db", "eb", "fb", "gb", "hb", "ib", "Y", "jb", "kb", "mb", "lb", "nb", "ob", "qb", "pb", "rb", "sb", "tb", "ub", "vb", "f", "r", "u", "bb", "H", "q", "n", "v", "y", "F", "wb", "xb", "zb", "yb", "Z", "Ab", "Bb", "Cb", "Db", "Eb", "Fb", "Gb", "require_worker_threads", "__commonJSMin", "require_perf_hooks", "__commonJSMin", "os_exports", "__export", "cpus", "init_os", "__esmMin", "require_ort_wasm_threaded", "__commonJSMin", "exports", "module", "ortWasmThreaded", "_scriptDir", "moduleArg", "aa", "e", "l", "m", "n", "ba", "p", "ca", "r", "da", "ea", "fa", "v", "ha", "x", "a", "b", "ia", "ja", "z", "ka", "A", "B", "D", "E", "la", "ma", "G", "H", "fs", "na", "c", "I", "d", "g", "h", "k", "oa", "pa", "qa", "J", "ra", "sa", "K", "L", "ta", "ua", "va", "wa", "M", "xa", "N", "ya", "za", "O", "Aa", "Ba", "Ca", "Da", "P", "Ea", "Q", "R", "Fa", "Ha", "S", "Ga", "T", "Ia", "Ja", "La", "Ka", "U", "V", "Ma", "t", "Na", "Oa", "Qa", "Pa", "Ra", "Sa", "Ta", "X", "Ua", "Va", "Wa", "Xa", "Ya", "Za", "$a", "ab", "bb", "cb", "db", "eb", "fb", "gb", "hb", "ib", "jb", "kb", "lb", "mb", "nb", "ob", "pb", "qb", "rb", "sb", "tb", "ub", "vb", "Y", "wb", "xb", "yb", "zb", "Bb", "Ab", "Cb", "Db", "Fb", "Eb", "Gb", "Kb", "Lb", "Mb", "Nb", "Ob", "Pb", "C", "w", "y", "Qb", "Rb", "Sb", "Tb", "Ub", "f", "q", "u", "Hb", "F", "Ib", "Jb", "Vb", "Zb", "Wb", "Xb", "Yb", "Z", "$b", "ac", "bc", "cc", "require_ort_wasm_threaded_worker", "__commonJSMin", "exports", "module", "ortWasmFactory", "ortWasmFactoryThreaded", "wasm", "initialized", "initializing", "aborted", "isMultiThreadSupported", "isSimdSupported", "getWasmFileName", "initializeWebAssembly", "getInstance", "init_wasm_factory", "__esmMin", "numThreads", "useSimd", "useThreads", "flags", "timeout", "simd", "wasmPaths", "wasmPrefixOverride", "wasmFileName", "wasmPathOverride", "isTimeout", "tasks", "resolve", "reject", "factory", "config", "fileName", "scriptDirectory", "scriptSourceCode", "module", "what", "allocWasmString", "iterateExtraOptions", "checkLastError", "init_wasm_utils", "__esmMin", "init_wasm_factory", "data", "allocs", "wasm", "getInstance", "dataLength", "dataOffset", "options", "prefix", "seen", "handler", "key", "value", "name", "message", "stack", "paramsOffset", "errorCode", "errorMessagePointer", "errorMessage", "setRunOptions", "init_run_options", "__esmMin", "init_wasm_factory", "init_wasm_utils", "options", "wasm", "getInstance", "runOptionsHandle", "allocs", "runOptions", "tagDataOffset", "allocWasmString", "checkLastError", "iterateExtraOptions", "key", "value", "keyDataOffset", "valueDataOffset", "e", "alloc", "getGraphOptimzationLevel", "getExecutionMode", "appendDefaultOptions", "setExecutionProviders", "setSessionOptions", "init_session_options", "__esmMin", "init_wasm_factory", "init_wasm_utils", "graphOptimizationLevel", "executionMode", "options", "session", "ep", "sessionOptionsHandle", "executionProviders", "allocs", "epName", "webnnOptions", "keyDataOffset", "allocWasmString", "valueDataOffset", "getInstance", "checkLastError", "numThreads", "webgpuOptions", "epNameDataOffset", "wasm", "sessionOptions", "logIdDataOffset", "logSeverityLevel", "logVerbosityLevel", "optimizedModelFilePathOffset", "name", "value", "nameOffset", "iterateExtraOptions", "key", "e", "alloc", "tensorDataTypeStringToEnum", "tensorDataTypeEnumToString", "getTensorElementSize", "tensorTypeToTypedArrayConstructor", "logLevelStringToEnum", "isGpuBufferSupportedType", "dataLocationStringToEnum", "init_wasm_common", "__esmMin", "type", "typeProto", "dateType", "logLevel", "location", "loadFile", "init_wasm_utils_load_file", "__esmMin", "file", "e", "stream", "chunks", "chunk", "response", "contentLengthHeader", "fileSize", "reader", "buffer", "pages", "offset", "done", "value", "chunkSize", "initOrt", "initRuntime", "initEp", "activeSessions", "getSessionInputOutputCount", "copyFromExternalBuffer", "createSession", "releaseSession", "prepareInputOutputTensor", "run", "endProfiling", "extractTransferableBuffers", "init_wasm_core_impl", "__esmMin", "init_run_options", "init_session_options", "init_wasm_common", "init_wasm_factory", "init_wasm_utils", "init_wasm_utils_load_file", "numThreads", "loggingLevel", "getInstance", "checkLastError", "env", "logLevelStringToEnum", "epName", "sessionHandle", "wasm", "stack", "dataOffset", "model", "modelDataOffset", "modelData", "options", "modelDataLength", "sessionOptionsHandle", "ioBindingHandle", "allocs", "inputNamesUTF8Encoded", "outputNamesUTF8Encoded", "setSessionOptions", "loadingPromises", "file", "path", "loadFile", "data", "inputCount", "outputCount", "inputNames", "outputNames", "outputPreferredLocations", "i", "name", "nameString", "bindingState", "e", "buf", "alloc", "sessionId", "session", "ioBindingState", "tensor", "tensorHandles", "index", "dataType", "dims", "location", "rawData", "dataByteLength", "gpuBuffer", "elementSizeInBytes", "getTensorElementSize", "tensorDataTypeStringToEnum", "a", "b", "dataIndex", "allocWasmString", "dimsOffset", "dimIndex", "d", "dataLocationStringToEnum", "inputIndices", "inputTensors", "outputIndices", "outputTensors", "runOptionsHandle", "runOptionsAllocs", "inputTensorHandles", "outputTensorHandles", "inputOutputAllocs", "beforeRunStack", "inputValuesOffset", "inputNamesOffset", "outputValuesOffset", "outputNamesOffset", "setRunOptions", "inputValuesIndex", "inputNamesIndex", "outputValuesIndex", "outputNamesIndex", "errorCode", "output", "beforeGetTensorDataStack", "tensorDataOffset", "keepOutputTensor", "type", "tensorDataIndex", "dimsLength", "size", "tensorDataTypeEnumToString", "preferredLocation", "stringData", "offset", "maxBytesToRead", "elementSize", "isGpuBufferSupportedType", "typedArrayConstructor", "tensorTypeToTypedArrayConstructor", "v", "p", "profileFileName", "tensors", "buffers", "require_main", "__commonJSMin", "exports", "module", "isProxy", "proxyWorker", "initializing", "initialized", "aborted", "initWasmCallbacks", "queuedCallbacks", "enqueueCallbacks", "ensureWorker", "onProxyWorkerMessage", "scriptSrc", "initializeWebAssemblyAndOrtRuntime", "initializeOrtEp", "copyFromExternalBuffer", "createSession", "releaseSession", "run", "endProfiling", "init_proxy_wrapper", "__esmMin", "init_esm", "init_wasm_core_impl", "init_wasm_factory", "env", "type", "callbacks", "queue", "ev", "resolve", "reject", "workerUrl", "message", "initializeWebAssembly", "initRuntime", "e", "epName", "initEp", "buffer", "model", "options", "transferable", "sessionId", "inputIndices", "inputs", "outputIndices", "outputs", "t", "serializableInputs", "extractTransferableBuffers", "encodeTensorMetadata", "decodeTensorMetadata", "OnnxruntimeWebAssemblySessionHandler", "init_session_handler_inference", "__esmMin", "init_esm", "init_proxy_wrapper", "init_wasm_common", "init_wasm_utils_load_file", "tensor", "getName", "Tensor", "dataType", "isGpuBufferSupportedType", "gpuBuffer", "download", "dispose", "path", "copyFromExternalBuffer", "loadFile", "pathOrBuffer", "options", "TRACE_FUNC_BEGIN", "model", "createSession", "TRACE_FUNC_END", "releaseSession", "feeds", "fetches", "inputArray", "inputIndices", "kvp", "name", "index", "outputArray", "outputIndices", "inputs", "t", "i", "outputs", "results", "run", "resultMap", "endProfiling", "initializeFlags", "OnnxruntimeWebAssemblyBackend", "init_backend_wasm", "__esmMin", "init_esm", "init_proxy_wrapper", "init_session_handler_inference", "env", "numCpuLogicalCores", "backendName", "initializeWebAssemblyAndOrtRuntime", "initializeOrtEp", "pathOrBuffer", "options", "handler", "OnnxruntimeWebAssemblySessionHandler", "backend_wasm_inference_exports", "__export", "wasmBackend", "init_backend_wasm_inference", "__esmMin", "init_backend_wasm", "OnnxruntimeWebAssemblyBackend", "init_esm", "version", "lib_default", "esm_exports", "wasmBackend", "registerBackend", "env", "version"]
}
