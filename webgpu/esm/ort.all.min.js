/*!
 * ONNX Runtime Web v1.17.0
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
var Wy=Object.create;var Fo=Object.defineProperty;var Uy=Object.getOwnPropertyDescriptor;var Hy=Object.getOwnPropertyNames;var qy=Object.getPrototypeOf,jy=Object.prototype.hasOwnProperty;var B=(r,e)=>()=>(r&&(e=r(r=0)),e);var Ye=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),Yr=(r,e)=>{for(var n in e)Fo(r,n,{get:e[n],enumerable:!0})},Fu=(r,e,n,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of Hy(e))!jy.call(r,o)&&o!==n&&Fo(r,o,{get:()=>e[o],enumerable:!(t=Uy(e,o))||t.enumerable});return r};var vn=(r,e,n)=>(n=r!=null?Wy(qy(r)):{},Fu(e||!r||!r.__esModule?Fo(n,"default",{value:r,enumerable:!0}):n,r)),kr=r=>Fu(Fo({},"__esModule",{value:!0}),r);var Vo,Xr,Sr,Go,Wo=B(()=>{Vo=new Map,Xr=[],Sr=(r,e,n)=>{if(e&&typeof e.init=="function"&&typeof e.createInferenceSessionHandler=="function"){let t=Vo.get(r);if(t===void 0)Vo.set(r,{backend:e,priority:n});else{if(t.priority>n)return;if(t.priority===n&&t.backend!==e)throw new Error(`cannot register backend "${r}" using priority ${n}`)}if(n>=0){let o=Xr.indexOf(r);o!==-1&&Xr.splice(o,1);for(let i=0;i<Xr.length;i++)if(Vo.get(Xr[i]).priority<=n){Xr.splice(i,0,r);return}Xr.push(r)}return}throw new TypeError("not a valid backend")},Go=async r=>{let e=r.length===0?Xr:r,n=[];for(let t of e){let o=Vo.get(t);if(o){if(o.initialized)return o.backend;if(o.aborted)continue;let i=!!o.initPromise;try{return i||(o.initPromise=o.backend.init()),await o.initPromise,o.initialized=!0,o.backend}catch(u){i||n.push({name:t,err:u}),o.aborted=!0}finally{delete o.initPromise}}}throw new Error(`no available backend found. ERR: ${n.map(t=>`[${t.name}] ${t.err}`).join(", ")}`)}});var Vu=B(()=>{Wo()});var Gu,Wu=B(()=>{Gu="1.17.0"});var Uu,va,Hu=B(()=>{Wu();Uu="warning",va={wasm:{},webgl:{},webgpu:{},versions:{common:Gu},set logLevel(r){if(r!==void 0){if(typeof r!="string"||["verbose","info","warning","error","fatal"].indexOf(r)===-1)throw new Error(`Unsupported logging level: ${r}`);Uu=r}},get logLevel(){return Uu}};Object.defineProperty(va,"logLevel",{enumerable:!0})});var Te,qu=B(()=>{Hu();Te=va});var ju,Ku,Yu=B(()=>{ju=(r,e)=>{let n=document.createElement("canvas");n.width=r.dims[3],n.height=r.dims[2];let t=n.getContext("2d");if(t!=null){let o,i;e?.tensorLayout!==void 0&&e.tensorLayout==="NHWC"?(o=r.dims[2],i=r.dims[3]):(o=r.dims[3],i=r.dims[2]);let u=e?.format!==void 0?e.format:"RGB",a=e?.norm,s,l;a===void 0||a.mean===void 0?s=[255,255,255,255]:typeof a.mean=="number"?s=[a.mean,a.mean,a.mean,a.mean]:(s=[a.mean[0],a.mean[1],a.mean[2],0],a.mean[3]!==void 0&&(s[3]=a.mean[3])),a===void 0||a.bias===void 0?l=[0,0,0,0]:typeof a.bias=="number"?l=[a.bias,a.bias,a.bias,a.bias]:(l=[a.bias[0],a.bias[1],a.bias[2],0],a.bias[3]!==void 0&&(l[3]=a.bias[3]));let d=i*o,p=0,f=d,g=d*2,b=-1;u==="RGBA"?(p=0,f=d,g=d*2,b=d*3):u==="RGB"?(p=0,f=d,g=d*2):u==="RBG"&&(p=0,g=d,f=d*2);for(let y=0;y<i;y++)for(let $=0;$<o;$++){let x=(r.data[p++]-l[0])*s[0],I=(r.data[f++]-l[1])*s[1],O=(r.data[g++]-l[2])*s[2],C=b===-1?255:(r.data[b++]-l[3])*s[3];t.fillStyle="rgba("+x+","+I+","+O+","+C+")",t.fillRect($,y,1,1)}return n.toDataURL()}else throw new Error("Can not access image data")},Ku=(r,e)=>{let n=document.createElement("canvas").getContext("2d"),t;if(n!=null){let o,i,u;e?.tensorLayout!==void 0&&e.tensorLayout==="NHWC"?(o=r.dims[2],i=r.dims[1],u=r.dims[3]):(o=r.dims[3],i=r.dims[2],u=r.dims[1]);let a=e!==void 0&&e.format!==void 0?e.format:"RGB",s=e?.norm,l,d;s===void 0||s.mean===void 0?l=[255,255,255,255]:typeof s.mean=="number"?l=[s.mean,s.mean,s.mean,s.mean]:(l=[s.mean[0],s.mean[1],s.mean[2],255],s.mean[3]!==void 0&&(l[3]=s.mean[3])),s===void 0||s.bias===void 0?d=[0,0,0,0]:typeof s.bias=="number"?d=[s.bias,s.bias,s.bias,s.bias]:(d=[s.bias[0],s.bias[1],s.bias[2],0],s.bias[3]!==void 0&&(d[3]=s.bias[3]));let p=i*o;if(e!==void 0&&(e.format!==void 0&&u===4&&e.format!=="RGBA"||u===3&&e.format!=="RGB"&&e.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let f=4,g=0,b=1,y=2,$=3,x=0,I=p,O=p*2,C=-1;a==="RGBA"?(x=0,I=p,O=p*2,C=p*3):a==="RGB"?(x=0,I=p,O=p*2):a==="RBG"&&(x=0,O=p,I=p*2),t=n.createImageData(o,i);for(let N=0;N<i*o;g+=f,b+=f,y+=f,$+=f,N++)t.data[g]=(r.data[x++]-d[0])*l[0],t.data[b]=(r.data[I++]-d[1])*l[1],t.data[y]=(r.data[O++]-d[2])*l[2],t.data[$]=C===-1?255:(r.data[C++]-d[3])*l[3]}else throw new Error("Can not access image data");return t}});var wa,Xu,Zu,Ju,Qu,el=B(()=>{Uo();wa=(r,e)=>{if(r===void 0)throw new Error("Image buffer must be defined");if(e.height===void 0||e.width===void 0)throw new Error("Image height and width must be defined");if(e.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:n,width:t}=e,o=e.norm??{mean:255,bias:0},i,u;typeof o.mean=="number"?i=[o.mean,o.mean,o.mean,o.mean]:i=[o.mean[0],o.mean[1],o.mean[2],o.mean[3]??255],typeof o.bias=="number"?u=[o.bias,o.bias,o.bias,o.bias]:u=[o.bias[0],o.bias[1],o.bias[2],o.bias[3]??0];let a=e.format!==void 0?e.format:"RGBA",s=e.tensorFormat!==void 0&&e.tensorFormat!==void 0?e.tensorFormat:"RGB",l=n*t,d=s==="RGBA"?new Float32Array(l*4):new Float32Array(l*3),p=4,f=0,g=1,b=2,y=3,$=0,x=l,I=l*2,O=-1;a==="RGB"&&(p=3,f=0,g=1,b=2,y=-1),s==="RGBA"?O=l*3:s==="RBG"?($=0,I=l,x=l*2):s==="BGR"&&(I=0,x=l,$=l*2);for(let N=0;N<l;N++,f+=p,b+=p,g+=p,y+=p)d[$++]=(r[f]+u[0])/i[0],d[x++]=(r[g]+u[1])/i[1],d[I++]=(r[b]+u[2])/i[2],O!==-1&&y!==-1&&(d[O++]=(r[y]+u[3])/i[3]);return s==="RGBA"?new _t("float32",d,[1,4,n,t]):new _t("float32",d,[1,3,n,t])},Xu=async(r,e)=>{let n=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,t=typeof ImageData<"u"&&r instanceof ImageData,o=typeof ImageBitmap<"u"&&r instanceof ImageBitmap,i=typeof r=="string",u,a=e??{};if(n){let s=document.createElement("canvas");s.width=r.width,s.height=r.height;let l=s.getContext("2d");if(l!=null){let d=r.height,p=r.width;if(e!==void 0&&e.resizedHeight!==void 0&&e.resizedWidth!==void 0&&(d=e.resizedHeight,p=e.resizedWidth),e!==void 0){if(a=e,e.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");a.tensorFormat="RGBA",a.height=d,a.width=p}else a.tensorFormat="RGBA",a.height=d,a.width=p;l.drawImage(r,0,0),u=l.getImageData(0,0,p,d).data}else throw new Error("Can not access image data")}else if(t){let s,l;if(e!==void 0&&e.resizedWidth!==void 0&&e.resizedHeight!==void 0?(s=e.resizedHeight,l=e.resizedWidth):(s=r.height,l=r.width),e!==void 0&&(a=e),a.format="RGBA",a.height=s,a.width=l,e!==void 0){let d=document.createElement("canvas");d.width=l,d.height=s;let p=d.getContext("2d");if(p!=null)p.putImageData(r,0,0),u=p.getImageData(0,0,l,s).data;else throw new Error("Can not access image data")}else u=r.data}else if(o){if(e===void 0)throw new Error("Please provide image config with format for Imagebitmap");let s=document.createElement("canvas");s.width=r.width,s.height=r.height;let l=s.getContext("2d");if(l!=null){let d=r.height,p=r.width;return l.drawImage(r,0,0,p,d),u=l.getImageData(0,0,p,d).data,a.height=d,a.width=p,wa(u,a)}else throw new Error("Can not access image data")}else{if(i)return new Promise((s,l)=>{let d=document.createElement("canvas"),p=d.getContext("2d");if(!r||!p)return l();let f=new Image;f.crossOrigin="Anonymous",f.src=r,f.onload=()=>{d.width=f.width,d.height=f.height,p.drawImage(f,0,0,d.width,d.height);let g=p.getImageData(0,0,d.width,d.height);a.height=d.height,a.width=d.width,s(wa(g.data,a))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(u!==void 0)return wa(u,a);throw new Error("Input data provided is not supported - aborted tensor creation")},Zu=(r,e)=>{let{width:n,height:t,download:o,dispose:i}=e,u=[1,t,n,4];return new _t({location:"texture",type:"float32",texture:r,dims:u,download:o,dispose:i})},Ju=(r,e)=>{let{dataType:n,dims:t,download:o,dispose:i}=e;return new _t({location:"gpu-buffer",type:n??"float32",gpuBuffer:r,dims:t,download:o,dispose:i})},Qu=(r,e,n)=>new _t({location:"cpu-pinned",type:r,data:e,dims:n??[e.length]})});var Zn,Ho,tl,rl,nl=B(()=>{Zn=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["float16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),Ho=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),tl=!1,rl=()=>{if(!tl){tl=!0;let r=typeof BigInt64Array<"u"&&typeof BigInt64Array.from=="function",e=typeof BigUint64Array<"u"&&typeof BigUint64Array.from=="function";r&&(Zn.set("int64",BigInt64Array),Ho.set(BigInt64Array,"int64")),e&&(Zn.set("uint64",BigUint64Array),Ho.set(BigUint64Array,"uint64"))}}});var ol,il,al=B(()=>{Uo();ol=r=>{let e=1;for(let n=0;n<r.length;n++){let t=r[n];if(typeof t!="number"||!Number.isSafeInteger(t))throw new TypeError(`dims[${n}] must be an integer, got: ${t}`);if(t<0)throw new RangeError(`dims[${n}] must be a non-negative integer, got: ${t}`);e*=t}return e},il=(r,e)=>{switch(r.location){case"cpu":return new _t(r.type,r.data,e);case"cpu-pinned":return new _t({location:"cpu-pinned",data:r.data,type:r.type,dims:e});case"texture":return new _t({location:"texture",texture:r.texture,type:r.type,dims:e});case"gpu-buffer":return new _t({location:"gpu-buffer",gpuBuffer:r.gpuBuffer,type:r.type,dims:e});default:throw new Error(`tensorReshape: tensor location ${r.location} is not supported`)}}});var _t,Uo=B(()=>{Yu();el();nl();al();_t=class{constructor(e,n,t){rl();let o,i;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,o=e.type,i=e.dims,e.location){case"cpu-pinned":{let a=Zn.get(o);if(!a)throw new TypeError(`unsupported type "${o}" to create tensor from pinned buffer`);if(!(e.data instanceof a))throw new TypeError(`buffer should be of type ${a.name}`);this.cpuData=e.data;break}case"texture":{if(o!=="float32")throw new TypeError(`unsupported type "${o}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(o!=="float32"&&o!=="float16"&&o!=="int32"&&o!=="int64"&&o!=="uint32"&&o!=="bool")throw new TypeError(`unsupported type "${o}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let a,s;if(typeof e=="string")if(o=e,s=t,e==="string"){if(!Array.isArray(n))throw new TypeError("A string tensor's data must be a string array.");a=n}else{let l=Zn.get(e);if(l===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(n)){if(e==="float16")throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");e==="uint64"||e==="int64"?a=l.from(n,BigInt):a=l.from(n)}else if(n instanceof l)a=n;else throw new TypeError(`A ${o} tensor's data must be type of ${l}`)}else if(s=n,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let l=typeof e[0];if(l==="string")o="string",a=e;else if(l==="boolean")o="bool",a=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${l}.`)}else{let l=Ho.get(e.constructor);if(l===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);o=l,a=e}if(s===void 0)s=[a.length];else if(!Array.isArray(s))throw new TypeError("A tensor's dims must be a number array");i=s,this.cpuData=a,this.dataLocation="cpu"}let u=ol(i);if(this.cpuData&&u!==this.cpuData.length)throw new Error(`Tensor's size(${u}) does not match data length(${this.cpuData.length}).`);this.type=o,this.dims=i,this.size=u}static async fromImage(e,n){return Xu(e,n)}static fromTexture(e,n){return Zu(e,n)}static fromGpuBuffer(e,n){return Ju(e,n)}static fromPinnedBuffer(e,n,t){return Qu(e,n,t)}toDataURL(e){return ju(this,e)}toImageData(e){return Ku(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let n=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=n,e&&this.disposer&&(this.disposer(),this.disposer=void 0),n}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return il(this,e)}}});var ht,qo=B(()=>{Uo();ht=_t});var jo,sl=B(()=>{Wo();qo();jo=class r{constructor(e){this.handler=e}async run(e,n,t){let o={},i={};if(typeof e!="object"||e===null||e instanceof ht||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let u=!0;if(typeof n=="object"){if(n===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(n instanceof ht)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(n)){if(n.length===0)throw new TypeError("'fetches' cannot be an empty array.");u=!1;for(let l of n){if(typeof l!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(l)===-1)throw new RangeError(`'fetches' contains invalid output name: ${l}.`);o[l]=null}if(typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else{let l=!1,d=Object.getOwnPropertyNames(n);for(let p of this.outputNames)if(d.indexOf(p)!==-1){let f=n[p];(f===null||f instanceof ht)&&(l=!0,u=!1,o[p]=f)}if(l){if(typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else i=n}}else if(typeof n<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let l of this.inputNames)if(typeof e[l]>"u")throw new Error(`input '${l}' is missing in 'feeds'.`);if(u)for(let l of this.outputNames)o[l]=null;let a=await this.handler.run(e,o,i),s={};for(let l in a)if(Object.hasOwnProperty.call(a,l)){let d=a[l];d instanceof ht?s[l]=d:s[l]=new ht(d.type,d.data,d.dims)}return s}async release(){return this.handler.dispose()}static async create(e,n,t,o){let i,u={};if(typeof e=="string"){if(i=e,typeof n=="object"&&n!==null)u=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof Uint8Array){if(i=e,typeof n=="object"&&n!==null)u=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&e instanceof SharedArrayBuffer){let p=e,f=0,g=e.byteLength;if(typeof n=="object"&&n!==null)u=n;else if(typeof n=="number"){if(f=n,!Number.isSafeInteger(f))throw new RangeError("'byteOffset' must be an integer.");if(f<0||f>=p.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${p.byteLength}).`);if(g=e.byteLength-f,typeof t=="number"){if(g=t,!Number.isSafeInteger(g))throw new RangeError("'byteLength' must be an integer.");if(g<=0||f+g>p.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${p.byteLength-f}].`);if(typeof o=="object"&&o!==null)u=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else if(typeof t<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof n<"u")throw new TypeError("'options' must be an object.");i=new Uint8Array(p,f,g)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let s=(u.executionProviders||[]).map(p=>typeof p=="string"?p:p.name),d=await(await Go(s)).createInferenceSessionHandler(i,u);return new r(d)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}});var Ky,ul=B(()=>{sl();Ky=jo});var ll=B(()=>{});var Yy,Ko,dl=B(()=>{Wo();qo();Yy="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.",Ko=class r{constructor(e,n,t){this.handler=e,this.hasOptimizerModel=n,this.hasEvalModel=t}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(e,n){let t=e.evalModel||"",o=e.optimizerModel||"",i=n||{},a=(i.executionProviders||[]).map(l=>typeof l=="string"?l:l.name),s=await Go(a);if(s.createTrainingSessionHandler){let l=await s.createTrainingSessionHandler(e.checkpointState,e.trainModel,t,o,i);return new r(l,!!e.optimizerModel,!!e.evalModel)}else throw new Error(Yy)}typeNarrowingForRunStep(e,n,t,o,i){let u={},a={};if(typeof t!="object"||t===null||t instanceof ht||Array.isArray(t))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let s=!0;if(typeof o=="object"){if(o===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(o instanceof ht)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(o)){if(o.length===0)throw new TypeError("'fetches' cannot be an empty array.");s=!1;for(let l of o){if(typeof l!="string")throw new TypeError("'fetches' must be a string array or an object.");if(n.indexOf(l)===-1)throw new RangeError(`'fetches' contains invalid output name: ${l}.`);u[l]=null}if(typeof i=="object"&&i!==null)a=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else{let l=!1,d=Object.getOwnPropertyNames(o);for(let p of n)if(d.indexOf(p)!==-1){let f=o[p];(f===null||f instanceof ht)&&(l=!0,s=!1,u[p]=f)}if(l){if(typeof i=="object"&&i!==null)a=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else a=o}}else if(typeof o<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let l of e)if(typeof t[l]>"u")throw new Error(`input '${l}' is missing in 'feeds'.`);if(s)for(let l of n)u[l]=null;return[u,a]}convertHandlerReturnTypeToMapOfTensors(e){let n={};for(let t in e)if(Object.hasOwnProperty.call(e,t)){let o=e[t];o instanceof ht?n[t]=o:n[t]=new ht(o.type,o.data,o.dims)}return n}async runTrainStep(e,n,t){let[o,i]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,e,n,t),u=await this.handler.runTrainStep(e,o,i);return this.convertHandlerReturnTypeToMapOfTensors(u)}async runOptimizerStep(e){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(e||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(e,n,t){if(this.hasEvalModel){let[o,i]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,e,n,t),u=await this.handler.runEvalStep(e,o,i);return this.convertHandlerReturnTypeToMapOfTensors(u)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(e=!0){return this.handler.getParametersSize(e)}async loadParametersBuffer(e,n=!0){let t=await this.getParametersSize(n);if(e.length!==4*t)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(e,n)}async getContiguousParameters(e=!0){return this.handler.getContiguousParameters(e)}async release(){return this.handler.dispose()}}});var Xy,cl=B(()=>{dl();Xy=Ko});var xa={};Yr(xa,{InferenceSession:()=>Ky,Tensor:()=>ht,TrainingSession:()=>Xy,env:()=>Te,registerBackend:()=>Sr});var kt=B(()=>{Vu();qu();ul();qo();ll();cl()});function Dr(r,e,n,t){if(e===void 0)return Jy(r);if(n===void 0)Yo(r,e,1);else if(typeof n=="number"&&t===void 0)Yo(r,e,n);else if(typeof n=="string"&&t===void 0)Yo(r,n,1,e);else if(typeof n=="string"&&typeof t=="number")Yo(r,n,t,e);else throw new TypeError("input is valid")}function Jy(r){return{verbose:Dr.verbose.bind(null,r),info:Dr.info.bind(null,r),warning:Dr.warning.bind(null,r),error:Dr.error.bind(null,r),fatal:Dr.fatal.bind(null,r)}}function Yo(r,e,n,t){let o=Jn[t||""]||Jn[""];pl[r]<pl[o.minimalSeverity]||(o.logDateTime&&(e=`${new Date().toISOString()}|${e}`),o.logSourceLocation,Zy[o.provider].log(r,e,t))}var Ta,$a,pl,Zy,hl,Jn,He,Zo,Jo,Qo,Xo,Ft=B(()=>{"use strict";Ta=class{log(e,n,t){}},$a=class{log(e,n,t){console.log(`${this.color(e)} ${t?"\x1B[35m"+t+"\x1B[0m ":""}${n}`)}color(e){switch(e){case"verbose":return"\x1B[34;40mv\x1B[0m";case"info":return"\x1B[32mi\x1B[0m";case"warning":return"\x1B[30;43mw\x1B[0m";case"error":return"\x1B[31;40me\x1B[0m";case"fatal":return"\x1B[101mf\x1B[0m";default:throw new Error(`unsupported severity: ${e}`)}}},pl={verbose:1e3,info:2e3,warning:4e3,error:5e3,fatal:6e3},Zy={none:new Ta,console:new $a},hl={provider:"console",minimalSeverity:"warning",logDateTime:!0,logSourceLocation:!1},Jn={"":hl};(s=>{function r(l,d){s("verbose",l,d)}s.verbose=r;function e(l,d){s("info",l,d)}s.info=e;function n(l,d){s("warning",l,d)}s.warning=n;function t(l,d){s("error",l,d)}s.error=t;function o(l,d){s("fatal",l,d)}s.fatal=o;function i(l){Jn={},u("",l||{})}s.reset=i;function u(l,d){if(l==="*")i(d);else{let p=Jn[l]||hl;Jn[l]={provider:d.provider||p.provider,minimalSeverity:d.minimalSeverity||p.minimalSeverity,logDateTime:d.logDateTime===void 0?p.logDateTime:d.logDateTime,logSourceLocation:d.logSourceLocation===void 0?p.logSourceLocation:d.logSourceLocation}}}s.set=u;function a(l){let d={};l.logLevel&&(d.minimalSeverity=l.logLevel),u("",d)}s.setWithEnv=a})(Dr||={});He=Dr,Zo=class{constructor(e,n,t,o,i,u){this.category=e;this.name=n;this.startTime=t;this.endCallback=o;this.timer=i;this.ctx=u}async end(){return this.endCallback(this)}async checkTimer(){if(this.ctx===void 0||this.timer===void 0)throw new Error("No webgl timer found");return this.ctx.endTimer(),this.ctx.waitForQueryAndGetTime(this.timer)}},Jo=class{constructor(e,n,t,o){this.category=e;this.name=n;this.startTime=t;this.endTime=o}},Qo=class{constructor(e,n,t){this._started=!1;this._flushPointer=0;this._started=!1,this._maxNumberEvents=e===void 0?1e4:e,this._flushBatchSize=n===void 0?10:n,this._flushIntervalInMilliseconds=t===void 0?5e3:t}static create(e){return e===void 0?new this:new this(e.maxNumberEvents,e.flushBatchSize,e.flushIntervalInMilliseconds)}start(){this._started=!0,this._timingEvents=[],this._flushTime=Xo(),this._flushPointer=0}stop(){for(this._started=!1;this._flushPointer<this._timingEvents.length;this._flushPointer++)this.logOneEvent(this._timingEvents[this._flushPointer])}event(e,n,t,o){let i=this._started?this.begin(e,n,o):void 0,u=!1,a=t();if(a&&typeof a.then=="function")return u=!0,new Promise((s,l)=>{a.then(async d=>{i&&await i.end(),s(d)},async d=>{i&&await i.end(),l(d)})});if(!u&&i){let s=i.end();if(s&&typeof s.then=="function")return new Promise((l,d)=>{s.then(()=>{l(a)},p=>{d(p)})})}return a}begin(e,n,t){if(!this._started)throw new Error("profiler is not started yet");if(t===void 0){let o=Xo();return this.flush(o),new Zo(e,n,o,i=>this.endSync(i))}else{let o=t.beginTimer();return new Zo(e,n,0,async i=>this.end(i),o,t)}}async end(e){let n=await e.checkTimer();this._timingEvents.length<this._maxNumberEvents&&(this._timingEvents.push(new Jo(e.category,e.name,e.startTime,n)),this.flush(n))}endSync(e){let n=Xo();this._timingEvents.length<this._maxNumberEvents&&(this._timingEvents.push(new Jo(e.category,e.name,e.startTime,n)),this.flush(n))}logOneEvent(e){He.verbose(`Profiler.${e.category}`,`${(e.endTime-e.startTime).toFixed(2)}ms on event '${e.name}' at ${e.endTime.toFixed(2)}`)}flush(e){if(this._timingEvents.length-this._flushPointer>=this._flushBatchSize||e-this._flushTime>=this._flushIntervalInMilliseconds){for(let n=this._flushPointer;this._flushPointer<n+this._flushBatchSize&&this._flushPointer<this._timingEvents.length;this._flushPointer++)this.logOneEvent(this._timingEvents[this._flushPointer]);this._flushTime=Xo()}}get started(){return this._started}},Xo=typeof performance<"u"&&performance.now?()=>performance.now():Date.now});function ml(r,e,n){for(let t of n){let o=t[0],i=t[1],u=t[2],a=t[3],s=t[4];if(r.opType===o){for(let l of e)if((l.domain===i||l.domain==="ai.onnx"&&i==="")&&Qy(l.version,u))return{opImpl:a,opInit:s}}}throw new TypeError(`cannot resolve operator '${r.opType}' with opsets: ${e.map(t=>`${t.domain||"ai.onnx"} v${t.version}`).join(", ")}`)}function Qy(r,e){if(e.endsWith("+")){let n=Number.parseInt(e.substring(0,e.length-1),10);return!isNaN(n)&&n<=r}else if(e.split("-").length===2){let n=e.split("-"),t=Number.parseInt(n[0],10),o=Number.parseInt(n[1],10);return!isNaN(t)&&!isNaN(o)&&t<=r&&r<=o}else return Number.parseInt(e,10)===r}var gl=B(()=>{"use strict"});var bl=Ye(Sa=>{"use strict";Sa.__esModule=!0;var e0=function(){function r(e){if(!e)throw new TypeError("Invalid argument; `value` has no value.");this.value=r.EMPTY,e&&r.isGuid(e)&&(this.value=e)}return r.isGuid=function(e){var n=e.toString();return e&&(e instanceof r||r.validator.test(n))},r.create=function(){return new r([r.gen(2),r.gen(1),r.gen(1),r.gen(1),r.gen(3)].join("-"))},r.createEmpty=function(){return new r("emptyguid")},r.parse=function(e){return new r(e)},r.raw=function(){return[r.gen(2),r.gen(1),r.gen(1),r.gen(1),r.gen(3)].join("-")},r.gen=function(e){for(var n="",t=0;t<e;t++)n+=((1+Math.random())*65536|0).toString(16).substring(1);return n},r.prototype.equals=function(e){return r.isGuid(e)&&this.value===e.toString()},r.prototype.isEmpty=function(){return this.value===r.EMPTY},r.prototype.toString=function(){return this.value},r.prototype.toJSON=function(){return{value:this.value}},r.validator=new RegExp("^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$","i"),r.EMPTY="00000000-0000-0000-0000-000000000000",r}();Sa.Guid=e0});function Xe(r,e,n){this.low=r|0,this.high=e|0,this.unsigned=!!n}function Tt(r){return(r&&r.__isLong__)===!0}function yl(r){var e=Math.clz32(r&-r);return r?31-e:e}function Zr(r,e){var n,t,o;return e?(r>>>=0,(o=0<=r&&r<256)&&(t=wl[r],t)?t:(n=Ge(r,0,!0),o&&(wl[r]=n),n)):(r|=0,(o=-128<=r&&r<128)&&(t=vl[r],t)?t:(n=Ge(r,r<0?-1:0,!1),o&&(vl[r]=n),n))}function Gt(r,e){if(isNaN(r))return e?Ir:Yt;if(e){if(r<0)return Ir;if(r>=Sl)return Al}else{if(r<=-Tl)return Dt;if(r+1>=Tl)return _l}return r<0?Gt(-r,e).neg():Ge(r%xn|0,r/xn|0,e)}function Ge(r,e,n){return new Xe(r,e,n)}function _a(r,e,n){if(r.length===0)throw Error("empty string");if(typeof e=="number"?(n=e,e=!1):e=!!e,r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return e?Ir:Yt;if(n=n||10,n<2||36<n)throw RangeError("radix");var t;if((t=r.indexOf("-"))>0)throw Error("interior hyphen");if(t===0)return _a(r.substring(1),e,n).neg();for(var o=Gt(ei(n,8)),i=Yt,u=0;u<r.length;u+=8){var a=Math.min(8,r.length-u),s=parseInt(r.substring(u,u+a),n);if(a<8){var l=Gt(ei(n,a));i=i.mul(l).add(Gt(s))}else i=i.mul(o),i=i.add(Gt(s))}return i.unsigned=e,i}function Xt(r,e){return typeof r=="number"?Gt(r,e):typeof r=="string"?_a(r,e):Ge(r.low,r.high,typeof e=="boolean"?e:r.unsigned)}var Vt,vl,wl,ei,xl,t0,xn,Sl,Tl,$l,Yt,Ir,wn,Il,Ia,_l,Al,Dt,K,_r,Aa=B(()=>{Vt=null;try{Vt=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}Xe.prototype.__isLong__;Object.defineProperty(Xe.prototype,"__isLong__",{value:!0});Xe.isLong=Tt;vl={},wl={};Xe.fromInt=Zr;Xe.fromNumber=Gt;Xe.fromBits=Ge;ei=Math.pow;Xe.fromString=_a;Xe.fromValue=Xt;xl=65536,t0=1<<24,xn=xl*xl,Sl=xn*xn,Tl=Sl/2,$l=Zr(t0),Yt=Zr(0);Xe.ZERO=Yt;Ir=Zr(0,!0);Xe.UZERO=Ir;wn=Zr(1);Xe.ONE=wn;Il=Zr(1,!0);Xe.UONE=Il;Ia=Zr(-1);Xe.NEG_ONE=Ia;_l=Ge(-1,2147483647,!1);Xe.MAX_VALUE=_l;Al=Ge(-1,-1,!0);Xe.MAX_UNSIGNED_VALUE=Al;Dt=Ge(0,-2147483648,!1);Xe.MIN_VALUE=Dt;K=Xe.prototype;K.toInt=function(){return this.unsigned?this.low>>>0:this.low};K.toNumber=function(){return this.unsigned?(this.high>>>0)*xn+(this.low>>>0):this.high*xn+(this.low>>>0)};K.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Dt)){var n=Gt(e),t=this.div(n),o=t.mul(n).sub(this);return t.toString(e)+o.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var i=Gt(ei(e,6),this.unsigned),u=this,a="";;){var s=u.div(i),l=u.sub(s.mul(i)).toInt()>>>0,d=l.toString(e);if(u=s,u.isZero())return d+a;for(;d.length<6;)d="0"+d;a=""+d+a}};K.getHighBits=function(){return this.high};K.getHighBitsUnsigned=function(){return this.high>>>0};K.getLowBits=function(){return this.low};K.getLowBitsUnsigned=function(){return this.low>>>0};K.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Dt)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,n=31;n>0&&!(e&1<<n);n--);return this.high!=0?n+33:n+1};K.isZero=function(){return this.high===0&&this.low===0};K.eqz=K.isZero;K.isNegative=function(){return!this.unsigned&&this.high<0};K.isPositive=function(){return this.unsigned||this.high>=0};K.isOdd=function(){return(this.low&1)===1};K.isEven=function(){return(this.low&1)===0};K.equals=function(e){return Tt(e)||(e=Xt(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};K.eq=K.equals;K.notEquals=function(e){return!this.eq(e)};K.neq=K.notEquals;K.ne=K.notEquals;K.lessThan=function(e){return this.comp(e)<0};K.lt=K.lessThan;K.lessThanOrEqual=function(e){return this.comp(e)<=0};K.lte=K.lessThanOrEqual;K.le=K.lessThanOrEqual;K.greaterThan=function(e){return this.comp(e)>0};K.gt=K.greaterThan;K.greaterThanOrEqual=function(e){return this.comp(e)>=0};K.gte=K.greaterThanOrEqual;K.ge=K.greaterThanOrEqual;K.compare=function(e){if(Tt(e)||(e=Xt(e)),this.eq(e))return 0;var n=this.isNegative(),t=e.isNegative();return n&&!t?-1:!n&&t?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};K.comp=K.compare;K.negate=function(){return!this.unsigned&&this.eq(Dt)?Dt:this.not().add(wn)};K.neg=K.negate;K.add=function(e){Tt(e)||(e=Xt(e));var n=this.high>>>16,t=this.high&65535,o=this.low>>>16,i=this.low&65535,u=e.high>>>16,a=e.high&65535,s=e.low>>>16,l=e.low&65535,d=0,p=0,f=0,g=0;return g+=i+l,f+=g>>>16,g&=65535,f+=o+s,p+=f>>>16,f&=65535,p+=t+a,d+=p>>>16,p&=65535,d+=n+u,d&=65535,Ge(f<<16|g,d<<16|p,this.unsigned)};K.subtract=function(e){return Tt(e)||(e=Xt(e)),this.add(e.neg())};K.sub=K.subtract;K.multiply=function(e){if(this.isZero())return this;if(Tt(e)||(e=Xt(e)),Vt){var n=Vt.mul(this.low,this.high,e.low,e.high);return Ge(n,Vt.get_high(),this.unsigned)}if(e.isZero())return this.unsigned?Ir:Yt;if(this.eq(Dt))return e.isOdd()?Dt:Yt;if(e.eq(Dt))return this.isOdd()?Dt:Yt;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt($l)&&e.lt($l))return Gt(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,o=this.high&65535,i=this.low>>>16,u=this.low&65535,a=e.high>>>16,s=e.high&65535,l=e.low>>>16,d=e.low&65535,p=0,f=0,g=0,b=0;return b+=u*d,g+=b>>>16,b&=65535,g+=i*d,f+=g>>>16,g&=65535,g+=u*l,f+=g>>>16,g&=65535,f+=o*d,p+=f>>>16,f&=65535,f+=i*l,p+=f>>>16,f&=65535,f+=u*s,p+=f>>>16,f&=65535,p+=t*d+o*l+i*s+u*a,p&=65535,Ge(g<<16|b,p<<16|f,this.unsigned)};K.mul=K.multiply;K.divide=function(e){if(Tt(e)||(e=Xt(e)),e.isZero())throw Error("division by zero");if(Vt){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var n=(this.unsigned?Vt.div_u:Vt.div_s)(this.low,this.high,e.low,e.high);return Ge(n,Vt.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Ir:Yt;var t,o,i;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return Ir;if(e.gt(this.shru(1)))return Il;i=Ir}else{if(this.eq(Dt)){if(e.eq(wn)||e.eq(Ia))return Dt;if(e.eq(Dt))return wn;var u=this.shr(1);return t=u.div(e).shl(1),t.eq(Yt)?e.isNegative()?wn:Ia:(o=this.sub(e.mul(t)),i=t.add(o.div(e)),i)}else if(e.eq(Dt))return this.unsigned?Ir:Yt;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();i=Yt}for(o=this;o.gte(e);){t=Math.max(1,Math.floor(o.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(t)/Math.LN2),s=a<=48?1:ei(2,a-48),l=Gt(t),d=l.mul(e);d.isNegative()||d.gt(o);)t-=s,l=Gt(t,this.unsigned),d=l.mul(e);l.isZero()&&(l=wn),i=i.add(l),o=o.sub(d)}return i};K.div=K.divide;K.modulo=function(e){if(Tt(e)||(e=Xt(e)),Vt){var n=(this.unsigned?Vt.rem_u:Vt.rem_s)(this.low,this.high,e.low,e.high);return Ge(n,Vt.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};K.mod=K.modulo;K.rem=K.modulo;K.not=function(){return Ge(~this.low,~this.high,this.unsigned)};K.countLeadingZeros=function(){return this.high?Math.clz32(this.high):Math.clz32(this.low)+32};K.clz=K.countLeadingZeros;K.countTrailingZeros=function(){return this.low?yl(this.low):yl(this.high)+32};K.ctz=K.countTrailingZeros;K.and=function(e){return Tt(e)||(e=Xt(e)),Ge(this.low&e.low,this.high&e.high,this.unsigned)};K.or=function(e){return Tt(e)||(e=Xt(e)),Ge(this.low|e.low,this.high|e.high,this.unsigned)};K.xor=function(e){return Tt(e)||(e=Xt(e)),Ge(this.low^e.low,this.high^e.high,this.unsigned)};K.shiftLeft=function(e){return Tt(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Ge(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):Ge(0,this.low<<e-32,this.unsigned)};K.shl=K.shiftLeft;K.shiftRight=function(e){return Tt(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Ge(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):Ge(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};K.shr=K.shiftRight;K.shiftRightUnsigned=function(e){return Tt(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Ge(this.low>>>e|this.high<<32-e,this.high>>>e,this.unsigned):e===32?Ge(this.high,0,this.unsigned):Ge(this.high>>>e-32,0,this.unsigned)};K.shru=K.shiftRightUnsigned;K.shr_u=K.shiftRightUnsigned;K.rotateLeft=function(e){var n;return Tt(e)&&(e=e.toInt()),(e&=63)===0?this:e===32?Ge(this.high,this.low,this.unsigned):e<32?(n=32-e,Ge(this.low<<e|this.high>>>n,this.high<<e|this.low>>>n,this.unsigned)):(e-=32,n=32-e,Ge(this.high<<e|this.low>>>n,this.low<<e|this.high>>>n,this.unsigned))};K.rotl=K.rotateLeft;K.rotateRight=function(e){var n;return Tt(e)&&(e=e.toInt()),(e&=63)===0?this:e===32?Ge(this.high,this.low,this.unsigned):e<32?(n=32-e,Ge(this.high<<n|this.low>>>e,this.low<<n|this.high>>>e,this.unsigned)):(e-=32,n=32-e,Ge(this.low<<n|this.high>>>e,this.high<<n|this.low>>>e,this.unsigned))};K.rotr=K.rotateRight;K.toSigned=function(){return this.unsigned?Ge(this.low,this.high,!1):this};K.toUnsigned=function(){return this.unsigned?this:Ge(this.low,this.high,!0)};K.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};K.toBytesLE=function(){var e=this.high,n=this.low;return[n&255,n>>>8&255,n>>>16&255,n>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};K.toBytesBE=function(){var e=this.high,n=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,n>>>24,n>>>16&255,n>>>8&255,n&255]};Xe.fromBytes=function(e,n,t){return t?Xe.fromBytesLE(e,n):Xe.fromBytesBE(e,n)};Xe.fromBytesLE=function(e,n){return new Xe(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,n)};Xe.fromBytesBE=function(e,n){return new Xe(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],n)};_r=Xe});var k,ti=B(()=>{k={};k.Offset;k.Table;k.SIZEOF_SHORT=2;k.SIZEOF_INT=4;k.FILE_IDENTIFIER_LENGTH=4;k.SIZE_PREFIX_LENGTH=4;k.Encoding={UTF8_BYTES:1,UTF16_STRING:2};k.int32=new Int32Array(2);k.float32=new Float32Array(k.int32.buffer);k.float64=new Float64Array(k.int32.buffer);k.isLittleEndian=new Uint16Array(new Uint8Array([1,0]).buffer)[0]===1;k.Long=function(r,e){this.low=r|0,this.high=e|0};k.Long.create=function(r,e){return r==0&&e==0?k.Long.ZERO:new k.Long(r,e)};k.Long.prototype.toFloat64=function(){return(this.low>>>0)+this.high*4294967296};k.Long.prototype.equals=function(r){return this.low==r.low&&this.high==r.high};k.Long.ZERO=new k.Long(0,0);k.Builder=function(r){if(r)var e=r;else var e=1024;this.bb=k.ByteBuffer.allocate(e),this.space=e,this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1};k.Builder.prototype.clear=function(){this.bb.clear(),this.space=this.bb.capacity(),this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1};k.Builder.prototype.forceDefaults=function(r){this.force_defaults=r};k.Builder.prototype.dataBuffer=function(){return this.bb};k.Builder.prototype.asUint8Array=function(){return this.bb.bytes().subarray(this.bb.position(),this.bb.position()+this.offset())};k.Builder.prototype.prep=function(r,e){r>this.minalign&&(this.minalign=r);for(var n=~(this.bb.capacity()-this.space+e)+1&r-1;this.space<n+r+e;){var t=this.bb.capacity();this.bb=k.Builder.growByteBuffer(this.bb),this.space+=this.bb.capacity()-t}this.pad(n)};k.Builder.prototype.pad=function(r){for(var e=0;e<r;e++)this.bb.writeInt8(--this.space,0)};k.Builder.prototype.writeInt8=function(r){this.bb.writeInt8(this.space-=1,r)};k.Builder.prototype.writeInt16=function(r){this.bb.writeInt16(this.space-=2,r)};k.Builder.prototype.writeInt32=function(r){this.bb.writeInt32(this.space-=4,r)};k.Builder.prototype.writeInt64=function(r){this.bb.writeInt64(this.space-=8,r)};k.Builder.prototype.writeFloat32=function(r){this.bb.writeFloat32(this.space-=4,r)};k.Builder.prototype.writeFloat64=function(r){this.bb.writeFloat64(this.space-=8,r)};k.Builder.prototype.addInt8=function(r){this.prep(1,0),this.writeInt8(r)};k.Builder.prototype.addInt16=function(r){this.prep(2,0),this.writeInt16(r)};k.Builder.prototype.addInt32=function(r){this.prep(4,0),this.writeInt32(r)};k.Builder.prototype.addInt64=function(r){this.prep(8,0),this.writeInt64(r)};k.Builder.prototype.addFloat32=function(r){this.prep(4,0),this.writeFloat32(r)};k.Builder.prototype.addFloat64=function(r){this.prep(8,0),this.writeFloat64(r)};k.Builder.prototype.addFieldInt8=function(r,e,n){(this.force_defaults||e!=n)&&(this.addInt8(e),this.slot(r))};k.Builder.prototype.addFieldInt16=function(r,e,n){(this.force_defaults||e!=n)&&(this.addInt16(e),this.slot(r))};k.Builder.prototype.addFieldInt32=function(r,e,n){(this.force_defaults||e!=n)&&(this.addInt32(e),this.slot(r))};k.Builder.prototype.addFieldInt64=function(r,e,n){(this.force_defaults||!e.equals(n))&&(this.addInt64(e),this.slot(r))};k.Builder.prototype.addFieldFloat32=function(r,e,n){(this.force_defaults||e!=n)&&(this.addFloat32(e),this.slot(r))};k.Builder.prototype.addFieldFloat64=function(r,e,n){(this.force_defaults||e!=n)&&(this.addFloat64(e),this.slot(r))};k.Builder.prototype.addFieldOffset=function(r,e,n){(this.force_defaults||e!=n)&&(this.addOffset(e),this.slot(r))};k.Builder.prototype.addFieldStruct=function(r,e,n){e!=n&&(this.nested(e),this.slot(r))};k.Builder.prototype.nested=function(r){if(r!=this.offset())throw new Error("FlatBuffers: struct must be serialized inline.")};k.Builder.prototype.notNested=function(){if(this.isNested)throw new Error("FlatBuffers: object serialization must not be nested.")};k.Builder.prototype.slot=function(r){this.vtable[r]=this.offset()};k.Builder.prototype.offset=function(){return this.bb.capacity()-this.space};k.Builder.growByteBuffer=function(r){var e=r.capacity();if(e&3221225472)throw new Error("FlatBuffers: cannot grow buffer beyond 2 gigabytes.");var n=e<<1,t=k.ByteBuffer.allocate(n);return t.setPosition(n-e),t.bytes().set(r.bytes(),n-e),t};k.Builder.prototype.addOffset=function(r){this.prep(k.SIZEOF_INT,0),this.writeInt32(this.offset()-r+k.SIZEOF_INT)};k.Builder.prototype.startObject=function(r){this.notNested(),this.vtable==null&&(this.vtable=[]),this.vtable_in_use=r;for(var e=0;e<r;e++)this.vtable[e]=0;this.isNested=!0,this.object_start=this.offset()};k.Builder.prototype.endObject=function(){if(this.vtable==null||!this.isNested)throw new Error("FlatBuffers: endObject called without startObject");this.addInt32(0);for(var r=this.offset(),e=this.vtable_in_use-1;e>=0&&this.vtable[e]==0;e--);for(var n=e+1;e>=0;e--)this.addInt16(this.vtable[e]!=0?r-this.vtable[e]:0);var t=2;this.addInt16(r-this.object_start);var o=(n+t)*k.SIZEOF_SHORT;this.addInt16(o);var i=0,u=this.space;e:for(e=0;e<this.vtables.length;e++){var a=this.bb.capacity()-this.vtables[e];if(o==this.bb.readInt16(a)){for(var s=k.SIZEOF_SHORT;s<o;s+=k.SIZEOF_SHORT)if(this.bb.readInt16(u+s)!=this.bb.readInt16(a+s))continue e;i=this.vtables[e];break}}return i?(this.space=this.bb.capacity()-r,this.bb.writeInt32(this.space,i-r)):(this.vtables.push(this.offset()),this.bb.writeInt32(this.bb.capacity()-r,this.offset()-r)),this.isNested=!1,r};k.Builder.prototype.finish=function(r,e,n){var t=n?k.SIZE_PREFIX_LENGTH:0;if(e){var o=e;if(this.prep(this.minalign,k.SIZEOF_INT+k.FILE_IDENTIFIER_LENGTH+t),o.length!=k.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+k.FILE_IDENTIFIER_LENGTH);for(var i=k.FILE_IDENTIFIER_LENGTH-1;i>=0;i--)this.writeInt8(o.charCodeAt(i))}this.prep(this.minalign,k.SIZEOF_INT+t),this.addOffset(r),t&&this.addInt32(this.bb.capacity()-this.space),this.bb.setPosition(this.space)};k.Builder.prototype.finishSizePrefixed=function(r,e){this.finish(r,e,!0)};k.Builder.prototype.requiredField=function(r,e){var n=this.bb.capacity()-r,t=n-this.bb.readInt32(n),o=this.bb.readInt16(t+e)!=0;if(!o)throw new Error("FlatBuffers: field "+e+" must be set")};k.Builder.prototype.startVector=function(r,e,n){this.notNested(),this.vector_num_elems=e,this.prep(k.SIZEOF_INT,r*e),this.prep(n,r*e)};k.Builder.prototype.endVector=function(){return this.writeInt32(this.vector_num_elems),this.offset()};k.Builder.prototype.createString=function(r){if(r instanceof Uint8Array)var e=r;else for(var e=[],n=0;n<r.length;){var t,o=r.charCodeAt(n++);if(o<55296||o>=56320)t=o;else{var i=r.charCodeAt(n++);t=(o<<10)+i+(65536-56623104-56320)}t<128?e.push(t):(t<2048?e.push(t>>6&31|192):(t<65536?e.push(t>>12&15|224):e.push(t>>18&7|240,t>>12&63|128),e.push(t>>6&63|128)),e.push(t&63|128))}this.addInt8(0),this.startVector(1,e.length,1),this.bb.setPosition(this.space-=e.length);for(var n=0,u=this.space,a=this.bb.bytes();n<e.length;n++)a[u++]=e[n];return this.endVector()};k.Builder.prototype.createLong=function(r,e){return k.Long.create(r,e)};k.ByteBuffer=function(r){this.bytes_=r,this.position_=0};k.ByteBuffer.allocate=function(r){return new k.ByteBuffer(new Uint8Array(r))};k.ByteBuffer.prototype.clear=function(){this.position_=0};k.ByteBuffer.prototype.bytes=function(){return this.bytes_};k.ByteBuffer.prototype.position=function(){return this.position_};k.ByteBuffer.prototype.setPosition=function(r){this.position_=r};k.ByteBuffer.prototype.capacity=function(){return this.bytes_.length};k.ByteBuffer.prototype.readInt8=function(r){return this.readUint8(r)<<24>>24};k.ByteBuffer.prototype.readUint8=function(r){return this.bytes_[r]};k.ByteBuffer.prototype.readInt16=function(r){return this.readUint16(r)<<16>>16};k.ByteBuffer.prototype.readUint16=function(r){return this.bytes_[r]|this.bytes_[r+1]<<8};k.ByteBuffer.prototype.readInt32=function(r){return this.bytes_[r]|this.bytes_[r+1]<<8|this.bytes_[r+2]<<16|this.bytes_[r+3]<<24};k.ByteBuffer.prototype.readUint32=function(r){return this.readInt32(r)>>>0};k.ByteBuffer.prototype.readInt64=function(r){return new k.Long(this.readInt32(r),this.readInt32(r+4))};k.ByteBuffer.prototype.readUint64=function(r){return new k.Long(this.readUint32(r),this.readUint32(r+4))};k.ByteBuffer.prototype.readFloat32=function(r){return k.int32[0]=this.readInt32(r),k.float32[0]};k.ByteBuffer.prototype.readFloat64=function(r){return k.int32[k.isLittleEndian?0:1]=this.readInt32(r),k.int32[k.isLittleEndian?1:0]=this.readInt32(r+4),k.float64[0]};k.ByteBuffer.prototype.writeInt8=function(r,e){this.bytes_[r]=e};k.ByteBuffer.prototype.writeUint8=function(r,e){this.bytes_[r]=e};k.ByteBuffer.prototype.writeInt16=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8};k.ByteBuffer.prototype.writeUint16=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8};k.ByteBuffer.prototype.writeInt32=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8,this.bytes_[r+2]=e>>16,this.bytes_[r+3]=e>>24};k.ByteBuffer.prototype.writeUint32=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8,this.bytes_[r+2]=e>>16,this.bytes_[r+3]=e>>24};k.ByteBuffer.prototype.writeInt64=function(r,e){this.writeInt32(r,e.low),this.writeInt32(r+4,e.high)};k.ByteBuffer.prototype.writeUint64=function(r,e){this.writeUint32(r,e.low),this.writeUint32(r+4,e.high)};k.ByteBuffer.prototype.writeFloat32=function(r,e){k.float32[0]=e,this.writeInt32(r,k.int32[0])};k.ByteBuffer.prototype.writeFloat64=function(r,e){k.float64[0]=e,this.writeInt32(r,k.int32[k.isLittleEndian?0:1]),this.writeInt32(r+4,k.int32[k.isLittleEndian?1:0])};k.ByteBuffer.prototype.getBufferIdentifier=function(){if(this.bytes_.length<this.position_+k.SIZEOF_INT+k.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: ByteBuffer is too short to contain an identifier.");for(var r="",e=0;e<k.FILE_IDENTIFIER_LENGTH;e++)r+=String.fromCharCode(this.readInt8(this.position_+k.SIZEOF_INT+e));return r};k.ByteBuffer.prototype.__offset=function(r,e){var n=r-this.readInt32(r);return e<this.readInt16(n)?this.readInt16(n+e):0};k.ByteBuffer.prototype.__union=function(r,e){return r.bb_pos=e+this.readInt32(e),r.bb=this,r};k.ByteBuffer.prototype.__string=function(r,e){r+=this.readInt32(r);var n=this.readInt32(r),t="",o=0;if(r+=k.SIZEOF_INT,e===k.Encoding.UTF8_BYTES)return this.bytes_.subarray(r,r+n);for(;o<n;){var i,u=this.readUint8(r+o++);if(u<192)i=u;else{var a=this.readUint8(r+o++);if(u<224)i=(u&31)<<6|a&63;else{var s=this.readUint8(r+o++);if(u<240)i=(u&15)<<12|(a&63)<<6|s&63;else{var l=this.readUint8(r+o++);i=(u&7)<<18|(a&63)<<12|(s&63)<<6|l&63}}}i<65536?t+=String.fromCharCode(i):(i-=65536,t+=String.fromCharCode((i>>10)+55296,(i&1024-1)+56320))}return t};k.ByteBuffer.prototype.__indirect=function(r){return r+this.readInt32(r)};k.ByteBuffer.prototype.__vector=function(r){return r+this.readInt32(r)+k.SIZEOF_INT};k.ByteBuffer.prototype.__vector_len=function(r){return this.readInt32(r+this.readInt32(r))};k.ByteBuffer.prototype.__has_identifier=function(r){if(r.length!=k.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+k.FILE_IDENTIFIER_LENGTH);for(var e=0;e<k.FILE_IDENTIFIER_LENGTH;e++)if(r.charCodeAt(e)!=this.readInt8(this.position_+k.SIZEOF_INT+e))return!1;return!0};k.ByteBuffer.prototype.createLong=function(r,e){return k.Long.create(r,e)}});var oe,Qn=B(()=>{"use strict";ti();(e=>{let r;(t=>{let n;(i=>{let o;(O=>(O[O.UNDEFINED=0]="UNDEFINED",O[O.FLOAT=1]="FLOAT",O[O.INT=2]="INT",O[O.STRING=3]="STRING",O[O.TENSOR=4]="TENSOR",O[O.GRAPH=5]="GRAPH",O[O.FLOATS=6]="FLOATS",O[O.INTS=7]="INTS",O[O.STRINGS=8]="STRINGS",O[O.TENSORS=9]="TENSORS",O[O.GRAPHS=10]="GRAPHS",O[O.SPARSE_TENSOR=11]="SPARSE_TENSOR",O[O.SPARSE_TENSORS=12]="SPARSE_TENSORS"))(o=i.AttributeType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(oe||={});(e=>{let r;(t=>{let n;(i=>{let o;(l=>(l[l.UNKNOWN=0]="UNKNOWN",l[l.VALUE=1]="VALUE",l[l.PARAM=2]="PARAM"))(o=i.DimensionValueType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(oe||={});(e=>{let r;(t=>{let n;(i=>{let o;(P=>(P[P.UNDEFINED=0]="UNDEFINED",P[P.FLOAT=1]="FLOAT",P[P.UINT8=2]="UINT8",P[P.INT8=3]="INT8",P[P.UINT16=4]="UINT16",P[P.INT16=5]="INT16",P[P.INT32=6]="INT32",P[P.INT64=7]="INT64",P[P.STRING=8]="STRING",P[P.BOOL=9]="BOOL",P[P.FLOAT16=10]="FLOAT16",P[P.DOUBLE=11]="DOUBLE",P[P.UINT32=12]="UINT32",P[P.UINT64=13]="UINT64",P[P.COMPLEX64=14]="COMPLEX64",P[P.COMPLEX128=15]="COMPLEX128",P[P.BFLOAT16=16]="BFLOAT16",P[P.FLOAT8E4M3FN=17]="FLOAT8E4M3FN",P[P.FLOAT8E4M3FNUZ=18]="FLOAT8E4M3FNUZ",P[P.FLOAT8E5M2=19]="FLOAT8E5M2",P[P.FLOAT8E5M2FNUZ=20]="FLOAT8E5M2FNUZ"))(o=i.TensorDataType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(oe||={});(e=>{let r;(t=>{let n;(i=>{let o;(s=>(s[s.Primitive=0]="Primitive",s[s.Fused=1]="Fused"))(o=i.NodeType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(oe||={});(e=>{let r;(t=>{let n;(i=>{let o;(d=>(d[d.NONE=0]="NONE",d[d.tensor_type=1]="tensor_type",d[d.sequence_type=2]="sequence_type",d[d.map_type=3]="map_type"))(o=i.TypeInfoValue||={})})(n=t.fbs||={})})(r=e.experimental||={})})(oe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsShape(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsShape(a,s){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}dim(a,s){let l=this.bb.__offset(this.bb_pos,4);return l?(s||new e.experimental.fbs.Dimension).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}dimLength(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.__vector_len(this.bb_pos+a):0}static startShape(a){a.startObject(1)}static addDim(a,s){a.addFieldOffset(0,s,0)}static createDimVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startDimVector(a,s){a.startVector(4,s,4)}static endShape(a){return a.endObject()}static createShape(a,s){return o.startShape(a),o.addDim(a,s),o.endShape(a)}}i.Shape=o})(n=t.fbs||={})})(r=e.experimental||={})})(oe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsDimension(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsDimension(a,s){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}value(a){let s=this.bb.__offset(this.bb_pos,4);return s?(a||new e.experimental.fbs.DimensionValue).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}denotation(a){let s=this.bb.__offset(this.bb_pos,6);return s?this.bb.__string(this.bb_pos+s,a):null}static startDimension(a){a.startObject(2)}static addValue(a,s){a.addFieldOffset(0,s,0)}static addDenotation(a,s){a.addFieldOffset(1,s,0)}static endDimension(a){return a.endObject()}static createDimension(a,s,l){return o.startDimension(a),o.addValue(a,s),o.addDenotation(a,l),o.endDimension(a)}}i.Dimension=o})(n=t.fbs||={})})(r=e.experimental||={})})(oe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsDimensionValue(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsDimensionValue(a,s){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}dimType(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt8(this.bb_pos+a):0}dimValue(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}dimParam(a){let s=this.bb.__offset(this.bb_pos,8);return s?this.bb.__string(this.bb_pos+s,a):null}static startDimensionValue(a){a.startObject(3)}static addDimType(a,s){a.addFieldInt8(0,s,0)}static addDimValue(a,s){a.addFieldInt64(1,s,a.createLong(0,0))}static addDimParam(a,s){a.addFieldOffset(2,s,0)}static endDimensionValue(a){return a.endObject()}static createDimensionValue(a,s,l,d){return o.startDimensionValue(a),o.addDimType(a,s),o.addDimValue(a,l),o.addDimParam(a,d),o.endDimensionValue(a)}}i.DimensionValue=o})(n=t.fbs||={})})(r=e.experimental||={})})(oe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsTensorTypeAndShape(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsTensorTypeAndShape(a,s){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}elemType(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt32(this.bb_pos+a):0}shape(a){let s=this.bb.__offset(this.bb_pos,6);return s?(a||new e.experimental.fbs.Shape).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}static startTensorTypeAndShape(a){a.startObject(2)}static addElemType(a,s){a.addFieldInt32(0,s,0)}static addShape(a,s){a.addFieldOffset(1,s,0)}static endTensorTypeAndShape(a){return a.endObject()}static createTensorTypeAndShape(a,s,l){return o.startTensorTypeAndShape(a),o.addElemType(a,s),o.addShape(a,l),o.endTensorTypeAndShape(a)}}i.TensorTypeAndShape=o})(n=t.fbs||={})})(r=e.experimental||={})})(oe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsMapType(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsMapType(a,s){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}keyType(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt32(this.bb_pos+a):0}valueType(a){let s=this.bb.__offset(this.bb_pos,6);return s?(a||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}static startMapType(a){a.startObject(2)}static addKeyType(a,s){a.addFieldInt32(0,s,0)}static addValueType(a,s){a.addFieldOffset(1,s,0)}static endMapType(a){return a.endObject()}static createMapType(a,s,l){return o.startMapType(a),o.addKeyType(a,s),o.addValueType(a,l),o.endMapType(a)}}i.MapType=o})(n=t.fbs||={})})(r=e.experimental||={})})(oe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsSequenceType(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSequenceType(a,s){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}elemType(a){let s=this.bb.__offset(this.bb_pos,4);return s?(a||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}static startSequenceType(a){a.startObject(1)}static addElemType(a,s){a.addFieldOffset(0,s,0)}static endSequenceType(a){return a.endObject()}static createSequenceType(a,s){return o.startSequenceType(a),o.addElemType(a,s),o.endSequenceType(a)}}i.SequenceType=o})(n=t.fbs||={})})(r=e.experimental||={})})(oe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}nodeIndex(){return this.bb.readUint32(this.bb_pos)}srcArgIndex(){return this.bb.readInt32(this.bb_pos+4)}dstArgIndex(){return this.bb.readInt32(this.bb_pos+8)}static createEdgeEnd(a,s,l,d){return a.prep(4,12),a.writeInt32(d),a.writeInt32(l),a.writeInt32(s),a.offset()}}i.EdgeEnd=o})(n=t.fbs||={})})(r=e.experimental||={})})(oe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsNodeEdge(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsNodeEdge(a,s){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}nodeIndex(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readUint32(this.bb_pos+a):0}inputEdges(a,s){let l=this.bb.__offset(this.bb_pos,6);return l?(s||new e.experimental.fbs.EdgeEnd).__init(this.bb.__vector(this.bb_pos+l)+a*12,this.bb):null}inputEdgesLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}outputEdges(a,s){let l=this.bb.__offset(this.bb_pos,8);return l?(s||new e.experimental.fbs.EdgeEnd).__init(this.bb.__vector(this.bb_pos+l)+a*12,this.bb):null}outputEdgesLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}static startNodeEdge(a){a.startObject(3)}static addNodeIndex(a,s){a.addFieldInt32(0,s,0)}static addInputEdges(a,s){a.addFieldOffset(1,s,0)}static startInputEdgesVector(a,s){a.startVector(12,s,4)}static addOutputEdges(a,s){a.addFieldOffset(2,s,0)}static startOutputEdgesVector(a,s){a.startVector(12,s,4)}static endNodeEdge(a){return a.endObject()}static createNodeEdge(a,s,l,d){return o.startNodeEdge(a),o.addNodeIndex(a,s),o.addInputEdges(a,l),o.addOutputEdges(a,d),o.endNodeEdge(a)}}i.NodeEdge=o})(n=t.fbs||={})})(r=e.experimental||={})})(oe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsNode(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsNode(a,s){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb_pos+s,a):null}docString(a){let s=this.bb.__offset(this.bb_pos,6);return s?this.bb.__string(this.bb_pos+s,a):null}domain(a){let s=this.bb.__offset(this.bb_pos,8);return s?this.bb.__string(this.bb_pos+s,a):null}sinceVersion(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readInt32(this.bb_pos+a):0}index(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.readUint32(this.bb_pos+a):0}opType(a){let s=this.bb.__offset(this.bb_pos,14);return s?this.bb.__string(this.bb_pos+s,a):null}type(){let a=this.bb.__offset(this.bb_pos,16);return a?this.bb.readInt32(this.bb_pos+a):0}executionProviderType(a){let s=this.bb.__offset(this.bb_pos,18);return s?this.bb.__string(this.bb_pos+s,a):null}inputs(a,s){let l=this.bb.__offset(this.bb_pos,20);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,s):null}inputsLength(){let a=this.bb.__offset(this.bb_pos,20);return a?this.bb.__vector_len(this.bb_pos+a):0}outputs(a,s){let l=this.bb.__offset(this.bb_pos,22);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,s):null}outputsLength(){let a=this.bb.__offset(this.bb_pos,22);return a?this.bb.__vector_len(this.bb_pos+a):0}attributes(a,s){let l=this.bb.__offset(this.bb_pos,24);return l?(s||new e.experimental.fbs.Attribute).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}attributesLength(){let a=this.bb.__offset(this.bb_pos,24);return a?this.bb.__vector_len(this.bb_pos+a):0}inputArgCounts(a){let s=this.bb.__offset(this.bb_pos,26);return s?this.bb.readInt32(this.bb.__vector(this.bb_pos+s)+a*4):0}inputArgCountsLength(){let a=this.bb.__offset(this.bb_pos,26);return a?this.bb.__vector_len(this.bb_pos+a):0}inputArgCountsArray(){let a=this.bb.__offset(this.bb_pos,26);return a?new Int32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}implicitInputs(a,s){let l=this.bb.__offset(this.bb_pos,28);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,s):null}implicitInputsLength(){let a=this.bb.__offset(this.bb_pos,28);return a?this.bb.__vector_len(this.bb_pos+a):0}static startNode(a){a.startObject(13)}static addName(a,s){a.addFieldOffset(0,s,0)}static addDocString(a,s){a.addFieldOffset(1,s,0)}static addDomain(a,s){a.addFieldOffset(2,s,0)}static addSinceVersion(a,s){a.addFieldInt32(3,s,0)}static addIndex(a,s){a.addFieldInt32(4,s,0)}static addOpType(a,s){a.addFieldOffset(5,s,0)}static addType(a,s){a.addFieldInt32(6,s,0)}static addExecutionProviderType(a,s){a.addFieldOffset(7,s,0)}static addInputs(a,s){a.addFieldOffset(8,s,0)}static createInputsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startInputsVector(a,s){a.startVector(4,s,4)}static addOutputs(a,s){a.addFieldOffset(9,s,0)}static createOutputsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startOutputsVector(a,s){a.startVector(4,s,4)}static addAttributes(a,s){a.addFieldOffset(10,s,0)}static createAttributesVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startAttributesVector(a,s){a.startVector(4,s,4)}static addInputArgCounts(a,s){a.addFieldOffset(11,s,0)}static createInputArgCountsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addInt32(s[l]);return a.endVector()}static startInputArgCountsVector(a,s){a.startVector(4,s,4)}static addImplicitInputs(a,s){a.addFieldOffset(12,s,0)}static createImplicitInputsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startImplicitInputsVector(a,s){a.startVector(4,s,4)}static endNode(a){return a.endObject()}static createNode(a,s,l,d,p,f,g,b,y,$,x,I,O,C){return o.startNode(a),o.addName(a,s),o.addDocString(a,l),o.addDomain(a,d),o.addSinceVersion(a,p),o.addIndex(a,f),o.addOpType(a,g),o.addType(a,b),o.addExecutionProviderType(a,y),o.addInputs(a,$),o.addOutputs(a,x),o.addAttributes(a,I),o.addInputArgCounts(a,O),o.addImplicitInputs(a,C),o.endNode(a)}}i.Node=o})(n=t.fbs||={})})(r=e.experimental||={})})(oe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsValueInfo(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsValueInfo(a,s){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb_pos+s,a):null}docString(a){let s=this.bb.__offset(this.bb_pos,6);return s?this.bb.__string(this.bb_pos+s,a):null}type(a){let s=this.bb.__offset(this.bb_pos,8);return s?(a||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}static startValueInfo(a){a.startObject(3)}static addName(a,s){a.addFieldOffset(0,s,0)}static addDocString(a,s){a.addFieldOffset(1,s,0)}static addType(a,s){a.addFieldOffset(2,s,0)}static endValueInfo(a){return a.endObject()}static createValueInfo(a,s,l,d){return o.startValueInfo(a),o.addName(a,s),o.addDocString(a,l),o.addType(a,d),o.endValueInfo(a)}}i.ValueInfo=o})(n=t.fbs||={})})(r=e.experimental||={})})(oe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsTypeInfo(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsTypeInfo(a,s){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}denotation(a){let s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb_pos+s,a):null}valueType(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.readUint8(this.bb_pos+a):0}value(a){let s=this.bb.__offset(this.bb_pos,8);return s?this.bb.__union(a,this.bb_pos+s):null}static startTypeInfo(a){a.startObject(3)}static addDenotation(a,s){a.addFieldOffset(0,s,0)}static addValueType(a,s){a.addFieldInt8(1,s,0)}static addValue(a,s){a.addFieldOffset(2,s,0)}static endTypeInfo(a){return a.endObject()}static createTypeInfo(a,s,l,d){return o.startTypeInfo(a),o.addDenotation(a,s),o.addValueType(a,l),o.addValue(a,d),o.endTypeInfo(a)}}i.TypeInfo=o})(n=t.fbs||={})})(r=e.experimental||={})})(oe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsOperatorSetId(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsOperatorSetId(a,s){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}domain(a){let s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb_pos+s,a):null}version(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}static startOperatorSetId(a){a.startObject(2)}static addDomain(a,s){a.addFieldOffset(0,s,0)}static addVersion(a,s){a.addFieldInt64(1,s,a.createLong(0,0))}static endOperatorSetId(a){return a.endObject()}static createOperatorSetId(a,s,l){return o.startOperatorSetId(a),o.addDomain(a,s),o.addVersion(a,l),o.endOperatorSetId(a)}}i.OperatorSetId=o})(n=t.fbs||={})})(r=e.experimental||={})})(oe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsTensor(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsTensor(a,s){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb_pos+s,a):null}docString(a){let s=this.bb.__offset(this.bb_pos,6);return s?this.bb.__string(this.bb_pos+s,a):null}dims(a){let s=this.bb.__offset(this.bb_pos,8);return s?this.bb.readInt64(this.bb.__vector(this.bb_pos+s)+a*8):this.bb.createLong(0,0)}dimsLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}dataType(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readInt32(this.bb_pos+a):0}rawData(a){let s=this.bb.__offset(this.bb_pos,12);return s?this.bb.readUint8(this.bb.__vector(this.bb_pos+s)+a):0}rawDataLength(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.__vector_len(this.bb_pos+a):0}rawDataArray(){let a=this.bb.__offset(this.bb_pos,12);return a?new Uint8Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}stringData(a,s){let l=this.bb.__offset(this.bb_pos,14);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,s):null}stringDataLength(){let a=this.bb.__offset(this.bb_pos,14);return a?this.bb.__vector_len(this.bb_pos+a):0}static startTensor(a){a.startObject(6)}static addName(a,s){a.addFieldOffset(0,s,0)}static addDocString(a,s){a.addFieldOffset(1,s,0)}static addDims(a,s){a.addFieldOffset(2,s,0)}static createDimsVector(a,s){a.startVector(8,s.length,8);for(let l=s.length-1;l>=0;l--)a.addInt64(s[l]);return a.endVector()}static startDimsVector(a,s){a.startVector(8,s,8)}static addDataType(a,s){a.addFieldInt32(3,s,0)}static addRawData(a,s){a.addFieldOffset(4,s,0)}static createRawDataVector(a,s){a.startVector(1,s.length,1);for(let l=s.length-1;l>=0;l--)a.addInt8(s[l]);return a.endVector()}static startRawDataVector(a,s){a.startVector(1,s,1)}static addStringData(a,s){a.addFieldOffset(5,s,0)}static createStringDataVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startStringDataVector(a,s){a.startVector(4,s,4)}static endTensor(a){return a.endObject()}static createTensor(a,s,l,d,p,f,g){return o.startTensor(a),o.addName(a,s),o.addDocString(a,l),o.addDims(a,d),o.addDataType(a,p),o.addRawData(a,f),o.addStringData(a,g),o.endTensor(a)}}i.Tensor=o})(n=t.fbs||={})})(r=e.experimental||={})})(oe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsSparseTensor(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSparseTensor(a,s){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}values(a){let s=this.bb.__offset(this.bb_pos,4);return s?(a||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}indices(a){let s=this.bb.__offset(this.bb_pos,6);return s?(a||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}dims(a){let s=this.bb.__offset(this.bb_pos,8);return s?this.bb.readInt64(this.bb.__vector(this.bb_pos+s)+a*8):this.bb.createLong(0,0)}dimsLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}static startSparseTensor(a){a.startObject(3)}static addValues(a,s){a.addFieldOffset(0,s,0)}static addIndices(a,s){a.addFieldOffset(1,s,0)}static addDims(a,s){a.addFieldOffset(2,s,0)}static createDimsVector(a,s){a.startVector(8,s.length,8);for(let l=s.length-1;l>=0;l--)a.addInt64(s[l]);return a.endVector()}static startDimsVector(a,s){a.startVector(8,s,8)}static endSparseTensor(a){return a.endObject()}static createSparseTensor(a,s,l,d){return o.startSparseTensor(a),o.addValues(a,s),o.addIndices(a,l),o.addDims(a,d),o.endSparseTensor(a)}}i.SparseTensor=o})(n=t.fbs||={})})(r=e.experimental||={})})(oe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsAttribute(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsAttribute(a,s){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb_pos+s,a):null}docString(a){let s=this.bb.__offset(this.bb_pos,6);return s?this.bb.__string(this.bb_pos+s,a):null}type(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.readInt32(this.bb_pos+a):0}f(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readFloat32(this.bb_pos+a):0}i(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}s(a){let s=this.bb.__offset(this.bb_pos,14);return s?this.bb.__string(this.bb_pos+s,a):null}t(a){let s=this.bb.__offset(this.bb_pos,16);return s?(a||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}g(a){let s=this.bb.__offset(this.bb_pos,18);return s?(a||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}floats(a){let s=this.bb.__offset(this.bb_pos,20);return s?this.bb.readFloat32(this.bb.__vector(this.bb_pos+s)+a*4):0}floatsLength(){let a=this.bb.__offset(this.bb_pos,20);return a?this.bb.__vector_len(this.bb_pos+a):0}floatsArray(){let a=this.bb.__offset(this.bb_pos,20);return a?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}ints(a){let s=this.bb.__offset(this.bb_pos,22);return s?this.bb.readInt64(this.bb.__vector(this.bb_pos+s)+a*8):this.bb.createLong(0,0)}intsLength(){let a=this.bb.__offset(this.bb_pos,22);return a?this.bb.__vector_len(this.bb_pos+a):0}strings(a,s){let l=this.bb.__offset(this.bb_pos,24);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,s):null}stringsLength(){let a=this.bb.__offset(this.bb_pos,24);return a?this.bb.__vector_len(this.bb_pos+a):0}tensors(a,s){let l=this.bb.__offset(this.bb_pos,26);return l?(s||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}tensorsLength(){let a=this.bb.__offset(this.bb_pos,26);return a?this.bb.__vector_len(this.bb_pos+a):0}graphs(a,s){let l=this.bb.__offset(this.bb_pos,28);return l?(s||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}graphsLength(){let a=this.bb.__offset(this.bb_pos,28);return a?this.bb.__vector_len(this.bb_pos+a):0}static startAttribute(a){a.startObject(13)}static addName(a,s){a.addFieldOffset(0,s,0)}static addDocString(a,s){a.addFieldOffset(1,s,0)}static addType(a,s){a.addFieldInt32(2,s,0)}static addF(a,s){a.addFieldFloat32(3,s,0)}static addI(a,s){a.addFieldInt64(4,s,a.createLong(0,0))}static addS(a,s){a.addFieldOffset(5,s,0)}static addT(a,s){a.addFieldOffset(6,s,0)}static addG(a,s){a.addFieldOffset(7,s,0)}static addFloats(a,s){a.addFieldOffset(8,s,0)}static createFloatsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addFloat32(s[l]);return a.endVector()}static startFloatsVector(a,s){a.startVector(4,s,4)}static addInts(a,s){a.addFieldOffset(9,s,0)}static createIntsVector(a,s){a.startVector(8,s.length,8);for(let l=s.length-1;l>=0;l--)a.addInt64(s[l]);return a.endVector()}static startIntsVector(a,s){a.startVector(8,s,8)}static addStrings(a,s){a.addFieldOffset(10,s,0)}static createStringsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startStringsVector(a,s){a.startVector(4,s,4)}static addTensors(a,s){a.addFieldOffset(11,s,0)}static createTensorsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startTensorsVector(a,s){a.startVector(4,s,4)}static addGraphs(a,s){a.addFieldOffset(12,s,0)}static createGraphsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startGraphsVector(a,s){a.startVector(4,s,4)}static endAttribute(a){return a.endObject()}static createAttribute(a,s,l,d,p,f,g,b,y,$,x,I,O,C){return o.startAttribute(a),o.addName(a,s),o.addDocString(a,l),o.addType(a,d),o.addF(a,p),o.addI(a,f),o.addS(a,g),o.addT(a,b),o.addG(a,y),o.addFloats(a,$),o.addInts(a,x),o.addStrings(a,I),o.addTensors(a,O),o.addGraphs(a,C),o.endAttribute(a)}}i.Attribute=o})(n=t.fbs||={})})(r=e.experimental||={})})(oe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsGraph(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsGraph(a,s){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}initializers(a,s){let l=this.bb.__offset(this.bb_pos,4);return l?(s||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}initializersLength(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.__vector_len(this.bb_pos+a):0}nodeArgs(a,s){let l=this.bb.__offset(this.bb_pos,6);return l?(s||new e.experimental.fbs.ValueInfo).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}nodeArgsLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}nodes(a,s){let l=this.bb.__offset(this.bb_pos,8);return l?(s||new e.experimental.fbs.Node).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}nodesLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}maxNodeIndex(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readUint32(this.bb_pos+a):0}nodeEdges(a,s){let l=this.bb.__offset(this.bb_pos,12);return l?(s||new e.experimental.fbs.NodeEdge).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}nodeEdgesLength(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.__vector_len(this.bb_pos+a):0}inputs(a,s){let l=this.bb.__offset(this.bb_pos,14);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,s):null}inputsLength(){let a=this.bb.__offset(this.bb_pos,14);return a?this.bb.__vector_len(this.bb_pos+a):0}outputs(a,s){let l=this.bb.__offset(this.bb_pos,16);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,s):null}outputsLength(){let a=this.bb.__offset(this.bb_pos,16);return a?this.bb.__vector_len(this.bb_pos+a):0}sparseInitializers(a,s){let l=this.bb.__offset(this.bb_pos,18);return l?(s||new e.experimental.fbs.SparseTensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}sparseInitializersLength(){let a=this.bb.__offset(this.bb_pos,18);return a?this.bb.__vector_len(this.bb_pos+a):0}static startGraph(a){a.startObject(8)}static addInitializers(a,s){a.addFieldOffset(0,s,0)}static createInitializersVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startInitializersVector(a,s){a.startVector(4,s,4)}static addNodeArgs(a,s){a.addFieldOffset(1,s,0)}static createNodeArgsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startNodeArgsVector(a,s){a.startVector(4,s,4)}static addNodes(a,s){a.addFieldOffset(2,s,0)}static createNodesVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startNodesVector(a,s){a.startVector(4,s,4)}static addMaxNodeIndex(a,s){a.addFieldInt32(3,s,0)}static addNodeEdges(a,s){a.addFieldOffset(4,s,0)}static createNodeEdgesVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startNodeEdgesVector(a,s){a.startVector(4,s,4)}static addInputs(a,s){a.addFieldOffset(5,s,0)}static createInputsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startInputsVector(a,s){a.startVector(4,s,4)}static addOutputs(a,s){a.addFieldOffset(6,s,0)}static createOutputsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startOutputsVector(a,s){a.startVector(4,s,4)}static addSparseInitializers(a,s){a.addFieldOffset(7,s,0)}static createSparseInitializersVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startSparseInitializersVector(a,s){a.startVector(4,s,4)}static endGraph(a){return a.endObject()}static createGraph(a,s,l,d,p,f,g,b,y){return o.startGraph(a),o.addInitializers(a,s),o.addNodeArgs(a,l),o.addNodes(a,d),o.addMaxNodeIndex(a,p),o.addNodeEdges(a,f),o.addInputs(a,g),o.addOutputs(a,b),o.addSparseInitializers(a,y),o.endGraph(a)}}i.Graph=o})(n=t.fbs||={})})(r=e.experimental||={})})(oe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsModel(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsModel(a,s){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}irVersion(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}opsetImport(a,s){let l=this.bb.__offset(this.bb_pos,6);return l?(s||new e.experimental.fbs.OperatorSetId).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}opsetImportLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}producerName(a){let s=this.bb.__offset(this.bb_pos,8);return s?this.bb.__string(this.bb_pos+s,a):null}producerVersion(a){let s=this.bb.__offset(this.bb_pos,10);return s?this.bb.__string(this.bb_pos+s,a):null}domain(a){let s=this.bb.__offset(this.bb_pos,12);return s?this.bb.__string(this.bb_pos+s,a):null}modelVersion(){let a=this.bb.__offset(this.bb_pos,14);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}docString(a){let s=this.bb.__offset(this.bb_pos,16);return s?this.bb.__string(this.bb_pos+s,a):null}graph(a){let s=this.bb.__offset(this.bb_pos,18);return s?(a||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}graphDocString(a){let s=this.bb.__offset(this.bb_pos,20);return s?this.bb.__string(this.bb_pos+s,a):null}static startModel(a){a.startObject(9)}static addIrVersion(a,s){a.addFieldInt64(0,s,a.createLong(0,0))}static addOpsetImport(a,s){a.addFieldOffset(1,s,0)}static createOpsetImportVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startOpsetImportVector(a,s){a.startVector(4,s,4)}static addProducerName(a,s){a.addFieldOffset(2,s,0)}static addProducerVersion(a,s){a.addFieldOffset(3,s,0)}static addDomain(a,s){a.addFieldOffset(4,s,0)}static addModelVersion(a,s){a.addFieldInt64(5,s,a.createLong(0,0))}static addDocString(a,s){a.addFieldOffset(6,s,0)}static addGraph(a,s){a.addFieldOffset(7,s,0)}static addGraphDocString(a,s){a.addFieldOffset(8,s,0)}static endModel(a){return a.endObject()}static createModel(a,s,l,d,p,f,g,b,y,$){return o.startModel(a),o.addIrVersion(a,s),o.addOpsetImport(a,l),o.addProducerName(a,d),o.addProducerVersion(a,p),o.addDomain(a,f),o.addModelVersion(a,g),o.addDocString(a,b),o.addGraph(a,y),o.addGraphDocString(a,$),o.endModel(a)}}i.Model=o})(n=t.fbs||={})})(r=e.experimental||={})})(oe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsKernelCreateInfos(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsKernelCreateInfos(a,s){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}nodeIndices(a){let s=this.bb.__offset(this.bb_pos,4);return s?this.bb.readUint32(this.bb.__vector(this.bb_pos+s)+a*4):0}nodeIndicesLength(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.__vector_len(this.bb_pos+a):0}nodeIndicesArray(){let a=this.bb.__offset(this.bb_pos,4);return a?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}kernelDefHashes(a){let s=this.bb.__offset(this.bb_pos,6);return s?this.bb.readUint64(this.bb.__vector(this.bb_pos+s)+a*8):this.bb.createLong(0,0)}kernelDefHashesLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}static startKernelCreateInfos(a){a.startObject(2)}static addNodeIndices(a,s){a.addFieldOffset(0,s,0)}static createNodeIndicesVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addInt32(s[l]);return a.endVector()}static startNodeIndicesVector(a,s){a.startVector(4,s,4)}static addKernelDefHashes(a,s){a.addFieldOffset(1,s,0)}static createKernelDefHashesVector(a,s){a.startVector(8,s.length,8);for(let l=s.length-1;l>=0;l--)a.addInt64(s[l]);return a.endVector()}static startKernelDefHashesVector(a,s){a.startVector(8,s,8)}static endKernelCreateInfos(a){return a.endObject()}static createKernelCreateInfos(a,s,l){return o.startKernelCreateInfos(a),o.addNodeIndices(a,s),o.addKernelDefHashes(a,l),o.endKernelCreateInfos(a)}}i.KernelCreateInfos=o})(n=t.fbs||={})})(r=e.experimental||={})})(oe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsSubGraphSessionState(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSubGraphSessionState(a,s){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}graphId(a){let s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb_pos+s,a):null}sessionState(a){let s=this.bb.__offset(this.bb_pos,6);return s?(a||new e.experimental.fbs.SessionState).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}static startSubGraphSessionState(a){a.startObject(2)}static addGraphId(a,s){a.addFieldOffset(0,s,0)}static addSessionState(a,s){a.addFieldOffset(1,s,0)}static endSubGraphSessionState(a){let s=a.endObject();return a.requiredField(s,4),s}static createSubGraphSessionState(a,s,l){return o.startSubGraphSessionState(a),o.addGraphId(a,s),o.addSessionState(a,l),o.endSubGraphSessionState(a)}}i.SubGraphSessionState=o})(n=t.fbs||={})})(r=e.experimental||={})})(oe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsSessionState(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSessionState(a,s){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}kernels(a){let s=this.bb.__offset(this.bb_pos,4);return s?(a||new e.experimental.fbs.KernelCreateInfos).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}subGraphSessionStates(a,s){let l=this.bb.__offset(this.bb_pos,6);return l?(s||new e.experimental.fbs.SubGraphSessionState).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}subGraphSessionStatesLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}static startSessionState(a){a.startObject(2)}static addKernels(a,s){a.addFieldOffset(0,s,0)}static addSubGraphSessionStates(a,s){a.addFieldOffset(1,s,0)}static createSubGraphSessionStatesVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startSubGraphSessionStatesVector(a,s){a.startVector(4,s,4)}static endSessionState(a){return a.endObject()}static createSessionState(a,s,l){return o.startSessionState(a),o.addKernels(a,s),o.addSubGraphSessionStates(a,l),o.endSessionState(a)}}i.SessionState=o})(n=t.fbs||={})})(r=e.experimental||={})})(oe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsInferenceSession(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsInferenceSession(a,s){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static bufferHasIdentifier(a){return a.__has_identifier("ORTM")}ortVersion(a){let s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb_pos+s,a):null}model(a){let s=this.bb.__offset(this.bb_pos,6);return s?(a||new e.experimental.fbs.Model).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}sessionState(a){let s=this.bb.__offset(this.bb_pos,8);return s?(a||new e.experimental.fbs.SessionState).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}static startInferenceSession(a){a.startObject(3)}static addOrtVersion(a,s){a.addFieldOffset(0,s,0)}static addModel(a,s){a.addFieldOffset(1,s,0)}static addSessionState(a,s){a.addFieldOffset(2,s,0)}static endInferenceSession(a){return a.endObject()}static finishInferenceSessionBuffer(a,s){a.finish(s,"ORTM")}static finishSizePrefixedInferenceSessionBuffer(a,s){a.finish(s,"ORTM",!0)}static createInferenceSession(a,s,l,d){return o.startInferenceSession(a),o.addOrtVersion(a,s),o.addModel(a,l),o.addSessionState(a,d),o.endInferenceSession(a)}}i.InferenceSession=o})(n=t.fbs||={})})(r=e.experimental||={})})(oe||={})});var El=Ye((c$,Ol)=>{"use strict";Ol.exports=r0;function r0(r,e){for(var n=new Array(arguments.length-1),t=0,o=2,i=!0;o<arguments.length;)n[t++]=arguments[o++];return new Promise(function(a,s){n[t]=function(d){if(i)if(i=!1,d)s(d);else{for(var p=new Array(arguments.length-1),f=0;f<p.length;)p[f++]=arguments[f];a.apply(null,p)}};try{r.apply(e||null,n)}catch(l){i&&(i=!1,s(l))}})}});var Dl=Ye(kl=>{"use strict";var ri=kl;ri.length=function(e){var n=e.length;if(!n)return 0;for(var t=0;--n%4>1&&e.charAt(n)==="=";)++t;return Math.ceil(e.length*3)/4-t};var Tn=new Array(64),Pl=new Array(123);for(Zt=0;Zt<64;)Pl[Tn[Zt]=Zt<26?Zt+65:Zt<52?Zt+71:Zt<62?Zt-4:Zt-59|43]=Zt++;var Zt;ri.encode=function(e,n,t){for(var o=null,i=[],u=0,a=0,s;n<t;){var l=e[n++];switch(a){case 0:i[u++]=Tn[l>>2],s=(l&3)<<4,a=1;break;case 1:i[u++]=Tn[s|l>>4],s=(l&15)<<2,a=2;break;case 2:i[u++]=Tn[s|l>>6],i[u++]=Tn[l&63],a=0;break}u>8191&&((o||(o=[])).push(String.fromCharCode.apply(String,i)),u=0)}return a&&(i[u++]=Tn[s],i[u++]=61,a===1&&(i[u++]=61)),o?(u&&o.push(String.fromCharCode.apply(String,i.slice(0,u))),o.join("")):String.fromCharCode.apply(String,i.slice(0,u))};var Cl="invalid encoding";ri.decode=function(e,n,t){for(var o=t,i=0,u,a=0;a<e.length;){var s=e.charCodeAt(a++);if(s===61&&i>1)break;if((s=Pl[s])===void 0)throw Error(Cl);switch(i){case 0:u=s,i=1;break;case 1:n[t++]=u<<2|(s&48)>>4,u=s,i=2;break;case 2:n[t++]=(u&15)<<4|(s&60)>>2,u=s,i=3;break;case 3:n[t++]=(u&3)<<6|s,i=0;break}}if(i===1)throw Error(Cl);return t-o};ri.test=function(e){return/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e)}});var Rl=Ye((p$,Bl)=>{"use strict";Bl.exports=ni;function ni(){this._listeners={}}ni.prototype.on=function(e,n,t){return(this._listeners[e]||(this._listeners[e]=[])).push({fn:n,ctx:t||this}),this};ni.prototype.off=function(e,n){if(e===void 0)this._listeners={};else if(n===void 0)this._listeners[e]=[];else for(var t=this._listeners[e],o=0;o<t.length;)t[o].fn===n?t.splice(o,1):++o;return this};ni.prototype.emit=function(e){var n=this._listeners[e];if(n){for(var t=[],o=1;o<arguments.length;)t.push(arguments[o++]);for(o=0;o<n.length;)n[o].fn.apply(n[o++].ctx,t)}return this}});var Gl=Ye((h$,Vl)=>{"use strict";Vl.exports=Ml(Ml);function Ml(r){return typeof Float32Array<"u"?function(){var e=new Float32Array([-0]),n=new Uint8Array(e.buffer),t=n[3]===128;function o(s,l,d){e[0]=s,l[d]=n[0],l[d+1]=n[1],l[d+2]=n[2],l[d+3]=n[3]}function i(s,l,d){e[0]=s,l[d]=n[3],l[d+1]=n[2],l[d+2]=n[1],l[d+3]=n[0]}r.writeFloatLE=t?o:i,r.writeFloatBE=t?i:o;function u(s,l){return n[0]=s[l],n[1]=s[l+1],n[2]=s[l+2],n[3]=s[l+3],e[0]}function a(s,l){return n[3]=s[l],n[2]=s[l+1],n[1]=s[l+2],n[0]=s[l+3],e[0]}r.readFloatLE=t?u:a,r.readFloatBE=t?a:u}():function(){function e(t,o,i,u){var a=o<0?1:0;if(a&&(o=-o),o===0)t(1/o>0?0:2147483648,i,u);else if(isNaN(o))t(2143289344,i,u);else if(o>34028234663852886e22)t((a<<31|2139095040)>>>0,i,u);else if(o<11754943508222875e-54)t((a<<31|Math.round(o/1401298464324817e-60))>>>0,i,u);else{var s=Math.floor(Math.log(o)/Math.LN2),l=Math.round(o*Math.pow(2,-s)*8388608)&8388607;t((a<<31|s+127<<23|l)>>>0,i,u)}}r.writeFloatLE=e.bind(null,Ll),r.writeFloatBE=e.bind(null,zl);function n(t,o,i){var u=t(o,i),a=(u>>31)*2+1,s=u>>>23&255,l=u&8388607;return s===255?l?NaN:a*(1/0):s===0?a*1401298464324817e-60*l:a*Math.pow(2,s-150)*(l+8388608)}r.readFloatLE=n.bind(null,Nl),r.readFloatBE=n.bind(null,Fl)}(),typeof Float64Array<"u"?function(){var e=new Float64Array([-0]),n=new Uint8Array(e.buffer),t=n[7]===128;function o(s,l,d){e[0]=s,l[d]=n[0],l[d+1]=n[1],l[d+2]=n[2],l[d+3]=n[3],l[d+4]=n[4],l[d+5]=n[5],l[d+6]=n[6],l[d+7]=n[7]}function i(s,l,d){e[0]=s,l[d]=n[7],l[d+1]=n[6],l[d+2]=n[5],l[d+3]=n[4],l[d+4]=n[3],l[d+5]=n[2],l[d+6]=n[1],l[d+7]=n[0]}r.writeDoubleLE=t?o:i,r.writeDoubleBE=t?i:o;function u(s,l){return n[0]=s[l],n[1]=s[l+1],n[2]=s[l+2],n[3]=s[l+3],n[4]=s[l+4],n[5]=s[l+5],n[6]=s[l+6],n[7]=s[l+7],e[0]}function a(s,l){return n[7]=s[l],n[6]=s[l+1],n[5]=s[l+2],n[4]=s[l+3],n[3]=s[l+4],n[2]=s[l+5],n[1]=s[l+6],n[0]=s[l+7],e[0]}r.readDoubleLE=t?u:a,r.readDoubleBE=t?a:u}():function(){function e(t,o,i,u,a,s){var l=u<0?1:0;if(l&&(u=-u),u===0)t(0,a,s+o),t(1/u>0?0:2147483648,a,s+i);else if(isNaN(u))t(0,a,s+o),t(2146959360,a,s+i);else if(u>17976931348623157e292)t(0,a,s+o),t((l<<31|2146435072)>>>0,a,s+i);else{var d;if(u<22250738585072014e-324)d=u/5e-324,t(d>>>0,a,s+o),t((l<<31|d/4294967296)>>>0,a,s+i);else{var p=Math.floor(Math.log(u)/Math.LN2);p===1024&&(p=1023),d=u*Math.pow(2,-p),t(d*4503599627370496>>>0,a,s+o),t((l<<31|p+1023<<20|d*1048576&1048575)>>>0,a,s+i)}}}r.writeDoubleLE=e.bind(null,Ll,0,4),r.writeDoubleBE=e.bind(null,zl,4,0);function n(t,o,i,u,a){var s=t(u,a+o),l=t(u,a+i),d=(l>>31)*2+1,p=l>>>20&2047,f=4294967296*(l&1048575)+s;return p===2047?f?NaN:d*(1/0):p===0?d*5e-324*f:d*Math.pow(2,p-1075)*(f+4503599627370496)}r.readDoubleLE=n.bind(null,Nl,0,4),r.readDoubleBE=n.bind(null,Fl,4,0)}(),r}function Ll(r,e,n){e[n]=r&255,e[n+1]=r>>>8&255,e[n+2]=r>>>16&255,e[n+3]=r>>>24}function zl(r,e,n){e[n]=r>>>24,e[n+1]=r>>>16&255,e[n+2]=r>>>8&255,e[n+3]=r&255}function Nl(r,e){return(r[e]|r[e+1]<<8|r[e+2]<<16|r[e+3]<<24)>>>0}function Fl(r,e){return(r[e]<<24|r[e+1]<<16|r[e+2]<<8|r[e+3])>>>0}});var Wl=Ye((exports,module)=>{"use strict";module.exports=inquire;function inquire(moduleName){try{var mod=eval("quire".replace(/^/,"re"))(moduleName);if(mod&&(mod.length||Object.keys(mod).length))return mod}catch(r){}return null}});var Hl=Ye(Ul=>{"use strict";var Oa=Ul;Oa.length=function(e){for(var n=0,t=0,o=0;o<e.length;++o)t=e.charCodeAt(o),t<128?n+=1:t<2048?n+=2:(t&64512)===55296&&(e.charCodeAt(o+1)&64512)===56320?(++o,n+=4):n+=3;return n};Oa.read=function(e,n,t){var o=t-n;if(o<1)return"";for(var i=null,u=[],a=0,s;n<t;)s=e[n++],s<128?u[a++]=s:s>191&&s<224?u[a++]=(s&31)<<6|e[n++]&63:s>239&&s<365?(s=((s&7)<<18|(e[n++]&63)<<12|(e[n++]&63)<<6|e[n++]&63)-65536,u[a++]=55296+(s>>10),u[a++]=56320+(s&1023)):u[a++]=(s&15)<<12|(e[n++]&63)<<6|e[n++]&63,a>8191&&((i||(i=[])).push(String.fromCharCode.apply(String,u)),a=0);return i?(a&&i.push(String.fromCharCode.apply(String,u.slice(0,a))),i.join("")):String.fromCharCode.apply(String,u.slice(0,a))};Oa.write=function(e,n,t){for(var o=t,i,u,a=0;a<e.length;++a)i=e.charCodeAt(a),i<128?n[t++]=i:i<2048?(n[t++]=i>>6|192,n[t++]=i&63|128):(i&64512)===55296&&((u=e.charCodeAt(a+1))&64512)===56320?(i=65536+((i&1023)<<10)+(u&1023),++a,n[t++]=i>>18|240,n[t++]=i>>12&63|128,n[t++]=i>>6&63|128,n[t++]=i&63|128):(n[t++]=i>>12|224,n[t++]=i>>6&63|128,n[t++]=i&63|128);return t-o}});var jl=Ye((g$,ql)=>{"use strict";ql.exports=n0;function n0(r,e,n){var t=n||8192,o=t>>>1,i=null,u=t;return function(s){if(s<1||s>o)return r(s);u+s>t&&(i=r(t),u=0);var l=e.call(i,u,u+=s);return u&7&&(u=(u|7)+1),l}}});var Yl=Ye((b$,Kl)=>{"use strict";Kl.exports=mt;var eo=Rr();function mt(r,e){this.lo=r>>>0,this.hi=e>>>0}var Jr=mt.zero=new mt(0,0);Jr.toNumber=function(){return 0};Jr.zzEncode=Jr.zzDecode=function(){return this};Jr.length=function(){return 1};var o0=mt.zeroHash="\0\0\0\0\0\0\0\0";mt.fromNumber=function(e){if(e===0)return Jr;var n=e<0;n&&(e=-e);var t=e>>>0,o=(e-t)/4294967296>>>0;return n&&(o=~o>>>0,t=~t>>>0,++t>4294967295&&(t=0,++o>4294967295&&(o=0))),new mt(t,o)};mt.from=function(e){if(typeof e=="number")return mt.fromNumber(e);if(eo.isString(e))if(eo.Long)e=eo.Long.fromString(e);else return mt.fromNumber(parseInt(e,10));return e.low||e.high?new mt(e.low>>>0,e.high>>>0):Jr};mt.prototype.toNumber=function(e){if(!e&&this.hi>>>31){var n=~this.lo+1>>>0,t=~this.hi>>>0;return n||(t=t+1>>>0),-(n+t*4294967296)}return this.lo+this.hi*4294967296};mt.prototype.toLong=function(e){return eo.Long?new eo.Long(this.lo|0,this.hi|0,!!e):{low:this.lo|0,high:this.hi|0,unsigned:!!e}};var Br=String.prototype.charCodeAt;mt.fromHash=function(e){return e===o0?Jr:new mt((Br.call(e,0)|Br.call(e,1)<<8|Br.call(e,2)<<16|Br.call(e,3)<<24)>>>0,(Br.call(e,4)|Br.call(e,5)<<8|Br.call(e,6)<<16|Br.call(e,7)<<24)>>>0)};mt.prototype.toHash=function(){return String.fromCharCode(this.lo&255,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,this.hi&255,this.hi>>>8&255,this.hi>>>16&255,this.hi>>>24)};mt.prototype.zzEncode=function(){var e=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^e)>>>0,this.lo=(this.lo<<1^e)>>>0,this};mt.prototype.zzDecode=function(){var e=-(this.lo&1);return this.lo=((this.lo>>>1|this.hi<<31)^e)>>>0,this.hi=(this.hi>>>1^e)>>>0,this};mt.prototype.length=function(){var e=this.lo,n=(this.lo>>>28|this.hi<<4)>>>0,t=this.hi>>>24;return t===0?n===0?e<16384?e<128?1:2:e<2097152?3:4:n<16384?n<128?5:6:n<2097152?7:8:t<128?9:10}});var Rr=Ye(Ea=>{"use strict";var ae=Ea;ae.asPromise=El();ae.base64=Dl();ae.EventEmitter=Rl();ae.float=Gl();ae.inquire=Wl();ae.utf8=Hl();ae.pool=jl();ae.LongBits=Yl();ae.isNode=!!(typeof global<"u"&&global&&global.process&&global.process.versions&&global.process.versions.node);ae.global=ae.isNode&&global||typeof window<"u"&&window||typeof self<"u"&&self||Ea;ae.emptyArray=Object.freeze?Object.freeze([]):[];ae.emptyObject=Object.freeze?Object.freeze({}):{};ae.isInteger=Number.isInteger||function(e){return typeof e=="number"&&isFinite(e)&&Math.floor(e)===e};ae.isString=function(e){return typeof e=="string"||e instanceof String};ae.isObject=function(e){return e&&typeof e=="object"};ae.isset=ae.isSet=function(e,n){var t=e[n];return t!=null&&e.hasOwnProperty(n)?typeof t!="object"||(Array.isArray(t)?t.length:Object.keys(t).length)>0:!1};ae.Buffer=function(){try{var r=ae.inquire("buffer").Buffer;return r.prototype.utf8Write?r:null}catch{return null}}();ae._Buffer_from=null;ae._Buffer_allocUnsafe=null;ae.newBuffer=function(e){return typeof e=="number"?ae.Buffer?ae._Buffer_allocUnsafe(e):new ae.Array(e):ae.Buffer?ae._Buffer_from(e):typeof Uint8Array>"u"?e:new Uint8Array(e)};ae.Array=typeof Uint8Array<"u"?Uint8Array:Array;ae.Long=ae.global.dcodeIO&&ae.global.dcodeIO.Long||ae.global.Long||ae.inquire("long");ae.key2Re=/^true|false|0|1$/;ae.key32Re=/^-?(?:0|[1-9][0-9]*)$/;ae.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;ae.longToHash=function(e){return e?ae.LongBits.from(e).toHash():ae.LongBits.zeroHash};ae.longFromHash=function(e,n){var t=ae.LongBits.fromHash(e);return ae.Long?ae.Long.fromBits(t.lo,t.hi,n):t.toNumber(!!n)};function Xl(r,e,n){for(var t=Object.keys(e),o=0;o<t.length;++o)(r[t[o]]===void 0||!n)&&(r[t[o]]=e[t[o]]);return r}ae.merge=Xl;ae.lcFirst=function(e){return e.charAt(0).toLowerCase()+e.substring(1)};function Zl(r){function e(n,t){if(!(this instanceof e))return new e(n,t);Object.defineProperty(this,"message",{get:function(){return n}}),Error.captureStackTrace?Error.captureStackTrace(this,e):Object.defineProperty(this,"stack",{value:new Error().stack||""}),t&&Xl(this,t)}return e.prototype=Object.create(Error.prototype,{constructor:{value:e,writable:!0,enumerable:!1,configurable:!0},name:{get:function(){return r},set:void 0,enumerable:!1,configurable:!0},toString:{value:function(){return this.name+": "+this.message},writable:!0,enumerable:!1,configurable:!0}}),e}ae.newError=Zl;ae.ProtocolError=Zl("ProtocolError");ae.oneOfGetter=function(e){for(var n={},t=0;t<e.length;++t)n[e[t]]=1;return function(){for(var o=Object.keys(this),i=o.length-1;i>-1;--i)if(n[o[i]]===1&&this[o[i]]!==void 0&&this[o[i]]!==null)return o[i]}};ae.oneOfSetter=function(e){return function(n){for(var t=0;t<e.length;++t)e[t]!==n&&delete this[e[t]]}};ae.toJSONOptions={longs:String,enums:String,bytes:String,json:!0};ae._configure=function(){var r=ae.Buffer;if(!r){ae._Buffer_from=ae._Buffer_allocUnsafe=null;return}ae._Buffer_from=r.from!==Uint8Array.from&&r.from||function(n,t){return new r(n,t)},ae._Buffer_allocUnsafe=r.allocUnsafe||function(n){return new r(n)}}});var Ma=Ye((v$,td)=>{"use strict";td.exports=Ne;var Wt=Rr(),Ca,oi=Wt.LongBits,Jl=Wt.base64,Ql=Wt.utf8;function to(r,e,n){this.fn=r,this.len=e,this.next=void 0,this.val=n}function ka(){}function i0(r){this.head=r.head,this.tail=r.tail,this.len=r.len,this.next=r.states}function Ne(){this.len=0,this.head=new to(ka,0,0),this.tail=this.head,this.states=null}var ed=function(){return Wt.Buffer?function(){return(Ne.create=function(){return new Ca})()}:function(){return new Ne}};Ne.create=ed();Ne.alloc=function(e){return new Wt.Array(e)};Wt.Array!==Array&&(Ne.alloc=Wt.pool(Ne.alloc,Wt.Array.prototype.subarray));Ne.prototype._push=function(e,n,t){return this.tail=this.tail.next=new to(e,n,t),this.len+=n,this};function Da(r,e,n){e[n]=r&255}function a0(r,e,n){for(;r>127;)e[n++]=r&127|128,r>>>=7;e[n]=r}function Ba(r,e){this.len=r,this.next=void 0,this.val=e}Ba.prototype=Object.create(to.prototype);Ba.prototype.fn=a0;Ne.prototype.uint32=function(e){return this.len+=(this.tail=this.tail.next=new Ba((e=e>>>0)<128?1:e<16384?2:e<2097152?3:e<268435456?4:5,e)).len,this};Ne.prototype.int32=function(e){return e<0?this._push(Ra,10,oi.fromNumber(e)):this.uint32(e)};Ne.prototype.sint32=function(e){return this.uint32((e<<1^e>>31)>>>0)};function Ra(r,e,n){for(;r.hi;)e[n++]=r.lo&127|128,r.lo=(r.lo>>>7|r.hi<<25)>>>0,r.hi>>>=7;for(;r.lo>127;)e[n++]=r.lo&127|128,r.lo=r.lo>>>7;e[n++]=r.lo}Ne.prototype.uint64=function(e){var n=oi.from(e);return this._push(Ra,n.length(),n)};Ne.prototype.int64=Ne.prototype.uint64;Ne.prototype.sint64=function(e){var n=oi.from(e).zzEncode();return this._push(Ra,n.length(),n)};Ne.prototype.bool=function(e){return this._push(Da,1,e?1:0)};function Pa(r,e,n){e[n]=r&255,e[n+1]=r>>>8&255,e[n+2]=r>>>16&255,e[n+3]=r>>>24}Ne.prototype.fixed32=function(e){return this._push(Pa,4,e>>>0)};Ne.prototype.sfixed32=Ne.prototype.fixed32;Ne.prototype.fixed64=function(e){var n=oi.from(e);return this._push(Pa,4,n.lo)._push(Pa,4,n.hi)};Ne.prototype.sfixed64=Ne.prototype.fixed64;Ne.prototype.float=function(e){return this._push(Wt.float.writeFloatLE,4,e)};Ne.prototype.double=function(e){return this._push(Wt.float.writeDoubleLE,8,e)};var s0=Wt.Array.prototype.set?function(e,n,t){n.set(e,t)}:function(e,n,t){for(var o=0;o<e.length;++o)n[t+o]=e[o]};Ne.prototype.bytes=function(e){var n=e.length>>>0;if(!n)return this._push(Da,1,0);if(Wt.isString(e)){var t=Ne.alloc(n=Jl.length(e));Jl.decode(e,t,0),e=t}return this.uint32(n)._push(s0,n,e)};Ne.prototype.string=function(e){var n=Ql.length(e);return n?this.uint32(n)._push(Ql.write,n,e):this._push(Da,1,0)};Ne.prototype.fork=function(){return this.states=new i0(this),this.head=this.tail=new to(ka,0,0),this.len=0,this};Ne.prototype.reset=function(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new to(ka,0,0),this.len=0),this};Ne.prototype.ldelim=function(){var e=this.head,n=this.tail,t=this.len;return this.reset().uint32(t),t&&(this.tail.next=e.next,this.tail=n,this.len+=t),this};Ne.prototype.finish=function(){for(var e=this.head.next,n=this.constructor.alloc(this.len),t=0;e;)e.fn(e.val,n,t),t+=e.len,e=e.next;return n};Ne._configure=function(r){Ca=r,Ne.create=ed(),Ca._configure()}});var od=Ye((w$,nd)=>{"use strict";nd.exports=ur;var rd=Ma();(ur.prototype=Object.create(rd.prototype)).constructor=ur;var Mr=Rr();function ur(){rd.call(this)}ur._configure=function(){ur.alloc=Mr._Buffer_allocUnsafe,ur.writeBytesBuffer=Mr.Buffer&&Mr.Buffer.prototype instanceof Uint8Array&&Mr.Buffer.prototype.set.name==="set"?function(e,n,t){n.set(e,t)}:function(e,n,t){if(e.copy)e.copy(n,t,0,e.length);else for(var o=0;o<e.length;)n[t++]=e[o++]}};ur.prototype.bytes=function(e){Mr.isString(e)&&(e=Mr._Buffer_from(e,"base64"));var n=e.length>>>0;return this.uint32(n),n&&this._push(ur.writeBytesBuffer,n,e),this};function u0(r,e,n){r.length<40?Mr.utf8.write(r,e,n):e.utf8Write?e.utf8Write(r,n):e.write(r,n)}ur.prototype.string=function(e){var n=Mr.Buffer.byteLength(e);return this.uint32(n),n&&this._push(u0,n,e),this};ur._configure()});var Na=Ye((x$,ld)=>{"use strict";ld.exports=ut;var lr=Rr(),za,sd=lr.LongBits,l0=lr.utf8;function Jt(r,e){return RangeError("index out of range: "+r.pos+" + "+(e||1)+" > "+r.len)}function ut(r){this.buf=r,this.pos=0,this.len=r.length}var id=typeof Uint8Array<"u"?function(e){if(e instanceof Uint8Array||Array.isArray(e))return new ut(e);throw Error("illegal buffer")}:function(e){if(Array.isArray(e))return new ut(e);throw Error("illegal buffer")},ud=function(){return lr.Buffer?function(n){return(ut.create=function(o){return lr.Buffer.isBuffer(o)?new za(o):id(o)})(n)}:id};ut.create=ud();ut.prototype._slice=lr.Array.prototype.subarray||lr.Array.prototype.slice;ut.prototype.uint32=function(){var e=4294967295;return function(){if(e=(this.buf[this.pos]&127)>>>0,this.buf[this.pos++]<128||(e=(e|(this.buf[this.pos]&127)<<7)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<14)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<21)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&15)<<28)>>>0,this.buf[this.pos++]<128))return e;if((this.pos+=5)>this.len)throw this.pos=this.len,Jt(this,10);return e}}();ut.prototype.int32=function(){return this.uint32()|0};ut.prototype.sint32=function(){var e=this.uint32();return e>>>1^-(e&1)|0};function La(){var r=new sd(0,0),e=0;if(this.len-this.pos>4){for(;e<4;++e)if(r.lo=(r.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return r;if(r.lo=(r.lo|(this.buf[this.pos]&127)<<28)>>>0,r.hi=(r.hi|(this.buf[this.pos]&127)>>4)>>>0,this.buf[this.pos++]<128)return r;e=0}else{for(;e<3;++e){if(this.pos>=this.len)throw Jt(this);if(r.lo=(r.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return r}return r.lo=(r.lo|(this.buf[this.pos++]&127)<<e*7)>>>0,r}if(this.len-this.pos>4){for(;e<5;++e)if(r.hi=(r.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return r}else for(;e<5;++e){if(this.pos>=this.len)throw Jt(this);if(r.hi=(r.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return r}throw Error("invalid varint encoding")}ut.prototype.bool=function(){return this.uint32()!==0};function ii(r,e){return(r[e-4]|r[e-3]<<8|r[e-2]<<16|r[e-1]<<24)>>>0}ut.prototype.fixed32=function(){if(this.pos+4>this.len)throw Jt(this,4);return ii(this.buf,this.pos+=4)};ut.prototype.sfixed32=function(){if(this.pos+4>this.len)throw Jt(this,4);return ii(this.buf,this.pos+=4)|0};function ad(){if(this.pos+8>this.len)throw Jt(this,8);return new sd(ii(this.buf,this.pos+=4),ii(this.buf,this.pos+=4))}ut.prototype.float=function(){if(this.pos+4>this.len)throw Jt(this,4);var e=lr.float.readFloatLE(this.buf,this.pos);return this.pos+=4,e};ut.prototype.double=function(){if(this.pos+8>this.len)throw Jt(this,4);var e=lr.float.readDoubleLE(this.buf,this.pos);return this.pos+=8,e};ut.prototype.bytes=function(){var e=this.uint32(),n=this.pos,t=this.pos+e;if(t>this.len)throw Jt(this,e);return this.pos+=e,Array.isArray(this.buf)?this.buf.slice(n,t):n===t?new this.buf.constructor(0):this._slice.call(this.buf,n,t)};ut.prototype.string=function(){var e=this.bytes();return l0.read(e,0,e.length)};ut.prototype.skip=function(e){if(typeof e=="number"){if(this.pos+e>this.len)throw Jt(this,e);this.pos+=e}else do if(this.pos>=this.len)throw Jt(this);while(this.buf[this.pos++]&128);return this};ut.prototype.skipType=function(r){switch(r){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;(r=this.uint32()&7)!==4;)this.skipType(r);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+r+" at offset "+this.pos)}return this};ut._configure=function(r){za=r,ut.create=ud(),za._configure();var e=lr.Long?"toLong":"toNumber";lr.merge(ut.prototype,{int64:function(){return La.call(this)[e](!1)},uint64:function(){return La.call(this)[e](!0)},sint64:function(){return La.call(this).zzDecode()[e](!1)},fixed64:function(){return ad.call(this)[e](!0)},sfixed64:function(){return ad.call(this)[e](!1)}})}});var pd=Ye((T$,fd)=>{"use strict";fd.exports=Qr;var cd=Na();(Qr.prototype=Object.create(cd.prototype)).constructor=Qr;var dd=Rr();function Qr(r){cd.call(this,r)}Qr._configure=function(){dd.Buffer&&(Qr.prototype._slice=dd.Buffer.prototype.slice)};Qr.prototype.string=function(){var e=this.uint32();return this.buf.utf8Slice?this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+e,this.len)):this.buf.toString("utf-8",this.pos,this.pos=Math.min(this.pos+e,this.len))};Qr._configure()});var md=Ye(($$,hd)=>{"use strict";hd.exports=ro;var Fa=Rr();(ro.prototype=Object.create(Fa.EventEmitter.prototype)).constructor=ro;function ro(r,e,n){if(typeof r!="function")throw TypeError("rpcImpl must be a function");Fa.EventEmitter.call(this),this.rpcImpl=r,this.requestDelimited=!!e,this.responseDelimited=!!n}ro.prototype.rpcCall=function r(e,n,t,o,i){if(!o)throw TypeError("request must be specified");var u=this;if(!i)return Fa.asPromise(r,u,e,n,t,o);if(!u.rpcImpl){setTimeout(function(){i(Error("already ended"))},0);return}try{return u.rpcImpl(e,n[u.requestDelimited?"encodeDelimited":"encode"](o).finish(),function(s,l){if(s)return u.emit("error",s,e),i(s);if(l===null){u.end(!0);return}if(!(l instanceof t))try{l=t[u.responseDelimited?"decodeDelimited":"decode"](l)}catch(d){return u.emit("error",d,e),i(d)}return u.emit("data",l,e),i(null,l)})}catch(a){u.emit("error",a,e),setTimeout(function(){i(a)},0);return}};ro.prototype.end=function(e){return this.rpcImpl&&(e||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this}});var bd=Ye(gd=>{"use strict";var d0=gd;d0.Service=md()});var vd=Ye((I$,yd)=>{"use strict";yd.exports={}});var Td=Ye(xd=>{"use strict";var Bt=xd;Bt.build="minimal";Bt.Writer=Ma();Bt.BufferWriter=od();Bt.Reader=Na();Bt.BufferReader=pd();Bt.util=Rr();Bt.rpc=bd();Bt.roots=vd();Bt.configure=wd;function wd(){Bt.util._configure(),Bt.Writer._configure(Bt.BufferWriter),Bt.Reader._configure(Bt.BufferReader)}wd()});var Sd=Ye((A$,$d)=>{"use strict";$d.exports=Td()});var $n=Ye((O$,Id)=>{"use strict";var Ze=Sd(),Z=Ze.Reader,lt=Ze.Writer,A=Ze.util,T=Ze.roots.default||(Ze.roots.default={});T.onnx=function(){var r={};return r.Version=function(){var e={},n=Object.create(e);return n[e[0]="_START_VERSION"]=0,n[e[1]="IR_VERSION_2017_10_10"]=1,n[e[2]="IR_VERSION_2017_10_30"]=2,n[e[3]="IR_VERSION_2017_11_3"]=3,n[e[4]="IR_VERSION_2019_1_22"]=4,n[e[5]="IR_VERSION_2019_3_18"]=5,n[e[6]="IR_VERSION_2019_9_19"]=6,n[e[7]="IR_VERSION_2020_5_8"]=7,n[e[8]="IR_VERSION_2021_7_30"]=8,n[e[9]="IR_VERSION"]=9,n}(),r.AttributeProto=function(){function e(n){if(this.floats=[],this.ints=[],this.strings=[],this.tensors=[],this.graphs=[],this.sparseTensors=[],this.typeProtos=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.name="",e.prototype.refAttrName="",e.prototype.docString="",e.prototype.type=0,e.prototype.f=0,e.prototype.i=A.Long?A.Long.fromBits(0,0,!1):0,e.prototype.s=A.newBuffer([]),e.prototype.t=null,e.prototype.g=null,e.prototype.sparseTensor=null,e.prototype.tp=null,e.prototype.floats=A.emptyArray,e.prototype.ints=A.emptyArray,e.prototype.strings=A.emptyArray,e.prototype.tensors=A.emptyArray,e.prototype.graphs=A.emptyArray,e.prototype.sparseTensors=A.emptyArray,e.prototype.typeProtos=A.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=lt.create()),t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(10).string(t.name),t.f!=null&&Object.hasOwnProperty.call(t,"f")&&o.uint32(21).float(t.f),t.i!=null&&Object.hasOwnProperty.call(t,"i")&&o.uint32(24).int64(t.i),t.s!=null&&Object.hasOwnProperty.call(t,"s")&&o.uint32(34).bytes(t.s),t.t!=null&&Object.hasOwnProperty.call(t,"t")&&T.onnx.TensorProto.encode(t.t,o.uint32(42).fork()).ldelim(),t.g!=null&&Object.hasOwnProperty.call(t,"g")&&T.onnx.GraphProto.encode(t.g,o.uint32(50).fork()).ldelim(),t.floats!=null&&t.floats.length){o.uint32(58).fork();for(var i=0;i<t.floats.length;++i)o.float(t.floats[i]);o.ldelim()}if(t.ints!=null&&t.ints.length){o.uint32(66).fork();for(var i=0;i<t.ints.length;++i)o.int64(t.ints[i]);o.ldelim()}if(t.strings!=null&&t.strings.length)for(var i=0;i<t.strings.length;++i)o.uint32(74).bytes(t.strings[i]);if(t.tensors!=null&&t.tensors.length)for(var i=0;i<t.tensors.length;++i)T.onnx.TensorProto.encode(t.tensors[i],o.uint32(82).fork()).ldelim();if(t.graphs!=null&&t.graphs.length)for(var i=0;i<t.graphs.length;++i)T.onnx.GraphProto.encode(t.graphs[i],o.uint32(90).fork()).ldelim();if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(106).string(t.docString),t.tp!=null&&Object.hasOwnProperty.call(t,"tp")&&T.onnx.TypeProto.encode(t.tp,o.uint32(114).fork()).ldelim(),t.typeProtos!=null&&t.typeProtos.length)for(var i=0;i<t.typeProtos.length;++i)T.onnx.TypeProto.encode(t.typeProtos[i],o.uint32(122).fork()).ldelim();if(t.type!=null&&Object.hasOwnProperty.call(t,"type")&&o.uint32(160).int32(t.type),t.refAttrName!=null&&Object.hasOwnProperty.call(t,"refAttrName")&&o.uint32(170).string(t.refAttrName),t.sparseTensor!=null&&Object.hasOwnProperty.call(t,"sparseTensor")&&T.onnx.SparseTensorProto.encode(t.sparseTensor,o.uint32(178).fork()).ldelim(),t.sparseTensors!=null&&t.sparseTensors.length)for(var i=0;i<t.sparseTensors.length;++i)T.onnx.SparseTensorProto.encode(t.sparseTensors[i],o.uint32(186).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Z||(t=Z.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.AttributeProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.name=t.string();break}case 21:{u.refAttrName=t.string();break}case 13:{u.docString=t.string();break}case 20:{u.type=t.int32();break}case 2:{u.f=t.float();break}case 3:{u.i=t.int64();break}case 4:{u.s=t.bytes();break}case 5:{u.t=T.onnx.TensorProto.decode(t,t.uint32());break}case 6:{u.g=T.onnx.GraphProto.decode(t,t.uint32());break}case 22:{u.sparseTensor=T.onnx.SparseTensorProto.decode(t,t.uint32());break}case 14:{u.tp=T.onnx.TypeProto.decode(t,t.uint32());break}case 7:{if(u.floats&&u.floats.length||(u.floats=[]),(a&7)===2)for(var s=t.uint32()+t.pos;t.pos<s;)u.floats.push(t.float());else u.floats.push(t.float());break}case 8:{if(u.ints&&u.ints.length||(u.ints=[]),(a&7)===2)for(var s=t.uint32()+t.pos;t.pos<s;)u.ints.push(t.int64());else u.ints.push(t.int64());break}case 9:{u.strings&&u.strings.length||(u.strings=[]),u.strings.push(t.bytes());break}case 10:{u.tensors&&u.tensors.length||(u.tensors=[]),u.tensors.push(T.onnx.TensorProto.decode(t,t.uint32()));break}case 11:{u.graphs&&u.graphs.length||(u.graphs=[]),u.graphs.push(T.onnx.GraphProto.decode(t,t.uint32()));break}case 23:{u.sparseTensors&&u.sparseTensors.length||(u.sparseTensors=[]),u.sparseTensors.push(T.onnx.SparseTensorProto.decode(t,t.uint32()));break}case 15:{u.typeProtos&&u.typeProtos.length||(u.typeProtos=[]),u.typeProtos.push(T.onnx.TypeProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof Z||(t=new Z(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!A.isString(t.name))return"name: string expected";if(t.refAttrName!=null&&t.hasOwnProperty("refAttrName")&&!A.isString(t.refAttrName))return"refAttrName: string expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!A.isString(t.docString))return"docString: string expected";if(t.type!=null&&t.hasOwnProperty("type"))switch(t.type){default:return"type: enum value expected";case 0:case 1:case 2:case 3:case 4:case 5:case 11:case 13:case 6:case 7:case 8:case 9:case 10:case 12:case 14:break}if(t.f!=null&&t.hasOwnProperty("f")&&typeof t.f!="number")return"f: number expected";if(t.i!=null&&t.hasOwnProperty("i")&&!A.isInteger(t.i)&&!(t.i&&A.isInteger(t.i.low)&&A.isInteger(t.i.high)))return"i: integer|Long expected";if(t.s!=null&&t.hasOwnProperty("s")&&!(t.s&&typeof t.s.length=="number"||A.isString(t.s)))return"s: buffer expected";if(t.t!=null&&t.hasOwnProperty("t")){var o=T.onnx.TensorProto.verify(t.t);if(o)return"t."+o}if(t.g!=null&&t.hasOwnProperty("g")){var o=T.onnx.GraphProto.verify(t.g);if(o)return"g."+o}if(t.sparseTensor!=null&&t.hasOwnProperty("sparseTensor")){var o=T.onnx.SparseTensorProto.verify(t.sparseTensor);if(o)return"sparseTensor."+o}if(t.tp!=null&&t.hasOwnProperty("tp")){var o=T.onnx.TypeProto.verify(t.tp);if(o)return"tp."+o}if(t.floats!=null&&t.hasOwnProperty("floats")){if(!Array.isArray(t.floats))return"floats: array expected";for(var i=0;i<t.floats.length;++i)if(typeof t.floats[i]!="number")return"floats: number[] expected"}if(t.ints!=null&&t.hasOwnProperty("ints")){if(!Array.isArray(t.ints))return"ints: array expected";for(var i=0;i<t.ints.length;++i)if(!A.isInteger(t.ints[i])&&!(t.ints[i]&&A.isInteger(t.ints[i].low)&&A.isInteger(t.ints[i].high)))return"ints: integer|Long[] expected"}if(t.strings!=null&&t.hasOwnProperty("strings")){if(!Array.isArray(t.strings))return"strings: array expected";for(var i=0;i<t.strings.length;++i)if(!(t.strings[i]&&typeof t.strings[i].length=="number"||A.isString(t.strings[i])))return"strings: buffer[] expected"}if(t.tensors!=null&&t.hasOwnProperty("tensors")){if(!Array.isArray(t.tensors))return"tensors: array expected";for(var i=0;i<t.tensors.length;++i){var o=T.onnx.TensorProto.verify(t.tensors[i]);if(o)return"tensors."+o}}if(t.graphs!=null&&t.hasOwnProperty("graphs")){if(!Array.isArray(t.graphs))return"graphs: array expected";for(var i=0;i<t.graphs.length;++i){var o=T.onnx.GraphProto.verify(t.graphs[i]);if(o)return"graphs."+o}}if(t.sparseTensors!=null&&t.hasOwnProperty("sparseTensors")){if(!Array.isArray(t.sparseTensors))return"sparseTensors: array expected";for(var i=0;i<t.sparseTensors.length;++i){var o=T.onnx.SparseTensorProto.verify(t.sparseTensors[i]);if(o)return"sparseTensors."+o}}if(t.typeProtos!=null&&t.hasOwnProperty("typeProtos")){if(!Array.isArray(t.typeProtos))return"typeProtos: array expected";for(var i=0;i<t.typeProtos.length;++i){var o=T.onnx.TypeProto.verify(t.typeProtos[i]);if(o)return"typeProtos."+o}}return null},e.fromObject=function(t){if(t instanceof T.onnx.AttributeProto)return t;var o=new T.onnx.AttributeProto;switch(t.name!=null&&(o.name=String(t.name)),t.refAttrName!=null&&(o.refAttrName=String(t.refAttrName)),t.docString!=null&&(o.docString=String(t.docString)),t.type){default:if(typeof t.type=="number"){o.type=t.type;break}break;case"UNDEFINED":case 0:o.type=0;break;case"FLOAT":case 1:o.type=1;break;case"INT":case 2:o.type=2;break;case"STRING":case 3:o.type=3;break;case"TENSOR":case 4:o.type=4;break;case"GRAPH":case 5:o.type=5;break;case"SPARSE_TENSOR":case 11:o.type=11;break;case"TYPE_PROTO":case 13:o.type=13;break;case"FLOATS":case 6:o.type=6;break;case"INTS":case 7:o.type=7;break;case"STRINGS":case 8:o.type=8;break;case"TENSORS":case 9:o.type=9;break;case"GRAPHS":case 10:o.type=10;break;case"SPARSE_TENSORS":case 12:o.type=12;break;case"TYPE_PROTOS":case 14:o.type=14;break}if(t.f!=null&&(o.f=Number(t.f)),t.i!=null&&(A.Long?(o.i=A.Long.fromValue(t.i)).unsigned=!1:typeof t.i=="string"?o.i=parseInt(t.i,10):typeof t.i=="number"?o.i=t.i:typeof t.i=="object"&&(o.i=new A.LongBits(t.i.low>>>0,t.i.high>>>0).toNumber())),t.s!=null&&(typeof t.s=="string"?A.base64.decode(t.s,o.s=A.newBuffer(A.base64.length(t.s)),0):t.s.length>=0&&(o.s=t.s)),t.t!=null){if(typeof t.t!="object")throw TypeError(".onnx.AttributeProto.t: object expected");o.t=T.onnx.TensorProto.fromObject(t.t)}if(t.g!=null){if(typeof t.g!="object")throw TypeError(".onnx.AttributeProto.g: object expected");o.g=T.onnx.GraphProto.fromObject(t.g)}if(t.sparseTensor!=null){if(typeof t.sparseTensor!="object")throw TypeError(".onnx.AttributeProto.sparseTensor: object expected");o.sparseTensor=T.onnx.SparseTensorProto.fromObject(t.sparseTensor)}if(t.tp!=null){if(typeof t.tp!="object")throw TypeError(".onnx.AttributeProto.tp: object expected");o.tp=T.onnx.TypeProto.fromObject(t.tp)}if(t.floats){if(!Array.isArray(t.floats))throw TypeError(".onnx.AttributeProto.floats: array expected");o.floats=[];for(var i=0;i<t.floats.length;++i)o.floats[i]=Number(t.floats[i])}if(t.ints){if(!Array.isArray(t.ints))throw TypeError(".onnx.AttributeProto.ints: array expected");o.ints=[];for(var i=0;i<t.ints.length;++i)A.Long?(o.ints[i]=A.Long.fromValue(t.ints[i])).unsigned=!1:typeof t.ints[i]=="string"?o.ints[i]=parseInt(t.ints[i],10):typeof t.ints[i]=="number"?o.ints[i]=t.ints[i]:typeof t.ints[i]=="object"&&(o.ints[i]=new A.LongBits(t.ints[i].low>>>0,t.ints[i].high>>>0).toNumber())}if(t.strings){if(!Array.isArray(t.strings))throw TypeError(".onnx.AttributeProto.strings: array expected");o.strings=[];for(var i=0;i<t.strings.length;++i)typeof t.strings[i]=="string"?A.base64.decode(t.strings[i],o.strings[i]=A.newBuffer(A.base64.length(t.strings[i])),0):t.strings[i].length>=0&&(o.strings[i]=t.strings[i])}if(t.tensors){if(!Array.isArray(t.tensors))throw TypeError(".onnx.AttributeProto.tensors: array expected");o.tensors=[];for(var i=0;i<t.tensors.length;++i){if(typeof t.tensors[i]!="object")throw TypeError(".onnx.AttributeProto.tensors: object expected");o.tensors[i]=T.onnx.TensorProto.fromObject(t.tensors[i])}}if(t.graphs){if(!Array.isArray(t.graphs))throw TypeError(".onnx.AttributeProto.graphs: array expected");o.graphs=[];for(var i=0;i<t.graphs.length;++i){if(typeof t.graphs[i]!="object")throw TypeError(".onnx.AttributeProto.graphs: object expected");o.graphs[i]=T.onnx.GraphProto.fromObject(t.graphs[i])}}if(t.sparseTensors){if(!Array.isArray(t.sparseTensors))throw TypeError(".onnx.AttributeProto.sparseTensors: array expected");o.sparseTensors=[];for(var i=0;i<t.sparseTensors.length;++i){if(typeof t.sparseTensors[i]!="object")throw TypeError(".onnx.AttributeProto.sparseTensors: object expected");o.sparseTensors[i]=T.onnx.SparseTensorProto.fromObject(t.sparseTensors[i])}}if(t.typeProtos){if(!Array.isArray(t.typeProtos))throw TypeError(".onnx.AttributeProto.typeProtos: array expected");o.typeProtos=[];for(var i=0;i<t.typeProtos.length;++i){if(typeof t.typeProtos[i]!="object")throw TypeError(".onnx.AttributeProto.typeProtos: object expected");o.typeProtos[i]=T.onnx.TypeProto.fromObject(t.typeProtos[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.floats=[],i.ints=[],i.strings=[],i.tensors=[],i.graphs=[],i.typeProtos=[],i.sparseTensors=[]),o.defaults){if(i.name="",i.f=0,A.Long){var u=new A.Long(0,0,!1);i.i=o.longs===String?u.toString():o.longs===Number?u.toNumber():u}else i.i=o.longs===String?"0":0;o.bytes===String?i.s="":(i.s=[],o.bytes!==Array&&(i.s=A.newBuffer(i.s))),i.t=null,i.g=null,i.docString="",i.tp=null,i.type=o.enums===String?"UNDEFINED":0,i.refAttrName="",i.sparseTensor=null}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.f!=null&&t.hasOwnProperty("f")&&(i.f=o.json&&!isFinite(t.f)?String(t.f):t.f),t.i!=null&&t.hasOwnProperty("i")&&(typeof t.i=="number"?i.i=o.longs===String?String(t.i):t.i:i.i=o.longs===String?A.Long.prototype.toString.call(t.i):o.longs===Number?new A.LongBits(t.i.low>>>0,t.i.high>>>0).toNumber():t.i),t.s!=null&&t.hasOwnProperty("s")&&(i.s=o.bytes===String?A.base64.encode(t.s,0,t.s.length):o.bytes===Array?Array.prototype.slice.call(t.s):t.s),t.t!=null&&t.hasOwnProperty("t")&&(i.t=T.onnx.TensorProto.toObject(t.t,o)),t.g!=null&&t.hasOwnProperty("g")&&(i.g=T.onnx.GraphProto.toObject(t.g,o)),t.floats&&t.floats.length){i.floats=[];for(var a=0;a<t.floats.length;++a)i.floats[a]=o.json&&!isFinite(t.floats[a])?String(t.floats[a]):t.floats[a]}if(t.ints&&t.ints.length){i.ints=[];for(var a=0;a<t.ints.length;++a)typeof t.ints[a]=="number"?i.ints[a]=o.longs===String?String(t.ints[a]):t.ints[a]:i.ints[a]=o.longs===String?A.Long.prototype.toString.call(t.ints[a]):o.longs===Number?new A.LongBits(t.ints[a].low>>>0,t.ints[a].high>>>0).toNumber():t.ints[a]}if(t.strings&&t.strings.length){i.strings=[];for(var a=0;a<t.strings.length;++a)i.strings[a]=o.bytes===String?A.base64.encode(t.strings[a],0,t.strings[a].length):o.bytes===Array?Array.prototype.slice.call(t.strings[a]):t.strings[a]}if(t.tensors&&t.tensors.length){i.tensors=[];for(var a=0;a<t.tensors.length;++a)i.tensors[a]=T.onnx.TensorProto.toObject(t.tensors[a],o)}if(t.graphs&&t.graphs.length){i.graphs=[];for(var a=0;a<t.graphs.length;++a)i.graphs[a]=T.onnx.GraphProto.toObject(t.graphs[a],o)}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.tp!=null&&t.hasOwnProperty("tp")&&(i.tp=T.onnx.TypeProto.toObject(t.tp,o)),t.typeProtos&&t.typeProtos.length){i.typeProtos=[];for(var a=0;a<t.typeProtos.length;++a)i.typeProtos[a]=T.onnx.TypeProto.toObject(t.typeProtos[a],o)}if(t.type!=null&&t.hasOwnProperty("type")&&(i.type=o.enums===String?T.onnx.AttributeProto.AttributeType[t.type]===void 0?t.type:T.onnx.AttributeProto.AttributeType[t.type]:t.type),t.refAttrName!=null&&t.hasOwnProperty("refAttrName")&&(i.refAttrName=t.refAttrName),t.sparseTensor!=null&&t.hasOwnProperty("sparseTensor")&&(i.sparseTensor=T.onnx.SparseTensorProto.toObject(t.sparseTensor,o)),t.sparseTensors&&t.sparseTensors.length){i.sparseTensors=[];for(var a=0;a<t.sparseTensors.length;++a)i.sparseTensors[a]=T.onnx.SparseTensorProto.toObject(t.sparseTensors[a],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.AttributeProto"},e.AttributeType=function(){var n={},t=Object.create(n);return t[n[0]="UNDEFINED"]=0,t[n[1]="FLOAT"]=1,t[n[2]="INT"]=2,t[n[3]="STRING"]=3,t[n[4]="TENSOR"]=4,t[n[5]="GRAPH"]=5,t[n[11]="SPARSE_TENSOR"]=11,t[n[13]="TYPE_PROTO"]=13,t[n[6]="FLOATS"]=6,t[n[7]="INTS"]=7,t[n[8]="STRINGS"]=8,t[n[9]="TENSORS"]=9,t[n[10]="GRAPHS"]=10,t[n[12]="SPARSE_TENSORS"]=12,t[n[14]="TYPE_PROTOS"]=14,t}(),e}(),r.ValueInfoProto=function(){function e(n){if(n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.name="",e.prototype.type=null,e.prototype.docString="",e.create=function(t){return new e(t)},e.encode=function(t,o){return o||(o=lt.create()),t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(10).string(t.name),t.type!=null&&Object.hasOwnProperty.call(t,"type")&&T.onnx.TypeProto.encode(t.type,o.uint32(18).fork()).ldelim(),t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(26).string(t.docString),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Z||(t=Z.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.ValueInfoProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.name=t.string();break}case 2:{u.type=T.onnx.TypeProto.decode(t,t.uint32());break}case 3:{u.docString=t.string();break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof Z||(t=new Z(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!A.isString(t.name))return"name: string expected";if(t.type!=null&&t.hasOwnProperty("type")){var o=T.onnx.TypeProto.verify(t.type);if(o)return"type."+o}return t.docString!=null&&t.hasOwnProperty("docString")&&!A.isString(t.docString)?"docString: string expected":null},e.fromObject=function(t){if(t instanceof T.onnx.ValueInfoProto)return t;var o=new T.onnx.ValueInfoProto;if(t.name!=null&&(o.name=String(t.name)),t.type!=null){if(typeof t.type!="object")throw TypeError(".onnx.ValueInfoProto.type: object expected");o.type=T.onnx.TypeProto.fromObject(t.type)}return t.docString!=null&&(o.docString=String(t.docString)),o},e.toObject=function(t,o){o||(o={});var i={};return o.defaults&&(i.name="",i.type=null,i.docString=""),t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.type!=null&&t.hasOwnProperty("type")&&(i.type=T.onnx.TypeProto.toObject(t.type,o)),t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.ValueInfoProto"},e}(),r.NodeProto=function(){function e(n){if(this.input=[],this.output=[],this.attribute=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.input=A.emptyArray,e.prototype.output=A.emptyArray,e.prototype.name="",e.prototype.opType="",e.prototype.domain="",e.prototype.attribute=A.emptyArray,e.prototype.docString="",e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=lt.create()),t.input!=null&&t.input.length)for(var i=0;i<t.input.length;++i)o.uint32(10).string(t.input[i]);if(t.output!=null&&t.output.length)for(var i=0;i<t.output.length;++i)o.uint32(18).string(t.output[i]);if(t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(26).string(t.name),t.opType!=null&&Object.hasOwnProperty.call(t,"opType")&&o.uint32(34).string(t.opType),t.attribute!=null&&t.attribute.length)for(var i=0;i<t.attribute.length;++i)T.onnx.AttributeProto.encode(t.attribute[i],o.uint32(42).fork()).ldelim();return t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(50).string(t.docString),t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(58).string(t.domain),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Z||(t=Z.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.NodeProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.input&&u.input.length||(u.input=[]),u.input.push(t.string());break}case 2:{u.output&&u.output.length||(u.output=[]),u.output.push(t.string());break}case 3:{u.name=t.string();break}case 4:{u.opType=t.string();break}case 7:{u.domain=t.string();break}case 5:{u.attribute&&u.attribute.length||(u.attribute=[]),u.attribute.push(T.onnx.AttributeProto.decode(t,t.uint32()));break}case 6:{u.docString=t.string();break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof Z||(t=new Z(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var o=0;o<t.input.length;++o)if(!A.isString(t.input[o]))return"input: string[] expected"}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(var o=0;o<t.output.length;++o)if(!A.isString(t.output[o]))return"output: string[] expected"}if(t.name!=null&&t.hasOwnProperty("name")&&!A.isString(t.name))return"name: string expected";if(t.opType!=null&&t.hasOwnProperty("opType")&&!A.isString(t.opType))return"opType: string expected";if(t.domain!=null&&t.hasOwnProperty("domain")&&!A.isString(t.domain))return"domain: string expected";if(t.attribute!=null&&t.hasOwnProperty("attribute")){if(!Array.isArray(t.attribute))return"attribute: array expected";for(var o=0;o<t.attribute.length;++o){var i=T.onnx.AttributeProto.verify(t.attribute[o]);if(i)return"attribute."+i}}return t.docString!=null&&t.hasOwnProperty("docString")&&!A.isString(t.docString)?"docString: string expected":null},e.fromObject=function(t){if(t instanceof T.onnx.NodeProto)return t;var o=new T.onnx.NodeProto;if(t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.NodeProto.input: array expected");o.input=[];for(var i=0;i<t.input.length;++i)o.input[i]=String(t.input[i])}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.NodeProto.output: array expected");o.output=[];for(var i=0;i<t.output.length;++i)o.output[i]=String(t.output[i])}if(t.name!=null&&(o.name=String(t.name)),t.opType!=null&&(o.opType=String(t.opType)),t.domain!=null&&(o.domain=String(t.domain)),t.attribute){if(!Array.isArray(t.attribute))throw TypeError(".onnx.NodeProto.attribute: array expected");o.attribute=[];for(var i=0;i<t.attribute.length;++i){if(typeof t.attribute[i]!="object")throw TypeError(".onnx.NodeProto.attribute: object expected");o.attribute[i]=T.onnx.AttributeProto.fromObject(t.attribute[i])}}return t.docString!=null&&(o.docString=String(t.docString)),o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.input=[],i.output=[],i.attribute=[]),o.defaults&&(i.name="",i.opType="",i.docString="",i.domain=""),t.input&&t.input.length){i.input=[];for(var u=0;u<t.input.length;++u)i.input[u]=t.input[u]}if(t.output&&t.output.length){i.output=[];for(var u=0;u<t.output.length;++u)i.output[u]=t.output[u]}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.opType!=null&&t.hasOwnProperty("opType")&&(i.opType=t.opType),t.attribute&&t.attribute.length){i.attribute=[];for(var u=0;u<t.attribute.length;++u)i.attribute[u]=T.onnx.AttributeProto.toObject(t.attribute[u],o)}return t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.NodeProto"},e}(),r.TrainingInfoProto=function(){function e(n){if(this.initializationBinding=[],this.updateBinding=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.initialization=null,e.prototype.algorithm=null,e.prototype.initializationBinding=A.emptyArray,e.prototype.updateBinding=A.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=lt.create()),t.initialization!=null&&Object.hasOwnProperty.call(t,"initialization")&&T.onnx.GraphProto.encode(t.initialization,o.uint32(10).fork()).ldelim(),t.algorithm!=null&&Object.hasOwnProperty.call(t,"algorithm")&&T.onnx.GraphProto.encode(t.algorithm,o.uint32(18).fork()).ldelim(),t.initializationBinding!=null&&t.initializationBinding.length)for(var i=0;i<t.initializationBinding.length;++i)T.onnx.StringStringEntryProto.encode(t.initializationBinding[i],o.uint32(26).fork()).ldelim();if(t.updateBinding!=null&&t.updateBinding.length)for(var i=0;i<t.updateBinding.length;++i)T.onnx.StringStringEntryProto.encode(t.updateBinding[i],o.uint32(34).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Z||(t=Z.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.TrainingInfoProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.initialization=T.onnx.GraphProto.decode(t,t.uint32());break}case 2:{u.algorithm=T.onnx.GraphProto.decode(t,t.uint32());break}case 3:{u.initializationBinding&&u.initializationBinding.length||(u.initializationBinding=[]),u.initializationBinding.push(T.onnx.StringStringEntryProto.decode(t,t.uint32()));break}case 4:{u.updateBinding&&u.updateBinding.length||(u.updateBinding=[]),u.updateBinding.push(T.onnx.StringStringEntryProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof Z||(t=new Z(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.initialization!=null&&t.hasOwnProperty("initialization")){var o=T.onnx.GraphProto.verify(t.initialization);if(o)return"initialization."+o}if(t.algorithm!=null&&t.hasOwnProperty("algorithm")){var o=T.onnx.GraphProto.verify(t.algorithm);if(o)return"algorithm."+o}if(t.initializationBinding!=null&&t.hasOwnProperty("initializationBinding")){if(!Array.isArray(t.initializationBinding))return"initializationBinding: array expected";for(var i=0;i<t.initializationBinding.length;++i){var o=T.onnx.StringStringEntryProto.verify(t.initializationBinding[i]);if(o)return"initializationBinding."+o}}if(t.updateBinding!=null&&t.hasOwnProperty("updateBinding")){if(!Array.isArray(t.updateBinding))return"updateBinding: array expected";for(var i=0;i<t.updateBinding.length;++i){var o=T.onnx.StringStringEntryProto.verify(t.updateBinding[i]);if(o)return"updateBinding."+o}}return null},e.fromObject=function(t){if(t instanceof T.onnx.TrainingInfoProto)return t;var o=new T.onnx.TrainingInfoProto;if(t.initialization!=null){if(typeof t.initialization!="object")throw TypeError(".onnx.TrainingInfoProto.initialization: object expected");o.initialization=T.onnx.GraphProto.fromObject(t.initialization)}if(t.algorithm!=null){if(typeof t.algorithm!="object")throw TypeError(".onnx.TrainingInfoProto.algorithm: object expected");o.algorithm=T.onnx.GraphProto.fromObject(t.algorithm)}if(t.initializationBinding){if(!Array.isArray(t.initializationBinding))throw TypeError(".onnx.TrainingInfoProto.initializationBinding: array expected");o.initializationBinding=[];for(var i=0;i<t.initializationBinding.length;++i){if(typeof t.initializationBinding[i]!="object")throw TypeError(".onnx.TrainingInfoProto.initializationBinding: object expected");o.initializationBinding[i]=T.onnx.StringStringEntryProto.fromObject(t.initializationBinding[i])}}if(t.updateBinding){if(!Array.isArray(t.updateBinding))throw TypeError(".onnx.TrainingInfoProto.updateBinding: array expected");o.updateBinding=[];for(var i=0;i<t.updateBinding.length;++i){if(typeof t.updateBinding[i]!="object")throw TypeError(".onnx.TrainingInfoProto.updateBinding: object expected");o.updateBinding[i]=T.onnx.StringStringEntryProto.fromObject(t.updateBinding[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.initializationBinding=[],i.updateBinding=[]),o.defaults&&(i.initialization=null,i.algorithm=null),t.initialization!=null&&t.hasOwnProperty("initialization")&&(i.initialization=T.onnx.GraphProto.toObject(t.initialization,o)),t.algorithm!=null&&t.hasOwnProperty("algorithm")&&(i.algorithm=T.onnx.GraphProto.toObject(t.algorithm,o)),t.initializationBinding&&t.initializationBinding.length){i.initializationBinding=[];for(var u=0;u<t.initializationBinding.length;++u)i.initializationBinding[u]=T.onnx.StringStringEntryProto.toObject(t.initializationBinding[u],o)}if(t.updateBinding&&t.updateBinding.length){i.updateBinding=[];for(var u=0;u<t.updateBinding.length;++u)i.updateBinding[u]=T.onnx.StringStringEntryProto.toObject(t.updateBinding[u],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TrainingInfoProto"},e}(),r.ModelProto=function(){function e(n){if(this.opsetImport=[],this.metadataProps=[],this.trainingInfo=[],this.functions=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.irVersion=A.Long?A.Long.fromBits(0,0,!1):0,e.prototype.opsetImport=A.emptyArray,e.prototype.producerName="",e.prototype.producerVersion="",e.prototype.domain="",e.prototype.modelVersion=A.Long?A.Long.fromBits(0,0,!1):0,e.prototype.docString="",e.prototype.graph=null,e.prototype.metadataProps=A.emptyArray,e.prototype.trainingInfo=A.emptyArray,e.prototype.functions=A.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=lt.create()),t.irVersion!=null&&Object.hasOwnProperty.call(t,"irVersion")&&o.uint32(8).int64(t.irVersion),t.producerName!=null&&Object.hasOwnProperty.call(t,"producerName")&&o.uint32(18).string(t.producerName),t.producerVersion!=null&&Object.hasOwnProperty.call(t,"producerVersion")&&o.uint32(26).string(t.producerVersion),t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(34).string(t.domain),t.modelVersion!=null&&Object.hasOwnProperty.call(t,"modelVersion")&&o.uint32(40).int64(t.modelVersion),t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(50).string(t.docString),t.graph!=null&&Object.hasOwnProperty.call(t,"graph")&&T.onnx.GraphProto.encode(t.graph,o.uint32(58).fork()).ldelim(),t.opsetImport!=null&&t.opsetImport.length)for(var i=0;i<t.opsetImport.length;++i)T.onnx.OperatorSetIdProto.encode(t.opsetImport[i],o.uint32(66).fork()).ldelim();if(t.metadataProps!=null&&t.metadataProps.length)for(var i=0;i<t.metadataProps.length;++i)T.onnx.StringStringEntryProto.encode(t.metadataProps[i],o.uint32(114).fork()).ldelim();if(t.trainingInfo!=null&&t.trainingInfo.length)for(var i=0;i<t.trainingInfo.length;++i)T.onnx.TrainingInfoProto.encode(t.trainingInfo[i],o.uint32(162).fork()).ldelim();if(t.functions!=null&&t.functions.length)for(var i=0;i<t.functions.length;++i)T.onnx.FunctionProto.encode(t.functions[i],o.uint32(202).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Z||(t=Z.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.ModelProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.irVersion=t.int64();break}case 8:{u.opsetImport&&u.opsetImport.length||(u.opsetImport=[]),u.opsetImport.push(T.onnx.OperatorSetIdProto.decode(t,t.uint32()));break}case 2:{u.producerName=t.string();break}case 3:{u.producerVersion=t.string();break}case 4:{u.domain=t.string();break}case 5:{u.modelVersion=t.int64();break}case 6:{u.docString=t.string();break}case 7:{u.graph=T.onnx.GraphProto.decode(t,t.uint32());break}case 14:{u.metadataProps&&u.metadataProps.length||(u.metadataProps=[]),u.metadataProps.push(T.onnx.StringStringEntryProto.decode(t,t.uint32()));break}case 20:{u.trainingInfo&&u.trainingInfo.length||(u.trainingInfo=[]),u.trainingInfo.push(T.onnx.TrainingInfoProto.decode(t,t.uint32()));break}case 25:{u.functions&&u.functions.length||(u.functions=[]),u.functions.push(T.onnx.FunctionProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof Z||(t=new Z(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.irVersion!=null&&t.hasOwnProperty("irVersion")&&!A.isInteger(t.irVersion)&&!(t.irVersion&&A.isInteger(t.irVersion.low)&&A.isInteger(t.irVersion.high)))return"irVersion: integer|Long expected";if(t.opsetImport!=null&&t.hasOwnProperty("opsetImport")){if(!Array.isArray(t.opsetImport))return"opsetImport: array expected";for(var o=0;o<t.opsetImport.length;++o){var i=T.onnx.OperatorSetIdProto.verify(t.opsetImport[o]);if(i)return"opsetImport."+i}}if(t.producerName!=null&&t.hasOwnProperty("producerName")&&!A.isString(t.producerName))return"producerName: string expected";if(t.producerVersion!=null&&t.hasOwnProperty("producerVersion")&&!A.isString(t.producerVersion))return"producerVersion: string expected";if(t.domain!=null&&t.hasOwnProperty("domain")&&!A.isString(t.domain))return"domain: string expected";if(t.modelVersion!=null&&t.hasOwnProperty("modelVersion")&&!A.isInteger(t.modelVersion)&&!(t.modelVersion&&A.isInteger(t.modelVersion.low)&&A.isInteger(t.modelVersion.high)))return"modelVersion: integer|Long expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!A.isString(t.docString))return"docString: string expected";if(t.graph!=null&&t.hasOwnProperty("graph")){var i=T.onnx.GraphProto.verify(t.graph);if(i)return"graph."+i}if(t.metadataProps!=null&&t.hasOwnProperty("metadataProps")){if(!Array.isArray(t.metadataProps))return"metadataProps: array expected";for(var o=0;o<t.metadataProps.length;++o){var i=T.onnx.StringStringEntryProto.verify(t.metadataProps[o]);if(i)return"metadataProps."+i}}if(t.trainingInfo!=null&&t.hasOwnProperty("trainingInfo")){if(!Array.isArray(t.trainingInfo))return"trainingInfo: array expected";for(var o=0;o<t.trainingInfo.length;++o){var i=T.onnx.TrainingInfoProto.verify(t.trainingInfo[o]);if(i)return"trainingInfo."+i}}if(t.functions!=null&&t.hasOwnProperty("functions")){if(!Array.isArray(t.functions))return"functions: array expected";for(var o=0;o<t.functions.length;++o){var i=T.onnx.FunctionProto.verify(t.functions[o]);if(i)return"functions."+i}}return null},e.fromObject=function(t){if(t instanceof T.onnx.ModelProto)return t;var o=new T.onnx.ModelProto;if(t.irVersion!=null&&(A.Long?(o.irVersion=A.Long.fromValue(t.irVersion)).unsigned=!1:typeof t.irVersion=="string"?o.irVersion=parseInt(t.irVersion,10):typeof t.irVersion=="number"?o.irVersion=t.irVersion:typeof t.irVersion=="object"&&(o.irVersion=new A.LongBits(t.irVersion.low>>>0,t.irVersion.high>>>0).toNumber())),t.opsetImport){if(!Array.isArray(t.opsetImport))throw TypeError(".onnx.ModelProto.opsetImport: array expected");o.opsetImport=[];for(var i=0;i<t.opsetImport.length;++i){if(typeof t.opsetImport[i]!="object")throw TypeError(".onnx.ModelProto.opsetImport: object expected");o.opsetImport[i]=T.onnx.OperatorSetIdProto.fromObject(t.opsetImport[i])}}if(t.producerName!=null&&(o.producerName=String(t.producerName)),t.producerVersion!=null&&(o.producerVersion=String(t.producerVersion)),t.domain!=null&&(o.domain=String(t.domain)),t.modelVersion!=null&&(A.Long?(o.modelVersion=A.Long.fromValue(t.modelVersion)).unsigned=!1:typeof t.modelVersion=="string"?o.modelVersion=parseInt(t.modelVersion,10):typeof t.modelVersion=="number"?o.modelVersion=t.modelVersion:typeof t.modelVersion=="object"&&(o.modelVersion=new A.LongBits(t.modelVersion.low>>>0,t.modelVersion.high>>>0).toNumber())),t.docString!=null&&(o.docString=String(t.docString)),t.graph!=null){if(typeof t.graph!="object")throw TypeError(".onnx.ModelProto.graph: object expected");o.graph=T.onnx.GraphProto.fromObject(t.graph)}if(t.metadataProps){if(!Array.isArray(t.metadataProps))throw TypeError(".onnx.ModelProto.metadataProps: array expected");o.metadataProps=[];for(var i=0;i<t.metadataProps.length;++i){if(typeof t.metadataProps[i]!="object")throw TypeError(".onnx.ModelProto.metadataProps: object expected");o.metadataProps[i]=T.onnx.StringStringEntryProto.fromObject(t.metadataProps[i])}}if(t.trainingInfo){if(!Array.isArray(t.trainingInfo))throw TypeError(".onnx.ModelProto.trainingInfo: array expected");o.trainingInfo=[];for(var i=0;i<t.trainingInfo.length;++i){if(typeof t.trainingInfo[i]!="object")throw TypeError(".onnx.ModelProto.trainingInfo: object expected");o.trainingInfo[i]=T.onnx.TrainingInfoProto.fromObject(t.trainingInfo[i])}}if(t.functions){if(!Array.isArray(t.functions))throw TypeError(".onnx.ModelProto.functions: array expected");o.functions=[];for(var i=0;i<t.functions.length;++i){if(typeof t.functions[i]!="object")throw TypeError(".onnx.ModelProto.functions: object expected");o.functions[i]=T.onnx.FunctionProto.fromObject(t.functions[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.opsetImport=[],i.metadataProps=[],i.trainingInfo=[],i.functions=[]),o.defaults){if(A.Long){var u=new A.Long(0,0,!1);i.irVersion=o.longs===String?u.toString():o.longs===Number?u.toNumber():u}else i.irVersion=o.longs===String?"0":0;if(i.producerName="",i.producerVersion="",i.domain="",A.Long){var u=new A.Long(0,0,!1);i.modelVersion=o.longs===String?u.toString():o.longs===Number?u.toNumber():u}else i.modelVersion=o.longs===String?"0":0;i.docString="",i.graph=null}if(t.irVersion!=null&&t.hasOwnProperty("irVersion")&&(typeof t.irVersion=="number"?i.irVersion=o.longs===String?String(t.irVersion):t.irVersion:i.irVersion=o.longs===String?A.Long.prototype.toString.call(t.irVersion):o.longs===Number?new A.LongBits(t.irVersion.low>>>0,t.irVersion.high>>>0).toNumber():t.irVersion),t.producerName!=null&&t.hasOwnProperty("producerName")&&(i.producerName=t.producerName),t.producerVersion!=null&&t.hasOwnProperty("producerVersion")&&(i.producerVersion=t.producerVersion),t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),t.modelVersion!=null&&t.hasOwnProperty("modelVersion")&&(typeof t.modelVersion=="number"?i.modelVersion=o.longs===String?String(t.modelVersion):t.modelVersion:i.modelVersion=o.longs===String?A.Long.prototype.toString.call(t.modelVersion):o.longs===Number?new A.LongBits(t.modelVersion.low>>>0,t.modelVersion.high>>>0).toNumber():t.modelVersion),t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.graph!=null&&t.hasOwnProperty("graph")&&(i.graph=T.onnx.GraphProto.toObject(t.graph,o)),t.opsetImport&&t.opsetImport.length){i.opsetImport=[];for(var a=0;a<t.opsetImport.length;++a)i.opsetImport[a]=T.onnx.OperatorSetIdProto.toObject(t.opsetImport[a],o)}if(t.metadataProps&&t.metadataProps.length){i.metadataProps=[];for(var a=0;a<t.metadataProps.length;++a)i.metadataProps[a]=T.onnx.StringStringEntryProto.toObject(t.metadataProps[a],o)}if(t.trainingInfo&&t.trainingInfo.length){i.trainingInfo=[];for(var a=0;a<t.trainingInfo.length;++a)i.trainingInfo[a]=T.onnx.TrainingInfoProto.toObject(t.trainingInfo[a],o)}if(t.functions&&t.functions.length){i.functions=[];for(var a=0;a<t.functions.length;++a)i.functions[a]=T.onnx.FunctionProto.toObject(t.functions[a],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.ModelProto"},e}(),r.StringStringEntryProto=function(){function e(n){if(n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.key="",e.prototype.value="",e.create=function(t){return new e(t)},e.encode=function(t,o){return o||(o=lt.create()),t.key!=null&&Object.hasOwnProperty.call(t,"key")&&o.uint32(10).string(t.key),t.value!=null&&Object.hasOwnProperty.call(t,"value")&&o.uint32(18).string(t.value),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Z||(t=Z.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.StringStringEntryProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.key=t.string();break}case 2:{u.value=t.string();break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof Z||(t=new Z(t)),this.decode(t,t.uint32())},e.verify=function(t){return typeof t!="object"||t===null?"object expected":t.key!=null&&t.hasOwnProperty("key")&&!A.isString(t.key)?"key: string expected":t.value!=null&&t.hasOwnProperty("value")&&!A.isString(t.value)?"value: string expected":null},e.fromObject=function(t){if(t instanceof T.onnx.StringStringEntryProto)return t;var o=new T.onnx.StringStringEntryProto;return t.key!=null&&(o.key=String(t.key)),t.value!=null&&(o.value=String(t.value)),o},e.toObject=function(t,o){o||(o={});var i={};return o.defaults&&(i.key="",i.value=""),t.key!=null&&t.hasOwnProperty("key")&&(i.key=t.key),t.value!=null&&t.hasOwnProperty("value")&&(i.value=t.value),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.StringStringEntryProto"},e}(),r.TensorAnnotation=function(){function e(n){if(this.quantParameterTensorNames=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.tensorName="",e.prototype.quantParameterTensorNames=A.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=lt.create()),t.tensorName!=null&&Object.hasOwnProperty.call(t,"tensorName")&&o.uint32(10).string(t.tensorName),t.quantParameterTensorNames!=null&&t.quantParameterTensorNames.length)for(var i=0;i<t.quantParameterTensorNames.length;++i)T.onnx.StringStringEntryProto.encode(t.quantParameterTensorNames[i],o.uint32(18).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Z||(t=Z.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.TensorAnnotation;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.tensorName=t.string();break}case 2:{u.quantParameterTensorNames&&u.quantParameterTensorNames.length||(u.quantParameterTensorNames=[]),u.quantParameterTensorNames.push(T.onnx.StringStringEntryProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof Z||(t=new Z(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.tensorName!=null&&t.hasOwnProperty("tensorName")&&!A.isString(t.tensorName))return"tensorName: string expected";if(t.quantParameterTensorNames!=null&&t.hasOwnProperty("quantParameterTensorNames")){if(!Array.isArray(t.quantParameterTensorNames))return"quantParameterTensorNames: array expected";for(var o=0;o<t.quantParameterTensorNames.length;++o){var i=T.onnx.StringStringEntryProto.verify(t.quantParameterTensorNames[o]);if(i)return"quantParameterTensorNames."+i}}return null},e.fromObject=function(t){if(t instanceof T.onnx.TensorAnnotation)return t;var o=new T.onnx.TensorAnnotation;if(t.tensorName!=null&&(o.tensorName=String(t.tensorName)),t.quantParameterTensorNames){if(!Array.isArray(t.quantParameterTensorNames))throw TypeError(".onnx.TensorAnnotation.quantParameterTensorNames: array expected");o.quantParameterTensorNames=[];for(var i=0;i<t.quantParameterTensorNames.length;++i){if(typeof t.quantParameterTensorNames[i]!="object")throw TypeError(".onnx.TensorAnnotation.quantParameterTensorNames: object expected");o.quantParameterTensorNames[i]=T.onnx.StringStringEntryProto.fromObject(t.quantParameterTensorNames[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.quantParameterTensorNames=[]),o.defaults&&(i.tensorName=""),t.tensorName!=null&&t.hasOwnProperty("tensorName")&&(i.tensorName=t.tensorName),t.quantParameterTensorNames&&t.quantParameterTensorNames.length){i.quantParameterTensorNames=[];for(var u=0;u<t.quantParameterTensorNames.length;++u)i.quantParameterTensorNames[u]=T.onnx.StringStringEntryProto.toObject(t.quantParameterTensorNames[u],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TensorAnnotation"},e}(),r.GraphProto=function(){function e(n){if(this.node=[],this.initializer=[],this.sparseInitializer=[],this.input=[],this.output=[],this.valueInfo=[],this.quantizationAnnotation=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.node=A.emptyArray,e.prototype.name="",e.prototype.initializer=A.emptyArray,e.prototype.sparseInitializer=A.emptyArray,e.prototype.docString="",e.prototype.input=A.emptyArray,e.prototype.output=A.emptyArray,e.prototype.valueInfo=A.emptyArray,e.prototype.quantizationAnnotation=A.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=lt.create()),t.node!=null&&t.node.length)for(var i=0;i<t.node.length;++i)T.onnx.NodeProto.encode(t.node[i],o.uint32(10).fork()).ldelim();if(t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(18).string(t.name),t.initializer!=null&&t.initializer.length)for(var i=0;i<t.initializer.length;++i)T.onnx.TensorProto.encode(t.initializer[i],o.uint32(42).fork()).ldelim();if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(82).string(t.docString),t.input!=null&&t.input.length)for(var i=0;i<t.input.length;++i)T.onnx.ValueInfoProto.encode(t.input[i],o.uint32(90).fork()).ldelim();if(t.output!=null&&t.output.length)for(var i=0;i<t.output.length;++i)T.onnx.ValueInfoProto.encode(t.output[i],o.uint32(98).fork()).ldelim();if(t.valueInfo!=null&&t.valueInfo.length)for(var i=0;i<t.valueInfo.length;++i)T.onnx.ValueInfoProto.encode(t.valueInfo[i],o.uint32(106).fork()).ldelim();if(t.quantizationAnnotation!=null&&t.quantizationAnnotation.length)for(var i=0;i<t.quantizationAnnotation.length;++i)T.onnx.TensorAnnotation.encode(t.quantizationAnnotation[i],o.uint32(114).fork()).ldelim();if(t.sparseInitializer!=null&&t.sparseInitializer.length)for(var i=0;i<t.sparseInitializer.length;++i)T.onnx.SparseTensorProto.encode(t.sparseInitializer[i],o.uint32(122).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Z||(t=Z.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.GraphProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.node&&u.node.length||(u.node=[]),u.node.push(T.onnx.NodeProto.decode(t,t.uint32()));break}case 2:{u.name=t.string();break}case 5:{u.initializer&&u.initializer.length||(u.initializer=[]),u.initializer.push(T.onnx.TensorProto.decode(t,t.uint32()));break}case 15:{u.sparseInitializer&&u.sparseInitializer.length||(u.sparseInitializer=[]),u.sparseInitializer.push(T.onnx.SparseTensorProto.decode(t,t.uint32()));break}case 10:{u.docString=t.string();break}case 11:{u.input&&u.input.length||(u.input=[]),u.input.push(T.onnx.ValueInfoProto.decode(t,t.uint32()));break}case 12:{u.output&&u.output.length||(u.output=[]),u.output.push(T.onnx.ValueInfoProto.decode(t,t.uint32()));break}case 13:{u.valueInfo&&u.valueInfo.length||(u.valueInfo=[]),u.valueInfo.push(T.onnx.ValueInfoProto.decode(t,t.uint32()));break}case 14:{u.quantizationAnnotation&&u.quantizationAnnotation.length||(u.quantizationAnnotation=[]),u.quantizationAnnotation.push(T.onnx.TensorAnnotation.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof Z||(t=new Z(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.node!=null&&t.hasOwnProperty("node")){if(!Array.isArray(t.node))return"node: array expected";for(var o=0;o<t.node.length;++o){var i=T.onnx.NodeProto.verify(t.node[o]);if(i)return"node."+i}}if(t.name!=null&&t.hasOwnProperty("name")&&!A.isString(t.name))return"name: string expected";if(t.initializer!=null&&t.hasOwnProperty("initializer")){if(!Array.isArray(t.initializer))return"initializer: array expected";for(var o=0;o<t.initializer.length;++o){var i=T.onnx.TensorProto.verify(t.initializer[o]);if(i)return"initializer."+i}}if(t.sparseInitializer!=null&&t.hasOwnProperty("sparseInitializer")){if(!Array.isArray(t.sparseInitializer))return"sparseInitializer: array expected";for(var o=0;o<t.sparseInitializer.length;++o){var i=T.onnx.SparseTensorProto.verify(t.sparseInitializer[o]);if(i)return"sparseInitializer."+i}}if(t.docString!=null&&t.hasOwnProperty("docString")&&!A.isString(t.docString))return"docString: string expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var o=0;o<t.input.length;++o){var i=T.onnx.ValueInfoProto.verify(t.input[o]);if(i)return"input."+i}}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(var o=0;o<t.output.length;++o){var i=T.onnx.ValueInfoProto.verify(t.output[o]);if(i)return"output."+i}}if(t.valueInfo!=null&&t.hasOwnProperty("valueInfo")){if(!Array.isArray(t.valueInfo))return"valueInfo: array expected";for(var o=0;o<t.valueInfo.length;++o){var i=T.onnx.ValueInfoProto.verify(t.valueInfo[o]);if(i)return"valueInfo."+i}}if(t.quantizationAnnotation!=null&&t.hasOwnProperty("quantizationAnnotation")){if(!Array.isArray(t.quantizationAnnotation))return"quantizationAnnotation: array expected";for(var o=0;o<t.quantizationAnnotation.length;++o){var i=T.onnx.TensorAnnotation.verify(t.quantizationAnnotation[o]);if(i)return"quantizationAnnotation."+i}}return null},e.fromObject=function(t){if(t instanceof T.onnx.GraphProto)return t;var o=new T.onnx.GraphProto;if(t.node){if(!Array.isArray(t.node))throw TypeError(".onnx.GraphProto.node: array expected");o.node=[];for(var i=0;i<t.node.length;++i){if(typeof t.node[i]!="object")throw TypeError(".onnx.GraphProto.node: object expected");o.node[i]=T.onnx.NodeProto.fromObject(t.node[i])}}if(t.name!=null&&(o.name=String(t.name)),t.initializer){if(!Array.isArray(t.initializer))throw TypeError(".onnx.GraphProto.initializer: array expected");o.initializer=[];for(var i=0;i<t.initializer.length;++i){if(typeof t.initializer[i]!="object")throw TypeError(".onnx.GraphProto.initializer: object expected");o.initializer[i]=T.onnx.TensorProto.fromObject(t.initializer[i])}}if(t.sparseInitializer){if(!Array.isArray(t.sparseInitializer))throw TypeError(".onnx.GraphProto.sparseInitializer: array expected");o.sparseInitializer=[];for(var i=0;i<t.sparseInitializer.length;++i){if(typeof t.sparseInitializer[i]!="object")throw TypeError(".onnx.GraphProto.sparseInitializer: object expected");o.sparseInitializer[i]=T.onnx.SparseTensorProto.fromObject(t.sparseInitializer[i])}}if(t.docString!=null&&(o.docString=String(t.docString)),t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.GraphProto.input: array expected");o.input=[];for(var i=0;i<t.input.length;++i){if(typeof t.input[i]!="object")throw TypeError(".onnx.GraphProto.input: object expected");o.input[i]=T.onnx.ValueInfoProto.fromObject(t.input[i])}}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.GraphProto.output: array expected");o.output=[];for(var i=0;i<t.output.length;++i){if(typeof t.output[i]!="object")throw TypeError(".onnx.GraphProto.output: object expected");o.output[i]=T.onnx.ValueInfoProto.fromObject(t.output[i])}}if(t.valueInfo){if(!Array.isArray(t.valueInfo))throw TypeError(".onnx.GraphProto.valueInfo: array expected");o.valueInfo=[];for(var i=0;i<t.valueInfo.length;++i){if(typeof t.valueInfo[i]!="object")throw TypeError(".onnx.GraphProto.valueInfo: object expected");o.valueInfo[i]=T.onnx.ValueInfoProto.fromObject(t.valueInfo[i])}}if(t.quantizationAnnotation){if(!Array.isArray(t.quantizationAnnotation))throw TypeError(".onnx.GraphProto.quantizationAnnotation: array expected");o.quantizationAnnotation=[];for(var i=0;i<t.quantizationAnnotation.length;++i){if(typeof t.quantizationAnnotation[i]!="object")throw TypeError(".onnx.GraphProto.quantizationAnnotation: object expected");o.quantizationAnnotation[i]=T.onnx.TensorAnnotation.fromObject(t.quantizationAnnotation[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.node=[],i.initializer=[],i.input=[],i.output=[],i.valueInfo=[],i.quantizationAnnotation=[],i.sparseInitializer=[]),o.defaults&&(i.name="",i.docString=""),t.node&&t.node.length){i.node=[];for(var u=0;u<t.node.length;++u)i.node[u]=T.onnx.NodeProto.toObject(t.node[u],o)}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.initializer&&t.initializer.length){i.initializer=[];for(var u=0;u<t.initializer.length;++u)i.initializer[u]=T.onnx.TensorProto.toObject(t.initializer[u],o)}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.input&&t.input.length){i.input=[];for(var u=0;u<t.input.length;++u)i.input[u]=T.onnx.ValueInfoProto.toObject(t.input[u],o)}if(t.output&&t.output.length){i.output=[];for(var u=0;u<t.output.length;++u)i.output[u]=T.onnx.ValueInfoProto.toObject(t.output[u],o)}if(t.valueInfo&&t.valueInfo.length){i.valueInfo=[];for(var u=0;u<t.valueInfo.length;++u)i.valueInfo[u]=T.onnx.ValueInfoProto.toObject(t.valueInfo[u],o)}if(t.quantizationAnnotation&&t.quantizationAnnotation.length){i.quantizationAnnotation=[];for(var u=0;u<t.quantizationAnnotation.length;++u)i.quantizationAnnotation[u]=T.onnx.TensorAnnotation.toObject(t.quantizationAnnotation[u],o)}if(t.sparseInitializer&&t.sparseInitializer.length){i.sparseInitializer=[];for(var u=0;u<t.sparseInitializer.length;++u)i.sparseInitializer[u]=T.onnx.SparseTensorProto.toObject(t.sparseInitializer[u],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.GraphProto"},e}(),r.TensorProto=function(){function e(n){if(this.dims=[],this.floatData=[],this.int32Data=[],this.stringData=[],this.int64Data=[],this.externalData=[],this.doubleData=[],this.uint64Data=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.dims=A.emptyArray,e.prototype.dataType=0,e.prototype.segment=null,e.prototype.floatData=A.emptyArray,e.prototype.int32Data=A.emptyArray,e.prototype.stringData=A.emptyArray,e.prototype.int64Data=A.emptyArray,e.prototype.name="",e.prototype.docString="",e.prototype.rawData=A.newBuffer([]),e.prototype.externalData=A.emptyArray,e.prototype.dataLocation=0,e.prototype.doubleData=A.emptyArray,e.prototype.uint64Data=A.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=lt.create()),t.dims!=null&&t.dims.length){o.uint32(10).fork();for(var i=0;i<t.dims.length;++i)o.int64(t.dims[i]);o.ldelim()}if(t.dataType!=null&&Object.hasOwnProperty.call(t,"dataType")&&o.uint32(16).int32(t.dataType),t.segment!=null&&Object.hasOwnProperty.call(t,"segment")&&T.onnx.TensorProto.Segment.encode(t.segment,o.uint32(26).fork()).ldelim(),t.floatData!=null&&t.floatData.length){o.uint32(34).fork();for(var i=0;i<t.floatData.length;++i)o.float(t.floatData[i]);o.ldelim()}if(t.int32Data!=null&&t.int32Data.length){o.uint32(42).fork();for(var i=0;i<t.int32Data.length;++i)o.int32(t.int32Data[i]);o.ldelim()}if(t.stringData!=null&&t.stringData.length)for(var i=0;i<t.stringData.length;++i)o.uint32(50).bytes(t.stringData[i]);if(t.int64Data!=null&&t.int64Data.length){o.uint32(58).fork();for(var i=0;i<t.int64Data.length;++i)o.int64(t.int64Data[i]);o.ldelim()}if(t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(66).string(t.name),t.rawData!=null&&Object.hasOwnProperty.call(t,"rawData")&&o.uint32(74).bytes(t.rawData),t.doubleData!=null&&t.doubleData.length){o.uint32(82).fork();for(var i=0;i<t.doubleData.length;++i)o.double(t.doubleData[i]);o.ldelim()}if(t.uint64Data!=null&&t.uint64Data.length){o.uint32(90).fork();for(var i=0;i<t.uint64Data.length;++i)o.uint64(t.uint64Data[i]);o.ldelim()}if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(98).string(t.docString),t.externalData!=null&&t.externalData.length)for(var i=0;i<t.externalData.length;++i)T.onnx.StringStringEntryProto.encode(t.externalData[i],o.uint32(106).fork()).ldelim();return t.dataLocation!=null&&Object.hasOwnProperty.call(t,"dataLocation")&&o.uint32(112).int32(t.dataLocation),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Z||(t=Z.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.TensorProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{if(u.dims&&u.dims.length||(u.dims=[]),(a&7)===2)for(var s=t.uint32()+t.pos;t.pos<s;)u.dims.push(t.int64());else u.dims.push(t.int64());break}case 2:{u.dataType=t.int32();break}case 3:{u.segment=T.onnx.TensorProto.Segment.decode(t,t.uint32());break}case 4:{if(u.floatData&&u.floatData.length||(u.floatData=[]),(a&7)===2)for(var s=t.uint32()+t.pos;t.pos<s;)u.floatData.push(t.float());else u.floatData.push(t.float());break}case 5:{if(u.int32Data&&u.int32Data.length||(u.int32Data=[]),(a&7)===2)for(var s=t.uint32()+t.pos;t.pos<s;)u.int32Data.push(t.int32());else u.int32Data.push(t.int32());break}case 6:{u.stringData&&u.stringData.length||(u.stringData=[]),u.stringData.push(t.bytes());break}case 7:{if(u.int64Data&&u.int64Data.length||(u.int64Data=[]),(a&7)===2)for(var s=t.uint32()+t.pos;t.pos<s;)u.int64Data.push(t.int64());else u.int64Data.push(t.int64());break}case 8:{u.name=t.string();break}case 12:{u.docString=t.string();break}case 9:{u.rawData=t.bytes();break}case 13:{u.externalData&&u.externalData.length||(u.externalData=[]),u.externalData.push(T.onnx.StringStringEntryProto.decode(t,t.uint32()));break}case 14:{u.dataLocation=t.int32();break}case 10:{if(u.doubleData&&u.doubleData.length||(u.doubleData=[]),(a&7)===2)for(var s=t.uint32()+t.pos;t.pos<s;)u.doubleData.push(t.double());else u.doubleData.push(t.double());break}case 11:{if(u.uint64Data&&u.uint64Data.length||(u.uint64Data=[]),(a&7)===2)for(var s=t.uint32()+t.pos;t.pos<s;)u.uint64Data.push(t.uint64());else u.uint64Data.push(t.uint64());break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof Z||(t=new Z(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.dims!=null&&t.hasOwnProperty("dims")){if(!Array.isArray(t.dims))return"dims: array expected";for(var o=0;o<t.dims.length;++o)if(!A.isInteger(t.dims[o])&&!(t.dims[o]&&A.isInteger(t.dims[o].low)&&A.isInteger(t.dims[o].high)))return"dims: integer|Long[] expected"}if(t.dataType!=null&&t.hasOwnProperty("dataType")&&!A.isInteger(t.dataType))return"dataType: integer expected";if(t.segment!=null&&t.hasOwnProperty("segment")){var i=T.onnx.TensorProto.Segment.verify(t.segment);if(i)return"segment."+i}if(t.floatData!=null&&t.hasOwnProperty("floatData")){if(!Array.isArray(t.floatData))return"floatData: array expected";for(var o=0;o<t.floatData.length;++o)if(typeof t.floatData[o]!="number")return"floatData: number[] expected"}if(t.int32Data!=null&&t.hasOwnProperty("int32Data")){if(!Array.isArray(t.int32Data))return"int32Data: array expected";for(var o=0;o<t.int32Data.length;++o)if(!A.isInteger(t.int32Data[o]))return"int32Data: integer[] expected"}if(t.stringData!=null&&t.hasOwnProperty("stringData")){if(!Array.isArray(t.stringData))return"stringData: array expected";for(var o=0;o<t.stringData.length;++o)if(!(t.stringData[o]&&typeof t.stringData[o].length=="number"||A.isString(t.stringData[o])))return"stringData: buffer[] expected"}if(t.int64Data!=null&&t.hasOwnProperty("int64Data")){if(!Array.isArray(t.int64Data))return"int64Data: array expected";for(var o=0;o<t.int64Data.length;++o)if(!A.isInteger(t.int64Data[o])&&!(t.int64Data[o]&&A.isInteger(t.int64Data[o].low)&&A.isInteger(t.int64Data[o].high)))return"int64Data: integer|Long[] expected"}if(t.name!=null&&t.hasOwnProperty("name")&&!A.isString(t.name))return"name: string expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!A.isString(t.docString))return"docString: string expected";if(t.rawData!=null&&t.hasOwnProperty("rawData")&&!(t.rawData&&typeof t.rawData.length=="number"||A.isString(t.rawData)))return"rawData: buffer expected";if(t.externalData!=null&&t.hasOwnProperty("externalData")){if(!Array.isArray(t.externalData))return"externalData: array expected";for(var o=0;o<t.externalData.length;++o){var i=T.onnx.StringStringEntryProto.verify(t.externalData[o]);if(i)return"externalData."+i}}if(t.dataLocation!=null&&t.hasOwnProperty("dataLocation"))switch(t.dataLocation){default:return"dataLocation: enum value expected";case 0:case 1:break}if(t.doubleData!=null&&t.hasOwnProperty("doubleData")){if(!Array.isArray(t.doubleData))return"doubleData: array expected";for(var o=0;o<t.doubleData.length;++o)if(typeof t.doubleData[o]!="number")return"doubleData: number[] expected"}if(t.uint64Data!=null&&t.hasOwnProperty("uint64Data")){if(!Array.isArray(t.uint64Data))return"uint64Data: array expected";for(var o=0;o<t.uint64Data.length;++o)if(!A.isInteger(t.uint64Data[o])&&!(t.uint64Data[o]&&A.isInteger(t.uint64Data[o].low)&&A.isInteger(t.uint64Data[o].high)))return"uint64Data: integer|Long[] expected"}return null},e.fromObject=function(t){if(t instanceof T.onnx.TensorProto)return t;var o=new T.onnx.TensorProto;if(t.dims){if(!Array.isArray(t.dims))throw TypeError(".onnx.TensorProto.dims: array expected");o.dims=[];for(var i=0;i<t.dims.length;++i)A.Long?(o.dims[i]=A.Long.fromValue(t.dims[i])).unsigned=!1:typeof t.dims[i]=="string"?o.dims[i]=parseInt(t.dims[i],10):typeof t.dims[i]=="number"?o.dims[i]=t.dims[i]:typeof t.dims[i]=="object"&&(o.dims[i]=new A.LongBits(t.dims[i].low>>>0,t.dims[i].high>>>0).toNumber())}if(t.dataType!=null&&(o.dataType=t.dataType|0),t.segment!=null){if(typeof t.segment!="object")throw TypeError(".onnx.TensorProto.segment: object expected");o.segment=T.onnx.TensorProto.Segment.fromObject(t.segment)}if(t.floatData){if(!Array.isArray(t.floatData))throw TypeError(".onnx.TensorProto.floatData: array expected");o.floatData=[];for(var i=0;i<t.floatData.length;++i)o.floatData[i]=Number(t.floatData[i])}if(t.int32Data){if(!Array.isArray(t.int32Data))throw TypeError(".onnx.TensorProto.int32Data: array expected");o.int32Data=[];for(var i=0;i<t.int32Data.length;++i)o.int32Data[i]=t.int32Data[i]|0}if(t.stringData){if(!Array.isArray(t.stringData))throw TypeError(".onnx.TensorProto.stringData: array expected");o.stringData=[];for(var i=0;i<t.stringData.length;++i)typeof t.stringData[i]=="string"?A.base64.decode(t.stringData[i],o.stringData[i]=A.newBuffer(A.base64.length(t.stringData[i])),0):t.stringData[i].length>=0&&(o.stringData[i]=t.stringData[i])}if(t.int64Data){if(!Array.isArray(t.int64Data))throw TypeError(".onnx.TensorProto.int64Data: array expected");o.int64Data=[];for(var i=0;i<t.int64Data.length;++i)A.Long?(o.int64Data[i]=A.Long.fromValue(t.int64Data[i])).unsigned=!1:typeof t.int64Data[i]=="string"?o.int64Data[i]=parseInt(t.int64Data[i],10):typeof t.int64Data[i]=="number"?o.int64Data[i]=t.int64Data[i]:typeof t.int64Data[i]=="object"&&(o.int64Data[i]=new A.LongBits(t.int64Data[i].low>>>0,t.int64Data[i].high>>>0).toNumber())}if(t.name!=null&&(o.name=String(t.name)),t.docString!=null&&(o.docString=String(t.docString)),t.rawData!=null&&(typeof t.rawData=="string"?A.base64.decode(t.rawData,o.rawData=A.newBuffer(A.base64.length(t.rawData)),0):t.rawData.length>=0&&(o.rawData=t.rawData)),t.externalData){if(!Array.isArray(t.externalData))throw TypeError(".onnx.TensorProto.externalData: array expected");o.externalData=[];for(var i=0;i<t.externalData.length;++i){if(typeof t.externalData[i]!="object")throw TypeError(".onnx.TensorProto.externalData: object expected");o.externalData[i]=T.onnx.StringStringEntryProto.fromObject(t.externalData[i])}}switch(t.dataLocation){default:if(typeof t.dataLocation=="number"){o.dataLocation=t.dataLocation;break}break;case"DEFAULT":case 0:o.dataLocation=0;break;case"EXTERNAL":case 1:o.dataLocation=1;break}if(t.doubleData){if(!Array.isArray(t.doubleData))throw TypeError(".onnx.TensorProto.doubleData: array expected");o.doubleData=[];for(var i=0;i<t.doubleData.length;++i)o.doubleData[i]=Number(t.doubleData[i])}if(t.uint64Data){if(!Array.isArray(t.uint64Data))throw TypeError(".onnx.TensorProto.uint64Data: array expected");o.uint64Data=[];for(var i=0;i<t.uint64Data.length;++i)A.Long?(o.uint64Data[i]=A.Long.fromValue(t.uint64Data[i])).unsigned=!0:typeof t.uint64Data[i]=="string"?o.uint64Data[i]=parseInt(t.uint64Data[i],10):typeof t.uint64Data[i]=="number"?o.uint64Data[i]=t.uint64Data[i]:typeof t.uint64Data[i]=="object"&&(o.uint64Data[i]=new A.LongBits(t.uint64Data[i].low>>>0,t.uint64Data[i].high>>>0).toNumber(!0))}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.dims=[],i.floatData=[],i.int32Data=[],i.stringData=[],i.int64Data=[],i.doubleData=[],i.uint64Data=[],i.externalData=[]),o.defaults&&(i.dataType=0,i.segment=null,i.name="",o.bytes===String?i.rawData="":(i.rawData=[],o.bytes!==Array&&(i.rawData=A.newBuffer(i.rawData))),i.docString="",i.dataLocation=o.enums===String?"DEFAULT":0),t.dims&&t.dims.length){i.dims=[];for(var u=0;u<t.dims.length;++u)typeof t.dims[u]=="number"?i.dims[u]=o.longs===String?String(t.dims[u]):t.dims[u]:i.dims[u]=o.longs===String?A.Long.prototype.toString.call(t.dims[u]):o.longs===Number?new A.LongBits(t.dims[u].low>>>0,t.dims[u].high>>>0).toNumber():t.dims[u]}if(t.dataType!=null&&t.hasOwnProperty("dataType")&&(i.dataType=t.dataType),t.segment!=null&&t.hasOwnProperty("segment")&&(i.segment=T.onnx.TensorProto.Segment.toObject(t.segment,o)),t.floatData&&t.floatData.length){i.floatData=[];for(var u=0;u<t.floatData.length;++u)i.floatData[u]=o.json&&!isFinite(t.floatData[u])?String(t.floatData[u]):t.floatData[u]}if(t.int32Data&&t.int32Data.length){i.int32Data=[];for(var u=0;u<t.int32Data.length;++u)i.int32Data[u]=t.int32Data[u]}if(t.stringData&&t.stringData.length){i.stringData=[];for(var u=0;u<t.stringData.length;++u)i.stringData[u]=o.bytes===String?A.base64.encode(t.stringData[u],0,t.stringData[u].length):o.bytes===Array?Array.prototype.slice.call(t.stringData[u]):t.stringData[u]}if(t.int64Data&&t.int64Data.length){i.int64Data=[];for(var u=0;u<t.int64Data.length;++u)typeof t.int64Data[u]=="number"?i.int64Data[u]=o.longs===String?String(t.int64Data[u]):t.int64Data[u]:i.int64Data[u]=o.longs===String?A.Long.prototype.toString.call(t.int64Data[u]):o.longs===Number?new A.LongBits(t.int64Data[u].low>>>0,t.int64Data[u].high>>>0).toNumber():t.int64Data[u]}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.rawData!=null&&t.hasOwnProperty("rawData")&&(i.rawData=o.bytes===String?A.base64.encode(t.rawData,0,t.rawData.length):o.bytes===Array?Array.prototype.slice.call(t.rawData):t.rawData),t.doubleData&&t.doubleData.length){i.doubleData=[];for(var u=0;u<t.doubleData.length;++u)i.doubleData[u]=o.json&&!isFinite(t.doubleData[u])?String(t.doubleData[u]):t.doubleData[u]}if(t.uint64Data&&t.uint64Data.length){i.uint64Data=[];for(var u=0;u<t.uint64Data.length;++u)typeof t.uint64Data[u]=="number"?i.uint64Data[u]=o.longs===String?String(t.uint64Data[u]):t.uint64Data[u]:i.uint64Data[u]=o.longs===String?A.Long.prototype.toString.call(t.uint64Data[u]):o.longs===Number?new A.LongBits(t.uint64Data[u].low>>>0,t.uint64Data[u].high>>>0).toNumber(!0):t.uint64Data[u]}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.externalData&&t.externalData.length){i.externalData=[];for(var u=0;u<t.externalData.length;++u)i.externalData[u]=T.onnx.StringStringEntryProto.toObject(t.externalData[u],o)}return t.dataLocation!=null&&t.hasOwnProperty("dataLocation")&&(i.dataLocation=o.enums===String?T.onnx.TensorProto.DataLocation[t.dataLocation]===void 0?t.dataLocation:T.onnx.TensorProto.DataLocation[t.dataLocation]:t.dataLocation),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TensorProto"},e.DataType=function(){var n={},t=Object.create(n);return t[n[0]="UNDEFINED"]=0,t[n[1]="FLOAT"]=1,t[n[2]="UINT8"]=2,t[n[3]="INT8"]=3,t[n[4]="UINT16"]=4,t[n[5]="INT16"]=5,t[n[6]="INT32"]=6,t[n[7]="INT64"]=7,t[n[8]="STRING"]=8,t[n[9]="BOOL"]=9,t[n[10]="FLOAT16"]=10,t[n[11]="DOUBLE"]=11,t[n[12]="UINT32"]=12,t[n[13]="UINT64"]=13,t[n[14]="COMPLEX64"]=14,t[n[15]="COMPLEX128"]=15,t[n[16]="BFLOAT16"]=16,t[n[17]="FLOAT8E4M3FN"]=17,t[n[18]="FLOAT8E4M3FNUZ"]=18,t[n[19]="FLOAT8E5M2"]=19,t[n[20]="FLOAT8E5M2FNUZ"]=20,t}(),e.Segment=function(){function n(t){if(t)for(var o=Object.keys(t),i=0;i<o.length;++i)t[o[i]]!=null&&(this[o[i]]=t[o[i]])}return n.prototype.begin=A.Long?A.Long.fromBits(0,0,!1):0,n.prototype.end=A.Long?A.Long.fromBits(0,0,!1):0,n.create=function(o){return new n(o)},n.encode=function(o,i){return i||(i=lt.create()),o.begin!=null&&Object.hasOwnProperty.call(o,"begin")&&i.uint32(8).int64(o.begin),o.end!=null&&Object.hasOwnProperty.call(o,"end")&&i.uint32(16).int64(o.end),i},n.encodeDelimited=function(o,i){return this.encode(o,i).ldelim()},n.decode=function(o,i){o instanceof Z||(o=Z.create(o));for(var u=i===void 0?o.len:o.pos+i,a=new T.onnx.TensorProto.Segment;o.pos<u;){var s=o.uint32();switch(s>>>3){case 1:{a.begin=o.int64();break}case 2:{a.end=o.int64();break}default:o.skipType(s&7);break}}return a},n.decodeDelimited=function(o){return o instanceof Z||(o=new Z(o)),this.decode(o,o.uint32())},n.verify=function(o){return typeof o!="object"||o===null?"object expected":o.begin!=null&&o.hasOwnProperty("begin")&&!A.isInteger(o.begin)&&!(o.begin&&A.isInteger(o.begin.low)&&A.isInteger(o.begin.high))?"begin: integer|Long expected":o.end!=null&&o.hasOwnProperty("end")&&!A.isInteger(o.end)&&!(o.end&&A.isInteger(o.end.low)&&A.isInteger(o.end.high))?"end: integer|Long expected":null},n.fromObject=function(o){if(o instanceof T.onnx.TensorProto.Segment)return o;var i=new T.onnx.TensorProto.Segment;return o.begin!=null&&(A.Long?(i.begin=A.Long.fromValue(o.begin)).unsigned=!1:typeof o.begin=="string"?i.begin=parseInt(o.begin,10):typeof o.begin=="number"?i.begin=o.begin:typeof o.begin=="object"&&(i.begin=new A.LongBits(o.begin.low>>>0,o.begin.high>>>0).toNumber())),o.end!=null&&(A.Long?(i.end=A.Long.fromValue(o.end)).unsigned=!1:typeof o.end=="string"?i.end=parseInt(o.end,10):typeof o.end=="number"?i.end=o.end:typeof o.end=="object"&&(i.end=new A.LongBits(o.end.low>>>0,o.end.high>>>0).toNumber())),i},n.toObject=function(o,i){i||(i={});var u={};if(i.defaults){if(A.Long){var a=new A.Long(0,0,!1);u.begin=i.longs===String?a.toString():i.longs===Number?a.toNumber():a}else u.begin=i.longs===String?"0":0;if(A.Long){var a=new A.Long(0,0,!1);u.end=i.longs===String?a.toString():i.longs===Number?a.toNumber():a}else u.end=i.longs===String?"0":0}return o.begin!=null&&o.hasOwnProperty("begin")&&(typeof o.begin=="number"?u.begin=i.longs===String?String(o.begin):o.begin:u.begin=i.longs===String?A.Long.prototype.toString.call(o.begin):i.longs===Number?new A.LongBits(o.begin.low>>>0,o.begin.high>>>0).toNumber():o.begin),o.end!=null&&o.hasOwnProperty("end")&&(typeof o.end=="number"?u.end=i.longs===String?String(o.end):o.end:u.end=i.longs===String?A.Long.prototype.toString.call(o.end):i.longs===Number?new A.LongBits(o.end.low>>>0,o.end.high>>>0).toNumber():o.end),u},n.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},n.getTypeUrl=function(o){return o===void 0&&(o="type.googleapis.com"),o+"/onnx.TensorProto.Segment"},n}(),e.DataLocation=function(){var n={},t=Object.create(n);return t[n[0]="DEFAULT"]=0,t[n[1]="EXTERNAL"]=1,t}(),e}(),r.SparseTensorProto=function(){function e(n){if(this.dims=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.values=null,e.prototype.indices=null,e.prototype.dims=A.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=lt.create()),t.values!=null&&Object.hasOwnProperty.call(t,"values")&&T.onnx.TensorProto.encode(t.values,o.uint32(10).fork()).ldelim(),t.indices!=null&&Object.hasOwnProperty.call(t,"indices")&&T.onnx.TensorProto.encode(t.indices,o.uint32(18).fork()).ldelim(),t.dims!=null&&t.dims.length){o.uint32(26).fork();for(var i=0;i<t.dims.length;++i)o.int64(t.dims[i]);o.ldelim()}return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Z||(t=Z.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.SparseTensorProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.values=T.onnx.TensorProto.decode(t,t.uint32());break}case 2:{u.indices=T.onnx.TensorProto.decode(t,t.uint32());break}case 3:{if(u.dims&&u.dims.length||(u.dims=[]),(a&7)===2)for(var s=t.uint32()+t.pos;t.pos<s;)u.dims.push(t.int64());else u.dims.push(t.int64());break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof Z||(t=new Z(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.values!=null&&t.hasOwnProperty("values")){var o=T.onnx.TensorProto.verify(t.values);if(o)return"values."+o}if(t.indices!=null&&t.hasOwnProperty("indices")){var o=T.onnx.TensorProto.verify(t.indices);if(o)return"indices."+o}if(t.dims!=null&&t.hasOwnProperty("dims")){if(!Array.isArray(t.dims))return"dims: array expected";for(var i=0;i<t.dims.length;++i)if(!A.isInteger(t.dims[i])&&!(t.dims[i]&&A.isInteger(t.dims[i].low)&&A.isInteger(t.dims[i].high)))return"dims: integer|Long[] expected"}return null},e.fromObject=function(t){if(t instanceof T.onnx.SparseTensorProto)return t;var o=new T.onnx.SparseTensorProto;if(t.values!=null){if(typeof t.values!="object")throw TypeError(".onnx.SparseTensorProto.values: object expected");o.values=T.onnx.TensorProto.fromObject(t.values)}if(t.indices!=null){if(typeof t.indices!="object")throw TypeError(".onnx.SparseTensorProto.indices: object expected");o.indices=T.onnx.TensorProto.fromObject(t.indices)}if(t.dims){if(!Array.isArray(t.dims))throw TypeError(".onnx.SparseTensorProto.dims: array expected");o.dims=[];for(var i=0;i<t.dims.length;++i)A.Long?(o.dims[i]=A.Long.fromValue(t.dims[i])).unsigned=!1:typeof t.dims[i]=="string"?o.dims[i]=parseInt(t.dims[i],10):typeof t.dims[i]=="number"?o.dims[i]=t.dims[i]:typeof t.dims[i]=="object"&&(o.dims[i]=new A.LongBits(t.dims[i].low>>>0,t.dims[i].high>>>0).toNumber())}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.dims=[]),o.defaults&&(i.values=null,i.indices=null),t.values!=null&&t.hasOwnProperty("values")&&(i.values=T.onnx.TensorProto.toObject(t.values,o)),t.indices!=null&&t.hasOwnProperty("indices")&&(i.indices=T.onnx.TensorProto.toObject(t.indices,o)),t.dims&&t.dims.length){i.dims=[];for(var u=0;u<t.dims.length;++u)typeof t.dims[u]=="number"?i.dims[u]=o.longs===String?String(t.dims[u]):t.dims[u]:i.dims[u]=o.longs===String?A.Long.prototype.toString.call(t.dims[u]):o.longs===Number?new A.LongBits(t.dims[u].low>>>0,t.dims[u].high>>>0).toNumber():t.dims[u]}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.SparseTensorProto"},e}(),r.TensorShapeProto=function(){function e(n){if(this.dim=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.dim=A.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=lt.create()),t.dim!=null&&t.dim.length)for(var i=0;i<t.dim.length;++i)T.onnx.TensorShapeProto.Dimension.encode(t.dim[i],o.uint32(10).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Z||(t=Z.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.TensorShapeProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.dim&&u.dim.length||(u.dim=[]),u.dim.push(T.onnx.TensorShapeProto.Dimension.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof Z||(t=new Z(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.dim!=null&&t.hasOwnProperty("dim")){if(!Array.isArray(t.dim))return"dim: array expected";for(var o=0;o<t.dim.length;++o){var i=T.onnx.TensorShapeProto.Dimension.verify(t.dim[o]);if(i)return"dim."+i}}return null},e.fromObject=function(t){if(t instanceof T.onnx.TensorShapeProto)return t;var o=new T.onnx.TensorShapeProto;if(t.dim){if(!Array.isArray(t.dim))throw TypeError(".onnx.TensorShapeProto.dim: array expected");o.dim=[];for(var i=0;i<t.dim.length;++i){if(typeof t.dim[i]!="object")throw TypeError(".onnx.TensorShapeProto.dim: object expected");o.dim[i]=T.onnx.TensorShapeProto.Dimension.fromObject(t.dim[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.dim=[]),t.dim&&t.dim.length){i.dim=[];for(var u=0;u<t.dim.length;++u)i.dim[u]=T.onnx.TensorShapeProto.Dimension.toObject(t.dim[u],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TensorShapeProto"},e.Dimension=function(){function n(o){if(o)for(var i=Object.keys(o),u=0;u<i.length;++u)o[i[u]]!=null&&(this[i[u]]=o[i[u]])}n.prototype.dimValue=null,n.prototype.dimParam=null,n.prototype.denotation="";var t;return Object.defineProperty(n.prototype,"value",{get:A.oneOfGetter(t=["dimValue","dimParam"]),set:A.oneOfSetter(t)}),n.create=function(i){return new n(i)},n.encode=function(i,u){return u||(u=lt.create()),i.dimValue!=null&&Object.hasOwnProperty.call(i,"dimValue")&&u.uint32(8).int64(i.dimValue),i.dimParam!=null&&Object.hasOwnProperty.call(i,"dimParam")&&u.uint32(18).string(i.dimParam),i.denotation!=null&&Object.hasOwnProperty.call(i,"denotation")&&u.uint32(26).string(i.denotation),u},n.encodeDelimited=function(i,u){return this.encode(i,u).ldelim()},n.decode=function(i,u){i instanceof Z||(i=Z.create(i));for(var a=u===void 0?i.len:i.pos+u,s=new T.onnx.TensorShapeProto.Dimension;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{s.dimValue=i.int64();break}case 2:{s.dimParam=i.string();break}case 3:{s.denotation=i.string();break}default:i.skipType(l&7);break}}return s},n.decodeDelimited=function(i){return i instanceof Z||(i=new Z(i)),this.decode(i,i.uint32())},n.verify=function(i){if(typeof i!="object"||i===null)return"object expected";var u={};if(i.dimValue!=null&&i.hasOwnProperty("dimValue")&&(u.value=1,!A.isInteger(i.dimValue)&&!(i.dimValue&&A.isInteger(i.dimValue.low)&&A.isInteger(i.dimValue.high))))return"dimValue: integer|Long expected";if(i.dimParam!=null&&i.hasOwnProperty("dimParam")){if(u.value===1)return"value: multiple values";if(u.value=1,!A.isString(i.dimParam))return"dimParam: string expected"}return i.denotation!=null&&i.hasOwnProperty("denotation")&&!A.isString(i.denotation)?"denotation: string expected":null},n.fromObject=function(i){if(i instanceof T.onnx.TensorShapeProto.Dimension)return i;var u=new T.onnx.TensorShapeProto.Dimension;return i.dimValue!=null&&(A.Long?(u.dimValue=A.Long.fromValue(i.dimValue)).unsigned=!1:typeof i.dimValue=="string"?u.dimValue=parseInt(i.dimValue,10):typeof i.dimValue=="number"?u.dimValue=i.dimValue:typeof i.dimValue=="object"&&(u.dimValue=new A.LongBits(i.dimValue.low>>>0,i.dimValue.high>>>0).toNumber())),i.dimParam!=null&&(u.dimParam=String(i.dimParam)),i.denotation!=null&&(u.denotation=String(i.denotation)),u},n.toObject=function(i,u){u||(u={});var a={};return u.defaults&&(a.denotation=""),i.dimValue!=null&&i.hasOwnProperty("dimValue")&&(typeof i.dimValue=="number"?a.dimValue=u.longs===String?String(i.dimValue):i.dimValue:a.dimValue=u.longs===String?A.Long.prototype.toString.call(i.dimValue):u.longs===Number?new A.LongBits(i.dimValue.low>>>0,i.dimValue.high>>>0).toNumber():i.dimValue,u.oneofs&&(a.value="dimValue")),i.dimParam!=null&&i.hasOwnProperty("dimParam")&&(a.dimParam=i.dimParam,u.oneofs&&(a.value="dimParam")),i.denotation!=null&&i.hasOwnProperty("denotation")&&(a.denotation=i.denotation),a},n.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},n.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TensorShapeProto.Dimension"},n}(),e}(),r.TypeProto=function(){function e(t){if(t)for(var o=Object.keys(t),i=0;i<o.length;++i)t[o[i]]!=null&&(this[o[i]]=t[o[i]])}e.prototype.tensorType=null,e.prototype.sequenceType=null,e.prototype.mapType=null,e.prototype.optionalType=null,e.prototype.sparseTensorType=null,e.prototype.denotation="";var n;return Object.defineProperty(e.prototype,"value",{get:A.oneOfGetter(n=["tensorType","sequenceType","mapType","optionalType","sparseTensorType"]),set:A.oneOfSetter(n)}),e.create=function(o){return new e(o)},e.encode=function(o,i){return i||(i=lt.create()),o.tensorType!=null&&Object.hasOwnProperty.call(o,"tensorType")&&T.onnx.TypeProto.Tensor.encode(o.tensorType,i.uint32(10).fork()).ldelim(),o.sequenceType!=null&&Object.hasOwnProperty.call(o,"sequenceType")&&T.onnx.TypeProto.Sequence.encode(o.sequenceType,i.uint32(34).fork()).ldelim(),o.mapType!=null&&Object.hasOwnProperty.call(o,"mapType")&&T.onnx.TypeProto.Map.encode(o.mapType,i.uint32(42).fork()).ldelim(),o.denotation!=null&&Object.hasOwnProperty.call(o,"denotation")&&i.uint32(50).string(o.denotation),o.sparseTensorType!=null&&Object.hasOwnProperty.call(o,"sparseTensorType")&&T.onnx.TypeProto.SparseTensor.encode(o.sparseTensorType,i.uint32(66).fork()).ldelim(),o.optionalType!=null&&Object.hasOwnProperty.call(o,"optionalType")&&T.onnx.TypeProto.Optional.encode(o.optionalType,i.uint32(74).fork()).ldelim(),i},e.encodeDelimited=function(o,i){return this.encode(o,i).ldelim()},e.decode=function(o,i){o instanceof Z||(o=Z.create(o));for(var u=i===void 0?o.len:o.pos+i,a=new T.onnx.TypeProto;o.pos<u;){var s=o.uint32();switch(s>>>3){case 1:{a.tensorType=T.onnx.TypeProto.Tensor.decode(o,o.uint32());break}case 4:{a.sequenceType=T.onnx.TypeProto.Sequence.decode(o,o.uint32());break}case 5:{a.mapType=T.onnx.TypeProto.Map.decode(o,o.uint32());break}case 9:{a.optionalType=T.onnx.TypeProto.Optional.decode(o,o.uint32());break}case 8:{a.sparseTensorType=T.onnx.TypeProto.SparseTensor.decode(o,o.uint32());break}case 6:{a.denotation=o.string();break}default:o.skipType(s&7);break}}return a},e.decodeDelimited=function(o){return o instanceof Z||(o=new Z(o)),this.decode(o,o.uint32())},e.verify=function(o){if(typeof o!="object"||o===null)return"object expected";var i={};if(o.tensorType!=null&&o.hasOwnProperty("tensorType")){i.value=1;{var u=T.onnx.TypeProto.Tensor.verify(o.tensorType);if(u)return"tensorType."+u}}if(o.sequenceType!=null&&o.hasOwnProperty("sequenceType")){if(i.value===1)return"value: multiple values";i.value=1;{var u=T.onnx.TypeProto.Sequence.verify(o.sequenceType);if(u)return"sequenceType."+u}}if(o.mapType!=null&&o.hasOwnProperty("mapType")){if(i.value===1)return"value: multiple values";i.value=1;{var u=T.onnx.TypeProto.Map.verify(o.mapType);if(u)return"mapType."+u}}if(o.optionalType!=null&&o.hasOwnProperty("optionalType")){if(i.value===1)return"value: multiple values";i.value=1;{var u=T.onnx.TypeProto.Optional.verify(o.optionalType);if(u)return"optionalType."+u}}if(o.sparseTensorType!=null&&o.hasOwnProperty("sparseTensorType")){if(i.value===1)return"value: multiple values";i.value=1;{var u=T.onnx.TypeProto.SparseTensor.verify(o.sparseTensorType);if(u)return"sparseTensorType."+u}}return o.denotation!=null&&o.hasOwnProperty("denotation")&&!A.isString(o.denotation)?"denotation: string expected":null},e.fromObject=function(o){if(o instanceof T.onnx.TypeProto)return o;var i=new T.onnx.TypeProto;if(o.tensorType!=null){if(typeof o.tensorType!="object")throw TypeError(".onnx.TypeProto.tensorType: object expected");i.tensorType=T.onnx.TypeProto.Tensor.fromObject(o.tensorType)}if(o.sequenceType!=null){if(typeof o.sequenceType!="object")throw TypeError(".onnx.TypeProto.sequenceType: object expected");i.sequenceType=T.onnx.TypeProto.Sequence.fromObject(o.sequenceType)}if(o.mapType!=null){if(typeof o.mapType!="object")throw TypeError(".onnx.TypeProto.mapType: object expected");i.mapType=T.onnx.TypeProto.Map.fromObject(o.mapType)}if(o.optionalType!=null){if(typeof o.optionalType!="object")throw TypeError(".onnx.TypeProto.optionalType: object expected");i.optionalType=T.onnx.TypeProto.Optional.fromObject(o.optionalType)}if(o.sparseTensorType!=null){if(typeof o.sparseTensorType!="object")throw TypeError(".onnx.TypeProto.sparseTensorType: object expected");i.sparseTensorType=T.onnx.TypeProto.SparseTensor.fromObject(o.sparseTensorType)}return o.denotation!=null&&(i.denotation=String(o.denotation)),i},e.toObject=function(o,i){i||(i={});var u={};return i.defaults&&(u.denotation=""),o.tensorType!=null&&o.hasOwnProperty("tensorType")&&(u.tensorType=T.onnx.TypeProto.Tensor.toObject(o.tensorType,i),i.oneofs&&(u.value="tensorType")),o.sequenceType!=null&&o.hasOwnProperty("sequenceType")&&(u.sequenceType=T.onnx.TypeProto.Sequence.toObject(o.sequenceType,i),i.oneofs&&(u.value="sequenceType")),o.mapType!=null&&o.hasOwnProperty("mapType")&&(u.mapType=T.onnx.TypeProto.Map.toObject(o.mapType,i),i.oneofs&&(u.value="mapType")),o.denotation!=null&&o.hasOwnProperty("denotation")&&(u.denotation=o.denotation),o.sparseTensorType!=null&&o.hasOwnProperty("sparseTensorType")&&(u.sparseTensorType=T.onnx.TypeProto.SparseTensor.toObject(o.sparseTensorType,i),i.oneofs&&(u.value="sparseTensorType")),o.optionalType!=null&&o.hasOwnProperty("optionalType")&&(u.optionalType=T.onnx.TypeProto.Optional.toObject(o.optionalType,i),i.oneofs&&(u.value="optionalType")),u},e.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},e.getTypeUrl=function(o){return o===void 0&&(o="type.googleapis.com"),o+"/onnx.TypeProto"},e.Tensor=function(){function t(o){if(o)for(var i=Object.keys(o),u=0;u<i.length;++u)o[i[u]]!=null&&(this[i[u]]=o[i[u]])}return t.prototype.elemType=0,t.prototype.shape=null,t.create=function(i){return new t(i)},t.encode=function(i,u){return u||(u=lt.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&u.uint32(8).int32(i.elemType),i.shape!=null&&Object.hasOwnProperty.call(i,"shape")&&T.onnx.TensorShapeProto.encode(i.shape,u.uint32(18).fork()).ldelim(),u},t.encodeDelimited=function(i,u){return this.encode(i,u).ldelim()},t.decode=function(i,u){i instanceof Z||(i=Z.create(i));for(var a=u===void 0?i.len:i.pos+u,s=new T.onnx.TypeProto.Tensor;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{s.elemType=i.int32();break}case 2:{s.shape=T.onnx.TensorShapeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return s},t.decodeDelimited=function(i){return i instanceof Z||(i=new Z(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")&&!A.isInteger(i.elemType))return"elemType: integer expected";if(i.shape!=null&&i.hasOwnProperty("shape")){var u=T.onnx.TensorShapeProto.verify(i.shape);if(u)return"shape."+u}return null},t.fromObject=function(i){if(i instanceof T.onnx.TypeProto.Tensor)return i;var u=new T.onnx.TypeProto.Tensor;if(i.elemType!=null&&(u.elemType=i.elemType|0),i.shape!=null){if(typeof i.shape!="object")throw TypeError(".onnx.TypeProto.Tensor.shape: object expected");u.shape=T.onnx.TensorShapeProto.fromObject(i.shape)}return u},t.toObject=function(i,u){u||(u={});var a={};return u.defaults&&(a.elemType=0,a.shape=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=i.elemType),i.shape!=null&&i.hasOwnProperty("shape")&&(a.shape=T.onnx.TensorShapeProto.toObject(i.shape,u)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Tensor"},t}(),e.Sequence=function(){function t(o){if(o)for(var i=Object.keys(o),u=0;u<i.length;++u)o[i[u]]!=null&&(this[i[u]]=o[i[u]])}return t.prototype.elemType=null,t.create=function(i){return new t(i)},t.encode=function(i,u){return u||(u=lt.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&T.onnx.TypeProto.encode(i.elemType,u.uint32(10).fork()).ldelim(),u},t.encodeDelimited=function(i,u){return this.encode(i,u).ldelim()},t.decode=function(i,u){i instanceof Z||(i=Z.create(i));for(var a=u===void 0?i.len:i.pos+u,s=new T.onnx.TypeProto.Sequence;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{s.elemType=T.onnx.TypeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return s},t.decodeDelimited=function(i){return i instanceof Z||(i=new Z(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")){var u=T.onnx.TypeProto.verify(i.elemType);if(u)return"elemType."+u}return null},t.fromObject=function(i){if(i instanceof T.onnx.TypeProto.Sequence)return i;var u=new T.onnx.TypeProto.Sequence;if(i.elemType!=null){if(typeof i.elemType!="object")throw TypeError(".onnx.TypeProto.Sequence.elemType: object expected");u.elemType=T.onnx.TypeProto.fromObject(i.elemType)}return u},t.toObject=function(i,u){u||(u={});var a={};return u.defaults&&(a.elemType=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=T.onnx.TypeProto.toObject(i.elemType,u)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Sequence"},t}(),e.Map=function(){function t(o){if(o)for(var i=Object.keys(o),u=0;u<i.length;++u)o[i[u]]!=null&&(this[i[u]]=o[i[u]])}return t.prototype.keyType=0,t.prototype.valueType=null,t.create=function(i){return new t(i)},t.encode=function(i,u){return u||(u=lt.create()),i.keyType!=null&&Object.hasOwnProperty.call(i,"keyType")&&u.uint32(8).int32(i.keyType),i.valueType!=null&&Object.hasOwnProperty.call(i,"valueType")&&T.onnx.TypeProto.encode(i.valueType,u.uint32(18).fork()).ldelim(),u},t.encodeDelimited=function(i,u){return this.encode(i,u).ldelim()},t.decode=function(i,u){i instanceof Z||(i=Z.create(i));for(var a=u===void 0?i.len:i.pos+u,s=new T.onnx.TypeProto.Map;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{s.keyType=i.int32();break}case 2:{s.valueType=T.onnx.TypeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return s},t.decodeDelimited=function(i){return i instanceof Z||(i=new Z(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.keyType!=null&&i.hasOwnProperty("keyType")&&!A.isInteger(i.keyType))return"keyType: integer expected";if(i.valueType!=null&&i.hasOwnProperty("valueType")){var u=T.onnx.TypeProto.verify(i.valueType);if(u)return"valueType."+u}return null},t.fromObject=function(i){if(i instanceof T.onnx.TypeProto.Map)return i;var u=new T.onnx.TypeProto.Map;if(i.keyType!=null&&(u.keyType=i.keyType|0),i.valueType!=null){if(typeof i.valueType!="object")throw TypeError(".onnx.TypeProto.Map.valueType: object expected");u.valueType=T.onnx.TypeProto.fromObject(i.valueType)}return u},t.toObject=function(i,u){u||(u={});var a={};return u.defaults&&(a.keyType=0,a.valueType=null),i.keyType!=null&&i.hasOwnProperty("keyType")&&(a.keyType=i.keyType),i.valueType!=null&&i.hasOwnProperty("valueType")&&(a.valueType=T.onnx.TypeProto.toObject(i.valueType,u)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Map"},t}(),e.Optional=function(){function t(o){if(o)for(var i=Object.keys(o),u=0;u<i.length;++u)o[i[u]]!=null&&(this[i[u]]=o[i[u]])}return t.prototype.elemType=null,t.create=function(i){return new t(i)},t.encode=function(i,u){return u||(u=lt.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&T.onnx.TypeProto.encode(i.elemType,u.uint32(10).fork()).ldelim(),u},t.encodeDelimited=function(i,u){return this.encode(i,u).ldelim()},t.decode=function(i,u){i instanceof Z||(i=Z.create(i));for(var a=u===void 0?i.len:i.pos+u,s=new T.onnx.TypeProto.Optional;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{s.elemType=T.onnx.TypeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return s},t.decodeDelimited=function(i){return i instanceof Z||(i=new Z(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")){var u=T.onnx.TypeProto.verify(i.elemType);if(u)return"elemType."+u}return null},t.fromObject=function(i){if(i instanceof T.onnx.TypeProto.Optional)return i;var u=new T.onnx.TypeProto.Optional;if(i.elemType!=null){if(typeof i.elemType!="object")throw TypeError(".onnx.TypeProto.Optional.elemType: object expected");u.elemType=T.onnx.TypeProto.fromObject(i.elemType)}return u},t.toObject=function(i,u){u||(u={});var a={};return u.defaults&&(a.elemType=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=T.onnx.TypeProto.toObject(i.elemType,u)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Optional"},t}(),e.SparseTensor=function(){function t(o){if(o)for(var i=Object.keys(o),u=0;u<i.length;++u)o[i[u]]!=null&&(this[i[u]]=o[i[u]])}return t.prototype.elemType=0,t.prototype.shape=null,t.create=function(i){return new t(i)},t.encode=function(i,u){return u||(u=lt.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&u.uint32(8).int32(i.elemType),i.shape!=null&&Object.hasOwnProperty.call(i,"shape")&&T.onnx.TensorShapeProto.encode(i.shape,u.uint32(18).fork()).ldelim(),u},t.encodeDelimited=function(i,u){return this.encode(i,u).ldelim()},t.decode=function(i,u){i instanceof Z||(i=Z.create(i));for(var a=u===void 0?i.len:i.pos+u,s=new T.onnx.TypeProto.SparseTensor;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{s.elemType=i.int32();break}case 2:{s.shape=T.onnx.TensorShapeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return s},t.decodeDelimited=function(i){return i instanceof Z||(i=new Z(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")&&!A.isInteger(i.elemType))return"elemType: integer expected";if(i.shape!=null&&i.hasOwnProperty("shape")){var u=T.onnx.TensorShapeProto.verify(i.shape);if(u)return"shape."+u}return null},t.fromObject=function(i){if(i instanceof T.onnx.TypeProto.SparseTensor)return i;var u=new T.onnx.TypeProto.SparseTensor;if(i.elemType!=null&&(u.elemType=i.elemType|0),i.shape!=null){if(typeof i.shape!="object")throw TypeError(".onnx.TypeProto.SparseTensor.shape: object expected");u.shape=T.onnx.TensorShapeProto.fromObject(i.shape)}return u},t.toObject=function(i,u){u||(u={});var a={};return u.defaults&&(a.elemType=0,a.shape=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=i.elemType),i.shape!=null&&i.hasOwnProperty("shape")&&(a.shape=T.onnx.TensorShapeProto.toObject(i.shape,u)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.SparseTensor"},t}(),e}(),r.OperatorSetIdProto=function(){function e(n){if(n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.domain="",e.prototype.version=A.Long?A.Long.fromBits(0,0,!1):0,e.create=function(t){return new e(t)},e.encode=function(t,o){return o||(o=lt.create()),t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(10).string(t.domain),t.version!=null&&Object.hasOwnProperty.call(t,"version")&&o.uint32(16).int64(t.version),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Z||(t=Z.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.OperatorSetIdProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.domain=t.string();break}case 2:{u.version=t.int64();break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof Z||(t=new Z(t)),this.decode(t,t.uint32())},e.verify=function(t){return typeof t!="object"||t===null?"object expected":t.domain!=null&&t.hasOwnProperty("domain")&&!A.isString(t.domain)?"domain: string expected":t.version!=null&&t.hasOwnProperty("version")&&!A.isInteger(t.version)&&!(t.version&&A.isInteger(t.version.low)&&A.isInteger(t.version.high))?"version: integer|Long expected":null},e.fromObject=function(t){if(t instanceof T.onnx.OperatorSetIdProto)return t;var o=new T.onnx.OperatorSetIdProto;return t.domain!=null&&(o.domain=String(t.domain)),t.version!=null&&(A.Long?(o.version=A.Long.fromValue(t.version)).unsigned=!1:typeof t.version=="string"?o.version=parseInt(t.version,10):typeof t.version=="number"?o.version=t.version:typeof t.version=="object"&&(o.version=new A.LongBits(t.version.low>>>0,t.version.high>>>0).toNumber())),o},e.toObject=function(t,o){o||(o={});var i={};if(o.defaults)if(i.domain="",A.Long){var u=new A.Long(0,0,!1);i.version=o.longs===String?u.toString():o.longs===Number?u.toNumber():u}else i.version=o.longs===String?"0":0;return t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),t.version!=null&&t.hasOwnProperty("version")&&(typeof t.version=="number"?i.version=o.longs===String?String(t.version):t.version:i.version=o.longs===String?A.Long.prototype.toString.call(t.version):o.longs===Number?new A.LongBits(t.version.low>>>0,t.version.high>>>0).toNumber():t.version),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.OperatorSetIdProto"},e}(),r.OperatorStatus=function(){var e={},n=Object.create(e);return n[e[0]="EXPERIMENTAL"]=0,n[e[1]="STABLE"]=1,n}(),r.FunctionProto=function(){function e(n){if(this.input=[],this.output=[],this.attribute=[],this.attributeProto=[],this.node=[],this.opsetImport=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.name="",e.prototype.input=A.emptyArray,e.prototype.output=A.emptyArray,e.prototype.attribute=A.emptyArray,e.prototype.attributeProto=A.emptyArray,e.prototype.node=A.emptyArray,e.prototype.docString="",e.prototype.opsetImport=A.emptyArray,e.prototype.domain="",e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=lt.create()),t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(10).string(t.name),t.input!=null&&t.input.length)for(var i=0;i<t.input.length;++i)o.uint32(34).string(t.input[i]);if(t.output!=null&&t.output.length)for(var i=0;i<t.output.length;++i)o.uint32(42).string(t.output[i]);if(t.attribute!=null&&t.attribute.length)for(var i=0;i<t.attribute.length;++i)o.uint32(50).string(t.attribute[i]);if(t.node!=null&&t.node.length)for(var i=0;i<t.node.length;++i)T.onnx.NodeProto.encode(t.node[i],o.uint32(58).fork()).ldelim();if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(66).string(t.docString),t.opsetImport!=null&&t.opsetImport.length)for(var i=0;i<t.opsetImport.length;++i)T.onnx.OperatorSetIdProto.encode(t.opsetImport[i],o.uint32(74).fork()).ldelim();if(t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(82).string(t.domain),t.attributeProto!=null&&t.attributeProto.length)for(var i=0;i<t.attributeProto.length;++i)T.onnx.AttributeProto.encode(t.attributeProto[i],o.uint32(90).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Z||(t=Z.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.FunctionProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.name=t.string();break}case 4:{u.input&&u.input.length||(u.input=[]),u.input.push(t.string());break}case 5:{u.output&&u.output.length||(u.output=[]),u.output.push(t.string());break}case 6:{u.attribute&&u.attribute.length||(u.attribute=[]),u.attribute.push(t.string());break}case 11:{u.attributeProto&&u.attributeProto.length||(u.attributeProto=[]),u.attributeProto.push(T.onnx.AttributeProto.decode(t,t.uint32()));break}case 7:{u.node&&u.node.length||(u.node=[]),u.node.push(T.onnx.NodeProto.decode(t,t.uint32()));break}case 8:{u.docString=t.string();break}case 9:{u.opsetImport&&u.opsetImport.length||(u.opsetImport=[]),u.opsetImport.push(T.onnx.OperatorSetIdProto.decode(t,t.uint32()));break}case 10:{u.domain=t.string();break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof Z||(t=new Z(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!A.isString(t.name))return"name: string expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var o=0;o<t.input.length;++o)if(!A.isString(t.input[o]))return"input: string[] expected"}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(var o=0;o<t.output.length;++o)if(!A.isString(t.output[o]))return"output: string[] expected"}if(t.attribute!=null&&t.hasOwnProperty("attribute")){if(!Array.isArray(t.attribute))return"attribute: array expected";for(var o=0;o<t.attribute.length;++o)if(!A.isString(t.attribute[o]))return"attribute: string[] expected"}if(t.attributeProto!=null&&t.hasOwnProperty("attributeProto")){if(!Array.isArray(t.attributeProto))return"attributeProto: array expected";for(var o=0;o<t.attributeProto.length;++o){var i=T.onnx.AttributeProto.verify(t.attributeProto[o]);if(i)return"attributeProto."+i}}if(t.node!=null&&t.hasOwnProperty("node")){if(!Array.isArray(t.node))return"node: array expected";for(var o=0;o<t.node.length;++o){var i=T.onnx.NodeProto.verify(t.node[o]);if(i)return"node."+i}}if(t.docString!=null&&t.hasOwnProperty("docString")&&!A.isString(t.docString))return"docString: string expected";if(t.opsetImport!=null&&t.hasOwnProperty("opsetImport")){if(!Array.isArray(t.opsetImport))return"opsetImport: array expected";for(var o=0;o<t.opsetImport.length;++o){var i=T.onnx.OperatorSetIdProto.verify(t.opsetImport[o]);if(i)return"opsetImport."+i}}return t.domain!=null&&t.hasOwnProperty("domain")&&!A.isString(t.domain)?"domain: string expected":null},e.fromObject=function(t){if(t instanceof T.onnx.FunctionProto)return t;var o=new T.onnx.FunctionProto;if(t.name!=null&&(o.name=String(t.name)),t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.FunctionProto.input: array expected");o.input=[];for(var i=0;i<t.input.length;++i)o.input[i]=String(t.input[i])}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.FunctionProto.output: array expected");o.output=[];for(var i=0;i<t.output.length;++i)o.output[i]=String(t.output[i])}if(t.attribute){if(!Array.isArray(t.attribute))throw TypeError(".onnx.FunctionProto.attribute: array expected");o.attribute=[];for(var i=0;i<t.attribute.length;++i)o.attribute[i]=String(t.attribute[i])}if(t.attributeProto){if(!Array.isArray(t.attributeProto))throw TypeError(".onnx.FunctionProto.attributeProto: array expected");o.attributeProto=[];for(var i=0;i<t.attributeProto.length;++i){if(typeof t.attributeProto[i]!="object")throw TypeError(".onnx.FunctionProto.attributeProto: object expected");o.attributeProto[i]=T.onnx.AttributeProto.fromObject(t.attributeProto[i])}}if(t.node){if(!Array.isArray(t.node))throw TypeError(".onnx.FunctionProto.node: array expected");o.node=[];for(var i=0;i<t.node.length;++i){if(typeof t.node[i]!="object")throw TypeError(".onnx.FunctionProto.node: object expected");o.node[i]=T.onnx.NodeProto.fromObject(t.node[i])}}if(t.docString!=null&&(o.docString=String(t.docString)),t.opsetImport){if(!Array.isArray(t.opsetImport))throw TypeError(".onnx.FunctionProto.opsetImport: array expected");o.opsetImport=[];for(var i=0;i<t.opsetImport.length;++i){if(typeof t.opsetImport[i]!="object")throw TypeError(".onnx.FunctionProto.opsetImport: object expected");o.opsetImport[i]=T.onnx.OperatorSetIdProto.fromObject(t.opsetImport[i])}}return t.domain!=null&&(o.domain=String(t.domain)),o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.input=[],i.output=[],i.attribute=[],i.node=[],i.opsetImport=[],i.attributeProto=[]),o.defaults&&(i.name="",i.docString="",i.domain=""),t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.input&&t.input.length){i.input=[];for(var u=0;u<t.input.length;++u)i.input[u]=t.input[u]}if(t.output&&t.output.length){i.output=[];for(var u=0;u<t.output.length;++u)i.output[u]=t.output[u]}if(t.attribute&&t.attribute.length){i.attribute=[];for(var u=0;u<t.attribute.length;++u)i.attribute[u]=t.attribute[u]}if(t.node&&t.node.length){i.node=[];for(var u=0;u<t.node.length;++u)i.node[u]=T.onnx.NodeProto.toObject(t.node[u],o)}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.opsetImport&&t.opsetImport.length){i.opsetImport=[];for(var u=0;u<t.opsetImport.length;++u)i.opsetImport[u]=T.onnx.OperatorSetIdProto.toObject(t.opsetImport[u],o)}if(t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),t.attributeProto&&t.attributeProto.length){i.attributeProto=[];for(var u=0;u<t.attributeProto.length;++u)i.attributeProto[u]=T.onnx.AttributeProto.toObject(t.attributeProto[u],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.FunctionProto"},e}(),r}();Id.exports=T});function Sn(r,e){if(!r)throw new Error(typeof e=="string"?e:e())}function oo(r){return new TextDecoder().decode(r)}var Je,en,Va,At,ai,wt,Rt,re,no,tn,rn,nn,We=B(()=>{"use strict";ti();Aa();Je=vn($n());on();en=class{static arraysEqual(e,n){if(e.length!==n.length)return!1;for(let t=0;t<e.length;t++)if(e[t]!==n[t])return!1;return!0}},Va=class{static preprocessInputShapes(e,n){let t=e.length===1?[1,e[0]]:e,o=n.length===1?[n[0],1]:n;return[t,o]}static postprocessOutputShape(e,n,t){n===1&&e.splice(e.length-2,1),t===1&&e.pop()}static calcMatMulShape(e,n){return e[1]!==n[0]?void 0:[e[0],n[1]]}},At=class r{static calcShape(e,n,t=!1){let o=e.length,i=n.length;if(o===0)return n;if(i===0)return e;let u=Math.max(e.length,n.length),a=new Array(u);if(t){if(o<2||i<2)return;let s=Va.calcMatMulShape([e[o-2],e[o-1]],[n[i-2],n[i-1]]);if(s===void 0)return;[a[u-2],a[u-1]]=s}for(let s=t?3:1;s<=u;s++){let l=o-s<0?1:e[o-s],d=i-s<0?1:n[i-s];if(l!==d&&l>1&&d>1)return;a[u-s]=Math.max(l,d)}return a}static index(e,n){let t=new Array(n.length);return r.fillIndex(e,n,t),t}static fillIndex(e,n,t){let o=e.length-n.length;for(let i=0;i<n.length;i++)t[i]=e[o+i]%n[i]}static calc(e,n,t,o,i){let u=r.calcShape(e.dims,n.dims);if(u){if(o&&!re.areEqual(u,e.dims))return;let a=re.size(u),s=o?e:new ft(u,i||e.type);if(u.length===0)s.set([],t(e.get([]),n.get([])));else{let l=new Array(u.length),d=new Array(e.dims.length),p=new Array(n.dims.length),f=0,g=0,b=!1,y=!1;e.dims.length===0&&(f=e.get([]),b=!0),n.dims.length===0&&(g=n.get([]),y=!0);let $;for(let x=0;x<a;x++){$=x;for(let I=u.length-1;I>=0;I--)l[I]=$%u[I],$=Math.floor($/u[I]);b||(r.fillIndex(l,e.dims,d),f=e.get(d)),y||(r.fillIndex(l,n.dims,p),g=n.get(p)),s.set(l,t(f,g))}}return s}}static isValidBroadcast(e,n){let t=e.length,o=n.length;if(t>o)return!1;for(let i=1;i<=t;i++)if(e[t-i]!==1&&e[t-i]!==n[o-i])return!1;return!0}static getBroadcastDims(e,n){let t=e.length,o=[];for(let i=0;i<t;i++){let u=t-1-i,a=e[u]||1;(n[n.length-1-i]||1)>1&&a===1&&o.unshift(u)}return o}},ai=class{static getShapeOfGemmResult(e,n,t,o,i){if(e.length!==2||t.length!==2)throw new Error("shape need to be of size 2");let u,a,s;n?(u=e[1],a=e[0]):(u=e[0],a=e[1]);let l=-1;if(o?(s=t[0],l=1):(s=t[1],l=0),t[l]!==a)throw new Error("dimension mismatch");if(u<=0||s<=0||a<=0)throw new Error("invalid shape specified");if(i&&!At.isValidBroadcast(i,[u,s]))throw new Error("gemm: invalid bias shape for broadcast");return[u,s,a]}},wt=class r{static tensorDataTypeFromProto(e){switch(e){case Je.onnx.TensorProto.DataType.INT8:return"int8";case Je.onnx.TensorProto.DataType.UINT8:return"uint8";case Je.onnx.TensorProto.DataType.BOOL:return"bool";case Je.onnx.TensorProto.DataType.INT16:return"int16";case Je.onnx.TensorProto.DataType.UINT16:return"uint16";case Je.onnx.TensorProto.DataType.INT32:return"int32";case Je.onnx.TensorProto.DataType.UINT32:return"uint32";case Je.onnx.TensorProto.DataType.FLOAT:return"float32";case Je.onnx.TensorProto.DataType.DOUBLE:return"float64";case Je.onnx.TensorProto.DataType.STRING:return"string";case Je.onnx.TensorProto.DataType.INT64:return"int32";case Je.onnx.TensorProto.DataType.UINT64:return"uint32";default:throw new Error(`unsupported data type: ${Je.onnx.TensorProto.DataType[e]}`)}}static tensorDataTypeStringToEnum(e){switch(e){case"int8":return Je.onnx.TensorProto.DataType.INT8;case"uint8":return Je.onnx.TensorProto.DataType.UINT8;case"bool":return Je.onnx.TensorProto.DataType.BOOL;case"int16":return Je.onnx.TensorProto.DataType.INT16;case"uint16":return Je.onnx.TensorProto.DataType.UINT16;case"int32":return Je.onnx.TensorProto.DataType.INT32;case"uint32":return Je.onnx.TensorProto.DataType.UINT32;case"float32":return Je.onnx.TensorProto.DataType.FLOAT;case"float64":return Je.onnx.TensorProto.DataType.DOUBLE;case"string":return Je.onnx.TensorProto.DataType.STRING;case"int64":return Je.onnx.TensorProto.DataType.INT64;case"uint64":return Je.onnx.TensorProto.DataType.UINT64;default:throw new Error(`unsupported data type: ${e}`)}}static tensorDimsFromProto(e){return e.map(n=>_r.isLong(n)?n.toNumber():n)}static tensorValueTypeFromProto(e){return{tensorType:r.tensorDataTypeFromProto(e.elemType),shape:{dims:r.tensorDimsFromProto(e.shape.dim.map(n=>n.dimValue))}}}static tensorDimsFromORTFormat(e){let n=[];for(let t=0;t<e.dimsLength();t++)n.push(Rt.longToNumber(e.dims(t)));return n}static tensorAttributesFromORTFormat(e){let n=[];for(let t=0;t<e.attributesLength();t++)n.push(e.attributes(t));return n}},Rt=class{static longToNumber(e,n){return _r.isLong(e)?e.toNumber():e instanceof k.Long?_r.fromValue({low:e.low,high:e.high,unsigned:n??!1}).toNumber():e}static isLong(e){return _r.isLong(e)||e instanceof k.Long}},re=class r{static size(e){return r.getSizeFromDimensionRange(e,0,e.length)}static sizeFromDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,n,e.length)}static sizeToDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeToDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,0,n)}static getSizeFromDimensionRange(e,n,t){let o=1;for(let i=n;i<t;i++){if(e[i]<=0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.");o*=e[i]}return o}static computeStrides(e){let n=e.length;if(n===0)return[];if(n===1)return[1];let t=new Array(n);t[n-1]=1,t[n-2]=e[n-1];for(let o=n-3;o>=0;--o)t[o]=t[o+1]*e[o+1];return t}static transpose(e){return e.slice().reverse()}static indicesToOffset(e,n,t){t===void 0&&(t=e.length);let o=0;for(let i=0;i<t;++i)o+=n[i]*e[i];return o}static offsetToIndices(e,n){let t=n.length;if(t===0)return[];if(t===1)return[e*n[0]];let o=new Array(n.length);for(let i=0;i<o.length-1;++i)o[i]=Math.floor(e/n[i]),e-=o[i]*n[i];return o[o.length-1]=e,o}static normalizeAxis(e,n){if(e<-n&&e>=n)throw new Error("unsupported axis for this operation.");return e<0?e+n:e}static normalizeAxes(e,n){return e.map(t=>this.normalizeAxis(t,n))}static incrementIndex(e,n,t){if(n.length===0||e.length===0)throw new Error("Index incrementing unsupported for scalar Tensor");if(t===void 0)t=n.length;else if(t<=0||t>n.length)throw new Error("Incorrect axis to increment on");for(let o=t-1;o>=0&&(e[o]++,!(e[o]<n[o]));--o)e[o]=0}static calculateReshapedDims(e,n){if(n.length===0){if(e.length===0||r.size(e)===1)return[];throw new Error("cannot reshape to a scalar Tensor")}let t=n.length,o=new Array(t),i=-1,u=1;for(let s=0;s<t;s++){if(n[s]<-1)throw new Error("a dimension in shape hints cannot be less than -1");if(n[s]===-1){if(i!==-1)throw new Error("at most one dimension in shape hints can be -1");i=s}else{if(n[s]===0){if(s>=e.length)throw new Error("the dimension with value zero exceeds the dimension size of the input tensor");o[s]=e[s]}else o[s]=n[s];u*=o[s]}}let a=r.size(e);if(i!==-1){if(a%u!==0)throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${e}] Output shape: [${n}]`);o[i]=a/u}else if(u!==a)throw new Error("reshapedDims and originalDims don't have matching sizes");return o}static sortBasedOnPerm(e,n){return n?n.map(t=>e[t]):e.slice().reverse()}static padShape(e,n){let t=e.length;return e.map((o,i)=>o+n[i]+n[i+t])}static areEqual(e,n){return e.length!==n.length?!1:e.every((t,o)=>t===n[o])}static validateDimsAndCalcSize(e){if(e.length>6)throw new TypeError("Only rank 0 to 6 is supported for tensor shape.");let n=1;for(let t of e){if(!Number.isInteger(t))throw new TypeError(`Invalid shape: ${t} is not an integer`);if(t<0||t>2147483647)throw new TypeError(`Invalid shape: length ${t} is not allowed`);n*=t}return n}static flattenShape(e,n){n<0&&(n+=e.length);let t=e.reduce((u,a)=>u*a,1),o=e.slice(n).reduce((u,a)=>u*a,1);return[t/o,o]}static squeezeShape(e,n){let t=new Array;n=r.normalizeAxes(n,e.length);for(let o=0;o<e.length;o++){let i=n.indexOf(o)>=0;if(i&&e[o]!==1)throw new Error("squeeze an axis of size different than 1");(n.length===0&&e[o]>1||n.length>0&&!i)&&t.push(e[o])}return t}static unsqueezeShape(e,n){let t=new Array(e.length+n.length);t.fill(0);for(let i=0;i<n.length;i++){let u=r.normalizeAxis(n[i],t.length);if(u>=t.length)throw new Error("'axes' has an out of range axis");if(t[u]!==0)throw new Error("'axes' has a duplicate axis");t[u]=1}let o=0;for(let i=0;i<t.length;i++)t[i]===0&&(t[i]=e[o++]);if(o!==e.length)throw new Error("the unsqueezed dimension could not be established");return t}},no=class r{static splitShape(e,n,t,o){if(t.length===0){if(!o)throw new Error("need to know number of outputs when the 'split' attribute is not specified");r.determineSplit(e[n],o,t)}let i=[],u=[0];for(let a=0;a<t.length;++a){a!==0&&u.push(u[a-1]+t[a-1]);let s=e.slice();s[n]=t[a],i.push(s)}return[i,u]}static determineSplit(e,n,t){if(e%n!==0)throw new Error("cannot split tensor to equal sized parts");for(let o=0;o<n;++o)t.push(e/n)}},tn=class r{static adjustPoolAttributes(e,n,t,o,i,u){if(!e&&t.length!==n.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let a=0;a<n.length-2;a++)a>=t.length?t.push(n[a+2]):t[a]=n[a+2];for(let a=0;a<t.length;a++)if(a<o.length){if(o[a]<0)throw new Error("strides should be greater than or equal to 1")}else o.push(1);for(let a=0;a<t.length;a++)if(a<i.length){if(i[a]<0)throw new Error("dilations should be greater than or equal to 1")}else i.push(1);for(let a=0;a<t.length*2;a++)if(a<u.length){if(u[a]<0)throw new Error("pad should be greater than or equal to 1")}else u.push(0);for(let a=0;a<t.length;a++){if(t[a]<=0)throw new Error("kernel shapes need to be greater than 0");if(u[a]>=t[a]||u[a+t.length]>=t[a])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(e,n,t,o,i,u){if(u){if(i.length!==2*(e.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(n.length!==e.length-2)throw new Error("length of strides should be the length of data dimensions");if(o.length!==e.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let a=0;a<e.length-2;a++)r.adjustPadAndReturnShape(e[a+2],n[a],t[a],o[a],i,a,a+e.length-2,u)}}static computePoolOutputShape(e,n,t,o,i,u,a){if(n.length<=0)throw new Error("input shape must be of size greater than 0");let s=[n[0],n[1]];return r.computeShapeHelper(e,n,s,t,o,i,u,a),s}static computeConvOutputShape(e,n,t,o,i,u,a){if(e.length<=0||n.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let s=[e[0],n[0]];return r.computeShapeHelper(!1,e,s,t,o,i,u,a),s}static computeShapeHelper(e,n,t,o,i,u,a,s){if(e)for(let l=0;l<n.length-2;l++)t.push(1);else for(let l=0;l<n.length-2;l++)t.push(r.adjustPadAndReturnShape(n[l+2],o[l],i[l],u[l],a,l,l+n.length-2,s))}static adjustPadAndReturnShape(e,n,t,o,i,u,a,s){let l=t*(o-1)+1;if(s&&s!=="NOTSET")switch(s){case"VALID":return i[u]=0,i[a]=0,Math.floor((e-l)/n+1);case"SAME_LOWER":case"SAME_UPPER":if(t!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let p=((e+n-1)/n-1)*n+o-e;return i[u]=Math.floor(s==="SAME_LOWER"?(p+1)/2:p/2),i[a]=p-i[u],Math.floor((e+p-o)/n+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((e+i[u]+i[a]-l)/n+1)}},rn=-34028234663852886e22,nn=34028234663852886e22});function c0(r){switch(r){case"bool":case"int8":case"uint8":return 1;case"int16":case"uint16":return 2;case"int32":case"uint32":case"float32":return 4;case"float64":return 8;default:throw new Error(`cannot calculate sizeof() on type ${r}`)}}function _d(r){switch(r){case Ie.onnx.TensorProto.DataType.UINT8:case Ie.onnx.TensorProto.DataType.INT8:case Ie.onnx.TensorProto.DataType.BOOL:return 1;case Ie.onnx.TensorProto.DataType.UINT16:case Ie.onnx.TensorProto.DataType.INT16:return 2;case Ie.onnx.TensorProto.DataType.FLOAT:case Ie.onnx.TensorProto.DataType.INT32:case Ie.onnx.TensorProto.DataType.UINT32:return 4;case Ie.onnx.TensorProto.DataType.INT64:case Ie.onnx.TensorProto.DataType.DOUBLE:case Ie.onnx.TensorProto.DataType.UINT64:return 8;default:throw new Error(`cannot calculate sizeof() on type ${Ie.onnx.TensorProto.DataType[r]}`)}}function f0(r,e){return new(Ed(e))(r)}function Ed(r){switch(r){case"bool":case"uint8":return Uint8Array;case"int8":return Int8Array;case"int16":return Int16Array;case"uint16":return Uint16Array;case"int32":return Int32Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"float32":return Float32Array;case"float64":return Float64Array;default:throw new Error("unspecified error")}}function Wa(r,e){if(e===Ie.onnx.TensorProto.DataType.INT64||e===Ga.TensorDataType.INT64){if(r.greaterThanOrEqual(2147483648)||r.lessThan(-2147483648))throw new TypeError("int64 is not supported")}else if(e===Ie.onnx.TensorProto.DataType.UINT32||e===Ga.TensorDataType.UINT32||e===Ie.onnx.TensorProto.DataType.UINT64||e===Ga.TensorDataType.UINT64){if(r.greaterThanOrEqual(4294967296)||r.lessThan(0))throw new TypeError("uint64 is not supported")}else throw new TypeError(`not a LONG type: ${Ie.onnx.TensorProto.DataType[e]}`);return r.toNumber()}function Ad(r,e,n){switch(e){case Ie.onnx.TensorProto.DataType.BOOL:case Ie.onnx.TensorProto.DataType.UINT8:return r.getUint8(n);case Ie.onnx.TensorProto.DataType.INT8:return r.getInt8(n);case Ie.onnx.TensorProto.DataType.UINT16:return r.getUint16(n,!0);case Ie.onnx.TensorProto.DataType.INT16:return r.getInt16(n,!0);case Ie.onnx.TensorProto.DataType.FLOAT:return r.getFloat32(n,!0);case Ie.onnx.TensorProto.DataType.INT32:return r.getInt32(n,!0);case Ie.onnx.TensorProto.DataType.UINT32:return r.getUint32(n,!0);case Ie.onnx.TensorProto.DataType.INT64:return Wa(_r.fromBits(r.getUint32(n,!0),r.getUint32(n+4,!0),!1),e);case Ie.onnx.TensorProto.DataType.DOUBLE:return r.getFloat64(n,!0);case Ie.onnx.TensorProto.DataType.UINT64:return Wa(_r.fromBits(r.getUint32(n,!0),r.getUint32(n+4,!0),!0),e);default:throw new Error(`cannot read from DataView for type ${Ie.onnx.TensorProto.DataType[e]}`)}}var Od,Ie,Ga,ft,on=B(()=>{"use strict";Od=vn(bl());Aa();Qn();Ie=vn($n());We();Ga=oe.experimental.fbs,ft=class r{constructor(e,n,t,o,i,u=Od.Guid.create()){this.dims=e;this.type=n;this.dataProvider=t;this.asyncDataProvider=o;this.cache=i;this.dataId=u;this.size=re.validateDimsAndCalcSize(e);let a=this.size,s=t===void 0&&o===void 0&&i===void 0;if(i!==void 0&&i.length!==a)throw new RangeError("Input dims doesn't match data length.");if(n==="string"){if(i!==void 0&&(!Array.isArray(i)||!i.every(l=>typeof l=="string")))throw new TypeError("cache should be a string array");s&&(this.cache=new Array(a))}else{if(i!==void 0){let l=Ed(n);if(!(i instanceof l))throw new TypeError(`cache should be type ${l.name}`)}if(s){let l=new ArrayBuffer(a*c0(n));this.cache=f0(l,n)}}}get data(){if(this.cache===void 0){let e=this.dataProvider(this.dataId);if(e.length!==this.size)throw new Error("Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.");this.cache=e}return this.cache}get stringData(){if(this.type!=="string")throw new TypeError("data type is not string");return this.data}get integerData(){switch(this.type){case"uint8":case"int8":case"uint16":case"int16":case"int32":case"uint32":case"bool":return this.data;default:throw new TypeError("data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)")}}get floatData(){switch(this.type){case"float32":case"float64":return this.data;default:throw new TypeError("data type is not float (float32, float64)")}}get numberData(){if(this.type!=="string")return this.data;throw new TypeError("type cannot be non-number (string)")}get(e){return this.data[re.indicesToOffset(e,this.strides)]}set(e,n){this.data[re.indicesToOffset(e,this.strides)]=n}async getData(){return this.cache===void 0&&(this.cache=await this.asyncDataProvider(this.dataId)),this.cache}get strides(){return this._strides||(this._strides=re.computeStrides(this.dims)),this._strides}static fromProto(e){if(!e)throw new Error("cannot construct Value from an empty tensor");let n=wt.tensorDataTypeFromProto(e.dataType),t=wt.tensorDimsFromProto(e.dims),o=new r(t,n);if(n==="string")e.stringData.forEach((i,u)=>{o.data[u]=oo(i)});else if(e.rawData&&typeof e.rawData.byteLength=="number"&&e.rawData.byteLength>0){let i=o.data,u=new DataView(e.rawData.buffer,e.rawData.byteOffset,e.rawData.byteLength),a=_d(e.dataType),s=e.rawData.byteLength/a;if(e.rawData.byteLength%a!==0)throw new Error("invalid buffer length");if(i.length!==s)throw new Error("buffer length mismatch");for(let l=0;l<s;l++){let d=Ad(u,e.dataType,l*a);i[l]=d}}else{let i;switch(e.dataType){case Ie.onnx.TensorProto.DataType.FLOAT:i=e.floatData;break;case Ie.onnx.TensorProto.DataType.INT32:case Ie.onnx.TensorProto.DataType.INT16:case Ie.onnx.TensorProto.DataType.UINT16:case Ie.onnx.TensorProto.DataType.INT8:case Ie.onnx.TensorProto.DataType.UINT8:case Ie.onnx.TensorProto.DataType.BOOL:i=e.int32Data;break;case Ie.onnx.TensorProto.DataType.INT64:i=e.int64Data;break;case Ie.onnx.TensorProto.DataType.DOUBLE:i=e.doubleData;break;case Ie.onnx.TensorProto.DataType.UINT32:case Ie.onnx.TensorProto.DataType.UINT64:i=e.uint64Data;break;default:throw new Error("unspecific error")}if(i==null)throw new Error("failed to populate data from a tensorproto value");let u=o.data;if(u.length!==i.length)throw new Error("array length mismatch");for(let a=0;a<i.length;a++){let s=i[a];_r.isLong(s)?u[a]=Wa(s,e.dataType):u[a]=s}}return o}static fromData(e,n,t){return new r(n,t,void 0,void 0,e)}static fromOrtTensor(e){if(!e)throw new Error("cannot construct Value from an empty tensor");let n=wt.tensorDimsFromORTFormat(e),t=wt.tensorDataTypeFromProto(e.dataType()),o=new r(n,t);if(t==="string")for(let i=0;i<e.stringDataLength();i++)o.data[i]=e.stringData(i);else if(e.rawDataArray()&&typeof e.rawDataLength()=="number"&&e.rawDataLength()>0){let i=o.data,u=new DataView(e.rawDataArray().buffer,e.rawDataArray().byteOffset,e.rawDataLength()),a=_d(e.dataType()),s=e.rawDataLength()/a;if(e.rawDataLength()%a!==0)throw new Error("invalid buffer length");if(i.length!==s)throw new Error("buffer length mismatch");for(let l=0;l<s;l++){let d=Ad(u,e.dataType(),l*a);i[l]=d}}return o}}});function se(r){return r===1?p0:h0}function Cd(r){let e=se(r);return`${e.version}
      precision highp float;
      ${e.attribute} vec3 position;
      ${e.attribute} vec2 textureCoord;

      ${e.varyingVertex} vec2 TexCoords;

      void main()
      {
          gl_Position = vec4(position, 1.0);
          TexCoords = textureCoord;
      }`}function Pd(r){let e=se(r);return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFrag} vec2 TexCoords;
    ${e.outputDeclaration}
    const vec2 halfCR = vec2(0.5, 0.5);

    // Custom vector types to handle higher dimenalities.
    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    `}function kd(r,e){let n=se(r);return`
  void main() {
    int indices[${e}];
    toVec(TexCoords, indices);
    vec4 result = vec4(process(indices));
    ${n.output} = result;
  }
  `}var p0,h0,rt=B(()=>{"use strict";p0={version:"",attribute:"attribute",varyingVertex:"varying",varyingFrag:"varying",texture2D:"texture2D",output:"gl_FragColor",outputDeclaration:""},h0={version:"#version 300 es",attribute:"in",varyingVertex:"out",varyingFrag:"in",texture2D:"texture",output:"outputColor",outputDeclaration:"out vec4 outputColor;"}});var Re=B(()=>{"use strict"});async function Ua(r,e=t=>0,n){return new Promise((t,o)=>{let i=0,u=()=>{if(r()){t();return}i++;let a=e(i);if(n!=null&&i>=n){o();return}setTimeout(u,a)};u()})}function si(r){return Sn(typeof r<"u"&&r.length!==0,()=>"empty string found for sampler name"),"get"+r.charAt(0).toUpperCase()+r.slice(1)}function Dd(r){return Sn(typeof r<"u"&&r.length!==0,()=>"empty string found for sampler name"),"get"+r.charAt(0).toUpperCase()+r.slice(1)+"AtOutCoords"}function In(r,e){let n=JSON.parse(JSON.stringify(r));return n=e,n}function _n(r,e){return e.map(n=>r[n]).join(", ")}function Ot(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function Qt(r=6){return["x","y","z","w","u","v"].slice(0,r)}var dr=B(()=>{"use strict";We()});function m0(r,e){return Qt(e).map(n=>`${r}.${n}`)}function An(r,e){return e===1?[r]:m0(r,e)}function cr(){return`
    float getChannel(vec4 frag, int dim) {
      int modCoord = imod(dim, 2);
      return modCoord == 0 ? frag.r : frag.g;
    }

    float getChannel(vec4 frag, vec2 innerDims) {
      vec2 modCoord = mod(innerDims, 2.);
      return modCoord.x == 0. ?
        (modCoord.y == 0. ? frag.r : frag.g) :
        (modCoord.y == 0. ? frag.b : frag.a);
    }
  `}var an=B(()=>{"use strict";dr()});function b0(r,e,n){if(r===0)return"false";if(r===1)return`rc > ${e[0]}`;let t="";for(let o=r-2;o<r;o++)t+=`${n[o]} >= ${e[o-r+2]}`,o<r-1&&(t+="||");return t}function y0(r,e){let n=r.length;if(n===0)return"getA(), 0, 0, 0";if(n===1)return`getA(rc),
            rc + 1 >= ${r[0]} ? 0. : getA(rc + 1),
            0, 0`;let t="r, c",o="r, cp1",i="rp1, c",u="rp1, cp1",a="";if(n>2)for(let s=0;s<n-2;++s)a=a+`${e[s]},`;return`getA(${a}${t}),
          rEdge ? 0. : getA(${a}${i}),
          cEdge ? 0. : getA(${a}${o}),
          rEdge || cEdge ? 0. : getA(${a}${u})`}function v0(r,e,n,t){return r===0||r===1?"":`
    int r = ${e[r-2]};
    int c = ${e[r-1]};
    int rp1 = ${e[r-2]} + 1;
    int cp1 = ${e[r-1]} + 1;
    bool rEdge = rp1 >= ${t};
    bool cEdge = cp1 >= ${n};
    `}var Bd,g0,Rd,Md=B(()=>{"use strict";rt();Re();dr();an();Bd={name:"pack",inputNames:["A"],inputTypes:[1]},g0=(r,e)=>{let n=se(r.session.backend.glContext.version),t=e.dims,o=t.length,i=e.dims.length,u=Ot(i),a=An("rc",i),s=v0(i,a,t[t.length-2],t[t.length-1]),l;o===0?l=[1,1]:o===1?l=[t[0],1]:l=[t[i-1],t[i-2]];let d=b0(i,l,a),p=y0(t,a),f=`
        void main() {
          ${u} rc = getOutputCoords();

          if(${d}) {
            ${n.output} = vec4(0);
          } else {
            ${s}

            ${n.output} = vec4(${p});
          }
        }
      `;return{...Bd,hasMain:!0,output:{dims:e.dims,type:e.type,textureType:2},shaderSource:f}},Rd=(r,e)=>({...Bd,get:()=>g0(r,e)})});function Ha(r){if(r.length===0)return[1,1,1];let e=1;for(let n=0;n<r.length-2;++n)e*=r[n];return[e,r.length>1?r[r.length-2]:1,r[r.length-1]]}function zd(r,e){let n=!1;return r.length===0||e.length===0?n=!0:r.length<2||e.length<2?n=r[r.length-1]===e[e.length-1]:n=r[r.length-1]===e[e.length-1]&&r[r.length-2]===e[e.length-2],n}function T0(r){let e=re.computeStrides(r),n=["b","r","c"],t="index";return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e.map((i,u)=>{let a=`int ${n[u]} = ${t} / ${i}`,s=u===e.length-1?`int ${n[u+1]} = ${t} - ${n[u]} * ${i}`:`index -= ${n[u]} * ${i}`;return`${a}; ${s};`}).join("")}
      return ivec3(b, r, c);
    }
  `}function $0(r){let e=re.computeStrides(r);return`
  int getFlattenedIndex(ivec3 coords) {
    // reverse y, z order
    return coords.x * ${e[0]} + coords.z * ${e[1]} + coords.y;
  }
`}var w0,x0,Ld,Nd=B(()=>{"use strict";We();rt();Re();an();w0=r=>({name:"Reshape (packed)",inputTypes:[2],inputNames:["A"],cacheHint:`${r}`}),x0=(r,e,n,t)=>{let o=e.dims,i=t,u="";for(let l=0;l<4;l++){let d="";switch(l){case 0:d="outputCoords = rc;";break;case 1:d="outputCoords = ivec3(rc.x, rc.y+1, rc.z);";break;case 2:d="outputCoords = ivec3(rc.x, rc.y, rc.z+1);";break;case 3:d="outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);";break;default:throw new Error}u+=`
        ${d}
        ${l>0?"if(outputCoords.y < rows && outputCoords.z < cols){":""}
          int flattenedIndex = getFlattenedIndex(outputCoords);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);
          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${l}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);

        ${l>0?"}":""}
      `}let a=se(r.session.backend.glContext.version),s=`
      ${T0(o)}
      ${$0(i)}
      ${cr()}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.0);

        ivec3 outputCoords;
        int rows = ${i[2]};
        int cols = ${i[1]};

        ${u}
        ${a.output} = result;
      }
    `;return{...n,output:{dims:i,type:e.type,textureType:2},shaderSource:s,hasMain:!0}},Ld=(r,e,n)=>{let t=w0(n);return{...t,get:()=>x0(r,e,t,n)}}});var qa,Fd=B(()=>{"use strict";rt();Re();qa=(r,e)=>{let n=e.shape,t=se(r.session.backend.glContext.version),o=`
    const float FLOAT_MAX = 1.70141184e38;
    const float FLOAT_MIN = 1.17549435e-38;

    bool isNaN(float val) {
      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;
    }

    highp vec4 encodeAsUint8(highp float v) {
      if (isNaN(v)) {
        return vec4(255, 255, 255, 255);
      }

      highp float av = abs(v);

      if(av < FLOAT_MIN) {
        return vec4(0.0, 0.0, 0.0, 0.0);
      } else if(v > FLOAT_MAX) {
        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
      } else if(v < -FLOAT_MAX) {
        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
      }

      highp vec4 c = vec4(0,0,0,0);

      highp float e = floor(log2(av));
      highp float m = exp2(fract(log2(av))) - 1.0;

      c[2] = floor(128.0 * m);
      m -= c[2] / 128.0;
      c[1] = floor(32768.0 * m);
      m -= c[1] / 32768.0;
      c[0] = floor(8388608.0 * m);

      highp float ebias = e + 127.0;
      c[3] = floor(ebias / 2.0);
      ebias -= c[3] * 2.0;
      c[2] += floor(ebias) * 128.0;

      c[3] += 128.0 * step(0.0, -v);

      return c / 255.0;
    }

    void main() {
      float value = ${t.texture2D}(X,TexCoords).r;
      ${t.output} = encodeAsUint8(value);
    }`,i={name:"Uint8Encode",inputTypes:[0],inputNames:["X"],output:{dims:n,type:e.tensor.type,textureType:3},shaderSource:o,hasMain:!0};return r.executeProgram(i,[e.tensor])}});function I0(r,e){if(r===1)return"rc";let n="";for(let t=0;t<r;t++)n+=e[t],t<r-1&&(n+=",");return n}var Vd,S0,Gd,Wd=B(()=>{"use strict";rt();Re();dr();an();Vd={name:"unpack",inputNames:["A"],inputTypes:[2]},S0=(r,e)=>{let n=e.dims.length,t=An("rc",n),o=t.slice(-2),i=Ot(n),u=cr(),s=e.dims.length===0?"":I0(n,t),l=n<=1?"rc":`vec2(${o.join(",")})`,d=se(r.session.backend.glContext.version),p=`
    ${u}
    void main() {
      ${i} rc = getOutputCoords();

       // Sample the texture with the coords to get the rgba channel value.
       vec4 packedInput = getA(${s});

       ${d.output} = vec4(getChannel(packedInput, ${l}), 0, 0, 0);
     }
   `;return{...Vd,hasMain:!0,output:{dims:e.dims,type:e.type,textureType:0},shaderSource:p}},Gd=(r,e)=>({...Vd,get:()=>S0(r,e)})});var ui,io,li,ao=B(()=>{"use strict";Ft();ui=class{constructor(e,n=1){if(n===1)this.internalFormat=e.R32F,this.format=e.RED,this.textureType=e.FLOAT,this.channelSize=n;else if(n===4)this.internalFormat=e.RGBA32F,this.format=e.RGBA,this.textureType=e.FLOAT,this.channelSize=n;else throw new Error(`Invalid number of channels: ${n}`)}encode(e,n){let t,o;return e.constructor!==Float32Array&&(He.warning("Encoder","data was not of type Float32; creating new Float32Array"),o=new Float32Array(e)),n*this.channelSize>e.length?(He.warning("Encoder","Source data too small. Allocating larger array"),o=e,t=this.allocate(n*this.channelSize),o.forEach((i,u)=>t[u]=i)):(o=e,t=o),t}allocate(e){return new Float32Array(e*4)}decode(e,n){return this.channelSize===1?e.filter((o,i)=>i%4===0).subarray(0,n):e.subarray(0,n)}},io=class{constructor(e,n=1,t){if(n!==1&&n!==4)throw new Error(`Invalid number of channels: ${n}`);this.internalFormat=e.RGBA,this.format=e.RGBA,this.channelSize=n,this.textureType=t||e.FLOAT}encode(e,n){let t=e;return this.channelSize===1&&(He.verbose("Encoder","Exploding into a larger array"),t=this.allocate(n),e.forEach((o,i)=>t[i*4]=o)),t}allocate(e){return new Float32Array(e*4)}decode(e,n){return this.channelSize===1?e.filter((o,i)=>i%4===0).subarray(0,n):e.subarray(0,n)}},li=class{constructor(e,n=1){this.channelSize=4;if(n===1)this.internalFormat=e.ALPHA,this.format=e.ALPHA,this.textureType=e.UNSIGNED_BYTE,this.channelSize=n;else if(n===4)this.internalFormat=e.RGBA,this.format=e.RGBA,this.textureType=e.UNSIGNED_BYTE,this.channelSize=n;else throw new Error(`Invalid number of channels: ${n}`)}encode(e,n){return new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}allocate(e){return new Uint8Array(e*this.channelSize)}decode(e,n){if(e instanceof Uint8Array)return e.subarray(0,n);throw new Error(`Invalid array type: ${e.constructor}`)}}});var so,Ud,ja,Hd=B(()=>{"use strict";We();Re();so=(r,e,n)=>{let t=n===0||n===1?1:4,o=n===2,i=n===1||n===2,u=n===4?e.length-1:void 0,a=n===4?e.map((s,l)=>l===e.length-1?s*4:s):void 0;return ja(r,e,t,a,{isPacked:o,reverseWH:i,breakAxis:u})},Ud=(r,e,n)=>{let t=so(r,e,n);return[t.width,t.height]},ja=(r,e,n=1,t,o)=>{let i=!!(o&&o.isPacked),[u,a]=r.computeTextureWH(i&&t||e,o),s=e.length,l=e.slice(0);if(s===0&&(l=[1]),n===1)t=e;else if(i){if(n!==4)throw new Error("a packed texture must be 4-channel");t=e,s>0&&(l[s-1]=Math.ceil(l[s-1]/2)),s>1&&(l[s-2]=Math.ceil(l[s-2]/2))}else if(!t)throw new Error("Unpacked shape is needed when using channels > 1");return{width:u,height:a,channels:n,isPacked:i,shape:l,strides:re.computeStrides(l),unpackedShape:t,reversedWH:o&&o.reverseWH}}});var A0,di,jd=B(()=>{"use strict";Ft();on();We();Md();Nd();Fd();Wd();ao();Hd();Re();A0=(r,e)=>{let n=e.map(o=>`${o.unpackedShape.join(",")};${o.width}x${o.height}`).join("_"),t=r.name;return r.cacheHint&&(t+="["+r.cacheHint+"]"),t+=":"+n,t},di=class{constructor(e){this.session=e;this.packedTextureDataCache=new Map,this.unpackedTextureDataCache=new Map}calculateTextureWidthAndHeight(e,n){return Ud(this.session.layoutStrategy,e,n)}executeProgram(e,n){if(n.length<e.inputNames.length)throw new Error(`Input size mustn't be less than ${e.inputNames.length}.`);if(e.inputNames.length!==e.inputTypes.length)throw new Error("input names size does not match input types");let t=[];for(let l=0;l<e.inputNames.length;++l)t[l]=this.getOrCreateTextureData(n[l],e.inputTypes[l]);let o=A0(e,t),i=this.session.programManager.getArtifact(o),u=i?i.programInfo:typeof e.get=="function"?e.get():e,a=so(this.session.layoutStrategy,u.output.dims,u.output.textureType),s=this.createTextureData(a,u.output.type);return i||(i=this.session.programManager.build(u,t,s),this.session.programManager.setArtifact(o,i)),this.runProgram(i,t,s),s}run(e,n){return this.executeProgram(e,n).tensor}runProgram(e,n,t){for(let o=0;o<n.length;++o)if(!!n[o].isPacked!=(e.programInfo.inputTypes[o]===2))throw new Error(`input[${o}] property packed inconsistent`);if(!!t.isPacked!=(e.programInfo.output.textureType===2))throw new Error("output property packed inconsistent");this.session.programManager.run(e,n,t)}getOrCreateTextureData(e,n){let t=this.getTextureData(e.dataId,n===2);if(!t&&(t=this.getTextureData(e.dataId,n!==2),t))return n===2?this.pack(t):this.unpack(t);if(!t){let o=so(this.session.layoutStrategy,e.dims,n);if(n===4){let a=e.dims;if(a.length===4){let s=[a[0],Math.ceil(a[1]*a[2]*a[3]/4)],l=so(this.session.layoutStrategy,s,n),d=e.numberData;if(a[1]*a[2]*a[3]%4!==0){let p=a[0],f=a[1]*a[2]*a[3],g=Math.ceil(f*1/4)*4,b=p*g;d=new Float32Array(b);for(let y=0;y<p;++y){let $=y*f,x=y*g+y%1*f;d.set(e.numberData.subarray($,$+f),x)}}return this.createTextureData(l,e.type,d,e,1)}}if(n===2){let i=ja(this.session.layoutStrategy,e.dims,1,[],{reverseWH:!0}),u=this.createTextureData(i,e.type,e.numberData,e,1);t=this.pack(u)}else t=this.createTextureData(o,e.type,e.numberData,e,1)}return t}createTextureDataFromLayoutBindTensor(e,n,t,o){return this.createTextureData(e,n,t,o,1)}createTextureData(e,n,t,o,i){He.verbose("InferenceHandler",`Creating TextureData: layout:[${JSON.stringify(e)}]`);let u=this.session.textureManager.createTextureFromLayout(n,e,t,i);return this.createTextureDataFromTexture(e,n,u,o)}reshapeUnpacked(e,n){let t=this.getOrCreateTextureData(e,0),o={channels:t.channels,height:t.height,width:t.width,shape:n.length!==0?n:[1],strides:re.computeStrides(n),unpackedShape:n};return this.createTextureDataFromTexture(o,e.type,t.texture).tensor}reshapePacked(e,n){let t=this.getOrCreateTextureData(e,2);if(zd(e.dims,n)){let l={channels:t.channels,height:t.height,width:t.width,shape:n.length!==0?n:[1],strides:re.computeStrides(n),unpackedShape:n,isPacked:!0};return this.createTextureDataFromTexture(l,e.type,t.texture).tensor}let o=Ha(e.dims),i=Ha(n),u=this.reshapePacked(e,o),a=this.run(Ld(this,u,i),[u]);return this.reshapePacked(a,n)}cast(e,n){let t=this.getOrCreateTextureData(e,0);return this.createTextureDataFromTexture(t,n,t.texture).tensor}createTextureDataFromTexture(e,n,t,o,i){let u={...e,tensor:o||new ft(e.unpackedShape,n,a=>this.readTexture(u),async a=>this.readTextureAsync(u),void 0,i),texture:t};return this.setTextureData(u.tensor.dataId,u,e.isPacked),u}getTextureData(e,n=!1){return this.session.isInitializer(e)?this.session.getTextureData(e,n):n?this.packedTextureDataCache.get(e):this.unpackedTextureDataCache.get(e)}setTextureData(e,n,t=!1){this.session.isInitializer(e)?this.session.setTextureData(e,n,t):(t?this.packedTextureDataCache:this.unpackedTextureDataCache).set(e,n)}isTextureLayoutCached(e,n=!1){return!!this.getTextureData(e.dataId,n)}dispose(){this.session.textureManager.clearActiveTextures(),this.packedTextureDataCache.forEach(e=>this.session.textureManager.releaseTexture(e)),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache.forEach(e=>this.session.textureManager.releaseTexture(e)),this.unpackedTextureDataCache=new Map}readTexture(e){return e.isPacked?this.readTexture(this.unpack(e)):this.session.backend.glContext.isFloat32DownloadSupported?this.session.textureManager.readTexture(e,e.tensor.type,e.channels):this.session.textureManager.readUint8TextureAsFloat(qa(this,e))}async readTextureAsync(e){return e.isPacked?this.readTextureAsync(this.unpack(e)):this.session.backend.glContext.isFloat32DownloadSupported?this.session.textureManager.readTextureAsync(e,e.tensor.type,e.channels):this.session.textureManager.readUint8TextureAsFloat(qa(this,e))}pack(e){return this.executeProgram(Rd(this,e.tensor),[e.tensor])}unpack(e){return this.executeProgram(Gd(this,e.tensor),[e.tensor])}}});var Ka,$e,gt=B(()=>{"use strict";Ka=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},$e=r=>new Ka(r)});var Kd,Yd,Xd,O0,E0,Zd=B(()=>{"use strict";gt();rt();Re();Kd={name:"BatchNormalization",inputNames:["A","Scale","B","Mean","Variance"],inputTypes:[0,0,0,0,0]},Yd=(r,e,n)=>(E0(e),[r.run({...Kd,cacheHint:n.cacheKey,get:()=>O0(r,e,n)},e)]),Xd=r=>{let e=r.attributes.getFloat("epsilon",1e-5),n=r.attributes.getFloat("momentum",.9),t=r.attributes.getInt("spatial",1);return $e({epsilon:e,momentum:n,spatial:t})},O0=(r,e,n)=>{let t=se(r.session.backend.glContext.version),o=e[0].dims.length,[i,u]=r.calculateTextureWidthAndHeight(e[1].dims,0),a=`
  float process(int[${o}] indices) {
    vec2 position = offsetToCoords(indices[1], ${i}, ${u});
    float scale = getColorAsFloat(${t.texture2D}(Scale, position));
    float mean = getColorAsFloat(${t.texture2D}(Mean, position));
    float variance = getColorAsFloat(${t.texture2D}(Variance, position));
    float b = getColorAsFloat(${t.texture2D}(B, position));

    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${n.epsilon})) ) + b;
  }`;return{...Kd,output:{dims:e[0].dims,type:e[0].type,textureType:0},shaderSource:a}},E0=r=>{if(!r||r.length!==5)throw new Error("BatchNormalization requires 5 inputs.");let e=r[0],n=r[1],t=r[2],o=r[3],i=r[4];if(e.dims.length<3||n.dims.length!==1||t.dims.length!==1||o.dims.length!==1||i.dims.length!==1)throw new Error("invalid input shape.");if(n.dims[0]!==e.dims[1]||t.dims[0]!==e.dims[1]||o.dims[0]!==e.dims[1]||i.dims[0]!==e.dims[1])throw new Error("invalid input shape.");if(e.type!=="float32"&&e.type!=="float64"||n.type!=="float32"&&n.type!=="float64"||t.type!=="float32"&&t.type!=="float64"||o.type!=="float32"&&o.type!=="float64"||i.type!=="float32"&&i.type!=="float64")throw new Error("invalid input tensor types.")}});var ci,Ut,J,uo,fi,Ar=B(()=>{"use strict";ci=class{constructor(e,n,t,o){this.glContext=e;this.programInfo=n;this.inputTextureLayouts=t;this.outputTextureLayout=o}},Ut=class{constructor(e){this.context=e}},J=class{constructor(e,n){this.routineBody=e;this.dependencies=n}},uo=class{constructor(e,n,t){this.name=e;t?this.dependencies=t:this.dependencies=[],n&&(this.routineBody=n)}addDependency(e){e&&this.dependencies.push(e)}},fi=class{static returnOrderedNodes(e){if(!e||e.length===0)return[];if(e.length===1)return e;let n=new Set,t=new Set,o=new Array;return this.createOrderedNodes(e,n,t,o),o}static createOrderedNodes(e,n,t,o){for(let i=0;i<e.length;++i)this.dfsTraverse(e[i],n,t,o)}static dfsTraverse(e,n,t,o){if(!e||t.has(e.name))return;if(n.has(e.name))throw new Error("Cyclic dependency detected. Can't topologically sort routines needed for shader.");n.add(e.name);let i=e.dependencies;if(i&&i.length>0)for(let u=0;u<i.length;++u)this.dfsTraverse(i[u],n,t,o);o.push(e),t.add(e.name),n.delete(e.name)}}});function P0(){let r="add_";return{body:`
  float ${r}(float a, float b) {
    return a + b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 + v2;
  }
  `,name:r,type:0}}function k0(){let r="div_";return{body:`
  float ${r}(float a, float b) {
    return a / b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 / v2;
  }
  `,name:r,type:0}}function D0(){let r="mul_";return{body:`
  float ${r}(float a, float b) {
    return a * b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 * v2;
  }
  `,name:r,type:0}}function B0(){let r="sub_";return{body:`
  float ${r}(float a, float b) {
    return a - b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 - v2;
  }
  `,name:r,type:0}}function R0(){let r="equal_";return{body:`
  float ${r}(float a, float b) {
    return float(a == b);
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4(equal(v1, v2));
  }
  `,name:r,type:0}}function M0(){let r="greater_";return{body:`
  float ${r}(float a, float b) {
    return float(a > b);
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4( v1.r > v2.r ,
      v1.g > v2.g,
      v1.b > v2.b,
      v1.a > v2.a );
  }
  `,name:r,type:0}}function L0(){let r="less_";return{body:`
  float ${r}(float a, float b) {
    return float(a < b);
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4( v1.r < v2.r ,
                v1.g < v2.g,
                v1.b < v2.b,
                v1.a < v2.a );
  }
  `,name:r,type:0}}function z0(){let r="and_";return{body:`
  float ${r}(float a, float b) {
    return float( bool(a) && bool(b) );
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r && b2.r ,
                b1.g && b2.g,
                b1.b && b2.b,
                b1.a && b2.a );
  }
  `,name:r,type:0}}function N0(){let r="or_";return{body:`
  float ${r}(float a, float b) {
    return float( bool(a) || bool(b) );
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r || b2.r ,
                b1.g || b2.g,
                b1.b || b2.b,
                b1.a || b2.a );
  }
  `,name:r,type:0}}function F0(){let r="xor_";return{body:`
  float ${r}(float a, float b) {
    return float( bool(a) ^^ bool(b) );
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r ^^ b2.r ,
                b1.g ^^ b2.g,
                b1.b ^^ b2.b,
                b1.a ^^ b2.a );
  }
  `,name:r,type:0}}function V0(){return W0("pow")}function G0(){let r="prelu_";return{body:`
  float ${r}(float a, float b) {
    return a < 0.0 ? a * b: a;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4(
      v1.r < 0.0 ? v1.r * v2.r: v1.r,
      v1.g < 0.0 ? v1.g * v2.g: v1.g,
      v1.b < 0.0 ? v1.b * v2.b: v1.b,
      v1.a < 0.0 ? v1.a * v2.a: v1.a
      );
  }
  `,name:r,type:0}}function W0(r){let e=`${r}_`;return{body:`
  float ${e}(float a, float b) {
    return ${r}(a, b);
  }
  vec4 ${e}(vec4 v1, vec4 v2) {
    return ${r}(v1, v2);
  }
  `,name:e,type:0}}var Ht,U0,Jd,Qd,ec,tc,rc,nc,oc,ic,ac,sc,uc,lc,dc=B(()=>{"use strict";We();Ar();rt();Re();Ht=(r,e,n,t=e[0].type,o)=>{let i=r.session.pack?2:0;return{name:n.name,inputNames:["A","B"],inputTypes:[i,i],cacheHint:o,get:()=>U0(r,e,n,t)}},U0=(r,e,n,t=e[0].type)=>{let o=r.session.pack?2:0,i=!re.areEqual(e[0].dims,e[1].dims),u=e[0].dims,a=r.session.pack;if(i){let d=At.calcShape(e[0].dims,e[1].dims,!1);if(!d)throw new Error("Can't perform binary op on the given tensors");u=d;let p=u.length,f=e[0].dims.length!==0?e[0].dims.length:1,g=e[1].dims.length!==0?e[1].dims.length:1,b=e[0].dims.length!==0?"bcastIndices_A(indices, aindices);":"aindices[0] = 0;",y=e[1].dims.length!==0?"bcastIndices_B(indices, bindices);":"bindices[0] = 0;",$=se(r.session.backend.glContext.version),x=a?`
      ${n.body}
      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();
        vec4 result = ${n.name}(a, b);
        ${$.output} = result;
      }`:`
      ${n.body}
      float process(int indices[${p}]) {
        int aindices[${f}];
        int bindices[${g}];
        ${b}
        ${y}
        return ${n.name}(_A(aindices), _B(bindices));
      }`;return{name:n.name,inputNames:["A","B"],inputTypes:[o,o],output:{dims:u,type:t,textureType:o},shaderSource:x,hasMain:a}}let s=se(r.session.backend.glContext.version),l=`
    ${n.body}
    void main() {
      vec4 v1 = ${s.texture2D}(A, TexCoords);
      vec4 v2 = ${s.texture2D}(B, TexCoords);
      vec4 result = ${n.name}(v1, v2);
      ${s.output} = result;
    }
    `;return{name:n.name,inputNames:["A","B"],inputTypes:[o,o],output:{dims:e[0].dims,type:t,textureType:o},shaderSource:l,hasMain:!0}},Jd=(r,e)=>[r.run(Ht(r,e,P0()),e)],Qd=(r,e)=>[r.run(Ht(r,e,z0(),"bool"),e)],ec=(r,e)=>[r.run(Ht(r,e,k0()),e)],tc=(r,e)=>[r.run(Ht(r,e,R0(),"bool"),e)],rc=(r,e)=>[r.run(Ht(r,e,M0(),"bool"),e)],nc=(r,e)=>[r.run(Ht(r,e,L0(),"bool"),e)],oc=(r,e)=>[r.run(Ht(r,e,D0()),e)],ic=(r,e)=>[r.run(Ht(r,e,N0(),"bool"),e)],ac=(r,e)=>[r.run(Ht(r,e,V0()),e)],sc=(r,e)=>[r.run(Ht(r,e,G0()),e)],uc=(r,e)=>[r.run(Ht(r,e,B0()),e)],lc=(r,e)=>[r.run(Ht(r,e,F0(),"bool"),e)]});var cc,fc,q0,pc=B(()=>{"use strict";We();cc=(r,e,n)=>(q0(e),[r.cast(e[0],n)]),fc=r=>wt.tensorDataTypeFromProto(r.attributes.getInt("to")),q0=r=>{if(!r||r.length!==1)throw new Error("Cast requires 1 input.");if(r[0].type==="string")throw new Error("Invalid input type.")}});var j0,K0,hc,pi,mc=B(()=>{"use strict";rt();Re();dr();an();j0=(r,e)=>({name:"Concat (packed)",inputNames:Array.from({length:r},(n,t)=>`X${t}`),inputTypes:Array(r).fill(2),cacheHint:e}),K0=(r,e,n,t)=>{let o=n[0].dims.slice();if(t>=o.length||t<-1*o.length)throw new Error("axis specified for concat doesn't match input dimensionality");t<0&&(t=o.length+t);let i=o.slice(0);for(let N=1;N<n.length;N++){let R=n[N].dims.slice();for(let V=0;V<o.length;V++)if(V===t)i[t]+=R[V];else if(o[V]!==R[V])throw new Error("non concat dimensions must match")}let u=i.length,a=An("coords",u),s=Ot(u),l=cr(),d=n.map(N=>N.dims),p=Qt(u),f=new Array(d.length-1);f[0]=d[0][t];for(let N=1;N<f.length;N++)f[N]=f[N-1]+d[N][t];let g=p[t],b=p.slice(-2),y=p.join(),$=`if (${g} < ${f[0]}) {
        return getChannel(
            getX0(${y}), vec2(${b.join()}));
        }`;for(let N=1;N<f.length;N++){let R=f[N-1];$+=`
            if (${g} < ${f[N]}  && ${g} >= ${f[N-1]}) {
              return getChannel(
                getX${N}(${pi(p,g,R)}),
                vec2(${pi(b,g,R)}));
            }`}let x=f.length,I=f[f.length-1];$+=`
            return getChannel(
              getX${x}(${pi(p,g,I)}),
              vec2(${pi(b,g,I)}));`;let O=se(r.session.backend.glContext.version),C=`
          ${l}
          float getValue(${p.map(N=>"int "+N)}) {
            ${$}
          }

          void main() {
            ${s} coords = getOutputCoords();
            int lastDim = coords.${p[u-1]};
            coords.${p[u-1]} = coords.${p[u-2]};
            coords.${p[u-2]} = lastDim;

            vec4 result = vec4(getValue(${a}), 0., 0., 0.);

            ${a[u-1]} = ${a[u-1]} + 1;
            if (${a[u-1]} < ${i[u-1]}) {
              result.g = getValue(${a});
            }

            ${a[u-2]} = ${a[u-2]} + 1;
            if (${a[u-2]} < ${i[u-2]}) {
              result.a = getValue(${a});
            }

            ${a[u-1]} = ${a[u-1]} - 1;
            if (${a[u-2]} < ${i[u-2]} &&
                ${a[u-1]} < ${i[u-1]}) {
              result.b = getValue(${a});
            }
            ${O.output} = result;
          }
        `;return{...e,output:{dims:i,type:n[0].type,textureType:2},shaderSource:C,hasMain:!0}},hc=(r,e,n)=>{let t=j0(e.length,n.cacheKey);return{...t,get:()=>K0(r,t,e,n.axis)}},pi=(r,e,n)=>{let t=r.indexOf(e);return r.map((i,u)=>u===t?`${i} - ${n}`:i).join()}});var gc,Y0,X0,Z0,bc,J0,Q0,ev,yc,tv,vc=B(()=>{"use strict";gt();Re();mc();gc=(r,e,n)=>(tv(e),r.session.pack&&e[0].dims.length>1?[r.run(hc(r,e,n),e)]:[r.run(Z0(r,e,n),e)]),Y0=(r,e)=>({name:"Concat",inputNames:Array.from({length:r},(n,t)=>`X${t}`),inputTypes:Array(r).fill(0),cacheHint:e}),X0=(r,e,n,t)=>{let o=n[0].dims.slice();if(t>=o.length||t<-1*o.length)throw new Error("axis specified for concat doesn't match input dimensionality");t<0&&(t=o.length+t);let i=o.slice(0);for(let g=1;g<n.length;g++){let b=n[g].dims.slice();for(let y=0;y<o.length;y++)if(y===t)i[t]+=b[y];else if(o[y]!==b[y])throw new Error("non concat dimensions must match")}let u=i.length,a=new Array(n.length),s=0;for(let g=0;g<a.length;++g)s+=n[g].dims[t],a[g]=s;let l="";n.length<5?l=bc(a):l=J0(a);let d=Q0(n.length,u),p=ev(a),f=`
        ${d}
        ${p}
        ${l}
        float process(int indices[${u}]) {
          int textureIndex = getTextureWhereDataResides (indices[${t}]);

          if(textureIndex != 0) {
            indices[${t}] = indices[${t}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));
          }

          return fetchDataFromCorrectTexture(textureIndex, indices);
        }`;return{...e,output:{dims:i,type:n[0].type,textureType:0},shaderSource:f}},Z0=(r,e,n)=>{let t=Y0(e.length,n.cacheKey);return{...t,get:()=>X0(r,t,e,n.axis)}},bc=r=>`int getTextureWhereDataResides(int index) {
      ${r.map((n,t)=>`if(index<${n}) {return ${t};}
`).join("")}
    }`,J0=r=>bc(r),Q0=(r,e)=>{let n=[`float fetchDataFromCorrectTexture(int textureIndex, int indices[${e}]) {`];for(let t=0;t<r;++t)t===0?n.push(`	if (textureIndex == ${t}) { return _X${t}(indices); }`):t===r-1?n.push(`	else { return _X${t}(indices); }`):n.push(`	else if (textureIndex == ${t}) { return _X${t}(indices); }`);return n.push("	}"),n.join(`
`)},ev=r=>{let e=["int getSizeInConcatAxisValueFromIndex(int index) {"];for(let n=0;n<r.length;++n)n===0?e.push(`	if (index == ${n}) { return ${r[n]}; }`):n===r.length-1?e.push(`	else { return ${r[n]}; }`):e.push(`	else if (index == ${n}) { return ${r[n]}; }`);return e.push("	}"),e.join(`
`)},yc=r=>$e({axis:r.attributes.getInt("axis")}),tv=r=>{if(!r||r.length<1)throw new Error("too few inputs");let e=r[0].type,n=r[0].dims.length;if(e==="string")throw new Error("string tensor is not supported yet");for(let t of r){if(t.type!==e)throw new Error("input tensors should be one type");if(t.dims.length!==n)throw new Error("input tensors should have the same shape")}}});function rv(){return qt("abs")}function nv(){return qt("acos")}function ov(){return qt("asin")}function iv(){return qt("atan")}function av(){return qt("ceil")}function sv(){return qt("cos")}function uv(r){let e="elu";return{body:`
  const float alpha = float(${r});

  float ${e}_(float a) {
    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;
  }
  vec4 ${e}_(vec4 v) {
    return vec4(${e}_(v.x), ${e}_(v.y), ${e}_(v.z), ${e}_(v.w));
  }
  `,name:e,type:0}}function lv(){return qt("exp")}function dv(){return qt("floor")}function Ya(r,e){let n="clip";return{body:`
  const float min = float(${r});
  const float max = float(${e});

  float ${n}_(float a) {
    return clamp(a, min, max);
  }
  vec4 ${n}_(vec4 v) {
    return clamp(v, min, max);
  }
  `,name:n,type:0}}function cv(){let r="indentity";return{body:`
  float ${r}_(float a) {
    return a;
  }
  vec4 ${r}_(vec4 v) {
    return v;
  }
  `,name:r,type:0}}function fv(r){let e="leakyRelu";return{body:`
  const float alpha = float(${r});

  float ${e}_(float a) {
    return a < 0.0 ? a * alpha : a;
  }
  vec4 ${e}_(vec4 v) {
    return vec4(${e}_(v.x), ${e}_(v.y), ${e}_(v.z), ${e}_(v.w));
  }
  `,name:e,type:0}}function pv(){return qt("log")}function hv(){let r="neg";return{body:`
  float ${r}_(float a) {
    return -a;
  }
  vec4 ${r}_(vec4 v) {
    return -v;
  }
  `,name:r,type:0}}function mv(){let r="not";return{body:`
  float ${r}_(float a) {
    return float( ! bool(a) );
  }
  bool ${r}_(bool a) {
    return !a;
  }
  vec4 ${r}_(vec4 v) {
    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));
  }
  bvec4 ${r}_(bvec4 v) {
    return bvec4(!v.x, !v.y, !v.z, !v.w);
  }
  `,name:r,type:0}}function gv(){return qt("sin")}function Xa(){let r="relu";return{body:`
  float ${r}_(float a) {
    return max( a, 0.0 );
  }
  vec4 ${r}_(vec4 v) {
    return max( v, 0.0 );
  }
  `,name:r,type:0}}function Za(){let r="sigmoid";return{body:`
  float ${r}_(float a) {
    return 1.0 / (1.0 + exp(-a));
  }
  vec4 ${r}_(vec4 v) {
    return 1.0 / (1.0 + exp(-v));
  }
  `,name:r,type:0}}function bv(){return qt("sqrt")}function yv(){return qt("tan")}function vv(){let r="tanh";return{body:`
  float ${r}_(float a) {
    a = clamp(a, -10., 10.);
    a = exp(2.*a);
    return (a - 1.) / (a + 1.);
  }
  vec4 ${r}_(vec4 v) {
    v = clamp(v, -10., 10.);
    v = exp(2.*v);
    return (v - 1.) / (v + 1.);
  }
  `,name:r,type:0}}function qt(r){return{body:`
  float ${r}_(float a) {
    return ${r}(a);
  }
  vec4 ${r}_(vec4 v) {
    return ${r}(v);
  }
  `,name:r,type:0}}var wv,dt,wc,xc,Tc,$c,Ja,Sc,Ic,xv,_c,Ac,Oc,Ec,Cc,Pc,Qa,kc,Dc,Bc,Rc,Mc,Lc,zc,Nc,Fc,Vc,Gc,es=B(()=>{"use strict";gt();We();Ar();rt();Re();wv=(r,e,n,t)=>{let o=r.session.pack?2:0,i=se(r.session.backend.glContext.version);return{...e,output:{dims:n.dims,type:n.type,textureType:o},shaderSource:`
     ${t.body}
     void main() {
       vec4 v = ${i.texture2D}(A, TexCoords);
       v = ${t.name}_(v);
       ${i.output} = v;
     }
     `,hasMain:!0}},dt=(r,e,n,t)=>{let o=r.session.pack?2:0,i={name:n.name,inputTypes:[o],inputNames:["A"],cacheHint:t};return{...i,get:()=>wv(r,i,e,n)}},wc=(r,e)=>[r.run(dt(r,e[0],rv()),e)],xc=(r,e)=>[r.run(dt(r,e[0],nv()),e)],Tc=(r,e)=>[r.run(dt(r,e[0],ov()),e)],$c=(r,e)=>[r.run(dt(r,e[0],iv()),e)],Ja=(r,e,n)=>[r.run(dt(r,e[0],Ya(n.min,n.max),n.cacheKey),e)],Sc=r=>$e({min:r.attributes.getFloat("min",rn),max:r.attributes.getFloat("max",nn)}),Ic=(r,e)=>{let n=xv(r,e);return Ja(r,[e[0]],n)},xv=(r,e)=>{if(e.length>=3&&(!r.session.isInitializer(e[1].dataId)||!r.session.isInitializer(e[2].dataId)))throw new Error("dynamic clip attributes are not allowed");let n=e.length>=3?e[1].numberData[0]:rn,t=e.length>=3?e[2].numberData[0]:nn;return $e({min:n,max:t})},_c=(r,e)=>[r.run(dt(r,e[0],av()),e)],Ac=(r,e)=>[r.run(dt(r,e[0],sv()),e)],Oc=(r,e,n)=>[r.run(dt(r,e[0],uv(n.alpha),n.cacheKey),e)],Ec=r=>$e({alpha:r.attributes.getFloat("alpha",1)}),Cc=(r,e)=>[r.run(dt(r,e[0],lv()),e)],Pc=(r,e)=>[r.run(dt(r,e[0],dv()),e)],Qa=(r,e)=>[r.run(dt(r,e[0],cv()),e)],kc=(r,e,n)=>[r.run(dt(r,e[0],fv(n.alpha),n.cacheKey),e)],Dc=r=>$e({alpha:r.attributes.getFloat("alpha",.01)}),Bc=(r,e)=>[r.run(dt(r,e[0],pv()),e)],Rc=(r,e)=>[r.run(dt(r,e[0],hv()),e)],Mc=(r,e)=>[r.run(dt(r,e[0],mv()),e)],Lc=(r,e)=>[r.run(dt(r,e[0],Xa()),e)],zc=(r,e)=>[r.run(dt(r,e[0],Za()),e)],Nc=(r,e)=>[r.run(dt(r,e[0],gv()),e)],Fc=(r,e)=>[r.run(dt(r,e[0],bv()),e)],Vc=(r,e)=>[r.run(dt(r,e[0],yv()),e)],Gc=(r,e)=>[r.run(dt(r,e[0],vv()),e)]});function fr(r){let e;switch(r.activation){case"Relu":e=Xa();break;case"Sigmoid":e=Za();break;case"Clip":e=Ya(r.clipMin,r.clipMax);break;default:return{activationFunction:"",applyActivation:""}}let n=e.name,t=e.body,o=`value = ${n}_(value);`;return{activationFunction:t,applyActivation:o}}var On,sn=B(()=>{"use strict";We();es();On=r=>{let e=r.getString("activation","");if(e==="Clip"){let[n,t]=r.getFloats("activation_params",[rn,nn]);return{activation:e,clipMax:t,clipMin:n,activationCacheKey:`${e}:${n},${t}`}}return{activation:e,activationCacheKey:e}}});var $v,Sv,Wc,Uc=B(()=>{"use strict";Ft();rt();Re();hi();sn();$v=(r,e)=>({name:"GroupedConv",inputNames:r?["X","W","Bias"]:["X","W"],inputTypes:r?[0,0,0]:[0,0],cacheHint:e}),Sv=(r,e,n,t)=>{let i=e.length>2?"value += getBias(output_channel);":"",u=e[0].dims.slice(),a=e[1].dims.slice(),s=a[0]/t.group;He.verbose("GroupedConv",`autpPad:${t.autoPad}, dilations:${t.dilations}, group:${t.group}, kernelShape:${t.kernelShape}, pads:${t.pads}, strides:${t.strides}`);let l=En(u,a,t.dilations,t.pads,t.strides),d=se(r.session.backend.glContext.version),{activationFunction:p,applyActivation:f}=fr(t),g=`
  const ivec2 strides = ivec2(${t.strides[0]}, ${t.strides[1]});
  const ivec2 pads = ivec2(${t.pads[0]}, ${t.pads[1]});
  ${p}
  void main() {
    ivec4 coords = getOutputCoords();
    int batch = coords.x;
    int output_channel = coords.y;
    ivec2 xRCCorner = coords.zw * strides - pads;
    int group_id = output_channel / ${s};

    float value = 0.0;
    for (int wInChannel = 0; wInChannel < ${a[1]}; wInChannel++) {
      int input_channel = group_id * ${a[1]} + wInChannel;
      for (int wHeight = 0; wHeight < ${a[2]}; wHeight++) {
        int xHeight = xRCCorner.x + wHeight * ${t.dilations[0]};

        if (xHeight < 0 || xHeight >= ${u[2]}) {
          continue;
        }

        for (int wWidth = 0; wWidth < ${a[3]}; wWidth++) {
          int xWidth = xRCCorner.y + wWidth * ${t.dilations[1]};
          if (xWidth < 0 || xWidth >= ${u[3]}) {
            continue;
          }

          float xVal = getX(batch, input_channel, xWidth, xHeight);
          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);
          value += xVal*wVal;
        }
      }
    }
    ${i}
    ${f}
    ${d.output} = vec4(value, .0, .0, .0);
  }
`;return{...n,output:{dims:l,type:e[0].type,textureType:0},shaderSource:g,hasMain:!0}},Wc=(r,e,n)=>{let t=$v(e.length>2,n.cacheKey);return{...t,get:()=>Sv(r,e,t,n)}}});var Iv,_v,Hc,qc=B(()=>{"use strict";rt();Re();an();Iv=r=>({name:"Im2Col (packed)",inputNames:["A"],inputTypes:[2],cacheHint:r}),_v=(r,e,n,t,o,i)=>{let u=n.dims,a=t.dims,s=2,l=3,d=o.length,p=[a[1]*a[2]*a[3],o[2]*o[3]],f=a[2]*a[3],g=cr(),b=se(r.session.backend.glContext.version),y="";for(let x=0;x<=1;x++)for(let I=0;I<=1;I++)y+=`
            blockIndex = rc.x + ${I};
            pos = rc.y + ${x};

            if(blockIndex < ${p[1]} && pos < ${p[0]}) {
              offsetY = int(blockIndex / (${o[d-1]})) * ${i.strides[0]} -
                ${i.pads[0]};
              d0 = offsetY + ${i.dilations[0]} * (imod(pos, ${f}) / ${a[2]});

              if(d0 < ${u[s]} && d0 >= 0) {
                offsetX = imod(blockIndex, ${o[d-1]}) * ${i.strides[1]} -
                  ${i.pads[1]};
                d1 = offsetX + ${i.dilations[1]} * imod(imod(pos, ${f}), ${a[2]});

                if(d1 < ${u[l]} && d1 >= 0) {

                  ch = int(float(pos)/ ${f}.);
                    innerDims = vec2(d0, d1);
                    result[${x*2+I}] = getChannel(
                      getA(0, ch, int(innerDims.x),
                      int(innerDims.y)), innerDims);
                }
              }
            }

          `;let $=`
      ${g}

      void main() {
        ivec2 rc = getOutputCoords();
          vec4 result = vec4(0.0);
          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
          vec2 innerDims;
          ${y}
          ${b.output} = result;
      }
            `;return{...e,output:{dims:p,type:n.type,textureType:2},shaderSource:$,hasMain:!0}},Hc=(r,e,n,t,o)=>{let i=Iv(o.cacheKey);return{...i,get:()=>_v(r,i,e,n,t,o)}}});function Ov(r,e,n){let t=e[0].dims,o=e[1].dims,i=At.calcShape(t,o,!0);if(!i)throw new Error("Can't use matmul on the given tensors");let u=Ot(i.length),a=Qt(),{activationFunction:s,applyActivation:l}=fr(n),d=e.length>2,p=d?"value += getBiasForMatmul();":"",f=d?`${rs(u,a,e[2].dims,i,!1)}`:"",g=i.length,b=t.length,y=o.length,$=t[t.length-1],x=`
    ${s}
    ${f}
    float process(int indices[${g}]) {
        int a[${b}];
        int b[${y}];
        bcastMatmulIndices_A(indices, a);
        bcastMatmulIndices_B(indices, b);

        float value;
        for (int k=0; k<${$}; ++k) {
            a[${b-1}] = k;
            b[${y-2}] = k;
            value += _A(a) * _B(b);
        }
        ${p}
        ${l}
        return value;
    }`;return{...r,output:{dims:i,type:e[0].type,textureType:0},shaderSource:x}}function ts(r,e){let n=Av(r.length>2,e.activationCacheKey);return{...n,get:()=>Ov(n,r,e)}}function rs(r,e,n,t,o){let i="",u=n.length,a=t.length,s=a-u;a<2&&u>0?i="coords":i=n.map((y,$)=>`coords.${e[$+s]}`).join(", ");let d=At.getBroadcastDims(n,t).map(y=>`coords.${e[y+s]} = 0;`).join(`
`),f=re.size(n)===1,g="vec4(outputValue.xx, outputValue.yy)";return f&&(g="vec4(outputValue.x)"),o?`
vec4 getBiasForMatmul() {
  ${r} coords = getOutputCoords();
  ${d}
  vec4 outputValue = getBias(${i});
  return ${g};
}`:`
float getBiasForMatmul() {
  ${r} coords = getOutputCoords();
  ${d}
  return getBias(coords.x);
}`}var jc,Kc,Av,Ev,mi=B(()=>{"use strict";We();Re();dr();sn();ns();jc=(r,e,n)=>(Ev(e),r.session.pack?[r.run(gi(r,e,n),e)]:[r.run(ts(e,n),e)]),Kc=r=>On(r.attributes),Av=(r,e)=>({name:"MatMul",inputNames:r?["A","B","Bias"]:["A","B"],inputTypes:r?[0,0,0]:[0,0],cacheHint:e});Ev=r=>{if(!r||r.length!==2)throw new Error("MatMul requires 2 inputs.");if(r[0].dims[r[0].dims.length-1]!==r[1].dims[r[1].dims.length-2])throw new Error("shared dimension does not match.");if(r[0].type!=="float32"&&r[0].type!=="float64"||r[1].type!=="float32"&&r[1].type!=="float64")throw new Error("inputs should be float type");if(r[0].type!==r[1].type)throw new Error("inputs types should match")}});function kv(r,e,n,t){let o=[],i=[],u=n[0].dims,a=n[1].dims,s=u.length,l=a.length,d=t.length,p=d-s,f=d-l;o=u.map((O,C)=>`coords.${e[C+p]}`),o[s-1]="i*2",o.join(", "),i=a.map((O,C)=>`coords.${e[C+f]}`),i[l-2]="i*2",i.join(", ");let g=At.getBroadcastDims(u,t),b=At.getBroadcastDims(a,t),y=g.map(O=>`coords.${e[O+p]} = 0;`).join(`
`),$=b.map(O=>`coords.${e[O+f]} = 0;`).join(`
`),x=`int lastDim = coords.${e[d-1]};
  coords.${e[d-1]} = coords.${e[d-2]};
  coords.${e[d-2]} = lastDim;`;return`
vec4 getAAtOutCoordsMatmul(int i) {
  ${r} coords = getOutputCoords();
  ${x}
  ${y}
  vec4 outputValue = getA(${o});
  return outputValue;
}

vec4 getBAtOutCoordsMatmul(int i) {
  ${r} coords = getOutputCoords();
  ${x}
  ${$}
  vec4 outputValue = getB(${i});
  return outputValue;
}`}function Dv(r,e){let n="";for(let t=0;t<e-2;t++)n+=`rc.${r[t]}, `;return n+=`rc.${r[e-2]}, i*2`,n}function Bv(r,e){let n="";for(let t=0;t<e-2;t++)n+=`rc.${r[t]}, `;return n+=`i*2, rc.${r[e-1]}`,n}var Cv,Pv,gi,ns=B(()=>{"use strict";We();rt();Re();dr();sn();mi();Cv=(r,e)=>({name:"MatMul (packed)",inputNames:r?["A","B","Bias"]:["A","B"],inputTypes:r?[2,2,2]:[2,2],cacheHint:e}),Pv=(r,e,n,t)=>{let o=n.length>2,i=o?"value += getBiasForMatmul();":"",u=n[0].dims,a=n[1].dims,s=At.calcShape(u,a,!0),l=!re.areEqual(n[0].dims,n[1].dims);if(!s)throw new Error("Can't use matmul on the given tensors");let d=u[u.length-1],p=Math.ceil(d/2),f=u.length,g=a.length,b=se(r.session.backend.glContext.version),y=Ot(s.length),$=s.length,x=Qt(),{activationFunction:I,applyActivation:O}=fr(t),C=o?`${rs(y,x,n[2].dims,s,!0)}`:"",N=l?`${kv(y,x,n,s)}`:"",R=l?"getAAtOutCoordsMatmul(i)":`getA(${Dv(x,f)})`,V=l?"getBAtOutCoordsMatmul(i)":`getB(${Bv(x,g)})`,W=l?"":`${y} rc =
          getOutputCoords(); int lastDim = rc.${x[$-1]}; rc.${x[$-1]} =
          rc.${x[$-2]}; rc.${x[$-2]} = lastDim;
      `,j=`
            ${N}
            ${C}
            ${I}
            void main() {
              ${W}

              vec4 value = vec4(0);
              for (int i = 0; i < ${p}; i++) {
                vec4 a = ${R};
                vec4 b = ${V};

                value += (a.rrbb * b.rgrg);
                value += (a.ggaa * b.baba);
              }
              ${i}
              ${O}
              ${b.output} = value;
            }`;return{...e,output:{dims:s,type:n[0].type,textureType:2},shaderSource:j,hasMain:!0}},gi=(r,e,n)=>{let t=Cv(e.length>2,n.activationCacheKey);return{...t,get:()=>Pv(r,t,e,n)}}});var Yc,Xc=B(()=>{"use strict";hi();qc();ns();Yc=(r,e,n)=>{let t=e[0].dims,o=e[1].dims,i=En(t,o,n.dilations,n.pads,n.strides),u=r.run(Hc(r,e[0],e[1],i,n),[e[0]]),a=r.reshapePacked(e[1],[o[0],o[1]*o[2]*o[3]]),s=e.length===3?[a,u,e[2]]:[a,u],l=r.run(gi(r,s,n),s);return r.reshapePacked(l,i)}});var Rv,Mv,Zc,os,is=B(()=>{"use strict";Re();Rv=r=>({name:"Im2Col",inputNames:["X"],inputTypes:[0],cacheHint:r}),Mv=(r,e,n,t,o,i)=>{let u=n.dims,a=t.dims,s=o.length,l=os(u,a,o,4),d=`
        const int XC = ${u[1]};
        const int XH = ${u[2]};
        const int XW = ${u[3]};
        const int KH = ${i.kernelShape[0]};
        const int KW = ${i.kernelShape[1]};
        const int dilationH = ${i.dilations[0]};
        const int dilationW = ${i.dilations[1]};
        const int strideH = ${i.strides[0]};
        const int strideW = ${i.strides[1]};
        const int padH = ${i.pads[0]};
        const int padW = ${i.pads[1]};
        const int KHKW = KH*KW;
        const int XCKHKW = XC * KHKW;
        const int outputChannels = 4;
        vec4 process(int indices[${s}]) {
          int b  = indices[0]; // batch size
          int oh = indices[1] * strideH - padH; //output height
          int ow = indices[2] * strideW - padW; //output width
          int p = indices[3] * outputChannels; //patch
          vec4 value = vec4(0.0);
          for(int i=0; i < outputChannels; ++i) {
            if(p < XCKHKW) {
              int patchC = p / KHKW;
              int patchH = (p - patchC*KHKW) / KW;
              int patchW = (p - patchC*KHKW) - patchH * KW;
              int xh2 = oh + patchH * dilationH;
              int xw2 = ow + patchW * dilationW;
              int x[${u.length}];
              x[0] = b;
              x[1] = patchC;
              x[2] = xh2;
              x[3] = xw2;
              if(xh2 >= 0 &&
                  xh2 < XH &&
                  xw2 >= 0 &&
                  xw2 < XW) {
                value[i] = _X(x);
              }
            }
            ++p;
          }
          return value;
        }
        `;return{...e,output:{dims:l,type:n.type,textureType:4},shaderSource:d}},Zc=(r,e,n,t,o)=>{let i=Rv(o.cacheKey);return{...i,get:()=>Mv(r,i,e,n,t,o)}},os=(r,e,n,t=4)=>[n[0],n[2],n[3],Math.ceil(r[1]*e[2]*e[3]/t)]});var Lv,zv,Jc,Qc=B(()=>{"use strict";We();rt();Re();sn();is();Lv=(r,e)=>({name:"ConvDotProduct",inputNames:r?["Im2Col","K","B"]:["Im2Col","K"],inputTypes:r?[0,4,0]:[0,4],cacheKey:e.activationCacheKey}),zv=(r,e,n,t,o)=>{let i=n[0].dims,u=n[1].dims,a=[u[0],Math.ceil(i[1]*u[2]*u[3]/4)],s=os(i,u,t),[l,d]=r.calculateTextureWidthAndHeight(a,4),p=re.computeStrides(s),[f,g]=r.calculateTextureWidthAndHeight(s,4),b=t.length,y=n.length<3?"0.0":"_B(b)",$=Math.ceil(i[1]*u[2]*u[3]/4),{activationFunction:x,applyActivation:I}=fr(o),O=se(r.session.backend.glContext.version),C=`
${x}
float process(int indices[${b}]) {
  int b[1];
  b[0] = indices[1];
  int im2col[4];
  im2col[0] = indices[0];
  im2col[1] = indices[2];
  im2col[2] = indices[3];
  int im2colOffset = im2col[0] * ${p[0]} + im2col[1] * ${p[1]} + im2col[2] * ${p[2]};
  int kernelOffset = indices[1] * ${a[1]};
  float value = ${y};
  for (int i = 0; i < ${$}; ++i) {
    vec2 im2colCoords = offsetToCoords(im2colOffset, ${f}, ${g});
    vec2 kernelCoords = offsetToCoords(kernelOffset, ${l}, ${d});
    value += dot(${O.texture2D}(Im2Col, im2colCoords), ${O.texture2D}(K, kernelCoords));
    ++im2colOffset;
    ++kernelOffset;
  }
  ${I}
  return value;
}`;return{...e,output:{dims:t,type:n[0].type,textureType:0},shaderSource:C}},Jc=(r,e,n,t)=>{let o=Lv(e.length>2,t);return{...o,get:()=>zv(r,o,e,n,t)}}});var En,as,Nv,Fv,Vv,Gv,ss,Wv,hi=B(()=>{"use strict";gt();We();Uc();Xc();Qc();sn();is();mi();En=(r,e,n,t,o)=>{let i=r[0],u=r.slice(2),a=u.length,s=e[0],d=e.slice(2).map((b,y)=>b+(b-1)*(n[y]-1)),f=u.map((b,y)=>b+t[y]+t[y+a]).map((b,y)=>Math.floor((b-d[y]+o[y])/o[y]));return[i,s].concat(...f)},as=(r,e,n)=>(Wv(e,n),Nv(r,e,n)),Nv=(r,e,n)=>{let t=Gv(n,e),o=r.session.pack,i=t.kernelShape[0]===1&&t.kernelShape[1]===1;return t.group>1?[r.run(Wc(r,e,t),e)]:i&&o?[Fv(r,e,t)]:o&&e[0].dims.length===4&&e[0].dims[0]===1&&!i?[Yc(r,e,t)]:[Vv(r,e,t)]},Fv=(r,e,n)=>{let t=e[0].dims,o=e[1].dims,i=En(t,o,n.dilations,n.pads,n.strides),u=r.reshapeUnpacked(e[0],[t[1],t[2]*t[3]]),a=r.reshapeUnpacked(e[1],[o[0],o[1]]),s=e.length>2?[a,u,e[2]]:[a,u],l=r.run(ts(s,n),s);return r.reshapeUnpacked(l,i)},Vv=(r,e,n)=>{let t=e[0].dims,o=e[1].dims,i=En(t,o,n.dilations,n.pads,n.strides),u=r.run(Zc(r,e[0],e[1],i,n),[e[0]]),a=e.length===3?[u,e[1],e[2]]:[u,e[1]];return r.run(Jc(r,e,i,n),a)},Gv=(r,e)=>{let n=r.kernelShape.slice();if(r.kernelShape.length===0)for(let i=2;i<e[1].dims.length;++i)n.push(e[1].dims[i]);let t=r.pads.slice();tn.adjustPadsBasedOnAutoPad(e[0].dims,r.strides,r.dilations,n,t,r.autoPad);let o=Object.assign({},r);return Object.assign(o,{kernelShape:n,pads:t,cacheKey:r.cacheKey}),o},ss=r=>{let e=r.attributes,n=On(e),t=e.getString("auto_pad","NOTSET"),o=e.getInts("dilations",[1,1]),i=e.getInt("group",1),u=e.getInts("kernel_shape",[]),a=e.getInts("pads",[0,0,0,0]),s=e.getInts("strides",[1,1]);return $e({autoPad:t,dilations:o,group:i,kernelShape:u,pads:a,strides:s,...n})},Wv=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4||r[1].dims.length!==4)throw new Error("currently only support 2-dimensional conv");let n=r[0].dims[1],t=r[1].dims[1]*e.group;if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(r.length===3&&(r[2].dims.length!==1||r[1].dims[0]!==r[2].dims[0]))throw new Error("invalid bias");let o=r[0].dims.length-2;if(e.dilations.length!==o)throw new Error(`dilations should be ${o}D`);if(e.strides.length!==o)throw new Error(`strides should be ${o}D`);if(e.pads.length!==o*2)throw new Error(`pads should be ${o*2}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape");if(r[0].type!=="float32"||r[1].type!=="float32")throw new Error("Conv input(X,W) should be float tensor");if(r.length===3&&r[2].type!=="float32")throw new Error("Conv input(bias) should be float tensor")}});var Uv,Hv,qv,ef,jv,Kv,Yv,Xv,Zv,Jv,tf,Qv,rf=B(()=>{"use strict";gt();rt();Re();sn();Uv=(r,e,n,t,o,i)=>(r-1)*e+n+(t-1)*o+1-i,Hv=(r,e,n,t,o)=>{let i=Math.floor(r/2);e==="SAME_UPPER"?(n[t]=i,n[o]=r-i):e==="SAME_LOWER"&&(n[t]=r-i,n[o]=i)},qv=(r,e,n,t,o,i,u,a)=>{let s=r.length-2,l=a.length===0;for(let d=0;d<s;++d){let p=l?r[d+2]*i[d]:a[d],f=Uv(r[d+2],i[d],o[d],e[d],n[d],p);Hv(f,t,o,d,d+s),l&&a.push(i[d]*(r[d+2]-1)+u[d]+(e[d]-1)*n[d]+1-o[d]-o[d+s])}},ef=(r,e,n)=>(Qv(e,n),jv(r,e,n)),jv=(r,e,n)=>{let t=Jv(n,e);return[Zv(r,e,t)]},Kv=(r,e)=>({name:"ConvTranspose",inputNames:r?["X","W","B"]:["X","W"],inputTypes:r?[0,0,0]:[0,0],cacheHint:e}),Yv=(r,e,n,t)=>{let i=e.length>2?"getB(output_channel)":"0.0",u=e[0].dims,a=e[1].dims,s=a[1],l=a[0]/t.group,d=[e[0].dims[0],e[1].dims[1]*t.group,...t.outputShape],p=se(r.session.backend.glContext.version),{activationFunction:f,applyActivation:g}=fr(t),b=`
  const ivec2 strides = ivec2(${t.strides[0]}, ${t.strides[1]});
  const ivec2 pads = ivec2(${t.pads[0]}, ${t.pads[1]});
  ${f}
  void main() {
    ivec4 coords = getOutputCoords();
    int batch = coords.x;
    int output_channel = coords.y;

    ivec2 loc = coords.zw + pads;

    int group_id = output_channel / ${s};
    int wOutChannel = output_channel - group_id * ${s};

    float value = ${i};
    for (int inChannelOffset = 0; inChannelOffset < ${l}; inChannelOffset++) {
      int input_channel = group_id * ${l} + inChannelOffset;
      for (int wWOff = 0; wWOff < ${a[2]}; wWOff++) {
        for (int wHOff = 0; wHOff < ${a[3]}; wHOff++) {
          ivec2 wOff = ivec2(wWOff * ${t.dilations[0]}, wHOff * ${t.dilations[1]});
          ivec2 wLoc = loc - wOff;
          ivec2 wLocIn = wLoc / strides;
          if (
            wLocIn * strides == wLoc &&
            wLocIn.x >= 0 && wLocIn.x < ${u[2]} &&
            wLocIn.y >= 0 && wLocIn.y < ${u[3]}
          ) {
            float xVal = getX(batch, input_channel, wLocIn.y, wLocIn.x);
            float wVal = getW(input_channel, wOutChannel, wHOff, wWOff);
            value += xVal * wVal;
          }
        }
      }
    }
    ${g}
    ${p.output} = vec4(value, .0, .0, .0);
  }
`;return{...n,output:{dims:d,type:e[0].type,textureType:0},shaderSource:b,hasMain:!0}},Xv=(r,e,n)=>{let t=Kv(e.length>2,n.cacheKey);return{...t,get:()=>Yv(r,e,t,n)}},Zv=(r,e,n)=>r.run(Xv(r,e,n),e),Jv=(r,e)=>{let n=r.kernelShape.slice();if(r.kernelShape.length===0)for(let a=2;a<e[1].dims.length;++a)n.push(e[1].dims[a]);let t=r.pads.slice(),o=r.outputShape.slice(),i=e[0].dims;qv(i,n,r.dilations,r.autoPad,t,r.strides,r.outputPadding,o);let u=Object.assign({},r);return Object.assign(u,{kernelShape:n,pads:t,outputShape:o,cacheKey:r.cacheKey}),u},tf=r=>{let e=r.attributes,n=On(e),t=e.getString("auto_pad","NOTSET"),o=e.getInts("dilations",[1,1]),i=e.getInt("group",1),u=e.getInts("kernel_shape",[]),a=e.getInts("output_padding",[0,0]),s=e.getInts("output_shape",[]),l=e.getInts("pads",[0,0,0,0]),d=e.getInts("strides",[1,1]);return $e({autoPad:t,dilations:o,group:i,kernelShape:u,outputPadding:a,outputShape:s,pads:l,strides:d,...n})},Qv=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4||r[1].dims.length!==4)throw new Error("currently only support 2-dimensional conv");let n=r[0].dims[1],t=r[1].dims[0];if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let o=r[1].dims[1]*e.group;if(r.length===3&&(r[2].dims.length!==1||r[2].dims[0]!==o))throw new Error("invalid bias");let i=r[0].dims.length-2;if(e.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(e.strides.length!==i)throw new Error(`strides should be ${i}D`);if(e.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(e.outputPadding.length!==i)throw new Error(`output_padding should be ${i}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape");if(e.outputShape.length!==0&&e.outputShape.length!==r[0].dims.length-2)throw new Error("invalid output shape");if(r[0].type!=="float32"||r[1].type!=="float32")throw new Error("ConvTranspose input(X,W) should be float tensor");if(r.length===3&&r[2].type!=="float32")throw new Error("ConvTranspose input(bias) should be float tensor")}});var nf,un,of,ew,af,tw,rw,nw,bi=B(()=>{"use strict";gt();We();Re();nf={name:"Transpose",inputNames:["A"],inputTypes:[0]},un=(r,e,n)=>(nw(e),[r.run({...nf,cacheHint:n.cacheKey,get:()=>ew(r,e[0],n.perm)},e)]),of=r=>$e({perm:r.attributes.getInts("perm",[])}),ew=(r,e,n)=>{let t=e.dims;n=af(t,n);let o=tw(t,n),i=t.length,u=`
      ${rw("perm",n,i)}
      float process(int indices[${i}]) {
        int a[${i}];
        perm(a, indices);
        return _A(a);
      }`;return{...nf,output:{dims:o,type:e.type,textureType:0},shaderSource:u}},af=(r,e)=>(e&&e.length!==r.length&&(e=[...r.keys()].reverse()),e),tw=(r,e)=>(e=af(r,e),re.sortBasedOnPerm(r,e)),rw=(r,e,n)=>{let t=[];t.push(`void ${r}(out int a[${n}], int src[${n}]) {`);for(let o=0;o<n;++o)t.push(`	a[${e[o]}]=src[${o}];`);return t.push("	}"),t.join(`
`)},nw=r=>{if(!r||r.length!==1)throw new Error("Transpose requires 1 input.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("input should be float tensor")}});var sf,uf,ow,lf=B(()=>{"use strict";bi();sf=(r,e,n)=>{ow(e);let t=n.blocksize,o=t*t,i=n.mode==="DCR"?[0,3,4,1,5,2]:[0,1,4,2,5,3],u=n.mode==="DCR"?[e[0].dims[0],t,t,e[0].dims[1]/o,e[0].dims[2],e[0].dims[3]]:[e[0].dims[0],e[0].dims[1]/o,t,t,e[0].dims[2],e[0].dims[3]],a=r.reshapeUnpacked(e[0],u),s={perm:i,cacheKey:`${i}`},[l]=un(r,[a],s),d=[e[0].dims[0],e[0].dims[1]/o,e[0].dims[2]*t,e[0].dims[3]*t];return[r.reshapeUnpacked(l,d)]},uf=r=>{let e=r.attributes.getInt("blocksize");if(e<1)throw new Error(`blocksize must be >= 1, but got : ${e} for DepthToSpace`);let n=r.attributes.getString("mode","DCR");if(n!=="DCR"&&n!=="CRD")throw new Error(`unrecognized mode: ${n} for DepthToSpace`);return{mode:n,blocksize:e}},ow=r=>{if(r.length!==1)throw new Error(`DepthToSpace expect 1 inputs, but got ${r.length}`);if(r[0].type==="string"||r[0].dims.length!==4)throw new TypeError("DepthToSpace input should be a 4-D numeric tensor")}});var df,cf,iw,ff=B(()=>{"use strict";We();df=(r,e,n)=>{iw(e,n);let t=re.flattenShape(e[0].dims,n);return[r.reshapeUnpacked(e[0],t)]},cf=r=>r.attributes.getInt("axis",1),iw=(r,e)=>{if(!r||r.length!==1)throw new Error("Flatten requires 1 input.");let n=r[0].dims.length;if(n===0)throw new Error("scalar tensor is not supported.");if(e<-n||e>n)throw new Error("Invalid axis");if(r[0].type==="string")throw new Error("string tensor is not supported.")}});var Lr,lo=B(()=>{"use strict";Lr=["float32","float64","int32","int16","int8","uint16","uint32","uint8"]});var pf,hf,aw,sw,uw,lw,mf=B(()=>{"use strict";gt();lo();We();Re();pf=(r,e,n)=>(lw(e,n.axis),[r.run(uw(r,e,n),e)]),hf=r=>$e({axis:r.attributes.getInt("axis",0)}),aw={name:"Gather",inputNames:["A","B"],inputTypes:[0,0]},sw=(r,e,n,t)=>{let o=n[0].dims.slice(),i=n[1].dims.slice(),u=new Array(o.length+i.length-1);t=re.normalizeAxis(t,o.length);let a=[];for(let f=0;f<u.length;f++)f<t?(u[f]=o[f],a.push(`inputIdx[${f}] = outputIdx[${f}];`)):f<t+i.length?(u[f]=i[f-t],a.push(`indexDataIdx[${f-t}] = outputIdx[${f}];`)):(u[f]=o[f-i.length+1],a.push(`inputIdx[${f-i.length+1}] = outputIdx[${f}];`));let s=u.length||1,l=o.length,d=i.length||1,p=`
      float process(int outputIdx[${s}]) {
        int inputIdx[${l}];
        int indexDataIdx[${d}];
        indexDataIdx[0] = 0;
        ${a.join(`
        `)}
        int idx = int(_B(indexDataIdx));
        inputIdx[${t}] = idx < 0 ? idx + ${o[t]} : idx;
        return _A(inputIdx);
      }`;return{...e,output:{dims:u,type:n[0].type,textureType:0},shaderSource:p}},uw=(r,e,n)=>{let t={...aw,cacheHint:n.cacheKey};return{...t,get:()=>sw(r,t,e,n.axis)}},lw=(r,e)=>{if(!r||r.length!==2)throw new Error("Gather requires 2 inputs.");let n=r[0].dims.length;if(n<1)throw new Error("Invalid input shape.");if(e<-n||e>n-1)throw new Error("Invalid axis.");if(Lr.indexOf(r[0].type)===-1)throw new Error("Invaid input type.");if(r[1].type!=="int32"&&r[1].type!=="int16")throw new Error("Invaid input type.")}});var us,gf,bf,yf,dw,cw,fw,vf=B(()=>{"use strict";gt();We();Re();us=(r,e,n)=>(fw(e,n),[r.run(dw(e,n),e)]),gf=(r,e)=>{let n=r.attributes.getInt("transA",0)!==0,t=r.attributes.getInt("transB",0)!==0,o=r.attributes.getFloat("alpha",1),i=r.attributes.getFloat("beta",1);return $e({transA:n,transB:t,alpha:o,beta:i,isOptionalC:e})},bf=r=>gf(r,!1),yf=r=>gf(r,!0),dw=(r,e)=>{let n={name:"Gemm",inputNames:r.length===3?["A","B","C"]:["A","B"],inputTypes:r.length===3?[0,0,0]:[0,0],key:e.cacheKey};return{...n,get:()=>cw(n,r,e)}},cw=(r,e,n)=>{let t=e[0].dims.slice(),o=e[1].dims.slice(),[i,u]=ai.getShapeOfGemmResult(t,n.transA,o,n.transB,e.length===3?e[2].dims:void 0),a=[i,u];if(!a)throw new Error("Can't use gemm on the given tensors");let s=t[t.length-1],l="";n.transA&&(s=t[0]),n.transA&&n.transB?l="value += _A_T(a) * _B_T(b);":n.transA&&!n.transB?l="value += _A_T(a) * _B(b);":!n.transA&&n.transB?l="value += _A(a) * _B_T(b);":!n.transA&&!n.transB&&(l="value += _A(a) * _B(b);");let d=a.length,p=e.length===3?`int c[${e[2].dims.length}];`:"",f=e.length===3?"bcastIndices_C(indices, c);":"",g=e.length===3?"value += beta * _C(c);":"",b=`
      float process(int indices[${d}]) {
          int a[${d}];
          int b[${d}];
          ${p}

          copyVec(indices, a);
          copyVec(indices, b);
          ${f}

          float value = 0.0;
          for (int k=0; k<${s}; ++k) {
              a[${d-1}] = k;
              b[${d-2}] = k;
              ${l}
          }

          value = value * alpha;
          ${g}
          return value;
      }`;return{...r,output:{dims:a,type:e[0].type,textureType:0},variables:[{name:"alpha",type:"float",data:n.alpha},{name:"beta",type:"float",data:n.beta}],shaderSource:b}},fw=(r,e)=>{if(!r)throw new Error("Input is missing");if(e.isOptionalC&&(r.length<2||r.length>3))throw new Error("Invaid input shape.");if(!e.isOptionalC&&r.length!==3)throw new Error("Gemm requires 3 inputs");if(r.length===3&&r[2].dims.length!==1&&r[2].dims.length!==2)throw new Error("Invalid input shape of C");if(r[0].type!=="float32"&&r[0].type!=="float64"||r[1].type!=="float32"&&r[1].type!=="float64"||r.length===3&&r[2].type!=="float32"&&r[2].type!=="float64")throw new Error("Invalid input type.");if(r[0].type!==r[1].type||r.length===3&&r[0].type!==r[2].type)throw new Error("Input types are mismatched")}});var wf,xf,pw,hw,mw,gw,bw,Tf=B(()=>{"use strict";gt();Re();wf=(r,e,n)=>(bw(e),[r.run(mw(r,e,n),e)]),xf=r=>{let e=r.attributes.getFloat("scale"),n=r.attributes.getFloats("bias");return $e({scale:e,bias:n})},pw={name:"ImageScaler",inputNames:["X"],inputTypes:[0]},hw=(r,e,n,t)=>{let o=n[0].dims.slice(),i=o.length,a=`
      ${gw(t.bias.length)}
      float process(int indices[${i}]) {
        return _X(indices) * scale + getBias(bias, indices[1]);
      }`;return{...e,output:{dims:o,type:n[0].type,textureType:0},variables:[{name:"bias",type:"float",arrayLength:t.bias.length,data:t.bias},{name:"scale",type:"float",data:t.scale}],shaderSource:a}},mw=(r,e,n)=>{let t={...pw,cacheHint:n.cacheKey};return{...t,get:()=>hw(r,t,e,n)}},gw=r=>{let e=[`float getBias(float bias[${r}], int channel) {`];for(let n=0;n<r;++n)n===0?e.push(`	if (channel == ${n}) { return bias[${n}]; }`):n===r-1?e.push(`	else { return bias[${n}]; }`):e.push(`	else if (channel == ${n}) { return bias[${n}]; }`);return e.push("	}"),e.join(`
`)},bw=r=>{if(!r||r.length!==1)throw new Error("ImageScaler requires 1 input.");if(r[0].dims.length!==4)throw new Error("Invalid input shape.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.")}});var Sf,If,$f,yw,vw,ww,xw,Tw,$w,_f=B(()=>{"use strict";rt();Re();Sf=(r,e,n)=>{$w(e);let t=r.run(vw(e[0]),e);return[r.run(Tw(r,e[0],n,t.dims),[e[0],t,e[1],e[2]])]},If=r=>r.attributes.getFloat("epsilon",1e-5),$f={name:"InstanceNormalization_MeanAndVariance",inputNames:["X"],inputTypes:[0]},yw=(r,e)=>{let n=e.dims.slice(),t=n[1],o=n[2]*n[3],i=[n[0],t],u=`
      vec4 process(int[2] indices) {
        vec4 v = vec4(0.0);
        int a[4];
        a[0] = indices[0];
        a[1] = indices[1];
        float temp = 0.0;
        for(int a2=0; a2<${n[2]}; a2++) {
          a[2] = a2;
          for(int a3=0; a3<${n[3]}; a3++) {
            a[3] = a3;
            float x = _X(a);
            temp += x;
          }
        }
        float mean = temp / float(${o});
        temp = 0.0;
        for(int a2=0; a2<${n[2]}; a2++) {
          a[2] = a2;
          for(int a3=0; a3<${n[3]}; a3++) {
            a[3] = a3;
            float x = _X(a);
            temp += (x - mean) * (x - mean);
          }
        }
        v.r = mean;
        v.g = temp / float(${o});

        return v;
      }`;return{...r,output:{dims:i,type:e.type,textureType:4},shaderSource:u}},vw=r=>({...$f,get:()=>yw($f,r)}),ww={name:"InstanceNormalization_ComputeOutput",inputNames:["X","MeanAndVariance","Scale","B"],inputTypes:[0,4,0,0]},xw=(r,e,n,t,o)=>{let i=se(r.session.backend.glContext.version),[u,a]=r.calculateTextureWidthAndHeight(o,4),[s,l]=[u/4,a],d=`
      vec4 get_MeanAndVariance(int[2] mv) {
        int offset = indicesToOffset_MeanAndVariance(mv);
        vec2 coords = offsetToCoords(offset, ${s}, ${l});
        return ${i.texture2D}(MeanAndVariance, coords);
      }

      float process(int[4] indices) {
        int mv[2];
        mv[0] = indices[0];
        mv[1] = indices[1];
        vec4 mean_and_variance = get_MeanAndVariance(mv);
        float mean = mean_and_variance.r;
        float variance = mean_and_variance.g;

        int sb[1];
        sb[0] = indices[1];
        float scale = _Scale(sb);
        float b = _B(sb);

        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;
      }`;return{...e,output:{dims:n.dims,type:n.type,textureType:0},variables:[{name:"epsilon",type:"float",data:t}],shaderSource:d}},Tw=(r,e,n,t)=>{let o={...ww,cacheHint:`${n}`};return{...o,get:()=>xw(r,o,e,n,t)}},$w=r=>{if(!r||r.length!==3)throw new Error("InstanceNormalization requires 3 inputs.");let e=r[0],n=r[1],t=r[2];if(e.dims.length<3||n.dims.length!==1||t.dims.length!==1)throw new Error("Invalid input shape.");if(n.dims[0]!==e.dims[1]||t.dims[0]!==e.dims[1])throw new Error("Input shapes are mismatched.");if(e.type!=="float32"&&e.type!=="float64"||n.type!=="float32"&&n.type!=="float64"||t.type!=="float32"&&t.type!=="float64")throw new Error("Invalid input type.");if(r[0].dims.length!==4)throw new Error("Only support 4-D input shape.")}});function Sw(r,e){let n=r[0].dims[1],t=r[0].dims.length,o=-Math.floor((e.size-1)/2),i=Math.ceil((e.size-1)/2),u=`float(${e.alpha}) / float(${e.size})`,a=`float(${e.bias})`,s=`float(${e.beta})`,l=`
    float process(int indices[${t}]) {
        int c = indices[1];
        float x = _X(indices);
        float square_sum = 0.0;

        for (int i = ${o}; i <= ${i}; i++) {
          int idx = c + i;
          if (c >= 0 && c < ${n}) {
            indices[1] = idx;
            float j = _X(indices);
            square_sum += j * j;
          }
        }
        return x / pow(${a} + ${u} * square_sum, ${s});
    }`;return{...Ef,cacheHint:e.cacheKey,output:{dims:r[0].dims,type:r[0].type,textureType:0},shaderSource:l}}function Iw(r,e){return{...Ef,cacheHint:e.cacheKey,get:()=>Sw(r,e)}}var Af,Of,Ef,_w,Cf=B(()=>{"use strict";gt();Re();Af=(r,e,n)=>(_w(e),[r.run(Iw(e,n),e)]),Of=r=>{let e=r.attributes.getFloat("alpha",1e-4),n=r.attributes.getFloat("beta",.75),t=r.attributes.getFloat("bias",1),o=r.attributes.getInt("size");return $e({alpha:e,beta:n,bias:t,size:o})},Ef={name:"LRN",inputNames:["X"],inputTypes:[0]};_w=r=>{if(!r||r.length!==1)throw new Error("LRN requires 1 input.");if(r[0].dims.length!==4)throw new Error('currently only support LRN for input with "NCHW" format');if(r[0].type!=="float32")throw new Error("input should be float type")}});var Aw,ls,Pf,kf,Df,Ow,Ew,Cw,Pw,kw,Dw,Bw,Rw,Bf=B(()=>{"use strict";gt();We();rt();Re();Aw={name:"Pad",inputNames:["A"],inputTypes:[0]},ls=(r,e,n)=>(Cw(e),[r.run({...Aw,cacheHint:n.cacheKey,get:()=>Ew(r,e[0],n)},e)]),Pf=r=>{let e=r.attributes.getString("mode","constant"),n=r.attributes.getFloat("value",0),t=r.attributes.getInts("pads");return $e({mode:e,value:n,pads:t})},kf=(r,e,n)=>{Pw(e);let t=Ow(r,e,n);return ls(r,[e[0]],t)},Df=r=>r.attributes.getString("mode","constant"),Ow=(r,e,n)=>{if(!r.session.isInitializer(e[1].dataId)||e.length>=3&&!r.session.isInitializer(e[2].dataId))throw new Error("dynamic pad attributes are not allowed");let t=Array.from(e[1].integerData),o=e.length>=3?e[2].floatData[0]:0;return $e({mode:n,pads:t,value:o})},Ew=(r,e,n)=>{let t=re.padShape(e.dims.slice(),n.pads),o=t.length,u=`
      ${kw(r,e,n)}
      float process(int[${o}] indices) {
          return padA(indices);
      }`;return{name:"Pad",inputNames:["A"],inputTypes:[0],output:{dims:t,type:e.type,textureType:0},shaderSource:u}},Cw=r=>{if(!r||r.length!==1)throw new Error("Pad requires 1 input");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.")},Pw=r=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Pad requires 2 or 3 inputs");if(r[1].type!=="int32")throw new Error("Invalid input type.");if(r.length>=3&&r[2].type==="string")throw new Error("Invalid input type.")},kw=(r,e,n)=>{let t=se(r.session.backend.glContext.version),[o,i]=r.calculateTextureWidthAndHeight(e.dims,0),u=re.computeStrides(e.dims);switch(n.mode){case"constant":return Dw(t,e.dims,u,o,i,n.pads,n.value);case"reflect":return Bw(t,e.dims,u,o,i,n.pads);case"edge":return Rw(t,e.dims,u,o,i,n.pads);default:throw new Error("Invalid mode")}},Dw=(r,e,n,t,o,i,u)=>{let a=e.length,s="";for(let l=a-1;l>=0;--l)s+=`
        k = m[${l}] - ${i[l]};
        if (k < 0)  return constant;
        if (k >= ${e[l]}) return constant;
        offset += k * ${n[l]};
        `;return`
      float padA(int m[${a}]) {
        const float constant = float(${u});
        int offset = 0;
        int k = 0;
        ${s}
        vec2 coords = offsetToCoords(offset, ${t}, ${o});
        float value = getColorAsFloat(${r.texture2D}(A, coords));
        return value;
      }
      `},Bw=(r,e,n,t,o,i)=>{let u=e.length,a="";for(let s=u-1;s>=0;--s)a+=`
        k = m[${s}] - ${i[s]};
        if (k < 0) { k = -k; }
        {
          const int _2n_1 = ${2*(e[s]-1)};
          k = int( mod( float(k), float(_2n_1) ) ) ;
          if(k >= ${e[s]}) { k = _2n_1 - k; }
        }
        offset += k * ${n[s]};
        `;return`
      float padA(int m[${u}]) {
        int offset = 0;
        int k = 0;
        ${a}
        vec2 coords = offsetToCoords(offset, ${t}, ${o});
        float value = getColorAsFloat(${r.texture2D}(A, coords));
        return value;
      }
      `},Rw=(r,e,n,t,o,i)=>{let u=e.length,a="";for(let s=u-1;s>=0;--s)a+=`
        k = m[${s}] - ${i[s]};
        if (k < 0)  k = 0;
        if (k >= ${e[s]}) k = ${e[s]-1};
        offset += k * ${n[s]};
      `;return`
      float padA(int m[${u}]) {
        int offset = 0;
        int k = 0;
        ${a}
        vec2 coords = offsetToCoords(offset, ${t}, ${o});
        float value = getColorAsFloat(${r.texture2D}(A, coords));
        return value;
      }
      `}});var Mf,Lf,zf,Nf,Ff,Vf,Gf,Wf,Uf,Mw,Rf,Hf,vi,qf,yi,Lw,jf=B(()=>{"use strict";gt();We();Re();Mf=(r,e,n)=>{vi(e);let t={name:"AveragePool",inputNames:["X"],inputTypes:[0],cacheHint:n.cacheKey};return[r.run({...t,get:()=>zf(e,t,!1,n)},e)]},Lf=r=>{let e=r.attributes.getString("auto_pad","NOTSET"),n=r.attributes.getInt("ceil_mode",0),t=r.attributes.getInt("count_include_pad",0)!==0,o=r.attributes.getInts("kernel_shape"),i=r.attributes.getInts("strides",[]),u=r.attributes.getInts("pads",[]);if(n!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");return $e({autoPad:e,ceilMode:n,countIncludePad:t,kernelShape:o,strides:i,pads:u})},zf=(r,e,n,t)=>{let[o,i]=Uf(r,t,n),u=re.size(o.kernelShape),a="value += _X(x);",s="";o.countIncludePad?s+=`value /= float(${u});`:s+=`value /= float(${u} - pad);`;let d=`
        ${qf(r[0].dims,o,a,s,"0.0")}
      `;return{...e,output:{dims:i,type:r[0].type,textureType:0},shaderSource:d}},Nf=(r,e,n)=>{vi(e);let t={name:"GlobalAveragePool",inputNames:["X"],inputTypes:[0],cacheHint:`${n.countIncludePad}`};return[r.run({...t,get:()=>zf(e,t,!0,n)},e)]},Ff=r=>{let e=r.attributes.getInt("count_include_pad",0)!==0;return $e({autoPad:"",ceilMode:0,countIncludePad:e,kernelShape:[],strides:[],pads:[]})},Vf=(r,e,n)=>{vi(e);let t={name:"MaxPool",inputNames:["X"],inputTypes:[0],cacheHint:n.cacheKey};return[r.run({...t,get:()=>Wf(e,t,!1,n)},e)]},Gf=r=>{let e=r.attributes.getString("auto_pad","NOTSET"),n=r.attributes.getInt("ceil_mode",0),t=r.attributes.getInts("kernel_shape"),o=r.attributes.getInts("strides",[]),i=r.attributes.getInts("pads",[]),u=r.attributes.getInt("storage_order",0),a=r.attributes.getInts("dilations",[]);if(u!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(n!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");return $e({autoPad:e,ceilMode:n,countIncludePad:!1,kernelShape:t,strides:o,pads:i,storageOrder:u,dilations:a})},Wf=(r,e,n,t)=>{let[o,i]=Uf(r,t,n),u=`
      value = max(_X(x), value);
    `,a="",l=`
      ${qf(r[0].dims,o,u,a,"-1e5")}
    `;return{...e,output:{dims:i,type:r[0].type,textureType:0},shaderSource:l}},Uf=(r,e,n)=>{let t=r[0].dims.slice(),o=Object.hasOwnProperty.call(e,"dilations"),i=e.kernelShape.slice(),u=e.strides.slice(),a=o?e.dilations.slice():[],s=e.pads.slice();tn.adjustPoolAttributes(n,t,i,u,a,s);let l=tn.computePoolOutputShape(n,t,u,a,i,s,e.autoPad),d=Object.assign({},e);return o?Object.assign(d,{kernelShape:i,strides:u,pads:s,dilations:a,cacheKey:e.cacheKey}):Object.assign(d,{kernelShape:i,strides:u,pads:s,cacheKey:e.cacheKey}),[d,l]},Mw={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:""},Rf={name:"GlobalMaxPool",inputNames:["X"],inputTypes:[0]},Hf=(r,e)=>(vi(e),[r.run({...Rf,get:()=>Wf(e,Rf,!0,Mw)},e)]),vi=r=>{if(!r||r.length!==1)throw new Error("Pool ops requires 1 input.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.")},qf=(r,e,n,t,o)=>{let i=r.length;if(e.kernelShape.length<=2){let u=e.kernelShape[e.kernelShape.length-1],a=e.strides[e.strides.length-1],s=e.pads[e.pads.length/2-1],l=e.pads[e.pads.length-1],d=r[i-1],p="",f="",g="";if(s+l!==0?p=`
          for (int i = 0; i < ${u}; i++) {
            x[${i} - 1] = indices[${i} - 1] * ${a} - ${s} + i;
            if (x[${i} - 1] < 0 || x[${i} - 1] >= ${d}) {
              pad++;
              continue;
            }
            ${n}
          }`:p=`
          for (int i = 0; i < ${u}; i++) {
            x[${i} - 1] = indices[${i} - 1] * ${a} - ${s} + i;
            ${n}
          }`,e.kernelShape.length===2){let y=e.kernelShape[e.kernelShape.length-2],$=e.strides[e.strides.length-2],x=e.pads[e.pads.length/2-2],I=e.pads[e.pads.length-2],O=r[i-2];x+I!==0?f=`
            for (int j = 0; j < ${y}; j++) {
              x[${i} - 2] = indices[${i} - 2] * ${$} - ${x} + j;
              if (x[${i} - 2] < 0 || x[${i} - 2] >= ${O}) {
                pad+= ${u};
                continue;
              }
          `:f=`
            for (int j = 0; j < ${y}; j++) {
              x[${i} - 2] = indices[${i} - 2] * ${$} - ${x} + j;
            `,g=`
          }
        `}return`
        float process(int indices[${i}]) {
          int x[${i}];
          copyVec(indices, x);

          float value = ${o};
          int pad = 0;
          ${f}
          ${p}
          ${g}
          ${t}
          return value;
        }
      `}else{let u=re.size(e.kernelShape),a=re.computeStrides(e.kernelShape),s=a.length,l=e.pads.length,d=Lw(s),p=yi(r,"inputDims"),f=yi(e.pads,"pads"),g=yi(a,"kernelStrides"),b=yi(e.strides,"strides"),y=e.pads.reduce((I,O)=>I+O),$="";return y?$=`
            if (x[j] >= inputDims[j] || x[j] < 0) {
              pad++;
              isPad = true;
              break;
            }
          }
          if (!isPad) {
            ${n}
          }`:$=`
          }
          ${n}
        `,`
        ${d}
        float process(int indices[${i}]) {
          int x[${i}];
          copyVec(indices, x);
          int offset[${s}];
          int pads[${l}];
          int inputDims[${i}];
          int kernelStrides[${s}];
          int strides[${s}];
          ${f}
          ${p}
          ${b}
          ${g}

          float value = ${o};
          int pad = 0;
          bool isPad = false;
          for (int i = 0; i < ${u}; i++) {
            offsetToIndices(i, kernelStrides, offset);
            isPad = false;
            for (int j = ${i} - ${s}; j < ${i}; j++) {
              x[j] = indices[j] * strides[j - ${i} + ${s}]
                + offset[j - ${i} + ${s}] - pads[j - 2];
              ${$}
          }
          ${t}

          return value;
        }
      `}},yi=(r,e)=>{let n="";for(let t=0;t<r.length;t++)n+=`
      ${e}[${t}] = ${r[t]};
    `;return n},Lw=r=>`
  void offsetToIndices(int offset, int[${r}] strides, out int[${r}] indices) {
    if (${r} == 0) {
      return;
    }
    for (int i = 0; i < ${r} - 1; ++i) {
      indices[i] = offset / strides[i];
      offset -= indices[i] * strides[i];
    }
    indices[${r} - 1] = offset;
  }`});var ln,zr,zw,Nw,Kf,Yf,Xf,Zf,Jf,Qf,ep,tp=B(()=>{"use strict";gt();lo();We();Re();ln=(r,e,n,t,o)=>{Nw(e);let i={name:t,inputNames:["A"],inputTypes:[0]};return[r.run({...i,cacheHint:n.cacheKey,get:()=>zw(r,e,n,t,o,i)},e)]},zr=r=>{let e=r.attributes.getInts("axes",[]),n=r.attributes.getInt("keepdims",1)===1;return $e({axes:e,keepDims:n})},zw=(r,e,n,t,o,i)=>{let u=[],a=e[0].dims.length||1,s=[],l=re.normalizeAxes(n.axes,e[0].dims.length),d=o(e,l),p=d[1];for(let b=0;b<e[0].dims.length;b++)l.indexOf(b)>=0||l.length===0?(n.keepDims&&u.push(1),p=`
          for(int j${b} = 0; j${b} < ${e[0].dims[b]}; j${b}++) {
            inputIdx[${b}] = j${b};
            ${p}
          }`):(s.push(`inputIdx[${b}] = outputIdx[${u.length}];`),u.push(e[0].dims[b]));let g=`
      float process(int outputIdx[${u.length||1}]) {
        float value;                 // final result
        int inputIdx[${a}];      // addressing input data
        ${s.join(`
`)}
        ${d[0]}       // init ops for reduce max/min
        ${p}
        ${d[2]}       // final computation for reduce mean
        return value;
      }`;return{...i,output:{dims:u,type:e[0].type,textureType:0},shaderSource:g}},Nw=r=>{if(!r||r.length!==1)throw new Error("Reduce op requires 1 input.");if(Lr.indexOf(r[0].type)===-1)throw new Error("Invalid input type.")},Kf=(r,e,n)=>ln(r,e,n,"ReduceSum",()=>["value = 0.0;","value += _A(inputIdx);",""]),Yf=(r,e,n)=>ln(r,e,n,"ReduceMean",(o,i)=>{let u=1;for(let a=0;a<o[0].dims.length;a++)(i.indexOf(a)>=0||i.length===0)&&(u*=o[0].dims[a]);return["value = 0.0;","value += _A(inputIdx);",`value /= ${u}.;`]}),Xf=(r,e,n)=>ln(r,e,n,"ReduceMax",(o,i)=>{let u=[];for(let a=0;a<o[0].dims.length;a++)(i.indexOf(a)>=0||i.length===0)&&u.push(`inputIdx[${a}] = 0;`);return[`${u.join(`
`)}
value = _A(inputIdx);`,"value = max(value, _A(inputIdx));",""]}),Zf=(r,e,n)=>ln(r,e,n,"ReduceMin",(o,i)=>{let u=[];for(let a=0;a<o[0].dims.length;a++)(i.indexOf(a)>=0||i.length===0)&&u.push(`inputIdx[${a}] = 0;`);return[`${u.join(`
`)}
value = _A(inputIdx);`,"value = min(value, _A(inputIdx));",""]}),Jf=(r,e,n)=>ln(r,e,n,"ReduceProd",()=>["value = 1.0;","value *= _A(inputIdx);",""]),Qf=(r,e,n)=>ln(r,e,n,"ReduceLogSum",()=>["value = 0.0;","value += _A(inputIdx);","value = log(value);"]),ep=(r,e,n)=>ln(r,e,n,"ReduceLogSumSquare",()=>["float t; value = 0.0;","t = _A(inputIdx); value += t * t;",""])});var rp,np=B(()=>{"use strict";We();rp=(r,e)=>{let n=re.calculateReshapedDims(e[0].dims,e[1].integerData);return r.session.pack?[r.reshapePacked(e[0],n)]:[r.reshapeUnpacked(e[0],n)]}});var op,ds,ip,ap,co,Fw,cs,wi,fs=B(()=>{"use strict";gt();rt();Re();op={name:"Upsample",inputNames:["X"],inputTypes:[0]},ds=(r,e,n)=>(cs(e,n),[r.run({...op,cacheHint:n.cacheKey,get:()=>Fw(r,e,n)},e)]),ip=r=>co(r,7),ap=r=>co(r,9),co=(r,e)=>{let n=e>=10,t=r.attributes.getString("mode","nearest");if(t!=="nearest"&&t!=="linear"&&(e<11||t!=="cubic"))throw new Error(`unrecognized mode: ${t}`);let o=[];e<9&&(o=r.attributes.getFloats("scales"),wi(o,t,n));let i=r.attributes.getFloat("extrapolation_value",0),u=e>10?r.attributes.getString("coordinate_transformation_mode","half_pixel"):"asymmetric";if(["asymmetric","pytorch_half_pixel","tf_half_pixel_for_nn","align_corners","tf_crop_and_resize","half_pixel"].indexOf(u)===-1)throw new Error(`coordinate_transform_mode '${u}' is not supported`);let a=u==="tf_crop_and_resize",s=a,l=t==="nearest"&&e>=11?r.attributes.getString("nearest_mode","round_prefer_floor"):"";if(["round_prefer_floor","round_prefer_ceil","floor","ceil",""].indexOf(l)===-1)throw new Error(`nearest_mode '${l}' is not supported`);let d=r.attributes.getFloat("cubic_coeff_a",-.75),p=r.attributes.getInt("exclude_outside",0)!==0;if(p&&t!=="cubic")throw new Error("exclude_outside can be set to 1 only when mode is CUBIC.");let f=e<11?!0:t==="nearest"&&u==="asymmetric"&&l==="floor",g=0,b=0,y=0;return e>10?r.inputs.length>2?(g=1,b=2,y=3):(b=1,y=2):e===9&&(b=1),$e({opset:e,isResize:n,mode:t,scales:o,extrapolationValue:i,coordinateTransformMode:u,useExtrapolation:s,needRoiInput:a,nearestMode:l,cubicCoefficientA:d,excludeOutside:p,useNearest2xOptimization:f,roiInputIdx:g,scalesInputIdx:b,sizesInputIdx:y})},Fw=(r,e,n)=>{let t=se(r.session.backend.glContext.version),[o,i]=r.calculateTextureWidthAndHeight(e[0].dims,0),u=e[0].dims.map((y,$)=>Math.floor(y*n.scales[$])),[a,s]=r.calculateTextureWidthAndHeight(u,0),l=u.length,d=new Array(l),p=new Array(l),f=`
      int output_pitches[${l}];
      int input_pitches[${l}];
      `;for(let y=l-1;y>=0;y--)d[y]=y===l-1?1:d[y+1]*u[y+1],p[y]=y===l-1?1:p[y+1]*e[0].dims[y+1],f+=`
        output_pitches[${y}] = ${d[y]};
        input_pitches[${y}] = ${p[y]};
        `;let g=`
      float getInputFloat(int index) {
        vec2 coords = offsetToCoords(index, ${o}, ${i});
        float value = getColorAsFloat(${t.texture2D}(X, coords));
        return value;
      }
      `,b=n.mode==="nearest"?`
    ${g}
    float process(int indices[${l}]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${a}, ${s});

      ${f}

      int d, m;
      for (int dim = 0; dim < ${l}; ++dim) {
        d = output_index / output_pitches[dim];
        m = output_index - d * output_pitches[dim];
        output_index = m;

        if (scales[dim] != 1 && d > 0) {
          int d2 = d / scales[dim];
          m = d - d2 * scales[dim];
          d = d2;
        }
        input_index += input_pitches[dim] * d;
      }

      return getInputFloat(input_index);
    }`:l===4?`
    ${g}
    float process(int indices[4]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${a}, ${s});

      ${f}

      int m;
      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;
      index_of_dim0 = output_index / output_pitches[0];
      m = output_index - index_of_dim0 * output_pitches[0];
      index_of_dim1 = m / output_pitches[1];
      m = m - index_of_dim1 * output_pitches[1];
      index_of_dim2 = m / output_pitches[2];
      m = m - index_of_dim2 * output_pitches[2];
      index_of_dim3 = m;

      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;
      index_of_input_dim2 = index_of_dim2 / scales[2];
      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];
      index_of_input_dim3 = index_of_dim3 / scales[3];
      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];

      input_index = index_of_dim0 * input_pitches[0] +
            index_of_dim1 * input_pitches[1] +
            index_of_input_dim2 * input_pitches[2] +
            index_of_input_dim3;

      float x00 = getInputFloat(input_index);
      float x10, x01, x11;

      bool end_of_dim2 = false;
      if (index_of_input_dim2 == (${e[0].dims[2]} - 1)) {
        // It's the end in dimension 2
        x01 = x00;
        end_of_dim2 = true;
      } else {
        x01 = getInputFloat(input_index + input_pitches[2]);
      }

      if (index_of_input_dim3 == (input_pitches[2] - 1)) {
        // It's the end in dimension 3
        x10 = x00;
        x11 = x01;
      }
      else {
        x10 = getInputFloat(input_index + 1);
        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);
      }

      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);
      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);
      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);
    }`:`
    ${g}
    float process(int indices[2]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${a}, ${s});

      ${f}

      int m;
      int index_of_dim0, index_of_dim1;
      index_of_dim0 = output_index / output_pitches[0];
      m = output_index - index_of_dim0 * output_pitches[0];
      index_of_dim1 = m;

      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;
      index_of_input_dim0 = index_of_dim0 / scales[0];
      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];
      index_of_input_dim1 = index_of_dim1 / scales[1];
      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];

      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;

      float x00 = getInputFloat(input_index);
      float x10, x01, x11;

      bool end_of_dim0 = false;
      if (index_of_input_dim0 == (${e[0].dims[0]} - 1)) {
        // It's the end in dimension 0
        x01 = x00;
        end_of_dim0 = true;
      } else {
        x01 = getInputFloat(input_index + input_pitches[0]);
      }

      if (index_of_input_dim1 == (input_pitches[0] - 1)) {
        // It's the end in dimension 1
        x10 = x00;
        x11 = x01;
      }
      else {
        x10 = getInputFloat(input_index + 1);
        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);
      }

      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);
      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);
      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);
    }`;return{...op,output:{dims:u,type:e[0].type,textureType:0},shaderSource:b,variables:[{name:"scales",type:"int",arrayLength:n.scales.length,data:n.scales.map(y=>Math.ceil(y))}]}},cs=(r,e)=>{if(!r||e.opset<9&&r.length!==1||e.opset>=9&&e.opset<11&&r.length!==2||e.opset>=11&&r.length<2)throw new Error("invalid inputs.");if(e.scales.length>0&&r[0].dims.length!==e.scales.length)throw new Error("Invalid input shape.");if(r[0].type==="string")throw new Error("Invalid input tensor types.")},wi=(r,e,n)=>{if(n){for(let t of r)if(t<=0)throw new Error("Scale value should be greater than 0.")}else for(let t of r)if(t<1)throw new Error("Scale value should be greater than or equal to 1.");if((e==="linear"||e==="cubic")&&r.length!==2&&(r.length!==4||r[0]!==1||r[1]!==1))throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic')         or 4-D inputs with the corresponding outermost 2 scale values being 1         in the ${n?"Resize":"Upsample"} opeartor.`)}});var ps,hs,sp,up,Vw,Gw,Ww,Uw,lp=B(()=>{"use strict";rt();Re();dr();an();fs();ps={name:"Resize",inputNames:["A"],inputTypes:[2]},hs=(r,e,n)=>(cs(e,n),[r.run({...ps,cacheHint:n.cacheKey,get:()=>Vw(r,e,n)},e)]),sp=r=>co(r,10),up=r=>co(r,11),Vw=(r,e,n)=>{let t=se(r.session.backend.glContext.version),[o,i]=Gw(e,n);if(o.every(O=>O===1)&&n.coordinateTransformMode!=="tf_crop_and_resize")return{...ps,output:{dims:i,type:e[0].type,textureType:2},hasMain:!0,shaderSource:`void main() {
                    vec4 v = ${t.texture2D}(X, TexCoords);
                    ${t.output} = v;
                }`};let a=i.length;if(a<2)throw new Error(`output dimension should be at least 2, but got ${a}`);let s=i[a-2],l=i[a-1],d=e[0].dims;if(a!==d.length)throw new Error(`output dimension should match input ${d.length}, but got ${a}`);let p=d[a-2],f=d[a-1],g=o[a-2],b=o[a-1],y="";if(n.mode!=="linear")throw new Error(`resize (packed) does not support mode: '${n.mode}'`);switch(n.coordinateTransformMode){case"asymmetric":y=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        return vec4(coords) / scaleWHWH;
                    }
                `;break;case"half_pixel":y=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;
                    }
                `;break;case"pytorch_half_pixel":y=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        vec4 fcoords = vec4(coords);
                        return vec4(
                            ${l}.0 > 1.0 ? (fcoords.x + 0.5) / scaleWHWH.x - 0.5 : 0.0,
                            ${s}.0 > 1.0 ? (fcoords.y + 0.5) / scaleWHWH.y - 0.5 : 0.0,
                            ${l}.0 > 1.0 ? (fcoords.z + 0.5) / scaleWHWH.z - 0.5 : 0.0,
                            ${s}.0 > 1.0 ? (fcoords.w + 0.5) / scaleWHWH.w - 0.5 : 0.0
                          );
                    }
                `;break;case"align_corners":y=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        vec4 resized = vec4(${l}.0 - 1.0, ${s}.0 - 1.0, ${l}.0 - 1.0,
                            ${s}.0 - 1.0);
                        vec4 original = vec4(${f}.0 - 1.0, ${p}.0 - 1.0, ${f}.0 - 1.0,
                            ${p}.0 - 1.0);
                        vec4 new_scale = original / resized;
                        return vec4(coords) * new_scale;
                    }
                `;break;default:throw new Error(`resize (packed) does not support coordinateTransformMode:                                 '${n.coordinateTransformMode}'`)}let $=Ot(a),x=cr(),I=`
            const vec2 inputWH = vec2(${p}.0, ${f}.0);
            const vec4 scaleWHWH = vec4(float(${g}), float(${b}), float(${g}), float(${b}));
            ${x}
            ${y}
            float getAValue(int x10, int r, int c, int d) {
                return getChannel(getA(x10, r, c, d), vec2(c, d));
            }
            void main() {
                ${$} rc = getOutputCoords();

                int batch = rc[0];
                int depth = rc[1];

                // retrieve the 4 coordinates that is used in the 4 packed output values.
                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);

                // calculate the source index in fraction
                vec4 sourceFrac = getSourceFracIndex(coords);

                // get the lower and upper bound of the 4 values that will be packed into one texel.
                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));
                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));
                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));
                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));

                bool hasNextRow = rc.w < ${s-1};
                bool hasNextCol = rc.z < ${l-1};

                // pack x00, x01, x10, x11's top-left corner into one vec4 structure
                vec4 topLeft = vec4(
                    getAValue(batch, depth, x00.x, x00.y),
                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);

                // pack x00, x01, x10, x11's top-right corner into one vec4 structure
                vec4 topRight = vec4(
                    getAValue(batch, depth, x00.x, x00.w),
                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);

                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure
                vec4 bottomLeft = vec4(
                    getAValue(batch, depth, x00.z, x00.y),
                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);

                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure
                vec4 bottomRight = vec4(
                    getAValue(batch, depth, x00.z, x00.w),
                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);

                // calculate the interpolation fraction on u and v direction
                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);
                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));

                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);
                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);
                vec4 newValue = mix(top, bottom, clampFrac.xxzz);

                ${t.output} = vec4(newValue);
            }
        `;return{...ps,output:{dims:i,type:e[0].type,textureType:2},hasMain:!0,shaderSource:I}},Gw=(r,e)=>{let t=r[0].dims,o=e.scales,i;if(o.length===0){let a=r[e.scalesInputIdx];if(a&&a.size!==0){if(r[e.sizesInputIdx])throw new Error("Only one of scales or sizes must be provided as input.");o=Ww(a,e.mode,e.isResize)}else{let s=r[e.sizesInputIdx];if(!s||s.size===0)throw new Error("Either scales or sizes MUST be provided as input.");i=Array.from(s.integerData),o=Uw(i,t,e.mode,e.isResize)}}else if(r[e.sizesInputIdx])throw new Error("Only one of scales or sizes must be provided as input.");let u=i||t.map((a,s)=>Math.floor(a*o[s]));return[o,u]},Ww=(r,e,n)=>{let t=Array.from(r.floatData);return wi(t,e,n),t},Uw=(r,e,n,t)=>{let o=e.length,i=new Array(o);for(let u=0,a=o;u<a;u++)if(e[u]===0){if(r[u]!==0)throw new Error("Input dim is zero but required output dim is non-zero.");i[u]=1}else i[u]=r[u]/e[u];return wi(i,n,t),i}});var dp,Hw,cp=B(()=>{"use strict";on();dp=(r,e)=>(Hw(e),[new ft([e[0].dims.length],"int32",void 0,void 0,new Int32Array(e[0].dims))]),Hw=r=>{if(!r||r.length!==1)throw new Error("Shape requires 1 input.")}});var ms,fp,pp,hp,qw,mp,jw,Kw,gp=B(()=>{"use strict";gt();lo();We();Re();ms={name:"Slice",inputNames:["A"],inputTypes:[0]},fp=(r,e,n)=>(qw(e),[r.run({...ms,cacheHint:n.cacheKey,get:()=>hp(r,e[0],n)},e)]),pp=r=>{let e=r.attributes.getInts("starts"),n=r.attributes.getInts("ends"),t=r.attributes.getInts("axes",[]);return $e({starts:e,ends:n,axes:t})},hp=(r,e,n)=>{let t=n.axes.length===0?e.dims.slice(0).map((p,f)=>f):n.axes,o=re.normalizeAxes(t,e.dims.length),i=n.starts.map((p,f)=>p>e.dims[o[f]]-1?e.dims[o[f]]:re.normalizeAxis(p,e.dims[o[f]])),u=n.ends.map((p,f)=>p>e.dims[o[f]]-1?e.dims[o[f]]:re.normalizeAxis(p,e.dims[o[f]])),a=e.dims.slice(),s=[];for(let p=0;p<o.length;p++)a[o[p]]=u[p]-i[p],i[p]>0&&s.push(`outputIdx[${o[p]}] += ${i[p]};`);let d=`
      float process(int outputIdx[${a.length}]) {
        ${s.join(`
      `)}
        return _A(outputIdx);
      }`;return{...ms,output:{dims:a,type:e.type,textureType:0},shaderSource:d}},qw=r=>{if(!r||r.length!==1)throw new Error("Slice requires 1 input.");if(Lr.indexOf(r[0].type)===-1)throw new Error("Invalid input type.")},mp=(r,e)=>{Kw(e);let n=jw(r,e);return[r.run({...ms,cacheHint:n.cacheKey,get:()=>hp(r,e[0],n)},[e[0]])]},jw=(r,e)=>{if(!r.session.isInitializer(e[1].dataId)||!r.session.isInitializer(e[2].dataId)||e.length>=4&&!r.session.isInitializer(e[3].dataId)||e.length>=5&&!r.session.isInitializer(e[4].dataId))throw new Error("dynamic slice attributes are not allowed");if(e.length>=5&&e[4].integerData.some(u=>u!==1))throw new Error("currently non-1 steps is not supported for Slice");let n=Array.from(e[1].integerData),t=Array.from(e[2].integerData),o=e.length>=4?Array.from(e[3].integerData):[],i=`${o};${n};${t}`;return{starts:n,ends:t,axes:o,cacheKey:i}},Kw=r=>{if(!r||r.length<3||r.length>5)throw new Error("Invalid input number.");if(r[1].type!=="int32"||r[1].dims.length!==1)throw new Error("Invalid input type.");if(r[2].type!=="int32"||r[2].dims.length!==1)throw new Error("Invalid input type.");if(r.length>=4&&(r[3].type!=="int32"||r[3].dims.length!==1))throw new Error("Invalid input type.");if(r.length>=5&&(r[4].type!=="int32"||r[4].dims.length!==1))throw new Error("Invalid input type.")}});var bp,yp,vp,wp,xp,Tp,$p,Sp,Yw,Xw,Zw,Ip,_p=B(()=>{"use strict";gt();We();rt();Re();bi();bp={name:"SoftmaxComputeMax",inputNames:["A"],inputTypes:[0]},yp={name:"SoftmaxComputeScale",inputNames:["A","Max"],inputTypes:[0,0]},vp={name:"SoftMax",inputNames:["A","Max","Norm"],inputTypes:[0,0,0]},wp=(r,e,n)=>{Ip(e);let t=e[0].dims.slice(),o=re.normalizeAxis(n.axis,t.length),i=re.sizeToDimension(t,o),u=re.sizeFromDimension(t,o);return Sp(r,e,n,i,u)},xp=r=>$e({axis:r.attributes.getInt("axis",1)}),Tp=r=>$e({axis:r.attributes.getInt("axis",-1)}),$p=(r,e,n)=>{Ip(e);let t=e[0].dims.slice(),o=re.normalizeAxis(n.axis,t.length),i=t.length,u=o!==i-1,a=[],s=[],l=[],d;u&&(s=Array.from({length:i}).map((b,y)=>y),s[o]=i-1,s[i-1]=o,s.map(b=>a.push(t[b])),d=$e({perm:s}),l=un(r,e,d));let p=u?re.sizeToDimension(a,i-1):re.sizeToDimension(t,i-1),f=u?re.sizeFromDimension(a,i-1):re.sizeFromDimension(t,i-1),g=Sp(r,u?l:e,n,p,f);return u?un(r,g,d):g},Sp=(r,e,n,t,o)=>{let i=Yw(r,e[0],t,o,[t]),u=r.run({...bp,cacheHint:n.cacheKey,get:()=>i},e),a=Xw(r,e[0],t,o,i.output.dims,[t]),s=r.run({...yp,cacheHint:n.cacheKey,get:()=>a},[e[0],u]),l=Zw(r,e[0],t,o,i.output.dims,a.output.dims);return[r.run({...vp,cacheHint:n.cacheKey,get:()=>l},[e[0],u,s])]},Yw=(r,e,n,t,o)=>{let[i,u]=r.calculateTextureWidthAndHeight(e.dims,0),a=o.length;if(n<1||t<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(o.length!==1)throw new Error("Dimensionality of the output should be 1");if(o[0]!==n)throw new Error("Shape of the output should be equal to logical row count");let s=se(r.session.backend.glContext.version),l=`
      float process(int[${a}] indices) {
        int logical_row_start_offset = indices[0] * ${t};

        float max = getColorAsFloat(${s.texture2D}(A, offsetToCoords(logical_row_start_offset, ${i},
        ${u} )));
        for(int i=1; i<${t}; ++i)
        {
          float current = getColorAsFloat(${s.texture2D}(A, offsetToCoords(logical_row_start_offset + i,
            ${i}, ${u})));
          if(current > max)
          max = current;
        }

        return max;
      }`;return{...bp,output:{dims:o,type:e.type,textureType:0},shaderSource:l}},Xw=(r,e,n,t,o,i)=>{let[u,a]=r.calculateTextureWidthAndHeight(e.dims,0),s=i.length;if(n<1||t<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(i.length!==1)throw new Error("Dimensionality of the output should be 1");if(i[0]!==n)throw new Error("Shape of the output should be equal to logical row count");if(o.length!==1)throw new Error("Dimensionality of the intermediate results should be 1");if(o[0]!==n)throw new Error("Shape of the intermediate results should be equal to logical row count");let l=se(r.session.backend.glContext.version),d=`
      float process(int[${s}] indices) {
        int logical_row_start_offset = indices[0] * ${t};

        float norm_factor = 0.0;
        float max = _Max(indices);
        for(int i=0; i<${t}; ++i)
        {
          norm_factor += exp(getColorAsFloat(${l.texture2D}(A, offsetToCoords(logical_row_start_offset + i,
            ${u}, ${a}))) - max);
        }

        return norm_factor;
      }`;return{...yp,output:{dims:i,type:e.type,textureType:0},shaderSource:d}},Zw=(r,e,n,t,o,i)=>{let[u,a]=r.calculateTextureWidthAndHeight(e.dims,0),s=e.dims.length;if(n<1||t<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(o.length!==1||i.length!==1)throw new Error("Dimensionality of the intermediate results should be 1");if(o[0]!==n||i[0]!==n)throw new Error("Shape of the intermediate results should be equal to logical row count");let l=`
      float process(int[${s}] indices) {

      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)
      int offset = coordsToOffset(TexCoords, ${u}, ${a});

      //determine the logical row for this index
      int logical_row_index[1];
      logical_row_index[0] = offset / ${t};

      float norm_factor = _Norm(logical_row_index);

      // avoid possible division by 0
      // if norm_facor is 0, all elements are zero
      // if so, return 0
      if(norm_factor == 0.0)
        return 0.0;

      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;
    }`;return{...vp,output:{dims:e.dims,type:e.type,textureType:0},shaderSource:l}},Ip=r=>{if(!r||r.length!==1)throw new Error("Softmax requires 1 input.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type")}});var Ap,Op,Ep,Jw,Qw,ex,Cp=B(()=>{"use strict";gt();We();Re();Ap={name:"Split",inputNames:["A"],inputTypes:[0]},Op=(r,e,n)=>{ex(e);let t=re.normalizeAxis(n.axis,e[0].dims.length),o=Jw(r,e,t,n),i=[];for(let u=0;u<o;++u)i.push(r.run({...Ap,cacheHint:`${n.cacheKey};${u}`,get:()=>Qw(r,e[0],n,t,u)},e));return i},Ep=r=>{let e=r.attributes.getInt("axis",0),n=r.attributes.getInts("split",[]),t=r.outputs.length;return $e({axis:e,split:n,numOutputs:t})},Jw=(r,e,n,t)=>{let[,o]=no.splitShape(e[0].dims,n,t.split,t.numOutputs);return o.length},Qw=(r,e,n,t,o)=>{let[i,u]=no.splitShape(e.dims,t,n.split,n.numOutputs),a=u[o],s=i[o],d=`
      float process(int indices[${s.length}]) {
        indices[${t}] += ${a};
        return _A(indices);
      }
    `;return{...Ap,cacheHint:`${n.cacheKey}:${o}`,output:{dims:s,type:e.type,textureType:0},shaderSource:d}},ex=r=>{if(!r||r.length!==1)throw new Error("Split requires one input.");if(r[0].type!=="int8"&&r[0].type!=="uint8"&&r[0].type!=="int16"&&r[0].type!=="uint16"&&r[0].type!=="int32"&&r[0].type!=="uint32"&&r[0].type!=="float32"&&r[0].type!=="float64"&&r[0].type!=="bool")throw new Error("Invalid input type.")}});var gs,Pp,kp,tx,rx,Dp=B(()=>{"use strict";We();gs=(r,e,n)=>{tx(e);let t=re.squeezeShape(e[0].dims,n);return[r.reshapeUnpacked(e[0],t)]},Pp=(r,e)=>(rx(e),gs(r,[e[0]],Array.from(e[1].integerData))),kp=r=>r.attributes.getInts("axes"),tx=r=>{if(!r||r.length!==1)throw new Error("Squeeze requires 1 input.");if(r[0].type==="string")throw new Error("invalid input tensor types.")},rx=r=>{if(!r||r.length!==2)throw new Error("Squeeze requires 2 inputs.");if(r[1].type!=="int32")throw new Error("Invalid input type.")}});var Bp,nx,ox,Rp=B(()=>{"use strict";rt();Re();Bp=(r,e)=>{ox(e);let n={name:"Sum",inputNames:e.map((o,i)=>`X${i}`),inputTypes:new Array(e.length).fill(0)};return[r.run({...n,get:()=>nx(r,e,n)},e)]},nx=(r,e,n)=>{let t=se(r.session.backend.glContext.version),o=e[0].dims.slice(),u=`
      void main() {
        vec4 result = ${e.map((a,s)=>`${t.texture2D}(X${s},TexCoords)`).join(" + ")};
        ${t.output} = result;
      }
    `;return{...n,output:{dims:o,type:e[0].type,textureType:0},hasMain:!0,shaderSource:u}},ox=r=>{if(!r||r.length===0)throw new Error("Sum requires inputs.");let e=r[0].dims.length;for(let n=1;n<r.length;n++){if(e!==r[n].dims.length)throw new Error("Input shapes are mismatched.");for(let t=0;t<e;t++)if(r[0].dims[t]!==r[n].dims[t])throw new Error("Input shapes are not matched.")}if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.");for(let n=1;n<r.length;n++)if(r[0].type!==r[n].type)throw new Error("Input types are not matched.")}});var Mp,ix,ax,Lp=B(()=>{"use strict";lo();Re();Mp=(r,e)=>{ax(e);let n={name:"Tile",inputNames:["A"],inputTypes:[0]};return[r.run({...n,get:()=>ix(r,e,n)},e)]},ix=(r,e,n)=>{let t=e[0].dims.slice(),o=new Array(t.length),i=[];for(let s=0;s<t.length;s++)o[s]=t[s]*e[1].numberData[s],i.push(`inputIdx[${s}] = int(mod(float(outputIdx[${s}]), ${t[s]}.));`);let u=o.length,a=`
      float process(int outputIdx[${u}]) {
        int inputIdx[${u}];
        ${i.join(`
`)}
        return _A(inputIdx);
      }
    `;return{...n,output:{dims:o,type:e[0].type,textureType:0},shaderSource:a}},ax=r=>{if(!r||r.length!==2)throw new Error("Tile requires 2 input.");if(r[1].dims.length!==1)throw new Error("The second input shape must 1 dimension.");if(r[1].dims[0]!==r[0].dims.length)throw new Error("Invalid input shape.");if(Lr.indexOf(r[0].type)===-1)throw new Error("Invalid input type.");if(r[1].type!=="int32"&&r[1].type!=="int16")throw new Error("Invalid repeat type.")}});var bs,zp,Np,sx,ux,Fp=B(()=>{"use strict";We();bs=(r,e,n)=>{sx(e);let t=re.unsqueezeShape(e[0].dims,n);return[r.reshapeUnpacked(e[0],t)]},zp=(r,e)=>(ux(e),bs(r,[e[0]],Array.from(e[1].integerData))),Np=r=>r.attributes.getInts("axes"),sx=r=>{if(!r||r.length!==1)throw new Error("Unsqueeze requires 1 input.");if(r[0].type==="string")throw new Error("invalid input tensor types.")},ux=r=>{if(!r||r.length!==2)throw new Error("Unsqueeze requires 2 inputs.");if(r[1].type!=="int32")throw new Error("Invalid input type.")}});var Vp,Gp=B(()=>{"use strict";Zd();dc();pc();vc();hi();rf();lf();ff();mf();vf();Tf();_f();Cf();mi();Bf();jf();tp();np();lp();cp();gp();_p();Cp();Dp();Rp();Lp();bi();es();Fp();fs();Vp=[["Abs","","6+",wc],["Acos","","7+",xc],["Add","","7+",Jd],["And","","7+",Qd],["Asin","","7+",Tc],["Atan","","7+",$c],["AveragePool","","7+",Mf,Lf],["BatchNormalization","","7+",Yd,Xd],["Cast","","6+",cc,fc],["Ceil","","6+",_c],["Clip","","6-10",Ja,Sc],["Clip","","11+",Ic],["Concat","","4+",gc,yc],["Conv","","1+",as,ss],["ConvTranspose","","1+",ef,tf],["Cos","","7+",Ac],["Div","","7+",ec],["Dropout","","7+",Qa],["DepthToSpace","","1+",sf,uf],["Equal","","7+",tc],["Elu","","6+",Oc,Ec],["Exp","","6+",Cc],["Flatten","","1+",df,cf],["Floor","","6+",Pc],["FusedConv","com.microsoft","1+",as,ss],["Gather","","1+",pf,hf],["Gemm","","7-10",us,bf],["Gemm","","11+",us,yf],["GlobalAveragePool","","1+",Nf,Ff],["GlobalMaxPool","","1+",Hf],["Greater","","7+",rc],["Identity","","1+",Qa],["ImageScaler","","1+",wf,xf],["InstanceNormalization","","6+",Sf,If],["LeakyRelu","","6+",kc,Dc],["Less","","7+",nc],["LRN","","1+",Af,Of],["Log","","6+",Bc],["MatMul","","1+",jc,Kc],["MaxPool","","1+",Vf,Gf],["Mul","","7+",oc],["Neg","","6+",Rc],["Not","","1+",Mc],["Or","","7+",ic],["Pad","","2-10",ls,Pf],["Pad","","11+",kf,Df],["Pow","","7+",ac],["PRelu","","7+",sc],["ReduceLogSum","","1+",Qf,zr],["ReduceMax","","1+",Xf,zr],["ReduceMean","","1+",Yf,zr],["ReduceMin","","1+",Zf,zr],["ReduceProd","","1+",Jf,zr],["ReduceSum","","1-12",Kf,zr],["ReduceSumSquare","","1+",ep,zr],["Relu","","6+",Lc],["Reshape","","5+",rp],["Resize","","10",hs,sp],["Resize","","11+",hs,up],["Shape","","1+",dp],["Sigmoid","","6+",zc],["Sin","","7+",Nc],["Slice","","10+",mp],["Slice","","1-9",fp,pp],["Softmax","","1-12",wp,xp],["Softmax","","13+",$p,Tp],["Split","","2-12",Op,Ep],["Sqrt","","6+",Fc],["Squeeze","","1-12",gs,kp],["Squeeze","","13+",Pp],["Sub","","7+",uc],["Sum","","6+",Bp],["Tan","","7+",Vc],["Tanh","","6+",Gc],["Tile","","6+",Mp],["Transpose","","1+",un,of],["Upsample","","7-8",ds,ip],["Upsample","","9",ds,ap],["Unsqueeze","","1-12",bs,Np],["Unsqueeze","","13+",zp],["Xor","","7+",lc]]});function Up(r){let e={},n;for(;(n=Wp.exec(r))!==null;){let t=n[3].split(",").map(o=>{let i=o.trim().split(" ");return i&&i.length===2?{type:i[0],name:i[1]}:null}).filter(o=>o!==null);e[n[2]]={params:t,body:n[4]}}for(let t in e){let o=lx.replace("__FUNC__",t),i=new RegExp(o,"gm");for(;(n=i.exec(r))!==null;){let u=n[1],a=n[2],s=n[3].split(","),l=u?`${u} ${a};`:"",d=e[t].body,p="";e[t].params.forEach((g,b)=>{g&&(p+=`${g.type} ${g.name} = ${s[b]};
`)}),d=`${p}
 ${d}`,d=d.replace("return",`${a} = `);let f=`
      ${l}
      {
        ${d}
      }
      `;r=r.replace(n[0],f)}}return r=r.replace(Wp,""),r}var Wp,lx,Hp=B(()=>{"use strict";Wp=/@inline[\s\n\r]+(\w+)[\s\n\r]+([0-9a-zA-Z_]+)\s*\(([^)]*)\)\s*{(([^}]|[\n\r])*)}/gm,lx="(\\w+)?\\s+([_0-9a-zA-Z]+)\\s+=\\s+__FUNC__\\((.*)\\)\\s*;"});function Cn(r,e){let n=[],t=[],o=e!=null&&Array.isArray(e)&&e.length===0,i=e==null||o?null:dx(e,r).sort(),u=0;for(let a=0;a<r.length;++a){if(i!=null){if(i[u]===a&&r[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${r[a]}' is not 1`);(i[u]==null||i[u]>a)&&r[a]===1&&(n.push(r[a]),t.push(a)),i[u]<=a&&u++}r[a]!==1&&(n.push(r[a]),t.push(a))}return{newShape:n,keptDims:t}}function dx(r,e){let n=e.length;return r=r==null?e.map((t,o)=>o):[].concat(r),Sn(r.every(t=>t>=-n&&t<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${r}`),Sn(r.every(cx),()=>`All values in axis param must be integers but got axis ${r}`),r.map(t=>t<0?n+t:t)}function cx(r){return r%1===0}function fx(r){if(r.length===0)return 1;let e=r[0];for(let n=1;n<r.length;n++)e*=r[n];return e}function qp(r){let e=Math.ceil(Math.sqrt(r));return[e,Math.ceil(r/e)]}var xi,ys=B(()=>{"use strict";Ft();We();xi=class{constructor(e){this.maxTextureSize=e}computeTextureWH(e,n){let t=this.computeTexture(e,n);return n&&n.isPacked&&(t[0]/=2,t[1]/=2),n&&n.reverseWH?[t[1],t[0]]:t}computeTexture(e,n){let t=n&&n.isPacked;if(e.length===0)return t?[2,2]:[1,1];let o=this.maxTextureSize;if(n&&n.breakAxis!==void 0){let a=n.breakAxis>=e.length?1:e.slice(n.breakAxis).reduce((l,d)=>l*d),s=n.breakAxis<=0?1:e.slice(0,n.breakAxis).reduce((l,d)=>l*d);if(a>o||s>o)He.verbose("TextureLayout",`Given width/height preferences were unattainable: shape:${e}, breakAxis:${n.breakAxis}`);else return[a,s]}let i=e.slice(0);t&&(o=o*2,i=i.map((a,s)=>s>=i.length-2?i[s]%2===0?i[s]:i[s]+1:i[s]),i.length===1&&(i=[2,i[0]])),i.length!==2&&(i=Cn(i).newShape);let u=fx(i);return i.length<=1&&u<=o?[1,u]:i.length===2&&i[0]<=o&&i[1]<=o?i:i.length===3&&i[0]*i[1]<=o&&i[2]<=o?[i[0]*i[1],i[2]]:i.length===3&&i[0]<=o&&i[1]*i[2]<=o?[i[0],i[1]*i[2]]:i.length===4&&i[0]*i[1]*i[2]<=o&&i[3]<=o?[i[0]*i[1]*i[2],i[3]]:i.length===4&&i[0]<=o&&i[1]*i[2]*i[3]<=o?[i[0],i[1]*i[2]*i[3]]:t?qp(u/4).map(a=>a*2):qp(u)}}});var Ti,jp=B(()=>{"use strict";We();Ar();rt();ys();dr();Ti=class extends Ut{constructor(n){super(n)}getFunctions(){return{...this.offsetToCoords(),...this.coordsToOffset(),...this.toVec(),...this.valueFrom(),...this.getCommonUtilFuncs(),...this.getInputsSamplingSnippets(),...this.getOutputSamplingSnippet()}}getCustomTypes(){return{}}offsetToCoords(){let n="offsetToCoords";return{offsetToCoords:new J(`
      vec2 ${n}(int offset, int width, int height) {
        int t = offset / width;
        int s = offset - t*width;
        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);
        return coords;
      }
      `)}}coordsToOffset(){let n="coordsToOffset";return{coordsToOffset:new J(`
      int ${n}(vec2 coords, int width, int height) {
        float s = coords.s * float(width);
        float t = coords.t * float(height);
        int offset = int(t) * width + int(s);
        return offset;
      }
      `)}}getOutputSamplingSnippet(){let n=this.context.outputTextureLayout;return n.isPacked?this.getPackedOutputSamplingSnippet(n):this.getUnpackedOutputSamplingSnippet(n)}getPackedOutputSamplingSnippet(n){let t=n.unpackedShape,o=[n.width,n.height],i={},u="getOutputCoords";switch(t.length){case 0:i[u]=this.getOutputScalarCoords();break;case 1:i[u]=this.getOutputPacked1DCoords(t,o);break;case 2:i[u]=this.getOutputPacked2DCoords(t,o);break;case 3:i[u]=this.getOutputPacked3DCoords(t,o);break;default:i[u]=this.getOutputPackedNDCoords(t,o)}let s=`
      void setOutput(vec4 val) {
        ${se(this.context.glContext.version).output} = val;
      }
    `,l="floatTextureSetRGBA";return i[l]=new J(s),i}getUnpackedOutputSamplingSnippet(n){let t=n.unpackedShape,o=[n.width,n.height],i={},u="getOutputCoords";switch(t.length){case 0:i[u]=this.getOutputScalarCoords();break;case 1:i[u]=this.getOutputUnpacked1DCoords(t,o);break;case 2:i[u]=this.getOutputUnpacked2DCoords(t,o);break;case 3:i[u]=this.getOutputUnpacked3DCoords(t,o);break;case 4:i[u]=this.getOutputUnpacked4DCoords(t,o);break;case 5:i[u]=this.getOutputUnpacked5DCoords(t,o);break;case 6:i[u]=this.getOutputUnpacked6DCoords(t,o);break;default:throw new Error(`Unsupported output dimensionality: ${t.length}`)}let s=`
        void setOutput(float val) {
          ${se(this.context.glContext.version).output} = vec4(val, 0, 0, 0);
        }
    `,l="floatTextureSetR";return i[l]=new J(s),i}getOutputScalarCoords(){return new J(`
      int getOutputCoords() {
        return 0;
      }
    `)}getOutputPacked1DCoords(n,t){let o=t,i="";return o[0]===1?(i=`
          int getOutputCoords() {
            return 2 * int(TexCoords.y * ${o[1]}.0);
          }
        `,new J(i)):o[1]===1?(i=`
          int getOutputCoords() {
            return 2 * int(TexCoords.x * ${o[0]}.0);
          }
        `,new J(i)):(i=`
        int getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                 vec2(${o[0]}, ${o[1]}));
          return 2 * (resTexRC.y * ${o[0]} + resTexRC.x);
        }
      `,new J(i))}getOutputPacked2DCoords(n,t){let o="";if(en.arraysEqual(n,t))return o=`
        ivec2 getOutputCoords() {
          return 2 * ivec2(TexCoords.xy * vec2(${t[0]}, ${t[1]}));
        }
      `,new J(o);let i=t,u=Math.ceil(n[1]/2);return o=`
        ivec2 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${i[0]}, ${i[1]}));

          int index = resTexRC.y * ${i[0]} + resTexRC.x;

          // reverse r and c order for packed texture
          int r = imod(index, ${u}) * 2;
          int c = 2 * (index / ${u});

          return ivec2(r, c);
        }
      `,new J(o)}getOutputPacked3DCoords(n,t){let o=[t[0],t[1]],i=Math.ceil(n[2]/2),u=i*Math.ceil(n[1]/2),a=`
        ivec3 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${o[0]}, ${o[1]}));
          int index = resTexRC.y * ${o[0]} + resTexRC.x;

          int b = index / ${u};
          index -= b * ${u};

          // reverse r and c order for packed texture
          int r = imod(index, ${i}) * 2;
          int c = 2 * (index / ${i});

          return ivec3(b, r, c);
        }
      `;return new J(a)}getOutputPackedNDCoords(n,t){let o=[t[0],t[1]],i=Math.ceil(n[n.length-1]/2),u=i*Math.ceil(n[n.length-2]/2),a=u,s="",l="b, r, c";for(let p=2;p<n.length-1;p++)a*=n[n.length-p-1],s=`
      int b${p} = index / ${a};
      index -= b${p} * ${a};
    `+s,l=`b${p}, `+l;let d=`
      ivec${n.length} getOutputCoords() {
        ivec2 resTexRC = ivec2(TexCoords.xy *
                              vec2(${o[0]}, ${o[1]}));
        int index = resTexRC.y * ${o[0]} + resTexRC.x;

        ${s}

        int b = index / ${u};
        index -= b * ${u};

        // reverse r and c order for packed texture
        int r = imod(index, ${i}) * 2;
        int c = 2 * (index / ${i});

        return ivec${n.length}(${l});
      }
    `;return new J(d)}getOutputUnpacked1DCoords(n,t){let o=`
        int getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          return resTexRC.y * ${t[0]} + resTexRC.x;
        }
      `;return new J(o)}getOutputUnpacked2DCoords(n,t){let o=`
        ivec2 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          int r = index / ${n[1]};
          int c = index - r * ${n[1]};
          return ivec2(r, c);
        }
      `;return new J(o)}getOutputUnpacked3DCoords(n,t){let o="",i=n.length,u=null;i<2&&(u=[]),u=new Array(i-1),u[i-2]=n[i-1];for(let l=i-3;l>=0;--l)u[l]=u[l+1]*n[l+1];let a=["r","c","d"],s=u.map((l,d)=>{let p=`int ${a[d]} = index / ${l}`,f=d===u.length-1?`int ${a[d+1]} = index - ${a[d]} * ${l}`:`index -= ${a[d]} * ${l}`;return`${p}; ${f};`}).join("");return o=`
        ivec3 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          ${s}
          return ivec3(r, c, d);
        }
      `,new J(o)}getOutputUnpacked4DCoords(n,t){let o="",i=n.length,u=null;i<2&&(u=[]),u=new Array(i-1),u[i-2]=n[i-1];for(let l=i-3;l>=0;--l)u[l]=u[l+1]*n[l+1];let a=["r","c","d","d2"],s=u.map((l,d)=>{let p=`int ${a[d]} = index / ${l}`,f=d===u.length-1?`int ${a[d+1]} = index - ${a[d]} * ${l}`:`index -= ${a[d]} * ${l}`;return`${p}; ${f};`}).join("");return o=`
      ivec4 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          ${s}
          return ivec4(r, c, d, d2);
        }
      `,new J(o)}getOutputUnpacked5DCoords(n,t){let o="",i=n.length,u=null;i<2&&(u=[]),u=new Array(i-1),u[i-2]=n[i-1];for(let l=i-3;l>=0;--l)u[l]=u[l+1]*n[l+1];let a=["r","c","d","d2","d3"],s=u.map((l,d)=>{let p=`int ${a[d]} = index / ${l}`,f=d===u.length-1?`int ${a[d+1]} = index - ${a[d]} * ${l}`:`index -= ${a[d]} * ${l}`;return`${p}; ${f};`}).join("");return o=`
      ivec5 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          ${s}
          return ivec5(r, c, d, d2, d3);
        }
      `,new J(o)}getOutputUnpacked6DCoords(n,t){let o="",i=n.length,u=null;i<2&&(u=[]),u=new Array(i-1),u[i-2]=n[i-1];for(let l=i-3;l>=0;--l)u[l]=u[l+1]*n[l+1];let a=["r","c","d","d2","d3","d4"],s=u.map((l,d)=>{let p=`int ${a[d]} = index / ${l}`,f=d===u.length-1?`int ${a[d+1]} = index - ${a[d]} * ${l}`:`index -= ${a[d]} * ${l}`;return`${p}; ${f};`}).join("");return o=`
     ivec6 getOutputCoords() {
         ivec2 resTexRC = ivec2(TexCoords.xy *
                               vec2(${t[0]}, ${t[1]}));
         int index = resTexRC.y * ${t[0]} + resTexRC.x;
         ${s}
         return ivec6(r, c, d, d2, d3, d4);
       }
     `,new J(o)}getCommonUtilFuncs(){let n={},t="uvFromFlat";n[t]=new J(`
    vec2 uvFromFlat(int texNumR, int texNumC, int index) {
      int texC = index / texNumR;
      int texR = index - texC * texNumR;
      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to
      //       v.
      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);
    }
    `),t="packedUVfrom1D",n[t]=new J(`
      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
        int texelIndex = index / 2;
        int texR = texelIndex / texNumC;
        int texC = texelIndex - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),t="packedUVfrom2D",n[t]=new J(`
      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {
        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
        int texR = texelIndex / texNumC;
        int texC = texelIndex - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),t="packedUVfrom3D",n[t]=new J(`
      vec2 packedUVfrom3D(int texNumR, int texNumC,
          int texelsInBatch, int texelsInLogicalRow, int b,
          int row, int col) {
        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
        int texR = index / texNumC;
        int texC = index - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),t="sampleTexture";let o=se(this.context.glContext.version);return n[t]=new J(`
        float sampleTexture(sampler2D textureSampler, vec2 uv) {
            return ${o.texture2D}(textureSampler, uv).r;
        }`),n}getInputsSamplingSnippets(){let n={},t=this.context.outputTextureLayout;return this.context.programInfo.inputNames.forEach((o,i)=>{let u=this.context.inputTextureLayouts[i],a=si(o);u.isPacked?n[a]=this.getPackedSamplerFromInput(a,o,u):n[a]=this.getUnpackedSamplerFromInput(a,o,u);let s=Dd(o);u.unpackedShape.length<=t.unpackedShape.length&&(u.isPacked?n[s]=this.getPackedSamplerAtOutputCoords(s,u,t,o):n[s]=this.getUnpackedSamplerAtOutputCoords(s,u,t,o))}),n}getPackedSamplerAtOutputCoords(n,t,o,i){let u=t.unpackedShape,a=o.unpackedShape,l=si(i),d=u.length,p=a.length,f=At.getBroadcastDims(u,a),g=Ot(p),b=p-d,y,$=Qt();d===0?y="":p<2&&f.length>=1?y="coords = 0;":y=f.map(j=>`coords.${$[j+b]} = 0;`).join(`
`);let x="";p<2&&d>0?x="coords":x=u.map((j,ie)=>`coords.${$[ie+b]}`).join(", ");let I="return outputValue;",C=re.size(u)===1,R=re.size(a)===1;if(d===1&&!C&&!R)I=`
        return vec4(outputValue.xy, outputValue.xy);
      `;else if(C&&!R)p===1?I=`
          return vec4(outputValue.x, outputValue.x, 0., 0.);
        `:I=`
          return vec4(outputValue.x);
        `;else if(f.length){let j=d-2,ie=d-1;f.indexOf(j)>-1&&f.indexOf(ie)>-1?I="return vec4(outputValue.x);":f.indexOf(j)>-1?I="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":f.indexOf(ie)>-1&&(I="return vec4(outputValue.xx, outputValue.zz);")}let V=`
        int lastDim = coords.${$[p-1]};
        coords.${$[p-1]} = coords.${$[p-2]};
        coords.${$[p-2]} = lastDim;
      `,W=`
      vec4 ${n}() {
        ${g} coords = getOutputCoords();
        ${V}
        ${y}
        vec4 outputValue = ${l}(${x});
        ${I}
      }
    `;return new J(W,["coordinates.getOutputCoords"])}getUnpackedSamplerAtOutputCoords(n,t,o,i){let u=[o.width,o.height],a=[t.width,t.height],s=t.unpackedShape.length,l=o.unpackedShape.length,d=t.unpackedShape,p=o.unpackedShape,f=si(i);if(s===l&&en.arraysEqual(a,u)){let C=`
          float ${n}() {
            return sampleTexture(${i}, TexCoords);
          }
        `;return new J(C,["coordinates.sampleTexture"])}let g=Ot(l),b=At.getBroadcastDims(d,p),y=l-s,$,x=Qt();s===0?$="":l<2&&b.length>=1?$="coords = 0;":$=b.map(C=>`coords.${x[C+y]} = 0;`).join(`
`);let I="";l<2&&s>0?I="coords":I=t.unpackedShape.map((C,N)=>`coords.${x[N+y]}`).join(", ");let O=`
        float ${n}() {
          ${g} coords = getOutputCoords();
          ${$}
          return ${f}(${I});
        }
      `;return new J(O,["coordinates.getOutputCoords"])}getPackedSamplerFromInput(n,t,o){switch(o.unpackedShape.length){case 0:return this.getPackedSamplerScalar(n,t);case 1:return this.getPackedSampler1D(n,t,o);case 2:return this.getPackedSampler2D(n,t,o);case 3:return this.getPackedSampler3D(n,t,o);default:return this.getPackedSamplerND(n,t,o)}}getUnpackedSamplerFromInput(n,t,o){let i=o.unpackedShape;switch(i.length){case 0:return this.getUnpackedSamplerScalar(n,t,o);case 1:return this.getUnpackedSampler1D(n,t,o);case 2:return this.getUnpackedSampler2D(n,t,o);case 3:return this.getUnpackedSampler3D(n,t,o);case 4:return this.getUnpackedSampler4D(n,t,o);case 5:return this.getUnpackedSampler5D(n,t,o);case 6:return this.getUnpackedSampler6D(n,t,o);default:throw new Error(`Unsupported dimension ${i.length}-D`)}}getPackedSamplerScalar(n,t){let o=se(this.context.glContext.version),i=`
          vec4 ${n}() {
            return ${o.texture2D}(${t}, halfCR);
          }
        `;return new J(i)}getPackedSampler1D(n,t,o){let i=[o.width,o.height],u=[i[1],i[0]],a=se(this.context.glContext.version),l=`vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
      ${u[0]}, ${u[1]}, index);
      return ${a.texture2D}(${t}, uv);
    }`;return new J(l,["coordinates.packedUVfrom1D"])}getPackedSampler2D(n,t,o){let i=o.unpackedShape,u=[o.width,o.height],a=se(this.context.glContext.version),s=u[0],l=u[1];if(u!=null&&en.arraysEqual(i,u)){let b=`vec4 ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${l}.0, ${s}.0);
        return ${a.texture2D}(${t}, uv);
      }`;return new J(b)}let d=u,p=Math.ceil(i[1]/2),g=`vec4 ${n}(int row, int col) {
      vec2 uv = packedUVfrom2D(${d[1]}, ${d[0]}, ${p}, row, col);
      return ${a.texture2D}(${t}, uv);
    }`;return new J(g,["coordinates.packedUVfrom2D"])}getPackedSampler3D(n,t,o){let i=o.unpackedShape,u=[o.width,o.height],a=[u[0],u[1]],s=se(this.context.glContext.version);if(i[0]===1){let y=i.slice(1),$=[1,2],x=In(i,y),I=["b","row","col"],O=JSON.parse(JSON.stringify(o));O.unpackedShape=x;let C=this.getPackedSamplerFromInput(n,t,O),R=`${C.routineBody}
      vec4 ${n}(int b, int row, int col) {
        return ${n}(${_n(I,$)});
      } `;return new J(R,C.dependencies)}let l=a[0],d=a[1],p=Math.ceil(i[2]/2),f=p*Math.ceil(i[1]/2),b=`vec4 ${n}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${d}, ${l}, ${f}, ${p}, b, row, col);
      return ${s.texture2D}(${t}, uv);}`;return new J(b,["coordinates.packedUVfrom3D"])}getPackedSamplerND(n,t,o){let i=o.unpackedShape,u=i.length,a=[o.width,o.height],s=se(this.context.glContext.version),l=[a[0],a[1]],d=l[1],p=l[0],f=Math.ceil(i[u-1]/2),g=f*Math.ceil(i[u-2]/2),b="int b, int row, int col",y=`b * ${g} + (row / 2) * ${f} + (col / 2)`;for(let I=2;I<u-1;I++)b=`int b${I}, `+b,g*=i[u-I-1],y=`b${I} * ${g} + `+y;let x=`vec4 ${n}(${b}) {
      int index = ${y};
      int texR = index / ${p};
      int texC = index - texR * ${p};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}, ${d});
      return ${s.texture2D}(${t}, uv);
    }`;return new J(x)}getUnpackedSamplerScalar(n,t,o){let[i,u]=[o.width,o.height];if(i===1&&u===1){let s=`
          float ${n}() {
            return sampleTexture(${t}, halfCR);
          }
        `;return new J(s,["coordinates.sampleTexture"])}let a=`
        float ${n}() {
          int offset_${t} = coordsToOffset(TexCoords, ${i}, ${u});
          vec2 uv = uvFromFlat(${i}, ${u}, offset_${t});
          return sampleTexture(${t}, uv);
        }
      `;return new J(a,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler1D(n,t,o){let i=o.width,u=o.height;if(u===1&&i===1){let s=`
        float ${n}(int index) {
          return sampleTexture(${t}, halfCR);
        }
      `;return new J(s,["coordinates.sampleTexture"])}if(u===1){let s=`
          float ${n}(int index) {
            vec2 uv = vec2((float(index) + 0.5) / ${i}.0, 0.5);
            return sampleTexture(${t}, uv);
          }
        `;return new J(s,["coordinates.sampleTexture"])}if(i===1){let s=`
          float ${n}(int index) {
            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${u}.0);
            return sampleTexture(${t}, uv);
          }
        `;return new J(s,["coordinates.sampleTexture"])}let a=`
        float ${n}(int index) {
          vec2 uv = uvFromFlat(${i}, ${u}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new J(a,["coordinates.uvFromFlat","coordinates.sampleTexture"])}getUnpackedSampler2D(n,t,o){let i=o.unpackedShape,u=[o.height,o.width];if(u!=null&&en.arraysEqual(i,u)){let g=u[1],b=u[0],y=`
          float ${n}(int row, int col) {
            vec2 uv = (vec2(row, col) + halfCR) / vec2(${g}.0, ${b}.0);
            return sampleTexture(${t}, uv);
          }
        `;return new J(y,["coordinates.sampleTexture"])}let{newShape:a,keptDims:s}=Cn(i),l=a;if(l.length<i.length){let g=In(i,l),b=JSON.parse(JSON.stringify(o));b.unpackedShape=g;let y=["col","row"],$=`
          ${this.getUnpackedSamplerFromInput(n,t,b).routineBody}
          float ${n}(int row, int col) {
            return ${n}(${_n(y,s)});
          }
        `;return new J($,["coordinates.sampleTexture"])}let d=u[1],p=u[0];if(p===1){let g=`
          float ${n}(int row, int col) {
            int offset_${t} = coordsToOffset(TexCoords, ${d}, ${p});
            float index = dot(vec3(row, col, offset_${t}), vec3(${i[1]}, 1, 1));
            vec2 uv = vec2(0.5, (index + 0.5) / ${d}.0);
            return sampleTexture(${t}, uv);
          }
        `;return new J(g,["coordinates.sampleTexture","coordinates.coordsToOffset"])}if(d===1){let g=`
          float ${n}(int row, int col) {
            int offset_${t} = coordsToOffset(TexCoords, ${d}, ${p});
            float index = dot(vec3(row, col, offset_${t}), vec3(${i[1]}, 1, 1));
            vec2 uv = vec2((index + 0.5) / ${p}.0, 0.5);
            return sampleTexture(${t}, uv);
          }
        `;return new J(g,["coordinates.sampleTexture","coordinates.coordsToOffset"])}let f=`
        float ${n}(int row, int col) {
          int index = col * ${i[1]} + row;
          vec2 uv = uvFromFlat(${d}, ${p}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new J(f,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler3D(n,t,o){let i=o.unpackedShape,u=i[1]*i[2],a=i[2],{newShape:s,keptDims:l}=Cn(i),d=s;if(d.length<i.length){let b=In(i,d),y=["batch","col","row"],$=JSON.parse(JSON.stringify(o));$.unpackedShape=b;let x=this.getUnpackedSamplerFromInput(n,t,$),I=l.reverse(),O=`
          ${x.routineBody}
          float ${n}(int batch, int row, int col) {
            return ${n}(${_n(y,I)});
          }
        `;return new J(O,x.dependencies)}let p=o.width,f=o.height,g=`
          float ${n}(int depth, int row, int col) {
            // Explicitly use integer operations as dot() only works on floats.
            int index = depth * ${u} + col * ${a} + row;
            vec2 uv = uvFromFlat(${p}, ${f}, index);
            return sampleTexture(${t}, uv);
          }
      `;return new J(g,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler4D(n,t,o){let i=o.unpackedShape,u=i[3],a=i[2]*u,s=i[1]*a,l=o.width,d=o.height,p=`
        float ${n}(int row, int col, int depth, int depth2) {
          int index = row * ${s} + col * ${a} +
              depth2 * ${u} + depth;
          vec2 uv = uvFromFlat(${l}, ${d}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new J(p,["coordinates.uvFromFlat","coordinates.sampleTexture"])}getUnpackedSampler5D(n,t,o){let i=o.unpackedShape,u=i[4],a=i[3]*u,s=i[2]*a,l=i[1]*s,{newShape:d,keptDims:p}=Cn(i);if(d.length<i.length){let y=In(i,d),$=["row","col","depth","depth2","depth3"],x=JSON.parse(JSON.stringify(o));x.unpackedShape=y;let I=`
          ${this.getUnpackedSamplerFromInput(n,t,x).routineBody}
          float ${n}(int row, int col, int depth, int depth2, int depth3) {
            return ${n}(${_n($,p)});
          }
        `;return new J(I,["coordinates.sampleTexture","coordinates.uvFromFlat"])}let f=o.width,g=o.height,b=`
        float ${n}(int row, int col, int depth, int depth2, int depth3) {
          int index = row * ${l} + col * ${s} + depth * ${a} +
          depth3 * ${u} + depth2;
          vec2 uv = uvFromFlat(${f}, ${g}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new J(b,["coordinates.sampleTexture","coordinates.uvFromFlat"])}getUnpackedSampler6D(n,t,o){let i=o.unpackedShape,u=i[5],a=i[4]*u,s=i[3]*a,l=i[2]*s,d=i[1]*l,{newShape:p,keptDims:f}=Cn(i);if(p.length<i.length){let $=In(i,p),x=["row","col","depth","depth2","depth3","depth4"],I=JSON.parse(JSON.stringify(o));I.unpackedShape=$;let O=`
            ${this.getUnpackedSamplerFromInput(n,t,I).routineBody}
            float ${n}(int row, int col, int depth,
              int depth2, int depth3, int depth4) {
              return ${n}(${_n(x,f)});
            }
          `;return new J(O,["coordinates.sampleTexture","coordinates.uvFromFlat"])}let g=o.width,b=o.height,y=`
          float ${n}(int row, int col, int depth,
            int depth2, int depth3, int depth4) {
            int index = row * ${d} + col * ${l} + depth * ${s} +
            depth2 * ${a} + depth3 * ${u} + depth4;
            vec2 uv = uvFromFlat(${g}, ${b}, index);
            return sampleTexture(${t}, uv);
          }
        `;return new J(y,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}toVec(){let n=this.context.outputTextureLayout,t=n.shape.length,o=n.strides,i=n.width,u=n.height,a=[];for(let l=0;l<t-1;++l)a.push(`
        c[${l}] = offset / ${o[l]};`),a.push(`
        offset -= c[${l}] * ${o[l]};`);a.push(`
        c[${t-1}] = offset;`);let s=`
      void toVec(vec2 texCoords, out int c[${t}]) {
        int offset = coordsToOffset(texCoords, ${i}, ${u});
        ${a.join("")}
      }
      void toVec(int offset, out int c[${t}]) {
        ${a.join("")}
      }
    `;return{toVec:new J(s,["coordinates.coordsToOffset"])}}valueFrom(){let n={};return this.context.programInfo.inputNames.forEach((t,o)=>{let i=this.context.inputTextureLayouts[o],a=(i.unpackedShape.length>0?i.unpackedShape:i.shape).length,s=`_${t}`;n[s]=new J(this.getValueFromSingle(t,a,i.width,i.height,!1),[`shapeUtils.indicesToOffset${s}`,"coordinates.offsetToCoords","fragcolor.getColorAsFloat"]),s=s+"_T",n[s]=new J(this.getValueFromSingle(t,a,i.width,i.height,!0),[`shapeUtils.indicesToOffset${s}`,"coordinates.offsetToCoords","fragcolor.getColorAsFloat"])}),n}getValueFromSingle(n,t,o,i,u){let a=`_${n}`;u&&(a=a+"_T");let s=se(this.context.glContext.version);return`
        float ${a}(int m[${t}]) {
          int offset = indicesToOffset${a}(m);
          vec2 coords = offsetToCoords(offset, ${o}, ${i});
          float value = getColorAsFloat(${s.texture2D}(${n}, coords));
          return value;
        }
        `}getPackedValueFrom(n,t,o,i,u){let a=`_${n}_Pack`;u&&(a=a+"_T");let s=se(this.context.glContext.version);return`
        vec4 ${a}(int m[${t}]) {
          int offset = indicesToOffset_${n}(m);
          vec2 coords = offsetToCoords(offset, ${o}, ${i});
          return ${s.texture2D}(${n}, coords);
        }
        `}}});var $i,Kp=B(()=>{"use strict";Ar();$i=class r extends Ut{constructor(e){super(e)}getFunctions(){return{...this.encodeFloat32(),...this.decodeFloat32()}}getCustomTypes(){return{}}encodeFloat32(){return{encode:new J(`highp vec4 encode(highp float f) {
        return vec4(f, 0.0, 0.0, 0.0);
      }
        `)}}decodeFloat32(){return{decode:new J(`highp float decode(highp vec4 rgba) {
        return rgba.r;
      }
        `)}}encodeUint8(){let e=r.isLittleEndian()?"rgba.rgba=rgba.abgr;":"";return{encode:new J(`
      highp vec4 encode(highp float f) {
        highp float F = abs(f);
        highp float Sign = step(0.0,-f);
        highp float Exponent = floor(log2(F));
        highp float Mantissa = (exp2(- Exponent) * F);
        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));
        highp vec4 rgba;
        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));
        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);
        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));
        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));
        ${e}
        rgba = rgba / 255.0; // values need to be normalized to [0,1]
        return rgba;
    }
        `)}}decodeUint8(){let e=r.isLittleEndian()?"rgba.rgba=rgba.abgr;":"";return{decode:new J(`
        highp float decode(highp vec4 rgba) {
          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]
          ${e}
          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;
          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;
          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);
          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));
          return Result;
      }
        `)}}static isLittleEndian(){let e=new ArrayBuffer(4),n=new Uint32Array(e),t=new Uint8Array(e);if(n[0]=3735928559,t[0]===239)return!0;if(t[0]===222)return!1;throw new Error("unknown endianness")}}});var Si,Yp=B(()=>{"use strict";Ar();rt();Si=class extends Ut{constructor(e){super(e)}getFunctions(){return{...this.setFragColor(),...this.getColorAsFloat()}}getCustomTypes(){return{}}setFragColor(){let e=se(this.context.glContext.version);return{setFragColor:new J(`
        void setFragColor(float value) {
            ${e.output} = encode(value);
        }
        `,["encoding.encode"])}}getColorAsFloat(){return{getColorAsFloat:new J(`
        float getColorAsFloat(vec4 color) {
            return decode(color);
        }
        `,["encoding.decode"])}}}});var Ii,Xp=B(()=>{"use strict";Ar();Ii=class r extends Ut{constructor(e){super(e)}getFunctions(){return{...this.bcastIndex(),...this.bcastMatmulIndex(),...this.offsetToIndices(),...this.indicesToOffset(),...this.incrementIndices()}}getCustomTypes(){return{}}bcastIndex(){let e=this.context.outputTextureLayout.shape.length,n={};return this.context.programInfo.inputNames.forEach((t,o)=>{let i=this.context.inputTextureLayouts[o].unpackedShape;if(i.length<=e){let u=i.length,a=e-u,s=`bcastIndices_${t}`,l="";for(let p=0;p<u;++p)l+=`
          realIndices[${p}] = int( mod(float(bcastedIndices[${a+p}]), ${i[p]}.0) );
          `;let d=`
        void ${s} (int bcastedIndices[${e}], out int realIndices[${u}]) {
          ${l}
        }
        `;n[s]=new J(d)}}),n}bcastMatmulIndex(){let e=this.context.outputTextureLayout.shape.length,n={};return this.context.programInfo.inputNames.forEach((t,o)=>{let i=this.context.inputTextureLayouts[o].shape;if(!(i.length<2||i.length>e)){let u=i.length,a=e-u,s=`bcastMatmulIndices_${t}`,l="";for(let p=0;p<u-2;++p)l+=`
          realIndices[${p}] = int( mod(float(bcastedIndices[${a+p}]), ${i[p]}.0) );
          `;let d=`
        void ${s}(int bcastedIndices[${e}], out int realIndices[${u}]) {
          ${l}
          realIndices[${u-1}] = bcastedIndices[${e-1}];
          realIndices[${u-2}] = bcastedIndices[${e-2}];
        }
        `;n[s]=new J(d)}}),n}indicesToOffset(){let e={};return this.context.programInfo.inputNames.forEach((n,t)=>{let o=this.context.inputTextureLayouts[t].shape,i=this.context.inputTextureLayouts[t].strides,u=o.length,a=`indicesToOffset_${n}`;e[a]=new J(r.indexToOffsetSingle(a,u,i)),a=`indicesToOffset_${n}_T`,e[a]=new J(r.indexToOffsetSingle(a,u,i.slice().reverse()))}),e}static indexToOffsetSingle(e,n,t){let o="";for(let i=n-1;i>=0;--i)o+=`
        offset += indices[${i}] * ${t[i]};
        `;return`
      int ${e}(int indices[${n}]) {
        int offset = 0;
        ${o}
        return offset;
      }
      `}offsetToIndices(){let e={};return this.context.programInfo.inputNames.forEach((n,t)=>{let o=this.context.inputTextureLayouts[t].shape,i=this.context.inputTextureLayouts[t].strides,u=o.length,a=`offsetToIndices_${n}`;e[a]=new J(r.offsetToIndicesSingle(a,u,i)),a=`offsetToIndices_${n}_T`,e[a]=new J(r.offsetToIndicesSingle(a,u,i.slice().reverse()))}),e}static offsetToIndicesSingle(e,n,t){let o=[];for(let i=0;i<n-1;++i)o.push(`
      indices[${i}] = offset / ${t[i]};`),o.push(`
        offset -= indices[${i}] * ${t[i]};`);return o.push(`
      indices[${n-1}] = offset;`),`
      void ${e}(int offset, out int indices[${n}]) {
        ${o.join("")}
      }
      `}incrementIndices(){let e={};return this.context.programInfo.inputNames.forEach((n,t)=>{let o=this.context.inputTextureLayouts[t].shape,i=o.length,u=`incrementIndices_${n}`,a="";for(let l=0;l<i;++l)a+=`
        shape[${l}] = ${o[l]};`;let s=`
        void ${u}(int axis, out int indices[${i}]) {
          int shape[${i}];
          ${a};
          for(int i = ${i} -1 ; i >= 0; --i) {
            if(i > axis) continue;
            indices[i] += 1;
            if(indices[i] < shape[i]) {
              break;
            }
            indices[i] = 0;
          }
        }
        `;e[u]=new J(s)}),e}}});var _i,Zp=B(()=>{"use strict";Ar();_i=class extends Ut{constructor(e){super(e)}getCustomTypes(){return{}}getFunctions(){return{...this.binaryVecFunctions(),...this.copyVec(),...this.setVecItem(),...this.getVecItem()}}binaryVecFunctions(){let n=this.context.outputTextureLayout.shape.length,t={add:"+=",sub:"-=",mul:"*=",div:"/="},o={};for(let i in t){let u=`${i}Vec`,a="";for(let l=0;l<n;++l)a+=`
          dest[${l}] ${t[i]} src[${l}];
          `;let s=`
        void ${u}(int src[${n}], out int dest[${n}]) {
          ${a}
        }
        `;o[u]=new J(s)}return o}copyVec(){let n=this.context.outputTextureLayout.shape.length,t="";for(let i=0;i<n;++i)t+=`
        dest[${i}] = src[${i}];
        `;let o=`
      void copyVec(int src[${n}], out int dest[${n}]) {
        ${t}
      }
      `;return{copyVec:new J(o)}}setVecItem(){let n=this.context.outputTextureLayout.shape.length,t=`
        if(index < 0)
            index =${n} + index;
        if (index == 0)
            m[0] = value;
        `;for(let i=1;i<n-1;++i)t+=`
        else if (index == ${i})
            m[${i}] = value;
            `;t+=`
        else
            m[${n-1}] = value;
        `;let o=`
      void setVecItem(out int m[${n}], int index, int value) {
        ${t}
      }
        `;return{setVecItem:new J(o)}}getVecItem(){let n=this.context.outputTextureLayout.shape.length,t=`
        if(index < 0)
            index = ${n} + index;
        if (index == 0)
            return m[0];
      `;for(let i=1;i<n-1;++i)t+=`
        else if (index == ${i})
            return m[${i}];
      `;t+=`
        else
            return m[${n-1}];
        `;let o=`
      int getVecItem(int m[${n}], int index) {
        ${t}
      }
    `;return{getVecItem:new J(o)}}}});var vs,Jp=B(()=>{"use strict";jp();Kp();Yp();Xp();Zp();vs={encoding:$i,fragcolor:Si,vec:_i,shapeUtils:Ii,coordinates:Ti}});var Ai,Qp=B(()=>{"use strict";Ar();Hp();Jp();rt();Ai=class{constructor(e,n,t,o){this.libs={};this.glslLibRoutineDependencyGraph={};this.context=new ci(e,n,t,o),Object.keys(vs).forEach(u=>{let a=new vs[u](this.context);this.libs[u]=a});let i=this.glslLibRoutineDependencyGraph;for(let u in this.libs){let s=this.libs[u].getFunctions();for(let l in s){let d=u+"."+l,p;i[d]?(p=i[d],p.routineBody=s[l].routineBody):(p=new uo(d,s[l].routineBody),i[d]=p);let f=s[l].dependencies;if(f)for(let g=0;g<f.length;++g)if(i[f[g]])p.addDependency(i[f[g]]);else{let b=new uo(f[g]);i[f[g]]=b,p.addDependency(b)}}}}preprocess(){let e=this.context.programInfo,n=e.shaderSource;return this.context.programInfo.hasMain||(n=`${n}
      ${kd(this.context.glContext.version,this.context.outputTextureLayout.shape.length)}`),n=Up(n),`${Pd(this.context.glContext.version)}
    ${this.getUniforms(e.inputNames,e.variables)}
    ${this.getImports(n)}
    ${n}`}getImports(e){let n=this.selectGlslLibRoutinesToBeIncluded(e);if(n.length===0)return"";let t="";for(let o=0;o<n.length;++o)if(n[o].routineBody)t+=n[o].routineBody+`
`;else throw new Error(`Missing body for the Glsl Library routine: ${n[o].name}`);return t}selectGlslLibRoutinesToBeIncluded(e){let n=[];return Object.keys(this.glslLibRoutineDependencyGraph).forEach(t=>{let o=t.split(".")[1];e.indexOf(o)!==-1&&n.push(this.glslLibRoutineDependencyGraph[t])}),fi.returnOrderedNodes(n)}getUniforms(e,n){let t=[];if(e)for(let o of e)t.push(`uniform sampler2D ${o};`);if(n)for(let o of n)t.push(`uniform ${o.type} ${o.name}${o.arrayLength?`[${o.arrayLength}]`:""};`);return t.join(`
`)}}});var Oi,eh=B(()=>{"use strict";kt();Ft();Qp();rt();Oi=class{constructor(e,n,t){this.profiler=e;this.glContext=n;this.textureLayoutStrategy=t;this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,n){this.repo.set(e,n)}run(e,n,t){this.profiler.event("op",`ProgramManager.run ${e.programInfo.name??"unknown kernel"}`,()=>{let o=this.glContext.gl,i=e.program;o.useProgram(i);try{this.bindOutput(t),this.attributesBound||this.bindAttributes(e.attribLocations),this.bindUniforms(e.uniformLocations,e.programInfo.variables??[],n)}catch(u){throw He.error("ProgramManager",e.programInfo.shaderSource),u}this.profiler.event("backend","GlContext.draw()",()=>{this.glContext.draw()})},this.glContext)}dispose(){this.vertexShader&&this.glContext.deleteShader(this.vertexShader),this.repo.forEach(e=>this.glContext.deleteProgram(e.program))}build(e,n,t){return this.profiler.event("backend","ProgramManager.build",()=>{let o=new Ai(this.glContext,e,n,t),i=o.preprocess(),u=this.compile(i);return{programInfo:e,program:u,uniformLocations:this.getUniformLocations(u,o.context.programInfo.inputNames,o.context.programInfo.variables),attribLocations:this.getAttribLocations(u)}})}compile(e){if(!this.vertexShader){He.verbose("ProrgramManager","Compiling and caching Vertex shader for the first time");let o=Cd(this.glContext.version);this.vertexShader=this.glContext.compileShader(o,this.glContext.gl.VERTEX_SHADER)}Te.debug&&He.verbose("ProrgramManager",`FragShader:
${e}
`);let n=this.glContext.compileShader(e,this.glContext.gl.FRAGMENT_SHADER),t=this.glContext.createProgram(this.vertexShader,n);return this.glContext.deleteShader(n),t}bindOutput(e){let n=e.width,t=e.height;He.verbose("ProrgramManager",`Binding output texture to Framebuffer: w/h=${n}/${t}, shape=${e.shape}, type=${e.tensor.type}`),this.glContext.attachFramebuffer(e.texture,n,t)}bindAttributes(e){let n=e.position,t=e.textureCoord;this.glContext.setVertexAttributes(n,t),this.attributesBound=!0}bindUniforms(e,n,t){let o=this.glContext.gl,i=0;for(let{name:u,type:a,location:s,arrayLength:l}of e){let d=n.find(p=>p.name===u)?.data;if(a!=="sampler2D"&&!d)throw new Error(`variable '${u}' does not have data defined in program info`);switch(a){case"sampler2D":this.bindTexture(t[i],s,i),i++;break;case"float":l?o.uniform1fv(s,d):o.uniform1f(s,d);break;case"int":l?o.uniform1iv(s,d):o.uniform1i(s,d);break;default:throw new Error(`Uniform not implemented: ${a}`)}}}bindTexture(e,n,t){this.glContext.bindTextureToUniform(e.texture,t,n)}getAttribLocations(e){return{position:this.getAttribLocation(e,"position"),textureCoord:this.getAttribLocation(e,"textureCoord")}}getUniformLocations(e,n,t){let o=[];if(n)for(let i of n)o.push({name:i,type:"sampler2D",location:this.getUniformLocation(e,i)});if(t)for(let i of t)o.push({...i,location:this.getUniformLocation(e,i.name)});return o}getUniformLocation(e,n){let o=this.glContext.gl.getUniformLocation(e,n);if(o===null)throw new Error(`Uniform ${n} not found.`);return o}getAttribLocation(e,n){return this.glContext.gl.getAttribLocation(e,n)}}});var Ei,th=B(()=>{"use strict";Ft();ao();Ei=class{constructor(e,n,t,o){this.glContext=e;this.layoutStrategy=n;this.profiler=t;this.config=o;this.pendingRead=new Map;o.reuseTextures&&(this.inUseTextures=new Map,this.idleTextures=new Map,this.textureLookup=new Map)}createTextureFromLayout(e,n,t,o){let i=this.toEncoderType(e),u=this.glContext.getEncoder(i,n.channels||1,o);if(n.isPacked&&o===1)throw new Error("not implemented");let a=n.width,s=n.height,l,d;if(this.config.reuseTextures){l=`${a}x${s}_${u.format}_${u.internalFormat}_${u.textureType}`,d=this.inUseTextures.get(l),d||(d=[],this.inUseTextures.set(l,d));let f=this.idleTextures.get(l);if(f&&f.length>0){let g=f.pop();return d.push(g),o===1&&this.glContext.updateTexture(g,a,s,u,this.toTextureData(e,t)),g}}He.verbose("TextureManager",`Creating new texture of size ${n.width}x${n.height}`);let p=this.glContext.allocateTexture(a,s,u,this.toTextureData(e,t));return this.config.reuseTextures&&(d.push(p),this.textureLookup.set(p,l)),p}readTexture(e,n,t){return t||(t=1),this.profiler.event("backend","TextureManager.readTexture",()=>{let o=e.shape.reduce((u,a)=>u*a)*t,i=this.glContext.readTexture(e.texture,e.width,e.height,o,this.toEncoderType(n),t);return this.toTensorData(n,i)})}async readTextureAsync(e,n,t){let o=e.tensor.dataId;if(t||(t=1),this.pendingRead.has(o)){let i=this.pendingRead.get(o);return new Promise(u=>i?.push(u))}return this.profiler.event("backend","TextureManager.readTextureAsync",async()=>{this.pendingRead.set(o,[]);let i=e.shape.reduce((l,d)=>l*d)*t;await this.glContext.createAndWaitForFence();let u=this.glContext.readTexture(e.texture,e.width,e.height,i,this.toEncoderType(n),t),a=this.toTensorData(n,u),s=this.pendingRead.get(o);return this.pendingRead.delete(o),s?.forEach(l=>l(a)),a})}readUint8TextureAsFloat(e){return this.profiler.event("backend","TextureManager.readUint8TextureAsFloat",()=>{let n=e.shape.reduce((o,i)=>o*i),t=this.glContext.readTexture(e.texture,e.width,e.height,n*4,"byte",4);return new Float32Array(t.buffer,t.byteOffset,n)})}releaseTexture(e,n){let t;if(this.config.reuseTextures&&(t=this.textureLookup.get(e.texture),t)){n&&this.textureLookup.delete(t);let o=this.inUseTextures.get(t);if(o){let i=o.indexOf(e.texture);if(i!==-1){o.splice(i,1);let u=this.idleTextures.get(t);u||(u=[],this.idleTextures.set(t,u)),u.push(e.texture)}}}(!t||n)&&(He.verbose("TextureManager",`Deleting texture of size ${e.width}x${e.height}`),this.glContext.deleteTexture(e.texture))}toTensorData(e,n){switch(e){case"int16":return n instanceof Int16Array?n:Int16Array.from(n);case"int32":return n instanceof Int32Array?n:Int32Array.from(n);case"int8":return n instanceof Int8Array?n:Int8Array.from(n);case"uint16":return n instanceof Uint16Array?n:Uint16Array.from(n);case"uint32":return n instanceof Uint32Array?n:Uint32Array.from(n);case"uint8":case"bool":return n instanceof Uint8Array?n:Uint8Array.from(n);case"float32":return n instanceof Float32Array?n:Float32Array.from(n);case"float64":return n instanceof Float64Array?n:Float64Array.from(n);default:throw new Error(`TensorData type ${e} is not supported`)}}toTextureData(e,n){if(n)return n instanceof Float32Array?n:new Float32Array(n)}toEncoderType(e){return"float"}clearActiveTextures(){this.glContext.clearActiveTextures()}}});var Ci,rh=B(()=>{"use strict";Ft();gl();jd();Gp();eh();ys();th();Ci=class{constructor(e,n){this.backend=e;this.context=n;this.layoutStrategy=new xi(e.glContext.maxTextureSize),this.programManager=new Oi(this.context.profiler,e.glContext,this.layoutStrategy),this.textureManager=new Ei(e.glContext,this.layoutStrategy,this.context.profiler,{reuseTextures:e.textureCacheMode==="full"}),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache=new Map,this.pack=e.pack,this.pack2unpackMap=new Map,this.unpack2packMap=new Map}createInferenceHandler(){return new di(this)}onGraphInitialized(e){let n=e.getValues().filter(t=>t.from===-1&&t.tensor).map(t=>t.tensor.dataId);this.initializers=new Set(n)}isInitializer(e){return this.initializers?this.initializers.has(e):!1}addInitializer(e){this.initializers.add(e)}getTextureData(e,n){return n?this.packedTextureDataCache.get(e):this.unpackedTextureDataCache.get(e)}setTextureData(e,n,t=!1){He.verbose("WebGLSessionHandler","Storing Texture data in cache"),t?this.packedTextureDataCache.set(e,n):this.unpackedTextureDataCache.set(e,n)}dispose(){this.programManager.dispose(),this.textureManager.clearActiveTextures(),this.packedTextureDataCache.forEach(e=>this.textureManager.releaseTexture(e,!0)),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache.forEach(e=>this.textureManager.releaseTexture(e,!0)),this.unpackedTextureDataCache=new Map}resolve(e,n,t){let o=ml(e,n,Vp);return{impl:o.opImpl,context:o.opInit?o.opInit(e,t):e}}}});function px(r){let e=0;for(;e<r.length&&r[e]();++e);return e-1}var fo,nh=B(()=>{"use strict";kt();ao();ao();dr();fo=class{constructor(e,n){this.frameBufferBound=!1;this.itemsToPoll=[];this.gl=e,this.version=n,this.getExtensions(),this.vertexbuffer=this.createVertexbuffer(),this.framebuffer=this.createFramebuffer(),this.queryVitalParameters()}allocateTexture(e,n,t,o){let i=this.gl,u=i.createTexture();i.bindTexture(i.TEXTURE_2D,u),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE);let a=o?t.encode(o,e*n):null;return i.texImage2D(i.TEXTURE_2D,0,t.internalFormat,e,n,0,t.format,t.textureType,a),this.checkError(),u}updateTexture(e,n,t,o,i){let u=this.gl;u.bindTexture(u.TEXTURE_2D,e);let a=o.encode(i,n*t);u.texSubImage2D(u.TEXTURE_2D,0,0,0,n,t,o.format,o.textureType,a),this.checkError()}attachFramebuffer(e,n,t){let o=this.gl;o.bindTexture(o.TEXTURE_2D,e),o.bindFramebuffer(o.FRAMEBUFFER,this.framebuffer),o.framebufferTexture2D(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,e,0),this.checkError(),o.viewport(0,0,n,t),o.scissor(0,0,n,t)}readTexture(e,n,t,o,i,u){let a=this.gl;u||(u=1),this.frameBufferBound||this.attachFramebuffer(e,n,t);let s=this.getEncoder(i,u),l=s.allocate(n*t);return a.bindTexture(a.TEXTURE_2D,e),a.framebufferTexture2D(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,e,0),a.readPixels(0,0,n,t,a.RGBA,s.textureType,l),this.checkError(),s.decode(l,o)}isFramebufferReady(){return!0}getActiveTexture(){let e=this.gl;return`TEXTURE${e.getParameter(this.gl.ACTIVE_TEXTURE)-e.TEXTURE0}`}getTextureBinding(){return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D)}getFramebufferBinding(){return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING)}setVertexAttributes(e,n){let t=this.gl;t.vertexAttribPointer(e,3,t.FLOAT,!1,20,0),t.enableVertexAttribArray(e),n!==-1&&(t.vertexAttribPointer(n,2,t.FLOAT,!1,20,12),t.enableVertexAttribArray(n)),this.checkError()}createProgram(e,n){let t=this.gl,o=t.createProgram();return t.attachShader(o,e),t.attachShader(o,n),t.linkProgram(o),o}compileShader(e,n){let t=this.gl,o=t.createShader(n);if(!o)throw new Error(`createShader() returned null with type ${n}`);if(t.shaderSource(o,e),t.compileShader(o),t.getShaderParameter(o,t.COMPILE_STATUS)===!1)throw new Error(`Failed to compile shader: ${t.getShaderInfoLog(o)}
Shader source:
${e}`);return o}deleteShader(e){this.gl.deleteShader(e)}bindTextureToUniform(e,n,t){let o=this.gl;o.activeTexture(o.TEXTURE0+n),this.checkError(),o.bindTexture(o.TEXTURE_2D,e),this.checkError(),o.uniform1i(t,n),this.checkError()}draw(){this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4),this.checkError()}checkError(){if(Te.debug){let e=this.gl,n=e.getError(),t="";switch(n){case e.NO_ERROR:return;case e.INVALID_ENUM:t="INVALID_ENUM";break;case e.INVALID_VALUE:t="INVALID_VALUE";break;case e.INVALID_OPERATION:t="INVALID_OPERATION";break;case e.INVALID_FRAMEBUFFER_OPERATION:t="INVALID_FRAMEBUFFER_OPERATION";break;case e.OUT_OF_MEMORY:t="OUT_OF_MEMORY";break;case e.CONTEXT_LOST_WEBGL:t="CONTEXT_LOST_WEBGL";break;default:t=`Unknown WebGL Error: ${n.toString(16)}`}throw new Error(t)}}deleteTexture(e){this.gl.deleteTexture(e)}deleteProgram(e){this.gl.deleteProgram(e)}getEncoder(e,n,t=0){if(this.version===2)return new ui(this.gl,n);switch(e){case"float":return t===1||this.isRenderFloat32Supported?new io(this.gl,n):new io(this.gl,n,this.textureHalfFloatExtension.HALF_FLOAT_OES);case"int":throw new Error("not implemented");case"byte":return new li(this.gl,n);default:throw new Error(`Invalid dataType: ${e}`)}}clearActiveTextures(){let e=this.gl;for(let n=0;n<this.maxTextureImageUnits;++n)e.activeTexture(e.TEXTURE0+n),e.bindTexture(e.TEXTURE_2D,null)}dispose(){if(this.disposed)return;let e=this.gl;e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteFramebuffer(this.framebuffer),e.bindBuffer(e.ARRAY_BUFFER,null),e.deleteBuffer(this.vertexbuffer),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null),e.finish(),this.disposed=!0}createDefaultGeometry(){return new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0])}createVertexbuffer(){let e=this.gl,n=e.createBuffer();if(!n)throw new Error("createBuffer() returned null");let t=this.createDefaultGeometry();return e.bindBuffer(e.ARRAY_BUFFER,n),e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW),this.checkError(),n}createFramebuffer(){let e=this.gl.createFramebuffer();if(!e)throw new Error("createFramebuffer returned null");return e}queryVitalParameters(){let e=this.gl;if(this.isFloatTextureAttachableToFrameBuffer=this.checkFloatTextureAttachableToFrameBuffer(),this.isRenderFloat32Supported=this.checkRenderFloat32(),this.isFloat32DownloadSupported=this.checkFloat32Download(),this.version===1&&!this.textureHalfFloatExtension&&!this.isRenderFloat32Supported)throw new Error("both float32 and float16 TextureType are not supported");this.isBlendSupported=!this.isRenderFloat32Supported||this.checkFloat32Blend(),this.maxTextureSize=e.getParameter(e.MAX_TEXTURE_SIZE),this.maxTextureImageUnits=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),this.version}getExtensions(){this.version===2?(this.colorBufferFloatExtension=this.gl.getExtension("EXT_color_buffer_float"),this.disjointTimerQueryWebgl2Extension=this.gl.getExtension("EXT_disjoint_timer_query_webgl2")):(this.textureFloatExtension=this.gl.getExtension("OES_texture_float"),this.textureHalfFloatExtension=this.gl.getExtension("OES_texture_half_float"))}checkFloatTextureAttachableToFrameBuffer(){let e=this.gl,n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let t=this.version===2?e.RGBA32F:e.RGBA;e.texImage2D(e.TEXTURE_2D,0,t,1,1,0,e.RGBA,e.FLOAT,null);let o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(o),i}checkRenderFloat32(){if(this.version===2){if(!this.colorBufferFloatExtension)return!1}else if(!this.textureFloatExtension)return!1;return this.isFloatTextureAttachableToFrameBuffer}checkFloat32Download(){if(this.version===2){if(!this.colorBufferFloatExtension)return!1}else if(!this.textureFloatExtension||!this.gl.getExtension("WEBGL_color_buffer_float"))return!1;return this.isFloatTextureAttachableToFrameBuffer}checkFloat32Blend(){let e=this.gl,n,t,o,i,u;try{n=e.createTexture(),t=e.createFramebuffer(),e.bindTexture(e.TEXTURE_2D,n);let a=this.version===2?e.RGBA32F:e.RGBA;return e.texImage2D(e.TEXTURE_2D,0,a,1,1,0,e.RGBA,e.FLOAT,null),e.bindFramebuffer(e.FRAMEBUFFER,t),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0),e.enable(e.BLEND),o=e.createShader(e.VERTEX_SHADER),!o||(e.shaderSource(o,"void main(){}"),e.compileShader(o),i=e.createShader(e.FRAGMENT_SHADER),!i)||(e.shaderSource(i,"precision highp float;void main(){gl_FragColor=vec4(0.5);}"),e.compileShader(i),u=e.createProgram(),!u)?!1:(e.attachShader(u,o),e.attachShader(u,i),e.linkProgram(u),e.useProgram(u),e.drawArrays(e.POINTS,0,1),e.getError()===e.NO_ERROR)}finally{e.disable(e.BLEND),u&&e.deleteProgram(u),o&&e.deleteShader(o),i&&e.deleteShader(i),t&&(e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteFramebuffer(t)),n&&(e.bindTexture(e.TEXTURE_2D,null),e.deleteTexture(n))}}beginTimer(){if(this.version===2&&this.disjointTimerQueryWebgl2Extension){let e=this.gl,n=this.disjointTimerQueryWebgl2Extension,t=e.createQuery();return e.beginQuery(n.TIME_ELAPSED_EXT,t),t}else throw new Error("WebGL1 profiling currently not supported.")}endTimer(){if(this.version===2&&this.disjointTimerQueryWebgl2Extension){let e=this.gl,n=this.disjointTimerQueryWebgl2Extension;e.endQuery(n.TIME_ELAPSED_EXT);return}else throw new Error("WebGL1 profiling currently not supported")}isTimerResultAvailable(e){let n=!1,t=!1;if(this.version===2&&this.disjointTimerQueryWebgl2Extension){let o=this.gl,i=this.disjointTimerQueryWebgl2Extension;n=o.getQueryParameter(e,o.QUERY_RESULT_AVAILABLE),t=o.getParameter(i.GPU_DISJOINT_EXT)}else throw new Error("WebGL1 profiling currently not supported");return n&&!t}getTimerResult(e){let n=0;if(this.version===2){let t=this.gl;n=t.getQueryParameter(e,t.QUERY_RESULT),t.deleteQuery(e)}else throw new Error("WebGL1 profiling currently not supported");return n/1e6}async waitForQueryAndGetTime(e){return await Ua(()=>this.isTimerResultAvailable(e)),this.getTimerResult(e)}async createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let n,t=e,o=t.fenceSync(t.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),o===null?n=()=>!0:n=()=>{let i=t.clientWaitSync(o,0,0);return i===t.ALREADY_SIGNALED||i===t.CONDITION_SATISFIED},{query:o,isFencePassed:n}}async pollFence(e){return new Promise(n=>{this.addItemToPoll(()=>e.isFencePassed(),()=>n())})}pollItems(){let e=px(this.itemsToPoll.map(n=>n.isDoneFn));for(let n=0;n<=e;++n){let{resolveFn:t}=this.itemsToPoll[n];t()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}async addItemToPoll(e,n){this.itemsToPoll.push({isDoneFn:e,resolveFn:n}),!(this.itemsToPoll.length>1)&&await Ua(()=>(this.pollItems(),this.itemsToPoll.length===0))}}});function ws(r){let e;if((!r||r==="webgl2")&&"webgl2"in Pn?e=Pn.webgl2:(!r||r==="webgl")&&"webgl"in Pn&&(e=Pn.webgl),!e)try{let t=mx();e=oh(t,r)}catch{let o=hx();e=oh(o,r)}r=r||e.version===1?"webgl":"webgl2";let n=e.gl;return Pn[r]=e,n.isContextLost()?(delete Pn[r],ws(r)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),e)}function oh(r,e){let n={alpha:!1,depth:!1,antialias:!1,stencil:!1,preserveDrawingBuffer:!1,premultipliedAlpha:!1,failIfMajorPerformanceCaveat:!1},t,o=n;if((!e||e==="webgl2")&&(t=r.getContext("webgl2",o),t))try{return new fo(t,2)}catch(i){He.warning("GlContextFactory",`failed to create WebGLContext using contextId 'webgl2'. Error: ${i}`)}if((!e||e==="webgl")&&(t=r.getContext("webgl",o)||r.getContext("experimental-webgl",o),t))try{return new fo(t,1)}catch(i){He.warning("GlContextFactory",`failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${i}`)}throw new Error("WebGL is not supported")}function hx(){if(typeof document>"u")throw new TypeError("failed to create canvas: document is not supported");let r=document.createElement("canvas");return r.width=1,r.height=1,r}function mx(){if(typeof OffscreenCanvas>"u")throw new TypeError("failed to create offscreen canvas: OffscreenCanvas is not supported");return new OffscreenCanvas(1,1)}var Pn,ih=B(()=>{"use strict";Ft();nh();Pn={}});var Pi,ah=B(()=>{"use strict";kt();Ft();rh();ih();Pi=class{get contextId(){return Te.webgl.contextId}set contextId(e){Te.webgl.contextId=e}get matmulMaxBatchSize(){return Te.webgl.matmulMaxBatchSize}set matmulMaxBatchSize(e){Te.webgl.matmulMaxBatchSize=e}get textureCacheMode(){return Te.webgl.textureCacheMode}set textureCacheMode(e){Te.webgl.textureCacheMode=e}get pack(){return Te.webgl.pack}set pack(e){Te.webgl.pack=e}get async(){return Te.webgl.async}set async(e){Te.webgl.async=e}initialize(){try{return this.glContext=ws(this.contextId),typeof this.matmulMaxBatchSize!="number"&&(this.matmulMaxBatchSize=16),typeof this.textureCacheMode!="string"&&(this.textureCacheMode="full"),typeof this.pack!="boolean"&&(this.pack=!1),typeof this.async!="boolean"&&(this.async=!1),He.setWithEnv(Te),Te.webgl.context||Object.defineProperty(Te.webgl,"context",{value:this.glContext.gl}),He.verbose("WebGLBackend",`Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${this.async}.`),!0}catch(e){return He.warning("WebGLBackend",`Unable to initialize WebGLBackend. ${e}`),!1}}createSessionHandler(e){return new Ci(this,e)}dispose(){this.glContext.dispose()}}});async function xs(r){if(r){let e=typeof r=="string"?[r]:r;for(let n of e){let t=sh.get(n);if(t)return t;let o=await bx(n);if(o)return o}}else return xs(["webgl"]);throw new Error("no available backend to use")}async function bx(r){let e=gx;if(typeof e[r]<"u"&&yx(e[r])){let n=e[r],t=n.initialize();if(typeof t=="object"&&"then"in t&&(t=await t),t)return sh.set(r,n),n}}function yx(r){let e=r;return"initialize"in e&&typeof e.initialize=="function"&&"createSessionHandler"in e&&typeof e.createSessionHandler=="function"&&"dispose"in e&&typeof e.dispose=="function"}var sh,gx,uh=B(()=>{"use strict";ah();sh=new Map,gx={webgl:new Pi}});var Ts,ki,lh=B(()=>{"use strict";Ft();Ts=class{constructor(e,n){this.op=e;this.node=n}},ki=class{constructor(e,n,t){this.graph=e;this.profiler=t;this.initialize(n)}initialize(e){this.profiler.event("session","ExecutionPlan.initialize",()=>{let n=this.graph.getNodes();if(n.length!==e.length)throw new Error("The size of nodes and OPs do not match.");this._ops=e.map((t,o)=>new Ts(t,n[o])),this.reset(),this._starter=[],this._ops.forEach((t,o)=>{let i=!0;for(let u of t.node.inputs)if(!this._values[u]&&this.graph.getInputIndices().indexOf(u)===-1){i=!1;break}i&&this._starter.push(o)})})}reset(){this._values=this.graph.getValues().map(e=>e.tensor)}async execute(e,n){return this.profiler.event("session","ExecutionPlan.execute",async()=>{this.reset();let t=e.createInferenceHandler(),o=this.graph.getInputIndices();if(n.length!==o.length)throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${n.length} expected: ${o.length}`);n.forEach((d,p)=>{let f=o[p];this._values[f]=d});let i=this._starter.slice(0),u=this.graph.getValues(),a=this.graph.getNodes(),s=0;for(;s<i.length;){let d=i[s++],p=this._ops[d],f=p.node.inputs.map($=>this._values[$]);if(f.indexOf(void 0)!==-1)throw new Error(`unresolved input detected: op: ${p.node}`);let g=f;He.verbose("ExecPlan",`Runing op:${p.node.name} (${g.map(($,x)=>`'${p.node.inputs[x]}': ${$.type}[${$.dims.join(",")}]`).join(", ")})`);let b=await this.profiler.event("node",p.node.name,async()=>p.op.impl(t,g,p.op.context));if(b.length!==p.node.outputs.length)throw new Error("the size of output does not match model definition.");b.forEach(($,x)=>{let I=p.node.outputs[x];if(this._values[I])throw new Error(`output [${I}] already has value: op:${p.node.name}`);this._values[I]=$});let y=new Set;b.forEach(($,x)=>{let I=p.node.outputs[x];for(let O of u[I].to){let C=a[O],N=!0;for(let R of C.inputs)if(!this._values[R]){N=!1;break}N&&y.add(O)}}),i.push(...y)}let l=[];for(let d=0;d<this.graph.getOutputIndices().length;d++){let p=this.graph.getOutputIndices()[d],f=this._values[p];if(f===void 0)throw new Error(`required output [${p}] does not have value`);p===0?await f.getData():f.data,l.push(f)}return He.verbose("ExecPlan","disposing of inferenceHandler"),t.dispose(),l})}}});var Oe,jt,po,dh=B(()=>{"use strict";Qn();Oe=vn($n());on();We();jt=oe.experimental.fbs,po=class r{constructor(e){if(this._attributes=new Map,e!=null){for(let n of e)n instanceof Oe.onnx.AttributeProto?this._attributes.set(n.name,[r.getValue(n),r.getType(n)]):n instanceof jt.Attribute&&this._attributes.set(n.name(),[r.getValue(n),r.getType(n)]);if(this._attributes.size<e.length)throw new Error("duplicated attribute names")}}set(e,n,t){this._attributes.set(e,[t,n])}delete(e){this._attributes.delete(e)}getFloat(e,n){return this.get(e,"float",n)}getInt(e,n){return this.get(e,"int",n)}getString(e,n){return this.get(e,"string",n)}getTensor(e,n){return this.get(e,"tensor",n)}getFloats(e,n){return this.get(e,"floats",n)}getInts(e,n){return this.get(e,"ints",n)}getStrings(e,n){return this.get(e,"strings",n)}getTensors(e,n){return this.get(e,"tensors",n)}get(e,n,t){let o=this._attributes.get(e);if(o===void 0){if(t!==void 0)return t;throw new Error(`required attribute not found: ${e}`)}if(o[1]!==n)throw new Error(`type mismatch: expected ${n} but got ${o[1]}`);return o[0]}static getType(e){let n=e instanceof Oe.onnx.AttributeProto?e.type:e.type();switch(n){case Oe.onnx.AttributeProto.AttributeType.FLOAT:return"float";case Oe.onnx.AttributeProto.AttributeType.INT:return"int";case Oe.onnx.AttributeProto.AttributeType.STRING:return"string";case Oe.onnx.AttributeProto.AttributeType.TENSOR:return"tensor";case Oe.onnx.AttributeProto.AttributeType.FLOATS:return"floats";case Oe.onnx.AttributeProto.AttributeType.INTS:return"ints";case Oe.onnx.AttributeProto.AttributeType.STRINGS:return"strings";case Oe.onnx.AttributeProto.AttributeType.TENSORS:return"tensors";default:throw new Error(`attribute type is not supported yet: ${Oe.onnx.AttributeProto.AttributeType[n]}`)}}static getValue(e){let n=e instanceof Oe.onnx.AttributeProto?e.type:e.type();if(n===Oe.onnx.AttributeProto.AttributeType.GRAPH||n===Oe.onnx.AttributeProto.AttributeType.GRAPHS)throw new Error("graph attribute is not supported yet");let t=this.getValueNoCheck(e);if(n===Oe.onnx.AttributeProto.AttributeType.INT&&Rt.isLong(t))return Rt.longToNumber(t);if(n===Oe.onnx.AttributeProto.AttributeType.INTS){let o=t,i=new Array(o.length);for(let u=0;u<o.length;u++){let a=o[u];i[u]=Rt.longToNumber(a)}return i}if(n===Oe.onnx.AttributeProto.AttributeType.TENSOR)return e instanceof Oe.onnx.AttributeProto?ft.fromProto(t):ft.fromOrtTensor(t);if(n===Oe.onnx.AttributeProto.AttributeType.TENSORS){if(e instanceof Oe.onnx.AttributeProto)return t.map(i=>ft.fromProto(i));if(e instanceof jt.Attribute)return t.map(i=>ft.fromOrtTensor(i))}return n===Oe.onnx.AttributeProto.AttributeType.STRING&&e instanceof Oe.onnx.AttributeProto?oo(t):n===Oe.onnx.AttributeProto.AttributeType.STRINGS&&e instanceof Oe.onnx.AttributeProto?t.map(oo):t}static getValueNoCheck(e){return e instanceof Oe.onnx.AttributeProto?this.getValueNoCheckFromOnnxFormat(e):this.getValueNoCheckFromOrtFormat(e)}static getValueNoCheckFromOnnxFormat(e){switch(e.type){case Oe.onnx.AttributeProto.AttributeType.FLOAT:return e.f;case Oe.onnx.AttributeProto.AttributeType.INT:return e.i;case Oe.onnx.AttributeProto.AttributeType.STRING:return e.s;case Oe.onnx.AttributeProto.AttributeType.TENSOR:return e.t;case Oe.onnx.AttributeProto.AttributeType.GRAPH:return e.g;case Oe.onnx.AttributeProto.AttributeType.FLOATS:return e.floats;case Oe.onnx.AttributeProto.AttributeType.INTS:return e.ints;case Oe.onnx.AttributeProto.AttributeType.STRINGS:return e.strings;case Oe.onnx.AttributeProto.AttributeType.TENSORS:return e.tensors;case Oe.onnx.AttributeProto.AttributeType.GRAPHS:return e.graphs;default:throw new Error(`unsupported attribute type: ${Oe.onnx.AttributeProto.AttributeType[e.type]}`)}}static getValueNoCheckFromOrtFormat(e){switch(e.type()){case jt.AttributeType.FLOAT:return e.f();case jt.AttributeType.INT:return e.i();case jt.AttributeType.STRING:return e.s();case jt.AttributeType.TENSOR:return e.t();case jt.AttributeType.GRAPH:return e.g();case jt.AttributeType.FLOATS:return e.floatsArray();case jt.AttributeType.INTS:{let n=[];for(let t=0;t<e.intsLength();t++)n.push(e.ints(t));return n}case jt.AttributeType.STRINGS:{let n=[];for(let t=0;t<e.stringsLength();t++)n.push(e.strings(t));return n}case jt.AttributeType.TENSORS:{let n=[];for(let t=0;t<e.tensorsLength();t++)n.push(e.tensors(t));return n}default:throw new Error(`unsupported attribute type: ${jt.AttributeType[e.type()]}`)}}}});var Ss,Di,Is,pr,Bi,$s,ch=B(()=>{"use strict";dh();Qn();Ss=vn($n());on();We();Di=oe.experimental.fbs,Is={from:(r,e)=>new $s(r,e)},pr=class{constructor(e){this._from=void 0,this._to=[],this.tensor=void 0,this.type=void 0,e&&(this.type=wt.tensorValueTypeFromProto(e.type.tensorType))}get from(){return this._from}get to(){return this._to}},Bi=class{constructor(e,n){e instanceof Ss.onnx.NodeProto?(this.name=e.name,this.opType=e.opType,this.attributes=new po(e.attribute)):e instanceof Di.Node&&(this.name=n??e.name(),this.opType=e.opType(),this.attributes=new po(wt.tensorAttributesFromORTFormat(e))),this.inputs=[],this.outputs=[],this.executeNode=!0}},$s=class{constructor(e,n){if(!e)throw new TypeError("graph is empty");this.buildGraph(e),this.transformGraph(n),this.checkIsAcyclic()}getInputIndices(){return this._allInputIndices}getInputNames(){return this._allInputNames}getOutputIndices(){return this._allOutputIndices}getOutputNames(){return this._allOutputNames}getValues(){return this._allData}getNodes(){return this._nodes}buildGraph(e){if(e instanceof Ss.onnx.GraphProto)this.buildGraphFromOnnxFormat(e);else if(e instanceof Di.Graph)this.buildGraphFromOrtFormat(e);else throw new TypeError("Graph type is not supported.")}buildGraphFromOnnxFormat(e){let n=new Map;this._allData=[],this._allInputIndices=[],this._allInputNames=[],this._allOutputIndices=[],this._allOutputNames=[],this._nodes=[];let t=new Map;if(!e.input)throw new Error("missing information in graph: input");let o=[];for(let i of e.input){if(n.has(i.name))throw new Error(`duplicated input name: ${i.name}`);let u=this._allData.push(new pr(i))-1;n.set(i.name,u),o.push(i.name)}if(!e.initializer)throw new Error("missing information in graph: initializer");for(let i of e.initializer){let u=n.get(i.name);if(u===void 0){let a=new pr;a.type={shape:{dims:wt.tensorDimsFromProto(i.dims)},tensorType:wt.tensorDataTypeFromProto(i.dataType)},u=this._allData.push(a)-1,n.set(i.name,u)}this._allData[u]._from=-1,this._allData[u].tensor=ft.fromProto(i)}for(let i=0;i<this._allData.length;i++)this._allData[i].tensor||(this._allInputIndices.push(i),this._allInputNames.push(o[i]));if(!e.output)throw new Error("missing information in graph: output");for(let i of e.output){if(n.has(i.name))throw new Error(`duplicated output name: ${i.name}`);let u=this._allData.push(new pr(i))-1;n.set(i.name,u),this._allOutputIndices.push(u),this._allOutputNames.push(i.name)}if(!e.node)throw new Error("missing information in graph: node");for(let i of e.node){if(!i.name)for(let a=0;;a++){let s=`unnamed_${i.opType}_${a}`;if(!t.has(s)){i.name=s;break}}if(t.has(i.name))throw new Error(`duplicated node name: ${i.name}`);let u=this._nodes.push(new Bi(i))-1;t.set(i.name,u)}for(let i=0;i<this._nodes.length;i++){let u=this._nodes[i],a=e.node[i];if(!a.output)throw new Error(`missing output for node: ${a.name}`);for(let s of a.output){let l=n.get(s);if(typeof l>"u"&&(l=this._allData.push(new pr)-1,n.set(s,l)),u.outputs.push(l),this._allData[l]._from!==void 0)throw new Error(`multiple nodes output to one data value: ${l}`);if(this._allData[l]._from=i,a.opType==="Constant"){if(!a.attribute||a.attribute.length!==1||!a.attribute[0].t)throw new Error("missing attributes or missing tensor value in attributes for this Constant operator");if(!a.output||a.output.length!==1)throw new Error("missing output or incorrect number of outputs for this Constant operator");u.outputs.pop(),u.executeNode=!1,this._allData[l]._from=-1,this._allData[l].tensor=ft.fromProto(a.attribute[0].t)}}}for(let i=0;i<this._nodes.length;i++){let u=this._nodes[i],a=e.node[i];if(!a.input)throw new Error(`missing input for node: ${a.name}`);for(let s of a.input){let l=n.get(s);if(typeof l>"u"){if(s===""&&(a.input.length===3||a.input.length===4)&&a.opType==="Resize")continue;throw new Error(`unrecognized input '${s}' for node: ${a.name}`)}u.inputs.push(l),this._allData[l]._to.push(i)}}return!0}buildGraphFromOrtFormat(e){let n=new Map;this._allData=[],this._allInputIndices=[],this._allInputNames=[],this._allOutputIndices=[],this._allOutputNames=[],this._nodes=[];let t=new Map,o=[];for(let i=0;i<e.inputsLength();i++){let u=e.inputs(i);if(n.has(u))throw new Error(`duplicated input name: ${u}`);for(let a=0;a<e.nodeArgsLength();a++)if(e.nodeArgs(a)?.name()===u){let s=new pr;if(e.nodeArgs(a)?.type()?.valueType()!==Di.TypeInfoValue.tensor_type)throw new Error("Unexpected value type for the nodeArg.");let d=e.nodeArgs(a).type().value(new Di.TensorTypeAndShape),p=wt.tensorDataTypeFromProto(d.elemType()),f=d.shape(),g=[];for(let y=0;y<f.dimLength();y++)g.push(Rt.longToNumber(f.dim(y).value().dimValue()));s.type={shape:{dims:g},tensorType:p};let b=this._allData.push(s)-1;n.set(u,b),o.push(u)}}for(let i=0;i<e.initializersLength();i++){let u=e.initializers(i),a=n.get(u.name());if(a===void 0){let s=new pr,l=wt.tensorDimsFromORTFormat(u),d=wt.tensorDataTypeFromProto(u.dataType());s.type={shape:{dims:l},tensorType:d},a=this._allData.push(s)-1,n.set(u.name(),a)}this._allData[a]._from=-1,this._allData[a].tensor=ft.fromOrtTensor(u)}for(let i=0;i<this._allData.length;i++)this._allData[i].tensor||(this._allInputIndices.push(i),this._allInputNames.push(o[i]));for(let i=0;i<e.outputsLength();i++){let u=e.outputs(i);if(n.has(u))throw new Error(`duplicated output name: ${u}`);let a=this._allData.push(new pr)-1;n.set(u,a),this._allOutputIndices.push(a),this._allOutputNames.push(u)}if(!e.nodes)throw new Error("missing information in graph: node");for(let i=0;i<e.nodesLength();i++){let u=e.nodes(i),a=u.name();if(!a)for(let l=0;a=`unnamed_${u.opType()}_${l}`,!!t.has(a);l++);if(t.has(a))throw new Error(`duplicated node name: ${a}`);let s=this._nodes.push(new Bi(u,a))-1;t.set(a,s)}for(let i=0;i<this._nodes.length;i++){let u=this._nodes[i],a=e.nodes(i);if(a==null)throw new Error(`No node exists at index ${i}`);if(a?.outputsLength()===0)throw new Error(`missing output for node: ${a.name}`);for(let s=0;s<a?.outputsLength();s++){let l=a?.outputs(s),d=n.get(l);if(typeof d>"u"&&(d=this._allData.push(new pr)-1,n.set(l,d)),u.outputs.push(d),this._allData[d]._from!==void 0)throw new Error(`multiple nodes output to one data value: ${d}`);if(this._allData[d]._from=i,a.opType()==="Constant"){if(a.attributesLength()!==1||!a.attributes(0).t())throw new Error("missing attributes or missing tensor value in attributes for this Constant operator");if(a.outputsLength()!==1)throw new Error("missing output or incorrect number of outputs for this Constant operator");u.outputs.pop(),u.executeNode=!1,this._allData[d]._from=-1,this._allData[d].tensor=ft.fromOrtTensor(a.attributes(0).t())}}}for(let i=0;i<this._nodes.length;i++){let u=this._nodes[i],a=e.nodes(i);if(a.inputsLength()===0)throw new Error(`missing input for node: ${a.name}`);for(let s=0;s<a.inputsLength();s++){let l=a.inputs(s),d=n.get(l);if(typeof d>"u")throw new Error(`unrecognized input '${l}' for node: ${a.name()}`);u.inputs.push(d),this._allData[d]._to.push(i)}}}checkIsAcyclic(){let e=new Set;this._allInputIndices.forEach(o=>{this._allData[o]._to.forEach(u=>{e.add(u)})});let n=Array.from(e),t=new Array(this._nodes.length).fill("white");for(;n.length>0;){let o=n.pop();t[o]==="gray"?t[o]="black":(n.push(o),t[o]="gray",this._nodes[o].outputs.forEach(i=>{let u=this._allData[i];if(typeof u.tensor<"u")throw new Error("node outputs should not be initialized");if(u._from!==o)throw new Error("from property of the Value object doesn't match index of Node being processed");u._to.forEach(a=>{if(t[a]==="gray")throw new Error("model graph is cyclic");t[a]==="white"&&n.push(a)})}))}}transformGraph(e){this.removeAllIdentityNodes(),this.removeAllDropoutNodes(),this.fuseConvActivationNodes(),e&&e.transformGraph(this),this.finalizeGraph()}finalizeGraph(){let e=0,n=new Array(this._nodes.length,0),t=0;for(let o=0;o<this._nodes.length;o++)n[o]=t,this._nodes[o].executeNode?(t!==o&&(this._nodes[t]=this._nodes[o]),t++):this._nodes[o].outputs.forEach(i=>{this._allData[i]._from=-2});this._nodes.splice(t,this._nodes.length-t);for(let o=0;o<this._allData.length;o++){let i=this._allData[o];i._from!==void 0&&i._from!==-1&&i._from!==-2&&(i._from=n[i._from]);for(let u=0;u<i._to.length;u++)if(i._to[u]>=0)i._to[u]=n[i._to[u]];else throw new Error("Trying to update a removed node")}e=0;for(let o=0;o<this._allData.length;o++){if(this._allData[o].from===-2&&this._allOutputIndices.indexOf(o+e)===-1){e++,this._allData.splice(o,1),o--;continue}if(e>0){let i=-1;this._allData[o].from!==void 0&&this._allData[o].from!==-1?(i=this._nodes[this._allData[o].from].outputs.indexOf(o+e),i!==-1&&(this._nodes[this._allData[o].from].outputs[i]=o)):(i=this._allInputIndices.indexOf(o+e),i!==-1&&(this._allInputIndices[i]=o)),this._allData[o].to.forEach(u=>{i=this._nodes[u].inputs.indexOf(o+e),i!==-1&&(this._nodes[u].inputs[i]=o)}),this._allData[o].to.length===0&&(i=this._allOutputIndices.indexOf(o+e),i!==-1&&(this._allOutputIndices[i]=o))}}}deleteNode(e){let n=this._nodes[e];if(n.outputs.length>1){for(let a=1;a<n.outputs.length;a++)if(this._allData[n.outputs[a]].to.length>0)throw new Error("Node deletion with more than one output connected to other nodes is not supported. ")}n.executeNode=!1;let t=n.inputs[0],o=n.outputs[0],i=this._allData[o].to;for(let a=0;a<n.inputs.length;a++){let s=this._allData[n.inputs[a]].to.indexOf(e);if(s===-1)throw new Error("The Value object doesn't have the current Node in it's 'to' property ");this._allData[n.inputs[a]].to.splice(s,1)}this._allData[o]._to=[];let u=this._allOutputIndices.indexOf(o);if(u!==-1&&(this._allOutputIndices[u]=t),i&&i.length>0)for(let a of i){let s=this._nodes[a].inputs.indexOf(o);if(s===-1)throw new Error("The Node object doesn't have the output Value in it's 'inputs' property ");this._nodes[a].inputs[s]=t,this._allData[t].to.push(a)}}removeAllDropoutNodes(){let e=0;for(let n of this._nodes){if(n.opType==="Dropout"){if(n.inputs.length!==1)throw new Error("Dropout nodes should only contain one input. ");if(n.outputs.length!==1&&n.outputs.length!==2)throw new Error("Dropout nodes should contain either 1 or 2 output(s)");if(n.outputs.length===2&&this._allData[n.outputs[1]]._to.length!==0)throw new Error("Dropout nodes's second output should not be referenced by other nodes");this.deleteNode(e)}e++}}removeAllIdentityNodes(){let e=0;for(let n of this._nodes)n.opType==="Identity"&&this.deleteNode(e),e++}isActivation(e){switch(e.opType){case"Relu":case"Sigmoid":case"Clip":return!0;default:return!1}}fuseConvActivationNodes(){for(let e of this._nodes)if(e.opType==="Conv"){let n=this._allData[e.outputs[0]]._to;if(n.length===1&&this.isActivation(this._nodes[n[0]])){let t=this._nodes[n[0]];if(t.opType==="Clip")if(t.inputs.length===1)try{e.attributes.set("activation_params","floats",[t.attributes.getFloat("min"),t.attributes.getFloat("max")])}catch{e.attributes.set("activation_params","floats",[rn,nn])}else if(t.inputs.length>=3&&this._allData[t.inputs[1]].tensor!==void 0&&this._allData[t.inputs[2]].tensor!==void 0)e.attributes.set("activation_params","floats",[this._allData[t.inputs[1]].tensor.floatData[0],this._allData[t.inputs[2]].tensor.floatData[0]]);else continue;e.attributes.set("activation","string",t.opType),this.deleteNode(n[0])}}}}});var fh,vx,Ri,ph=B(()=>{"use strict";ti();ch();Qn();fh=vn($n());We();vx=oe.experimental.fbs,Ri=class{constructor(){}load(e,n,t){if(!t)try{this.loadFromOnnxFormat(e,n);return}catch(o){if(t!==void 0)throw o}this.loadFromOrtFormat(e,n)}loadFromOnnxFormat(e,n){let t=fh.onnx.ModelProto.decode(e);if(Rt.longToNumber(t.irVersion)<3)throw new Error("only support ONNX model with IR_VERSION>=3");this._opsets=t.opsetImport.map(i=>({domain:i.domain,version:Rt.longToNumber(i.version)})),this._graph=Is.from(t.graph,n)}loadFromOrtFormat(e,n){let t=new k.ByteBuffer(e),o=vx.InferenceSession.getRootAsInferenceSession(t).model();if(Rt.longToNumber(o.irVersion())<3)throw new Error("only support ONNX model with IR_VERSION>=3");this._opsets=[];for(let u=0;u<o.opsetImportLength();u++){let a=o.opsetImport(u);this._opsets.push({domain:a?.domain(),version:Rt.longToNumber(a.version())})}this._graph=Is.from(o.graph(),n)}get graph(){return this._graph}get opsets(){return this._opsets}}});var Mi,hh=B(()=>{"use strict";uh();lh();Ft();ph();Mi=class{constructor(e={}){this._initialized=!1,this.backendHint=e.backendHint,this.profiler=Qo.create(e.profiler),this.context={profiler:this.profiler,graphInputTypes:[],graphInputDims:[]}}get inputNames(){return this._model.graph.getInputNames()}get outputNames(){return this._model.graph.getOutputNames()}startProfiling(){this.profiler.start()}endProfiling(){this.profiler.stop()}async loadModel(e,n,t){await this.profiler.event("session","Session.loadModel",async()=>{let o=await xs(this.backendHint);if(this.sessionHandler=o.createSessionHandler(this.context),this._model=new Ri,typeof e=="string"){let i=e.endsWith(".ort");if(typeof process<"u"&&process.versions&&process.versions.node){let u=await(void 0)(e);this.initialize(u,i)}else{let a=await(await fetch(e)).arrayBuffer();this.initialize(new Uint8Array(a),i)}}else if(ArrayBuffer.isView(e))this.initialize(e);else{let i=new Uint8Array(e,n||0,t||e.byteLength);this.initialize(i)}})}initialize(e,n){if(this._initialized)throw new Error("already initialized");this.profiler.event("session","Session.initialize",()=>{let t=this.sessionHandler.transformGraph?this.sessionHandler:void 0;this._model.load(e,t,n),this.sessionHandler.onGraphInitialized&&this.sessionHandler.onGraphInitialized(this._model.graph),this.initializeOps(this._model.graph),this._executionPlan=new ki(this._model.graph,this._ops,this.profiler)}),this._initialized=!0}async run(e){if(!this._initialized)throw new Error("session not initialized yet");return this.profiler.event("session","Session.run",async()=>{let n=this.normalizeAndValidateInputs(e),t=await this._executionPlan.execute(this.sessionHandler,n);return this.createOutput(t)})}normalizeAndValidateInputs(e){let n=this._model.graph.getInputNames();if(Array.isArray(e)){if(e.length!==n.length)throw new Error(`incorrect input array length: expected ${n.length} but got ${e.length}`)}else{if(e.size!==n.length)throw new Error(`incorrect input map size: expected ${n.length} but got ${e.size}`);let t=new Array(e.size),o=0;for(let i=0;i<n.length;++i){let u=e.get(n[i]);if(!u)throw new Error(`missing input tensor for: '${name}'`);t[o++]=u}e=t}if(!this.context.graphInputTypes||this.context.graphInputTypes.length===0||!this.context.graphInputDims||this.context.graphInputDims.length===0){let t=this._model.graph.getInputIndices(),o=this._model.graph.getValues(),i=new Array(t.length);for(let u=0;u<t.length;++u){let a=o[t[u]];i[u]=a.type.shape.dims,this.context.graphInputTypes.push(a.type.tensorType),this.context.graphInputDims.push(e[u].dims)}this.validateInputTensorDims(i,e,!0)}else this.validateInputTensorDims(this.context.graphInputDims,e,!1);return this.validateInputTensorTypes(this.context.graphInputTypes,e),e}validateInputTensorTypes(e,n){for(let t=0;t<n.length;t++){let o=e[t],i=n[t].type;if(o!==i)throw new Error(`input tensor[${t}] check failed: expected type '${o}' but got ${i}`)}}validateInputTensorDims(e,n,t){for(let o=0;o<n.length;o++){let i=e[o],u=n[o].dims;if(!this.compareTensorDims(i,u,t))throw new Error(`input tensor[${o}] check failed: expected shape '[${i.join(",")}]' but got [${u.join(",")}]`)}}compareTensorDims(e,n,t){if(e.length!==n.length)return!1;for(let o=0;o<e.length;++o)if(e[o]!==n[o]&&(!t||e[o]!==0))return!1;return!0}createOutput(e){let n=this._model.graph.getOutputNames();if(e.length!==n.length)throw new Error("expected number of outputs do not match number of generated outputs");let t=new Map;for(let o=0;o<n.length;++o)t.set(n[o],e[o]);return t}initializeOps(e){let n=e.getNodes();this._ops=new Array(n.length);for(let t=0;t<n.length;t++)this._ops[t]=this.sessionHandler.resolve(n[t],this._model.opsets,e)}}});var Li,mh=B(()=>{"use strict";kt();on();Li=class{constructor(e){this.session=e;this.inputNames=this.session.inputNames,this.outputNames=this.session.outputNames}async dispose(){}async run(e,n,t){let o=new Map;for(let a in e)if(Object.hasOwnProperty.call(e,a)){let s=e[a];o.set(a,new ft(s.dims,s.type,void 0,void 0,s.data))}let i=await this.session.run(o),u={};return i.forEach((a,s)=>{u[s]=new ht(a.type,a.data,a.dims)}),u}startProfiling(){this.session.startProfiling()}endProfiling(){this.session.endProfiling()}}});var gh={};Yr(gh,{onnxjsBackend:()=>xx});var _s,xx,bh=B(()=>{"use strict";hh();mh();_s=class{async init(){}async createInferenceSessionHandler(e,n){let t=new Mi(n);return typeof e=="string"?await t.loadModel(e):await t.loadModel(e),new Li(t)}},xx=new _s});var As={};Yr(As,{readFile:()=>Tx});var Tx,Os=B(()=>{Tx=void 0});var Es={};Yr(Es,{join:()=>$x});var $x,Cs=B(()=>{$x=void 0});var wh=Ye((vh,Ps)=>{"use strict";var yh=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(e={}){var n=e,t,o;n.ready=new Promise((h,v)=>{t=h,o=v}),n.jsepInit=(h,v,S,E,M,Y,q,ve)=>{n.Za=h,n.Oa=v,n.Qa=S,n.Ja=E,n.Pa=M,n.ra=Y,n.Ra=q,n.Sa=ve,v=(ne,he,de)=>(..._e)=>{let De=Nt,L=he?.();_e=ne(..._e);let ge=he?.();return L!==ge&&(ne=ge,de(L),he=de=null),Nt!=De?Co():_e},S=ne=>async(...he)=>{try{if(n.Da)throw Error("Session already started");let de=n.Da={Ta:he[0],errors:[]},_e=await ne(...he);if(n.Da!==de)throw Error("Session mismatch");h.flush();let De=de.errors;if(0<De.length){let L=await Promise.all(De);if(L=L.filter(ge=>ge),0<L.length)throw Error(L.join(`
`))}return _e}finally{n.Da=null}},n._OrtRun=S(v(n._OrtRun,()=>n._OrtRun,ne=>n._OrtRun=ne)),n._OrtRunWithBinding=S(v(n._OrtRunWithBinding,()=>n._OrtRunWithBinding,ne=>n._OrtRunWithBinding=ne)),n._OrtBindInput=v(n._OrtBindInput,()=>n._OrtBindInput,ne=>n._OrtBindInput=ne),n.jsepRegisterBuffer=(ne,he,de,_e)=>h.registerBuffer(ne,he,de,_e),n.jsepUnregisterBuffers=ne=>{h.unregisterBuffers(ne)},n.jsepGetBuffer=ne=>h.getBuffer(ne),n.jsepCreateDownloader=(ne,he,de)=>h.createDownloader(ne,he,de)};var i=Object.assign({},n),u="./this.program",a=(h,v)=>{throw v},s=typeof window=="object",l=typeof importScripts=="function",d=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",p="",f,g,b;if(d){var y=(Os(),kr(As)),$=(Cs(),kr(Es));p=l?$.dirname(p)+"/":__dirname+"/",f=(h,v)=>(h=h.startsWith("file://")?new URL(h):$.normalize(h),y.readFileSync(h,v?void 0:"utf8")),b=h=>(h=f(h,!0),h.buffer||(h=new Uint8Array(h)),h),g=(h,v,S,E=!0)=>{h=h.startsWith("file://")?new URL(h):$.normalize(h),y.readFile(h,E?void 0:"utf8",(M,Y)=>{M?S(M):v(E?Y.buffer:Y)})},!n.thisProgram&&1<process.argv.length&&(u=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),a=(h,v)=>{throw process.exitCode=h,v},n.inspect=()=>"[Emscripten Module object]"}else(s||l)&&(l?p=self.location.href:typeof document<"u"&&document.currentScript&&(p=document.currentScript.src),r&&(p=r),p.indexOf("blob:")!==0?p=p.substr(0,p.replace(/[?#].*/,"").lastIndexOf("/")+1):p="",f=h=>{var v=new XMLHttpRequest;return v.open("GET",h,!1),v.send(null),v.responseText},l&&(b=h=>{var v=new XMLHttpRequest;return v.open("GET",h,!1),v.responseType="arraybuffer",v.send(null),new Uint8Array(v.response)}),g=(h,v,S)=>{var E=new XMLHttpRequest;E.open("GET",h,!0),E.responseType="arraybuffer",E.onload=()=>{E.status==200||E.status==0&&E.response?v(E.response):S()},E.onerror=S,E.send(null)});var x=n.print||console.log.bind(console),I=n.printErr||console.error.bind(console);Object.assign(n,i),i=null,n.thisProgram&&(u=n.thisProgram),n.quit&&(a=n.quit);var O;n.wasmBinary&&(O=n.wasmBinary);var C=n.noExitRuntime||!0;typeof WebAssembly!="object"&&St("no native wasm support detected");var N,R,V=!1,W,j,ie,P,Q,Se,le;function Me(){var h=N.buffer;n.HEAP8=j=new Int8Array(h),n.HEAP16=new Int16Array(h),n.HEAP32=P=new Int32Array(h),n.HEAPU8=ie=new Uint8Array(h),n.HEAPU16=new Uint16Array(h),n.HEAPU32=Q=new Uint32Array(h),n.HEAPF32=Se=new Float32Array(h),n.HEAPF64=le=new Float64Array(h)}var te=[],Le=[],Ue=[];function qe(){var h=n.preRun.shift();te.unshift(h)}var Ee=0,or=null,xt=null;function St(h){throw n.onAbort&&n.onAbort(h),h="Aborted("+h+")",I(h),V=!0,W=1,h=new WebAssembly.RuntimeError(h+". Build with -sASSERTIONS for more info."),o(h),h}function X(h){return h.startsWith("data:application/octet-stream;base64,")}var we;if(we="ort-wasm-simd.wasm",!X(we)){var Ae=we;we=n.locateFile?n.locateFile(Ae,p):p+Ae}function yt(h){if(h==we&&O)return new Uint8Array(O);if(b)return b(h);throw"both async and sync fetching of the wasm failed"}function Pt(h){if(!O&&(s||l)){if(typeof fetch=="function"&&!h.startsWith("file://"))return fetch(h,{credentials:"same-origin"}).then(v=>{if(!v.ok)throw"failed to load wasm binary file at '"+h+"'";return v.arrayBuffer()}).catch(()=>yt(h));if(g)return new Promise((v,S)=>{g(h,E=>v(new Uint8Array(E)),S)})}return Promise.resolve().then(()=>yt(h))}function ot(h,v,S){return Pt(h).then(E=>WebAssembly.instantiate(E,v)).then(E=>E).then(S,E=>{I("failed to asynchronously prepare wasm: "+E),St(E)})}function pt(h,v){var S=we;return O||typeof WebAssembly.instantiateStreaming!="function"||X(S)||S.startsWith("file://")||d||typeof fetch!="function"?ot(S,h,v):fetch(S,{credentials:"same-origin"}).then(E=>WebAssembly.instantiateStreaming(E,h).then(v,function(M){return I("wasm streaming compile failed: "+M),I("falling back to ArrayBuffer instantiation"),ot(S,h,v)}))}var It,ir={912368:h=>{n.ra("Abs",h,void 0)},912419:h=>{n.ra("Neg",h,void 0)},912470:h=>{n.ra("Floor",h,void 0)},912523:h=>{n.ra("Ceil",h,void 0)},912575:h=>{n.ra("Reciprocal",h,void 0)},912633:h=>{n.ra("Sqrt",h,void 0)},912685:h=>{n.ra("Exp",h,void 0)},912736:h=>{n.ra("Erf",h,void 0)},912787:h=>{n.ra("Sigmoid",h,void 0)},912842:h=>{n.ra("Log",h,void 0)},912893:h=>{n.ra("Sin",h,void 0)},912944:h=>{n.ra("Cos",h,void 0)},912995:h=>{n.ra("Tan",h,void 0)},913046:h=>{n.ra("Asin",h,void 0)},913098:h=>{n.ra("Acos",h,void 0)},913150:h=>{n.ra("Atan",h,void 0)},913202:h=>{n.ra("Sinh",h,void 0)},913254:h=>{n.ra("Cosh",h,void 0)},913306:h=>{n.ra("Asinh",h,void 0)},913359:h=>{n.ra("Acosh",h,void 0)},913412:h=>{n.ra("Atanh",h,void 0)},913465:h=>{n.ra("Tanh",h,void 0)},913517:h=>{n.ra("Not",h,void 0)},913568:(h,v,S)=>{n.ra("Clip",h,{min:v,max:S})},913637:h=>{n.ra("Clip",h,void 0)},913689:(h,v)=>{n.ra("Elu",h,{alpha:v})},913747:h=>{n.ra("Relu",h,void 0)},913799:(h,v)=>{n.ra("LeakyRelu",h,{alpha:v})},913863:(h,v)=>{n.ra("ThresholdedRelu",h,{alpha:v})},913933:(h,v)=>{n.ra("Cast",h,{to:v})},913991:h=>{n.ra("Add",h,void 0)},914042:h=>{n.ra("Sub",h,void 0)},914093:h=>{n.ra("Mul",h,void 0)},914144:h=>{n.ra("Div",h,void 0)},914195:h=>{n.ra("Pow",h,void 0)},914246:h=>{n.ra("Equal",h,void 0)},914299:h=>{n.ra("Greater",h,void 0)},914354:h=>{n.ra("GreaterOrEqual",h,void 0)},914416:h=>{n.ra("Less",h,void 0)},914468:h=>{n.ra("LessOrEqual",h,void 0)},914527:(h,v,S,E,M)=>{n.ra("ReduceMean",h,{keepDims:!!v,noopWithEmptyAxes:!!S,axes:E?Array.from(P.subarray(M>>>0,M+E>>>0)):[]})},914691:(h,v,S,E,M)=>{n.ra("ReduceMax",h,{keepDims:!!v,noopWithEmptyAxes:!!S,axes:E?Array.from(P.subarray(M>>>0,M+E>>>0)):[]})},914854:(h,v,S,E,M)=>{n.ra("ReduceMin",h,{keepDims:!!v,noopWithEmptyAxes:!!S,axes:E?Array.from(P.subarray(M>>>0,M+E>>>0)):[]})},915017:(h,v,S,E,M)=>{n.ra("ReduceProd",h,{keepDims:!!v,noopWithEmptyAxes:!!S,axes:E?Array.from(P.subarray(M>>>0,M+E>>>0)):[]})},915181:(h,v,S,E,M)=>{n.ra("ReduceSum",h,{keepDims:!!v,noopWithEmptyAxes:!!S,axes:E?Array.from(P.subarray(M>>>0,M+E>>>0)):[]})},915344:(h,v,S,E,M)=>{n.ra("ReduceL1",h,{keepDims:!!v,noopWithEmptyAxes:!!S,axes:E?Array.from(P.subarray(M>>>0,M+E>>>0)):[]})},915506:(h,v,S,E,M)=>{n.ra("ReduceL2",h,{keepDims:!!v,noopWithEmptyAxes:!!S,axes:E?Array.from(P.subarray(M>>>0,M+E>>>0)):[]})},915668:(h,v,S,E,M)=>{n.ra("ReduceLogSum",h,{keepDims:!!v,noopWithEmptyAxes:!!S,axes:E?Array.from(P.subarray(M>>>0,M+E>>>0)):[]})},915834:(h,v,S,E,M)=>{n.ra("ReduceSumSquare",h,{keepDims:!!v,noopWithEmptyAxes:!!S,axes:E?Array.from(P.subarray(M>>>0,M+E>>>0)):[]})},916003:(h,v,S,E,M)=>{n.ra("ReduceLogSumExp",h,{keepDims:!!v,noopWithEmptyAxes:!!S,axes:E?Array.from(P.subarray(M>>>0,M+E>>>0)):[]})},916172:h=>{n.ra("Where",h,void 0)},916225:(h,v,S)=>{n.ra("Transpose",h,{perm:v?Array.from(P.subarray(S>>>0,S+v>>>0)):[]})},916338:(h,v,S,E,M,Y,q,ve,ne,he,de,_e,De,L,ge)=>{n.ra("ConvTranspose",h,{format:ne?"NHWC":"NCHW",autoPad:v,dilations:[S],group:E,kernel_shape:[M],pads:[Y,q],strides:[ve],wIsConst:()=>!!j[he>>>0],outputPadding:de?Array.from(P.subarray(_e>>>0,_e+de>>>0)):[],outputShape:De?Array.from(P.subarray(L>>>0,L+De>>>0)):[],activation:st(ge)})},916752:(h,v,S,E,M,Y,q,ve,ne,he,de,_e,De,L)=>{n.ra("ConvTranspose",h,{format:ve?"NHWC":"NCHW",autoPad:v,dilations:Array.from(P.subarray(S>>>0,S+2>>>0)),group:E,kernelShape:Array.from(P.subarray(M>>>0,M+2>>>0)),pads:Array.from(P.subarray(Y>>>0,Y+4>>>0)),strides:Array.from(P.subarray(q>>>0,q+2>>>0)),wIsConst:()=>!!j[ne>>>0],outputPadding:0<he?Array.from(P.subarray(de>>>0,de+he>>>0)):[],outputShape:0<_e?Array.from(P.subarray(De>>>0,De+_e>>>0)):[],activation:st(L)})},917309:(h,v,S,E,M,Y,q,ve,ne,he,de,_e,De,L,ge)=>{n.ra("ConvTranspose",h,{format:ne?"NHWC":"NCHW",autoPad:v,dilations:[S],group:E,kernel_shape:[M],pads:[Y,q],strides:[ve],wIsConst:()=>!!j[he>>>0],outputPadding:de?Array.from(P.subarray(_e>>>0,_e+de>>>0)):[],outputShape:De?Array.from(P.subarray(L>>>0,L+De>>>0)):[],activation:st(ge)})},917723:(h,v,S,E,M,Y,q,ve,ne,he,de,_e,De,L)=>{n.ra("ConvTranspose",h,{format:ve?"NHWC":"NCHW",autoPad:v,dilations:Array.from(P.subarray(S>>>0,S+2>>>0)),group:E,kernelShape:Array.from(P.subarray(M>>>0,M+2>>>0)),pads:Array.from(P.subarray(Y>>>0,Y+4>>>0)),strides:Array.from(P.subarray(q>>>0,q+2>>>0)),wIsConst:()=>!!j[ne>>>0],outputPadding:0<he?Array.from(P.subarray(de>>>0,de+he>>>0)):[],outputShape:0<_e?Array.from(P.subarray(De>>>0,De+_e>>>0)):[],activation:st(L)})},918280:(h,v)=>{n.ra("GlobalAveragePool",h,{format:v?"NHWC":"NCHW"})},918371:(h,v,S,E,M,Y,q,ve,ne,he,de,_e,De,L,ge,Ce)=>{n.ra("AveragePool",h,{format:Ce?"NHWC":"NCHW",auto_pad:v,ceil_mode:S,count_include_pad:E,storage_order:M,dilations:[Y,q],kernel_shape:[ve,ne],pads:[he,de,_e,De],strides:[L,ge]})},918655:(h,v)=>{n.ra("GlobalAveragePool",h,{format:v?"NHWC":"NCHW"})},918746:(h,v,S,E,M,Y,q,ve,ne,he,de,_e,De,L,ge,Ce)=>{n.ra("AveragePool",h,{format:Ce?"NHWC":"NCHW",auto_pad:v,ceil_mode:S,count_include_pad:E,storage_order:M,dilations:[Y,q],kernel_shape:[ve,ne],pads:[he,de,_e,De],strides:[L,ge]})},919030:(h,v)=>{n.ra("GlobalMaxPool",h,{format:v?"NHWC":"NCHW"})},919117:(h,v,S,E,M,Y,q,ve,ne,he,de,_e,De,L,ge,Ce)=>{n.ra("MaxPool",h,{format:Ce?"NHWC":"NCHW",auto_pad:v,ceil_mode:S,count_include_pad:E,storage_order:M,dilations:[Y,q],kernel_shape:[ve,ne],pads:[he,de,_e,De],strides:[L,ge]})},919397:(h,v)=>{n.ra("GlobalMaxPool",h,{format:v?"NHWC":"NCHW"})},919484:(h,v,S,E,M,Y,q,ve,ne,he,de,_e,De,L,ge,Ce)=>{n.ra("MaxPool",h,{format:Ce?"NHWC":"NCHW",auto_pad:v,ceil_mode:S,count_include_pad:E,storage_order:M,dilations:[Y,q],kernel_shape:[ve,ne],pads:[he,de,_e,De],strides:[L,ge]})},919764:(h,v,S,E,M)=>{n.ra("Gemm",h,{alpha:v,beta:S,transA:E,transB:M})},919868:h=>{n.ra("MatMul",h,void 0)},919922:(h,v,S,E)=>{n.ra("ArgMax",h,{keepDims:!!v,selectLastIndex:!!S,axis:E})},920030:(h,v,S,E)=>{n.ra("ArgMin",h,{keepDims:!!v,selectLastIndex:!!S,axis:E})},920138:(h,v)=>{n.ra("Softmax",h,{axis:v})},920201:(h,v)=>{n.ra("Concat",h,{axis:v})},920261:(h,v,S,E,M)=>{n.ra("Split",h,{axis:v,numOutputs:S,splitSizes:E?Array.from(P.subarray(M>>>0,M+E>>>0)):[]})},920406:h=>{n.ra("Expand",h,void 0)},920460:(h,v)=>{n.ra("Gather",h,{axis:Number(v)})},920531:(h,v)=>{n.ra("GatherElements",h,{axis:Number(v)})},920610:(h,v,S,E,M,Y,q,ve,ne,he,de)=>{n.ra("Resize",h,{antialias:v,axes:S?Array.from(P.subarray(E>>>0,E+S>>>0)):[],coordinateTransformMode:st(M),cubicCoeffA:Y,excludeOutside:q,extrapolationValue:ve,keepAspectRatioPolicy:st(ne),mode:st(he),nearestMode:st(de)})},920961:(h,v,S,E,M,Y,q)=>{n.ra("Slice",h,{starts:v?Array.from(P.subarray(S>>>0,S+v>>>0)):[],ends:E?Array.from(P.subarray(M>>>0,M+E>>>0)):[],axes:Y?Array.from(P.subarray(q>>>0,q+Y>>>0)):[]})},921192:h=>{n.ra("Tile",h,void 0)},921244:(h,v,S)=>{n.ra("LayerNormalization",h,{axis:Number(v),epsilon:Number(S)})},921351:(h,v,S)=>{n.ra("InstanceNormalization",h,{epsilon:v,format:S?"NHWC":"NCHW"})},921465:(h,v,S)=>{n.ra("InstanceNormalization",h,{epsilon:v,format:S?"NHWC":"NCHW"})},921579:h=>{n.ra("Range",h,void 0)},921632:(h,v)=>{n.ra("Einsum",h,{equation:st(v)})},921713:(h,v,S,E,M)=>{n.ra("Pad",h,{mode:v,value:S,pads:E?Array.from(P.subarray(M>>>0,M+E>>>0)):[]})},921845:(h,v,S,E,M,Y)=>{n.ra("BatchNormalization",h,{epsilon:v,momentum:S,spatial:!!M,trainingMode:!!E,format:Y?"NHWC":"NCHW"})},922014:(h,v,S,E,M,Y)=>{n.ra("BatchNormalization",h,{epsilon:v,momentum:S,spatial:!!M,trainingMode:!!E,format:Y?"NHWC":"NCHW"})},922183:(h,v,S)=>{n.ra("CumSum",h,{exclusive:Number(v),reverse:Number(S)})},922280:(h,v,S,E,M,Y,q,ve,ne)=>{n.ra("Attention",h,{numHeads:v,isUnidirectional:S,maskFilterValue:E,scale:M,doRotary:Y,qkvHiddenSizes:q?Array.from(P.subarray(Number(ve)>>>0,Number(ve)+q>>>0)):[],pastPresentShareBuffer:!!ne})},922552:h=>{n.ra("Gelu",h,void 0)},922604:(h,v,S,E,M,Y)=>{n.ra("MultiHeadAttention",h,{numHeads:v,isUnidirectional:S,maskFilterValue:E,scale:M,doRotary:Y})},922763:h=>{n.ra("BiasAdd",h,void 0)},922818:h=>{n.ra("BiasSplitGelu",h,void 0)},922879:(h,v)=>{n.ra("SkipLayerNormalization",h,{epsilon:v})},922960:(h,v,S,E,M,Y,q,ve,ne,he,de,_e,De)=>{n.ra("Conv",h,{format:ne?"NHWC":"NCHW",auto_pad:v,dilations:[S],group:E,kernel_shape:[M],pads:Y?Array.from(P.subarray(q>>>0,q+Y>>>0)):[],strides:[ve],w_is_const:()=>!!j[he>>>0],activation:st(de),activation_params:_e?Array.from(Se.subarray(De>>>0,De+_e>>>0)):[]})},923341:(h,v,S,E,M,Y,q,ve,ne,he,de,_e,De,L,ge,Ce)=>{n.ra("Conv",h,{format:_e?"NHWC":"NCHW",auto_pad:v,dilations:[S,E],group:M,kernel_shape:[Y,q],pads:ve?Array.from(P.subarray(ne>>>0,ne+ve>>>0)):[],strides:[he,de],w_is_const:()=>!!j[De>>>0],activation:st(L),activation_params:ge?Array.from(Se.subarray(Ce>>>0,Ce+ge>>>0)):[]})},923743:h=>{n.Ra(h)},923777:(h,v)=>n.Sa(h,v,n.Da.Ta,n.Da.errors),923889:h=>n.Oa(h),923922:h=>n.Qa(h),923954:(h,v,S)=>{n.Ja(h,v,S,!0)},923993:(h,v,S)=>{n.Ja(h,v,S)}};function zt(h){this.name="ExitStatus",this.message=`Program terminated with exit(${h})`,this.status=h}var Gr=h=>{for(;0<h.length;)h.shift()(n)};function Wr(h){this.Ha=h-24,this.Ma=function(v){Q[this.Ha+4>>2>>>0]=v},this.La=function(v){Q[this.Ha+8>>2>>>0]=v},this.Ya=function(v,S){this.Ka(),this.Ma(v),this.La(S)},this.Ka=function(){Q[this.Ha+16>>2>>>0]=0}}var Bn=0,$o=0,Kt=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Rn=(h,v,S)=>{v>>>=0;var E=v+S;for(S=v;h[S]&&!(S>=E);)++S;if(16<S-v&&h.buffer&&Kt)return Kt.decode(h.subarray(v,S));for(E="";v<S;){var M=h[v++];if(M&128){var Y=h[v++]&63;if((M&224)==192)E+=String.fromCharCode((M&31)<<6|Y);else{var q=h[v++]&63;M=(M&240)==224?(M&15)<<12|Y<<6|q:(M&7)<<18|Y<<12|q<<6|h[v++]&63,65536>M?E+=String.fromCharCode(M):(M-=65536,E+=String.fromCharCode(55296|M>>10,56320|M&1023))}}else E+=String.fromCharCode(M)}return E},st=(h,v)=>(h>>>=0)?Rn(ie,h,v):"",fn=h=>{for(var v=0,S=0;S<h.length;++S){var E=h.charCodeAt(S);127>=E?v++:2047>=E?v+=2:55296<=E&&57343>=E?(v+=4,++S):v+=3}return v},Mn=(h,v,S,E)=>{if(S>>>=0,!(0<E))return 0;var M=S;E=S+E-1;for(var Y=0;Y<h.length;++Y){var q=h.charCodeAt(Y);if(55296<=q&&57343>=q){var ve=h.charCodeAt(++Y);q=65536+((q&1023)<<10)|ve&1023}if(127>=q){if(S>=E)break;v[S++>>>0]=q}else{if(2047>=q){if(S+1>=E)break;v[S++>>>0]=192|q>>6}else{if(65535>=q){if(S+2>=E)break;v[S++>>>0]=224|q>>12}else{if(S+3>=E)break;v[S++>>>0]=240|q>>18,v[S++>>>0]=128|q>>12&63}v[S++>>>0]=128|q>>6&63}v[S++>>>0]=128|q&63}}return v[S>>>0]=0,S-M},wr=h=>h%4===0&&(h%100!==0||h%400===0),So=[0,31,60,91,121,152,182,213,244,274,305,335],xr=[0,31,59,90,120,151,181,212,243,273,304,334],pn=h=>{var v=fn(h)+1,S=bn(v);return S&&Mn(h,ie,S,v),S},Er=[],hn=(h,v)=>{Er.length=0;var S;for(v>>=2;S=ie[h++>>>0];)v+=S!=105&v,Er.push(S==105?P[v>>>0]:le[v++>>>1]),++v;return Er},mn={},Ln=()=>{if(!gn){var h={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:u||"./this.program"},v;for(v in mn)mn[v]===void 0?delete h[v]:h[v]=mn[v];var S=[];for(v in h)S.push(`${v}=${h[v]}`);gn=S}return gn},gn,Io=[null,[],[]],vt=[31,29,31,30,31,30,31,31,30,31,30,31],zn=[31,28,31,30,31,30,31,31,30,31,30,31];function Nn(h){var v=Array(fn(h)+1);return Mn(h,v,0,v.length),v}function ye(h,v,S,E){function M(L,ge,Ce){for(L=typeof L=="number"?L.toString():L||"";L.length<ge;)L=Ce[0]+L;return L}function Y(L,ge){return M(L,ge,"0")}function q(L,ge){function Ce(Xn){return 0>Xn?-1:0<Xn?1:0}var $r;return($r=Ce(L.getFullYear()-ge.getFullYear()))===0&&($r=Ce(L.getMonth()-ge.getMonth()))===0&&($r=Ce(L.getDate()-ge.getDate())),$r}function ve(L){switch(L.getDay()){case 0:return new Date(L.getFullYear()-1,11,29);case 1:return L;case 2:return new Date(L.getFullYear(),0,3);case 3:return new Date(L.getFullYear(),0,2);case 4:return new Date(L.getFullYear(),0,1);case 5:return new Date(L.getFullYear()-1,11,31);case 6:return new Date(L.getFullYear()-1,11,30)}}function ne(L){var ge=L.Ba;for(L=new Date(new Date(L.Ca+1900,0,1).getTime());0<ge;){var Ce=L.getMonth(),$r=(wr(L.getFullYear())?vt:zn)[Ce];if(ge>$r-L.getDate())ge-=$r-L.getDate()+1,L.setDate(1),11>Ce?L.setMonth(Ce+1):(L.setMonth(0),L.setFullYear(L.getFullYear()+1));else{L.setDate(L.getDate()+ge);break}}return Ce=new Date(L.getFullYear()+1,0,4),ge=ve(new Date(L.getFullYear(),0,4)),Ce=ve(Ce),0>=q(ge,L)?0>=q(Ce,L)?L.getFullYear()+1:L.getFullYear():L.getFullYear()-1}h>>>=0,v>>>=0,S>>>=0,E>>>=0;var he=P[E+40>>2>>>0];E={Wa:P[E>>2>>>0],Va:P[E+4>>2>>>0],Ea:P[E+8>>2>>>0],Ia:P[E+12>>2>>>0],Fa:P[E+16>>2>>>0],Ca:P[E+20>>2>>>0],wa:P[E+24>>2>>>0],Ba:P[E+28>>2>>>0],$a:P[E+32>>2>>>0],Ua:P[E+36>>2>>>0],Xa:he?st(he):""},S=st(S),he={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var de in he)S=S.replace(new RegExp(de,"g"),he[de]);var _e="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),De="January February March April May June July August September October November December".split(" ");he={"%a":L=>_e[L.wa].substring(0,3),"%A":L=>_e[L.wa],"%b":L=>De[L.Fa].substring(0,3),"%B":L=>De[L.Fa],"%C":L=>Y((L.Ca+1900)/100|0,2),"%d":L=>Y(L.Ia,2),"%e":L=>M(L.Ia,2," "),"%g":L=>ne(L).toString().substring(2),"%G":L=>ne(L),"%H":L=>Y(L.Ea,2),"%I":L=>(L=L.Ea,L==0?L=12:12<L&&(L-=12),Y(L,2)),"%j":L=>{for(var ge=0,Ce=0;Ce<=L.Fa-1;ge+=(wr(L.Ca+1900)?vt:zn)[Ce++]);return Y(L.Ia+ge,3)},"%m":L=>Y(L.Fa+1,2),"%M":L=>Y(L.Va,2),"%n":()=>`
`,"%p":L=>0<=L.Ea&&12>L.Ea?"AM":"PM","%S":L=>Y(L.Wa,2),"%t":()=>"	","%u":L=>L.wa||7,"%U":L=>Y(Math.floor((L.Ba+7-L.wa)/7),2),"%V":L=>{var ge=Math.floor((L.Ba+7-(L.wa+6)%7)/7);if(2>=(L.wa+371-L.Ba-2)%7&&ge++,ge)ge==53&&(Ce=(L.wa+371-L.Ba)%7,Ce==4||Ce==3&&wr(L.Ca)||(ge=1));else{ge=52;var Ce=(L.wa+7-L.Ba-1)%7;(Ce==4||Ce==5&&wr(L.Ca%400-1))&&ge++}return Y(ge,2)},"%w":L=>L.wa,"%W":L=>Y(Math.floor((L.Ba+7-(L.wa+6)%7)/7),2),"%y":L=>(L.Ca+1900).toString().substring(2),"%Y":L=>L.Ca+1900,"%z":L=>{L=L.Ua;var ge=0<=L;return L=Math.abs(L)/60,(ge?"+":"-")+("0000"+(L/60*100+L%60)).slice(-4)},"%Z":L=>L.Xa,"%%":()=>"%"},S=S.replace(/%%/g,"\0\0");for(de in he)S.includes(de)&&(S=S.replace(new RegExp(de,"g"),he[de](E)));return S=S.replace(/\0\0/g,"%"),de=Nn(S),de.length>v?0:(j.set(de,h>>>0),de.length-1)}function Tr(h){try{h()}catch(v){St(v)}}function _o(h){var v={},S;for(S in h)(function(E){var M=h[E];v[E]=typeof M=="function"?function(){Ur.push(E);try{return M.apply(null,arguments)}finally{V||(Ur.pop()===E||St(),Nt&&ar===1&&Ur.length===0&&(ar=0,Tr(Kn),typeof Fibers<"u"&&Fibers.ab()))}}:M})(S);return v}var ar=0,Nt=null,Ao=0,Ur=[],Fn={},Vn={},Oo=0,Hr=null,Eo=[];function Co(){return new Promise((h,v)=>{Hr={resolve:h,reject:v}})}function Po(){var h=bn(65548),v=h+12;Q[h>>2>>>0]=v,Q[h+4>>2>>>0]=v+65536,v=Ur[0];var S=Fn[v];return S===void 0&&(S=Oo++,Fn[v]=S,Vn[S]=v),P[h+8>>2>>>0]=S,h}function ko(h){if(!V){if(ar===0){var v=!1,S=!1;h((E=0)=>{if(!V&&(Ao=E,v=!0,S)){ar=2,Tr(()=>yn(Nt)),typeof Browser<"u"&&Browser.Ga.Na&&Browser.Ga.resume(),E=!1;try{var M=(0,R[Vn[P[Nt+8>>2>>>0]]])()}catch(ve){M=ve,E=!0}var Y=!1;if(!Nt){var q=Hr;q&&(Hr=null,(E?q.reject:q.resolve)(M),Y=!0)}if(E&&!Y)throw M}}),S=!0,v||(ar=1,Nt=Po(),typeof Browser<"u"&&Browser.Ga.Na&&Browser.Ga.pause(),Tr(()=>jn(Nt)))}else ar===2?(ar=0,Tr(qr),Gn(Nt),Nt=null,Eo.forEach(E=>{if(!V)try{if(E(),!C)try{W=W=E=W,C||(n.onExit&&n.onExit(E),V=!0),a(E,new zt(E))}catch(M){M instanceof zt||M=="unwind"||a(1,M)}}catch(M){M instanceof zt||M=="unwind"||a(1,M)}})):St(`invalid state: ${ar}`);return Ao}}function Do(h){return ko(v=>{h().then(v)})}var Bo={n:function(h,v,S){return Do(async()=>{await n.Pa(h,v,S)})},a:function(h,v,S){throw h>>>=0,new Wr(h).Ya(v>>>0,S>>>0),Bn=h,$o++,Bn},g:function(){return 0},J:function(){},z:function(){},B:function(){},L:function(){return 0},H:function(){},C:function(){},G:function(){},l:function(){},A:function(){},x:function(){},I:function(){},y:function(){},m:()=>!0,q:function(h,v,S){h=v+2097152>>>0<4194305-!!h?(h>>>0)+4294967296*v:NaN,S>>>=0,h=new Date(1e3*h),P[S>>2>>>0]=h.getUTCSeconds(),P[S+4>>2>>>0]=h.getUTCMinutes(),P[S+8>>2>>>0]=h.getUTCHours(),P[S+12>>2>>>0]=h.getUTCDate(),P[S+16>>2>>>0]=h.getUTCMonth(),P[S+20>>2>>>0]=h.getUTCFullYear()-1900,P[S+24>>2>>>0]=h.getUTCDay(),P[S+28>>2>>>0]=(h.getTime()-Date.UTC(h.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},r:function(h,v,S){h=v+2097152>>>0<4194305-!!h?(h>>>0)+4294967296*v:NaN,S>>>=0,h=new Date(1e3*h),P[S>>2>>>0]=h.getSeconds(),P[S+4>>2>>>0]=h.getMinutes(),P[S+8>>2>>>0]=h.getHours(),P[S+12>>2>>>0]=h.getDate(),P[S+16>>2>>>0]=h.getMonth(),P[S+20>>2>>>0]=h.getFullYear()-1900,P[S+24>>2>>>0]=h.getDay(),P[S+28>>2>>>0]=(wr(h.getFullYear())?So:xr)[h.getMonth()]+h.getDate()-1|0,P[S+36>>2>>>0]=-(60*h.getTimezoneOffset()),v=new Date(h.getFullYear(),6,1).getTimezoneOffset();var E=new Date(h.getFullYear(),0,1).getTimezoneOffset();P[S+32>>2>>>0]=(v!=E&&h.getTimezoneOffset()==Math.min(E,v))|0},s:function(h){h>>>=0;var v=new Date(P[h+20>>2>>>0]+1900,P[h+16>>2>>>0],P[h+12>>2>>>0],P[h+8>>2>>>0],P[h+4>>2>>>0],P[h>>2>>>0],0),S=P[h+32>>2>>>0],E=v.getTimezoneOffset(),M=new Date(v.getFullYear(),6,1).getTimezoneOffset(),Y=new Date(v.getFullYear(),0,1).getTimezoneOffset(),q=Math.min(Y,M);return 0>S?P[h+32>>2>>>0]=+(M!=Y&&q==E):0<S!=(q==E)&&(M=Math.max(Y,M),v.setTime(v.getTime()+6e4*((0<S?q:M)-E))),P[h+24>>2>>>0]=v.getDay(),P[h+28>>2>>>0]=(wr(v.getFullYear())?So:xr)[v.getMonth()]+v.getDate()-1|0,P[h>>2>>>0]=v.getSeconds(),P[h+4>>2>>>0]=v.getMinutes(),P[h+8>>2>>>0]=v.getHours(),P[h+12>>2>>>0]=v.getDate(),P[h+16>>2>>>0]=v.getMonth(),P[h+20>>2>>>0]=v.getYear(),h=v.getTime()/1e3,Wn((It=h,1<=+Math.abs(It)?0<It?+Math.floor(It/4294967296)>>>0:~~+Math.ceil((It-+(~~It>>>0))/4294967296)>>>0:0)),h>>>0},o:function(){return-52},p:function(){},v:function(h,v,S){function E(ne){return(ne=ne.toTimeString().match(/\(([A-Za-z ]+)\)$/))?ne[1]:"GMT"}S>>>=0;var M=new Date().getFullYear(),Y=new Date(M,0,1),q=new Date(M,6,1);M=Y.getTimezoneOffset();var ve=q.getTimezoneOffset();Q[h>>>0>>2>>>0]=60*Math.max(M,ve),P[v>>>0>>2>>>0]=+(M!=ve),h=E(Y),v=E(q),h=pn(h),v=pn(v),ve<M?(Q[S>>2>>>0]=h,Q[S+4>>2>>>0]=v):(Q[S>>2>>>0]=v,Q[S+4>>2>>>0]=h)},e:()=>{St("")},b:function(h,v,S){return h>>>=0,v=hn(v>>>0,S>>>0),ir[h].apply(null,v)},i:function(h,v,S){return h>>>=0,v=hn(v>>>0,S>>>0),ir[h].apply(null,v)},h:function(){return Date.now()},w:function(){return 4294901760},c:()=>performance.now(),K:function(h,v,S){return v>>>=0,ie.copyWithin(h>>>0>>>0,v>>>0,v+(S>>>0)>>>0)},u:function(h){h>>>=0;var v=ie.length;if(4294901760<h)return!1;for(var S=1;4>=S;S*=2){var E=v*(1+.2/S);E=Math.min(E,h+100663296);var M=Math;E=Math.max(h,E);e:{M=M.min.call(M,4294901760,E+(65536-E%65536)%65536)-N.buffer.byteLength+65535>>>16;try{N.grow(M),Me();var Y=1;break e}catch{}Y=void 0}if(Y)return!0}return!1},D:function(h,v){h>>>=0,v>>>=0;var S=0;return Ln().forEach(function(E,M){var Y=v+S;for(M=Q[h+4*M>>2>>>0]=Y,Y=0;Y<E.length;++Y)j[M++>>0>>>0]=E.charCodeAt(Y);j[M>>0>>>0]=0,S+=E.length+1}),0},E:function(h,v){h>>>=0,v>>>=0;var S=Ln();Q[h>>2>>>0]=S.length;var E=0;return S.forEach(function(M){E+=M.length+1}),Q[v>>2>>>0]=E,0},f:()=>52,k:function(){return 52},t:function(){return 70},j:function(h,v,S,E){v>>>=0,S>>>=0,E>>>=0;for(var M=0,Y=0;Y<S;Y++){var q=Q[v>>2>>>0],ve=Q[v+4>>2>>>0];v+=8;for(var ne=0;ne<ve;ne++){var he=ie[q+ne>>>0],de=Io[h];he===0||he===10?((h===1?x:I)(Rn(de,0)),de.length=0):de.push(he)}M+=ve}return Q[E>>2>>>0]=M,0},F:ye,d:function(h,v,S,E){return ye(h>>>0,v>>>0,S>>>0,E>>>0)}};(function(){function h(S){if(S=S.exports,S=_o(S),R=S=Cr(S),N=R.M,Me(),Le.unshift(R.N),Ee--,n.monitorRunDependencies&&n.monitorRunDependencies(Ee),Ee==0&&(or!==null&&(clearInterval(or),or=null),xt)){var E=xt;xt=null,E()}return S}var v={a:Bo};if(Ee++,n.monitorRunDependencies&&n.monitorRunDependencies(Ee),n.instantiateWasm)try{return n.instantiateWasm(v,h)}catch(S){I("Module.instantiateWasm callback failed with error: "+S),o(S)}return pt(v,function(S){h(S.instance)}).catch(o),{}})(),n._OrtInit=(h,v)=>(n._OrtInit=R.O)(h,v),n._OrtGetLastError=(h,v)=>(n._OrtGetLastError=R.P)(h,v),n._OrtCreateSessionOptions=(h,v,S,E,M,Y,q,ve,ne,he)=>(n._OrtCreateSessionOptions=R.Q)(h,v,S,E,M,Y,q,ve,ne,he),n._OrtAppendExecutionProvider=(h,v)=>(n._OrtAppendExecutionProvider=R.R)(h,v),n._OrtAddFreeDimensionOverride=(h,v,S)=>(n._OrtAddFreeDimensionOverride=R.S)(h,v,S),n._OrtAddSessionConfigEntry=(h,v,S)=>(n._OrtAddSessionConfigEntry=R.T)(h,v,S),n._OrtReleaseSessionOptions=h=>(n._OrtReleaseSessionOptions=R.U)(h),n._OrtCreateSession=(h,v,S)=>(n._OrtCreateSession=R.V)(h,v,S),n._OrtReleaseSession=h=>(n._OrtReleaseSession=R.W)(h),n._OrtGetInputOutputCount=(h,v,S)=>(n._OrtGetInputOutputCount=R.X)(h,v,S),n._OrtGetInputName=(h,v)=>(n._OrtGetInputName=R.Y)(h,v),n._OrtGetOutputName=(h,v)=>(n._OrtGetOutputName=R.Z)(h,v),n._OrtFree=h=>(n._OrtFree=R._)(h),n._OrtCreateTensor=(h,v,S,E,M,Y)=>(n._OrtCreateTensor=R.$)(h,v,S,E,M,Y),n._OrtGetTensorData=(h,v,S,E,M)=>(n._OrtGetTensorData=R.aa)(h,v,S,E,M),n._OrtReleaseTensor=h=>(n._OrtReleaseTensor=R.ba)(h),n._OrtCreateRunOptions=(h,v,S,E)=>(n._OrtCreateRunOptions=R.ca)(h,v,S,E),n._OrtAddRunConfigEntry=(h,v,S)=>(n._OrtAddRunConfigEntry=R.da)(h,v,S),n._OrtReleaseRunOptions=h=>(n._OrtReleaseRunOptions=R.ea)(h),n._OrtCreateBinding=h=>(n._OrtCreateBinding=R.fa)(h),n._OrtBindInput=(h,v,S)=>(n._OrtBindInput=R.ga)(h,v,S),n._OrtBindOutput=(h,v,S,E)=>(n._OrtBindOutput=R.ha)(h,v,S,E),n._OrtClearBoundOutputs=h=>(n._OrtClearBoundOutputs=R.ia)(h),n._OrtReleaseBinding=h=>(n._OrtReleaseBinding=R.ja)(h),n._OrtRunWithBinding=(h,v,S,E,M)=>(n._OrtRunWithBinding=R.ka)(h,v,S,E,M),n._OrtRun=(h,v,S,E,M,Y,q,ve)=>(n._OrtRun=R.la)(h,v,S,E,M,Y,q,ve),n._OrtEndProfiling=h=>(n._OrtEndProfiling=R.ma)(h),n._JsepOutput=(h,v,S)=>(n._JsepOutput=R.na)(h,v,S),n._JsepGetNodeName=h=>(n._JsepGetNodeName=R.oa)(h);var bn=n._malloc=h=>(bn=n._malloc=R.pa)(h),Gn=n._free=h=>(Gn=n._free=R.qa)(h),Wn=h=>(Wn=R.sa)(h),Un=()=>(Un=R.ta)(),Hn=h=>(Hn=R.ua)(h),qn=h=>(qn=R.va)(h),jn=h=>(jn=R.xa)(h),Kn=()=>(Kn=R.ya)(),yn=h=>(yn=R.za)(h),qr=()=>(qr=R.Aa)();n.___start_em_js=924026,n.___stop_em_js=924187;function Cr(h){h=Object.assign({},h);var v=E=>()=>E()>>>0,S=E=>M=>E(M)>>>0;return h.__errno_location=v(h.__errno_location),h.malloc=S(h.malloc),h.stackSave=v(h.stackSave),h.stackAlloc=S(h.stackAlloc),h}n.stackAlloc=qn,n.stackSave=Un,n.stackRestore=Hn,n.UTF8ToString=st,n.stringToUTF8=(h,v,S)=>Mn(h,ie,v,S),n.lengthBytesUTF8=fn;var jr;xt=function h(){jr||Yn(),jr||(xt=h)};function Yn(){function h(){if(!jr&&(jr=!0,n.calledRun=!0,!V)){if(Gr(Le),t(n),n.onRuntimeInitialized&&n.onRuntimeInitialized(),n.postRun)for(typeof n.postRun=="function"&&(n.postRun=[n.postRun]);n.postRun.length;){var v=n.postRun.shift();Ue.unshift(v)}Gr(Ue)}}if(!(0<Ee)){if(n.preRun)for(typeof n.preRun=="function"&&(n.preRun=[n.preRun]);n.preRun.length;)qe();Gr(te),0<Ee||(n.setStatus?(n.setStatus("Running..."),setTimeout(function(){setTimeout(function(){n.setStatus("")},1),h()},1)):h())}}if(n.preInit)for(typeof n.preInit=="function"&&(n.preInit=[n.preInit]);0<n.preInit.length;)n.preInit.pop()();return Yn(),e.ready}})();typeof vh=="object"&&typeof Ps=="object"?Ps.exports=yh:typeof define=="function"&&define.amd&&define([],()=>yh)});var xh=Ye(()=>{});var Th=Ye(()=>{});var $h={};Yr($h,{cpus:()=>Sx});var Sx,Sh=B(()=>{Sx=void 0});var Ah=Ye((_h,ks)=>{"use strict";var Ih=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(e={}){function n(){return Me.buffer!=Ee.buffer&&Ae(),Ee}function t(){return Me.buffer!=Ee.buffer&&Ae(),or}function o(){return Me.buffer!=Ee.buffer&&Ae(),xt}function i(){return Me.buffer!=Ee.buffer&&Ae(),St}function u(){return Me.buffer!=Ee.buffer&&Ae(),X}function a(){return Me.buffer!=Ee.buffer&&Ae(),we}var s=e,l,d;s.ready=new Promise((c,m)=>{l=c,d=m}),s.jsepInit=(c,m,w,_,D,F,H,me)=>{s.Qb=c,s.wb=m,s.yb=w,s.jb=_,s.xb=D,s.Ea=F,s.zb=H,s.Ab=me,m=(ce,fe,be)=>(...Be)=>{let Ve=sr,z=fe?.();Be=ce(...Be);let xe=fe?.();return z!==xe&&(ce=xe,be(z),fe=be=null),sr!=Ve?Ry():Be},w=ce=>async(...fe)=>{try{if(s.bb)throw Error("Session already started");let be=s.bb={Fb:fe[0],errors:[]},Be=await ce(...fe);if(s.bb!==be)throw Error("Session mismatch");c.flush();let Ve=be.errors;if(0<Ve.length){let z=await Promise.all(Ve);if(z=z.filter(xe=>xe),0<z.length)throw Error(z.join(`
`))}return Be}finally{s.bb=null}},s._OrtRun=w(m(s._OrtRun,()=>s._OrtRun,ce=>s._OrtRun=ce)),s._OrtRunWithBinding=w(m(s._OrtRunWithBinding,()=>s._OrtRunWithBinding,ce=>s._OrtRunWithBinding=ce)),s._OrtBindInput=m(s._OrtBindInput,()=>s._OrtBindInput,ce=>s._OrtBindInput=ce),s.jsepRegisterBuffer=(ce,fe,be,Be)=>c.registerBuffer(ce,fe,be,Be),s.jsepUnregisterBuffers=ce=>{c.unregisterBuffers(ce)},s.jsepGetBuffer=ce=>c.getBuffer(ce),s.jsepCreateDownloader=(ce,fe,be)=>c.createDownloader(ce,fe,be)};var p=Object.assign({},s),f="./this.program",g=(c,m)=>{throw m},b=typeof window=="object",y=typeof importScripts=="function",$=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",x=s.ENVIRONMENT_IS_PTHREAD||!1,I="";function O(c){return s.locateFile?s.locateFile(c,I):I+c}var C,N,R;if($){var V=(Os(),kr(As)),W=(Cs(),kr(Es));I=y?W.dirname(I)+"/":__dirname+"/",C=(m,w)=>(m=m.startsWith("file://")?new URL(m):W.normalize(m),V.readFileSync(m,w?void 0:"utf8")),R=m=>(m=C(m,!0),m.buffer||(m=new Uint8Array(m)),m),N=(m,w,_,D=!0)=>{m=m.startsWith("file://")?new URL(m):W.normalize(m),V.readFile(m,D?void 0:"utf8",(F,H)=>{F?_(F):w(D?H.buffer:H)})},!s.thisProgram&&1<process.argv.length&&(f=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),g=(m,w)=>{throw process.exitCode=m,w},s.inspect=()=>"[Emscripten Module object]";let c;try{c=xh()}catch(m){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),m}global.Worker=c.Worker}else(b||y)&&(y?I=self.location.href:typeof document<"u"&&document.currentScript&&(I=document.currentScript.src),typeof r<"u"&&r&&(I=r),I.indexOf("blob:")!==0?I=I.substr(0,I.replace(/[?#].*/,"").lastIndexOf("/")+1):I="",$||(C=c=>{var m=new XMLHttpRequest;return m.open("GET",c,!1),m.send(null),m.responseText},y&&(R=c=>{var m=new XMLHttpRequest;return m.open("GET",c,!1),m.responseType="arraybuffer",m.send(null),new Uint8Array(m.response)}),N=(c,m,w)=>{var _=new XMLHttpRequest;_.open("GET",c,!0),_.responseType="arraybuffer",_.onload=()=>{_.status==200||_.status==0&&_.response?m(_.response):w()},_.onerror=w,_.send(null)}));$&&typeof performance>"u"&&(global.performance=Th().performance);var j=console.log.bind(console),ie=console.error.bind(console);$&&(j=(...c)=>V.writeSync(1,c.join(" ")+`
`),ie=(...c)=>V.writeSync(2,c.join(" ")+`
`));var P=s.print||j,Q=s.printErr||ie;Object.assign(s,p),p=null,s.thisProgram&&(f=s.thisProgram),s.quit&&(g=s.quit);var Se;s.wasmBinary&&(Se=s.wasmBinary);var le=s.noExitRuntime||!0;typeof WebAssembly!="object"&&Kt("no native wasm support detected");var Me,te,Le,Ue=!1,qe,Ee,or,xt,St,X,we;function Ae(){var c=Me.buffer;s.HEAP8=Ee=new Int8Array(c),s.HEAP16=new Int16Array(c),s.HEAP32=xt=new Int32Array(c),s.HEAPU8=or=new Uint8Array(c),s.HEAPU16=new Uint16Array(c),s.HEAPU32=St=new Uint32Array(c),s.HEAPF32=X=new Float32Array(c),s.HEAPF64=we=new Float64Array(c)}var yt=s.INITIAL_MEMORY||16777216;if(5242880<=yt||Kt("INITIAL_MEMORY should be larger than STACK_SIZE, was "+yt+"! (STACK_SIZE=5242880)"),x)Me=s.wasmMemory;else if(s.wasmMemory)Me=s.wasmMemory;else if(Me=new WebAssembly.Memory({initial:yt/65536,maximum:65536,shared:!0}),!(Me.buffer instanceof SharedArrayBuffer))throw Q("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),$&&Q("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");Ae(),yt=Me.buffer.byteLength;var Pt=[],ot=[],pt=[],It=0;function ir(){return le||0<It}var zt=0,Gr=null,Wr=null;function Bn(){zt++,s.monitorRunDependencies&&s.monitorRunDependencies(zt)}function $o(){if(zt--,s.monitorRunDependencies&&s.monitorRunDependencies(zt),zt==0&&(Gr!==null&&(clearInterval(Gr),Gr=null),Wr)){var c=Wr;Wr=null,c()}}function Kt(c){throw s.onAbort&&s.onAbort(c),c="Aborted("+c+")",Q(c),Ue=!0,qe=1,c=new WebAssembly.RuntimeError(c+". Build with -sASSERTIONS for more info."),d(c),c}function Rn(c){return c.startsWith("data:application/octet-stream;base64,")}var st;st="ort-wasm-simd-threaded.wasm",Rn(st)||(st=O(st));function fn(c){if(c==st&&Se)return new Uint8Array(Se);if(R)return R(c);throw"both async and sync fetching of the wasm failed"}function Mn(c){if(!Se&&(b||y)){if(typeof fetch=="function"&&!c.startsWith("file://"))return fetch(c,{credentials:"same-origin"}).then(m=>{if(!m.ok)throw"failed to load wasm binary file at '"+c+"'";return m.arrayBuffer()}).catch(()=>fn(c));if(N)return new Promise((m,w)=>{N(c,_=>m(new Uint8Array(_)),w)})}return Promise.resolve().then(()=>fn(c))}function wr(c,m,w){return Mn(c).then(_=>WebAssembly.instantiate(_,m)).then(_=>_).then(w,_=>{Q("failed to asynchronously prepare wasm: "+_),Kt(_)})}function So(c,m){var w=st;return Se||typeof WebAssembly.instantiateStreaming!="function"||Rn(w)||w.startsWith("file://")||$||typeof fetch!="function"?wr(w,c,m):fetch(w,{credentials:"same-origin"}).then(_=>WebAssembly.instantiateStreaming(_,c).then(m,function(D){return Q("wasm streaming compile failed: "+D),Q("falling back to ArrayBuffer instantiation"),wr(w,c,m)}))}var xr,pn={1428400:c=>{s.Ea("Abs",c,void 0)},1428451:c=>{s.Ea("Neg",c,void 0)},1428502:c=>{s.Ea("Floor",c,void 0)},1428555:c=>{s.Ea("Ceil",c,void 0)},1428607:c=>{s.Ea("Reciprocal",c,void 0)},1428665:c=>{s.Ea("Sqrt",c,void 0)},1428717:c=>{s.Ea("Exp",c,void 0)},1428768:c=>{s.Ea("Erf",c,void 0)},1428819:c=>{s.Ea("Sigmoid",c,void 0)},1428874:c=>{s.Ea("Log",c,void 0)},1428925:c=>{s.Ea("Sin",c,void 0)},1428976:c=>{s.Ea("Cos",c,void 0)},1429027:c=>{s.Ea("Tan",c,void 0)},1429078:c=>{s.Ea("Asin",c,void 0)},1429130:c=>{s.Ea("Acos",c,void 0)},1429182:c=>{s.Ea("Atan",c,void 0)},1429234:c=>{s.Ea("Sinh",c,void 0)},1429286:c=>{s.Ea("Cosh",c,void 0)},1429338:c=>{s.Ea("Asinh",c,void 0)},1429391:c=>{s.Ea("Acosh",c,void 0)},1429444:c=>{s.Ea("Atanh",c,void 0)},1429497:c=>{s.Ea("Tanh",c,void 0)},1429549:c=>{s.Ea("Not",c,void 0)},1429600:(c,m,w)=>{s.Ea("Clip",c,{min:m,max:w})},1429669:c=>{s.Ea("Clip",c,void 0)},1429721:(c,m)=>{s.Ea("Elu",c,{alpha:m})},1429779:c=>{s.Ea("Relu",c,void 0)},1429831:(c,m)=>{s.Ea("LeakyRelu",c,{alpha:m})},1429895:(c,m)=>{s.Ea("ThresholdedRelu",c,{alpha:m})},1429965:c=>{s.zb(c)},1429999:(c,m)=>s.Ab(c,m,s.bb.Fb,s.bb.errors),1430111:(c,m)=>{s.Ea("Cast",c,{to:m})},1430169:c=>{s.Ea("Add",c,void 0)},1430220:c=>{s.Ea("Sub",c,void 0)},1430271:c=>{s.Ea("Mul",c,void 0)},1430322:c=>{s.Ea("Div",c,void 0)},1430373:c=>{s.Ea("Pow",c,void 0)},1430424:c=>{s.Ea("Equal",c,void 0)},1430477:c=>{s.Ea("Greater",c,void 0)},1430532:c=>{s.Ea("GreaterOrEqual",c,void 0)},1430594:c=>{s.Ea("Less",c,void 0)},1430646:c=>{s.Ea("LessOrEqual",c,void 0)},1430705:(c,m,w,_,D)=>{s.Ea("ReduceMean",c,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:_?Array.from(o().subarray(D>>>0,D+_>>>0)):[]})},1430869:(c,m,w,_,D)=>{s.Ea("ReduceMax",c,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:_?Array.from(o().subarray(D>>>0,D+_>>>0)):[]})},1431032:(c,m,w,_,D)=>{s.Ea("ReduceMin",c,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:_?Array.from(o().subarray(D>>>0,D+_>>>0)):[]})},1431195:(c,m,w,_,D)=>{s.Ea("ReduceProd",c,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:_?Array.from(o().subarray(D>>>0,D+_>>>0)):[]})},1431359:(c,m,w,_,D)=>{s.Ea("ReduceSum",c,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:_?Array.from(o().subarray(D>>>0,D+_>>>0)):[]})},1431522:(c,m,w,_,D)=>{s.Ea("ReduceL1",c,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:_?Array.from(o().subarray(D>>>0,D+_>>>0)):[]})},1431684:(c,m,w,_,D)=>{s.Ea("ReduceL2",c,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:_?Array.from(o().subarray(D>>>0,D+_>>>0)):[]})},1431846:(c,m,w,_,D)=>{s.Ea("ReduceLogSum",c,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:_?Array.from(o().subarray(D>>>0,D+_>>>0)):[]})},1432012:(c,m,w,_,D)=>{s.Ea("ReduceSumSquare",c,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:_?Array.from(o().subarray(D>>>0,D+_>>>0)):[]})},1432181:(c,m,w,_,D)=>{s.Ea("ReduceLogSumExp",c,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:_?Array.from(o().subarray(D>>>0,D+_>>>0)):[]})},1432350:c=>{s.Ea("Where",c,void 0)},1432403:(c,m,w)=>{s.Ea("Transpose",c,{perm:m?Array.from(o().subarray(w>>>0,w+m>>>0)):[]})},1432516:(c,m,w,_,D,F,H,me,ce,fe,be,Be,Ve)=>{s.Ea("Conv",c,{format:ce?"NHWC":"NCHW",auto_pad:m,dilations:[w],group:_,kernel_shape:[D],pads:F?Array.from(o().subarray(H>>>0,H+F>>>0)):[],strides:[me],w_is_const:()=>!!n()[fe>>>0],activation:vt(be),activation_params:Be?Array.from(u().subarray(Ve>>>0,Ve+Be>>>0)):[]})},1432897:(c,m,w,_,D,F,H,me,ce,fe,be,Be,Ve,z,xe,ze)=>{s.Ea("Conv",c,{format:Be?"NHWC":"NCHW",auto_pad:m,dilations:[w,_],group:D,kernel_shape:[F,H],pads:me?Array.from(o().subarray(ce>>>0,ce+me>>>0)):[],strides:[fe,be],w_is_const:()=>!!n()[Ve>>>0],activation:vt(z),activation_params:xe?Array.from(u().subarray(ze>>>0,ze+xe>>>0)):[]})},1433299:(c,m,w,_,D,F,H,me,ce,fe,be,Be,Ve,z,xe)=>{s.Ea("ConvTranspose",c,{format:ce?"NHWC":"NCHW",autoPad:m,dilations:[w],group:_,kernel_shape:[D],pads:[F,H],strides:[me],wIsConst:()=>!!n()[fe>>>0],outputPadding:be?Array.from(o().subarray(Be>>>0,Be+be>>>0)):[],outputShape:Ve?Array.from(o().subarray(z>>>0,z+Ve>>>0)):[],activation:vt(xe)})},1433713:(c,m,w,_,D,F,H,me,ce,fe,be,Be,Ve,z)=>{s.Ea("ConvTranspose",c,{format:me?"NHWC":"NCHW",autoPad:m,dilations:Array.from(o().subarray(w>>>0,w+2>>>0)),group:_,kernelShape:Array.from(o().subarray(D>>>0,D+2>>>0)),pads:Array.from(o().subarray(F>>>0,F+4>>>0)),strides:Array.from(o().subarray(H>>>0,H+2>>>0)),wIsConst:()=>!!n()[ce>>>0],outputPadding:0<fe?Array.from(o().subarray(be>>>0,be+fe>>>0)):[],outputShape:0<Be?Array.from(o().subarray(Ve>>>0,Ve+Be>>>0)):[],activation:vt(z)})},1434270:(c,m,w,_,D,F,H,me,ce,fe,be,Be,Ve,z,xe)=>{s.Ea("ConvTranspose",c,{format:ce?"NHWC":"NCHW",autoPad:m,dilations:[w],group:_,kernel_shape:[D],pads:[F,H],strides:[me],wIsConst:()=>!!n()[fe>>>0],outputPadding:be?Array.from(o().subarray(Be>>>0,Be+be>>>0)):[],outputShape:Ve?Array.from(o().subarray(z>>>0,z+Ve>>>0)):[],activation:vt(xe)})},1434684:(c,m,w,_,D,F,H,me,ce,fe,be,Be,Ve,z)=>{s.Ea("ConvTranspose",c,{format:me?"NHWC":"NCHW",autoPad:m,dilations:Array.from(o().subarray(w>>>0,w+2>>>0)),group:_,kernelShape:Array.from(o().subarray(D>>>0,D+2>>>0)),pads:Array.from(o().subarray(F>>>0,F+4>>>0)),strides:Array.from(o().subarray(H>>>0,H+2>>>0)),wIsConst:()=>!!n()[ce>>>0],outputPadding:0<fe?Array.from(o().subarray(be>>>0,be+fe>>>0)):[],outputShape:0<Be?Array.from(o().subarray(Ve>>>0,Ve+Be>>>0)):[],activation:vt(z)})},1435241:(c,m)=>{s.Ea("GlobalAveragePool",c,{format:m?"NHWC":"NCHW"})},1435332:(c,m,w,_,D,F,H,me,ce,fe,be,Be,Ve,z,xe,ze)=>{s.Ea("AveragePool",c,{format:ze?"NHWC":"NCHW",auto_pad:m,ceil_mode:w,count_include_pad:_,storage_order:D,dilations:[F,H],kernel_shape:[me,ce],pads:[fe,be,Be,Ve],strides:[z,xe]})},1435616:(c,m)=>{s.Ea("GlobalAveragePool",c,{format:m?"NHWC":"NCHW"})},1435707:(c,m,w,_,D,F,H,me,ce,fe,be,Be,Ve,z,xe,ze)=>{s.Ea("AveragePool",c,{format:ze?"NHWC":"NCHW",auto_pad:m,ceil_mode:w,count_include_pad:_,storage_order:D,dilations:[F,H],kernel_shape:[me,ce],pads:[fe,be,Be,Ve],strides:[z,xe]})},1435991:(c,m)=>{s.Ea("GlobalMaxPool",c,{format:m?"NHWC":"NCHW"})},1436078:(c,m,w,_,D,F,H,me,ce,fe,be,Be,Ve,z,xe,ze)=>{s.Ea("MaxPool",c,{format:ze?"NHWC":"NCHW",auto_pad:m,ceil_mode:w,count_include_pad:_,storage_order:D,dilations:[F,H],kernel_shape:[me,ce],pads:[fe,be,Be,Ve],strides:[z,xe]})},1436358:(c,m)=>{s.Ea("GlobalMaxPool",c,{format:m?"NHWC":"NCHW"})},1436445:(c,m,w,_,D,F,H,me,ce,fe,be,Be,Ve,z,xe,ze)=>{s.Ea("MaxPool",c,{format:ze?"NHWC":"NCHW",auto_pad:m,ceil_mode:w,count_include_pad:_,storage_order:D,dilations:[F,H],kernel_shape:[me,ce],pads:[fe,be,Be,Ve],strides:[z,xe]})},1436725:(c,m,w,_,D)=>{s.Ea("Gemm",c,{alpha:m,beta:w,transA:_,transB:D})},1436829:c=>{s.Ea("MatMul",c,void 0)},1436883:(c,m,w,_)=>{s.Ea("ArgMax",c,{keepDims:!!m,selectLastIndex:!!w,axis:_})},1436991:(c,m,w,_)=>{s.Ea("ArgMin",c,{keepDims:!!m,selectLastIndex:!!w,axis:_})},1437099:(c,m)=>{s.Ea("Softmax",c,{axis:m})},1437162:(c,m)=>{s.Ea("Concat",c,{axis:m})},1437222:(c,m,w,_,D)=>{s.Ea("Split",c,{axis:m,numOutputs:w,splitSizes:_?Array.from(o().subarray(D>>>0,D+_>>>0)):[]})},1437367:c=>{s.Ea("Expand",c,void 0)},1437421:(c,m)=>{s.Ea("Gather",c,{axis:Number(m)})},1437492:(c,m)=>{s.Ea("GatherElements",c,{axis:Number(m)})},1437571:(c,m,w,_,D,F,H,me,ce,fe,be)=>{s.Ea("Resize",c,{antialias:m,axes:w?Array.from(o().subarray(_>>>0,_+w>>>0)):[],coordinateTransformMode:vt(D),cubicCoeffA:F,excludeOutside:H,extrapolationValue:me,keepAspectRatioPolicy:vt(ce),mode:vt(fe),nearestMode:vt(be)})},1437922:(c,m,w,_,D,F,H)=>{s.Ea("Slice",c,{starts:m?Array.from(o().subarray(w>>>0,w+m>>>0)):[],ends:_?Array.from(o().subarray(D>>>0,D+_>>>0)):[],axes:F?Array.from(o().subarray(H>>>0,H+F>>>0)):[]})},1438153:c=>{s.Ea("Tile",c,void 0)},1438205:(c,m,w)=>{s.Ea("LayerNormalization",c,{axis:Number(m),epsilon:Number(w)})},1438312:(c,m,w)=>{s.Ea("InstanceNormalization",c,{epsilon:m,format:w?"NHWC":"NCHW"})},1438426:(c,m,w)=>{s.Ea("InstanceNormalization",c,{epsilon:m,format:w?"NHWC":"NCHW"})},1438540:c=>{s.Ea("Range",c,void 0)},1438593:(c,m)=>{s.Ea("Einsum",c,{equation:vt(m)})},1438674:(c,m,w,_,D)=>{s.Ea("Pad",c,{mode:m,value:w,pads:_?Array.from(o().subarray(D>>>0,D+_>>>0)):[]})},1438806:(c,m,w,_,D,F)=>{s.Ea("BatchNormalization",c,{epsilon:m,momentum:w,spatial:!!D,trainingMode:!!_,format:F?"NHWC":"NCHW"})},1438975:(c,m,w,_,D,F)=>{s.Ea("BatchNormalization",c,{epsilon:m,momentum:w,spatial:!!D,trainingMode:!!_,format:F?"NHWC":"NCHW"})},1439144:(c,m,w)=>{s.Ea("CumSum",c,{exclusive:Number(m),reverse:Number(w)})},1439241:(c,m,w,_,D,F,H,me,ce)=>{s.Ea("Attention",c,{numHeads:m,isUnidirectional:w,maskFilterValue:_,scale:D,doRotary:F,qkvHiddenSizes:H?Array.from(o().subarray(Number(me)>>>0,Number(me)+H>>>0)):[],pastPresentShareBuffer:!!ce})},1439513:c=>{s.Ea("Gelu",c,void 0)},1439565:(c,m,w,_,D,F)=>{s.Ea("MultiHeadAttention",c,{numHeads:m,isUnidirectional:w,maskFilterValue:_,scale:D,doRotary:F})},1439724:c=>{s.Ea("BiasAdd",c,void 0)},1439779:c=>{s.Ea("BiasSplitGelu",c,void 0)},1439840:(c,m)=>{s.Ea("SkipLayerNormalization",c,{epsilon:m})},1439921:c=>s.wb(c),1439954:c=>s.yb(c),1439986:(c,m,w)=>{s.jb(c,m,w,!0)},1440025:(c,m,w)=>{s.jb(c,m,w)}};function Er(c){this.name="ExitStatus",this.message=`Program terminated with exit(${c})`,this.status=c}function hn(c){c.terminate(),c.onmessage=()=>{}}function mn(c){(c=ye.Qa[c])||Kt(),ye.Eb(c)}function Ln(c){var m=ye.tb();if(!m)return 6;ye.Ya.push(m),ye.Qa[c.Xa]=m,m.Xa=c.Xa;var w={cmd:"run",start_routine:c.Gb,arg:c.rb,pthread_ptr:c.Xa};return $&&m.unref(),m.postMessage(w,c.Mb),0}var gn=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Io=(c,m,w)=>{m>>>=0;var _=m+w;for(w=m;c[w]&&!(w>=_);)++w;if(16<w-m&&c.buffer&&gn)return gn.decode(c.buffer instanceof SharedArrayBuffer?c.slice(m,w):c.subarray(m,w));for(_="";m<w;){var D=c[m++];if(D&128){var F=c[m++]&63;if((D&224)==192)_+=String.fromCharCode((D&31)<<6|F);else{var H=c[m++]&63;D=(D&240)==224?(D&15)<<12|F<<6|H:(D&7)<<18|F<<12|H<<6|c[m++]&63,65536>D?_+=String.fromCharCode(D):(D-=65536,_+=String.fromCharCode(55296|D>>10,56320|D&1023))}}else _+=String.fromCharCode(D)}return _},vt=(c,m)=>(c>>>=0)?Io(t(),c,m):"";function zn(c){if(x)return q(1,1,c);qe=c,ir()||(ye.Hb(),s.onExit&&s.onExit(c),Ue=!0),g(c,new Er(c))}var Nn=c=>{if(qe=c,x)throw _o(c),"unwind";zn(c)},ye={ab:[],Ya:[],mb:[],Qa:{},gb:function(){x?ye.vb():ye.ub()},ub:function(){Pt.unshift(()=>{Bn(),ye.Bb(()=>$o())})},vb:function(){ye.receiveObjectTransfer=ye.Db,ye.threadInitTLS=ye.lb,ye.setExitStatus=ye.kb,le=!1},kb:function(c){qe=c},Sb:["$terminateWorker"],Hb:function(){for(var c of ye.Ya)hn(c);for(c of ye.ab)hn(c);ye.ab=[],ye.Ya=[],ye.Qa=[]},Eb:function(c){var m=c.Xa;delete ye.Qa[m],ye.ab.push(c),ye.Ya.splice(ye.Ya.indexOf(c),1),c.Xa=0,ma(m)},Db:function(){},lb:function(){ye.mb.forEach(c=>c())},Cb:c=>new Promise(m=>{c.onmessage=F=>{F=F.data;var H=F.cmd;if(F.targetThread&&F.targetThread!=Lo()){var me=ye.Qa[F.Rb];me?me.postMessage(F,F.transferList):Q('Internal error! Worker sent a message "'+H+'" to target pthread '+F.targetThread+", but that thread no longer exists!")}else H==="checkMailbox"?qr():H==="spawnThread"?Ln(F):H==="cleanupThread"?mn(F.thread):H==="killThread"?(F=F.thread,H=ye.Qa[F],delete ye.Qa[F],hn(H),ma(F),ye.Ya.splice(ye.Ya.indexOf(H),1),H.Xa=0):H==="cancelThread"?ye.Qa[F.thread].postMessage({cmd:"cancel"}):H==="loaded"?(c.loaded=!0,m(c)):H==="alert"?alert("Thread "+F.threadId+": "+F.text):F.target==="setimmediate"?c.postMessage(F):H==="callHandler"?s[F.handler](...F.args):H&&Q("worker sent an unknown command "+H)},c.onerror=F=>{throw Q("worker sent an error! "+F.filename+":"+F.lineno+": "+F.message),F},$&&(c.on("message",function(F){c.onmessage({data:F})}),c.on("error",function(F){c.onerror(F)}));var w=[],_=["onExit","onAbort","print","printErr"],D;for(D of _)s.hasOwnProperty(D)&&w.push(D);c.postMessage({cmd:"load",handlers:w,urlOrBlob:s.mainScriptUrlOrBlob||r,wasmMemory:Me,wasmModule:Le})}),Bb:function(c){c()},qb:function(){var c=O("ort-wasm-simd-threaded.worker.js");c=new Worker(c),ye.ab.push(c)},tb:function(){return ye.ab.length==0&&(ye.qb(),ye.Cb(ye.ab[0])),ye.ab.pop()}};s.PThread=ye;var Tr=c=>{for(;0<c.length;)c.shift()(s)};s.establishStackSpace=function(){var c=Lo(),m=o()[c+52>>2>>>0];c=o()[c+56>>2>>>0],ku(m,m-c),zo(m)};function _o(c){if(x)return q(2,0,c);Nn(c)}s.invokeEntryPoint=function(c,m){c=Du.apply(null,[c,m]),ir()?ye.kb(c):ga(c)};function ar(c){this.fb=c-24,this.pb=function(m){i()[this.fb+4>>2>>>0]=m},this.ob=function(m){i()[this.fb+8>>2>>>0]=m},this.gb=function(m,w){this.nb(),this.pb(m),this.ob(w)},this.nb=function(){i()[this.fb+16>>2>>>0]=0}}var Nt=0,Ao=0;function Ur(c,m,w,_){return x?q(3,1,c,m,w,_):Fn(c,m,w,_)}function Fn(c,m,w,_){if(c>>>=0,m>>>=0,w>>>=0,_>>>=0,typeof SharedArrayBuffer>"u")return Q("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var D=[];return x&&D.length===0?Ur(c,m,w,_):(c={Gb:w,Xa:c,rb:_,Mb:D},x?(c.Ob="spawnThread",postMessage(c,D),0):Ln(c))}function Vn(c,m,w){return x?q(4,1,c,m,w):0}function Oo(c,m){if(x)return q(5,1,c,m)}var Hr=c=>{for(var m=0,w=0;w<c.length;++w){var _=c.charCodeAt(w);127>=_?m++:2047>=_?m+=2:55296<=_&&57343>=_?(m+=4,++w):m+=3}return m},Eo=(c,m,w,_)=>{if(w>>>=0,!(0<_))return 0;var D=w;_=w+_-1;for(var F=0;F<c.length;++F){var H=c.charCodeAt(F);if(55296<=H&&57343>=H){var me=c.charCodeAt(++F);H=65536+((H&1023)<<10)|me&1023}if(127>=H){if(w>=_)break;m[w++>>>0]=H}else{if(2047>=H){if(w+1>=_)break;m[w++>>>0]=192|H>>6}else{if(65535>=H){if(w+2>=_)break;m[w++>>>0]=224|H>>12}else{if(w+3>=_)break;m[w++>>>0]=240|H>>18,m[w++>>>0]=128|H>>12&63}m[w++>>>0]=128|H>>6&63}m[w++>>>0]=128|H&63}}return m[w>>>0]=0,w-D},Co=(c,m,w)=>Eo(c,t(),m,w);function Po(c,m){if(x)return q(6,1,c,m)}function ko(c,m,w){if(x)return q(7,1,c,m,w)}function Do(c,m,w){return x?q(8,1,c,m,w):0}function Bo(c,m){if(x)return q(9,1,c,m)}function bn(c,m,w){if(x)return q(10,1,c,m,w)}function Gn(c,m,w,_){if(x)return q(11,1,c,m,w,_)}function Wn(c,m,w,_){if(x)return q(12,1,c,m,w,_)}function Un(c,m,w,_){if(x)return q(13,1,c,m,w,_)}function Hn(c){if(x)return q(14,1,c)}function qn(c,m){if(x)return q(15,1,c,m)}function jn(c,m,w){if(x)return q(16,1,c,m,w)}var Kn=c=>{if(!Ue)try{if(c(),!ir())try{x?ga(qe):Nn(qe)}catch(m){m instanceof Er||m=="unwind"||g(1,m)}}catch(m){m instanceof Er||m=="unwind"||g(1,m)}};function yn(c){c>>>=0,typeof Atomics.Nb=="function"&&(Atomics.Nb(o(),c>>2,c).value.then(qr),c+=128,Atomics.store(o(),c>>2,1))}s.__emscripten_thread_mailbox_await=yn;function qr(){var c=Lo();c&&(yn(c),Kn(()=>Cu()))}s.checkMailbox=qr;var Cr=c=>c%4===0&&(c%100!==0||c%400===0),jr=[0,31,60,91,121,152,182,213,244,274,305,335],Yn=[0,31,59,90,120,151,181,212,243,273,304,334];function h(c,m,w,_,D,F,H,me){return x?q(17,1,c,m,w,_,D,F,H,me):-52}function v(c,m,w,_,D,F,H){if(x)return q(18,1,c,m,w,_,D,F,H)}var S=c=>{var m=Hr(c)+1,w=ha(m);return w&&Co(c,w,m),w},E=[],M=(c,m)=>{E.length=0;var w;for(m>>=2;w=t()[c++>>>0];)m+=w!=105&m,E.push(w==105?o()[m>>>0]:a()[m++>>>1]),++m;return E},Y=c=>{var m=ba();return c=c(),zo(m),c};function q(c,m){var w=arguments.length-2,_=arguments;return Y(()=>{for(var D=ya(8*w),F=D>>3,H=0;H<w;H++){var me=_[2+H];a()[F+H>>>0]=me}return Eu(c,w,D,m)})}var ve=[],ne={},he=()=>{if(!de){var c={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:f||"./this.program"},m;for(m in ne)ne[m]===void 0?delete c[m]:c[m]=ne[m];var w=[];for(m in c)w.push(`${m}=${c[m]}`);de=w}return de},de;function _e(c,m){if(x)return q(19,1,c,m);c>>>=0,m>>>=0;var w=0;return he().forEach(function(_,D){var F=m+w;for(D=i()[c+4*D>>2>>>0]=F,F=0;F<_.length;++F)n()[D++>>0>>>0]=_.charCodeAt(F);n()[D>>0>>>0]=0,w+=_.length+1}),0}function De(c,m){if(x)return q(20,1,c,m);c>>>=0,m>>>=0;var w=he();i()[c>>2>>>0]=w.length;var _=0;return w.forEach(function(D){_+=D.length+1}),i()[m>>2>>>0]=_,0}function L(c){return x?q(21,1,c):52}function ge(c,m,w,_){return x?q(22,1,c,m,w,_):52}function Ce(c,m,w,_,D){return x?q(23,1,c,m,w,_,D):70}var $r=[null,[],[]];function Xn(c,m,w,_){if(x)return q(24,1,c,m,w,_);m>>>=0,w>>>=0,_>>>=0;for(var D=0,F=0;F<w;F++){var H=i()[m>>2>>>0],me=i()[m+4>>2>>>0];m+=8;for(var ce=0;ce<me;ce++){var fe=t()[H+ce>>>0],be=$r[c];fe===0||fe===10?((c===1?P:Q)(Io(be,0)),be.length=0):be.push(fe)}D+=me}return i()[_>>2>>>0]=D,0}var xu=[31,29,31,30,31,30,31,31,30,31,30,31],Tu=[31,28,31,30,31,30,31,31,30,31,30,31];function Cy(c){var m=Array(Hr(c)+1);return Eo(c,m,0,m.length),m}var Py=(c,m)=>{n().set(c,m>>>0)};function $u(c,m,w,_){function D(z,xe,ze){for(z=typeof z=="number"?z.toString():z||"";z.length<xe;)z=ze[0]+z;return z}function F(z,xe){return D(z,xe,"0")}function H(z,xe){function ze(Nu){return 0>Nu?-1:0<Nu?1:0}var Kr;return(Kr=ze(z.getFullYear()-xe.getFullYear()))===0&&(Kr=ze(z.getMonth()-xe.getMonth()))===0&&(Kr=ze(z.getDate()-xe.getDate())),Kr}function me(z){switch(z.getDay()){case 0:return new Date(z.getFullYear()-1,11,29);case 1:return z;case 2:return new Date(z.getFullYear(),0,3);case 3:return new Date(z.getFullYear(),0,2);case 4:return new Date(z.getFullYear(),0,1);case 5:return new Date(z.getFullYear()-1,11,31);case 6:return new Date(z.getFullYear()-1,11,30)}}function ce(z){var xe=z.Za;for(z=new Date(new Date(z.$a+1900,0,1).getTime());0<xe;){var ze=z.getMonth(),Kr=(Cr(z.getFullYear())?xu:Tu)[ze];if(xe>Kr-z.getDate())xe-=Kr-z.getDate()+1,z.setDate(1),11>ze?z.setMonth(ze+1):(z.setMonth(0),z.setFullYear(z.getFullYear()+1));else{z.setDate(z.getDate()+xe);break}}return ze=new Date(z.getFullYear()+1,0,4),xe=me(new Date(z.getFullYear(),0,4)),ze=me(ze),0>=H(xe,z)?0>=H(ze,z)?z.getFullYear()+1:z.getFullYear():z.getFullYear()-1}c>>>=0,m>>>=0,w>>>=0,_>>>=0;var fe=o()[_+40>>2>>>0];_={Kb:o()[_>>2>>>0],Jb:o()[_+4>>2>>>0],cb:o()[_+8>>2>>>0],ib:o()[_+12>>2>>>0],eb:o()[_+16>>2>>>0],$a:o()[_+20>>2>>>0],Wa:o()[_+24>>2>>>0],Za:o()[_+28>>2>>>0],Tb:o()[_+32>>2>>>0],Ib:o()[_+36>>2>>>0],Lb:fe?vt(fe):""},w=vt(w),fe={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var be in fe)w=w.replace(new RegExp(be,"g"),fe[be]);var Be="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Ve="January February March April May June July August September October November December".split(" ");fe={"%a":z=>Be[z.Wa].substring(0,3),"%A":z=>Be[z.Wa],"%b":z=>Ve[z.eb].substring(0,3),"%B":z=>Ve[z.eb],"%C":z=>F((z.$a+1900)/100|0,2),"%d":z=>F(z.ib,2),"%e":z=>D(z.ib,2," "),"%g":z=>ce(z).toString().substring(2),"%G":z=>ce(z),"%H":z=>F(z.cb,2),"%I":z=>(z=z.cb,z==0?z=12:12<z&&(z-=12),F(z,2)),"%j":z=>{for(var xe=0,ze=0;ze<=z.eb-1;xe+=(Cr(z.$a+1900)?xu:Tu)[ze++]);return F(z.ib+xe,3)},"%m":z=>F(z.eb+1,2),"%M":z=>F(z.Jb,2),"%n":()=>`
`,"%p":z=>0<=z.cb&&12>z.cb?"AM":"PM","%S":z=>F(z.Kb,2),"%t":()=>"	","%u":z=>z.Wa||7,"%U":z=>F(Math.floor((z.Za+7-z.Wa)/7),2),"%V":z=>{var xe=Math.floor((z.Za+7-(z.Wa+6)%7)/7);if(2>=(z.Wa+371-z.Za-2)%7&&xe++,xe)xe==53&&(ze=(z.Wa+371-z.Za)%7,ze==4||ze==3&&Cr(z.$a)||(xe=1));else{xe=52;var ze=(z.Wa+7-z.Za-1)%7;(ze==4||ze==5&&Cr(z.$a%400-1))&&xe++}return F(xe,2)},"%w":z=>z.Wa,"%W":z=>F(Math.floor((z.Za+7-(z.Wa+6)%7)/7),2),"%y":z=>(z.$a+1900).toString().substring(2),"%Y":z=>z.$a+1900,"%z":z=>{z=z.Ib;var xe=0<=z;return z=Math.abs(z)/60,(xe?"+":"-")+("0000"+(z/60*100+z%60)).slice(-4)},"%Z":z=>z.Lb,"%%":()=>"%"},w=w.replace(/%%/g,"\0\0");for(be in fe)w.includes(be)&&(w=w.replace(new RegExp(be,"g"),fe[be](_)));return w=w.replace(/\0\0/g,"%"),be=Cy(w),be.length>m?0:(Py(be,c),be.length-1)}function Ro(c){try{c()}catch(m){Kt(m)}}function ky(c){var m={},w;for(w in c)(function(_){var D=c[_];m[_]=typeof D=="function"?function(){Mo.push(_);try{return D.apply(null,arguments)}finally{Ue||(Mo.pop()===_||Kt(),sr&&Pr===1&&Mo.length===0&&(Pr=0,It+=1,Ro(Ru),typeof Fibers<"u"&&Fibers.Ub()))}}:D})(w);return m}var Pr=0,sr=null,Su=0,Mo=[],Iu={},_u={},Dy=0,pa=null,By=[];function Ry(){return new Promise((c,m)=>{pa={resolve:c,reject:m}})}function My(){var c=ha(65548),m=c+12;i()[c>>2>>>0]=m,i()[c+4>>2>>>0]=m+65536,m=Mo[0];var w=Iu[m];return w===void 0&&(w=Dy++,Iu[m]=w,_u[w]=m),m=w,o()[c+8>>2>>>0]=m,c}function Ly(){var c=o()[sr+8>>2>>>0];return c=te[_u[c]],--It,c()}function zy(c){if(!Ue){if(Pr===0){var m=!1,w=!1;c((_=0)=>{if(!Ue&&(Su=_,m=!0,w)){Pr=2,Ro(()=>Mu(sr)),typeof Browser<"u"&&Browser.hb.sb&&Browser.hb.resume(),_=!1;try{var D=Ly()}catch(me){D=me,_=!0}var F=!1;if(!sr){var H=pa;H&&(pa=null,(_?H.reject:H.resolve)(D),F=!0)}if(_&&!F)throw D}}),w=!0,m||(Pr=1,sr=My(),typeof Browser<"u"&&Browser.hb.sb&&Browser.hb.pause(),Ro(()=>Bu(sr)))}else Pr===2?(Pr=0,Ro(Lu),Au(sr),sr=null,By.forEach(_=>Kn(_))):Kt(`invalid state: ${Pr}`);return Su}}function Ny(c){return zy(m=>{c().then(m)})}ye.gb();var Fy=[null,zn,_o,Ur,Vn,Oo,Po,ko,Do,Bo,bn,Gn,Wn,Un,Hn,qn,jn,h,v,_e,De,L,ge,Ce,Xn],Vy={r:function(c,m,w){return Ny(async()=>{await s.xb(c,m,w)})},b:function(c,m,w){throw c>>>=0,new ar(c).gb(m>>>0,w>>>0),Nt=c,Ao++,Nt},P:function(c){Ou(c>>>0,!y,1,!b,131072,!1),ye.lb()},n:function(c){c>>>=0,x?postMessage({cmd:"cleanupThread",thread:c}):mn(c)},K:Fn,g:Vn,V:Oo,F:Po,H:ko,y:Do,T:Bo,L:bn,S:Gn,p:Wn,G:Un,D:Hn,U:qn,E:jn,q:()=>!0,B:function(c,m){c>>>=0,c==m>>>0?setTimeout(()=>qr()):x?postMessage({targetThread:c,cmd:"checkMailbox"}):(c=ye.Qa[c])&&c.postMessage({cmd:"checkMailbox"})},N:function(){return-1},O:yn,X:function(c){$&&ye.Qa[c>>>0].ref()},u:function(c,m,w){c=m+2097152>>>0<4194305-!!c?(c>>>0)+4294967296*m:NaN,w>>>=0,c=new Date(1e3*c),o()[w>>2>>>0]=c.getUTCSeconds(),o()[w+4>>2>>>0]=c.getUTCMinutes(),o()[w+8>>2>>>0]=c.getUTCHours(),o()[w+12>>2>>>0]=c.getUTCDate(),o()[w+16>>2>>>0]=c.getUTCMonth(),o()[w+20>>2>>>0]=c.getUTCFullYear()-1900,o()[w+24>>2>>>0]=c.getUTCDay(),c=(c.getTime()-Date.UTC(c.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,o()[w+28>>2>>>0]=c},v:function(c,m,w){c=m+2097152>>>0<4194305-!!c?(c>>>0)+4294967296*m:NaN,w>>>=0,c=new Date(1e3*c),o()[w>>2>>>0]=c.getSeconds(),o()[w+4>>2>>>0]=c.getMinutes(),o()[w+8>>2>>>0]=c.getHours(),o()[w+12>>2>>>0]=c.getDate(),o()[w+16>>2>>>0]=c.getMonth(),o()[w+20>>2>>>0]=c.getFullYear()-1900,o()[w+24>>2>>>0]=c.getDay(),m=(Cr(c.getFullYear())?jr:Yn)[c.getMonth()]+c.getDate()-1|0,o()[w+28>>2>>>0]=m,o()[w+36>>2>>>0]=-(60*c.getTimezoneOffset()),m=new Date(c.getFullYear(),6,1).getTimezoneOffset();var _=new Date(c.getFullYear(),0,1).getTimezoneOffset();c=(m!=_&&c.getTimezoneOffset()==Math.min(_,m))|0,o()[w+32>>2>>>0]=c},w:function(c){c>>>=0;var m=new Date(o()[c+20>>2>>>0]+1900,o()[c+16>>2>>>0],o()[c+12>>2>>>0],o()[c+8>>2>>>0],o()[c+4>>2>>>0],o()[c>>2>>>0],0),w=o()[c+32>>2>>>0],_=m.getTimezoneOffset(),D=new Date(m.getFullYear(),6,1).getTimezoneOffset(),F=new Date(m.getFullYear(),0,1).getTimezoneOffset(),H=Math.min(F,D);return 0>w?o()[c+32>>2>>>0]=+(D!=F&&H==_):0<w!=(H==_)&&(D=Math.max(F,D),m.setTime(m.getTime()+6e4*((0<w?H:D)-_))),o()[c+24>>2>>>0]=m.getDay(),w=(Cr(m.getFullYear())?jr:Yn)[m.getMonth()]+m.getDate()-1|0,o()[c+28>>2>>>0]=w,o()[c>>2>>>0]=m.getSeconds(),o()[c+4>>2>>>0]=m.getMinutes(),o()[c+8>>2>>>0]=m.getHours(),o()[c+12>>2>>>0]=m.getDate(),o()[c+16>>2>>>0]=m.getMonth(),o()[c+20>>2>>>0]=m.getYear(),c=m.getTime()/1e3,Pu((xr=c,1<=+Math.abs(xr)?0<xr?+Math.floor(xr/4294967296)>>>0:~~+Math.ceil((xr-+(~~xr>>>0))/4294967296)>>>0:0)),c>>>0},s:h,t:v,A:function(c,m,w){function _(fe){return(fe=fe.toTimeString().match(/\(([A-Za-z ]+)\)$/))?fe[1]:"GMT"}c>>>=0,m>>>=0,w>>>=0;var D=new Date().getFullYear(),F=new Date(D,0,1),H=new Date(D,6,1);D=F.getTimezoneOffset();var me=H.getTimezoneOffset(),ce=Math.max(D,me);i()[c>>2>>>0]=60*ce,o()[m>>2>>>0]=+(D!=me),c=_(F),m=_(H),c=S(c),m=S(m),me<D?(i()[w>>2>>>0]=c,i()[w+4>>2>>>0]=m):(i()[w>>2>>>0]=m,i()[w+4>>2>>>0]=c)},e:()=>{Kt("")},c:function(c,m,w){return c>>>=0,m=M(m>>>0,w>>>0),pn[c].apply(null,m)},l:function(c,m,w){return c>>>=0,m=M(m>>>0,w>>>0),pn[c].apply(null,m)},o:function(){},k:function(){return Date.now()},W:()=>{throw It+=1,"unwind"},C:function(){return 4294901760},d:()=>performance.timeOrigin+performance.now(),i:function(){return $?(Sh(),kr($h)).cpus().length:navigator.hardwareConcurrency},M:function(c,m,w,_){for(ye.Pb=m>>>0,ve.length=w,m=_>>>0>>3,_=0;_<w;_++)ve[_]=a()[m+_>>>0];return(0>c?pn[-c-1]:Fy[c]).apply(null,ve)},z:function(c){c>>>=0;var m=t().length;if(c<=m||4294901760<c)return!1;for(var w=1;4>=w;w*=2){var _=m*(1+.2/w);_=Math.min(_,c+100663296);var D=Math;_=Math.max(c,_);e:{D=D.min.call(D,4294901760,_+(65536-_%65536)%65536)-Me.buffer.byteLength+65535>>>16;try{Me.grow(D),Ae();var F=1;break e}catch{}F=void 0}if(F)return!0}return!1},Q:_e,R:De,J:Nn,h:L,m:ge,x:Ce,j:Xn,a:Me||s.wasmMemory,I:$u,f:function(c,m,w,_){return $u(c>>>0,m>>>0,w>>>0,_>>>0)}};(function(){function c(w,_){return w=w.exports,w=ky(w),te=w=Gy(w),ye.mb.push(te.Da),ot.unshift(te.Y),Le=_,$o(),w}var m={a:Vy};if(Bn(),s.instantiateWasm)try{return s.instantiateWasm(m,c)}catch(w){Q("Module.instantiateWasm callback failed with error: "+w),d(w)}return So(m,function(w){c(w.instance,w.module)}).catch(d),{}})(),s._OrtInit=(c,m)=>(s._OrtInit=te.Z)(c,m),s._OrtGetLastError=(c,m)=>(s._OrtGetLastError=te._)(c,m),s._OrtCreateSessionOptions=(c,m,w,_,D,F,H,me,ce,fe)=>(s._OrtCreateSessionOptions=te.$)(c,m,w,_,D,F,H,me,ce,fe),s._OrtAppendExecutionProvider=(c,m)=>(s._OrtAppendExecutionProvider=te.aa)(c,m),s._OrtAddFreeDimensionOverride=(c,m,w)=>(s._OrtAddFreeDimensionOverride=te.ba)(c,m,w),s._OrtAddSessionConfigEntry=(c,m,w)=>(s._OrtAddSessionConfigEntry=te.ca)(c,m,w),s._OrtReleaseSessionOptions=c=>(s._OrtReleaseSessionOptions=te.da)(c),s._OrtCreateSession=(c,m,w)=>(s._OrtCreateSession=te.ea)(c,m,w),s._OrtReleaseSession=c=>(s._OrtReleaseSession=te.fa)(c),s._OrtGetInputOutputCount=(c,m,w)=>(s._OrtGetInputOutputCount=te.ga)(c,m,w),s._OrtGetInputName=(c,m)=>(s._OrtGetInputName=te.ha)(c,m),s._OrtGetOutputName=(c,m)=>(s._OrtGetOutputName=te.ia)(c,m),s._OrtFree=c=>(s._OrtFree=te.ja)(c),s._OrtCreateTensor=(c,m,w,_,D,F)=>(s._OrtCreateTensor=te.ka)(c,m,w,_,D,F),s._OrtGetTensorData=(c,m,w,_,D)=>(s._OrtGetTensorData=te.la)(c,m,w,_,D),s._OrtReleaseTensor=c=>(s._OrtReleaseTensor=te.ma)(c),s._OrtCreateRunOptions=(c,m,w,_)=>(s._OrtCreateRunOptions=te.na)(c,m,w,_),s._OrtAddRunConfigEntry=(c,m,w)=>(s._OrtAddRunConfigEntry=te.oa)(c,m,w),s._OrtReleaseRunOptions=c=>(s._OrtReleaseRunOptions=te.pa)(c),s._OrtCreateBinding=c=>(s._OrtCreateBinding=te.qa)(c),s._OrtBindInput=(c,m,w)=>(s._OrtBindInput=te.ra)(c,m,w),s._OrtBindOutput=(c,m,w,_)=>(s._OrtBindOutput=te.sa)(c,m,w,_),s._OrtClearBoundOutputs=c=>(s._OrtClearBoundOutputs=te.ta)(c),s._OrtReleaseBinding=c=>(s._OrtReleaseBinding=te.ua)(c),s._OrtRunWithBinding=(c,m,w,_,D)=>(s._OrtRunWithBinding=te.va)(c,m,w,_,D),s._OrtRun=(c,m,w,_,D,F,H,me)=>(s._OrtRun=te.wa)(c,m,w,_,D,F,H,me),s._OrtEndProfiling=c=>(s._OrtEndProfiling=te.xa)(c),s._JsepOutput=(c,m,w)=>(s._JsepOutput=te.ya)(c,m,w),s._JsepGetNodeName=c=>(s._JsepGetNodeName=te.za)(c);var Lo=s._pthread_self=()=>(Lo=s._pthread_self=te.Aa)(),ha=s._malloc=c=>(ha=s._malloc=te.Ba)(c),Au=s._free=c=>(Au=s._free=te.Ca)(c);s.__emscripten_tls_init=()=>(s.__emscripten_tls_init=te.Da)();var Ou=s.__emscripten_thread_init=(c,m,w,_,D,F)=>(Ou=s.__emscripten_thread_init=te.Fa)(c,m,w,_,D,F);s.__emscripten_thread_crashed=()=>(s.__emscripten_thread_crashed=te.Ga)();var Eu=(c,m,w,_)=>(Eu=te.Ha)(c,m,w,_),ma=c=>(ma=te.Ia)(c),ga=s.__emscripten_thread_exit=c=>(ga=s.__emscripten_thread_exit=te.Ja)(c),Cu=s.__emscripten_check_mailbox=()=>(Cu=s.__emscripten_check_mailbox=te.Ka)(),Pu=c=>(Pu=te.La)(c),ku=(c,m)=>(ku=te.Ma)(c,m),ba=()=>(ba=te.Na)(),zo=c=>(zo=te.Oa)(c),ya=c=>(ya=te.Pa)(c),Du=s.dynCall_ii=(c,m)=>(Du=s.dynCall_ii=te.Ra)(c,m),Bu=c=>(Bu=te.Sa)(c),Ru=()=>(Ru=te.Ta)(),Mu=c=>(Mu=te.Ua)(c),Lu=()=>(Lu=te.Va)();s.___start_em_js=1440058,s.___stop_em_js=1440219;function Gy(c){c=Object.assign({},c);var m=_=>()=>_()>>>0,w=_=>D=>_(D)>>>0;return c.__errno_location=m(c.__errno_location),c.pthread_self=m(c.pthread_self),c.malloc=w(c.malloc),c.stackSave=m(c.stackSave),c.stackAlloc=w(c.stackAlloc),c}s.keepRuntimeAlive=ir,s.wasmMemory=Me,s.stackAlloc=ya,s.stackSave=ba,s.stackRestore=zo,s.UTF8ToString=vt,s.stringToUTF8=Co,s.lengthBytesUTF8=Hr,s.ExitStatus=Er,s.PThread=ye;var No;Wr=function c(){No||zu(),No||(Wr=c)};function zu(){function c(){if(!No&&(No=!0,s.calledRun=!0,!Ue)&&(x||Tr(ot),l(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),!x)){if(s.postRun)for(typeof s.postRun=="function"&&(s.postRun=[s.postRun]);s.postRun.length;){var m=s.postRun.shift();pt.unshift(m)}Tr(pt)}}if(!(0<zt))if(x)l(s),x||Tr(ot),startWorker(s);else{if(s.preRun)for(typeof s.preRun=="function"&&(s.preRun=[s.preRun]);s.preRun.length;)Pt.unshift(s.preRun.shift());Tr(Pt),0<zt||(s.setStatus?(s.setStatus("Running..."),setTimeout(function(){setTimeout(function(){s.setStatus("")},1),c()},1)):c())}}if(s.preInit)for(typeof s.preInit=="function"&&(s.preInit=[s.preInit]);0<s.preInit.length;)s.preInit.pop()();return zu(),e.ready}})();typeof _h=="object"&&typeof ks=="object"?ks.exports=Ih:typeof define=="function"&&define.amd&&define([],()=>Ih)});var Oh=Ye((YC,Ix)=>{Ix.exports='"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>(0,eval)(fs.readFileSync(e,"utf8")+"//# sourceURL="+e),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason??e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err("worker.js received unknown command "+e.data.cmd),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed&&Module.__emscripten_thread_crashed(),a}}self.onmessage=handleMessage;\n'});var Ch,_x,Ds,Bs,zi,Eh,Ax,Ox,Ex,Ph,it,kn=B(()=>{"use strict";Ch=wh();_x=Ah(),Bs=!1,zi=!1,Eh=!1,Ax=()=>{try{return typeof SharedArrayBuffer>"u"?!1:(typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch{return!1}},Ox=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Ex=(r,e)=>r?e?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":e?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Ph=async r=>{if(Bs)return Promise.resolve();if(zi)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Eh)throw new Error("previous call to 'initializeWebAssembly()' failed.");zi=!0;let e=r.initTimeout,n=r.numThreads,t=r.simd,o=n>1&&Ax(),i=t&&Ox(),u=r.wasmPaths,a=typeof u=="string"?u:void 0,s=Ex(i,o),l=typeof u=="object"?u[s]:void 0,d=!1,p=[];if(e>0&&p.push(new Promise(f=>{setTimeout(()=>{d=!0,f()},e)})),p.push(new Promise((f,g)=>{let b=o?_x:Ch,y={locateFile:($,x)=>{if(o&&$.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([Oh()],{type:"text/javascript"}));if($.endsWith(".wasm")){if(l)return l;let I=a??x;return s==="ort-wasm-simd.wasm"?I+"ort-wasm-simd.jsep.wasm":s==="ort-wasm-simd-threaded.wasm"?I+"ort-wasm-simd-threaded.jsep.wasm":I+s}return x+$}};if(o)if(typeof Blob>"u")y.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let $=`var ortWasmThreaded=${b.toString()};`;y.mainScriptUrlOrBlob=new Blob([$],{type:"text/javascript"})}b(y).then($=>{zi=!1,Bs=!0,Ds=$,f()},$=>{zi=!1,Eh=!0,g($)})})),await Promise.race(p),d)throw new Error(`WebAssembly backend initializing failed due to timeout: ${e}ms`)},it=()=>{if(Bs&&Ds)return Ds;throw new Error("WebAssembly is not initialized yet.")}});var ct,ho,Qe,Ni=B(()=>{"use strict";kn();ct=(r,e)=>{let n=it(),t=n.lengthBytesUTF8(r)+1,o=n._malloc(t);return n.stringToUTF8(r,o,t),e.push(o),o},ho=(r,e,n,t)=>{if(typeof r=="object"&&r!==null){if(n.has(r))throw new Error("Circular reference in options");n.add(r)}Object.entries(r).forEach(([o,i])=>{let u=e?e+o:o;if(typeof i=="object")ho(i,u+".",n,t);else if(typeof i=="string"||typeof i=="number")t(u,i.toString());else if(typeof i=="boolean")t(u,i?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof i}`)})},Qe=r=>{let e=it(),n=e.stackSave();try{let t=e.stackAlloc(8);e._OrtGetLastError(t,t+4);let o=e.HEAP32[t/4],i=e.HEAPU32[t/4+1],u=i?e.UTF8ToString(i):"";throw new Error(`${r} ERROR_CODE: ${o}, ERROR_MESSAGE: ${u}`)}finally{e.stackRestore(n)}}});var kh,Dh=B(()=>{"use strict";kn();Ni();kh=r=>{let e=it(),n=0,t=[],o=r||{};try{if(r?.logSeverityLevel===void 0)o.logSeverityLevel=2;else if(typeof r.logSeverityLevel!="number"||!Number.isInteger(r.logSeverityLevel)||r.logSeverityLevel<0||r.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${r.logSeverityLevel}`);if(r?.logVerbosityLevel===void 0)o.logVerbosityLevel=0;else if(typeof r.logVerbosityLevel!="number"||!Number.isInteger(r.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${r.logVerbosityLevel}`);r?.terminate===void 0&&(o.terminate=!1);let i=0;return r?.tag!==void 0&&(i=ct(r.tag,t)),n=e._OrtCreateRunOptions(o.logSeverityLevel,o.logVerbosityLevel,!!o.terminate,i),n===0&&Qe("Can't create run options."),r?.extra!==void 0&&ho(r.extra,"",new WeakSet,(u,a)=>{let s=ct(u,t),l=ct(a,t);e._OrtAddRunConfigEntry(n,s,l)!==0&&Qe(`Can't set a run config entry: ${u} - ${a}.`)}),[n,t]}catch(i){throw n!==0&&e._OrtReleaseRunOptions(n),t.forEach(u=>e._free(u)),i}}});var Cx,Px,kx,Dx,Bh,Rh=B(()=>{"use strict";kn();Ni();Cx=r=>{switch(r){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${r}`)}},Px=r=>{switch(r){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${r}`)}},kx=r=>{r.extra||(r.extra={}),r.extra.session||(r.extra.session={});let e=r.extra.session;e.use_ort_model_bytes_directly||(e.use_ort_model_bytes_directly="1"),r.executionProviders&&r.executionProviders.some(n=>(typeof n=="string"?n:n.name)==="webgpu")&&(r.enableMemPattern=!1)},Dx=(r,e,n)=>{for(let t of e){let o=typeof t=="string"?t:t.name;switch(o){case"xnnpack":o="XNNPACK";break;case"webnn":if(o="WEBNN",typeof t!="string"){let u=t;if(u?.deviceType){let a=ct("deviceType",n),s=ct(u.deviceType,n);it()._OrtAddSessionConfigEntry(r,a,s)!==0&&Qe(`Can't set a session config entry: 'deviceType' - ${u.deviceType}.`)}if(u?.numThreads){let a=u.numThreads;(typeof a!="number"||!Number.isInteger(a)||a<0)&&(a=0);let s=ct("numThreads",n),l=ct(a.toString(),n);it()._OrtAddSessionConfigEntry(r,s,l)!==0&&Qe(`Can't set a session config entry: 'numThreads' - ${u.numThreads}.`)}if(u?.powerPreference){let a=ct("powerPreference",n),s=ct(u.powerPreference,n);it()._OrtAddSessionConfigEntry(r,a,s)!==0&&Qe(`Can't set a session config entry: 'powerPreference' - ${u.powerPreference}.`)}}break;case"webgpu":if(o="JS",typeof t!="string"){let u=t;if(u?.preferredLayout){if(u.preferredLayout!=="NCHW"&&u.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${u.preferredLayout}`);let a=ct("preferredLayout",n),s=ct(u.preferredLayout,n);it()._OrtAddSessionConfigEntry(r,a,s)!==0&&Qe(`Can't set a session config entry: 'preferredLayout' - ${u.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${o}`)}let i=ct(o,n);it()._OrtAppendExecutionProvider(r,i)!==0&&Qe(`Can't append execution provider: ${o}.`)}},Bh=r=>{let e=it(),n=0,t=[],o=r||{};kx(o);try{let i=Cx(o.graphOptimizationLevel??"all"),u=Px(o.executionMode??"sequential"),a=typeof o.logId=="string"?ct(o.logId,t):0,s=o.logSeverityLevel??2;if(!Number.isInteger(s)||s<0||s>4)throw new Error(`log serverity level is not valid: ${s}`);let l=o.logVerbosityLevel??0;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log verbosity level is not valid: ${l}`);let d=typeof o.optimizedModelFilePath=="string"?ct(o.optimizedModelFilePath,t):0;if(n=e._OrtCreateSessionOptions(i,!!o.enableCpuMemArena,!!o.enableMemPattern,u,!!o.enableProfiling,0,a,s,l,d),n===0&&Qe("Can't create session options."),o.executionProviders&&Dx(n,o.executionProviders,t),o.freeDimensionOverrides)for(let[p,f]of Object.entries(o.freeDimensionOverrides)){if(typeof p!="string")throw new Error(`free dimension override name must be a string: ${p}`);if(typeof f!="number"||!Number.isInteger(f)||f<0)throw new Error(`free dimension override value must be a non-negative integer: ${f}`);let g=ct(p,t);e._OrtAddFreeDimensionOverride(n,g,f)!==0&&Qe(`Can't set a free dimension override: ${p} - ${f}.`)}return o.extra!==void 0&&ho(o.extra,"",new WeakSet,(p,f)=>{let g=ct(p,t),b=ct(f,t);e._OrtAddSessionConfigEntry(n,g,b)!==0&&Qe(`Can't set a session config entry: ${p} - ${f}.`)}),[n,t]}catch(i){throw n!==0&&e._OrtReleaseSessionOptions(n),t.forEach(u=>e._free(u)),i}}});var Rs,mo,go,Fi,bo,Vi,Ms,at=B(()=>{"use strict";Rs=r=>{switch(r){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${r}`)}},mo=r=>{switch(r){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${r}`)}},go=r=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][r],Fi=r=>{switch(r){case"float16":return Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${r}`)}},bo=r=>{switch(r){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${r}`)}},Vi=r=>r==="float32"||r==="int32"||r==="int64"||r==="bool"||r==="float16"||r==="uint32",Ms=r=>{switch(r){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${r}`)}}});var Bx,Rx,Mh,Lh,zh,Mx,nt,Nr=B(()=>{"use strict";at();Bx=["V","I","W","E","F"],Rx=(r,e)=>{console.log(`[${Bx[r]},${new Date().toISOString()}]${e}`)},zh=(r,e)=>{Mh=r,Lh=e},Mx=(r,e)=>{let n=bo(r),t=bo(Mh);n>=t&&Rx(n,typeof e=="function"?e():e)},nt=(...r)=>{Lh&&Mx(...r)}});var Nh,Fh=B(()=>{"use strict";at();Nh=(r,e)=>new(Fi(e))(r)});var Gi=B(()=>{"use strict"});var Wi,Lx,Vh,zs,Ls,Wh,Uh=B(()=>{"use strict";Nr();Gi();Wi=r=>Math.ceil(r/16)*16,Lx=1,Vh=()=>Lx++,zs=async(r,e,n,t)=>{let o=Wi(n),i=r.device.createBuffer({size:o,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let u=r.getCommandEncoder();r.endComputePass(),u.copyBufferToBuffer(e,0,i,0,o),r.flush(),await i.mapAsync(GPUMapMode.READ);let a=i.getMappedRange();if(t){let s=t();return s.set(new Uint8Array(a,0,n)),s}else return new Uint8Array(a.slice(0,n))}finally{i.destroy()}},Ls=class{constructor(e){this.backend=e;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map}upload(e,n){let t=n.buffer,o=n.byteOffset,i=n.byteLength,u=Wi(i),a=this.storageCache.get(e);if(!a)throw new Error("gpu data for uploading does not exist");if(a.originalSize!==i)throw new Error(`inconsistent data size. gpu data size=${a.originalSize}, data size=${i}`);let s=this.backend.device.createBuffer({mappedAtCreation:!0,size:u,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),l=s.getMappedRange();new Uint8Array(l).set(new Uint8Array(t,o,i)),s.unmap();let d=this.backend.getCommandEncoder();this.backend.endComputePass(),d.copyBufferToBuffer(s,0,a.gpuData.buffer,0,u),nt("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`),this.buffersForUploadingPending.push(s)}memcpy(e,n){let t=this.storageCache.get(e);if(!t)throw new Error("source gpu data for memcpy does not exist");let o=this.storageCache.get(n);if(!o)throw new Error("destination gpu data for memcpy does not exist");if(t.originalSize!==o.originalSize)throw new Error("inconsistent source and destination gpu data size");let i=Wi(t.originalSize),u=this.backend.getCommandEncoder();this.backend.endComputePass(),u.copyBufferToBuffer(t.gpuData.buffer,0,o.gpuData.buffer,0,i)}registerExternalBuffer(e,n,t){let o;if(t){if(o=this.externalBuffers.get(t),o===void 0)throw new Error("previous buffer is not registered");if(e===t)return nt("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${n}) => id=${o}, buffer is the same, skip.`),o;this.externalBuffers.delete(t)}else o=Vh();return this.storageCache.set(o,{gpuData:{id:o,type:0,buffer:e},originalSize:n}),this.externalBuffers.set(e,o),nt("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${n}) => id=${o}, registered.`),o}unregisterExternalBuffer(e){let n=this.externalBuffers.get(e);n!==void 0&&(this.storageCache.delete(n),this.externalBuffers.delete(e),nt("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${n}`))}create(e,n=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let t=Wi(e),o,i=(n&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,u=(n&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(i||u){let s=i?this.freeBuffers:this.freeUniformBuffers,l=s.get(t);l||(l=[],s.set(t,l)),l.length>0?o=l.pop():o=this.backend.device.createBuffer({size:t,usage:n})}else o=this.backend.device.createBuffer({size:t,usage:n});let a={id:Vh(),type:0,buffer:o};return this.storageCache.set(a.id,{gpuData:a,originalSize:e}),nt("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${a.id}`),a}get(e){return this.storageCache.get(e)?.gpuData}release(e){let n=this.storageCache.get(e);if(!n)throw new Error("releasing data does not exist");return nt("verbose",()=>`[WebGPU] GpuDataManager.release(id=${e}), gpuDataId=${n.gpuData.id}`),this.storageCache.delete(e),this.buffersPending.push(n.gpuData.buffer),n.originalSize}async download(e,n){let t=this.storageCache.get(e);if(!t)throw new Error("data does not exist");await zs(this.backend,t.gpuData.buffer,t.originalSize,n)}refreshPendingBuffers(){for(let e of this.buffersForUploadingPending)e.destroy();this.buffersForUploadingPending=[];for(let e of this.buffersPending)(e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(e.size).push(e):(e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(e.size).push(e):e.destroy();this.buffersPending=[]}dispose(){this.freeBuffers.forEach(e=>{e.forEach(n=>{n.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(n=>{n.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map}},Wh=(...r)=>new Ls(...r)});var Ns,ue,et=B(()=>{"use strict";Ns=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},ue=r=>new Ns(r)});var Fs,hr,G,dn,Ui,Hi,qi,Pe=B(()=>{"use strict";Fs=class{static calcMatMulShape(e,n){return e[1]!==n[0]?void 0:[e[0],n[1]]}},hr=class{static calcShape(e,n,t=!1){let o=e.length,i=n.length;if(o===0)return n;if(i===0)return e;let u=Math.max(e.length,n.length),a=new Array(u);if(t){if(o<2||i<2)return;let s=Fs.calcMatMulShape([e[o-2],e[o-1]],[n[i-2],n[i-1]]);if(s===void 0)return;[a[u-2],a[u-1]]=s}for(let s=t?3:1;s<=u;s++){let l=o-s<0?1:e[o-s],d=i-s<0?1:n[i-s];if(l!==d&&l>1&&d>1)return;a[u-s]=Math.max(l,d)}return a}static isValidBroadcast(e,n){let t=e.length,o=n.length;if(t>o)return!1;for(let i=1;i<=t;i++)if(e[t-i]!==1&&e[t-i]!==n[o-i])return!1;return!0}},G=class r{static size(e){return r.getSizeFromDimensionRange(e,0,e.length)}static sizeFromDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,n,e.length)}static sizeToDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeToDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,0,n)}static getSizeFromDimensionRange(e,n,t){let o=1;for(let i=n;i<t;i++){if(e[i]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");o*=e[i]}return o}static computeStrides(e){let n=e.length;if(n===0)return[];if(n===1)return[1];let t=new Array(n);t[n-1]=1,t[n-2]=e[n-1];for(let o=n-3;o>=0;--o)t[o]=t[o+1]*e[o+1];return t}static normalizeAxis(e,n){if(e<-n&&e>=n)throw new Error("unsupported axis for this operation.");return e<0?e+n:e}static normalizeAxes(e,n){return e.map(t=>this.normalizeAxis(t,n??e.length))}static sortBasedOnPerm(e,n){return n?n.map(t=>e[t]):e.slice().reverse()}static padShape(e,n){let t=e.length;return e.map((o,i)=>o+n[i]+n[i+t])}static areEqual(e,n){return e.length!==n.length?!1:e.every((t,o)=>t===n[o])}},dn=class r{static adjustPoolAttributes(e,n,t,o,i,u){if(!e&&t.length!==n.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let a=0;a<n.length-2;a++)a>=t.length?t.push(n[a+2]):t[a]=n[a+2];for(let a=0;a<t.length;a++)if(a<o.length){if(o[a]<0)throw new Error("strides should be greater than or equal to 1")}else o.push(1);for(let a=0;a<t.length;a++)if(a<i.length){if(i[a]<0)throw new Error("dilations should be greater than or equal to 1")}else i.push(1);for(let a=0;a<t.length*2;a++)if(a<u.length){if(u[a]<0)throw new Error("pad should be greater than or equal to 1")}else u.push(0);for(let a=0;a<t.length;a++){if(t[a]<=0)throw new Error("kernel shapes need to be greater than 0");if(u[a]>=t[a]||u[a+t.length]>=t[a])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(e,n,t,o,i,u,a){if(a){if(i.length!==2*(e.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(n.length!==e.length-2)throw new Error("length of strides should be the length of data dimensions");if(o.length!==e.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let s=0;s<e.length-2;s++)r.adjustPadAndReturnShape(e[s+(u?1:2)],n[s],t[s],o[s],i,s,s+e.length-2,a)}}static computePoolOutputShape(e,n,t,o,i,u,a){if(n.length<=0)throw new Error("input shape must be of size greater than 0");let s=[n[0],n[1]];return r.computeShapeHelper(e,n,s,t,o,i,u,a),s}static computeConvOutputShape(e,n,t,o,i,u,a){if(e.length<=0||n.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let s=[e[0],n[0]];return r.computeShapeHelper(!1,e,s,t,o,i,u,a),s}static computeShapeHelper(e,n,t,o,i,u,a,s){if(e)for(let l=0;l<n.length-2;l++)t.push(1);else for(let l=0;l<n.length-2;l++)t.push(r.adjustPadAndReturnShape(n[l+2],o[l],i[l],u[l],a,l,l+n.length-2,s))}static adjustPadAndReturnShape(e,n,t,o,i,u,a,s){let l=t*(o-1)+1;if(s&&s!=="NOTSET")switch(s){case"VALID":return i[u]=0,i[a]=0,Math.floor((e-l)/n+1);case"SAME_LOWER":case"SAME_UPPER":if(t!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let p=((e+n-1)/n-1)*n+o-e;return i[u]=Math.floor(s==="SAME_LOWER"?(p+1)/2:p/2),i[a]=p-i[u],Math.floor((e+p-o)/n+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((e+i[u]+i[a]-l)/n+1)}},Ui=class{static getShapeOfGemmResult(e,n,t,o,i){if(e.length!==2||t.length!==2)throw new Error("shape need to be of size 2");let u,a,s;n?(u=e[1],a=e[0]):(u=e[0],a=e[1]);let l=-1;if(o?(s=t[0],l=1):(s=t[1],l=0),t[l]!==a)throw new Error("dimension mismatch");if(u<=0||s<=0||a<=0)throw new Error("invalid shape specified");if(i&&!hr.isValidBroadcast(i,[u,s]))throw new Error("gemm: invalid bias shape for broadcast");return[u,s,a]}},Hi=-34028234663852886e22,qi=34028234663852886e22});var zx,Hh,je,pe,Mt,$t,er,tr,Et,Gs,U,ee,qh,Vs,jh,Ws,tt,ke=B(()=>{"use strict";at();Pe();zx=64,Hh=(r,e)=>{if(e===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(r){case 10:return e>1?`vec${e}<f16>`:"f16";case 1:return e>1?`vec${e}<f32>`:"f32";case 6:return e>1?`vec${e}<i32>`:"i32";case 12:return e>1?`vec${e}<u32>`:"u32";case 7:if(e>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(e>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(e!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${r}`)}},je=(r,e=1)=>{let n=Hh(r,e);return typeof n=="string"?n:n[0]},pe=r=>r.length===0?[]:[{type:"uint32",data:r},{type:"uint32",data:G.computeStrides(r)}],Mt=r=>r%4===0?4:r%2===0?2:1,$t=(r="f32",e,n="0")=>!e||e===1?`${r}(${n})`:`vec${e}<${r}>(${n})`,er=(r,e,n)=>r==="f32"?n:e===1?`f32(${n})`:`vec${e}f(${n})`,tr=(r,e)=>e===4?`(${r}.x + ${r}.y + ${r}.z + ${r}.w)`:e===2?`(${r}.x + ${r}.y)`:e===3?`(${r}.x + ${r}.y + ${r}.z)`:r,Et=(r,e,n)=>r.startsWith("uniforms.")&&n>4?typeof e=="string"?`${r}[(${e}) / 4][(${e}) % 4]`:`${r}[${Math.floor(e/4)}][${e%4}]`:n>1?`${r}[${e}]`:r,Gs=(r,e,n,t,o)=>{let i=typeof n=="number",u=i?n:n.length,a=[...new Array(u).keys()],s=u<2?"u32":u<=4?`vec${u}<u32>`:`array<u32, ${u}>`,l=Hh(e,o),d=typeof l=="string"?l:l[1],p=typeof l=="string"?l:l[0],f={indices:s,value:d,storage:p,tensor:e},g=X=>typeof X=="string"?X:`${X}u`,b={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},y=i?"uniforms.":"",$=`${y}${r}_shape`,x=`${y}${r}_strides`,I="";for(let X=0;X<u-1;X++)I+=`
    let dim${X} = current / ${Et(x,X,u)};
    let rest${X} = current % ${Et(x,X,u)};
    indices[${X}] = dim${X};
    current = rest${X};
    `;I+=`indices[${u-1}] = current;`;let O=u<2?"":`
  fn o2i_${r}(offset: u32) -> ${f.indices} {
    var indices: ${f.indices};
    var current = offset;
    ${I}
    return indices;
  }`,C=X=>(b.offsetToIndices=!0,u<2?X:`o2i_${r}(${X})`),N=[];if(u>=2)for(let X=u-1;X>=0;X--)N.push(`${Et(x,X,u)} * (indices[${X}])`);let R=u<2?"":`
  fn i2o_${r}(indices: ${f.indices}) -> u32 {
    return ${N.join("+")};
  }`,V=X=>(b.indicesToOffset=!0,u<2?X:`i2o_${r}(${X})`),W=(...X)=>u===0?"0u":`${f.indices}(${X.map(g).join(",")})`,j=(X,we)=>u<2?`${X}`:`${Et(X,we,u)}`,ie=(X,we,Ae)=>u<2?`${X}=${Ae};`:`${Et(X,we,u)}=${Ae};`,P={},Q=(X,we)=>{b.broadcastedIndicesToOffset=!0;let Ae=`${we.name}broadcastedIndicesTo${r}Offset`;if(Ae in P)return`${Ae}(${X})`;let yt=[];for(let Pt=u-1;Pt>=0;Pt--){let ot=we.indicesGet("outputIndices",Pt+we.rank-u);yt.push(`${j(x,Pt)} * (${ot} % ${j($,Pt)})`)}return P[Ae]=`fn ${Ae}(outputIndices: ${we.type.indices}) -> u32 {
             return ${yt.length>0?yt.join("+"):"0u"};
           }`,`${Ae}(${X})`},Se=(X,we)=>(()=>{if(f.storage===f.value)return`${r}[${X}]=${we};`;if(f.storage==="vec2<u32>"&&f.value==="i32")return`${r}[${X}]=vec2<u32>(u32(${we}), select(0u, 0xFFFFFFFFu, ${we} < 0));`;if(f.storage==="vec2<u32>"&&f.value==="u32")return`${r}[${X}]=vec2<u32>(u32(${we}), 0u);`;if(f.storage==="u32"&&f.value==="vec4<bool>")return`${r}[${X}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${we}));`;throw new Error(`not supported combination of storage type ${f.storage} and value type ${f.value} yet`)})(),le=X=>(()=>{if(f.storage===f.value)return`${r}[${X}]`;if(f.storage==="vec2<u32>"&&f.value==="i32")return`i32(${r}[${X}].x)`;if(f.storage==="vec2<u32>"&&f.value==="u32")return`u32(${r}[${X}].x)`;if(f.storage==="u32"&&f.value==="vec4<bool>")return`vec4<bool>(bool(${r}[${X}] & 0xFFu), bool(${r}[${X}] & 0xFF00u), bool(${r}[${X}] & 0xFF0000u), bool(${r}[${X}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${f.storage} and value type ${f.value} yet`)})(),Me=u<2?"":`
  fn get_${r}ByIndices(indices: ${f.indices}) -> ${d} {
    return ${le(`i2o_${r}(indices)`)};
  }`,te=u<2?"":(()=>{let X=a.map(Ae=>`d${Ae}: u32`).join(", "),we=a.map(Ae=>`d${Ae}`).join(", ");return`
  fn get_${r}(${X}) -> ${d} {
    return get_${r}ByIndices(${W(we)});
  }`})(),Le=(...X)=>{if(X.length!==u)throw new Error(`indices length must be ${u}`);let we=X.map(g).join(",");return u===0?le("0u"):u===1?le(we[0]):(b.get=!0,b.getByIndices=!0,b.indicesToOffset=!0,`get_${r}(${we})`)},Ue=X=>u<2?le(X):(b.getByIndices=!0,b.indicesToOffset=!0,`get_${r}ByIndices(${X})`),qe=u<2?"":`
  fn set_${r}ByIndices(indices: ${f.indices}, value: ${d}) {
    ${Se(`i2o_${r}(indices)`,"value")}
  }`,Ee=u<2?"":(()=>{let X=a.map(Ae=>`d${Ae}: u32`).join(", "),we=a.map(Ae=>`d${Ae}`).join(", ");return`
  fn set_${r}(${X}, value: ${d}) {
    set_${r}ByIndices(${W(we)}, value);
  }`})();return{impl:()=>{let X=[];return i||(X.push(`const ${$} = ${f.indices}(${n.join(",")});`),X.push(`const ${x} = ${f.indices}(${G.computeStrides(n).join(",")});`)),b.offsetToIndices&&X.push(O),b.indicesToOffset&&X.push(R),b.broadcastedIndicesToOffset&&Object.values(P).forEach(we=>X.push(we)),b.set&&X.push(Ee),b.setByIndices&&X.push(qe),b.get&&X.push(te),b.getByIndices&&X.push(Me),X.join(`
`)},type:f,offsetToIndices:C,indicesToOffset:V,broadcastedIndicesToOffset:Q,indices:W,indicesGet:j,indicesSet:ie,set:(...X)=>{if(X.length!==u+1)throw new Error(`indices length must be ${u}`);let we=X[u];if(typeof we!="string")throw new Error("value must be string");let Ae=X.slice(0,u).map(g).join(",");return u===0?Se("0u",we):u===1?Se(Ae[0],we):(b.set=!0,b.setByIndices=!0,b.indicesToOffset=!0,`set_${r}(${Ae}, ${we})`)},setByOffset:Se,setByIndices:(X,we)=>u<2?Se(X,we):(b.setByIndices=!0,b.indicesToOffset=!0,`set_${r}ByIndices(${X}, ${we});`),get:Le,getByOffset:le,getByIndices:Ue,usage:t,name:r,strides:x,shape:$,rank:u}},U=(r,e,n,t=1)=>Gs(r,e,n,"input",t),ee=(r,e,n,t=1)=>Gs(r,e,n,"output",t),qh=(r,e,n,t=1)=>Gs(r,e,n,"internal",t),Vs=class{constructor(e){this.normalizedDispatchGroup=e;this.internalVariables=[];this.variables=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e=="number"?`${e}u`:e}) { return; }`}mainStart(e=zx){let n=typeof e=="number"?e:e[0],t=typeof e=="number"?1:e[1],o=typeof e=="number"?1:e[2],i=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,u=i?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(local_invocation_index) local_index : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,a=i?"let global_idx = global_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${n*t*o}u + local_index;`;return`@compute @workgroup_size(${n}, ${t}, ${o})
  fn main(${u}) {
    ${a}
  `}appendVariableUniforms(e){e.rank!==0&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,n){if(e.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let t=e.usage==="input"?"read":"read_write",o=e.type.storage;return`@group(0) @binding(${n}) var<storage, ${t}> ${e.name}: array<${o}>;`}declareVariables(...e){return e.map(n=>this.declareVariable(n,this.variableIndex++)).join(`
`)}registerInternalVariable(e){if(e.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach(n=>this.registerInternalVariable(n)),this}registerUniform(e,n,t=1){return this.uniforms.push({name:e,type:n,length:t}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let e=[];for(let{name:n,type:t,length:o}of this.uniforms)if(o&&o>4)e.push(`${n}:array<vec4<${t}>, ${Math.ceil(o/4)}>`);else{let i=o==null||o===1?t:`vec${o}<${t}>`;e.push(`${n}:${i}`)}return`
      struct Uniforms { ${e.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(e=>e.impl()).join(`
`)+this.internalVariables.map(e=>e.impl()).join(`
`)}},jh=r=>new Vs(r),Ws=(r,e)=>{let n=r.length,t=[];for(let o=0;o<n;o++){let i=n-1-o,u=r[i]||1;(e[e.length-1-o]||1)>1&&u===1&&t.unshift(i)}return t},tt=r=>!0});var Nx,Kh,Fx,Vx,rr,Yh,Xh,Dn=B(()=>{"use strict";Pe();et();ke();Nx=r=>{if(!r||r.length!==1)throw new Error("Transpose requires 1 input.")},Kh=(r,e)=>e&&e.length!==r?[...new Array(r).keys()].reverse():e,Fx=(r,e)=>G.sortBasedOnPerm(r,Kh(r.length,e)),Vx=(r,e,n,t)=>{let o=[];o.push(`fn perm(i: ${t.type.indices}) -> ${n.type.indices} {
    var a: ${n.type.indices};`);for(let i=0;i<e;++i)o.push(n.indicesSet("a",r[i],`i[${i}]`));return o.push("return a;}"),o.join(`
`)},rr=(r,e)=>{let n=r.dataType,t=r.dims.length,o=Kh(t,e),i=tt(t),u=Fx(r.dims,o),a=i?u.length:u,s=i?t:r.dims,l=ee("output",n,a),d=U("a",n,s),p=f=>`
  ${f.registerUniform("output_size","u32").declareVariables(d,l)}

  ${Vx(o,t,d,l)}

  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${l.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${l.setByOffset("global_idx",d.getByIndices("aIndices"))}
  }`;return{name:"Transpose",shaderCache:{hint:`${e}`,inputDependencies:i?["rank"]:["dims"]},getRunData:f=>{let g=G.size(u);return{outputs:[{dims:u,dataType:f[0].dataType}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:i?[{type:"uint32",data:g},...pe(f[0].dims),...pe(u)]:[{type:"uint32",data:g}]}},getShaderSource:p}},Yh=(r,e)=>{Nx(r.inputs),r.compute(rr(r.inputs[0],e.perm))},Xh=r=>ue({perm:r.perm})});var Gx,Wx,Ux,Hx,qx,jx,Kx,Yx,Xx,Zx,mr,Zh,Jh,Qh,em,tm,rm,nm,om,im,am,sm=B(()=>{"use strict";Pe();ke();ji();Dn();Gx={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},Wx={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},Ux={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},Hx={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},qx=(r,e)=>{let n=[];for(let t=e-r;t<e;++t)n.push(t);return n},jx=(r,e)=>{let n=[],t=r.length;for(let i=0;i<t;i++)e.indexOf(i)===-1&&n.push(r[i]);let o=e.map(i=>r[i]);return[n,o]},Kx=(r,e)=>{let n=r.length+e.length,t=[],o=0;for(let i=0;i<n;i++)e.indexOf(i)===-1?t.push(r[o++]):t.push(1);return t},Yx=(r,e)=>{for(let n=0;n<r.length;++n)if(r[r.length-n-1]!==e-1-n)return!1;return!0},Xx=(r,e)=>{let n=[];if(!Yx(r,e)){for(let t=0;t<e;++t)r.indexOf(t)===-1&&n.push(t);r.forEach(t=>n.push(t))}return n},Zx=(r,e,n,t,o,i,u)=>{let a=n[0].dims,s=G.size(i),l=G.size(u),d=U("_A",n[0].dataType,a),p=ee("output",o,i),f=32,g=`
          var<workgroup> aBestValues : array<${p.type.storage}, ${f}>;
       `;return{name:r,shaderCache:e,getShaderSource:y=>`
        ${y.registerUniform("reduceSize","u32").declareVariables(d,p)}
        ${g}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${y.mainStart(f)}
          let local_idx = local_id.x;

          let outputIndex = global_idx / ${f};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = ${p.type.storage}(${Ux[t]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${f}) {
           let candidate = ${p.type.storage}(${d.getByOffset("offset + k")});
           bestValue = ${Gx[t]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${f}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${Wx[t]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${p.setByOffset("outputIndex",`${t==="mean"?`bestValue / ${p.type.storage}(uniforms.reduceSize)`:`${Hx[t]}`}`)};
         }
        }`,getRunData:()=>({outputs:[{dims:i,dataType:o}],dispatchGroup:{x:s},programUniforms:[{type:"uint32",data:l}]})}},mr=(r,e,n,t)=>{let o=r.inputs.length===1?n:Us(r.inputs,n),i=o.axes;i.length===0&&!o.noopWithEmptyAxes&&(i=r.inputs[0].dims.map((g,b)=>b));let u=G.normalizeAxes(i,r.inputs[0].dims.length),a=u,s=r.inputs[0],l=Xx(a,r.inputs[0].dims.length);l.length>0&&(s=r.compute(rr(r.inputs[0],l),{inputs:[0],outputs:[-1]})[0],a=qx(a.length,s.dims.length));let[d,p]=jx(s.dims,a),f=d;o.keepDims&&(f=Kx(d,u)),r.compute(Zx(e,{hint:o.cacheKey,inputDependencies:["type"]},[s],t,r.inputs[0].dataType,f,p),{inputs:[s]})},Zh=(r,e)=>{mr(r,"ReduceMeanShared",e,"mean")},Jh=(r,e)=>{mr(r,"ReduceL1Shared",e,"l1")},Qh=(r,e)=>{mr(r,"ReduceL2Shared",e,"l2")},em=(r,e)=>{mr(r,"ReduceLogSumExpShared",e,"logSumExp")},tm=(r,e)=>{mr(r,"ReduceMaxShared",e,"max")},rm=(r,e)=>{mr(r,"ReduceMinShared",e,"min")},nm=(r,e)=>{mr(r,"ReduceProdShared",e,"prod")},om=(r,e)=>{mr(r,"ReduceSumShared",e,"sum")},im=(r,e)=>{mr(r,"ReduceSumSquareShared",e,"sumSquare")},am=(r,e)=>{mr(r,"ReduceLogSumShared",e,"logSum")}});var gr,Jx,Ki,Us,br,Qx,e2,t2,r2,n2,o2,i2,a2,s2,u2,yr,um,lm,dm,cm,fm,pm,hm,mm,gm,bm,nr,ji=B(()=>{"use strict";Pe();et();ke();sm();gr=r=>{if(!r||r.length===0||r.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(r.length===2&&r[1].dims.length!==1)throw new Error("Invalid axes input dims.")},Jx=r=>["","",`var value = ${r.getByOffset("inputOffset")};`,""],Ki=(r,e,n,t,o,i,u=!1,a=!1)=>{let s=[],l=n[0].dims,d=G.normalizeAxes(o,n[0].dims.length),p=!a&&d.length===0;l.forEach((V,W)=>{p||d.indexOf(W)>=0?u&&s.push(1):s.push(V)});let f=[],g=U("_A",n[0].dataType,l),b=ee("output",i,s),y=t(g,b,d),$=`inputOffset = ${g.indicesToOffset("inputIndices")};`,x=`let ${$};`,I=`var ${$};`,O=y[1]===""?"":I,C=(y[1]===""?x:$)+`
`+y[2];for(let V=0,W=0;V<n[0].dims.length;V++)p||d.indexOf(V)>=0?(u&&W++,C=`for(var j${V}: u32 = 0; j${V} < ${n[0].dims[V]}; j${V}++) {
                ${y[2].includes("lastIndex")?`let lastIndex = j${V};`:""}
                ${g.indicesSet("inputIndices",V,`j${V}`)}
                ${C}
              }`):(f.push(`${g.indicesSet("inputIndices",V,b.indicesGet("outputIndices",W))};`),W++);let N=G.size(s);return{name:r,shaderCache:e,getShaderSource:V=>`
        ${V.declareVariables(g,b)}

        ${V.mainStart()}
          ${V.guardAgainstOutOfBoundsWorkgroupSizes(N)}
          var inputIndices: ${g.type.indices};
          let outputIndices = ${b.offsetToIndices("global_idx")};

          ${f.join(`
`)}
          ${y[0]}       // init ops for reduce max/min
          ${O}
          ${y[1]}
          ${C}
          ${y[3]}
          ${y.length===4?b.setByOffset("global_idx","value"):y.slice(4).join(`
`)}
        }`,getRunData:()=>({outputs:[{dims:s,dataType:i}],dispatchGroup:{x:Math.ceil(N/64)}})}},Us=(r,e)=>{let n=[];return r[1].dims[0]>0&&r[1].getBigInt64Array().forEach(t=>n.push(Number(t))),ue({axes:n,keepDims:e.keepDims,noopWithEmptyAxes:e.noopWithEmptyAxes})},br=(r,e,n,t)=>{let o=r.inputs,i=o.length===1?n:Us(o,n);r.compute(Ki(e,{hint:i.cacheKey},[o[0]],i.noopWithEmptyAxes&&i.axes.length===0?Jx:t,i.axes,o[0].dataType,i.keepDims,i.noopWithEmptyAxes),{inputs:[0]})},Qx=(r,e)=>{gr(r.inputs),br(r,"ReduceLogSum",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += ${t.getByOffset("inputOffset")};`,"value = log(value);"])},e2=(r,e)=>{gr(r.inputs),br(r,"ReduceL1",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += abs(${t.getByOffset("inputOffset")});`,""])},t2=(r,e)=>{gr(r.inputs),br(r,"ReduceL2",e,(t,o)=>[`var t = ${o.type.value}(0); var value = ${o.type.value}(0);`,"",`t = ${t.getByOffset("inputOffset")}; value += (t * t);`,"value = sqrt(value);"])},r2=(r,e)=>{gr(r.inputs),br(r,"ReduceLogSumExp",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += exp(${t.getByOffset("inputOffset")});`,"value = log(value);"])},n2=(r,e)=>{gr(r.inputs),br(r,"ReduceMax",e,(t,o,i)=>{let u=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&u.push(t.indicesSet("inputIndices",a,0));return[`${u.join(`
`)}`,`var value = ${t.getByOffset("inputOffset")};`,`value = max(value, ${t.getByOffset("inputOffset")});`,""]})},o2=(r,e)=>{gr(r.inputs),br(r,"ReduceMean",e,(t,o,i)=>{let u=1;for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&(u*=r.inputs[0].dims[a]);return["var sum = f32(0);","",`sum += f32(${t.getByOffset("inputOffset")});`,`let value = ${o.type.value}(sum / ${u});`]})},i2=(r,e)=>{gr(r.inputs),br(r,"ReduceMin",e,(t,o,i)=>{let u=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&u.push(`inputIndices[${a}] = 0;`);return[`${u.join(`
`)}`,`var value = ${t.getByOffset("inputOffset")};`,`value = min(value, ${t.getByOffset("inputOffset")});`,""]})},a2=(r,e)=>{gr(r.inputs),br(r,"ReduceProd",e,(t,o)=>[`var value = ${o.type.storage}(1);`,"",`value *= ${t.getByOffset("inputOffset")};`,""])},s2=(r,e)=>{gr(r.inputs),br(r,"ReduceSum",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += ${t.getByOffset("inputOffset")};`,""])},u2=(r,e)=>{gr(r.inputs),br(r,"ReduceSumSquare",e,(t,o)=>[`var t = ${o.type.value}(0); var value = ${o.type.value}(0);`,"",`t = ${t.getByOffset("inputOffset")}; value += t * t;`,""])},yr=(r,e,n)=>{if(e.length===0)return!!n;let t=1,o=1;for(let i=0;i<e.length;i++)e.indexOf(i)===-1?t*=r[i]:o*=r[i];return o<32&&t>1024},um=(r,e)=>{yr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?o2(r,e):Zh(r,e)},lm=(r,e)=>{yr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?e2(r,e):Jh(r,e)},dm=(r,e)=>{yr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?t2(r,e):Qh(r,e)},cm=(r,e)=>{yr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?r2(r,e):em(r,e)},fm=(r,e)=>{yr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?n2(r,e):tm(r,e)},pm=(r,e)=>{yr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?i2(r,e):rm(r,e)},hm=(r,e)=>{yr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?a2(r,e):nm(r,e)},mm=(r,e)=>{yr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?s2(r,e):om(r,e)},gm=(r,e)=>{yr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?u2(r,e):im(r,e)},bm=(r,e)=>{yr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Qx(r,e):am(r,e)},nr=r=>ue(r)});var ym,vm,wm,Hs,xm=B(()=>{"use strict";at();et();ji();ym=r=>{if(!r||r.length===0||r.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(r[0].dataType!==1)throw new Error("Invalid input type.")},vm=(r,e)=>{ym(r.inputs);let n=(t,o,i)=>{let u=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&u.push(`inputIndices[${a}] = 0;`);return[`${u.join(`
`)}`,`var value = ${t.getByOffset("inputOffset")};
var bestIndex : i32 = 0;`,`if (${t.getByOffset("inputOffset")} ${e.selectLastIndex>0?"<=":"<"} value) {
         value = ${t.getByOffset("inputOffset")};
         bestIndex = i32(lastIndex);
       }`,"",o.setByOffset("global_idx","bestIndex")]};r.compute(Ki("ArgMin",{hint:e.cacheKey},[r.inputs[0]],n,[e.axis],7,e.keepDims),{inputs:[0]})},wm=(r,e)=>{ym(r.inputs);let n=(t,o,i)=>{let u=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&u.push(`inputIndices[${a}] = 0;`);return[`${u.join(`
`)}`,`var value = ${t.getByOffset("inputOffset")};
var bestIndex : i32 = 0;`,`if (${t.getByOffset("inputOffset")} ${e.selectLastIndex>0?">=":">"} value) {
         value = ${t.getByOffset("inputOffset")};
         bestIndex = i32(lastIndex);
       }`,"",o.setByOffset("global_idx","bestIndex")]};r.compute(Ki("argMax",{hint:e.cacheKey},[r.inputs[0]],n,[e.axis],7,e.keepDims),{inputs:[0]})},Hs=r=>ue(r)});var l2,Tm,d2,c2,f2,Yi,p2,$m,qs=B(()=>{"use strict";et();Gi();ke();l2=(r,e)=>{let n=r[0],t=r[1],o=r[2],i=r[3],u=r[4],a=r[5];if(u&&a)throw new Error("Attention cannot have both past and relative_position_bias");if(n.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let s=n.dims[0],l=n.dims[1],d=n.dims[2];if(o.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(t.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(t.dims[0]!==d)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(o.dims[0]!==t.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let p=o.dims[0]/3,f=p,g=f;if(e.qkvHiddenSizes.length>0){if(e.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let O of e.qkvHiddenSizes)if(O%e.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");p=e.qkvHiddenSizes[0],f=e.qkvHiddenSizes[1],g=e.qkvHiddenSizes[2]}let b=l;if(p!==f)throw new Error("qkv_hidden_sizes first element should be same as the second");if(o.dims[0]!==p+f+g)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let y=0;if(u){if(f!==g)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(u.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(u.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(u.dims[1]!==s)throw new Error('Input "past" second dimension must be batch_size');if(u.dims[2]!==e.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(u.dims[4]!==f/e.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');e.pastPresentShareBuffer||(y=u.dims[3])}let $=b+y,x=-1,I=0;if(i)throw new Error("Mask not supported");if(u)throw new Error("past is not supported");if(a)throw new Error("relativePositionBias is not supported");return{batchSize:s,sequenceLength:l,pastSequenceLength:y,kvSequenceLength:b,totalSequenceLength:$,maxSequenceLength:x,inputHiddenSize:d,hiddenSize:p,vHiddenSize:g,headSize:Math.floor(p/e.numHeads),vHeadSize:Math.floor(g/e.numHeads),numHeads:e.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:e.maskFilterValue,maskType:I,scale:e.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},Tm=r=>ue({...r}),d2=(r,e,n,t)=>{let o=Mt(t),i=ee("x",e.dataType,e.dims,o),u="threadMaxVector";o===2?u="max(threadMaxVector.x, threadMaxVector.y)":o===4&&(u="max(max(threadMaxVector.x, threadMaxVector.y), max(threadMaxVector.z, threadMaxVector.w))");let a=je(e.dataType),s=64,l=t/o;l<s?s=1:l/8<64&&(s=Math.ceil(l/8));let d=Math.ceil(t/o/s),p=f=>`
  const dInv: ${a} = 1 / ${t};
  const dComp = ${t/o};
  var<workgroup> wgMax: array<f32, ${s}>;
  var<workgroup> wgSum: array<f32, ${s}>;

  ${f.declareVariables(i)}
  @compute @workgroup_size(${s}, 1, 1)
  fn main(@builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_index : u32) {
    let localOffset = local_index * ${d};
    let offset: u32 = workgroup_id.x * dComp + localOffset;

    var threadMaxVector = ${$t("f32",o,"-3.402823e+38f")};
    for (var i: u32 = 0; i < ${d} && i + localOffset < dComp; i++) {
      threadMaxVector = max(${er(a,o,"x[offset + i]")}, threadMaxVector);
    }
    wgMax[local_index] = ${u};
    workgroupBarrier();

    var maxValue = -3.402823e+38f;
    for (var i = 0u; i < ${s}; i++) {
      maxValue = max(wgMax[i], maxValue);
    }

    var sumVector = ${$t("f32",o,"0")};
    for (var i: u32 = 0; i < ${d} && i + localOffset < dComp; i++) {
      sumVector += exp(${er(a,o,"x[offset + i]")} - maxValue);
    }
    wgSum[local_index] = ${tr("sumVector",o)};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${s}; i++) {
      sum += wgSum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < ${d} && i + localOffset < dComp; i++) {
        x[offset + i] = ${$t(a,o,"dInv")};
      }
    } else {
      for (var i: u32 = 0; i < ${d} && i + localOffset < dComp; i++) {
        let f32input = ${er(a,o,"x[offset + i]")};
        x[offset + i] = ${i.type.value}(exp(f32input - maxValue) / sum);
      }
    }
  }`;r.compute({name:"AttentionProbsSoftmax",shaderCache:{hint:`${t}`},getShaderSource:p,getRunData:()=>({outputs:[],dispatchGroup:{x:n}})},{inputs:[e],outputs:[]})},c2=(r,e,n,t,o,i)=>{let u=[o.batchSize,o.numHeads,o.sequenceLength,o.kvSequenceLength+o.pastSequenceLength],a=i.scale===0?1/Math.sqrt(o.headSize):i.scale,s=je(e.dataType),l=Mt(o.headSize),d=U("q",e.dataType,e.dims,l),p=U("key",n.dataType,n.dims,l),f=ee("output",e.dataType,u),g=o.headSize/l,b=o.sequenceLength,y=o.totalSequenceLength,$=g,x=12,I={x:Math.ceil(o.totalSequenceLength/x),y:Math.ceil(o.sequenceLength/x),z:o.batchSize*o.numHeads},O=[e,n],C=R=>`
  const M: u32 = ${b}u;
  const N: u32 = ${y}u;
  const K: u32 = ${$}u;
  const alpha: ${s} = ${a};
  const beta: ${s} = 1.0;
  const TILE_SIZE = ${x}u;

  var<workgroup> tileQ: array<${d.type.storage}, ${x*x}>;
  var<workgroup> tileK: array<${d.type.storage}, ${x*x}>;

  ${R.declareVariables(d,p,f)}

  @compute @workgroup_size(${x}, ${x}, 1)
  fn main(@builtin(workgroup_id) workgroup_id : vec3<u32>,
   @builtin(local_invocation_id) local_id : vec3<u32>, @builtin(local_invocation_index) local_index : u32) {
   let global_idx = (workgroup_id.z * ${I.x*I.y}u +
          workgroup_id.y * ${I.x}u + workgroup_id.x) * ${x*x}u + local_index;

    // x holds the N and y holds the M
    let headIdx = workgroup_id.z;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let lm = m + local_id.y;
    let ln = n + local_id.x;

    let qOffset = ${o.sequenceLength*g} * headIdx + m * K;
    let kOffset = ${o.kvSequenceLength*g} * headIdx + n * K;

    var value = ${$t(s,l)};
    for (var w: u32 = 0u; w < K; w += TILE_SIZE) {
      if (m + local_id.y < M && w + local_id.x < K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * K + w + local_id.x];
      }
      if (n + local_id.y < N && w + local_id.x < K) {
        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * K + w + local_id.x];
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k<TILE_SIZE && w+k < K; k++) {
        value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k];
      }

      workgroupBarrier();
    }

    let headOffset = headIdx * M * N;
    if (lm < M && ln < N) {
      let outputIdx = headOffset + lm * N + ln;
      output[outputIdx] = ${tr("value",l)} * alpha;
    }
  }`,N=r.compute({name:"AttentionProbs",shaderCache:{hint:JSON.stringify(o)},getRunData:()=>({outputs:[{dims:u,dataType:e.dataType,gpuDataType:0}],dispatchGroup:I}),getShaderSource:C},{inputs:O,outputs:[-1]})[0];return d2(r,N,o.batchSize*o.numHeads*o.sequenceLength,o.totalSequenceLength),N},f2=(r,e,n,t)=>{let o=[t.batchSize,t.sequenceLength,t.vHiddenSize],i=U("probs",e.dataType,e.dims),u=U("v",n.dataType,n.dims),a=ee("output",e.dataType,o),s=je(e.dataType),l=12,d={x:Math.ceil(t.vHeadSize/l),y:Math.ceil(t.sequenceLength/l),z:t.batchSize*t.numHeads},p=f=>`
  const M: u32 = ${t.sequenceLength}u;
  const N: u32 = ${t.vHeadSize}u;
  const K: u32 = ${t.totalSequenceLength}u;
  const numHeads: u32 = ${t.numHeads}u;
  const TILE_SIZE = ${l}u;

  var<workgroup> tileQ: array<${i.type.storage}, ${l*l}>;
  var<workgroup> tileK: array<${i.type.storage}, ${l*l}>;

  ${f.declareVariables(i,u,a)}

  @compute @workgroup_size(${l}, ${l}, 1)
  fn main(@builtin(workgroup_id) workgroup_id : vec3<u32>,
   @builtin(local_invocation_id) local_id : vec3<u32>, @builtin(local_invocation_index) local_index : u32) {
   let global_idx = (workgroup_id.z * ${d.x*d.y}u +
          workgroup_id.y * ${d.x}u + workgroup_id.x) * ${l*l}u + local_index;

   let headIdx = workgroup_id.z;
   let m = workgroup_id.y * TILE_SIZE + local_id.y;
   let n = workgroup_id.x * TILE_SIZE + local_id.x;

   let offsetA = headIdx * (M * K) + m * K;
   let offsetB = headIdx * (N * K) + n;

   var value = ${s}(0);
   for (var w: u32 = 0u; w < K; w += TILE_SIZE) {
     if (m < M && w + local_id.x < K) {
       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
     }
     if (n < N && w + local_id.y < K) {
       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * N];
     }
     workgroupBarrier();
     for (var k: u32 = 0u; k<TILE_SIZE && w+k < K; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   let batchIdx = workgroup_id.z / ${t.numHeads};
   let currentBatchHeadNumber = workgroup_id.z % ${t.numHeads};
   let headOffset = (batchIdx * M * ${t.numHeads} + currentBatchHeadNumber) * ${t.vHeadSize};
   if (m < M && n < N) {
     let outputIdx = batchIdx * ${t.sequenceLength*t.vHiddenSize} + m * ${t.vHiddenSize}
       + currentBatchHeadNumber * ${t.vHeadSize} + n;
     output[outputIdx] = value;
   }
  }`;return r.compute({name:"AttentionScore",shaderCache:{hint:JSON.stringify(t)},getRunData:()=>({outputs:[{dims:o,dataType:e.dataType,gpuDataType:0}],dispatchGroup:d}),getShaderSource:p},{inputs:[e,n],outputs:[0]})[0]},Yi=(r,e,n,t,o,i,u,a,s,l,d)=>{let p=c2(r,e,n,s,l,d);f2(r,p,t,l)},p2=(r,e)=>{let n=[e.batchSize,e.numHeads,e.sequenceLength,e.headSize],t=je(r.inputs[0].dataType),o=e.sequenceLength,i=e.inputHiddenSize,u=e.headSize,a=12,s={x:Math.ceil(e.headSize/a),y:Math.ceil(e.sequenceLength/a),z:e.batchSize*e.numHeads},l=()=>`
  const M: u32 = ${o}u;
  const K: u32 = ${i}u;
  const N: u32 = ${u}u;
  const numHeads: u32 = ${e.numHeads};
  const ldb = ${e.hiddenSize+e.hiddenSize+e.vHiddenSize}u;
  const TILE_SIZE = ${a}u;

  var<workgroup> tileInput: array<${t}, ${a*a}>;
  var<workgroup> tileWeightQ: array<${t}, ${a*a}>;
  var<workgroup> tileWeightK: array<${t}, ${a*a}>;
  var<workgroup> tileWeightV: array<${t}, ${a*a}>;

  @group(0) @binding(0) var<storage, read> input: array<${t}>;
  @group(0) @binding(1) var<storage, read> weight: array<${t}>;
  @group(0) @binding(2) var<storage, read> bias: array<${t}>;
  @group(0) @binding(3) var<storage, read_write> outputQ: array<${t}>;
  @group(0) @binding(4) var<storage, read_write> outputK: array<${t}>;
  @group(0) @binding(5) var<storage, read_write> outputV: array<${t}>;

  @compute @workgroup_size(${a}, ${a}, 1)
  fn main(@builtin(workgroup_id) workgroup_id : vec3<u32>,
   @builtin(local_invocation_id) local_id : vec3<u32>, @builtin(local_invocation_index) local_index : u32) {
   let global_idx = (workgroup_id.z * ${s.x*s.y}u +
          workgroup_id.y * ${s.x}u + workgroup_id.x) * ${a*a}u + local_index;

    let batchIndex = workgroup_id.z / ${e.numHeads};
    let headNumber = workgroup_id.z % ${e.numHeads};
    let m = workgroup_id.y * TILE_SIZE + local_id.y;
    let n = workgroup_id.x * TILE_SIZE + local_id.x;

    let inputOffset = batchIndex * (M * K) + m * K;
    let biasOffsetQ = headNumber * ${e.headSize};
    let biasOffsetK = ${e.hiddenSize} + biasOffsetQ;
    let biasOffsetV = ${e.hiddenSize} + biasOffsetK;

    var valueQ = ${t}(0);
    var valueK = ${t}(0);
    var valueV = ${t}(0);
    for (var w: u32 = 0u; w < K; w += TILE_SIZE) {
      if (m < M && w + local_id.x < K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < N && w + local_id.y < K) {
        let offset = n + (w + local_id.y) * ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * N + n) % ${e.headSize};
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * M * N;
    if (m < M && n < N) {
      let outputIdx = offset + m * N + n;
      outputQ[outputIdx] = valueQ;
      outputK[outputIdx] = valueK;
      outputV[outputIdx] = valueV;
    }
  }`,d=[r.inputs[0],r.inputs[1],r.inputs[2]];return r.compute({name:"AttentionPrepare",shaderCache:{hint:JSON.stringify(e)},getRunData:()=>({outputs:[{dims:n,dataType:r.inputs[0].dataType,gpuDataType:0},{dims:n,dataType:r.inputs[0].dataType,gpuDataType:0},{dims:n,dataType:r.inputs[0].dataType,gpuDataType:0}],dispatchGroup:s}),getShaderSource:l},{inputs:d,outputs:[-1,-1,-1]})},$m=(r,e)=>{let n=l2(r.inputs,e),[t,o,i]=p2(r,n);return Yi(r,t,o,i,r.inputs[4],void 0,void 0,void 0,r.inputs[5],n,e)}});var h2,m2,g2,Sm,Im=B(()=>{"use strict";kt();Pe();et();ke();h2=(r,e)=>{if(!r||r.length!==5)throw new Error("BatchNormalization requires 5 inputs");let n=(t,o,i)=>{let u=o.length;if(u!==t.length)throw new Error(`${i}: num dimensions != ${u}`);o.forEach((a,s)=>{if(a!==t[s])throw new Error(`${i}: dim[${s}] do not match`)})};if(r[0].dims.length>1){let t=e.format==="NHWC"?e.spatial?r[0].dims.slice(-1):r[0].dims.slice(-1).concat(r[0].dims.slice(1,r[0].dims.length-1)):r[0].dims.slice(1,e.spatial?2:void 0);n(r[1].dims,t,"Invalid input scale"),n(r[2].dims,t,"Invalid input B"),n(r[3].dims,t,"Invalid input mean"),n(r[4].dims,t,"Invalid input var")}else n(r[1].dims,[1],"Invalid input scale"),n(r[2].dims,[1],"Invalid input B"),n(r[3].dims,[1],"Invalid input mean"),n(r[4].dims,[1],"Invalid input var")},m2=(r,e)=>{let{epsilon:n,spatial:t,format:o}=e,i=r[0].dims,u=t?Mt(i[i.length-1]):1,a=o==="NHWC"&&i.length>1?u:1,s=G.size(i)/u,l=tt(i.length)&&t,d=l?i.length:i,p=U("x",r[0].dataType,r[0].dims,u),f=U("scale",r[1].dataType,r[1].dims,a),g=U("bias",r[2].dataType,r[2].dims,a),b=U("inputMean",r[3].dataType,r[3].dims,a),y=U("inputVar",r[4].dataType,r[4].dims,a),$=ee("y",r[0].dataType,d,u),x=()=>{let O="";if(t)O=`let cOffset = ${i.length===1?"0u":o==="NHWC"?`outputIndices[${i.length-1}] / ${u}`:"outputIndices[1]"};`;else if(o==="NCHW")O=`
            ${$.indicesSet("outputIndices","0","0")}
            let cOffset = ${$.indicesToOffset("outputIndices")};`;else{O=`var cIndices = ${f.type.indices}(0);
                       cIndices[0] = outputIndices[${i.length-1}];`;for(let C=1;C<f.rank;C++)O+=`cIndices[${C}] = outputIndices[${C}];`;O+=`let cOffset = ${f.indicesToOffset("cIndices")};`}return O},I=O=>`
  const epsilon = ${n};
  ${O.registerUniform("outputSize","u32").declareVariables(p,f,g,b,y,$)}
  ${O.mainStart()}
  ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${$.offsetToIndices(`global_idx * ${u}`)};
    ${x()}
    let scale = ${f.getByOffset("cOffset")};
    let bias = ${g.getByOffset("cOffset")};
    let inputMean = ${b.getByOffset("cOffset")};
    let inputVar = ${y.getByOffset("cOffset")};
    let x = ${p.getByOffset("global_idx")};
    let value = (x - inputMean) / sqrt(inputVar + epsilon) * scale + bias;
    ${$.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${e.epsilon}_${e.format}_${t}_${u}`,inputDependencies:l?["rank","type","type","type","type"]:void 0},getShaderSource:I,getRunData:()=>({outputs:[{dims:r[0].dims,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:l?[{type:"uint32",data:s},...pe(i)]:[{type:"uint32",data:s}]})}},g2=r=>ue(r),Sm=(r,e)=>{let{inputs:n,outputCount:t}=r,o=g2({...e,outputCount:t});if(Te.webgpu.validateInputContent&&h2(n,o),e.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");r.compute(m2(n,o))}});var b2,y2,_m,Am=B(()=>{"use strict";Pe();ke();b2=r=>{if(r[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(r[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(r[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(r[0].dims[2]!==r[1].dims[0])throw new Error("last dimension of input and bias are not the same")},y2=r=>{let e=r[0].dims,n=r[0].dims[2],t=G.size(e)/4,o=r[0].dataType,i=U("input",o,e,4),u=U("bias",o,[n],4),a=U("residual",o,e,4),s=ee("output",o,e,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:e,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(t/64)}}),getShaderSource:d=>`
  const channels = ${n}u / 4;
  ${d.declareVariables(i,u,a,s)}

  ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes(t)}
    let value = ${i.getByOffset("global_idx")}
      + ${u.getByOffset("global_idx % channels")} + ${a.getByOffset("global_idx")};
    ${s.setByOffset("global_idx","value")}
  }`}},_m=r=>{b2(r.inputs),r.compute(y2(r.inputs))}});var v2,Ke,Om,Em,Cm,Pm,km,Dm,Bm,Rm,Mm,w2,Lm,zm,Nm,Fm,Xi,Vm,Zi,Gm,Wm,Um,Hm,qm,jm,Km,Ym,Xm,Zm,Jm,Qm,eg,tg,rg,ng,og,js=B(()=>{"use strict";at();Pe();et();ke();v2=(r,e,n,t,o,i)=>{let u=Math.ceil(e/4),a="";typeof o=="string"?a=`${o}(a)`:a=o("a");let s=U("inputData",n,[u],4),l=ee("outputData",t,[u],4);return`
      ${r.registerUniform("vec_size","u32").declareVariables(s,l)}

  ${i??""}

  ${r.mainStart()}
    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${s.getByOffset("global_idx")};
    ${l.setByOffset("global_idx",a)}
  }`},Ke=(r,e,n,t,o,i=r.dataType)=>({name:e,shaderCache:{hint:o,inputDependencies:["type"]},getShaderSource:u=>v2(u,G.size(r.dims),r.dataType,i,n,t),getRunData:u=>({outputs:[{dims:r.dims,dataType:i}],dispatchGroup:{x:Math.ceil(G.size(u[0].dims)/64/4)},programUniforms:[{type:"uint32",data:Math.ceil(G.size(r.dims)/4)}]})}),Om=r=>{r.compute(Ke(r.inputs[0],"Abs","abs"))},Em=r=>{r.compute(Ke(r.inputs[0],"Acos","acos"))},Cm=r=>{r.compute(Ke(r.inputs[0],"Acosh","acosh"))},Pm=r=>{r.compute(Ke(r.inputs[0],"Asin","asin"))},km=r=>{r.compute(Ke(r.inputs[0],"Asinh","asinh"))},Dm=r=>{r.compute(Ke(r.inputs[0],"Atan","atan"))},Bm=r=>{r.compute(Ke(r.inputs[0],"Atanh","atanh"))},Rm=r=>ue(r),Mm=(r,e)=>{let n;switch(e.to){case 10:n="vec4<f16>";break;case 1:n="vec4<f32>";break;case 12:n="vec4<u32>";break;case 6:n="vec4<i32>";break;case 9:n="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${e.to}`)}r.compute(Ke(r.inputs[0],"Cast",n,void 0,e.cacheKey,e.to))},w2=r=>{let e=r.length>=2?r[1].getFloat32Array()[0]:Hi,n=r.length>=3?r[2].getFloat32Array()[0]:qi;return ue({min:e,max:n})},Lm=(r,e)=>{let n=r.inputs.length===1?e:w2(r.inputs),t=je(r.inputs[0].dataType);r.compute(Ke(r.inputs[0],"Clip",o=>`clamp(${o}, clip_min_, clip_max_)`,`
    const clip_min_: vec4<${t}> = vec4(${t}(${n.min}));
    const clip_max_: vec4<${t}> = vec4(${t}(${n.max}));
`,n.cacheKey),{inputs:[0]})},zm=r=>{r.compute(Ke(r.inputs[0],"Ceil","ceil"))},Nm=r=>{r.compute(Ke(r.inputs[0],"Cos","cos"))},Fm=r=>{r.compute(Ke(r.inputs[0],"Cosh","cosh"))},Xi=r=>ue(r),Vm=(r,e)=>{r.compute(Ke(r.inputs[0],"Elu",n=>`elu_vf32(${n})`,`
  const elu_alpha_: f32 = f32(${e.alpha});

  fn elu_f32(a: f32) -> f32 {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<f32>) -> vec4<f32> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,e.cacheKey))},Zi=(r,e="f32")=>`
const r0: ${e} = 0.3275911;
const r1: ${e} = 0.254829592;
const r2: ${e} = -0.284496736;
const r3: ${e} = 1.421413741;
const r4: ${e} = -1.453152027;
const r5: ${e} = 1.061405429;

fn erf_vf32(v: ${r}) -> ${r} {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,Gm=r=>{let e=je(r.inputs[0].dataType);r.compute(Ke(r.inputs[0],"Erf",n=>`erf_vf32(${n})`,Zi(`vec4<${e}>`,e)))},Wm=r=>{r.compute(Ke(r.inputs[0],"Exp","exp"))},Um=r=>{r.compute(Ke(r.inputs[0],"Floor","floor"))},Hm=r=>{let e=je(r.inputs[0].dataType);r.compute(Ke(r.inputs[0],"Gelu",n=>`0.5 * ${n} * (1.0 + erf_vf32(${n} * 0.7071067811865475))`,Zi(`vec4<${e}>`,e)))},qm=(r,e)=>{r.compute(Ke(r.inputs[0],"LeakyRelu",n=>`select(leaky_relu_alpha_ * ${n}, ${n}, ${n} >= vec4<f32>(0.0))`,`const leaky_relu_alpha_: f32 = f32(${e.alpha});`,e.cacheKey))},jm=r=>{r.compute(Ke(r.inputs[0],"Not",e=>`!${e}`))},Km=r=>{r.compute(Ke(r.inputs[0],"Neg",e=>`-${e}`))},Ym=r=>{r.compute(Ke(r.inputs[0],"Reciprocal",e=>`1.0/${e}`))},Xm=r=>{r.compute(Ke(r.inputs[0],"Relu",e=>`select(vec4<f32>(0.0), ${e}, ${e} > vec4<f32>(0.0))`))},Zm=r=>{r.compute(Ke(r.inputs[0],"Sigmoid",e=>`(1.0 / (1.0 + exp(-${e})))`))},Jm=r=>{r.compute(Ke(r.inputs[0],"Sin","sin"))},Qm=r=>{r.compute(Ke(r.inputs[0],"Sinh","sinh"))},eg=r=>{r.compute(Ke(r.inputs[0],"Sqrt","sqrt"))},tg=r=>{r.compute(Ke(r.inputs[0],"Tan","tan"))},rg=r=>{r.compute(Ke(r.inputs[0],"Tanh","tanh"))},ng=(r,e)=>(r.compute(Ke(r.inputs[0],"ThresholdedRelu",n=>`select(vec4<f32>(0.0), ${n}, ${n} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_: vec4<f32> = vec4<f32>(${e.alpha});`,e.cacheKey)),0),og=r=>{r.compute(Ke(r.inputs[0],"Log","log"))}});var T2,$2,ig,ag=B(()=>{"use strict";Pe();ke();js();T2=r=>{if(r[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(r[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(r[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(r[0].dims[2]!==r[1].dims[0])throw new Error("last dimension of input and bias are not the same")},$2=r=>{let e=r[0].dims.slice();e[2]=e[2]/2;let n=U("input",r[0].dataType,r[0].dims,4),t=U("bias",r[0].dataType,[r[0].dims[2]],4),o=ee("output",r[0].dataType,e,4),i=G.size(e)/4,u=je(r[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:e,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)}}),getShaderSource:s=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${r[0].dims[2]/4/2}u;

  ${s.declareVariables(n,t,o)}

  ${Zi(`vec4<${u}>`,u)}

  ${s.mainStart()}
    ${s.guardAgainstOutOfBoundsWorkgroupSizes(i)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${o.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},ig=r=>{T2(r.inputs),r.compute($2(r.inputs))}});var S2,I2,vr,sg,ug,lg,dg,cg,fg,pg,hg,mg,gg,bg=B(()=>{"use strict";at();Pe();ke();S2=(r,e,n,t,o,i,u,a,s,l,d,p,f)=>{let g,b;typeof a=="string"?g=b=(R,V)=>`${a}((${R}),(${V}))`:typeof a=="function"?g=b=a:(g=a.scalar,b=a.vector);let y=p?e.length:e,$=p?n.length:n,x=p?t.length:t,I=ee("outputData",d,x,4),O=U("aData",s,y,4),C=U("bData",l,$,4),N;if(o)if(i){let R=G.size(e)===1,V=G.size(n)===1,W=e.length>0&&e[e.length-1]%4===0,j=n.length>0&&n[n.length-1]%4===0;R||V?N=I.setByOffset("global_idx",b(R?`${O.type.value}(${O.getByOffset("0")}.x)`:O.getByOffset("global_idx"),V?`${C.type.value}(${C.getByOffset("0")}.x)`:C.getByOffset("global_idx"))):N=`
            let outputIndices = ${I.offsetToIndices("global_idx * 4u")};
            let offsetA = ${O.broadcastedIndicesToOffset("outputIndices",I)};
            let offsetB = ${C.broadcastedIndicesToOffset("outputIndices",I)};
            ${I.setByOffset("global_idx",b(u||W?O.getByOffset("offsetA / 4u"):`${O.type.value}(${O.getByOffset("offsetA / 4u")}[offsetA % 4u])`,u||j?C.getByOffset("offsetB / 4u"):`${C.type.value}(${C.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else N=I.setByOffset("global_idx",b(O.getByOffset("global_idx"),C.getByOffset("global_idx")));else{if(!i)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let R=(V,W,j="")=>{let ie=`aData[indexA${W}][componentA${W}]`,P=`bData[indexB${W}][componentB${W}]`;return`
            let outputIndices${W} = ${I.offsetToIndices(`global_idx * 4u + ${W}u`)};
            let offsetA${W} = ${O.broadcastedIndicesToOffset(`outputIndices${W}`,I)};
            let offsetB${W} = ${C.broadcastedIndicesToOffset(`outputIndices${W}`,I)};
            let indexA${W} = offsetA${W} / 4u;
            let indexB${W} = offsetB${W} / 4u;
            let componentA${W} = offsetA${W} % 4u;
            let componentB${W} = offsetB${W} % 4u;
            ${V}[${W}] = ${j}(${g(ie,P)});
          `};d===9?N=`
            var data = vec4<u32>(0);
            ${R("data",0,"u32")}
            ${R("data",1,"u32")}
            ${R("data",2,"u32")}
            ${R("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:N=`
            ${R("outputData[global_idx]",0)}
            ${R("outputData[global_idx]",1)}
            ${R("outputData[global_idx]",2)}
            ${R("outputData[global_idx]",3)}
          `}return`
        ${r.registerUniform("vec_size","u32").declareVariables(O,C,I)}

        ${f??""}

        ${r.mainStart()}
        ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${N}
      }`},I2=(r,e,n,t,o,i,u=n.dataType)=>{let a=!G.areEqual(n.dims,t.dims),s=n.dims,l=G.size(n.dims),d=!1,p=!1,f=[a];if(a){let b=hr.calcShape(n.dims,t.dims,!1);if(!b)throw new Error("Can't perform binary op on the given tensors");s=b,l=G.size(s);let y=G.size(n.dims)===1,$=G.size(t.dims)===1,x=n.dims.length>0&&n.dims[n.dims.length-1]%4===0,I=t.dims.length>0&&t.dims[t.dims.length-1]%4===0;f.push(y),f.push($),f.push(x),f.push(I);let O=1;for(let C=1;C<s.length;C++){let N=n.dims[n.dims.length-C]??1,R=t.dims[t.dims.length-C]??1;if(N===R)O*=N;else break}O%4===0?(p=!0,d=!0):(y||$||x||I)&&(d=!0)}else d=!0;f.push(d);let g=tt(n.dims.length)&&tt(t.dims.length)&&tt(s.length);return{name:r,shaderCache:{hint:e+f.map(b=>b.toString()).join("_"),inputDependencies:g?["rank","rank"]:["dims","dims"]},getShaderSource:b=>S2(b,n.dims,t.dims,s,d,a,p,o,n.dataType,t.dataType,u,g,i),getRunData:()=>({outputs:[{dims:s,dataType:u}],dispatchGroup:{x:Math.ceil(l/64/4)},programUniforms:g?[{type:"uint32",data:Math.ceil(G.size(s)/4)},...pe(n.dims),...pe(t.dims),...pe(s)]:[{type:"uint32",data:Math.ceil(G.size(s)/4)}]})}},vr=(r,e,n,t,o,i)=>{r.compute(I2(e,o??"",r.inputs[0],r.inputs[1],n,t,i))},sg=r=>{vr(r,"Add",(e,n)=>`${e}+${n}`)},ug=r=>{vr(r,"Div",(e,n)=>`${e}/${n}`)},lg=r=>{vr(r,"Equal",{scalar:(e,n)=>`u32(${e}==${n})`,vector:(e,n)=>`vec4<u32>(${e}==${n})`},void 0,void 0,9)},dg=r=>{vr(r,"Mul",(e,n)=>`${e}*${n}`)},cg=r=>{let e=U("input",r.inputs[0].dataType,r.inputs[0].dims).type.value;vr(r,"Pow",{scalar:(t,o)=>`pow_custom(${t},${o})`,vector:(t,o)=>`pow_vector_custom(${t},${o})`},`
    fn pow_custom(a : ${e}, b : ${e}) -> ${e} {
      if (b == ${e}(0.0)) {
        return ${e}(1.0);
      } else if (a < ${e}(0.0) && f32(b) != floor(f32(b))) {
        return ${e}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${e}(1.0), round(f32(abs(b) % ${e}(2.0))) != 1.0) * ${e}(${e==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${e}>, b : vec4<${e}>) -> vec4<${e}> {
      // TODO: implement vectorized pow
      return vec4<${e}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},fg=r=>{vr(r,"Sub",(e,n)=>`${e}-${n}`)},pg=r=>{vr(r,"Greater",{scalar:(e,n)=>`u32(${e}>${n})`,vector:(e,n)=>`vec4<u32>(${e}>${n})`},void 0,void 0,9)},hg=r=>{vr(r,"Less",{scalar:(e,n)=>`u32(${e}<${n})`,vector:(e,n)=>`vec4<u32>(${e}<${n})`},void 0,void 0,9)},mg=r=>{vr(r,"GreaterOrEqual",{scalar:(e,n)=>`u32(${e}>=${n})`,vector:(e,n)=>`vec4<u32>(${e}>=${n})`},void 0,void 0,9)},gg=r=>{vr(r,"LessOrEqual",{scalar:(e,n)=>`u32(${e}<=${n})`,vector:(e,n)=>`vec4<u32>(${e}<=${n})`},void 0,void 0,9)}});var A2,O2,E2,C2,yg,vg,wg=B(()=>{"use strict";Pe();et();ke();A2=r=>{if(!r||r.length<1)throw new Error("too few inputs");let e=r[0].dataType,n=r[0].dims.length;for(let t of r){if(t.dataType!==e)throw new Error("input tensors should be one type");if(t.dims.length!==n)throw new Error("input tensors should have the same shape")}},O2=(r,e)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${r}u>(${e});
    for (var i: u32 = 0u; i < ${r}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${r}u;
  }`,E2=(r,e)=>{let n=r.length,t=[];for(let o=0;o<n;++o){let i=e.setByOffset("global_idx",r[o].getByIndices("indices"));n===1?t.push(i):o===0?t.push(`if (inputIndex == ${o}u) { ${i} }`):o===n-1?t.push(`else { ${i} }`):t.push(`else if (inputIndex == ${o}) { ${i} }`)}return t.join(`
`)},C2=(r,e)=>{let n=r[0].dims.slice();if(e>=n.length||e<-1*n.length)throw new Error("axis specified for concat doesn't match input dimensionality");let t=e<0?n.length+e:e,o=n.slice(0);for(let C=1;C<r.length;C++){let N=r[C].dims.slice();for(let R=0;R<n.length;R++)if(R===t)o[t]+=N[R];else if(n[R]!==N[R])throw new Error("non concat dimensions must match")}let i=G.size(o),u=new Array(r.length),a=new Array(r.length),s=r[0].dataType,l=0,d=[],p=[],f=[],g=[{type:"uint32",data:i}];for(let C=0;C<r.length;++C)l+=r[C].dims[t],u[C]=l,f.push(tt(r[C].dims.length)),p.push(f[C]?r[C].dims.length:r[C].dims),a[C]=U(`input${C}`,s,p[C]),d.push(f[C]?"rank":"dims"),g.push({type:"uint32",data:u[C]});for(let C=0;C<r.length;++C)f[C]&&g.push(...pe(r[C].dims));let b=tt(o.length);b&&g.push(...pe(o));let y=b?o.length:o,$=ee("output",s,y),x=$.indicesGet("indices",t),I=Array.from(Array(u.length).keys()).map(C=>`uniforms.sizeInConcatAxis${C}`).join(","),O=C=>`

  ${(()=>{C.registerUniform("outputSize","u32");for(let N=0;N<r.length;N++)C.registerUniform(`sizeInConcatAxis${N}`,"u32");return C.declareVariables(...a,$)})()}

  ${O2(u.length,I)}

  ${C.mainStart()}
    ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${$.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${x});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${u.length}u>(${I});
      ${x} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${E2(a,$)}
  }`;return{name:"Concat",shaderCache:{hint:`${e}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:o,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:g}),getShaderSource:O}},yg=(r,e)=>{A2(r.inputs),r.compute(C2(r.inputs,e.axis))},vg=r=>ue({axis:r.axis})});var Fr,Ji,cn=B(()=>{"use strict";Pe();Fr=(r,e)=>{switch(r.activation){case"Relu":return{activationFunction:"",applyActivation:`value = max(value, ${e}(0.0));`};case"Sigmoid":return{activationFunction:"",applyActivation:`value = (${e}(1.0) / (${e}(1.0) + exp(-value)));`};case"Clip":return{activationFunction:`const clip_min_=${e}(${r.clipMin});const clip_max_=${e}(${r.clipMax});`,applyActivation:"value = clamp(value, clip_min_, clip_max_);"};default:return{activationFunction:"",applyActivation:""}}},Ji=r=>{let e=r?.activation||"";if(e==="Clip"){let[n,t]=r?.activation_params||[Hi,qi];return{activation:e,clipMax:t,clipMin:n,activationCacheKey:`${e}:${n},${t}`}}return{activation:e,activationCacheKey:e}}});var bt,Qi,ea=B(()=>{"use strict";bt=(r,e)=>{switch(r){case 1:return e;case 2:return`vec2<${e}>`;case 3:return`vec3<${e}>`;case 4:return`vec4<${e}>`;default:throw new Error(`${r}-component is not supported.`)}},Qi=r=>`
      ${r?"value = value + getBiasByOutputCoords(coords);":""}
      `});var ta,Ks=B(()=>{"use strict";ta=r=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${r}.x), i32(${r}.y), i32(${r}.z), 1));
}
`});var P2,k2,yo,xg,D2,vo,B2,ra,wo=B(()=>{"use strict";Pe();ke();cn();ea();P2=(r,e)=>r?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${e?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${e?", batchIndices":""});
        `,k2=(r,e)=>r?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${e===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${e===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${e===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,yo=(r,e,n="f32",t,o=!1,i=32,u=!1,a=32)=>{let s=e[1]*r[1],l=e[0]*r[0],d=o?s:i,p=o?i:s,f=d/e[0],g=i/e[1];if(!((o&&f===4&&r[1]===4||!o&&(f===3||f===4))&&d%e[0]===0&&i%e[1]===0&&r[0]===4))throw new Error(`If transposeA ${o} is true, innerElementSize ${f} and workPerThread[1] ${r[1]} must be 4.
      Otherwise, innerElementSize ${f} must be 3 or 4.
  tileAWidth ${d} must be divisible by workgroupSize[0]${e[0]}. tileInner ${i} must be divisible by workgroupSize[1] ${e[1]}. colPerThread ${r[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${f}<${n}>, ${d/f}>, ${p}>;
var<workgroup> mm_Bsub: array<array<vec4<${n}>, ${l/r[0]}>, ${i}>;

const rowPerThread = ${r[1]};
const colPerThread = ${r[0]};
const innerElementSize = ${f};
const tileInner = ${i};

@compute @workgroup_size(${e[0]}, ${e[1]}, ${e[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${u?"0":"i32(globalId.z)"};
  ${t?`let batchIndices = ${t.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${s};

  let numTiles = ${u?`${Math.ceil(a/i)}`:"(uniforms.dimInner - 1) / tileInner + 1"};
  var kStart = ${u?`i32(globalId.z) * ${a}`:"0"};

  var acc: array<vec4<${n}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${g};
  for (var t = 0; t < numTiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${P2(o,t)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${g}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${t?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${f===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${k2(o,f)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},xg=(r,e)=>r?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${e?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${e?", batchIndices":""});
            `,D2=r=>r?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",vo=(r,e,n="f32",t,o=!1,i=32,u=!1,a=32,s=!1)=>{let l=r[1]*e[1],d=r[0]*e[0],p=o?l:i,f=o?i:l;if(!(f%e[1]===0&&p%e[0]===0&&i%e[1]===0))throw new Error(`tileAHight ${f} must be divisible by workgroupSize[1]${e[1]}, tileAWidth ${p} must be divisible by workgroupSize[0]${e[0]}, tileInner ${i} must be divisible by workgroupSize[1]${e[1]}`);let g=f/e[1],b=p/e[0],y=i/e[1],$=s?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${l};
    let globalColStart = i32(workgroupId.x) * ${d};

    // Loop over shared dimension.
    for (var t = 0; t < numTiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${f}; inputRow = inputRow + ${e[1]}) {
        for (var inputCol = localCol; inputCol < ${p}; inputCol = inputCol + ${e[0]}) {
          ${xg(o,t)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${i}; inputRow = inputRow + ${e[1]}) {
            for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${e[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${t?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${n}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${e[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${o?`mm_Asub[k][localRow + innerRow * ${e[1]}];`:`mm_Asub[localRow + innerRow * ${e[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${e[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${e[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${l};

let tileRowA = i32(localId.y) * ${g};
let tileColA = i32(localId.x) * ${b};
let tileRowB = i32(localId.y) * ${y};
// Loop over shared dimension.
for (var t = 0; t < numTiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${g}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${b}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${xg(o,t)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${y}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${t?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${n}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${D2(o)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${n}, ${p}>, ${f}>;
  var<workgroup> mm_Bsub : array<array<${n}, ${d}>, ${i}>;
  const rowPerThread = ${r[1]};
  const colPerThread = ${r[0]};
  const tileInner = ${i};

@compute @workgroup_size(${e[0]}, ${e[1]}, ${e[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${u?"0":"i32(globalId.z)"};
    ${t?`let batchIndices = ${t.offsetToIndices("u32(batch)")};`:""}
    let numTiles = ${u?`${Math.ceil(a/i)}`:"(uniforms.dimInner - 1) / tileInner + 1"};
    var kStart = ${u?`i32(globalId.z) * ${a}`:"0"};

    var acc : array<array<${n}, colPerThread>, rowPerThread>;

    // Without this initialization strange values show up in acc.
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = 0.0;
      }
    }
    ${$}
  }
`},B2=(r,e,n,t,o,i=!1)=>{let[u,a,s]=o,[l,d,p,f]=t,g=Ws(u,s),b=Ws(a,s),y=je(t[0].type.tensor),$=()=>{let O=d.rank,C=l.rank,N=`var aIndices: ${d.type.indices};`;for(let R=O-2-1,V=C-1;R>=0;R--,V--)N+=`
aIndices[${R}] = ${C>1?`batchIndices[${V}]`:"batchIndices"};`;return g.forEach(R=>{N+=`
aIndices[${R}] = 0;`}),N+=`
aIndices[${O-2}] = u32(row);
                   aIndices[${O-1}] = u32(colIn);`,N},x=()=>{let O=p.rank,C=l.rank,N=`var bIndices: ${p.type.indices};`;for(let R=O-2-1,V=C-1;R>=0;R--,V--)N+=`
bIndices[${R}] = ${C>1?`batchIndices[${V}]`:"batchIndices"};`;return b.forEach(R=>{N+=`
bIndices[${R}] = 0;`}),N+=`
bIndices[${O-2}] = u32(row);
                   bIndices[${O-1}] = u32(colIn);`,N};return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${l.type.indices}) -> ${bt(r,y)} {
      var value = ${bt(r,y)}(0.0);
      let col = colIn * ${r};
      if(row < uniforms.dimAOuter && col < uniforms.dimInner)
      {
        ${$()}
        value = ${d.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${l.type.indices}) -> ${bt(r,y)} {
      var value = ${bt(r,y)}(0.0);
      let col = colIn * ${r};
      if(row < uniforms.dimInner && col < uniforms.dimBOuter)
      {
        ${x()}
        value = ${p.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${bt(r,y)}) {
      let col = colIn * ${r};
      if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${e?`value = value + ${i?"bias[colIn]":`${bt(r,y)}(bias[row])`};`:""}
        ${n}
        ${f.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},ra=(r,e,n,t,o=!1)=>{let i=r[0].dims,u=r[1].dims,a=i.slice(0,-2),s=u.slice(0,-2),l=t?t.slice(0,-2):n.slice(0,-2),d=tt(l.length),p=d?l.length:l,f=qh("batchDims",r[0].dataType,p,1),g=G.size(l),b=i[i.length-2],y=i[i.length-1],$=u[u.length-1],x=y%4===0&&$%4===0,I=b<=8?[4,1,1]:[4,4,1],O=[8,8,1],C=[Math.ceil($/O[0]/I[0]),Math.ceil(b/O[1]/I[1]),Math.ceil(g/O[2]/I[2])],N=je(r[0].dataType),R=x?4:1,V=[...a,b,y/R],W=tt(V.length),j=W?V.length:V,ie=[...s,y,$/R],P=tt(ie.length),Q=P?ie.length:ie,Se=[g,b,$/R],le=U("a",r[0].dataType,j,R),Me=U("b",r[1].dataType,Q,R),te=ee("result",r[0].dataType,Se.length,R),Le=[le,Me],Ue=[{type:"int32",data:b},{type:"int32",data:$},{type:"int32",data:y}];d&&Ue.push(...pe(l)),W&&Ue.push(...pe(V)),P&&Ue.push(...pe(ie));let qe=[];qe.push(W?"rank":"dims"),qe.push(P?"rank":"dims");let Ee=r.length>2,{activationFunction:or,applyActivation:xt}=Fr(e,te.type.value),St=B2(R,Ee,xt,[f,le,Me,te],[a,s,l],o);if(Ee){let we=o?R:1;Le.push(U("bias",r[2].dataType,r[2].dims.length,we)),Ue.push(...pe(r[2].dims)),qe.push("rank")}Ue.push(...pe(Se));let X=we=>`
  ${we.registerUniform("dimAOuter","i32").registerUniform("dimBOuter","i32").registerUniform("dimInner","i32").registerInternalVariables(f).declareVariables(...Le,te)}
  ${or}
  ${St}
  ${x?yo(I,O,N,f):vo(I,O,N,f)}
                   `;return{name:"MatMul",shaderCache:{hint:e.activationCacheKey+`${I}${e.activation}${e.clipMax}${e.clipMin}${x}${Ee}${o}`,inputDependencies:qe},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:C[0],y:C[1],z:C[2]},programUniforms:Ue}),getShaderSource:X}}});var R2,Tg,$g=B(()=>{"use strict";Nr();ke();cn();ea();Ks();wo();R2=(r,e,n,t,o=!1,i,u=4,a=4,s=4,l="f32")=>{let d=P=>{switch(P){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${l}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${P} is not supported.`)}},p=P=>{switch(P){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${P} is not supported.`)}},f=r?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,g=r?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,b=r?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",y=r?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",$=r?"row":"col",x=r?"col":"row",I=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${r?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${$} / outWidth;
    let outCol = ${$} % outWidth;

    let WRow = ${x} / (filterDims[1] * inChannels);
    let WCol = ${x} / inChannels % filterDims[1];
    let xRow = outRow * stride[0] + dilation[0] * WRow - pad[0];
    let xCol = outCol * stride[1] + dilation[1] * WCol - pad[1];
    let xCh = ${x} % inChannels;
    var resData = ${bt(u,l)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${b} && xCol >= 0 && xCol < ${y}) {
      ${f}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${d(u)}
    }
    return resData;`,O=r?e&&t?`
    let col = colIn * ${u};
    ${I}`:`
    let col = colIn * ${u};
    if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      ${I}
    }
    return ${bt(u,l)}(0.0);`:t&&n?`
    let col = colIn * ${u};
    ${I}`:`
    let col = colIn * ${u};
    if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
      ${I}
    }
    return ${bt(u,l)}(0.0);`,C=`${p(a)}`,N=bt(s,l),R=r?bt(u,l):bt(a,l),V=r?bt(a,l):bt(u,l),{activationFunction:W,applyActivation:j}=Fr(i,N);return`
    ${W}
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${R} {
      ${r?O:C}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${V} {
      ${r?C:O}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${N}) {
      let col = colIn * ${s};
      if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
      {
      var value = valueIn;
      let outWidth = ${r?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${g}
      ${Qi(o)}
      ${j}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},Tg=(r,e,n,t,o,i,u,a)=>{let s=e.format==="NHWC",l=s?r[0].dims[3]:r[0].dims[1],d=n[0],p=s?n[2]:n[3],f=s?n[1]:n[2],g=s?n[3]:n[1],b=s&&(l%4===0||l%3===0)&&g%4===0,y=s?g:p*f,$=s?p*f:g,x=[8,8,1],I=t<=8?[4,1,1]:[4,4,1],O=[Math.ceil(y/x[0]/I[0]),Math.ceil($/x[1]/I[1]),Math.ceil(d/x[2]/I[2])];nt("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${O}`);let C=b?s&&l%4!==0?3:4:1,N=x[1]*I[1],R=x[0]*I[0],V=Math.max(x[0]*C,x[1]),W=t%N===0,j=o%R===0,ie=i%V===0,P=b?[C,4,4]:[1,1,1],Q=je(r[0].dataType),Se=b?4:1,le=[{type:"int32",data:t},{type:"int32",data:o},{type:"int32",data:i}],Me=U("x",r[0].dataType,r[0].dims.length,C===3?1:C),te=U("w",r[1].dataType,r[1].dims.length,Se),Le=[Me,te];le.push(...pe(r[0].dims)),le.push(...pe(r[1].dims));let Ue=`
      fn setOutputAtIndex(flatIndex : i32, value : ${b?`vec4<${Q}>`:Q}) {
        result[flatIndex] = ${b?`vec4<${Q}>`:Q}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${b?`vec4<${Q}>`:Q}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${b?"/ 4":""}, value);
      }`;if(u){let Ee=U("bias",r[2].dataType,r[2].dims.length,Se);Le.push(Ee),le.push(...pe(r[2].dims)),Ue+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${b?`vec4<${Q}>`:Q} {
          return bias[coords.${s?"w":"y"}${b?"/ 4":""}];
        }`}let qe=ee("result",r[0].dataType,n.length,Se);return le.push(...pe(n)),{name:"Conv2DMatMul",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:O[0],y:O[1],z:O[2]},programUniforms:le}),getShaderSource:Ee=>`
        ${ta("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${Ee.registerUniform("dimAOuter","i32").registerUniform("dimBOuter","i32").registerUniform("dimInner","i32").declareVariables(...Le,qe)}
        const filterDims : vec2<i32> = vec2<i32>(${e.kernelShape[0]}, ${e.kernelShape[1]});
        const pad : vec2<i32> = vec2<i32>(${e.pads[0]}, ${e.pads[1]});
        const stride : vec2<i32> = vec2<i32>(${e.strides[0]}, ${e.strides[1]});
        const dilation : vec2<i32> = vec2<i32>(${e.dilations[0]}, ${e.dilations[1]});
        ${Ue}
        ${R2(s,W,j,ie,u,e,P[0],P[1],P[2],Q)}
            ${b?yo(I,x,Q,void 0,!s,V):vo(I,x,Q,void 0,!s,V,!1,void 0,a)}`}}});var Ys,Sg=B(()=>{"use strict";Pe();ke();Zs();cn();Ys=(r,e,n)=>{let t=r.length>2,o=t?"value += b[output_channel];":"",i=r[0].dims,u=r[1].dims,a=u[0]/e.group,s=e.format==="NHWC",l=Xs(i,u,e.dilations,e.pads,e.strides,s),d=G.size(l),p=ee("output",r[0].dataType,l),{activationFunction:f,applyActivation:g}=Fr(e,p.type.value),b=U("x",r[0].dataType,i),y=U("w",r[1].dataType,u),$=[b,y];t&&$.push(U("b",r[2].dataType,r[2].dims));let x=I=>`
  const strides: vec2<u32> = vec2(${e.strides[0]}u, ${e.strides[1]}u);
  const pads: vec2<u32> = vec2(${e.pads[0]}u, ${e.pads[1]}u);

  ${I.declareVariables(...$,p)}

  ${f}

  ${I.mainStart()}
    ${I.guardAgainstOutOfBoundsWorkgroupSizes(d)}

    let outputIndices = ${p.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${s?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${s?1:2}], outputIndices[${s?2:3}]) * strides - pads;
    let group_id: u32 = output_channel / ${a}u;

    var value: ${p.type.value} = ${p.type.value}(0);
    for (var wInChannel: u32 = 0u; wInChannel < ${u[1]}u; wInChannel++) {
      let input_channel = group_id * ${u[1]}u + wInChannel;
      for (var wHeight: u32 = 0u; wHeight < ${u[2]}u; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * ${e.dilations[0]}u;

        if (xHeight < 0u || xHeight >= ${i[s?1:2]}u) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < ${u[3]}u; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * ${e.dilations[1]}u;
          if (xWidth < 0u || xWidth >= ${i[s?2:3]}u) {
            continue;
          }

          let xVal = ${s?b.get("batch","xHeight","xWidth","input_channel"):b.get("batch","input_channel","xHeight","xWidth")};
          let wVal = ${y.get("output_channel","wInChannel","wHeight","wWidth")};
          value += xVal*wVal;
        }
      }
    }
    ${o}
    ${g}
    ${p.setByOffset("global_idx","value")}
  }`;return{name:"GroupedConv",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:n?n(l):l,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)}}),getShaderSource:x}}});var Xs,Ig,M2,_g,Js,L2,z2,Qs,Zs=B(()=>{"use strict";Pe();et();$g();wo();Sg();cn();Dn();Xs=(r,e,n,t,o,i)=>{let u=r[0],a=r.slice(i?1:2,i?3:4),s=a.length,l=e[0],p=e.slice(2).map((b,y)=>b+(b-1)*(n[y]-1)),g=a.map((b,y)=>b+t[y]+t[y+s]).map((b,y)=>Math.floor((b-p[y]+o[y])/o[y]));return g.splice(0,0,u),g.splice(i?3:1,0,l),g},Ig=[2,3,1,0],M2=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4&&r[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(r[0].dims.length!==r[1].dims.length)throw new Error("filter does not have same dimension as input");let n=r[0].dims[e.format==="NHWC"?r[0].dims.length-1:1],t=r[1].dims[1]*e.group;if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(r.length===3&&(r[2].dims.length!==1||r[1].dims[0]!==r[2].dims[0]))throw new Error("invalid bias");let o=r[0].dims.length-2;if(e.dilations.length!==o)throw new Error(`dilations should be ${o}D`);if(e.strides.length!==o)throw new Error(`strides should be ${o}D`);if(e.pads.length!==o*2)throw new Error(`pads should be ${o*2}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape")},_g=(r,e)=>{let n=r.kernelShape.slice();for(let i=2;i<e[1].dims.length;++i)n[i-2]===0&&(n[i-2]=e[1].dims[i]);let t=r.pads.slice();dn.adjustPadsBasedOnAutoPad(e[0].dims,r.strides,r.dilations,n,t,r.format==="NHWC",r.autoPad);let o=Object.assign({},r);return Object.assign(o,{kernelShape:n,pads:t,cacheKey:r.cacheKey}),o},Js=r=>{let e=Ji(r),n=r.format,t=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][r.auto_pad],o=r.dilations,i=r.group,u=r.kernel_shape,a=r.pads,s=r.strides,l=r.w_is_const();return ue({autoPad:t,format:n,dilations:o,group:i,kernelShape:u,pads:a,strides:s,wIsConst:l,...e})},L2=(r,e,n)=>{let t=_g(n,e);if(n.group!==1){r.compute(Ys(e,t));return}let o=n.format==="NHWC",i=e.length===3,u=e[0].dims[o?1:2],a=e[0].dims[o?2:3],s=e[0].dims[o?3:1],l=e[1].dims[2],d=e[1].dims[3],p=Xs(e[0].dims,e[1].dims,n.dilations,t.pads,n.strides,o),f=p[o?1:2],g=p[o?2:3],b=p[o?3:1],y=o&&l===u&&d===a&&n.pads[0]===0&&n.pads[1]===0;if(y||l===1&&d===1&&n.dilations[0]===1&&n.dilations[1]===1&&n.strides[0]===1&&n.strides[1]===1&&n.pads[0]===0&&n.pads[1]===0){let R=p[0],V,W,j,ie=[];if(o){let P=r.kernelCustomData.wT??r.compute(rr(e[1],Ig),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];if(n.wIsConst&&!r.kernelCustomData.wT&&(r.kernelCustomData.wT=P),y){let Q=u*a*s;V=e[0].reshape([1,R,Q]),W=P.reshape([1,Q,b]),j=[1,R,b]}else V=e[0].reshape([R,u*a,s]),W=P.reshape([1,s,b]),j=[R,f*g,b];ie.push(V),ie.push(W)}else V=e[0].reshape([R,s,u*a]),W=e[1].reshape([1,b,s]),j=[R,b,f*g],ie.push(W),ie.push(V);i&&ie.push(e[2]),r.compute(ra(ie,t,p,j,o),{inputs:ie});return}let $=!0,x=r.kernelCustomData.wT??r.compute(rr(e[1],Ig),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!r.kernelCustomData.wT&&(r.kernelCustomData.wT=x);let I=[e[0],x];i&&I.push(e[2]);let O=o?f*g:b,C=o?b:f*g,N=l*d*s;r.compute(Tg(I,t,p,O,C,N,i,$),{inputs:I})},z2=(r,e)=>{let n=e.format==="NHWC",t=[r.inputs[0].reshape(n?[r.inputs[0].dims[0],1,r.inputs[0].dims[1],r.inputs[0].dims[2]]:[r.inputs[0].dims[0],r.inputs[0].dims[1],1,r.inputs[0].dims[2]]),r.inputs[1].reshape([r.inputs[1].dims[0],r.inputs[1].dims[1],1,r.inputs[1].dims[2]])];r.inputs.length===3&&t.push(r.inputs[2]);let o=[0,e.pads[0],0,e.pads[1]],i=[1].concat(e.strides),u=[1].concat(e.dilations),a=[1].concat(e.kernelShape),s=_g({...e,pads:o,strides:i,dilations:u,kernelShape:a},t);r.compute(Ys(t,s,l=>n?[l[0],l[2],l[3]]:[]))},Qs=(r,e)=>{M2(r.inputs,e),r.inputs[0].dims.length===3?z2(r,e):L2(r,r.inputs,e)}});var N2,Ag,Og=B(()=>{"use strict";Nr();ke();cn();ea();Ks();wo();N2=(r,e=!1,n,t=4)=>{let o=bt(t,"f32"),i=I=>{switch(I){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];
            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];
            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];
            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${I} is not supported.`)}},u=r?`
      let coord = vec4<i32>(batch, iXR, iXC, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, iXR, iXC);
      `,a=r?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,s=r?"outBackprop[1]":"outBackprop[2]",l=r?"outBackprop[2]":"outBackprop[3]",d=r?"row":"col",p=r?"col":"row",f=`
      let inChannels = ${r?"outBackprop[3]":"outBackprop[1]"};
      let outWidth = ${r?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      let outRow = ${d} / outWidth;
      let outCol = ${d} % outWidth;

      let WRow = ${p} / (filterDims[1] * inChannels);
      let WCol = ${p} / inChannels % filterDims[1];
      let xR = f32(outRow - pads[0] + dilation[0] * WRow) / f32(strides[0]);
      let xC = f32(outCol - pads[1] + dilation[1] * WCol) / f32(strides[1]);
      if (xR < 0.0 || xR >= f32(${s}) || fract(xR) > 0.0) {
        return ${o}(0.0);
      }
      if (xC < 0.0 || xC >= f32(${l}) || fract(xC) > 0.0) {
        return ${o}(0.0);
      }
      let iXR = i32(xR);
      let iXC = i32(xC);
      let xCh = ${p} % inChannels;
      ${u}
      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${t}];`,g=r?`
      let col = colIn * ${t};
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${f}
      }
      return ${o}(0.0);`:`
      let col = colIn * ${t};
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${f}
      }
      return ${o}(0.0);`,b=`
      let col = colIn * ${t};
      let inChannels = ${r?"outBackprop[3]":"outBackprop[1]"};
      let coordX = filterDims.x - 1 - row / (filterDims[1] * inChannels);
      let coordY = filterDims.y - 1 - (row / inChannels) % filterDims[1];
      if (${r?"row < uniforms.dimInner && col < uniforms.dimBOuter":"row < uniforms.dimInner && col < uniforms.dimAOuter"}  && coordX >= 0 && coordY >= 0) {
        let rowInner = row % inChannels;
        let coord = vec4<i32>(coordX, coordY, col, rowInner);
        ${i(t)}
      }
      return ${o}(0.0);
      `,{activationFunction:y,applyActivation:$}=Fr(n,o);return`
      ${y}
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${o} {
    ${r?g:b}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${o} {
    ${r?b:g}
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${o}) {
    let col = colIn * ${t};
    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
      var value = valueInput;
      let outWidth = ${r?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${a}
      ${Qi(e)}
      ${$}
      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${t}] = value;
    }
  }`},Ag=(r,e,n,t,o,i,u,a)=>{let s=e.format==="NHWC",l=s?r[0].dims[3]:r[0].dims[1],d=n[0],p=s?n[2]:n[3],f=s?n[1]:n[2],g=s?n[3]:n[1],b=s?l%4===0&&g%4===0:p%4===0&&g%4===0,y=s?g:p*f,$=s?p*f:g,x=b?[8,8,1]:[y<=4||$<=4?4:16,y>4&&$<=4?4:16,1],I=b?[4,4,1]:[y<=4?1:4,y>4&&$<=4?1:4,1],O=[Math.ceil(y/x[0]/I[0]),Math.ceil($/x[1]/I[1]),Math.ceil(d/x[2]/I[2])];nt("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${O}`);let C=b?4:1,N=Math.max(x[0]*C,x[1]),R=b?4:1,V=[{type:"int32",data:t},{type:"int32",data:o},{type:"int32",data:i}],W=U("x",r[0].dataType,r[0].dims.length,R),j=U("w",r[1].dataType,r[1].dims.length,1),ie=ee("result",r[0].dataType,n.length,R),P=[W,j];V.push(...pe(r[0].dims)),V.push(...pe(r[1].dims));let Q="";if(u){let Se=U("bias",r[2].dataType,r[2].dims.length,R);P.push(Se),V.push(...pe(r[2].dims)),Q+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${b?"vec4<f32>":"f32"} {
          return bias[coords.${s?"w":"y"}${b?"/ 4":""}];
        }`}return V.push(...pe(n)),{name:"Conv2DTransposeMatMul",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:O[0],y:O[1],z:O[2]},programUniforms:V}),getShaderSource:Se=>`
        ${ta("uniforms.result_strides")}
        ${Se.registerUniform("dimAOuter","i32").registerUniform("dimBOuter","i32").registerUniform("dimInner","i32").declareVariables(...P,ie)};
        const outBackprop : vec4<i32> = vec4<i32>(${r[0].dims.join(",")});
        const filterDims : vec2<i32> = vec2<i32>(${e.kernelShape[s?1:2]}, ${e.kernelShape[s?2:3]});
        const effectiveFilterDims : vec2<i32> = filterDims + vec2<i32>(
              ${e.dilations[0]<=1?0:(e.kernelShape[s?1:2]-1)*(e.dilations[0]-1)},
              ${e.dilations[1]<=1?0:(e.kernelShape[s?2:3]-1)*(e.dilations[1]-1)});
        const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${e.pads[0]+e.pads[2]})/2,
                                         i32(effectiveFilterDims[1]) - 1 - (${e.pads[1]+e.pads[3]})/2);
        const strides : vec2<i32> = vec2<i32>(${e.strides[0]}, ${e.strides[1]});
        const dilation : vec2<i32> = vec2<i32>(${e.dilations[0]}, ${e.dilations[1]});
        const dimAOuter : i32 = ${t};
        const dimBOuter : i32 = ${o};
        const dimInner : i32 = ${i};
        ${Q}
        ${N2(s,u,e,C)}
        ${b?yo(I,x,"f32",void 0,!s,N):vo(I,x,"f32",void 0,!s,N,!1,void 0,a)}`}}});var F2,eu,Eg=B(()=>{"use strict";Nr();Pe();ke();F2=(r,e,n,t,o,i,u=!1,a)=>{let s=n.format==="NHWC",l=s?1:2,d=s?2:3,p=s?3:1,f=G.size(t),g=u?2:1,b=n.group,y=e[1].dims,$=y[0]/b,x=y[1],I=`
  fn setOutputAtIndex(flatIndex : u32, value : ${u?`vec4<${a}>`:a}) {
    result[flatIndex] = ${u?`vec4<${a}>`:a}(value);
  }`;o&&(I+=`
    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${u?`vec4<${a}>`:a} {
      return bias[coords.${s?"w":"y"}${u?"/ 4":""}];
    }`);let O=u?4:1,C=U("W",e[1].dataType,e[1].dims,O),N=U("Dy",e[0].dataType,e[0].dims,O),R=[N,C];o&&R.push(U("bias",e[2].dataType,[t[p]],O));let V=ee("result",e[0].dataType,t,O),W=`{
        let batch: u32 = ${i?"global_id.z":"workgroup_id.z"} / outShape[1];
        let r = ${i?"global_id.z":"workgroup_id.z"} % outShape[1];
        let c = ${i?"global_id.y":"workgroup_id.y"} * ${g};
        let d1: u32 = ${i?"global_id.x":"workgroup_id.x"} * 4;

        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(pads);

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd: array<vec4<${a}>, ${g}>;
        for (var i = 0; i < ${g}; i++) {
          dotProd[i] = vec4<${a}>(0.0);
        }
        for (var wR: u32 = 0; wR < filterDims[0]; wR = wR + 1) {
          var dyR = (${a}(dyCorner.x) + ${a}(wR)) / ${a}(strides.x);
          let wRPerm = filterDims[0] - 1 - wR;
          if (dyR < 0.0 || dyR >= ${a}(outBackprop[1]) ||
              fract(dyR) > 0.0 || wRPerm < 0) {
            continue;
          }
          let idyR: u32 = u32(dyR);

          for (var wC: u32 = 0; wC < filterDims[1]; wC = wC + 1) {
            let dyC = (${a}(dyCorner.y) + ${a}(wC)) / ${a}(strides.y);
            let dyC2 = (${a}(dyCorner.y) + 1.0 + ${a}(wC)) / ${a}(strides.y);
            let wCPerm = filterDims[1] - 1 - wC;
            if (wCPerm < 0) {
              continue;
            }
            var bDyCVal = true;
            var bDyCVal2 = true;
            if (dyC < 0.0 || dyC >= ${a}(outBackprop[2]) ||
                fract(dyC) > 0.0) {
              bDyCVal = false;
            }
            if (dyC2 < 0.0 || dyC2 >= ${a}(outBackprop[2]) ||
                fract(dyC2) > 0.0) {
              bDyCVal2 = false;
            }

            let idyC: u32 = u32(dyC);
            let idyC2: u32 = u32(dyC2);
            if (bDyCVal && bDyCVal2) {
              let d2Length = outBackprop[3];
              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${N.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${a}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;

                xValue =  ${N.get("batch","idyR","idyC2","d2")};

                dotProd[1] = dotProd[1] + vec4<${a}>(dot(xValue, wValue0),
                                                    dot(xValue, wValue1),
                                                    dot(xValue, wValue2),
                                                    dot(xValue, wValue3));
              }
            } else if (bDyCVal) {
              let d2Length = outBackprop[${p}];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${N.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${a}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;
              }
            } else if (bDyCVal2) {
              let d2Length = outBackprop[3];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${N.get("batch","idyR","idyC2","d2")};
                let tmpval = vec4<${a}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[1] = dotProd[1] + tmpval;
              }
            }
          }
        }

        for (var i: u32 = 0; i < ${g}; i = i + 1) {
          let value = dotProd[i] + ${o?"bias[c+i]":"0.0"};
          ${V.set("batch","r","c + i","d1","value")};
        }
      }`,j=`
          let outputIndices = ${V.offsetToIndices("global_idx")};
          let batch = ${V.indicesGet("outputIndices",0)};
          let d1 = ${V.indicesGet("outputIndices",p)};
          let r = ${V.indicesGet("outputIndices",l)};
          let c = ${V.indicesGet("outputIndices",d)};
          let dyCorner = vec2<i32>(i32(r), i32(c)) - pads;
          let dyRCorner = dyCorner.x;
          let dyCCorner = dyCorner.y;
          let groupId = d1 / ${x};
          let wOutChannel = d1 - groupId * ${x};
          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
          // ? = to be determined. : = across all values in that axis.
          var dotProd = 0.0;
          for (var wR: u32 = 0; wR < effectiveFilterDims.x; wR = wR + 1) {
            if (wR % dilations.x != 0) {
              continue;
            }
            let dyR = (${a}(dyRCorner) + ${a}(wR)) / ${a}(strides[0]);
            let wRPerm = filterDims.x - 1 - wR / dilations.x;
            if (dyR < 0.0 || dyR >= ${a}(outBackprop[${l}]) || fract(dyR) > 0.0 ||
                wRPerm < 0) {
              continue;
            }
            let idyR: u32 = u32(dyR);

            for (var wC: u32 = 0; wC < effectiveFilterDims.y; wC = wC + 1) {
              if (wC % dilations.y != 0) {
                continue;
              }
              let dyC = (${a}(dyCCorner) + ${a}(wC)) / ${a}(strides.y);
              let wCPerm = filterDims.y - 1 - wC / dilations.y;
              if (dyC < 0.0 || dyC >= ${a}(outBackprop[${d}]) ||
                  fract(dyC) > 0.0 || wCPerm < 0) {
                continue;
              }
              let idyC: u32 = u32(dyC);
              var inputChannel = groupId * ${$};
              for (var d2: u32 = 0; d2 < ${$}; d2 = d2 + 1) {
                let xValue = ${s?N.get("batch","idyR","idyC","inputChannel"):N.get("batch","inputChannel","idyR","idyC")};
                let wValue = ${C.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};
                dotProd = dotProd + xValue * wValue;
                inputChannel = inputChannel + 1;
              }
            }
          }
          let value = dotProd + ${o?"bias[d1]":"0.0"};
          ${V.setByOffset("global_idx","value")};
        `;return`
  ${r.declareVariables(...R,V)}
  ${I}
  const outShape : vec4<u32> = vec4<u32>(${t.join(",")});
  const outBackprop : vec4<u32> = vec4<u32>(${e[0].dims.join(",")});
  const strides : vec2<u32> = vec2<u32>(${n.strides[0]}, ${n.strides[1]});
  const filterDims : vec2<u32> = vec2<u32>(${n.kernelShape[s?1:2]}, ${n.kernelShape[s?2:3]});
  const dilations : vec2<u32> = vec2<u32>(${n.dilations[0]}, ${n.dilations[1]});
  const effectiveFilterDims : vec2<u32> = filterDims + vec2<u32>(
          ${n.dilations[0]<=1?0:(n.kernelShape[s?1:2]-1)*(n.dilations[0]-1)},
          ${n.dilations[1]<=1?0:(n.kernelShape[s?2:3]-1)*(n.dilations[1]-1)});
  const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${n.pads[0]+n.pads[2]})/2,
                                     i32(effectiveFilterDims[1]) - 1 - (${n.pads[1]+n.pads[3]})/2);
    ${r.mainStart()}
    ${r.guardAgainstOutOfBoundsWorkgroupSizes(f)};
  ${u?W:j}}`},eu=(r,e,n)=>{let t=r.length>2,o=e.outputShape,i=G.size(o),u=[Math.ceil(i/64),1,1];nt("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${u}`);let a=je(r[0].dataType);return{name:"ConvTranspose2D",shaderCache:{hint:e.cacheKey},getRunData:()=>({dispatchGroup:{x:u[0],y:u[1],z:u[2]},outputs:[{dims:n?n(o):o,dataType:r[0].dataType}]}),getShaderSource:s=>F2(s,r,e,o,t,u[1]===1&&u[2]===1,!1,a)}}});var V2,G2,W2,Cg,Pg,U2,H2,q2,j2,kg,Dg=B(()=>{"use strict";et();Og();Eg();cn();Dn();V2=(r,e,n,t,o,i)=>(r-1)*e+n+(t-1)*o+1-i,G2=(r,e,n,t,o)=>{let i=Math.floor(r/2);e==="SAME_UPPER"?(n[t]=i,n[o]=r-i):e==="SAME_LOWER"&&(n[t]=r-i,n[o]=i)},W2=(r,e,n,t,o,i,u,a,s,l)=>{let d=r.length-2,p=l.length===0;if(s.length===0)for(let b=0;b<d;++b)s.push(0);let f=r[0],g=e[a?3:1]*o;for(let b=0,y=r.length-d-(a?1:0);b<d;++b,++y){let $=r[y],x=p?$*u[b]:l[b],I=V2($,u[b],i[b],e[y],n[b],x);G2(I,t,i,b,b+d),p&&l.push(u[b]*($-1)+s[b]+(e[y]-1)*n[b]+1-i[b]-i[b+d])}l.splice(0,0,f),l.splice(a?3:1,0,g)},Cg=(r,e)=>{let n=r.kernelShape.slice();if(r.kernelShape.length===0||r.kernelShape.reduce((f,g)=>f*g,1)===0){n.length=0;for(let f=2;f<e[1].dims.length;++f)n.push(e[1].dims[f])}let t=r.format==="NHWC";n.splice(0,0,e[1].dims[0]),n.splice(t?3:1,0,e[1].dims[1]);let o=r.pads.slice(),i=r.outputShape.slice(),u=r.outputPadding.slice(),a=e[0].dims,s=r.dilations.slice();if(s.reduce((f,g)=>f+g,0)===0){let f=e[0].dims.length-2;s=new Array(f).fill(1)}let l=r.strides.slice();if(l.reduce((f,g)=>f+g,0)===0){let f=e[0].dims.length-2;l=new Array(f).fill(1)}W2(a,n,s,r.autoPad,r.group,o,l,t,u,i);let d=Object.assign({},r),p=r.cacheKey+[n.join("n,"),o.join(","),l.join(","),u.join(","),i.join(","),s.join(",")].join("_");return Object.assign(d,{kernelShape:n,pads:o,outputPadding:u,outputShape:i,dilations:s,strides:l,cacheKey:p}),d},Pg=r=>{let e=Ji(r),n=r.format,t=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof r.autoPad>"u"?0:r.autoPad],o=r.dilations,i=r.group,u=r.kernelShape,a=r.pads,s=r.strides,l=r.wIsConst(),d=r.outputPadding,p=r.outputShape;return ue({autoPad:t,format:n,dilations:o,group:i,kernelShape:u,outputPadding:d,outputShape:p,pads:a,strides:s,wIsConst:l,...e})},U2=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4&&r[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(r[0].dims.length!==r[1].dims.length)throw new Error("filter does not have same dimension as input");let n=r[0].dims[e.format==="NHWC"?r[0].dims.length-1:1],t=r[1].dims[0];if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let o=r[1].dims[1]*e.group;if(r.length===3&&(r[2].dims.length!==1||r[2].dims[0]!==o))throw new Error("invalid bias");let i=r[0].dims.length-2;if(e.dilations.reduce((d,p)=>d+p,0)>0&&e.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(e.strides.reduce((d,p)=>d+p,0)>0&&e.strides.length!==i)throw new Error(`strides should be ${i}D`);if(e.pads.reduce((d,p)=>d+p,0)>0&&e.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(e.outputPadding.length!==i&&e.outputPadding.length!==0)throw new Error(`output_padding should be ${i}D`);if(e.kernelShape.reduce((d,p)=>d+p,0)>0&&e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape");if(e.outputShape.length!==0&&e.outputShape.length!==r[0].dims.length-2)throw new Error("invalid output shape")},H2=[2,3,1,0],q2=(r,e,n)=>{let t=Cg(n,e),o=n.format==="NHWC",i=t.outputShape,u=i[o?3:1],a=e[0].dims[o?3:1];if(t.group!==1||u===1&&a===1){r.compute(eu(e,t));return}let s=i[o?1:2],l=i[o?2:3],d=e[1].dims[2],p=e[1].dims[3],f=o?s*l:u,g=o?u:s*l,b=d*p*a,y=!0,$=r.kernelCustomData.wT??r.compute(rr(e[1],H2),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!r.kernelCustomData.wT&&(r.kernelCustomData.wT=$);let x=[e[0],$],I=e.length===3;I&&(!o&&e[2].dims.length===1?x.push(e[2].reshape([e[2].dims[0],1,1])):x.push(e[2])),r.compute(Ag(x,t,i,f,g,b,I,y),{inputs:x})},j2=(r,e)=>{let n=e.format==="NHWC",t=[r.inputs[0].reshape(n?[r.inputs[0].dims[0],1,r.inputs[0].dims[1],r.inputs[0].dims[2]]:[r.inputs[0].dims[0],r.inputs[0].dims[1],1,r.inputs[0].dims[2]]),r.inputs[1].reshape([r.inputs[1].dims[0],r.inputs[1].dims[1],1,r.inputs[1].dims[2]])];t.length===3&&t.push(r.inputs[2]);let o=e.kernelShape;(o.length===0||o[0]===0)&&(o=[r.inputs[1].dims[2]]);let i=e.dilations;(i.length===0||i[0]===0)&&(i=[1]);let u=e.strides;(u.length===0||u[0]===0)&&(u=[1]);let a=e.pads;a.length===0&&(a=[0,0]),a=[0,a[0],0,a[1]],u=[1].concat(u),i=[1].concat(i),o=[1].concat(o);let s=Cg({...e,pads:a,strides:u,dilations:i,kernelShape:o},t);r.compute(eu(t,s,l=>n?[l[0],l[2],l[3]]:[l[0],l[1],l[3]]))},kg=(r,e)=>{U2(r.inputs,e),r.inputs[0].dims.length===3?j2(r,e):q2(r,r.inputs,e)}});var K2,Bg,Rg,Mg=B(()=>{"use strict";at();Pe();et();ke();K2=(r,e,n,t)=>{let o=G.size(e),i=e.length,u=U("input",r,i),a=ee("output",r,i),s=n.dataType===6?n.getInt32Array()[0]:Number(n.getBigInt64Array()[0]),l=G.normalizeAxis(s,i),d=p=>{let f=` i32(${u.indicesGet("inputIndices","uniforms.axis")}) `,g=i===1?"i32(uniforms.input_shape)":"i32(uniforms.input_shape[uniforms.axis])",b=t.reverse?f+(t.exclusive?" + 1":""):"0",y=t.reverse?g:f+(t.exclusive?"":" + 1");return`
                ${p.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(u,a)}
                ${p.mainStart()}
                  ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${a.offsetToIndices("global_idx")};
                  var sum = 0.0;
                  let first : i32 = ${b};
                  let last : i32 = ${y};
                  for (var i : i32 = first; i < last; i++) {
                    ${u.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${u.getByIndices("inputIndices")};
                  }
                  ${a.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:e,dataType:r}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:[{type:"uint32",data:o},{type:"int32",data:l},...pe(e),...pe(e)]}),getShaderSource:d}},Bg=(r,e)=>{let n=r.inputs[0].dims,t=r.inputs[0].dataType,o=r.inputs[1];r.compute(K2(t,n,o,e),{inputs:[0]})},Rg=r=>{let e=r.exclusive===1,n=r.reverse===1;return ue({exclusive:e,reverse:n})}});var tu,na,Lg,Y2,X2,ru,nu,zg,Z2,Ng,Fg,Vg=B(()=>{"use strict";Pe();et();ke();tu="[a-zA-Z]|\\.\\.\\.",na="("+tu+")+",Lg="^"+na+"$",Y2="("+na+",)*"+na,X2="^"+Y2+"$",ru=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,n){let t=this.symbolToIndices.get(e);t===void 0?t=[n]:t.push(n),this.symbolToIndices.set(e,t)}},nu=class{constructor(e,n){this.equation=n;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[t,o]=n.includes("->")?n.split("->",2):[n,""];if(!t.match(RegExp(X2)))throw new Error("Invalid LHS term");if(t.split(",").forEach((a,s)=>{let l=e[s].dims.slice();if(!a.match(RegExp(Lg)))throw new Error("Invalid LHS term");let d=this.processTerm(a,!0,l,s);this.lhs.push(d)}),o==="")o+=[...this.symbolToInfo.entries()].filter(([a,s])=>s.count===1||a==="...").map(([a])=>a).join("");else if(!o.match(RegExp(na)))throw new Error("Invalid RHS");o.match(RegExp(tu,"g"))?.forEach(a=>{if(a==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let s=this.symbolToInfo.get(a);if(s===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(s.dimValue)}}),this.rhs=this.processTerm(o,!1,this.outputDims)}addSymbol(e,n,t){let o=this.symbolToInfo.get(e);if(o!==void 0){if(o.dimValue!==n&&o.count!==1)throw new Error("Dimension mismatch");o.count++,o.inputIndices.push(t)}else o={count:1,dimValue:n,inputIndices:[t]};this.symbolToInfo.set(e,o)}processTerm(e,n,t,o=-1){let i=t.length,u=!1,a=[],s=0;if(!e.match(RegExp(Lg))&&!n&&e!=="")throw new Error("Invalid LHS term");let l=e.match(RegExp(tu,"g")),d=new ru(o);return l?.forEach((p,f)=>{if(p==="..."){if(u)throw new Error("Only one ellipsis is allowed per input term");u=!0;let g=i-l.length+1;if(g<0)throw new Error("Ellipsis out of bounds");if(a=t.slice(s,s+g),this.hasEllipsis){if(this.ellipsisDims.length!==a.length||this.ellipsisDims.toString()!==a.toString())throw new Error("Ellipsis dimensions mismatch")}else if(n)this.hasEllipsis=!0,this.ellipsisDims=a;else throw new Error("Ellipsis must be specified in the LHS");for(let b=0;b<a.length;b++){let y=String.fromCharCode("0".charCodeAt(0)+b);d.addSymbol(y,f+b),this.addSymbol(y,t[s++],o)}}else d.addSymbol(p,f+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(p,t[s++],o)}),d}},zg=r=>r+"_max",Z2=(r,e,n,t,o)=>{let u=e.map((g,b)=>r[b]?g.length:g).map((g,b)=>U(`input${b}`,n,g)),a=G.size(o),s=tt(o.length),l=s?o.length:o,d=ee("output",n,l),p=[...t.symbolToInfo.keys()].filter(g=>!t.rhs.symbolToIndices.has(g)),f=g=>{let b=[],y="var prod = 1.0;",$="var sum = 0.0;",x="sum += prod;",I=[],O=[],C=[],N=[],R=t.symbolToInfo.size===t.rhs.symbolToIndices.size;t.symbolToInfo.forEach((W,j)=>{if(t.rhs.symbolToIndices.has(j)){let ie=t.rhs.symbolToIndices.get(j)?.[0];ie!==void 0&&t.lhs.forEach((P,Q)=>{if(W.inputIndices.includes(Q)){let Se=P.symbolToIndices.get(j);if(Se===void 0)throw new Error("Invalid symbol error");Se.forEach(le=>{b.push(`${u[Q].indicesSet(`input${Q}Indices`,le,d.indicesGet("outputIndices",ie))}`)})}})}else t.lhs.forEach((ie,P)=>{if(W.inputIndices.includes(P)){let Q=ie.symbolToIndices.get(j);if(Q===void 0)throw new Error("Invalid symbol error");Q.forEach(Se=>{I.push(`${u[P].indicesSet(`input${P}Indices`,Se,`${j}`)}`)}),N.push(`prod *= ${u[P].getByIndices(`input${P}Indices`)};`)}}),O.push(`for(var ${j}: u32 = 0; ${j} < uniforms.${zg(j)}; ${j}++) {`),C.push("}")});let V=R?[...b,`let sum = ${u.map((W,j)=>W.getByIndices(`input${j}Indices`)).join(" * ")};`]:[...b,$,...O,...I,y,...N,x,...C];return`
            ${g.registerUniforms(p.map(W=>({name:`${zg(W)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...u,d)}

            ${g.mainStart()}
            ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${d.offsetToIndices("global_idx")};
            ${u.map((W,j)=>`var input${j}Indices: ${u[j].type.indices};`).join(`
`)}
            ${V.join(`
`)};
            ${d.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:t.equation,inputDependencies:r.map(g=>g?"rank":"dims")},getRunData:()=>{let g=p.filter(y=>t.symbolToInfo.has(y)).map(y=>({type:"uint32",data:t.symbolToInfo.get(y)?.dimValue||0}));g.push({type:"uint32",data:a});let b=e.filter((y,$)=>r[$]).map((y,$)=>[...pe(y)]).reduce((y,$)=>y.concat($),g);return s&&b.push(...pe(o)),{outputs:[{dims:o,dataType:n}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:b}},getShaderSource:f}},Ng=(r,e)=>{let n=new nu(r.inputs,e.equation),t=r.inputs.map((u,a)=>tt(u.dims.length)),o=n.outputDims,i=r.inputs.map((u,a)=>u.dims);r.compute(Z2(t,i,r.inputs[0].dataType,n,o))},Fg=r=>{let e=r.equation.replace(/\s+/g,"");return ue({equation:e})}});var J2,Gg,Q2,e1,Wg,Ug=B(()=>{"use strict";at();Pe();ke();J2=r=>{if(!r||r.length!==2)throw new Error("Expand requires 2 input.");let e=r[0].dims,n=Array.from(r[1].getBigInt64Array(),Number),t=n.length<e.length?0:n.length-e.length,o=e.length<n.length?0:e.length-n.length;for(;t<n.length&&o<e.length;++t,++o)if(n[t]!==e[o]&&n[t]!==1&&e[o]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Gg=(r,e)=>{let n=r.length-e.length,t=[];for(let o=0;o<n;++o)t.push(r[o]);for(let o=0;o<e.length;++o)t.push(e[o]===1?r[o+n]:e[o]);return t},Q2=(r,e)=>r.length>e.length?Gg(r,e):Gg(e,r),e1=r=>{let e=r[0].dims,n=Array.from(r[1].getBigInt64Array(),Number),t=Q2(e,n),o=r[0].dataType,i=o===9?4:1,u=G.size(t)/i,a=tt(e.length),s=tt(t.length),l=p=>{let f=a?e.length:e,g=s?t.length:t,b=U("input",o,f,i),y=ee("output",o,g,i),$;if(o===9){let x=(I,O,C="")=>`
          let outputIndices${O} = ${y.offsetToIndices(`outputOffset + ${O}u`)};
          let offset${O} = ${b.broadcastedIndicesToOffset(`outputIndices${O}`,y)};
          let index${O} = offset${O} / 4u;
          let component${O} = offset${O} % 4u;
          ${I}[${O}] = ${C}(${b.getByOffset(`index${O}`)}[component${O}]);
        `;$=`
        let outputOffset = global_idx * ${i};
        var data = vec4<u32>(0);
        ${x("data",0,"u32")}
        ${x("data",1,"u32")}
        ${x("data",2,"u32")}
        ${x("data",3,"u32")}
        ${y.setByOffset("global_idx","data")}
      }`}else $=`
        let outputIndices = ${y.offsetToIndices("global_idx")};
        let inputOffset = ${b.broadcastedIndicesToOffset("outputIndices",y)};
        ${y.setByOffset("global_idx",b.getByOffset("inputOffset"))}
      }`;return`
    ${p.registerUniform("vec_size","u32").declareVariables(b,y)}
    ${p.mainStart()}
    ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${$}`},d=[{type:"uint32",data:u}];return a&&d.push(...pe(e)),s&&d.push(...pe(t)),{name:"Expand",shaderCache:{hint:`${t.length}`,inputDependencies:[a?"rank":"dims"]},getShaderSource:l,getRunData:()=>({outputs:[{dims:t,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:d})}},Wg=r=>{J2(r.inputs),r.compute(e1(r.inputs),{inputs:[0]})}});var t1,r1,Hg,qg,jg=B(()=>{"use strict";at();Pe();et();ke();t1=r=>{if(!r||r.length!==2)throw new Error("Gather requires 2 inputs.")},r1=(r,e)=>{let n=r[0].dims,t=r[1].dims,o=n.length,i=G.normalizeAxis(e.axis,o),u=n.slice(0);u.splice(i,1,...t);let a=n[i],s=r[0].dataType===9?4:1,l=G.size(u)/s,d=tt(r[0].dims.length),p=d?r[0].dims.length:r[0].dims,f=tt(r[1].dims.length),g=f?r[1].dims.length:r[1].dims,b=tt(u.length),y=b?u.length:u,$=[{type:"uint32",data:l},{type:"int32",data:a},{type:"uint32",data:i}];d&&$.push(...pe(r[0].dims)),f&&$.push(...pe(r[1].dims)),b&&$.push(...pe(u));let x=[];x.push(d?"rank":"dims"),x.push(f?"rank":"dims");let I=O=>{let C=U("data",r[0].dataType,p,s),N=U("inputIndices",r[1].dataType,g),R=ee("output",r[0].dataType,y,s),V=j=>{let ie=t.length,P=`var indicesIndices${j}  = ${N.type.indices}(0);`;for(let Q=0;Q<ie;Q++)P+=`${ie>1?`indicesIndices${j}[${Q}]`:`indicesIndices${j}`} = ${u.length>1?`outputIndices${j}[uniforms.axis + ${Q}]`:`outputIndices${j}`};`;P+=`
          var idx${j} = ${N.getByIndices(`indicesIndices${j}`)};
          if (idx${j} < 0) {
            idx${j} = idx${j} + uniforms.axisDimLimit;
          }
          var dataIndices${j} = ${C.type.indices}(0);
        `;for(let Q=0,Se=0;Q<o;Q++)Q===i?(P+=`${o>1?`dataIndices${j}[${Q}]`:`dataIndices${j}`} = u32(idx${j});`,Se+=ie):(P+=`${o>1?`dataIndices${j}[${Q}]`:`dataIndices${j}`} = ${u.length>1?`outputIndices${j}[${Se}]`:`outputIndices${j}`};`,Se++);return P},W;if(r[0].dataType===9){let j=(ie,P,Q="")=>`
          let outputIndices${P} = ${R.offsetToIndices(`outputOffset + ${P}u`)};
          ${V(P)};
          let offset${P} = ${C.indicesToOffset(`dataIndices${P}`)};
          let index${P} = offset${P} / 4u;
          let component${P} = offset${P} % 4u;
          ${ie}[${P}] = ${Q}(${C.getByOffset(`index${P}`)}[component${P}]);
        `;W=`
        let outputOffset = global_idx * ${s};
        var value = vec4<u32>(0);
        ${j("value",0,"u32")}
        ${j("value",1,"u32")}
        ${j("value",2,"u32")}
        ${j("value",3,"u32")}
        ${R.setByOffset("global_idx","value")}
      `}else W=`
      let outputIndices = ${R.offsetToIndices("global_idx")};
      ${V("")};
      let value = ${C.getByIndices("dataIndices")};
      ${R.setByOffset("global_idx","value")};
      `;return`
      ${O.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(C,N,R)}
      ${O.mainStart()}
        ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${W}
      }`};return{name:"Gather",shaderCache:{hint:e.cacheKey,inputDependencies:x},getRunData:()=>({outputs:[{dims:u,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:$}),getShaderSource:I}},Hg=r=>ue({axis:r.axis}),qg=(r,e)=>{let n=r.inputs;t1(n),r.compute(r1(r.inputs,e))}});var n1,o1,Kg,Yg,Xg=B(()=>{"use strict";Pe();et();ke();n1=r=>{if(!r||r.length!==2)throw new Error("GatherElements requires 2 inputs.");if(r[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(r[0].dims.length!==r[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},o1=(r,e)=>{let n=r[0].dims,t=r[0].dataType,o=n.length,i=r[1].dims,u=r[1].dataType,a=G.normalizeAxis(e.axis,o),s=n[a],l=i.slice(0),d=G.size(l),p=U("input",t,o),f=U("indicesInput",u,i.length),g=ee("output",t,l.length),b=[{type:"uint32",data:d},{type:"int32",data:s},{type:"uint32",data:a}];return b.push(...pe(n)),b.push(...pe(i)),b.push(...pe(l)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:l,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:b}),getShaderSource:x=>`
      ${x.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(p,f,g)}
      ${x.mainStart()}
      ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${g.offsetToIndices("global_idx")};

      var idx = ${f.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${p.type.indices}(outputIndices);
      ${p.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${p.getByIndices("inputIndices")};

      ${g.setByOffset("global_idx","value")};
  }`}},Kg=r=>ue({axis:r.axis}),Yg=(r,e)=>{let n=r.inputs;n1(n),r.compute(o1(r.inputs,e))}});var i1,a1,s1,Zg,Jg,Qg=B(()=>{"use strict";Pe();et();ke();i1=r=>{if(!r)throw new Error("Input is missing");if(r.length<2||r.length>3)throw new Error("Invaid input number.");if(r.length===3&&r[2].dims.length>2)throw new Error("Invalid input shape of C");if(r[0].dataType!==r[1].dataType||r.length===3&&r[0].dataType!==r[2].dataType)throw new Error("Input types are mismatched")},a1=(r,e,n)=>{if(n.length===0)return"0u";let t=n.length===1&&r!==1||n.length===2&&n[0]!==r,o=n[n.length-1]!==e,i="0u";return t||(i+=`+ m * ${n[n.length-1]}u`),o||(i+="+n"),i},s1=(r,e)=>{let n=r[0].dims.slice(),t=r[1].dims.slice(),[o,i,u]=Ui.getShapeOfGemmResult(n,e.transA,t,e.transB,r.length===3?r[2].dims:void 0),a=[o,i];if(!a)throw new Error("Can't use gemm on the given tensors");let s=G.size(a),l="";e.transA&&e.transB?l="value += a[k * M + m] * b[n * K + k];":e.transA&&!e.transB?l="value += a[k * M + m] * b[k * N + n];":!e.transA&&e.transB?l="value += a[m * K + k] * b[n * K + k];":!e.transA&&!e.transB&&(l="value += a[m * K + k] * b[k * N + n];");let d=je(r[0].dataType),p=e.alpha===1?"":"value *= alpha;",f=r.length===3?`value += beta * c[${a1(o,i,r[2].dims)}];`:"",g=[`@group(0) @binding(0) var<storage, read> a : array<${d}>;`,`@group(0) @binding(1) var<storage, read> b : array<${d}>;`];r.length===3&&g.push(`@group(0) @binding(2) var<storage, read> c : array<${d}>;`);let b=y=>`
  const M: u32 = ${o}u;
  const N: u32 = ${i}u;
  const K: u32 = ${u}u;
  const alpha = ${d}(${e.alpha});
  const beta = ${d}(${e.beta});

  ${g.join(`
`)}
  @group(0) @binding(${r.length}) var<storage, read_write> output : array<${d}>;

  ${y.mainStart()}
    ${y.guardAgainstOutOfBoundsWorkgroupSizes(s)}

    let m = global_id.x / N;
    let n = global_id.x % N;

    var value = ${d}(0);
    for (var k: u32 = 0u; k<${u}u; k++) {
      ${l}
    }

    ${p}
    ${f}
    output[global_id.x] = value;

  }`;return{name:"Gemm",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:a,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:b}},Zg=(r,e)=>{i1(r.inputs),r.compute(s1(r.inputs,e))},Jg=r=>ue(r)});var u1,l1,d1,c1,eb,tb,rb=B(()=>{"use strict";at();Pe();et();ke();u1={name:"InstanceNormalization"},l1=(r,e)=>{let n=r[0].dims,t=n,o=2,i=G.sizeToDimension(n,o),u=G.sizeFromDimension(n,o),a=n[1],s=U("x",r[0].dataType,[n[0],n[1],u]),l=U("scale",r[1].dataType,r[1].dims),d=U("bias",r[2].dataType,r[2].dims),p=ee("output",r[0].dataType,[n[0],n[1],u]),f=[s,l,d,p],g=s.type.value,b=64,y=$=>`

  const C: u32 = ${a};
  const normSize: u32 = ${u};
  const epsilon: f32 = ${e.epsilon};
  var<workgroup> meanShared : ${g};
  var<workgroup> squaredNormShared : ${g};
  var<workgroup> workgroupShared : array<${g}, ${b}>;
  const workgroupSize = ${b}u;
  ${$.declareVariables(...f)}
  ${$.mainStart(b)}
    let norm = global_idx / workgroupSize;
    let batch = norm / C;
    let channel = norm % C;
    let localIndex = local_id.x;

    // initialize workgroup memory
    var initial: ${g} = 0;
    for (var h = localIndex; h < normSize; h += workgroupSize) {
      initial = initial + ${s.get("batch","channel","h")};
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the mean of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      meanShared = workgroupShared[0] / ${g}(normSize);
    }
    workgroupBarrier();

    // reinitialize workgroup memory.
    initial = 0;
    for (var h = localIndex; h < normSize; h += workgroupSize) {
      let deviation =  ${s.get("batch","channel","h")} - meanShared;
      initial = initial + deviation * deviation;
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the sum of square of deviation of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      squaredNormShared = workgroupShared[0];
    }
    workgroupBarrier();

    let invStdDev = 1 / sqrt(squaredNormShared / ${g}(normSize) + epsilon);
    let channelScale = invStdDev * ${l.getByOffset("channel")};
    let channelShift = ${d.getByOffset("channel")} - meanShared * channelScale;
    for (var h = localIndex; h < normSize; h += workgroupSize) {
      let value = ${s.get("batch","channel","h")} * channelScale + channelShift;
      ${p.set("batch","channel","h","value")};
    }
  }`;return{...u1,shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:t,dataType:r[0].dataType}],dispatchGroup:{x:i}}),getShaderSource:y}},d1=(r,e,n,t,o,i,u,a)=>{let s=Mt(u),l=U("input",e.dataType,e.dims,s),d=U("scale",n.dataType,n.dims,s),p=U("bias",t.dataType,t.dims,s),f=64,g=s===1?"vec2f":`mat2x${s}f`,b=s===1?"f32":`vec${s}f`,y=(N,R)=>`${g}(${N}, ${R})`,$=o*u/s,x=Math.ceil(i/f),I=N=>`
  const H: u32 = ${i};
  const C: u32 = ${u/s};
  const imageSize: u32 = ${i*u/s};

  ${N.declareVariables(l)}
  @group(0) @binding(1) var<storage, read_write> output : array<${g}>;

  ${N.mainStart(f)}
    let currentImageNumber = global_idx / ${f} / C;
    let currentChannelNumber = (global_idx / ${f}) % C;
    let wgId = global_idx % ${f};
    let wgOffset = wgId * ${x};
    if (wgOffset >= H) {
        return;
    }
    let wgMax = min(wgOffset + ${x}, H);

    let offset = currentImageNumber * imageSize + currentChannelNumber;
    var sum = ${$t("f32",s)};
    var squaredSum = ${$t("f32",s)};
    for (var i: u32 = wgOffset; i < wgMax; i++) {
        let value = ${b}(input[offset + i * C]);
        sum += value;
        squaredSum += value * value;
    }
    output[global_idx] = ${y("sum","squaredSum")};
  }`,O=r.compute({name:"InstanceNormComputeMean",shaderCache:{hint:JSON.stringify({components:s,n:o,h:i,c:u})},getRunData:()=>({outputs:[{dims:[o,u,f,2],dataType:1}],dispatchGroup:{x:o*u/s}}),getShaderSource:I},{inputs:[e],outputs:[-1]})[0],C=N=>`
  const H: u32 = ${i};
  const C: u32 = ${u/s};
  const imageSize: u32 = ${f*u/s};
  const epsilon: f32 = ${a};

  @group(0) @binding(0) var<storage, read> input : array<${g}>;
  @group(0) @binding(1) var<storage, read> scale : array<${d.type.storage}>;
  @group(0) @binding(2) var<storage, read> bias : array<${p.type.storage}>;
  @group(0) @binding(3) var<storage, read_write> output : array<${g}>;

  ${N.mainStart()}
    ${N.guardAgainstOutOfBoundsWorkgroupSizes($)}
    let currentImageNumber = global_idx / C;
    let currentChannelNumber = global_idx % C;

    let offset = currentImageNumber * imageSize;
    var sum = ${$t("f32",s)};
    var squaredSum = ${$t("f32",s)};
    for (var i: u32 = 0; i < ${f}; i++) {
        let value = input[offset + i + currentChannelNumber * ${f}];
        sum += value[0];
        squaredSum += value[1];
    }
    sum = sum / f32(H);
    squaredSum = squaredSum / f32(H);
    let invStdDev = 1 / sqrt(squaredSum - sum * sum + epsilon);
    let channelScale = invStdDev * ${b}(scale[currentChannelNumber]);
    let channelShift = ${b}(bias[currentChannelNumber]) - sum * channelScale;

    output[global_idx] = ${y("channelScale","channelShift")};
  }`;return r.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:JSON.stringify({components:s,n:o,h:i,c:u,epsilon:a})},getRunData:()=>({outputs:[{dims:[o,u,2],dataType:1}],dispatchGroup:{x:Math.ceil($/64)}}),getShaderSource:C},{inputs:[O,n,t],outputs:[-1]})[0]},c1=(r,e,n)=>{let t=e[0].dims,o=t,i=t[0],u=t[t.length-1],a=G.sizeFromDimension(t,1)/u,s=Mt(u),l=G.size(o)/s,d=U("input",e[0].dataType,e[0].dims,s),p=ee("output",e[0].dataType,o,s),f=je(e[0].dataType),g=s===1?"vec2f":`mat2x${s}f`,b=s===1?f:`vec${s}<${f}>`,y=d1(r,e[0],e[1],e[2],i,a,u,n.epsilon),$=x=>`
  const H: u32 = ${a};
  const C: u32 = ${u/s};

  @group(0) @binding(0) var<storage, read> input : array<${d.type.storage}>;
  @group(0) @binding(1) var<storage, read> scaleInput : array<${g}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${p.type.storage}>;

  ${x.mainStart()}
    let currentImageNumber = global_idx / (C * H);
    let currentChannelNumber = global_idx % C;

    let scaleOffset = currentImageNumber * C + currentChannelNumber;
    let scale = scaleInput[scaleOffset];
    output[global_idx] = fma(input[global_idx], ${b}(scale[0]), ${b}(scale[1]));
  }`;r.compute({name:"InstanceNormalization",shaderCache:{hint:`${n.cacheKey}`},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)}}),getShaderSource:$},{inputs:[e[0],y]})},eb=r=>ue({epsilon:r.epsilon,format:r.format}),tb=(r,e)=>{e.format==="NHWC"?c1(r,r.inputs,e):r.compute(l1(r.inputs,e))}});var f1,p1,nb,ob,ib=B(()=>{"use strict";at();Pe();et();ke();f1=r=>{if(!r||r.length<2)throw new Error("layerNorm requires at least 2 inputs.")},p1=(r,e,n)=>{let t=r[0].dims,o=r[1],i=r[2],u=t,a=G.normalizeAxis(e.axis,t.length),s=G.sizeToDimension(t,a),l=G.sizeFromDimension(t,a),d=G.size(o.dims),p=i?G.size(i.dims):0;if(d!==l||i&&p!==l)throw new Error(`Size of X.shape()[axis:] == ${l}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${d} and bias size of ${p}`);let f=[];for(let C=0;C<t.length;++C)C<a?f.push(t[C]):f.push(1);let g=Mt(l),b=je(r[0].dataType),y=[U("x",r[0].dataType,r[0].dims,g),U("scale",o.dataType,o.dims,g)];i&&y.push(U("bias",i.dataType,i.dims,g)),y.push(ee("output",r[0].dataType,u,g));let $=n>1,x=n>2;$&&y.push(ee("meanDataOutput",1,f)),x&&y.push(ee("invStdOutput",1,f));let I=C=>`
  const normSize: f32 = ${l};
  const normSizeVectorized: u32 = ${l/g};
  const epsilon: f32 = ${e.epsilon};

  ${C.declareVariables(...y)}
  ${C.mainStart()}
    ${C.guardAgainstOutOfBoundsWorkgroupSizes(s)}
    let offset = global_idx * normSizeVectorized;
    var meanVector = ${$t("f32",g)};
    var meanSquareVector = ${$t("f32",g)};

    for (var h: u32 = 0u; h < normSizeVectorized; h++) {
      let value = ${er(b,g,"x[h + offset]")};
      meanVector += value;
      meanSquareVector += value * value;
    }
    let mean = ${tr("meanVector",g)} / normSize;
    let meanSquare = sqrt(${tr("meanSquareVector",g)} 
      / normSize - mean * mean + epsilon);

    for (var j: u32 = 0; j < normSizeVectorized; j++) {
      let f32input = ${er(b,g,"x[j + offset]")};
      let f32scale = ${er(b,g,"scale[j]")};
      output[j + offset] = ${y[0].type.value}((f32input - mean) / meanSquare * f32scale
        ${i?`+ ${er(b,g,"bias[j]")}`:""}
      );
    }

    ${$?"meanDataOutput[global_idx] = mean":""};
    ${x?"invStdOutput[global_idx] = 1 / meanSquare":""};
  }`,O=[{dims:u,dataType:r[0].dataType}];return $&&O.push({dims:f,dataType:1}),x&&O.push({dims:f,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${e.cacheKey}|${n}|${r.length}`},getRunData:()=>({outputs:O,dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:I}},nb=r=>ue({axis:r.axis,epsilon:r.epsilon}),ob=(r,e)=>{f1(r.inputs),r.compute(p1(r.inputs,e,r.outputCount))}});var h1,ab,sb=B(()=>{"use strict";Pe();wo();h1=r=>{if(!r||r.length!==2)throw new Error("MatMul requires 2 inputs.");if(r[0].dims[r[0].dims.length-1]!==r[1].dims[r[1].dims.length-2])throw new Error("shared dimension does not match.")},ab=r=>{h1(r.inputs);let e=hr.calcShape(r.inputs[0].dims,r.inputs[1].dims,!0);if(!e)throw new Error("Can't use matmul on the given tensors");r.compute(ra(r.inputs,{activation:"",activationCacheKey:""},e))}});var m1,lb,ub,g1,ou,db,cb=B(()=>{"use strict";Pe();et();Gi();qs();ke();Dn();m1=(r,e)=>{let n=r[0],t=r[1],o=r[2],i=r[3],u=r[4],a=r[5],s=r[6],l=r[7];if(n.dims.length!==3&&n.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let d=!1,p=n.dims[0],f=n.dims[1],g=n.dims.length===3?d?n.dims[2]/3:n.dims[2]:e.numHeads*n.dims[4],b=f,y=0,$=0,x=Math.floor(g/e.numHeads);if(s&&l){if(s.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(l.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');y=s.dims[2],$=s.dims[2]}else if(s||l)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let I;if(t){if(n.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(t.dims.length<3||t.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(n.dims[0]!==t.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(t.dims.length===3){if(t.dims[2]!==n.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');I=2,b=t.dims[1]}else if(t.dims.length===5){if(t.dims[2]!==e.numHeads||t.dims[3]!==2||t.dims[4]!==x)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(o)throw new Error('Expect "value" be none when "key" has packed kv format.');I=5,b=t.dims[1]}else{if(t.dims[1]!==e.numHeads||t.dims[3]!==x)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');I=0,b=t.dims[2]}}else{if(n.dims.length!==3&&n.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(n.dims.length===5&&(n.dims[2]!==e.numHeads||n.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');I=3}if(i){if(i.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(o&&n.dims.length===5&&n.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let O=0;if(u){O=8;let W=u.dims;throw W.length===1?W[0]===p?O=1:W[0]===3*p+2&&(O=3):W.length===2&&W[0]===p&&W[1]===b&&(O=5),O===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)'):new Error("Mask not supported")}let C=!1,N=g;if(o){if(o.dims.length!==3&&o.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(n.dims[0]!==o.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(o.dims.length===3){if(b!==o.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');N=o.dims[2]}else{if(b!==o.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');N=o.dims[1]*o.dims[3],C=!0}}let R=y+b,V=!1;if(u)throw new Error("Key padding mask is not supported");if(a)throw new Error("extraAddQk is not supported");if(s)throw new Error("pastKey is not supported");if(l)throw new Error("pastValue is not supported");return{batchSize:p,sequenceLength:f,pastSequenceLength:y,kvSequenceLength:b,totalSequenceLength:R,maxSequenceLength:$,inputHiddenSize:0,hiddenSize:g,vHiddenSize:N,headSize:x,vHeadSize:Math.floor(N/e.numHeads),numHeads:e.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:e.maskFilterValue,maskType:O,scale:e.scale,broadcastResPosBias:V,passPastInKv:C,qkvFormat:I}},lb=r=>ue({...r}),ub=ue({perm:[0,2,1,3]}),g1=(r,e,n,t,o,i,u)=>{let a=[t,o,i],s=G.size(a),l=je(e.dataType),d=p=>`
  const biasOffset = ${u}u;
  const hiddenSize = ${i}u;

  @group(0) @binding(0) var<storage, read> qkv: array<${l}>;
  @group(0) @binding(1) var<storage, read> bias: array<${l}>;
  @group(0) @binding(2) var<storage, read_write> qkv_with_bias: array<${l}>;

  ${p.mainStart()}
    ${p.guardAgainstOutOfBoundsWorkgroupSizes(s)}
    let biasOffsetIdx = (global_idx % hiddenSize) + biasOffset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[biasOffsetIdx];
  }`;return r.compute({name:"MultiHeadAttentionAddBias",shaderCache:{hint:JSON.stringify({batchSize:t,sequenceLength:o,hiddenSize:i,biasOffset:u})},getRunData:()=>({outputs:[{dims:a,dataType:e.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:d},{inputs:[e,n],outputs:[-1]})[0]},ou=(r,e,n,t,o,i,u,a)=>{let s=i;if(u){if(t===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return s=g1(r,i,u,e,t,n*o,a),s=s.reshape([e,t,n,o]),r.compute(rr(s,ub.perm),{inputs:[s],outputs:[-1]})[0]}else return i.dims.length===3&&(s=i.reshape([e,t,n,o])),r.compute(rr(s,ub.perm),{inputs:[s],outputs:[-1]})[0]},db=(r,e)=>{let n=m1(r.inputs,e);if(r.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(r.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let t=r.inputs[1]&&r.inputs[2]&&r.inputs[1].dims.length===4&&r.inputs[2].dims.length===4,o=ou(r,n.batchSize,n.numHeads,n.sequenceLength,n.headSize,r.inputs[0],r.inputs[3],0);if(t)return Yi(r,o,r.inputs[1],r.inputs[2],r.inputs[4],void 0,void 0,void 0,r.inputs[5],n,e);let i=ou(r,n.batchSize,n.numHeads,n.kvSequenceLength,n.headSize,r.inputs[1],r.inputs[3],n.hiddenSize),u=ou(r,n.batchSize,n.numHeads,n.kvSequenceLength,n.vHeadSize,r.inputs[2],r.inputs[3],2*n.hiddenSize);Yi(r,o,i,u,r.inputs[4],void 0,r.inputs[6],r.inputs[7],r.inputs[5],n,e)}});var b1,y1,v1,w1,x1,T1,$1,S1,I1,fb,pb,hb=B(()=>{"use strict";at();Pe();et();ke();b1=r=>{if(!r||r.length<1)throw new Error("Too few inputs");if(r[0].dataType!==1)throw new Error("Input type must be float.");if(r.length>=2){let e=r[0].dims.length*2===r[1].dims[0];if(r.length===4&&(e=r[3].dims[0]*2===r[1].dims[0]),!e)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},y1=(r,e,n,t,o,i)=>{let u=e.length,a="";for(let s=u-1;s>=0;--s)a+=`
            k = i32(${r.indicesGet("indices",s)}) - ${t[s]};
            if (k < 0) {
              break;
            }
            if (k >= ${e[s]}) {
              break;
            }
            offset += k * ${n[s]};
        `;return`
          value = ${o}(${i});
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${a}
            value = x[offset];
          }
      `},v1=(r,e,n,t)=>{let o=e.length,i="";for(let u=o-1;u>=0;--u)i+=`
                k = i32(${r.indicesGet("indices",u)}) - ${t[u]};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = ${2*(e[u]-1)};
                  k = k % _2n_1;
                  if(k >= ${e[u]}) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * ${n[u]};
            `;return`
              var offset = 0;
              var k = 0;
              ${i}
              value = x[offset];
          `},w1=(r,e,n,t)=>{let o=e.length,i="";for(let u=o-1;u>=0;--u)i+=`
                k = i32(${r.indicesGet("indices",u)}) - ${t[u]};
                if (k < 0) {
                  k = 0;
                }
                if (k >= ${e[u]}) {
                  k = ${e[u]-1};
                }
                offset += k * ${n[u]};
            `;return`
              var offset = 0;
              var k = 0;
              ${i}
              value = x[offset];
          `},x1=(r,e,n,t)=>{let o=e.length,i="";for(let u=o-1;u>=0;--u)i+=`
                k = i32(${r.indicesGet("indices",u)}) - ${t[u]};
                if (k < 0)  {
                  k += ${e[u]};
                }
                if (k >= ${e[u]}) {
                  k -= ${e[u]};
                }
                offset += k * ${n[u]};
            `;return`
              var offset = 0;
              var k = 0;
              ${i}
              value = x[offset];
          `},T1=(r,e,n,t,o)=>{switch(t.mode){case 0:return y1(r,e,n,t.pads,o,t.value);case 1:return v1(r,e,n,t.pads);case 2:return w1(r,e,n,t.pads);case 3:return x1(r,e,n,t.pads);default:throw new Error("Invalid mode")}},$1=(r,e,n,t)=>{let o=e[0].dims,i=G.padShape(o.slice(),n.pads),u=G.size(i),a=G.computeStrides(o),s=ee("output",e[0].dataType,i),l=U("x",e[0].dataType,o),d=T1(s,o,a,n,t);return`
              ${r.declareVariables(l,s)}
              ${r.mainStart()}
              ${r.guardAgainstOutOfBoundsWorkgroupSizes(u)}

              let indices = ${s.offsetToIndices("global_idx")};

              var value = ${t}(0);
              ${d}
              output[global_idx] = value;
          }`},S1=(r,e)=>{let n=G.padShape(r[0].dims.slice(),e.pads);return{name:"Pad",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(G.size(n)/64)}}),getShaderSource:t=>$1(t,r,e,"f32")}},I1=(r,e)=>{if(r.length>1){let n=r[1].getBigInt64Array(),t=r.length>=3&&r[2].data?r[2].getFloat32Array()[0]:0,o=r[0].dims.length,i=new Int32Array(2*o).fill(0);if(r.length>=4){let a=r[3].getBigInt64Array();for(let s=0;s<a.length;s++)i[Number(a[s])]=Number(n[s]),i[Number(a[s])+o]=Number(n[s+a.length])}else n.forEach((a,s)=>i[Number(s)]=Number(a));let u=[];return i.forEach(a=>u.push(a)),ue({mode:e.mode,value:t,pads:u})}else return e},fb=(r,e)=>{b1(r.inputs);let n=I1(r.inputs,e);r.compute(S1(r.inputs,n),{inputs:[0]})},pb=r=>{let e=r.mode,n=r.value,t=r.pads;return ue({mode:e,value:n,pads:t})}});var oa,mb,gb,bb,yb,vb,wb,xb,Tb,$b,Sb,Ib,_b,Ab,Ob,Eb,Cb=B(()=>{"use strict";kt();Pe();et();ke();oa=r=>{if(Te.webgpu.validateInputContent&&(!r||r.length!==1))throw new Error("Pool ops requires 1 input.")},mb=(r,e,n)=>{let t=e.format==="NHWC",o=r.dims.slice();t&&o.splice(1,0,o.pop());let i=Object.hasOwnProperty.call(e,"dilations"),u=e.kernelShape.slice(),a=e.strides.slice(),s=i?e.dilations.slice():[],l=e.pads.slice();dn.adjustPoolAttributes(n,o,u,a,s,l);let d=dn.computePoolOutputShape(n,o,a,s,u,l,e.autoPad),p=Object.assign({},e);i?Object.assign(p,{kernelShape:u,strides:a,pads:l,dilations:s,cacheKey:e.cacheKey}):Object.assign(p,{kernelShape:u,strides:a,pads:l,cacheKey:e.cacheKey});let f=d.slice();return f.push(f.splice(1,1)[0]),[p,t?f:d]},gb=(r,e)=>{let n=e.format==="NHWC",t=G.size(r),o=G.size(e.kernelShape),i=[{type:"uint32",data:t},{type:"uint32",data:o}],u=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(e.kernelShape.length<=2){let a=e.kernelShape[e.kernelShape.length-1],s=e.strides[e.strides.length-1],l=e.pads[e.pads.length/2-1],d=e.pads[e.pads.length-1],p=!!(l+d);i.push({type:"uint32",data:a},{type:"uint32",data:s},{type:"uint32",data:l},{type:"uint32",data:d}),u.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let f=!1;if(e.kernelShape.length===2){let g=e.kernelShape[e.kernelShape.length-2],b=e.strides[e.strides.length-2],y=e.pads[e.pads.length/2-2],$=e.pads[e.pads.length-2];f=!!(y+$),i.push({type:"uint32",data:g},{type:"uint32",data:b},{type:"uint32",data:y},{type:"uint32",data:$}),u.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[i,u,!0,p,f]}else{if(n)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let a=G.computeStrides(e.kernelShape);i.push({type:"uint32",data:a},{type:"uint32",data:e.pads},{type:"uint32",data:e.strides}),u.push({name:"kernelStrides",type:"u32",length:a.length},{name:"pads",type:"u32",length:e.pads.length},{name:"strides",type:"u32",length:e.strides.length});let s=e.pads.reduce((l,d)=>l+d);return[i,u,!!s,!1,!1]}},bb=(r,e,n,t,o,i,u,a,s,l,d,p)=>{let f=o.format==="NHWC",g=e.type.value,b=ee("output",e.type.tensor,t);if(o.kernelShape.length<=2){let y="",$="",x="",I=n-(f?2:1);if(d===!0?y=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${I}] = indices[${I}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${I}] < 0 || xIndices[${I}]
                      >= uniforms.x_shape[${I}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${e.indicesToOffset("xIndices")}];
                  ${i}
                }`:y=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${I}] = indices[${I}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${e.indicesToOffset("xIndices")}];
                  ${i}
                }`,o.kernelShape.length===2){let C=n-(f?3:2);p===!0?$=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${C}] = indices[${C}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${C}] < 0 || xIndices[${C}] >= uniforms.x_shape[${C}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:$=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${C}] = indices[${C}] * uniforms.sh - uniforms.phStart + j;
                `,x=`
              }
            `}return`
            ${r.registerUniforms(s).declareVariables(e,b)}

            ${r.mainStart()}
              ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${b.offsetToIndices("global_idx")};
              var xIndices = ${b.offsetToIndices("global_idx")};

              var value = ${g}(${a});
              var pad = 0;
              ${$}
              ${y}
              ${x}
              ${u}

              output[global_idx] = value;
            }`}else{if(f)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let y=o.kernelShape.length,$=o.pads.length,x="";return l?x=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${e.indicesToOffset("xIndices")}];
                ${i}
              }`:x=`
              }
              let x_val = x[${e.indicesToOffset("xIndices")}];
              ${i}
            `,`
            ${r.registerUniforms(s).declareVariables(e,b)}

            ${r.mainStart()}
              ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${b.offsetToIndices("global_idx")};
              var xIndices = ${b.offsetToIndices("global_idx")};

              var offsets: array<u32, ${y}>;

              var value = ${g}(${a});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${y-1}u; j++) {
                  offsets[j] = offset / ${Et("uniforms.kernelStrides","j",y)};
                  offset -= offsets[j] * ${Et("uniforms.kernelStrides","j",y)};
                }
                offsets[${y-1}] = offset;

                isPad = false;
                for (var j = ${n-y}u; j < ${n}u; j++) {
                  xIndices[j] = indices[j] * ${Et("uniforms.strides",`j - ${n-y}u`,y)}
                    + offsets[j - ${n-y}u] - ${Et("uniforms.pads","j - 2u",$)};
                  ${x}
              }
              ${u}

              output[global_idx] = value;
            }`}},yb=r=>({format:r.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][r.auto_pad],ceilMode:r.ceil_mode,kernelShape:r.kernel_shape,strides:r.strides,pads:r.pads}),vb=(r,e,n,t)=>{let[o,i]=mb(e,t,n),u=U("x",e.dataType,e.dims.length),a=u.type.value,s="value += x_val;",l="";o.countIncludePad?l+=`value /= ${a}(uniforms.kernelSize);`:l+=`value /= ${a}(i32(uniforms.kernelSize) - pad);`;let[d,p,f,g,b]=gb(i,o);d.push(...pe(e.dims)),d.push(...pe(i));let y=["rank"];return{name:r,shaderCache:{hint:t.cacheKey+f+g+b+o.countIncludePad,inputDependencies:y},getRunData:()=>({outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(G.size(i)/64)},programUniforms:d}),getShaderSource:$=>bb($,u,e.dims.length,i.length,o,s,l,0,p,f,g,b)}},wb=r=>{let e=r.count_include_pad!==0,n=yb(r);if(n.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");return ue({countIncludePad:e,...n})},xb=(r,e)=>{oa(r.inputs),r.compute(vb("AveragePool",r.inputs[0],!1,e))},Tb={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:""},$b=r=>{let e=r.format;return{format:e,...Tb,cacheKey:e}},Sb=(r,e)=>{oa(r.inputs),r.compute(vb("GlobalAveragePool",r.inputs[0],!0,e))},Ib=(r,e,n,t)=>{let[o,i]=mb(e,t,n),u=`
      value = max(x_val, value);
    `,a="",s=U("x",e.dataType,e.dims.length),l=["rank"],[d,p,f,g,b]=gb(i,o);return d.push(...pe(e.dims)),d.push(...pe(i)),{name:r,shaderCache:{hint:t.cacheKey+f,inputDependencies:l},getRunData:()=>({outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(G.size(i)/64)},programUniforms:d}),getShaderSource:y=>bb(y,s,e.dims.length,i.length,o,u,a,-1e5,p,f,g,b)}},_b=(r,e)=>{oa(r.inputs),r.compute(Ib("MaxPool",r.inputs[0],!1,e))},Ab=r=>{let e=r.storage_order,n=r.dilations,t=yb(r);if(e!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(t.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");return ue({storageOrder:e,dilations:n,...t})},Ob=r=>{let e=r.format;return{format:e,...Tb,cacheKey:e}},Eb=(r,e)=>{oa(r.inputs),r.compute(Ib("GlobalMaxPool",r.inputs[0],!0,e))}});var A1,O1,Pb,kb=B(()=>{"use strict";kt();at();ke();A1=(r,e,n)=>{let t=r===e,o=r<e&&n<0,i=r>e&&n>0;if(t||o||i)throw new Error("Range these inputs' contents are invalid.")},O1=(r,e,n,t)=>{let o=Math.abs(Math.ceil((e-r)/n)),i=[o],u=o,a=ee("output",t,i),s=a.type.storage,l=d=>`
        ${d.declareVariables(a)}
        ${d.mainStart()}
        ${d.guardAgainstOutOfBoundsWorkgroupSizes(u)}
        output[global_idx] = ${s}(${r}) + ${s}(global_idx) * ${s}(${n});
      }`;return{name:"Range",shaderCache:{hint:[r,e,n].map(d=>d.toString()).join("_")},getShaderSource:l,getRunData:()=>({outputs:[{dims:i,dataType:t}],dispatchGroup:{x:Math.ceil(u/64)}})}},Pb=r=>{let e=0,n=0,t=0;r.inputs[0].dataType===6?(e=r.inputs[0].getInt32Array()[0],n=r.inputs[1].getInt32Array()[0],t=r.inputs[2].getInt32Array()[0]):r.inputs[0].dataType===1&&(e=r.inputs[0].getFloat32Array()[0],n=r.inputs[1].getFloat32Array()[0],t=r.inputs[2].getFloat32Array()[0]),Te.webgpu.validateInputContent&&A1(e,n,t),r.compute(O1(e,n,t,r.inputs[0].dataType),{inputs:[]})}});var E1,C1,P1,k1,D1,B1,R1,M1,L1,z1,N1,F1,V1,G1,W1,Db,Bb,Rb=B(()=>{"use strict";Pe();et();ke();E1=(r,e)=>{if(r.every(n=>n>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),r.length>0){if(e.mode==="linear"){if(!(r.length===2||r.length===4&&r[0]===1&&r[1]===1||r.length===4&&r[0]===1&&r[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for linear mode")}else if(e.mode==="cubic"&&!(r.length===2||r.length===4&&r[0]===1&&r[1]===1||r.length===4&&r[0]===1&&r[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},C1=(r,e,n)=>{e.every(o=>o>=0&&o<n||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let t=new Array(n).fill(1);return e.forEach((o,i)=>t[o]=r[i]),t},P1=(r,e,n,t,o,i)=>{let[u,a,s]=n>10?[1,2,3]:[-1,r.length>1?1:-1,-1],l=r[0].dims.length;if(u>0&&r.length>u&&r[u].dims.length>0)r[u].getFloat32Array().forEach(d=>i.push(d));else if(e.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(a>0&&r.length>a&&r[a].dims.length>0){if(r[a].getFloat32Array().forEach(d=>t.push(d)),t.length!==0&&t.length!==l&&n>=18&&t.length!==e.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");E1(t,e),e.axes.length>0&&C1(t,e.axes,l).forEach((d,p)=>t[p]=d)}if(s>0&&r.length>s&&(r[s].getBigInt64Array().forEach(d=>o.push(Number(d))),o.length!==l||n>=18&&o.length===e.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(e.axes.length>0){if(t.length!==e.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(o.length!==e.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof t<"u"&&typeof o<"u"&&t.length>0&&o.length>l)throw new Error("Resize requires only of scales or sizes to be specified")},k1=(r,e)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: ${e}, xScale: ${e}, lengthResized: ${e},
     lengthOriginal: ${e}, roiStart: ${e}, roiEnd: ${e}) -> ${e} { `+(()=>{switch(r){case"asymmetric":return"return xResized / xScale;";case"pytorch_half_pixel":return"if (lengthResized > 1) {                     return (xResized + 0.5) / xScale - 0.5;                   } else {                     return 0.0;                   }";case"tf_half_pixel_for_nn":return"return (xResized + 0.5) / xScale;";case"align_corners":return"if (lengthResized == 1) {                     return 0.0;                   } else {                     return xResized * (lengthOriginal - 1) / (lengthResized - 1);                   }";case"tf_crop_and_resize":return`if (lengthResized > 1) {                     return roiStart * (lengthOriginal - 1) +                           (xResized * (roiEnd - roiStart) * (lengthOriginal - 1)) / (lengthResized - 1);                   } else {                     return 0.5 * (roiStart + roiEnd) * ${e}(lengthOriginal - 1);                   }`;case"half_pixel_symmetric":return["const outputWidth = xScale * lengthResized;","const adjustment = lengthResized / outputWidth;","const center = lengthOriginal / 2;","const offset = center * (1 - adjustment);","return offset + ((xResized + 0.5) / xScale) - 0.5;"].join(`
`);case"half_pixel":return"return ((xResized + 0.5) / xScale) - 0.5;";default:throw new Error(`Coordinate transform mode ${r} is not supported`)}})()+"}",D1=(r,e,n)=>`fn getNearestPixelFromOriginal(xOriginal: ${n}, isDownSample: bool) -> ${n} {`+(()=>{switch(r){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(e<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${r} is not supported`)}})()+"}",B1=(r,e,n)=>{let t=new Array(n).fill(0).concat(new Array(n).fill(1)),o=r.length===0?t:r.slice();return e.length>0?(e.forEach((i,u)=>{t[i]=o[u],t[u+n]=o[e.length+u]}),t):o},R1=(r,e,n,t)=>{let o=[];if(n.length>0)if(t.length>0){if(r.forEach(i=>o.push(i)),Math.max(...t)>r.length)throw new Error("axes is out of bound");t.forEach((i,u)=>o[i]=n[u])}else n.forEach(i=>o.push(i));else{if(e.length===0)throw new Error("Resize requires either scales or sizes.");o=r.map((i,u)=>Math.round(i*e[u]))}return o},M1=(r,e,n)=>{let t=(()=>{switch(n.keepAspectRatioPolicy){case"not_larger":return n.axes.length>0?Math.min(...n.axes.map(i=>e[i]),Number.MAX_VALUE):Math.min(...e,Number.MAX_VALUE);case"not_smaller":return n.axes.length>0?Math.max(...n.axes.map(i=>e[i]),Number.MIN_VALUE):Math.max(...e,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${n.keepAspectRatioPolicy} is not supported`)}})();e.fill(1,0,e.length);let o=r.slice();return n.axes.length>0?(n.axes.forEach(i=>e[i]=t),n.axes.forEach(i=>o[i]=Math.round(r[i]*e[i]))):(e.fill(t,0,e.length),o.forEach((i,u)=>o[u]=Math.round(i*e[u]))),o},L1=(r,e,n,t,o)=>`
    fn calculateOriginalIndicesFromOutputIndices(outputIndices: ${r.type.indices}) -> array<${r.type.value}, ${n.length}> {
      const inputShape = array<u32, ${e.length}>(${e.map(i=>`${i}u`).join(",")});
      const outputShape = array<u32, ${n.length}>(${n.map(i=>`${i}u`).join(",")});
      const scales = array<${r.type.value}, ${t.length}>(${t.map(i=>`${i}f`).join(",")});
      const roi = array<${r.type.value}, ${o.length}>(${o.map(i=>`${i}f`).join(",")});
      var originalIndices: array<${r.type.value}, ${n.length}>;
      for (var i:u32 = 0; i < ${n.length}; i++) {
        var outputIndex = ${n.length===1?"outputIndices":"outputIndices[i]"};
        if (scales[i] == 1.0) {
          originalIndices[i] = ${r.type.value}(outputIndex);
        } else {
          originalIndices[i] = getOriginalCoordinateFromResizedCoordinate(${r.type.value}(outputIndex), scales[i],
                ${r.type.value}(outputShape[i]), ${r.type.value}(inputShape[i]), roi[i], roi[i + ${e.length}]);
        }
      }
      return originalIndices;
    }`,z1=(r,e,n,t,o,i,u)=>`
    fn calculateInputIndicesFromOutputIndices(outputIndices: ${e.type.indices}) -> ${r.type.indices} {
        const inputShape = array<u32, ${n.length}>(${n.map(a=>`${a}u`).join(",")});
        const outputShape = array<u32, ${t.length}>(${t.map(a=>`${a}u`).join(",")});
        const scales = array<${r.type.value}, ${o.length}>(${o.map(a=>`${a}`).join(",")});
        const roi = array<${r.type.value}, ${i.length}>(${i.map(a=>`${a}`).join(",")});
        var inputIndices: ${r.type.indices};
        for (var i:u32 = 0; i < ${t.length}; i++) {
          var outputIndex = ${t.length===1?"outputIndices":"outputIndices[i]"};
          var inputIndex: u32;
          if (scales[i] == 1.0) {
            inputIndex = outputIndex;
          } else {
            var original_idx = getOriginalCoordinateFromResizedCoordinate(${r.type.value}(outputIndex), scales[i],
                    ${r.type.value}(outputShape[i]), ${r.type.value}(inputShape[i]), roi[i], roi[i + ${n.length}]);
            if (!${u} || (original_idx >= 0 && original_idx < ${r.type.value}(inputShape[i]))) {
              if (original_idx < 0) {
                inputIndex = 0;
              } else if (original_idx > (${r.type.value}(inputShape[i]) - 1)) {
                inputIndex = inputShape[i] - 1;
              } else {
                inputIndex = u32(getNearestPixelFromOriginal(original_idx, scales[i] < 1));
              }
            } else {
              inputIndex = u32(original_idx);
            }
          }
          ${r.indicesSet("inputIndices","i","inputIndex")}
        }
        return inputIndices;
    }`,N1=(r,e)=>`
    fn checkInputIndices(inputIndices: ${r.type.indices}) -> bool {
      const inputShape = array<u32, ${e.length}>(${e.map(n=>`${n}u`).join(",")});
      for (var i:u32 = 0; i < ${e.length}; i++) {
        var inputIndex = ${e.length===1?"inputIndices":"inputIndices[i]"};
        if (inputIndex < 0 || inputIndex >= inputShape[i]) {
          return false;
        }
      }
      return true;
    }`,F1=(r,e,n,t,o,i)=>{let[u,a,s,l]=n.length===2?[-1,0,1,-1]:t[1]===1?[0,2,3,1]:[0,1,2,3],d=r.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${d} {
      var inputIndices: ${r.type.indices};
      inputIndices[${a}] = max(0, min(row, ${n[a]} - 1));
      inputIndices[${s}] = max(0, min(col, ${n[s]} - 1));
      if (${n.length} > 2) {
        inputIndices[${l}] = channel;
        inputIndices[${u}] = batch;
      };
      return input[${r.indicesToOffset("inputIndices")}];
    }

    fn bilinearInterpolation(outputIndices: ${e.type.indices}) -> ${d} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(outputIndices);
      var row:${d} = originalIndices[${a}];
      var col:${d} = originalIndices[${s}];
      if (${o} && (row < 0 || row > (${n[a]} - 1) || col < 0 || col > ${n[s]} - 1)) {
        return ${i};
      }
      row = max(0, min(row, ${n[a]} - 1));
      col = max(0, min(col, ${n[s]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = 0;
      var batch: u32 = 0;
      if (${n.length>2}) {
        channel = u32(originalIndices[${l}]);
        batch = u32(originalIndices[${u}]);
      }
      var x11: ${d} = getInputValue(batch, channel, row1, col1);
      var x12: ${d} = getInputValue(batch, channel, row1, col2);
      var x21: ${d} = getInputValue(batch, channel, row2, col1);
      var x22: ${d} = getInputValue(batch, channel, row2, col2);
      var dx1: ${d} = row - ${d}(row1);
      var dx2: ${d} = ${d}(row2) - row;
      var dy1 = col - ${d}(col1);
      var dy2 = ${d}(col2) - col;
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},V1=(r,e,n,t,o,i,u,a,s,l)=>{let[d,p]=n.length===2?[0,1]:o[1]===1?[2,3]:[1,2],f=r.type.value,g=b=>{let y=b===d?"row":"col";return`
      fn ${y}CubicInterpolation(inputIndices: ${r.type.indices}, outputIndices: ${e.type.indices}) -> ${f} {
        var outputIndex = ${t.length===1?"outputIndices":`outputIndices[${b}]`};
        var originalIdx: ${f} = getOriginalCoordinateFromResizedCoordinate(${f}(outputIndex), ${o[b]},
        ${f}(${t[b]}), ${f}(${n[b]}), ${i[b]}, ${i[b]} + ${n.length});
        var fractOriginalIdx: ${f} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${a} && (originalIdx < 0 || originalIdx > (${n[b]} - 1))) {
          return ${s};
        }
        var data: array<${f}, 4> = array<${f}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${y}: ${f} = originalIdx + ${f}(i);
          if (${y} < 0 || ${y} >= ${n[b]}) {
            if (${l}) {
              coefs[i + 1] = 0.0;
              continue;
            } else if (${a}) {
              return ${s};
            } else {
              ${y} = max(0, min(${y}, ${n[b]} - 1));
            }
          }
          var inputIndicesCopy: ${r.type.indices} = inputIndices;
          inputIndicesCopy[${b}] = u32(${y});
          data[i + 1] = ${b===d?`input[${r.indicesToOffset("inputIndicesCopy")}];`:`
                                               rowCubicInterpolation(inputIndicesCopy, outputIndices);`}
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${g(d)};
    ${g(p)};
  fn getCubicInterpolationCoefs(s: ${f}) -> array<${f}, 4> {
    var absS = abs(s);
    var coeffs: array<${f}, 4> = array<${f}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${f} = 1.0 - absS;
    var twoMinusAbsS: ${f} = 2.0 - absS;
    var onePlusAbsS: ${f} = 1.0 + absS;
    coeffs[0] = ((${u} * onePlusAbsS - 5 * ${u}) * onePlusAbsS + 8 * ${u}) * onePlusAbsS - 4 * ${u};
    coeffs[1] = ((${u} + 2) * absS - (${u} + 3)) * absS * absS + 1;
    coeffs[2] = ((${u} + 2) * oneMinusAbsS - (${u} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${u} * twoMinusAbsS - 5 * ${u}) * twoMinusAbsS + 8 * ${u}) * twoMinusAbsS - 4 * ${u};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${f}, 4>, coefs: array<${f}, 4>) -> ${f} {
    var coefsSum: ${f} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(outputIndices: ${e.type.indices}) -> ${f} {
    var inputIndices: ${r.type.indices} = outputIndices;
    return colCubicInterpolation(inputIndices, outputIndices);
  }
    `},G1=(r,e,n,t,o,i)=>{let u=r.dims,a=B1(i,e.axes,u.length),s=R1(u,t,o,e.axes),l=t.slice();t.length===0&&(l=u.map((x,I)=>x===0?1:s[I]/x),e.keepAspectRatioPolicy!=="stretch"&&(s=M1(u,l,e)));let d=ee("output",r.dataType,s),p=U("input",r.dataType,u),f=G.size(s),g=u.length===s.length&&u.every((x,I)=>x===s[I]),b=e.coordinateTransformMode==="tf_crop_and_resize",y=p.type.value,$=x=>`
      ${g?"":`
      ${k1(e.coordinateTransformMode,y)};
      ${(()=>{switch(e.mode){case"nearest":return`
              ${N1(p,u)};
              ${D1(e.nearestMode,n,y)};
              ${z1(p,d,u,s,l,a,b)};
              `;case"linear":return`
              ${L1(d,u,s,l,a)};
              ${F1(p,d,u,l,b,e.extrapolationValue)};
              `;case"cubic":return`
            ${V1(p,d,u,s,l,a,e.cubicCoeffA,b,e.extrapolationValue,e.excludeOutside)};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${x.declareVariables(p,d)}
      ${x.mainStart()}
        ${x.guardAgainstOutOfBoundsWorkgroupSizes(f)}
        ${g?"output[global_idx] = input[global_idx];":`
        let outputIndices = ${d.offsetToIndices("global_idx")};
        var inputIndices: ${p.type.indices};
        ${(()=>{switch(e.mode){case"nearest":return`inputIndices = calculateInputIndicesFromOutputIndices(outputIndices);
                if (checkInputIndices(inputIndices)) {
                  output[global_idx] = input[${p.indicesToOffset("inputIndices")}];
                } else {
                  output[global_idx] = ${e.extrapolationValue};
                }`;case"linear":return"output[global_idx] = bilinearInterpolation(outputIndices);";case"cubic":return"output[global_idx] = bicubicInterpolation(outputIndices);";default:throw Error(`Unsupported resize mode: ${e.mode}`)}})()};
        `}
      }`;return{name:"Resize",shaderCache:{hint:`${e.cacheKey}|${n}|${l.length>0?l:""}|${o.length>0?o:""}|${g}`},getShaderSource:$,getRunData:()=>({outputs:[{dims:s,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(f/64)}})}},W1=r=>{let e=r.customDataBuffer;return new Uint32Array(e,e.byteOffset,1)[0]},Db=(r,e)=>{let n=[],t=[],o=[],i=W1(r);P1(r.inputs,e,i,n,t,o),r.compute(G1(r.inputs[0],e,i,n,t,o),{inputs:[0]})},Bb=r=>{let e=r.antialias,n=r.axes,t=r.coordinateTransformMode,o=r.cubicCoeffA,i=r.excludeOutside!==0,u=r.extrapolationValue,a=r.keepAspectRatioPolicy,s=r.mode,l=r.nearestMode===""?"simple":r.nearestMode;return ue({antialias:e,axes:n,coordinateTransformMode:t,cubicCoeffA:o,excludeOutside:i,extrapolationValue:u,keepAspectRatioPolicy:a,mode:s,nearestMode:l})}});var U1,H1,Mb,Lb,zb=B(()=>{"use strict";at();Pe();et();ke();U1=r=>{if(!r||r.length<3)throw new Error("layerNorm requires at least 3 inputs.");let e=r[0],n=r[1],t=r[2];if(e.dataType!==n.dataType||e.dataType!==t.dataType)throw new Error("All inputs must have the same data type");if(e.dims.length!==3&&e.dims.length!==2)throw new Error("Input must be 2D or 3D");if(n.dims.length!==3&&n.dims.length!==2)throw new Error("Skip must be 2D or 3D");let o=e.dims[e.dims.length-1],i=e.dims[e.dims.length-2];if(n.dims[n.dims.length-1]!==o)throw new Error("Skip must have the same hidden size as input");if(n.dims[n.dims.length-2]!==i)throw new Error("Skip must have the same sequence length as input");if(t.dims.length!==1)throw new Error("Gamma must be 1D");if(t.dims[t.dims.length-1]!==o)throw new Error("Gamma must have the same hidden size as input");if(r.length>3){let u=r[3];if(u.dims.length!==1)throw new Error("Beta must be 1D");if(u.dims[u.dims.length-1]!==o)throw new Error("Beta must have the same hidden size as input")}if(r.length>4){let u=r[4];if(u.dims.length!==1)throw new Error("Bias must be 1D");if(u.dims[u.dims.length-1]!==o)throw new Error("Bias must have the same hidden size as input")}},H1=(r,e,n,t)=>{let o=r[0].dims,i=G.size(o),u=o,a=i,s=o.slice(-1)[0],l=t?o.slice(0,-1).concat(1):[],d=r.length>3,p=r.length>4,f=t&&n>1,g=t&&n>2,b=n>3,y=Mt(s),$=[U("x",r[0].dataType,r[0].dims,y),U("skip",r[1].dataType,r[1].dims,y),U("gamma",r[2].dataType,r[2].dims,y)];d&&$.push(U("beta",r[3].dataType,r[3].dims,y)),p&&$.push(U("bias",r[4].dataType,r[4].dims,y)),$.push(ee("output",r[0].dataType,u,y)),f&&$.push(ee("meanOutput",1,l)),g&&$.push(ee("invStdOutput",1,l)),b&&$.push(ee("inputSkipBiasSum",r[0].dataType,u,y));let x=je(r[0].dataType),I=C=>`
      const hiddenSize: f32 = ${s};
      const hiddenSizeVectorized: u32 = ${s/y};
      const epsilon: f32 = ${e.epsilon};

      ${C.declareVariables(...$)}

      ${C.mainStart()}
        ${C.guardAgainstOutOfBoundsWorkgroupSizes(a/s)}
        let offset = global_idx * hiddenSizeVectorized;
        var sum = ${$t("f32",y)};
        var squareSum = ${$t("f32",y)};
        for (var i: u32 = 0; i < hiddenSizeVectorized; i++) {
          let skipValue = skip[offset + i];
          let biasValue = ${p?"bias[i]":"0.0"};
          let inputValue = x[offset + i];
          let value = inputValue + skipValue + biasValue;
          ${b?"inputSkipBiasSum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32Value = ${er(x,y,"value")};
          sum += f32Value;
          squareSum += f32Value * f32Value;
        }
        let mean = ${tr("sum",y)} / hiddenSize;
        let variance = sqrt(${tr("squareSum",y)} / hiddenSize - mean * mean + epsilon);
        ${f?"meanOutput[global_idx] = mean;":""}
        ${g?"invStdOutput[global_idx] = 1.0 / variance;":""}
        for (var i: u32 = 0; i < hiddenSizeVectorized; i++) {
          output[offset + i] = (output[offset + i] - ${x}(mean)) / ${x}(variance) * gamma[i]
           + ${d?"beta[i]":"0.0"};
        }
      }`,O=[{dims:u,dataType:r[0].dataType}];return n>1&&O.push({dims:l,dataType:1}),n>2&&O.push({dims:l,dataType:1}),n>3&&O.push({dims:o,dataType:r[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:e.cacheKey},getShaderSource:I,getRunData:()=>({outputs:O,dispatchGroup:{x:Math.ceil(a/s/64)}})}},Mb=(r,e)=>{U1(r.inputs);let t=[0];r.outputCount>1&&t.push(-3),r.outputCount>2&&t.push(-3),r.outputCount>3&&t.push(3),r.compute(H1(r.inputs,e,r.outputCount,!1),{outputs:t})},Lb=r=>{let e=r.epsilon;return ue({epsilon:e})}});var q1,ia,j1,Nb,K1,Y1,Fb,Vb,Gb=B(()=>{"use strict";at();Pe();et();ke();q1=(r,e)=>{if(!r||r.length<1)throw new Error("too few inputs");if(e.axes.length!==0){if(e.axes.length!==e.starts.length||e.axes.length!==e.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(e.starts.length!==e.ends.length)throw new Error("starts and ends must have the same length");r.slice(1).forEach((n,t)=>{if(r[t+1].dataType!==6&&r[t+1].dataType!==7)throw new Error(`Input ${t} must be an array of int32 or int64`)})},ia=(r,e)=>{let n=[];if(r.length>e)if(r[e].dataType===7)r[e].getBigInt64Array().forEach(t=>n.push(Number(t)));else if(r[e].dataType===6)r[e].getInt32Array().forEach(t=>n.push(Number(t)));else throw new Error(`Input ${e} must be an array of int32 or int64`);return n},j1=(r,e)=>{if(r.length>1){let n=ia(r,1),t=ia(r,2),o=ia(r,3);return o.length===0&&(o=[...Array(r[0].dims.length).keys()]),ue({starts:n,ends:t,axes:o})}else return e},Nb=(r,e,n,t,o)=>{let i=r;return r<0&&(i+=n[t[e]]),o[e]<0?Math.max(0,Math.min(i,n[t[e]]-1)):Math.max(0,Math.min(i,n[t[e]]))},K1=(r,e,n,t)=>`fn calculateInputIndices(outputIndices: ${e.type.indices}) -> ${r.type.indices} {
          var inputIndices: ${r.type.indices};
          var carry = 0u;
          for (var i = ${n.length}; i >= 0; i--) {
            let input_shape_i = ${Et("uniforms.input_shape","i",n.length)};
            let steps_i = ${Et("uniforms.steps","i",n.length)};
            let signs_i = ${Et("uniforms.signs","i",n.length)};
            let starts_i = ${Et("uniforms.starts","i",n.length)};
            var outputIndex = ${t.length===1?"outputIndices":"outputIndices[i]"};
            var inputIndex = outputIndex * steps_i + starts_i + carry;
            carry = inputIndex / input_shape_i;
            inputIndex = inputIndex % input_shape_i;
            if (signs_i < 0) {
              inputIndex = input_shape_i - inputIndex - 1u + starts_i;
            }
            ${n.length===1?"inputIndices":"inputIndices[i]"} = inputIndex;
          }
          return inputIndices;
      }`,Y1=(r,e)=>{let n=r[0].dims,t=G.size(n),o=e.axes.length>0?G.normalizeAxes(e.axes,n.length):[...Array(n.length).keys()],i=ia(r,4);i.forEach(x=>x!==0||(()=>{throw new Error("step cannot be 0")})),i.length===0&&(i=Array(o.length).fill(1));let u=e.starts.map((x,I)=>Nb(x,I,n,o,i)),a=e.ends.map((x,I)=>Nb(x,I,n,o,i));if(o.length!==u.length||o.length!==a.length)throw new Error("start, ends and axes should have the same number of elements");if(o.length!==n.length)for(let x=0;x<n.length;++x)o.includes(x)||(u.splice(x,0,0),a.splice(x,0,n[x]),i.splice(x,0,1));let s=i.map(x=>Math.sign(x));i.forEach((x,I,O)=>{if(x<0){let C=(a[I]-u[I])/x,N=u[I],R=N+C*i[I];u[I]=R,a[I]=N,O[I]=-x}});let l=n.slice(0);o.forEach((x,I)=>{l[x]=Math.ceil((a[x]-u[x])/i[x])});let d={dims:l,dataType:r[0].dataType},p=ee("output",r[0].dataType,l.length),f=U("input",r[0].dataType,r[0].dims.length),g=G.size(l),b=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:u.length},{name:"signs",type:"i32",length:s.length},{name:"steps",type:"u32",length:i.length}],y=[{type:"uint32",data:g},{type:"uint32",data:u},{type:"int32",data:s},{type:"uint32",data:i},...pe(r[0].dims),...pe(l)],$=x=>`
      ${x.registerUniforms(b).declareVariables(f,p)}
        ${K1(f,p,n,l)}
        ${x.mainStart()}
          ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let outputIndices = ${p.offsetToIndices("global_idx")};
          let inputIndices = calculateInputIndices(outputIndices);
          ${p.setByOffset("global_idx",f.getByIndices("inputIndices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${s.length}_${u.length}_${i.length}`,inputDependencies:["rank"]},getShaderSource:$,getRunData:()=>({outputs:[d],dispatchGroup:{x:Math.ceil(t/64)},programUniforms:y})}},Fb=(r,e)=>{q1(r.inputs,e);let n=j1(r.inputs,e);r.compute(Y1(r.inputs,n),{inputs:[0]})},Vb=r=>{let e=r.starts,n=r.ends,t=r.axes;return ue({starts:e,ends:n,axes:t})}});var X1,Z1,Wb,Ub,Hb=B(()=>{"use strict";Pe();et();ke();X1=r=>{if(!r||r.length!==1)throw new Error("Softmax op requires 1 input.")},Z1=(r,e)=>{let n=r.dims,t=G.size(n),o=64,i=e.axis;if(i<0&&(i=n.length+i),i<n.length-1)throw new Error("softmax only supports last axis for now.");let u=n[i],a=t/u,s=Mt(u),l=u/s,d=($,x)=>x===4?`max(max(${$}.x, ${$}.y), max(${$}.z, ${$}.w))`:x===2?`max(${$}.x, ${$}.y)`:x===3?`max(max(${$}.x, ${$}.y), ${$}.z)`:$,p=U("x",r.dataType,r.dims,s),f=ee("result",r.dataType,r.dims,s),g=p.type.value,b=je(r.dataType)==="f32"?`var threadMax = ${g}(-3.402823e+38f);`:`var threadMax = ${g}(-65504.0h);`,y=$=>`
      var<workgroup> rowMaxShared : ${g};
      var<workgroup> rowSumShared : ${g};
      var<workgroup> threadShared : array<${g}, ${o}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${g} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${g}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${$.registerUniform("packedCols","i32").declareVariables(p,f)}
      ${$.mainStart()}
        let gindex = i32(global_id.x);
        let lindex = i32(local_id.x);
        const wg = ${o};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${b}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${g}(${d("threadShared[0]",s)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${g}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${g}(${tr("threadShared[0]",s)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`;return{name:"Softmax",shaderCache:{hint:`${s}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:n,dataType:r.dataType}],dispatchGroup:{x:a},programUniforms:[{type:"uint32",data:l}]}),getShaderSource:y}},Wb=(r,e)=>{X1(r.inputs),r.compute(Z1(r.inputs[0],e))},Ub=r=>ue({axis:r.axis})});var J1,Q1,eT,tT,rT,qb,jb,Kb=B(()=>{"use strict";Pe();et();ke();J1=r=>{if(!r||r.length<1)throw new Error("too few inputs")},Q1=(r,e)=>{let n=[],t=e.numOutputs;return r[1].dims[0]>0&&(r[1].getBigInt64Array().forEach(o=>n.push(Number(o))),t=n.length),ue({numOutputs:t,axis:e.axis,splitSizes:n})},eT=r=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${r}u; i += 1u ) {
    if (index < sizeInConcatAxis[i]) {
        return i;
    }
    }
    return ${r}u;
}`,tT=r=>{let e=r.length,n=[];for(let t=0;t<e;++t){let o=r[t].setByIndices("indices","input[global_idx]");e===1?n.push(o):t===0?n.push(`if (outputNumber == ${t}u) { ${o} }`):t===e-1?n.push(`else { ${o} }`):n.push(`else if (outputNumber == ${t}) { ${o} }`)}return`
      fn writeBufferData(outputNumber: u32, indices: ${r[0].type.indices}, global_idx: u32) {
        ${n.join(`
`)}
      }`},rT=(r,e)=>{let n=r[0].dims,t=G.size(n),o=r[0].dataType,i=n.length,u=e.axis,a=u<0?n.length+u:u,s=new Array(e.numOutputs),l=U("input",o,n),d=new Array(e.numOutputs),p=[],f=[],g=0;for(let $=0;$<e.numOutputs;$++){g+=e.splitSizes[$],d[$]=g;let x=n.slice();x[e.axis]=e.splitSizes[$],f.push(x),s[$]=ee(`output${$}`,o,f[$]),p.push({dims:f[$],dataType:r[0].dataType})}let b=i<2?"indices":`indices[${a}]`,y=$=>`
  ${$.declareVariables(l,...s)}
  const sizeInConcatAxis = array<u32, ${d.length}>(${d.map(x=>`${x}u`).join(",")});
  ${eT(d.length)}
  ${tT(s)}

  ${$.mainStart()}
    ${$.guardAgainstOutOfBoundsWorkgroupSizes(t)}

    var indices = ${l.offsetToIndices("global_idx")};
    let outputNumber = calculateOutputIndex(${b});
    if (outputNumber != 0) {
        ${b} -= sizeInConcatAxis[outputNumber - 1u];
    }
    writeBufferData(outputNumber, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:e.cacheKey},getShaderSource:y,getRunData:()=>({outputs:p,dispatchGroup:{x:Math.ceil(t/64)}})}},qb=(r,e)=>{J1(r.inputs);let n=r.inputs.length===1?e:Q1(r.inputs,e);r.compute(rT(r.inputs,n),{inputs:[0]})},jb=r=>{let e=r.axis,n=r.splitSizes,t=r.numOutputs<0?n.length:r.numOutputs;if(t!==n.length)throw new Error("numOutputs and splitSizes lengh must be equal");return ue({axis:e,numOutputs:t,splitSizes:n})}});var Yb,nT,oT,iT,Xb,Zb=B(()=>{"use strict";at();Pe();ke();Yb=r=>Array.from(r.getBigInt64Array(),Number),nT=r=>{if(!r||r.length!==2)throw new Error("Tile requires 2 inputs.");if(r[0].dataType!==1&&r[0].dataType!==6&&r[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(r[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(r[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Yb(r[1]).length!==r[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},oT=(r,e)=>{let n=[];for(let t=0;t<r.length;++t)n.push(r[t]*e[t]);return n},iT=r=>{let e=r[0].dims,n=Yb(r[1]),t=oT(e,n),o=G.size(t),i=r[0].dataType,u=U("input",i,e),a=ee("output",i,t),s=l=>`
      const inputShape = ${u.indices(...e)};
      ${l.declareVariables(u,a)}
      ${l.mainStart()}
      ${l.guardAgainstOutOfBoundsWorkgroupSizes(o)}
      let outputIndices = ${a.offsetToIndices("global_idx")};
      var inputIndices: ${u.type.indices};
      for (var i = 0; i < ${e.length}; i++) {
        let inputDimValue = ${a.indicesGet("outputIndices","i")}  % ${u.indicesGet("inputShape","i")};

        ${u.indicesSet("inputIndices","i","inputDimValue")}
      }
      ${a.setByOffset("global_idx",u.getByIndices("inputIndices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${n}`},getRunData:()=>({outputs:[{dims:t,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:s}},Xb=r=>{nT(r.inputs),r.compute(iT(r.inputs),{inputs:[0]})}});var aT,sT,Jb,Qb=B(()=>{"use strict";at();Pe();ke();aT=(r,e,n,t,o)=>{let i=G.size(n),u=Math.ceil(i/4),a=ee("outputData",o,n,4),s=U("aData",e[1].dataType,e[1].dims,4),l=U("bData",e[2].dataType,e[2].dims,4),d=U("cData",e[0].dataType,e[0].dims,4),p,f=(g,b,y)=>`select(${b}, ${g}, ${y})`;if(!t)p=a.setByOffset("global_idx",f(s.getByOffset("global_idx"),l.getByOffset("global_idx"),d.getByOffset("global_idx")));else{let g=(b,y,$="")=>{let x=`aData[indexA${y}][componentA${y}]`,I=`bData[indexB${y}][componentB${y}]`,O=`bool(cData[indexC${y}] & ${4278190080>>>(3-y)*8}u)`;return`
            let outputIndices${y} = ${a.offsetToIndices(`global_idx * 4u + ${y}u`)};
            let offsetA${y} = ${s.broadcastedIndicesToOffset(`outputIndices${y}`,a)};
            let offsetB${y} = ${l.broadcastedIndicesToOffset(`outputIndices${y}`,a)};
            let offsetC${y} = ${d.broadcastedIndicesToOffset(`outputIndices${y}`,a)};
            let indexA${y} = offsetA${y} / 4u;
            let indexB${y} = offsetB${y} / 4u;
            let indexC${y} = offsetC${y} / 4u;
            let componentA${y} = offsetA${y} % 4u;
            let componentB${y} = offsetB${y} % 4u;
            ${b}[${y}] = ${$}(${f(x,I,O)});
          `};o===9?p=`
            var data = vec4<u32>(0);
            ${g("data",0,"u32")}
            ${g("data",1,"u32")}
            ${g("data",2,"u32")}
            ${g("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:p=`
            ${g("outputData[global_idx]",0)}
            ${g("outputData[global_idx]",1)}
            ${g("outputData[global_idx]",2)}
            ${g("outputData[global_idx]",3)}
          `}return`
        ${r.declareVariables(d,s,l,a)}
        ${r.mainStart()}
        ${r.guardAgainstOutOfBoundsWorkgroupSizes(u)}
        ${p}
      }`},sT=r=>{let e=r[1].dims,n=r[2].dims,t=r[0].dims,o=r[1].dataType,i=!(G.areEqual(e,n)&&G.areEqual(n,t)),u=e,a=G.size(e);if(i){let s=hr.calcShape(hr.calcShape(e,n,!1),t,!1);if(!s)throw new Error("Can't perform where op on the given tensors");u=s,a=G.size(u)}return{name:"Where",getShaderSource:s=>aT(s,r,u,i,o),getRunData:()=>({outputs:[{dims:u,dataType:o}],dispatchGroup:{x:Math.ceil(a/64/4)}})}},Jb=r=>{r.compute(sT(r.inputs))}});var ey,ty=B(()=>{"use strict";xm();qs();Im();Am();ag();bg();wg();Zs();Dg();Mg();Vg();Ug();jg();Xg();Qg();rb();ib();sb();cb();hb();Cb();kb();ji();Rb();zb();Gb();Hb();Kb();Zb();Dn();js();Qb();ey=new Map([["Abs",[Om]],["Acos",[Em]],["Acosh",[Cm]],["Add",[sg]],["ArgMax",[wm,Hs]],["ArgMin",[vm,Hs]],["Asin",[Pm]],["Asinh",[km]],["Atan",[Dm]],["Atanh",[Bm]],["Attention",[$m,Tm]],["AveragePool",[xb,wb]],["BatchNormalization",[Sm]],["BiasAdd",[_m]],["BiasSplitGelu",[ig]],["Cast",[Mm,Rm]],["Ceil",[zm]],["Clip",[Lm]],["Concat",[yg,vg]],["Conv",[Qs,Js]],["ConvTranspose",[kg,Pg]],["Cos",[Nm]],["Cosh",[Fm]],["CumSum",[Bg,Rg]],["Div",[ug]],["Einsum",[Ng,Fg]],["Elu",[Vm,Xi]],["Equal",[lg]],["Erf",[Gm]],["Exp",[Wm]],["Expand",[Wg]],["Floor",[Um]],["FusedConv",[Qs,Js]],["Gather",[qg,Hg]],["GatherElements",[Yg,Kg]],["Gelu",[Hm]],["Gemm",[Zg,Jg]],["GlobalAveragePool",[Sb,$b]],["GlobalMaxPool",[Eb,Ob]],["Greater",[pg]],["GreaterOrEqual",[mg]],["InstanceNormalization",[tb,eb]],["LayerNormalization",[ob,nb]],["LeakyRelu",[qm,Xi]],["Less",[hg]],["LessOrEqual",[gg]],["Log",[og]],["MatMul",[ab]],["MaxPool",[_b,Ab]],["Mul",[dg]],["MultiHeadAttention",[db,lb]],["Neg",[Km]],["Not",[jm]],["Pad",[fb,pb]],["Pow",[cg]],["Range",[Pb]],["Reciprocal",[Ym]],["ReduceMin",[pm,nr]],["ReduceMean",[um,nr]],["ReduceMax",[fm,nr]],["ReduceSum",[mm,nr]],["ReduceProd",[hm,nr]],["ReduceL1",[lm,nr]],["ReduceL2",[dm,nr]],["ReduceLogSum",[bm,nr]],["ReduceLogSumExp",[cm,nr]],["ReduceSumSquare",[gm,nr]],["Relu",[Xm]],["Resize",[Db,Bb]],["Sigmoid",[Zm]],["Sin",[Jm]],["Sinh",[Qm]],["Slice",[Fb,Vb]],["SkipLayerNormalization",[Mb,Lb]],["Split",[qb,jb]],["Sqrt",[eg]],["Softmax",[Wb,Ub]],["Sub",[fg]],["Tan",[tg]],["Tanh",[rg]],["ThresholdedRelu",[ng,Xi]],["Tile",[Xb]],["Transpose",[Yh,Xh]],["Where",[Jb]]])});var aa,ry=B(()=>{"use strict";at();Nr();ke();aa=class{constructor(e){this.backend=e;this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,n){this.repo.set(e,n)}run(e,n,t,o,i,u,a){let s=this.backend.device,l=this.backend.getComputePassEncoder();l.setPipeline(e.computePipeline);let d=[];for(let f of o)d.push({binding:d.length,resource:{buffer:f.buffer}});for(let f of i)d.push({binding:d.length,resource:{buffer:f.buffer}});a&&d.push({binding:d.length,resource:a});let p=s.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:d,label:e.programInfo.name});if(l.setBindGroup(0,p),l.dispatchWorkgroups(...u),this.backend.pendingDispatchNumber++,this.backend.isQueryEnabled()){typeof this.backend.queryData>"u"&&(this.backend.queryData=this.backend.gpuDataManager.create(this.backend.querySetCount*8,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE));let f=this.backend.gpuDataManager.create(this.backend.querySetCount*8,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.backend.endComputePass(),this.backend.getCommandEncoder().resolveQuerySet(this.backend.querySet,0,2,this.backend.queryData.buffer,0),this.backend.getCommandEncoder().copyBufferToBuffer(this.backend.queryData.buffer,0,f.buffer,0,this.backend.querySetCount*8),this.backend.flush();let g=this.backend.currentKernelId,b=this.backend.kernels.get(g),y=`[${b[0]}] ${b[1]}`;f.buffer.mapAsync(GPUMapMode.READ).then(()=>{let $=new BigUint64Array(f.buffer.getMappedRange()),x=$[0],I=$[1];f.buffer.unmap(),typeof this.backend.queryTimeBase>"u"&&(this.backend.queryTimeBase=x);let O=Number(x-this.backend.queryTimeBase),C=Number(I-this.backend.queryTimeBase);if(!Number.isSafeInteger(O)||!Number.isSafeInteger(C))throw new RangeError("incorrect timestamp range");this.backend.gpuDataManager.release(f.id);let N="";n.forEach((V,W)=>{N+=`input[${W}]: [${V.dims}] | ${mo(V.dataType)}, `});let R="";t.forEach((V,W)=>{R+=`output[${W}]: [${V.dims}] | ${mo(V.dataType)}, `}),console.log(`[profiling] kernel "${g}|${y}|${e.programInfo.name}" ${N}${R}execution time: ${C-O} ns`)})}this.backend.pendingDispatchNumber>=16&&this.backend.flush()}dispose(){}build(e,n){let t=this.backend.device,o=[];t.features.has("shader-f16")&&o.push("enable f16;");let i=jh(n),u=e.getShaderSource(i),a=`${o.join(`
`)}
${i.additionalImplementations}
${u}`,s=t.createShaderModule({code:a,label:e.name});nt("verbose",()=>`[WebGPU] ${e.name} shader code: ${a}`);let l=t.createComputePipeline({compute:{module:s,entryPoint:"main"},layout:"auto",label:e.name});return{programInfo:e,computePipeline:l}}normalizeDispatchGroupSize(e){let n=typeof e=="number"?e:e.x,t=typeof e=="number"?1:e.y||1,o=typeof e=="number"?1:e.z||1,i=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(n<=i&&t<=i&&o<=i)return[n,t,o];let u=n*t*o,a=Math.ceil(Math.sqrt(u));if(a>i){if(a=Math.ceil(Math.cbrt(u)),a>i)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[a,a,a]}else return[a,a,1]}}});var uT,lT,sa,ny=B(()=>{"use strict";Nr();Fh();Uh();ty();ry();uT=(r,e)=>{if(e.length!==r.length)throw new Error(`inputDependencies length ${e.length} is not equal to inputTensors length ${r.length}.`);let n=[];for(let t=0;t<r.length;++t){let o=r[t].dataType;switch(e[t]){case"none":{n.push("");break}case"type":{n.push(`${o}`);break}case"rank":{let i=r[t].dims.length;n.push(`${o};${i}`);break}case"dims":{let i=r[t].dims.join(",");n.push(`${o};${i}`);break}default:throw new Error(`unsupported input dependency: ${e[t]}`)}}return n.join("|")},lT=(r,e,n)=>{let t=r.name;return r.shaderCache?.hint&&(t+="["+r.shaderCache.hint+"]"),t+=":"+n+`:${uT(e,r.shaderCache?.inputDependencies??new Array(e.length).fill("dims"))}`,t},sa=class{constructor(){this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.pendingDispatchNumber=0;this.querySetCount=2;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e){if(!navigator.gpu)throw new Error("WebGpuBackend: WebGPU is not available.");let n=await navigator.gpu.requestAdapter();if(!n)throw new Error("WebGpuBackend: Failed to get GPU adapter.");this.env=e;let t=[],o={requiredLimits:{maxComputeWorkgroupStorageSize:n.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:n.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:n.limits.maxStorageBufferBindingSize,maxBufferSize:n.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:n.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:n.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:n.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:n.limits.maxComputeWorkgroupSizeZ},requiredFeatures:t};n.features.has("timestamp-query")&&t.push("timestamp-query"),n.features.has("shader-f16")&&t.push("shader-f16"),this.device=await n.requestDevice(o),this.gpuDataManager=Wh(this),this.programManager=new aa(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,zh(e.logLevel,!!e.debug),this.device.onuncapturederror=i=>{i.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${i.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device})}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e={};this.isQueryEnabled()&&(typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),e.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1}),this.computePassEncoder=this.getCommandEncoder().beginComputePass(e)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){this.commandEncoder&&(this.endComputePass(),this.device.queue.submit([this.getCommandEncoder().finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0)}isQueryEnabled(){return!!(this.device.features.has("timestamp-query")&&this.env.webgpu.profilingMode==="default")}run(e,n,t,o,i){let u=[];for(let I=0;I<n.length;++I){let O=this.gpuDataManager.get(n[I].data);if(!O)throw new Error(`no GPU data for input: ${n[I].data}`);u[I]=O}let{outputs:a,dispatchGroup:s,programUniforms:l}=e.getRunData(n),d=t.length===0?a.map((I,O)=>O):t;if(d.length!==a.length)throw new Error(`Output size ${d.length} must be equal to ${a.length}.`);let p=[],f=[];for(let I=0;I<a.length;++I){if(!Number.isInteger(d[I])||d[I]<-3||d[I]>=a.length)throw new Error(`Invalid output index: ${d[I]}`);if(d[I]===-3)continue;let O=d[I]===-1,C=d[I]===-2,N=O||C?i(a[I].dataType,a[I].dims):o(d[I],a[I].dataType,a[I].dims),R=this.gpuDataManager.get(N.data);if(!R)throw new Error(`no GPU data for output: ${N.data}`);if(O&&this.temporaryData.push(R),C){let V=this.kernelPersistentData.get(this.currentKernelId);V||(V=[],this.kernelPersistentData.set(this.currentKernelId,V)),V.push(R)}p.push(N),f.push(R)}let g;if(l){let I=0,O=[];l.forEach(V=>{let W=typeof V.data=="number"?[V.data]:V.data;if(W.length===0)return;let j=W.length<=2?W.length*4:16;I=Math.ceil(I/j)*j,O.push(I),I+=W.length>4?Math.ceil(W.length/4)*16:W.length*4});let C=16;I=Math.ceil(I/C)*C;let N=new ArrayBuffer(I);l.forEach((V,W)=>{let j=O[W],ie=typeof V.data=="number"?[V.data]:V.data;V.type==="int32"?new Int32Array(N,j,ie.length).set(ie):V.type==="uint32"?new Uint32Array(N,j,ie.length).set(ie):new Float32Array(N,j,ie.length).set(ie)});let R=this.gpuDataManager.create(I,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(R.buffer,0,N,0,I),this.gpuDataManager.release(R.id),g={offset:0,size:I,buffer:R.buffer}}let b=this.programManager.normalizeDispatchGroupSize(s),y=b[1]===1&&b[2]===1,$=lT(e,n,y),x=this.programManager.getArtifact($);return x||(x=this.programManager.build(e,b),this.programManager.setArtifact($,x),nt("info",()=>`[artifact] key: ${$}, programName: ${e.name}`)),nt("info",()=>`[ProgramManager] run "${e.name}" (key=${$}) with ${b[0]}x${b[1]}x${b[2]}`),this.programManager.run(x,n,p,u,f,b,g),p}upload(e,n){this.gpuDataManager.upload(e,n)}memcpy(e,n){this.gpuDataManager.memcpy(e,n)}async download(e,n){await this.gpuDataManager.download(e,n)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,n,t,o){let i=ey.get(e);if(!i)throw new Error(`kernel not implemented: ${e}`);this.kernels.set(n,[e,o,i[0],[i[1],t]])}releaseKernel(e){let n=this.kernelPersistentData.get(e);if(n){for(let t of n)this.gpuDataManager.release(t.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,n,t){let o=this.kernels.get(e);if(!o)throw new Error(`kernel not created: ${e}`);let[i,u,a,s]=o;if(this.currentKernelId!==null)throw new Error(`kernel "[${i}] ${u}" is not allowed to be called recursively`);this.currentKernelId=e,s[0]&&(s[1]=s[0](s[1]),s[0]=void 0),nt("info",()=>`[WebGPU] Start to run kernel "[${i}] ${u}"...`);let l=this.env.debug;this.temporaryData=[];try{return l&&this.device.pushErrorScope("validation"),a(n,s[1]),0}catch(d){return t.push(Promise.resolve(`[WebGPU] Kernel "[${i}] ${u}" failed. ${d}`)),1}finally{l&&t.push(this.device.popErrorScope().then(d=>d?`GPU validation error for kernel "[${i}] ${u}": ${d.message}`:null));for(let d of this.temporaryData)this.gpuDataManager.release(d.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,n,t,o){let i=this.sessionExternalDataMapping.get(e);i||(i=new Map,this.sessionExternalDataMapping.set(e,i));let u=i.get(n),a=this.gpuDataManager.registerExternalBuffer(t,o,u?.[1]);return i.set(n,[a,t]),a}unregisterBuffers(e){let n=this.sessionExternalDataMapping.get(e);n&&(n.forEach(t=>this.gpuDataManager.unregisterExternalBuffer(t[1])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let n=this.gpuDataManager.get(e);if(!n)throw new Error(`no GPU data for buffer: ${e}`);return n.buffer}createDownloader(e,n,t){return async()=>{let o=await zs(this,e,n);return Nh(o.buffer,t)}}}});var oy={};Yr(oy,{init:()=>dT});var xo,iu,dT,iy=B(()=>{"use strict";at();ny();Nr();Pe();xo=class r{constructor(e,n,t,o){this.module=e;this.dataType=n;this.data=t;this.dims=o}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let e=G.size(this.dims);return e===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,e)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let e=G.size(this.dims);return e===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,e)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let e=G.size(this.dims);return e===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,e)}reshape(e){if(G.size(e)!==G.size(this.dims))throw new Error("Invalid new shape");return new r(this.module,this.dataType,this.data,e)}},iu=class{constructor(e,n,t){this.module=e;this.backend=n;this.customDataOffset=0;this.customDataSize=0;let o=e.HEAPU32,i=t>>2;this.opKernelContext=o[i++];let u=o[i++];this.outputCount=o[i++],this.customDataOffset=o[i++],this.customDataSize=o[i++];let a=[];for(let s=0;s<u;s++){let l=o[i++],d=o[i++],p=o[i++],f=[];for(let g=0;g<p;g++)f.push(o[i++]);a.push(new xo(e,l,d,f))}this.inputs=a}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(e,n){let t=n?.inputs?.map(a=>typeof a=="number"?this.inputs[a]:a)??this.inputs,o=n?.outputs??[],i=(a,s,l)=>new xo(this.module,s,this.output(a,l),l),u=(a,s)=>{let l=go(a);if(!l)throw new Error(`Unsupported data type: ${a}`);let d=l*G.size(s);return new xo(this.module,a,this.backend.gpuDataManager.create(d).id,s)};return this.backend.run(e,t,o,i,u)}output(e,n){let t=this.module.stackSave();try{let o=this.module.stackAlloc((1+n.length)*4),i=o>>2;this.module.HEAPU32[i++]=n.length;for(let u=0;u<n.length;u++)this.module.HEAPU32[i++]=n[u];return this.module._JsepOutput(this.opKernelContext,e,o)}catch(o){throw new Error(`Failed to generate kernel's output[${e}] with dims [${n}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${o}`)}finally{this.module.stackRestore(t)}}},dT=async(r,e)=>{let n=r.jsepInit;if(n&&navigator.gpu){if(!e.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using WebGPU EP");let t=new sa;await t.initialize(e),n(t,o=>t.alloc(o),o=>t.free(o),(o,i,u,a=!1)=>{if(a)nt("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${o}, dst=${i}, size=${u}`),t.memcpy(o,i);else{nt("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${o}, gpuDataId=${i}, size=${u}`);let s=r.HEAPU8.subarray(o,o+u);t.upload(i,s)}},async(o,i,u)=>{nt("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${o}, dataOffset=${i}, size=${u}`),await t.download(o,()=>r.HEAPU8.subarray(i,i+u))},(o,i,u)=>t.createKernel(o,i,u,e.debug||e.webgpu.profilingMode==="default"?r.UTF8ToString(r._JsepGetNodeName(i)):`${i}`),o=>t.releaseKernel(o),(o,i,u,a)=>{nt("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${u}, kernel=${o}, contextDataOffset=${i}`);let s=new iu(r,t,i);return t.computeKernel(o,s,a)})}}});var sy,cT,fT,uy,To,ly,au,su,dy,cy,ay,fy,py,hy,my=B(()=>{"use strict";Dh();Rh();at();kn();Ni();sy=!1,cT=r=>{let e=it(),n=e.stackSave();try{let t=e.stackAlloc(8);return e._OrtGetInputOutputCount(r,t,t+4)!==0&&Qe("Can't get session input/output count."),[e.HEAP32[t/4],e.HEAP32[t/4+1]]}finally{e.stackRestore(n)}},fT=(r,e)=>{it()._OrtInit(r,e)!==0&&Qe("Can't initialize onnxruntime.")},uy=async r=>{fT(r.wasm.numThreads,bo(r.logLevel));{let e=(iy(),kr(oy)).init;await e(it(),r)}sy=!0},To=new Map,ly=()=>sy,au=r=>{let e=it(),n=e._malloc(r.byteLength);if(n===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${r.byteLength}.`);return e.HEAPU8.set(r,n),[n,r.byteLength]},su=(r,e)=>{let n=it(),t=0,o=0,i=0,u=[],a=[],s=[];try{[o,u]=Bh(e),t=n._OrtCreateSession(r[0],r[1],o),t===0&&Qe("Can't create a session.");let[l,d]=cT(t),p=[],f=[],g=[];for(let y=0;y<l;y++){let $=n._OrtGetInputName(t,y);$===0&&Qe("Can't get an input name."),a.push($),p.push(n.UTF8ToString($))}for(let y=0;y<d;y++){let $=n._OrtGetOutputName(t,y);$===0&&Qe("Can't get an output name."),s.push($);let x=n.UTF8ToString($);f.push(x);{let I=typeof e?.preferredOutputLocation=="string"?e.preferredOutputLocation:e?.preferredOutputLocation?.[x]??"cpu";if(I!=="cpu"&&I!=="cpu-pinned"&&I!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${I}.`);g.push(I)}}let b=null;return g.some(y=>y==="gpu-buffer")&&(i=n._OrtCreateBinding(t),i===0&&Qe("Can't create IO binding."),b={handle:i,outputPreferredLocations:g,outputPreferredLocationsEncoded:g.map(y=>Ms(y))}),To.set(t,[t,a,s,b]),[t,p,f]}catch(l){throw a.forEach(d=>n._OrtFree(d)),s.forEach(d=>n._OrtFree(d)),i!==0&&n._OrtReleaseBinding(i),t!==0&&n._OrtReleaseSession(t),l}finally{n._free(r[0]),o!==0&&n._OrtReleaseSessionOptions(o),u.forEach(l=>n._free(l))}},dy=(r,e)=>{let n=au(r);return su(n,e)},cy=r=>{let e=it(),n=To.get(r);if(!n)throw new Error(`cannot release session. invalid session id: ${r}`);let[t,o,i,u]=n;u&&e._OrtReleaseBinding(u.handle),e.jsepUnregisterBuffers?.(r),o.forEach(a=>e._OrtFree(a)),i.forEach(a=>e._OrtFree(a)),e._OrtReleaseSession(t),To.delete(r)},ay=(r,e,n,t,o)=>{if(!r){e.push(0);return}let i=it(),u=r[0],a=r[1],s=r[3],l,d;if(u==="string"&&s==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(s==="gpu-buffer"){let g=r[2].gpuBuffer,b=go(Rs(u));d=a.reduce((y,$)=>y*$,1)*b,l=i.jsepRegisterBuffer(t,o,g,d)}else{let g=r[2];if(Array.isArray(g)){d=4*g.length,l=i._malloc(d),n.push(l);let b=l/4;for(let y=0;y<g.length;y++){if(typeof g[y]!="string")throw new TypeError(`tensor data at index ${y} is not a string`);i.HEAPU32[b++]=ct(g[y],n)}}else d=g.byteLength,l=i._malloc(d),n.push(l),i.HEAPU8.set(new Uint8Array(g.buffer,g.byteOffset,d),l)}let p=i.stackSave(),f=i.stackAlloc(4*a.length);try{let g=f/4;a.forEach(y=>i.HEAP32[g++]=y);let b=i._OrtCreateTensor(Rs(u),l,d,f,a.length,Ms(s));b===0&&Qe(`Can't create tensor for input/output. session=${t}, index=${o}.`),e.push(b)}finally{i.stackRestore(p)}},fy=async(r,e,n,t,o,i)=>{let u=it(),a=To.get(r);if(!a)throw new Error(`cannot run inference. invalid session id: ${r}`);let[s,l,d,p]=a,f=e.length,g=t.length,b=0,y=[],$=[],x=[],I=[],O=u.stackSave(),C=u.stackAlloc(f*4),N=u.stackAlloc(f*4),R=u.stackAlloc(g*4),V=u.stackAlloc(g*4);try{[b,y]=kh(i);for(let le=0;le<f;le++)ay(n[le],$,I,r,e[le]);for(let le=0;le<g;le++)ay(o[le],x,I,r,f+t[le]);let W=C/4,j=N/4,ie=R/4,P=V/4;for(let le=0;le<f;le++)u.HEAPU32[W++]=$[le],u.HEAPU32[j++]=l[e[le]];for(let le=0;le<g;le++)u.HEAPU32[ie++]=x[le],u.HEAPU32[P++]=d[t[le]];if(p){let{handle:le,outputPreferredLocations:Me,outputPreferredLocationsEncoded:te}=p;if(l.length!==f)throw new Error(`input count from feeds (${f}) is expected to be always equal to model's input count (${l.length}).`);for(let Le=0;Le<f;Le++){let Ue=e[Le];await u._OrtBindInput(le,l[Ue],$[Le])!==0&&Qe(`Can't bind input[${Le}] for session=${r}.`)}for(let Le=0;Le<g;Le++){let Ue=t[Le];o[Le]?.[3]?u._OrtBindOutput(le,d[Ue],x[Le],0)!==0&&Qe(`Can't bind pre-allocated output[${Le}] for session=${r}.`):u._OrtBindOutput(le,d[Ue],0,te[Ue])!==0&&Qe(`Can't bind output[${Le}] to ${Me[Le]} for session=${r}.`)}}let Q;p?Q=await u._OrtRunWithBinding(s,p.handle,g,R,b):Q=await u._OrtRun(s,N,C,f,V,g,R,b),Q!==0&&Qe("failed to call OrtRun().");let Se=[];for(let le=0;le<g;le++){let Me=u.HEAPU32[R/4+le];if(Me===x[le]){Se.push(o[le]);continue}let te=u.stackSave(),Le=u.stackAlloc(4*4),Ue=!1,qe,Ee=0;try{u._OrtGetTensorData(Me,Le,Le+4,Le+8,Le+12)!==0&&Qe(`Can't access output tensor data on index ${le}.`);let xt=Le/4,St=u.HEAPU32[xt++];Ee=u.HEAPU32[xt++];let X=u.HEAPU32[xt++],we=u.HEAPU32[xt++],Ae=[];for(let ot=0;ot<we;ot++)Ae.push(u.HEAPU32[X/4+ot]);u._OrtFree(X);let yt=Ae.reduce((ot,pt)=>ot*pt,1);qe=mo(St);let Pt=p?.outputPreferredLocations[t[le]];if(qe==="string"){if(Pt==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let ot=[],pt=Ee/4;for(let It=0;It<yt;It++){let ir=u.HEAPU32[pt++],zt=It===yt-1?void 0:u.HEAPU32[pt]-ir;ot.push(u.UTF8ToString(ir,zt))}Se.push([qe,Ae,ot,"cpu"])}else if(Pt==="gpu-buffer"&&yt>0){let ot=u.jsepGetBuffer(Ee),pt=go(St);if(pt===void 0||!Vi(qe))throw new Error(`Unsupported data type: ${qe}`);Ue=!0,Se.push([qe,Ae,{gpuBuffer:ot,download:u.jsepCreateDownloader(ot,yt*pt,qe),dispose:()=>{u._OrtReleaseTensor(Me)}},"gpu-buffer"])}else{let ot=Fi(qe),pt=new ot(yt);new Uint8Array(pt.buffer,pt.byteOffset,pt.byteLength).set(u.HEAPU8.subarray(Ee,Ee+pt.byteLength)),Se.push([qe,Ae,pt,"cpu"])}}finally{u.stackRestore(te),qe==="string"&&Ee&&u._free(Ee),Ue||u._OrtReleaseTensor(Me)}}return p&&u._OrtClearBoundOutputs(p.handle),Se}finally{u.stackRestore(O),$.forEach(W=>u._OrtReleaseTensor(W)),x.forEach(W=>u._OrtReleaseTensor(W)),I.forEach(W=>u._free(W)),b!==0&&u._OrtReleaseRunOptions(b),y.forEach(W=>u._free(W))}},py=r=>{let e=it(),n=To.get(r);if(!n)throw new Error("invalid session id");let t=n[0],o=e._OrtEndProfiling(t);o===0&&Qe("Can't get an profile file name."),e._OrtFree(o)},hy=r=>{let e=[];for(let n of r){let t=n[2];!Array.isArray(t)&&"buffer"in t&&e.push(t.buffer)}return e}});var gy=Ye((uM,hT)=>{hT.exports='/*!\n * ONNX Runtime Web v1.17.0\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n"use strict";(()=>{var cn=Object.defineProperty;var Wu=Object.getOwnPropertyDescriptor;var Uu=Object.getOwnPropertyNames;var Nu=Object.prototype.hasOwnProperty;var q=(e,t)=>()=>(e&&(t=e(e=0)),t);var or=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),kr=(e,t)=>{for(var r in t)cn(e,r,{get:t[r],enumerable:!0})},Hu=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of Uu(t))!Nu.call(e,n)&&n!==r&&cn(e,n,{get:()=>t[n],enumerable:!(o=Wu(t,n))||o.enumerable});return e};var Vt=e=>Hu(cn({},"__esModule",{value:!0}),e);var pn={};kr(pn,{readFile:()=>Gu});var Gu,mn=q(()=>{Gu=void 0});var fn={};kr(fn,{join:()=>Lu});var Lu,hn=q(()=>{Lu=void 0});var go=or((ho,gn)=>{"use strict";var fo=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){var r=t,o,n;r.ready=new Promise((l,m)=>{o=l,n=m}),r.jsepInit=(l,m,y,C,_,G,H,le)=>{r.Za=l,r.Oa=m,r.Qa=y,r.Ja=C,r.Pa=_,r.ra=G,r.Ra=H,r.Sa=le,m=(Z,oe,J)=>(...me)=>{let we=Xe,O=oe?.();me=Z(...me);let ie=oe?.();return O!==ie&&(Z=ie,J(O),oe=J=null),Xe!=we?$r():me},y=Z=>async(...oe)=>{try{if(r.Da)throw Error("Session already started");let J=r.Da={Ta:oe[0],errors:[]},me=await Z(...oe);if(r.Da!==J)throw Error("Session mismatch");l.flush();let we=J.errors;if(0<we.length){let O=await Promise.all(we);if(O=O.filter(ie=>ie),0<O.length)throw Error(O.join(`\n`))}return me}finally{r.Da=null}},r._OrtRun=y(m(r._OrtRun,()=>r._OrtRun,Z=>r._OrtRun=Z)),r._OrtRunWithBinding=y(m(r._OrtRunWithBinding,()=>r._OrtRunWithBinding,Z=>r._OrtRunWithBinding=Z)),r._OrtBindInput=m(r._OrtBindInput,()=>r._OrtBindInput,Z=>r._OrtBindInput=Z),r.jsepRegisterBuffer=(Z,oe,J,me)=>l.registerBuffer(Z,oe,J,me),r.jsepUnregisterBuffers=Z=>{l.unregisterBuffers(Z)},r.jsepGetBuffer=Z=>l.getBuffer(Z),r.jsepCreateDownloader=(Z,oe,J)=>l.createDownloader(Z,oe,J)};var s=Object.assign({},r),u="./this.program",d=(l,m)=>{throw m},a=typeof window=="object",p=typeof importScripts=="function",h=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",$="",g,w,b;if(h){var v=(mn(),Vt(pn)),I=(hn(),Vt(fn));$=p?I.dirname($)+"/":__dirname+"/",g=(l,m)=>(l=l.startsWith("file://")?new URL(l):I.normalize(l),v.readFileSync(l,m?void 0:"utf8")),b=l=>(l=g(l,!0),l.buffer||(l=new Uint8Array(l)),l),w=(l,m,y,C=!0)=>{l=l.startsWith("file://")?new URL(l):I.normalize(l),v.readFile(l,C?void 0:"utf8",(_,G)=>{_?y(_):m(C?G.buffer:G)})},!r.thisProgram&&1<process.argv.length&&(u=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),d=(l,m)=>{throw process.exitCode=l,m},r.inspect=()=>"[Emscripten Module object]"}else(a||p)&&(p?$=self.location.href:typeof document<"u"&&document.currentScript&&($=document.currentScript.src),e&&($=e),$.indexOf("blob:")!==0?$=$.substr(0,$.replace(/[?#].*/,"").lastIndexOf("/")+1):$="",g=l=>{var m=new XMLHttpRequest;return m.open("GET",l,!1),m.send(null),m.responseText},p&&(b=l=>{var m=new XMLHttpRequest;return m.open("GET",l,!1),m.responseType="arraybuffer",m.send(null),new Uint8Array(m.response)}),w=(l,m,y)=>{var C=new XMLHttpRequest;C.open("GET",l,!0),C.responseType="arraybuffer",C.onload=()=>{C.status==200||C.status==0&&C.response?m(C.response):y()},C.onerror=y,C.send(null)});var x=r.print||console.log.bind(console),A=r.printErr||console.error.bind(console);Object.assign(r,s),s=null,r.thisProgram&&(u=r.thisProgram),r.quit&&(d=r.quit);var B;r.wasmBinary&&(B=r.wasmBinary);var E=r.noExitRuntime||!0;typeof WebAssembly!="object"&&Le("no native wasm support detected");var V,P,z=!1,U,F,te,R,j,pe,Q;function $e(){var l=V.buffer;r.HEAP8=F=new Int8Array(l),r.HEAP16=new Int16Array(l),r.HEAP32=R=new Int32Array(l),r.HEAPU8=te=new Uint8Array(l),r.HEAPU16=new Uint16Array(l),r.HEAPU32=j=new Uint32Array(l),r.HEAPF32=pe=new Float32Array(l),r.HEAPF64=Q=new Float64Array(l)}var Y=[],Se=[],Ie=[];function Ae(){var l=r.preRun.shift();Y.unshift(l)}var he=0,nt=null,He=null;function Le(l){throw r.onAbort&&r.onAbort(l),l="Aborted("+l+")",A(l),z=!0,U=1,l=new WebAssembly.RuntimeError(l+". Build with -sASSERTIONS for more info."),n(l),l}function L(l){return l.startsWith("data:application/octet-stream;base64,")}var de;if(de="ort-wasm-simd.wasm",!L(de)){var fe=de;de=r.locateFile?r.locateFile(fe,$):$+fe}function Ue(l){if(l==de&&B)return new Uint8Array(B);if(b)return b(l);throw"both async and sync fetching of the wasm failed"}function Ke(l){if(!B&&(a||p)){if(typeof fetch=="function"&&!l.startsWith("file://"))return fetch(l,{credentials:"same-origin"}).then(m=>{if(!m.ok)throw"failed to load wasm binary file at \'"+l+"\'";return m.arrayBuffer()}).catch(()=>Ue(l));if(w)return new Promise((m,y)=>{w(l,C=>m(new Uint8Array(C)),y)})}return Promise.resolve().then(()=>Ue(l))}function Re(l,m,y){return Ke(l).then(C=>WebAssembly.instantiate(C,m)).then(C=>C).then(y,C=>{A("failed to asynchronously prepare wasm: "+C),Le(C)})}function Ve(l,m){var y=de;return B||typeof WebAssembly.instantiateStreaming!="function"||L(y)||y.startsWith("file://")||h||typeof fetch!="function"?Re(y,l,m):fetch(y,{credentials:"same-origin"}).then(C=>WebAssembly.instantiateStreaming(C,l).then(m,function(_){return A("wasm streaming compile failed: "+_),A("falling back to ArrayBuffer instantiation"),Re(y,l,m)}))}var Fe,ot={912368:l=>{r.ra("Abs",l,void 0)},912419:l=>{r.ra("Neg",l,void 0)},912470:l=>{r.ra("Floor",l,void 0)},912523:l=>{r.ra("Ceil",l,void 0)},912575:l=>{r.ra("Reciprocal",l,void 0)},912633:l=>{r.ra("Sqrt",l,void 0)},912685:l=>{r.ra("Exp",l,void 0)},912736:l=>{r.ra("Erf",l,void 0)},912787:l=>{r.ra("Sigmoid",l,void 0)},912842:l=>{r.ra("Log",l,void 0)},912893:l=>{r.ra("Sin",l,void 0)},912944:l=>{r.ra("Cos",l,void 0)},912995:l=>{r.ra("Tan",l,void 0)},913046:l=>{r.ra("Asin",l,void 0)},913098:l=>{r.ra("Acos",l,void 0)},913150:l=>{r.ra("Atan",l,void 0)},913202:l=>{r.ra("Sinh",l,void 0)},913254:l=>{r.ra("Cosh",l,void 0)},913306:l=>{r.ra("Asinh",l,void 0)},913359:l=>{r.ra("Acosh",l,void 0)},913412:l=>{r.ra("Atanh",l,void 0)},913465:l=>{r.ra("Tanh",l,void 0)},913517:l=>{r.ra("Not",l,void 0)},913568:(l,m,y)=>{r.ra("Clip",l,{min:m,max:y})},913637:l=>{r.ra("Clip",l,void 0)},913689:(l,m)=>{r.ra("Elu",l,{alpha:m})},913747:l=>{r.ra("Relu",l,void 0)},913799:(l,m)=>{r.ra("LeakyRelu",l,{alpha:m})},913863:(l,m)=>{r.ra("ThresholdedRelu",l,{alpha:m})},913933:(l,m)=>{r.ra("Cast",l,{to:m})},913991:l=>{r.ra("Add",l,void 0)},914042:l=>{r.ra("Sub",l,void 0)},914093:l=>{r.ra("Mul",l,void 0)},914144:l=>{r.ra("Div",l,void 0)},914195:l=>{r.ra("Pow",l,void 0)},914246:l=>{r.ra("Equal",l,void 0)},914299:l=>{r.ra("Greater",l,void 0)},914354:l=>{r.ra("GreaterOrEqual",l,void 0)},914416:l=>{r.ra("Less",l,void 0)},914468:l=>{r.ra("LessOrEqual",l,void 0)},914527:(l,m,y,C,_)=>{r.ra("ReduceMean",l,{keepDims:!!m,noopWithEmptyAxes:!!y,axes:C?Array.from(R.subarray(_>>>0,_+C>>>0)):[]})},914691:(l,m,y,C,_)=>{r.ra("ReduceMax",l,{keepDims:!!m,noopWithEmptyAxes:!!y,axes:C?Array.from(R.subarray(_>>>0,_+C>>>0)):[]})},914854:(l,m,y,C,_)=>{r.ra("ReduceMin",l,{keepDims:!!m,noopWithEmptyAxes:!!y,axes:C?Array.from(R.subarray(_>>>0,_+C>>>0)):[]})},915017:(l,m,y,C,_)=>{r.ra("ReduceProd",l,{keepDims:!!m,noopWithEmptyAxes:!!y,axes:C?Array.from(R.subarray(_>>>0,_+C>>>0)):[]})},915181:(l,m,y,C,_)=>{r.ra("ReduceSum",l,{keepDims:!!m,noopWithEmptyAxes:!!y,axes:C?Array.from(R.subarray(_>>>0,_+C>>>0)):[]})},915344:(l,m,y,C,_)=>{r.ra("ReduceL1",l,{keepDims:!!m,noopWithEmptyAxes:!!y,axes:C?Array.from(R.subarray(_>>>0,_+C>>>0)):[]})},915506:(l,m,y,C,_)=>{r.ra("ReduceL2",l,{keepDims:!!m,noopWithEmptyAxes:!!y,axes:C?Array.from(R.subarray(_>>>0,_+C>>>0)):[]})},915668:(l,m,y,C,_)=>{r.ra("ReduceLogSum",l,{keepDims:!!m,noopWithEmptyAxes:!!y,axes:C?Array.from(R.subarray(_>>>0,_+C>>>0)):[]})},915834:(l,m,y,C,_)=>{r.ra("ReduceSumSquare",l,{keepDims:!!m,noopWithEmptyAxes:!!y,axes:C?Array.from(R.subarray(_>>>0,_+C>>>0)):[]})},916003:(l,m,y,C,_)=>{r.ra("ReduceLogSumExp",l,{keepDims:!!m,noopWithEmptyAxes:!!y,axes:C?Array.from(R.subarray(_>>>0,_+C>>>0)):[]})},916172:l=>{r.ra("Where",l,void 0)},916225:(l,m,y)=>{r.ra("Transpose",l,{perm:m?Array.from(R.subarray(y>>>0,y+m>>>0)):[]})},916338:(l,m,y,C,_,G,H,le,Z,oe,J,me,we,O,ie)=>{r.ra("ConvTranspose",l,{format:Z?"NHWC":"NCHW",autoPad:m,dilations:[y],group:C,kernel_shape:[_],pads:[G,H],strides:[le],wIsConst:()=>!!F[oe>>>0],outputPadding:J?Array.from(R.subarray(me>>>0,me+J>>>0)):[],outputShape:we?Array.from(R.subarray(O>>>0,O+we>>>0)):[],activation:Me(ie)})},916752:(l,m,y,C,_,G,H,le,Z,oe,J,me,we,O)=>{r.ra("ConvTranspose",l,{format:le?"NHWC":"NCHW",autoPad:m,dilations:Array.from(R.subarray(y>>>0,y+2>>>0)),group:C,kernelShape:Array.from(R.subarray(_>>>0,_+2>>>0)),pads:Array.from(R.subarray(G>>>0,G+4>>>0)),strides:Array.from(R.subarray(H>>>0,H+2>>>0)),wIsConst:()=>!!F[Z>>>0],outputPadding:0<oe?Array.from(R.subarray(J>>>0,J+oe>>>0)):[],outputShape:0<me?Array.from(R.subarray(we>>>0,we+me>>>0)):[],activation:Me(O)})},917309:(l,m,y,C,_,G,H,le,Z,oe,J,me,we,O,ie)=>{r.ra("ConvTranspose",l,{format:Z?"NHWC":"NCHW",autoPad:m,dilations:[y],group:C,kernel_shape:[_],pads:[G,H],strides:[le],wIsConst:()=>!!F[oe>>>0],outputPadding:J?Array.from(R.subarray(me>>>0,me+J>>>0)):[],outputShape:we?Array.from(R.subarray(O>>>0,O+we>>>0)):[],activation:Me(ie)})},917723:(l,m,y,C,_,G,H,le,Z,oe,J,me,we,O)=>{r.ra("ConvTranspose",l,{format:le?"NHWC":"NCHW",autoPad:m,dilations:Array.from(R.subarray(y>>>0,y+2>>>0)),group:C,kernelShape:Array.from(R.subarray(_>>>0,_+2>>>0)),pads:Array.from(R.subarray(G>>>0,G+4>>>0)),strides:Array.from(R.subarray(H>>>0,H+2>>>0)),wIsConst:()=>!!F[Z>>>0],outputPadding:0<oe?Array.from(R.subarray(J>>>0,J+oe>>>0)):[],outputShape:0<me?Array.from(R.subarray(we>>>0,we+me>>>0)):[],activation:Me(O)})},918280:(l,m)=>{r.ra("GlobalAveragePool",l,{format:m?"NHWC":"NCHW"})},918371:(l,m,y,C,_,G,H,le,Z,oe,J,me,we,O,ie,ge)=>{r.ra("AveragePool",l,{format:ge?"NHWC":"NCHW",auto_pad:m,ceil_mode:y,count_include_pad:C,storage_order:_,dilations:[G,H],kernel_shape:[le,Z],pads:[oe,J,me,we],strides:[O,ie]})},918655:(l,m)=>{r.ra("GlobalAveragePool",l,{format:m?"NHWC":"NCHW"})},918746:(l,m,y,C,_,G,H,le,Z,oe,J,me,we,O,ie,ge)=>{r.ra("AveragePool",l,{format:ge?"NHWC":"NCHW",auto_pad:m,ceil_mode:y,count_include_pad:C,storage_order:_,dilations:[G,H],kernel_shape:[le,Z],pads:[oe,J,me,we],strides:[O,ie]})},919030:(l,m)=>{r.ra("GlobalMaxPool",l,{format:m?"NHWC":"NCHW"})},919117:(l,m,y,C,_,G,H,le,Z,oe,J,me,we,O,ie,ge)=>{r.ra("MaxPool",l,{format:ge?"NHWC":"NCHW",auto_pad:m,ceil_mode:y,count_include_pad:C,storage_order:_,dilations:[G,H],kernel_shape:[le,Z],pads:[oe,J,me,we],strides:[O,ie]})},919397:(l,m)=>{r.ra("GlobalMaxPool",l,{format:m?"NHWC":"NCHW"})},919484:(l,m,y,C,_,G,H,le,Z,oe,J,me,we,O,ie,ge)=>{r.ra("MaxPool",l,{format:ge?"NHWC":"NCHW",auto_pad:m,ceil_mode:y,count_include_pad:C,storage_order:_,dilations:[G,H],kernel_shape:[le,Z],pads:[oe,J,me,we],strides:[O,ie]})},919764:(l,m,y,C,_)=>{r.ra("Gemm",l,{alpha:m,beta:y,transA:C,transB:_})},919868:l=>{r.ra("MatMul",l,void 0)},919922:(l,m,y,C)=>{r.ra("ArgMax",l,{keepDims:!!m,selectLastIndex:!!y,axis:C})},920030:(l,m,y,C)=>{r.ra("ArgMin",l,{keepDims:!!m,selectLastIndex:!!y,axis:C})},920138:(l,m)=>{r.ra("Softmax",l,{axis:m})},920201:(l,m)=>{r.ra("Concat",l,{axis:m})},920261:(l,m,y,C,_)=>{r.ra("Split",l,{axis:m,numOutputs:y,splitSizes:C?Array.from(R.subarray(_>>>0,_+C>>>0)):[]})},920406:l=>{r.ra("Expand",l,void 0)},920460:(l,m)=>{r.ra("Gather",l,{axis:Number(m)})},920531:(l,m)=>{r.ra("GatherElements",l,{axis:Number(m)})},920610:(l,m,y,C,_,G,H,le,Z,oe,J)=>{r.ra("Resize",l,{antialias:m,axes:y?Array.from(R.subarray(C>>>0,C+y>>>0)):[],coordinateTransformMode:Me(_),cubicCoeffA:G,excludeOutside:H,extrapolationValue:le,keepAspectRatioPolicy:Me(Z),mode:Me(oe),nearestMode:Me(J)})},920961:(l,m,y,C,_,G,H)=>{r.ra("Slice",l,{starts:m?Array.from(R.subarray(y>>>0,y+m>>>0)):[],ends:C?Array.from(R.subarray(_>>>0,_+C>>>0)):[],axes:G?Array.from(R.subarray(H>>>0,H+G>>>0)):[]})},921192:l=>{r.ra("Tile",l,void 0)},921244:(l,m,y)=>{r.ra("LayerNormalization",l,{axis:Number(m),epsilon:Number(y)})},921351:(l,m,y)=>{r.ra("InstanceNormalization",l,{epsilon:m,format:y?"NHWC":"NCHW"})},921465:(l,m,y)=>{r.ra("InstanceNormalization",l,{epsilon:m,format:y?"NHWC":"NCHW"})},921579:l=>{r.ra("Range",l,void 0)},921632:(l,m)=>{r.ra("Einsum",l,{equation:Me(m)})},921713:(l,m,y,C,_)=>{r.ra("Pad",l,{mode:m,value:y,pads:C?Array.from(R.subarray(_>>>0,_+C>>>0)):[]})},921845:(l,m,y,C,_,G)=>{r.ra("BatchNormalization",l,{epsilon:m,momentum:y,spatial:!!_,trainingMode:!!C,format:G?"NHWC":"NCHW"})},922014:(l,m,y,C,_,G)=>{r.ra("BatchNormalization",l,{epsilon:m,momentum:y,spatial:!!_,trainingMode:!!C,format:G?"NHWC":"NCHW"})},922183:(l,m,y)=>{r.ra("CumSum",l,{exclusive:Number(m),reverse:Number(y)})},922280:(l,m,y,C,_,G,H,le,Z)=>{r.ra("Attention",l,{numHeads:m,isUnidirectional:y,maskFilterValue:C,scale:_,doRotary:G,qkvHiddenSizes:H?Array.from(R.subarray(Number(le)>>>0,Number(le)+H>>>0)):[],pastPresentShareBuffer:!!Z})},922552:l=>{r.ra("Gelu",l,void 0)},922604:(l,m,y,C,_,G)=>{r.ra("MultiHeadAttention",l,{numHeads:m,isUnidirectional:y,maskFilterValue:C,scale:_,doRotary:G})},922763:l=>{r.ra("BiasAdd",l,void 0)},922818:l=>{r.ra("BiasSplitGelu",l,void 0)},922879:(l,m)=>{r.ra("SkipLayerNormalization",l,{epsilon:m})},922960:(l,m,y,C,_,G,H,le,Z,oe,J,me,we)=>{r.ra("Conv",l,{format:Z?"NHWC":"NCHW",auto_pad:m,dilations:[y],group:C,kernel_shape:[_],pads:G?Array.from(R.subarray(H>>>0,H+G>>>0)):[],strides:[le],w_is_const:()=>!!F[oe>>>0],activation:Me(J),activation_params:me?Array.from(pe.subarray(we>>>0,we+me>>>0)):[]})},923341:(l,m,y,C,_,G,H,le,Z,oe,J,me,we,O,ie,ge)=>{r.ra("Conv",l,{format:me?"NHWC":"NCHW",auto_pad:m,dilations:[y,C],group:_,kernel_shape:[G,H],pads:le?Array.from(R.subarray(Z>>>0,Z+le>>>0)):[],strides:[oe,J],w_is_const:()=>!!F[we>>>0],activation:Me(O),activation_params:ie?Array.from(pe.subarray(ge>>>0,ge+ie>>>0)):[]})},923743:l=>{r.Ra(l)},923777:(l,m)=>r.Sa(l,m,r.Da.Ta,r.Da.errors),923889:l=>r.Oa(l),923922:l=>r.Qa(l),923954:(l,m,y)=>{r.Ja(l,m,y,!0)},923993:(l,m,y)=>{r.Ja(l,m,y)}};function Ze(l){this.name="ExitStatus",this.message=`Program terminated with exit(${l})`,this.status=l}var St=l=>{for(;0<l.length;)l.shift()(r)};function xt(l){this.Ha=l-24,this.Ma=function(m){j[this.Ha+4>>2>>>0]=m},this.La=function(m){j[this.Ha+8>>2>>>0]=m},this.Ya=function(m,y){this.Ka(),this.Ma(m),this.La(y)},this.Ka=function(){j[this.Ha+16>>2>>>0]=0}}var Nt=0,fr=0,Qe=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Ht=(l,m,y)=>{m>>>=0;var C=m+y;for(y=m;l[y]&&!(y>=C);)++y;if(16<y-m&&l.buffer&&Qe)return Qe.decode(l.subarray(m,y));for(C="";m<y;){var _=l[m++];if(_&128){var G=l[m++]&63;if((_&224)==192)C+=String.fromCharCode((_&31)<<6|G);else{var H=l[m++]&63;_=(_&240)==224?(_&15)<<12|G<<6|H:(_&7)<<18|G<<12|H<<6|l[m++]&63,65536>_?C+=String.fromCharCode(_):(_-=65536,C+=String.fromCharCode(55296|_>>10,56320|_&1023))}}else C+=String.fromCharCode(_)}return C},Me=(l,m)=>(l>>>=0)?Ht(te,l,m):"",kt=l=>{for(var m=0,y=0;y<l.length;++y){var C=l.charCodeAt(y);127>=C?m++:2047>=C?m+=2:55296<=C&&57343>=C?(m+=4,++y):m+=3}return m},Gt=(l,m,y,C)=>{if(y>>>=0,!(0<C))return 0;var _=y;C=y+C-1;for(var G=0;G<l.length;++G){var H=l.charCodeAt(G);if(55296<=H&&57343>=H){var le=l.charCodeAt(++G);H=65536+((H&1023)<<10)|le&1023}if(127>=H){if(y>=C)break;m[y++>>>0]=H}else{if(2047>=H){if(y+1>=C)break;m[y++>>>0]=192|H>>6}else{if(65535>=H){if(y+2>=C)break;m[y++>>>0]=224|H>>12}else{if(y+3>=C)break;m[y++>>>0]=240|H>>18,m[y++>>>0]=128|H>>12&63}m[y++>>>0]=128|H>>6&63}m[y++>>>0]=128|H&63}}return m[y>>>0]=0,y-_},mt=l=>l%4===0&&(l%100!==0||l%400===0),hr=[0,31,60,91,121,152,182,213,244,274,305,335],ft=[0,31,59,90,120,151,181,212,243,273,304,334],Pt=l=>{var m=kt(l)+1,y=Dt(m);return y&&Gt(l,te,y,m),y},yt=[],Rt=(l,m)=>{yt.length=0;var y;for(m>>=2;y=te[l++>>>0];)m+=y!=105&m,yt.push(y==105?R[m>>>0]:Q[m++>>>1]),++m;return yt},Bt={},Lt=()=>{if(!Mt){var l={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:u||"./this.program"},m;for(m in Bt)Bt[m]===void 0?delete l[m]:l[m]=Bt[m];var y=[];for(m in l)y.push(`${m}=${l[m]}`);Mt=y}return Mt},Mt,gr=[null,[],[]],Ne=[31,29,31,30,31,30,31,31,30,31,30,31],Ft=[31,28,31,30,31,30,31,31,30,31,30,31];function jt(l){var m=Array(kt(l)+1);return Gt(l,m,0,m.length),m}function ue(l,m,y,C){function _(O,ie,ge){for(O=typeof O=="number"?O.toString():O||"";O.length<ie;)O=ge[0]+O;return O}function G(O,ie){return _(O,ie,"0")}function H(O,ie){function ge(nr){return 0>nr?-1:0<nr?1:0}var gt;return(gt=ge(O.getFullYear()-ie.getFullYear()))===0&&(gt=ge(O.getMonth()-ie.getMonth()))===0&&(gt=ge(O.getDate()-ie.getDate())),gt}function le(O){switch(O.getDay()){case 0:return new Date(O.getFullYear()-1,11,29);case 1:return O;case 2:return new Date(O.getFullYear(),0,3);case 3:return new Date(O.getFullYear(),0,2);case 4:return new Date(O.getFullYear(),0,1);case 5:return new Date(O.getFullYear()-1,11,31);case 6:return new Date(O.getFullYear()-1,11,30)}}function Z(O){var ie=O.Ba;for(O=new Date(new Date(O.Ca+1900,0,1).getTime());0<ie;){var ge=O.getMonth(),gt=(mt(O.getFullYear())?Ne:Ft)[ge];if(ie>gt-O.getDate())ie-=gt-O.getDate()+1,O.setDate(1),11>ge?O.setMonth(ge+1):(O.setMonth(0),O.setFullYear(O.getFullYear()+1));else{O.setDate(O.getDate()+ie);break}}return ge=new Date(O.getFullYear()+1,0,4),ie=le(new Date(O.getFullYear(),0,4)),ge=le(ge),0>=H(ie,O)?0>=H(ge,O)?O.getFullYear()+1:O.getFullYear():O.getFullYear()-1}l>>>=0,m>>>=0,y>>>=0,C>>>=0;var oe=R[C+40>>2>>>0];C={Wa:R[C>>2>>>0],Va:R[C+4>>2>>>0],Ea:R[C+8>>2>>>0],Ia:R[C+12>>2>>>0],Fa:R[C+16>>2>>>0],Ca:R[C+20>>2>>>0],wa:R[C+24>>2>>>0],Ba:R[C+28>>2>>>0],$a:R[C+32>>2>>>0],Ua:R[C+36>>2>>>0],Xa:oe?Me(oe):""},y=Me(y),oe={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var J in oe)y=y.replace(new RegExp(J,"g"),oe[J]);var me="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),we="January February March April May June July August September October November December".split(" ");oe={"%a":O=>me[O.wa].substring(0,3),"%A":O=>me[O.wa],"%b":O=>we[O.Fa].substring(0,3),"%B":O=>we[O.Fa],"%C":O=>G((O.Ca+1900)/100|0,2),"%d":O=>G(O.Ia,2),"%e":O=>_(O.Ia,2," "),"%g":O=>Z(O).toString().substring(2),"%G":O=>Z(O),"%H":O=>G(O.Ea,2),"%I":O=>(O=O.Ea,O==0?O=12:12<O&&(O-=12),G(O,2)),"%j":O=>{for(var ie=0,ge=0;ge<=O.Fa-1;ie+=(mt(O.Ca+1900)?Ne:Ft)[ge++]);return G(O.Ia+ie,3)},"%m":O=>G(O.Fa+1,2),"%M":O=>G(O.Va,2),"%n":()=>`\n`,"%p":O=>0<=O.Ea&&12>O.Ea?"AM":"PM","%S":O=>G(O.Wa,2),"%t":()=>"	","%u":O=>O.wa||7,"%U":O=>G(Math.floor((O.Ba+7-O.wa)/7),2),"%V":O=>{var ie=Math.floor((O.Ba+7-(O.wa+6)%7)/7);if(2>=(O.wa+371-O.Ba-2)%7&&ie++,ie)ie==53&&(ge=(O.wa+371-O.Ba)%7,ge==4||ge==3&&mt(O.Ca)||(ie=1));else{ie=52;var ge=(O.wa+7-O.Ba-1)%7;(ge==4||ge==5&&mt(O.Ca%400-1))&&ie++}return G(ie,2)},"%w":O=>O.wa,"%W":O=>G(Math.floor((O.Ba+7-(O.wa+6)%7)/7),2),"%y":O=>(O.Ca+1900).toString().substring(2),"%Y":O=>O.Ca+1900,"%z":O=>{O=O.Ua;var ie=0<=O;return O=Math.abs(O)/60,(ie?"+":"-")+("0000"+(O/60*100+O%60)).slice(-4)},"%Z":O=>O.Xa,"%%":()=>"%"},y=y.replace(/%%/g,"\\0\\0");for(J in oe)y.includes(J)&&(y=y.replace(new RegExp(J,"g"),oe[J](C)));return y=y.replace(/\\0\\0/g,"%"),J=jt(y),J.length>m?0:(F.set(J,l>>>0),J.length-1)}function ht(l){try{l()}catch(m){Le(m)}}function yr(l){var m={},y;for(y in l)(function(C){var _=l[C];m[C]=typeof _=="function"?function(){Ct.push(C);try{return _.apply(null,arguments)}finally{z||(Ct.pop()===C||Le(),Xe&&at===1&&Ct.length===0&&(at=0,ht(tr),typeof Fibers<"u"&&Fibers.ab()))}}:_})(y);return m}var at=0,Xe=null,br=0,Ct=[],qt={},Kt={},wr=0,It=null,vr=[];function $r(){return new Promise((l,m)=>{It={resolve:l,reject:m}})}function Sr(){var l=Dt(65548),m=l+12;j[l>>2>>>0]=m,j[l+4>>2>>>0]=m+65536,m=Ct[0];var y=qt[m];return y===void 0&&(y=wr++,qt[m]=y,Kt[y]=m),R[l+8>>2>>>0]=y,l}function xr(l){if(!z){if(at===0){var m=!1,y=!1;l((C=0)=>{if(!z&&(br=C,m=!0,y)){at=2,ht(()=>zt(Xe)),typeof Browser<"u"&&Browser.Ga.Na&&Browser.Ga.resume(),C=!1;try{var _=(0,P[Kt[R[Xe+8>>2>>>0]]])()}catch(le){_=le,C=!0}var G=!1;if(!Xe){var H=It;H&&(It=null,(C?H.reject:H.resolve)(_),G=!0)}if(C&&!G)throw _}}),y=!0,m||(at=1,Xe=Sr(),typeof Browser<"u"&&Browser.Ga.Na&&Browser.Ga.pause(),ht(()=>er(Xe)))}else at===2?(at=0,ht(At),Yt(Xe),Xe=null,vr.forEach(C=>{if(!z)try{if(C(),!E)try{U=U=C=U,E||(r.onExit&&r.onExit(C),z=!0),d(C,new Ze(C))}catch(_){_ instanceof Ze||_=="unwind"||d(1,_)}}catch(_){_ instanceof Ze||_=="unwind"||d(1,_)}})):Le(`invalid state: ${at}`);return br}}function Cr(l){return xr(m=>{l().then(m)})}var Ir={n:function(l,m,y){return Cr(async()=>{await r.Pa(l,m,y)})},a:function(l,m,y){throw l>>>=0,new xt(l).Ya(m>>>0,y>>>0),Nt=l,fr++,Nt},g:function(){return 0},J:function(){},z:function(){},B:function(){},L:function(){return 0},H:function(){},C:function(){},G:function(){},l:function(){},A:function(){},x:function(){},I:function(){},y:function(){},m:()=>!0,q:function(l,m,y){l=m+2097152>>>0<4194305-!!l?(l>>>0)+4294967296*m:NaN,y>>>=0,l=new Date(1e3*l),R[y>>2>>>0]=l.getUTCSeconds(),R[y+4>>2>>>0]=l.getUTCMinutes(),R[y+8>>2>>>0]=l.getUTCHours(),R[y+12>>2>>>0]=l.getUTCDate(),R[y+16>>2>>>0]=l.getUTCMonth(),R[y+20>>2>>>0]=l.getUTCFullYear()-1900,R[y+24>>2>>>0]=l.getUTCDay(),R[y+28>>2>>>0]=(l.getTime()-Date.UTC(l.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},r:function(l,m,y){l=m+2097152>>>0<4194305-!!l?(l>>>0)+4294967296*m:NaN,y>>>=0,l=new Date(1e3*l),R[y>>2>>>0]=l.getSeconds(),R[y+4>>2>>>0]=l.getMinutes(),R[y+8>>2>>>0]=l.getHours(),R[y+12>>2>>>0]=l.getDate(),R[y+16>>2>>>0]=l.getMonth(),R[y+20>>2>>>0]=l.getFullYear()-1900,R[y+24>>2>>>0]=l.getDay(),R[y+28>>2>>>0]=(mt(l.getFullYear())?hr:ft)[l.getMonth()]+l.getDate()-1|0,R[y+36>>2>>>0]=-(60*l.getTimezoneOffset()),m=new Date(l.getFullYear(),6,1).getTimezoneOffset();var C=new Date(l.getFullYear(),0,1).getTimezoneOffset();R[y+32>>2>>>0]=(m!=C&&l.getTimezoneOffset()==Math.min(C,m))|0},s:function(l){l>>>=0;var m=new Date(R[l+20>>2>>>0]+1900,R[l+16>>2>>>0],R[l+12>>2>>>0],R[l+8>>2>>>0],R[l+4>>2>>>0],R[l>>2>>>0],0),y=R[l+32>>2>>>0],C=m.getTimezoneOffset(),_=new Date(m.getFullYear(),6,1).getTimezoneOffset(),G=new Date(m.getFullYear(),0,1).getTimezoneOffset(),H=Math.min(G,_);return 0>y?R[l+32>>2>>>0]=+(_!=G&&H==C):0<y!=(H==C)&&(_=Math.max(G,_),m.setTime(m.getTime()+6e4*((0<y?H:_)-C))),R[l+24>>2>>>0]=m.getDay(),R[l+28>>2>>>0]=(mt(m.getFullYear())?hr:ft)[m.getMonth()]+m.getDate()-1|0,R[l>>2>>>0]=m.getSeconds(),R[l+4>>2>>>0]=m.getMinutes(),R[l+8>>2>>>0]=m.getHours(),R[l+12>>2>>>0]=m.getDate(),R[l+16>>2>>>0]=m.getMonth(),R[l+20>>2>>>0]=m.getYear(),l=m.getTime()/1e3,Zt((Fe=l,1<=+Math.abs(Fe)?0<Fe?+Math.floor(Fe/4294967296)>>>0:~~+Math.ceil((Fe-+(~~Fe>>>0))/4294967296)>>>0:0)),l>>>0},o:function(){return-52},p:function(){},v:function(l,m,y){function C(Z){return(Z=Z.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?Z[1]:"GMT"}y>>>=0;var _=new Date().getFullYear(),G=new Date(_,0,1),H=new Date(_,6,1);_=G.getTimezoneOffset();var le=H.getTimezoneOffset();j[l>>>0>>2>>>0]=60*Math.max(_,le),R[m>>>0>>2>>>0]=+(_!=le),l=C(G),m=C(H),l=Pt(l),m=Pt(m),le<_?(j[y>>2>>>0]=l,j[y+4>>2>>>0]=m):(j[y>>2>>>0]=m,j[y+4>>2>>>0]=l)},e:()=>{Le("")},b:function(l,m,y){return l>>>=0,m=Rt(m>>>0,y>>>0),ot[l].apply(null,m)},i:function(l,m,y){return l>>>=0,m=Rt(m>>>0,y>>>0),ot[l].apply(null,m)},h:function(){return Date.now()},w:function(){return 4294901760},c:()=>performance.now(),K:function(l,m,y){return m>>>=0,te.copyWithin(l>>>0>>>0,m>>>0,m+(y>>>0)>>>0)},u:function(l){l>>>=0;var m=te.length;if(4294901760<l)return!1;for(var y=1;4>=y;y*=2){var C=m*(1+.2/y);C=Math.min(C,l+100663296);var _=Math;C=Math.max(l,C);e:{_=_.min.call(_,4294901760,C+(65536-C%65536)%65536)-V.buffer.byteLength+65535>>>16;try{V.grow(_),$e();var G=1;break e}catch{}G=void 0}if(G)return!0}return!1},D:function(l,m){l>>>=0,m>>>=0;var y=0;return Lt().forEach(function(C,_){var G=m+y;for(_=j[l+4*_>>2>>>0]=G,G=0;G<C.length;++G)F[_++>>0>>>0]=C.charCodeAt(G);F[_>>0>>>0]=0,y+=C.length+1}),0},E:function(l,m){l>>>=0,m>>>=0;var y=Lt();j[l>>2>>>0]=y.length;var C=0;return y.forEach(function(_){C+=_.length+1}),j[m>>2>>>0]=C,0},f:()=>52,k:function(){return 52},t:function(){return 70},j:function(l,m,y,C){m>>>=0,y>>>=0,C>>>=0;for(var _=0,G=0;G<y;G++){var H=j[m>>2>>>0],le=j[m+4>>2>>>0];m+=8;for(var Z=0;Z<le;Z++){var oe=te[H+Z>>>0],J=gr[l];oe===0||oe===10?((l===1?x:A)(Ht(J,0)),J.length=0):J.push(oe)}_+=le}return j[C>>2>>>0]=_,0},F:ue,d:function(l,m,y,C){return ue(l>>>0,m>>>0,y>>>0,C>>>0)}};(function(){function l(y){if(y=y.exports,y=yr(y),P=y=bt(y),V=P.M,$e(),Se.unshift(P.N),he--,r.monitorRunDependencies&&r.monitorRunDependencies(he),he==0&&(nt!==null&&(clearInterval(nt),nt=null),He)){var C=He;He=null,C()}return y}var m={a:Ir};if(he++,r.monitorRunDependencies&&r.monitorRunDependencies(he),r.instantiateWasm)try{return r.instantiateWasm(m,l)}catch(y){A("Module.instantiateWasm callback failed with error: "+y),n(y)}return Ve(m,function(y){l(y.instance)}).catch(n),{}})(),r._OrtInit=(l,m)=>(r._OrtInit=P.O)(l,m),r._OrtGetLastError=(l,m)=>(r._OrtGetLastError=P.P)(l,m),r._OrtCreateSessionOptions=(l,m,y,C,_,G,H,le,Z,oe)=>(r._OrtCreateSessionOptions=P.Q)(l,m,y,C,_,G,H,le,Z,oe),r._OrtAppendExecutionProvider=(l,m)=>(r._OrtAppendExecutionProvider=P.R)(l,m),r._OrtAddFreeDimensionOverride=(l,m,y)=>(r._OrtAddFreeDimensionOverride=P.S)(l,m,y),r._OrtAddSessionConfigEntry=(l,m,y)=>(r._OrtAddSessionConfigEntry=P.T)(l,m,y),r._OrtReleaseSessionOptions=l=>(r._OrtReleaseSessionOptions=P.U)(l),r._OrtCreateSession=(l,m,y)=>(r._OrtCreateSession=P.V)(l,m,y),r._OrtReleaseSession=l=>(r._OrtReleaseSession=P.W)(l),r._OrtGetInputOutputCount=(l,m,y)=>(r._OrtGetInputOutputCount=P.X)(l,m,y),r._OrtGetInputName=(l,m)=>(r._OrtGetInputName=P.Y)(l,m),r._OrtGetOutputName=(l,m)=>(r._OrtGetOutputName=P.Z)(l,m),r._OrtFree=l=>(r._OrtFree=P._)(l),r._OrtCreateTensor=(l,m,y,C,_,G)=>(r._OrtCreateTensor=P.$)(l,m,y,C,_,G),r._OrtGetTensorData=(l,m,y,C,_)=>(r._OrtGetTensorData=P.aa)(l,m,y,C,_),r._OrtReleaseTensor=l=>(r._OrtReleaseTensor=P.ba)(l),r._OrtCreateRunOptions=(l,m,y,C)=>(r._OrtCreateRunOptions=P.ca)(l,m,y,C),r._OrtAddRunConfigEntry=(l,m,y)=>(r._OrtAddRunConfigEntry=P.da)(l,m,y),r._OrtReleaseRunOptions=l=>(r._OrtReleaseRunOptions=P.ea)(l),r._OrtCreateBinding=l=>(r._OrtCreateBinding=P.fa)(l),r._OrtBindInput=(l,m,y)=>(r._OrtBindInput=P.ga)(l,m,y),r._OrtBindOutput=(l,m,y,C)=>(r._OrtBindOutput=P.ha)(l,m,y,C),r._OrtClearBoundOutputs=l=>(r._OrtClearBoundOutputs=P.ia)(l),r._OrtReleaseBinding=l=>(r._OrtReleaseBinding=P.ja)(l),r._OrtRunWithBinding=(l,m,y,C,_)=>(r._OrtRunWithBinding=P.ka)(l,m,y,C,_),r._OrtRun=(l,m,y,C,_,G,H,le)=>(r._OrtRun=P.la)(l,m,y,C,_,G,H,le),r._OrtEndProfiling=l=>(r._OrtEndProfiling=P.ma)(l),r._JsepOutput=(l,m,y)=>(r._JsepOutput=P.na)(l,m,y),r._JsepGetNodeName=l=>(r._JsepGetNodeName=P.oa)(l);var Dt=r._malloc=l=>(Dt=r._malloc=P.pa)(l),Yt=r._free=l=>(Yt=r._free=P.qa)(l),Zt=l=>(Zt=P.sa)(l),Xt=()=>(Xt=P.ta)(),Qt=l=>(Qt=P.ua)(l),Jt=l=>(Jt=P.va)(l),er=l=>(er=P.xa)(l),tr=()=>(tr=P.ya)(),zt=l=>(zt=P.za)(l),At=()=>(At=P.Aa)();r.___start_em_js=924026,r.___stop_em_js=924187;function bt(l){l=Object.assign({},l);var m=C=>()=>C()>>>0,y=C=>_=>C(_)>>>0;return l.__errno_location=m(l.__errno_location),l.malloc=y(l.malloc),l.stackSave=m(l.stackSave),l.stackAlloc=y(l.stackAlloc),l}r.stackAlloc=Jt,r.stackSave=Xt,r.stackRestore=Qt,r.UTF8ToString=Me,r.stringToUTF8=(l,m,y)=>Gt(l,te,m,y),r.lengthBytesUTF8=kt;var Tt;He=function l(){Tt||rr(),Tt||(He=l)};function rr(){function l(){if(!Tt&&(Tt=!0,r.calledRun=!0,!z)){if(St(Se),o(r),r.onRuntimeInitialized&&r.onRuntimeInitialized(),r.postRun)for(typeof r.postRun=="function"&&(r.postRun=[r.postRun]);r.postRun.length;){var m=r.postRun.shift();Ie.unshift(m)}St(Ie)}}if(!(0<he)){if(r.preRun)for(typeof r.preRun=="function"&&(r.preRun=[r.preRun]);r.preRun.length;)Ae();St(Y),0<he||(r.setStatus?(r.setStatus("Running..."),setTimeout(function(){setTimeout(function(){r.setStatus("")},1),l()},1)):l())}}if(r.preInit)for(typeof r.preInit=="function"&&(r.preInit=[r.preInit]);0<r.preInit.length;)r.preInit.pop()();return rr(),t.ready}})();typeof ho=="object"&&typeof gn=="object"?gn.exports=fo:typeof define=="function"&&define.amd&&define([],()=>fo)});var yo=or(()=>{});var bo=or(()=>{});var wo={};kr(wo,{cpus:()=>Fu});var Fu,vo=q(()=>{Fu=void 0});var xo=or((So,yn)=>{"use strict";var $o=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){function r(){return $e.buffer!=he.buffer&&fe(),he}function o(){return $e.buffer!=he.buffer&&fe(),nt}function n(){return $e.buffer!=he.buffer&&fe(),He}function s(){return $e.buffer!=he.buffer&&fe(),Le}function u(){return $e.buffer!=he.buffer&&fe(),L}function d(){return $e.buffer!=he.buffer&&fe(),de}var a=t,p,h;a.ready=new Promise((i,c)=>{p=i,h=c}),a.jsepInit=(i,c,f,S,T,M,N,ae)=>{a.Qb=i,a.wb=c,a.yb=f,a.jb=S,a.xb=T,a.Ea=M,a.zb=N,a.Ab=ae,c=(ee,re,se)=>(...ve)=>{let Ce=it,k=re?.();ve=ee(...ve);let ce=re?.();return k!==ce&&(ee=ce,se(k),re=se=null),it!=Ce?ku():ve},f=ee=>async(...re)=>{try{if(a.bb)throw Error("Session already started");let se=a.bb={Fb:re[0],errors:[]},ve=await ee(...re);if(a.bb!==se)throw Error("Session mismatch");i.flush();let Ce=se.errors;if(0<Ce.length){let k=await Promise.all(Ce);if(k=k.filter(ce=>ce),0<k.length)throw Error(k.join(`\n`))}return ve}finally{a.bb=null}},a._OrtRun=f(c(a._OrtRun,()=>a._OrtRun,ee=>a._OrtRun=ee)),a._OrtRunWithBinding=f(c(a._OrtRunWithBinding,()=>a._OrtRunWithBinding,ee=>a._OrtRunWithBinding=ee)),a._OrtBindInput=c(a._OrtBindInput,()=>a._OrtBindInput,ee=>a._OrtBindInput=ee),a.jsepRegisterBuffer=(ee,re,se,ve)=>i.registerBuffer(ee,re,se,ve),a.jsepUnregisterBuffers=ee=>{i.unregisterBuffers(ee)},a.jsepGetBuffer=ee=>i.getBuffer(ee),a.jsepCreateDownloader=(ee,re,se)=>i.createDownloader(ee,re,se)};var $=Object.assign({},a),g="./this.program",w=(i,c)=>{throw c},b=typeof window=="object",v=typeof importScripts=="function",I=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",x=a.ENVIRONMENT_IS_PTHREAD||!1,A="";function B(i){return a.locateFile?a.locateFile(i,A):A+i}var E,V,P;if(I){var z=(mn(),Vt(pn)),U=(hn(),Vt(fn));A=v?U.dirname(A)+"/":__dirname+"/",E=(c,f)=>(c=c.startsWith("file://")?new URL(c):U.normalize(c),z.readFileSync(c,f?void 0:"utf8")),P=c=>(c=E(c,!0),c.buffer||(c=new Uint8Array(c)),c),V=(c,f,S,T=!0)=>{c=c.startsWith("file://")?new URL(c):U.normalize(c),z.readFile(c,T?void 0:"utf8",(M,N)=>{M?S(M):f(T?N.buffer:N)})},!a.thisProgram&&1<process.argv.length&&(g=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),w=(c,f)=>{throw process.exitCode=c,f},a.inspect=()=>"[Emscripten Module object]";let i;try{i=yo()}catch(c){throw console.error(\'The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?\'),c}global.Worker=i.Worker}else(b||v)&&(v?A=self.location.href:typeof document<"u"&&document.currentScript&&(A=document.currentScript.src),typeof e<"u"&&e&&(A=e),A.indexOf("blob:")!==0?A=A.substr(0,A.replace(/[?#].*/,"").lastIndexOf("/")+1):A="",I||(E=i=>{var c=new XMLHttpRequest;return c.open("GET",i,!1),c.send(null),c.responseText},v&&(P=i=>{var c=new XMLHttpRequest;return c.open("GET",i,!1),c.responseType="arraybuffer",c.send(null),new Uint8Array(c.response)}),V=(i,c,f)=>{var S=new XMLHttpRequest;S.open("GET",i,!0),S.responseType="arraybuffer",S.onload=()=>{S.status==200||S.status==0&&S.response?c(S.response):f()},S.onerror=f,S.send(null)}));I&&typeof performance>"u"&&(global.performance=bo().performance);var F=console.log.bind(console),te=console.error.bind(console);I&&(F=(...i)=>z.writeSync(1,i.join(" ")+`\n`),te=(...i)=>z.writeSync(2,i.join(" ")+`\n`));var R=a.print||F,j=a.printErr||te;Object.assign(a,$),$=null,a.thisProgram&&(g=a.thisProgram),a.quit&&(w=a.quit);var pe;a.wasmBinary&&(pe=a.wasmBinary);var Q=a.noExitRuntime||!0;typeof WebAssembly!="object"&&Qe("no native wasm support detected");var $e,Y,Se,Ie=!1,Ae,he,nt,He,Le,L,de;function fe(){var i=$e.buffer;a.HEAP8=he=new Int8Array(i),a.HEAP16=new Int16Array(i),a.HEAP32=He=new Int32Array(i),a.HEAPU8=nt=new Uint8Array(i),a.HEAPU16=new Uint16Array(i),a.HEAPU32=Le=new Uint32Array(i),a.HEAPF32=L=new Float32Array(i),a.HEAPF64=de=new Float64Array(i)}var Ue=a.INITIAL_MEMORY||16777216;if(5242880<=Ue||Qe("INITIAL_MEMORY should be larger than STACK_SIZE, was "+Ue+"! (STACK_SIZE=5242880)"),x)$e=a.wasmMemory;else if(a.wasmMemory)$e=a.wasmMemory;else if($e=new WebAssembly.Memory({initial:Ue/65536,maximum:65536,shared:!0}),!($e.buffer instanceof SharedArrayBuffer))throw j("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),I&&j("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");fe(),Ue=$e.buffer.byteLength;var Ke=[],Re=[],Ve=[],Fe=0;function ot(){return Q||0<Fe}var Ze=0,St=null,xt=null;function Nt(){Ze++,a.monitorRunDependencies&&a.monitorRunDependencies(Ze)}function fr(){if(Ze--,a.monitorRunDependencies&&a.monitorRunDependencies(Ze),Ze==0&&(St!==null&&(clearInterval(St),St=null),xt)){var i=xt;xt=null,i()}}function Qe(i){throw a.onAbort&&a.onAbort(i),i="Aborted("+i+")",j(i),Ie=!0,Ae=1,i=new WebAssembly.RuntimeError(i+". Build with -sASSERTIONS for more info."),h(i),i}function Ht(i){return i.startsWith("data:application/octet-stream;base64,")}var Me;Me="ort-wasm-simd-threaded.wasm",Ht(Me)||(Me=B(Me));function kt(i){if(i==Me&&pe)return new Uint8Array(pe);if(P)return P(i);throw"both async and sync fetching of the wasm failed"}function Gt(i){if(!pe&&(b||v)){if(typeof fetch=="function"&&!i.startsWith("file://"))return fetch(i,{credentials:"same-origin"}).then(c=>{if(!c.ok)throw"failed to load wasm binary file at \'"+i+"\'";return c.arrayBuffer()}).catch(()=>kt(i));if(V)return new Promise((c,f)=>{V(i,S=>c(new Uint8Array(S)),f)})}return Promise.resolve().then(()=>kt(i))}function mt(i,c,f){return Gt(i).then(S=>WebAssembly.instantiate(S,c)).then(S=>S).then(f,S=>{j("failed to asynchronously prepare wasm: "+S),Qe(S)})}function hr(i,c){var f=Me;return pe||typeof WebAssembly.instantiateStreaming!="function"||Ht(f)||f.startsWith("file://")||I||typeof fetch!="function"?mt(f,i,c):fetch(f,{credentials:"same-origin"}).then(S=>WebAssembly.instantiateStreaming(S,i).then(c,function(T){return j("wasm streaming compile failed: "+T),j("falling back to ArrayBuffer instantiation"),mt(f,i,c)}))}var ft,Pt={1428400:i=>{a.Ea("Abs",i,void 0)},1428451:i=>{a.Ea("Neg",i,void 0)},1428502:i=>{a.Ea("Floor",i,void 0)},1428555:i=>{a.Ea("Ceil",i,void 0)},1428607:i=>{a.Ea("Reciprocal",i,void 0)},1428665:i=>{a.Ea("Sqrt",i,void 0)},1428717:i=>{a.Ea("Exp",i,void 0)},1428768:i=>{a.Ea("Erf",i,void 0)},1428819:i=>{a.Ea("Sigmoid",i,void 0)},1428874:i=>{a.Ea("Log",i,void 0)},1428925:i=>{a.Ea("Sin",i,void 0)},1428976:i=>{a.Ea("Cos",i,void 0)},1429027:i=>{a.Ea("Tan",i,void 0)},1429078:i=>{a.Ea("Asin",i,void 0)},1429130:i=>{a.Ea("Acos",i,void 0)},1429182:i=>{a.Ea("Atan",i,void 0)},1429234:i=>{a.Ea("Sinh",i,void 0)},1429286:i=>{a.Ea("Cosh",i,void 0)},1429338:i=>{a.Ea("Asinh",i,void 0)},1429391:i=>{a.Ea("Acosh",i,void 0)},1429444:i=>{a.Ea("Atanh",i,void 0)},1429497:i=>{a.Ea("Tanh",i,void 0)},1429549:i=>{a.Ea("Not",i,void 0)},1429600:(i,c,f)=>{a.Ea("Clip",i,{min:c,max:f})},1429669:i=>{a.Ea("Clip",i,void 0)},1429721:(i,c)=>{a.Ea("Elu",i,{alpha:c})},1429779:i=>{a.Ea("Relu",i,void 0)},1429831:(i,c)=>{a.Ea("LeakyRelu",i,{alpha:c})},1429895:(i,c)=>{a.Ea("ThresholdedRelu",i,{alpha:c})},1429965:i=>{a.zb(i)},1429999:(i,c)=>a.Ab(i,c,a.bb.Fb,a.bb.errors),1430111:(i,c)=>{a.Ea("Cast",i,{to:c})},1430169:i=>{a.Ea("Add",i,void 0)},1430220:i=>{a.Ea("Sub",i,void 0)},1430271:i=>{a.Ea("Mul",i,void 0)},1430322:i=>{a.Ea("Div",i,void 0)},1430373:i=>{a.Ea("Pow",i,void 0)},1430424:i=>{a.Ea("Equal",i,void 0)},1430477:i=>{a.Ea("Greater",i,void 0)},1430532:i=>{a.Ea("GreaterOrEqual",i,void 0)},1430594:i=>{a.Ea("Less",i,void 0)},1430646:i=>{a.Ea("LessOrEqual",i,void 0)},1430705:(i,c,f,S,T)=>{a.Ea("ReduceMean",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:S?Array.from(n().subarray(T>>>0,T+S>>>0)):[]})},1430869:(i,c,f,S,T)=>{a.Ea("ReduceMax",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:S?Array.from(n().subarray(T>>>0,T+S>>>0)):[]})},1431032:(i,c,f,S,T)=>{a.Ea("ReduceMin",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:S?Array.from(n().subarray(T>>>0,T+S>>>0)):[]})},1431195:(i,c,f,S,T)=>{a.Ea("ReduceProd",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:S?Array.from(n().subarray(T>>>0,T+S>>>0)):[]})},1431359:(i,c,f,S,T)=>{a.Ea("ReduceSum",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:S?Array.from(n().subarray(T>>>0,T+S>>>0)):[]})},1431522:(i,c,f,S,T)=>{a.Ea("ReduceL1",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:S?Array.from(n().subarray(T>>>0,T+S>>>0)):[]})},1431684:(i,c,f,S,T)=>{a.Ea("ReduceL2",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:S?Array.from(n().subarray(T>>>0,T+S>>>0)):[]})},1431846:(i,c,f,S,T)=>{a.Ea("ReduceLogSum",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:S?Array.from(n().subarray(T>>>0,T+S>>>0)):[]})},1432012:(i,c,f,S,T)=>{a.Ea("ReduceSumSquare",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:S?Array.from(n().subarray(T>>>0,T+S>>>0)):[]})},1432181:(i,c,f,S,T)=>{a.Ea("ReduceLogSumExp",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:S?Array.from(n().subarray(T>>>0,T+S>>>0)):[]})},1432350:i=>{a.Ea("Where",i,void 0)},1432403:(i,c,f)=>{a.Ea("Transpose",i,{perm:c?Array.from(n().subarray(f>>>0,f+c>>>0)):[]})},1432516:(i,c,f,S,T,M,N,ae,ee,re,se,ve,Ce)=>{a.Ea("Conv",i,{format:ee?"NHWC":"NCHW",auto_pad:c,dilations:[f],group:S,kernel_shape:[T],pads:M?Array.from(n().subarray(N>>>0,N+M>>>0)):[],strides:[ae],w_is_const:()=>!!r()[re>>>0],activation:Ne(se),activation_params:ve?Array.from(u().subarray(Ce>>>0,Ce+ve>>>0)):[]})},1432897:(i,c,f,S,T,M,N,ae,ee,re,se,ve,Ce,k,ce,xe)=>{a.Ea("Conv",i,{format:ve?"NHWC":"NCHW",auto_pad:c,dilations:[f,S],group:T,kernel_shape:[M,N],pads:ae?Array.from(n().subarray(ee>>>0,ee+ae>>>0)):[],strides:[re,se],w_is_const:()=>!!r()[Ce>>>0],activation:Ne(k),activation_params:ce?Array.from(u().subarray(xe>>>0,xe+ce>>>0)):[]})},1433299:(i,c,f,S,T,M,N,ae,ee,re,se,ve,Ce,k,ce)=>{a.Ea("ConvTranspose",i,{format:ee?"NHWC":"NCHW",autoPad:c,dilations:[f],group:S,kernel_shape:[T],pads:[M,N],strides:[ae],wIsConst:()=>!!r()[re>>>0],outputPadding:se?Array.from(n().subarray(ve>>>0,ve+se>>>0)):[],outputShape:Ce?Array.from(n().subarray(k>>>0,k+Ce>>>0)):[],activation:Ne(ce)})},1433713:(i,c,f,S,T,M,N,ae,ee,re,se,ve,Ce,k)=>{a.Ea("ConvTranspose",i,{format:ae?"NHWC":"NCHW",autoPad:c,dilations:Array.from(n().subarray(f>>>0,f+2>>>0)),group:S,kernelShape:Array.from(n().subarray(T>>>0,T+2>>>0)),pads:Array.from(n().subarray(M>>>0,M+4>>>0)),strides:Array.from(n().subarray(N>>>0,N+2>>>0)),wIsConst:()=>!!r()[ee>>>0],outputPadding:0<re?Array.from(n().subarray(se>>>0,se+re>>>0)):[],outputShape:0<ve?Array.from(n().subarray(Ce>>>0,Ce+ve>>>0)):[],activation:Ne(k)})},1434270:(i,c,f,S,T,M,N,ae,ee,re,se,ve,Ce,k,ce)=>{a.Ea("ConvTranspose",i,{format:ee?"NHWC":"NCHW",autoPad:c,dilations:[f],group:S,kernel_shape:[T],pads:[M,N],strides:[ae],wIsConst:()=>!!r()[re>>>0],outputPadding:se?Array.from(n().subarray(ve>>>0,ve+se>>>0)):[],outputShape:Ce?Array.from(n().subarray(k>>>0,k+Ce>>>0)):[],activation:Ne(ce)})},1434684:(i,c,f,S,T,M,N,ae,ee,re,se,ve,Ce,k)=>{a.Ea("ConvTranspose",i,{format:ae?"NHWC":"NCHW",autoPad:c,dilations:Array.from(n().subarray(f>>>0,f+2>>>0)),group:S,kernelShape:Array.from(n().subarray(T>>>0,T+2>>>0)),pads:Array.from(n().subarray(M>>>0,M+4>>>0)),strides:Array.from(n().subarray(N>>>0,N+2>>>0)),wIsConst:()=>!!r()[ee>>>0],outputPadding:0<re?Array.from(n().subarray(se>>>0,se+re>>>0)):[],outputShape:0<ve?Array.from(n().subarray(Ce>>>0,Ce+ve>>>0)):[],activation:Ne(k)})},1435241:(i,c)=>{a.Ea("GlobalAveragePool",i,{format:c?"NHWC":"NCHW"})},1435332:(i,c,f,S,T,M,N,ae,ee,re,se,ve,Ce,k,ce,xe)=>{a.Ea("AveragePool",i,{format:xe?"NHWC":"NCHW",auto_pad:c,ceil_mode:f,count_include_pad:S,storage_order:T,dilations:[M,N],kernel_shape:[ae,ee],pads:[re,se,ve,Ce],strides:[k,ce]})},1435616:(i,c)=>{a.Ea("GlobalAveragePool",i,{format:c?"NHWC":"NCHW"})},1435707:(i,c,f,S,T,M,N,ae,ee,re,se,ve,Ce,k,ce,xe)=>{a.Ea("AveragePool",i,{format:xe?"NHWC":"NCHW",auto_pad:c,ceil_mode:f,count_include_pad:S,storage_order:T,dilations:[M,N],kernel_shape:[ae,ee],pads:[re,se,ve,Ce],strides:[k,ce]})},1435991:(i,c)=>{a.Ea("GlobalMaxPool",i,{format:c?"NHWC":"NCHW"})},1436078:(i,c,f,S,T,M,N,ae,ee,re,se,ve,Ce,k,ce,xe)=>{a.Ea("MaxPool",i,{format:xe?"NHWC":"NCHW",auto_pad:c,ceil_mode:f,count_include_pad:S,storage_order:T,dilations:[M,N],kernel_shape:[ae,ee],pads:[re,se,ve,Ce],strides:[k,ce]})},1436358:(i,c)=>{a.Ea("GlobalMaxPool",i,{format:c?"NHWC":"NCHW"})},1436445:(i,c,f,S,T,M,N,ae,ee,re,se,ve,Ce,k,ce,xe)=>{a.Ea("MaxPool",i,{format:xe?"NHWC":"NCHW",auto_pad:c,ceil_mode:f,count_include_pad:S,storage_order:T,dilations:[M,N],kernel_shape:[ae,ee],pads:[re,se,ve,Ce],strides:[k,ce]})},1436725:(i,c,f,S,T)=>{a.Ea("Gemm",i,{alpha:c,beta:f,transA:S,transB:T})},1436829:i=>{a.Ea("MatMul",i,void 0)},1436883:(i,c,f,S)=>{a.Ea("ArgMax",i,{keepDims:!!c,selectLastIndex:!!f,axis:S})},1436991:(i,c,f,S)=>{a.Ea("ArgMin",i,{keepDims:!!c,selectLastIndex:!!f,axis:S})},1437099:(i,c)=>{a.Ea("Softmax",i,{axis:c})},1437162:(i,c)=>{a.Ea("Concat",i,{axis:c})},1437222:(i,c,f,S,T)=>{a.Ea("Split",i,{axis:c,numOutputs:f,splitSizes:S?Array.from(n().subarray(T>>>0,T+S>>>0)):[]})},1437367:i=>{a.Ea("Expand",i,void 0)},1437421:(i,c)=>{a.Ea("Gather",i,{axis:Number(c)})},1437492:(i,c)=>{a.Ea("GatherElements",i,{axis:Number(c)})},1437571:(i,c,f,S,T,M,N,ae,ee,re,se)=>{a.Ea("Resize",i,{antialias:c,axes:f?Array.from(n().subarray(S>>>0,S+f>>>0)):[],coordinateTransformMode:Ne(T),cubicCoeffA:M,excludeOutside:N,extrapolationValue:ae,keepAspectRatioPolicy:Ne(ee),mode:Ne(re),nearestMode:Ne(se)})},1437922:(i,c,f,S,T,M,N)=>{a.Ea("Slice",i,{starts:c?Array.from(n().subarray(f>>>0,f+c>>>0)):[],ends:S?Array.from(n().subarray(T>>>0,T+S>>>0)):[],axes:M?Array.from(n().subarray(N>>>0,N+M>>>0)):[]})},1438153:i=>{a.Ea("Tile",i,void 0)},1438205:(i,c,f)=>{a.Ea("LayerNormalization",i,{axis:Number(c),epsilon:Number(f)})},1438312:(i,c,f)=>{a.Ea("InstanceNormalization",i,{epsilon:c,format:f?"NHWC":"NCHW"})},1438426:(i,c,f)=>{a.Ea("InstanceNormalization",i,{epsilon:c,format:f?"NHWC":"NCHW"})},1438540:i=>{a.Ea("Range",i,void 0)},1438593:(i,c)=>{a.Ea("Einsum",i,{equation:Ne(c)})},1438674:(i,c,f,S,T)=>{a.Ea("Pad",i,{mode:c,value:f,pads:S?Array.from(n().subarray(T>>>0,T+S>>>0)):[]})},1438806:(i,c,f,S,T,M)=>{a.Ea("BatchNormalization",i,{epsilon:c,momentum:f,spatial:!!T,trainingMode:!!S,format:M?"NHWC":"NCHW"})},1438975:(i,c,f,S,T,M)=>{a.Ea("BatchNormalization",i,{epsilon:c,momentum:f,spatial:!!T,trainingMode:!!S,format:M?"NHWC":"NCHW"})},1439144:(i,c,f)=>{a.Ea("CumSum",i,{exclusive:Number(c),reverse:Number(f)})},1439241:(i,c,f,S,T,M,N,ae,ee)=>{a.Ea("Attention",i,{numHeads:c,isUnidirectional:f,maskFilterValue:S,scale:T,doRotary:M,qkvHiddenSizes:N?Array.from(n().subarray(Number(ae)>>>0,Number(ae)+N>>>0)):[],pastPresentShareBuffer:!!ee})},1439513:i=>{a.Ea("Gelu",i,void 0)},1439565:(i,c,f,S,T,M)=>{a.Ea("MultiHeadAttention",i,{numHeads:c,isUnidirectional:f,maskFilterValue:S,scale:T,doRotary:M})},1439724:i=>{a.Ea("BiasAdd",i,void 0)},1439779:i=>{a.Ea("BiasSplitGelu",i,void 0)},1439840:(i,c)=>{a.Ea("SkipLayerNormalization",i,{epsilon:c})},1439921:i=>a.wb(i),1439954:i=>a.yb(i),1439986:(i,c,f)=>{a.jb(i,c,f,!0)},1440025:(i,c,f)=>{a.jb(i,c,f)}};function yt(i){this.name="ExitStatus",this.message=`Program terminated with exit(${i})`,this.status=i}function Rt(i){i.terminate(),i.onmessage=()=>{}}function Bt(i){(i=ue.Qa[i])||Qe(),ue.Eb(i)}function Lt(i){var c=ue.tb();if(!c)return 6;ue.Ya.push(c),ue.Qa[i.Xa]=c,c.Xa=i.Xa;var f={cmd:"run",start_routine:i.Gb,arg:i.rb,pthread_ptr:i.Xa};return I&&c.unref(),c.postMessage(f,i.Mb),0}var Mt=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,gr=(i,c,f)=>{c>>>=0;var S=c+f;for(f=c;i[f]&&!(f>=S);)++f;if(16<f-c&&i.buffer&&Mt)return Mt.decode(i.buffer instanceof SharedArrayBuffer?i.slice(c,f):i.subarray(c,f));for(S="";c<f;){var T=i[c++];if(T&128){var M=i[c++]&63;if((T&224)==192)S+=String.fromCharCode((T&31)<<6|M);else{var N=i[c++]&63;T=(T&240)==224?(T&15)<<12|M<<6|N:(T&7)<<18|M<<12|N<<6|i[c++]&63,65536>T?S+=String.fromCharCode(T):(T-=65536,S+=String.fromCharCode(55296|T>>10,56320|T&1023))}}else S+=String.fromCharCode(T)}return S},Ne=(i,c)=>(i>>>=0)?gr(o(),i,c):"";function Ft(i){if(x)return H(1,1,i);Ae=i,ot()||(ue.Hb(),a.onExit&&a.onExit(i),Ie=!0),w(i,new yt(i))}var jt=i=>{if(Ae=i,x)throw yr(i),"unwind";Ft(i)},ue={ab:[],Ya:[],mb:[],Qa:{},gb:function(){x?ue.vb():ue.ub()},ub:function(){Ke.unshift(()=>{Nt(),ue.Bb(()=>fr())})},vb:function(){ue.receiveObjectTransfer=ue.Db,ue.threadInitTLS=ue.lb,ue.setExitStatus=ue.kb,Q=!1},kb:function(i){Ae=i},Sb:["$terminateWorker"],Hb:function(){for(var i of ue.Ya)Rt(i);for(i of ue.ab)Rt(i);ue.ab=[],ue.Ya=[],ue.Qa=[]},Eb:function(i){var c=i.Xa;delete ue.Qa[c],ue.ab.push(i),ue.Ya.splice(ue.Ya.indexOf(i),1),i.Xa=0,sn(c)},Db:function(){},lb:function(){ue.mb.forEach(i=>i())},Cb:i=>new Promise(c=>{i.onmessage=M=>{M=M.data;var N=M.cmd;if(M.targetThread&&M.targetThread!=_r()){var ae=ue.Qa[M.Rb];ae?ae.postMessage(M,M.transferList):j(\'Internal error! Worker sent a message "\'+N+\'" to target pthread \'+M.targetThread+", but that thread no longer exists!")}else N==="checkMailbox"?At():N==="spawnThread"?Lt(M):N==="cleanupThread"?Bt(M.thread):N==="killThread"?(M=M.thread,N=ue.Qa[M],delete ue.Qa[M],Rt(N),sn(M),ue.Ya.splice(ue.Ya.indexOf(N),1),N.Xa=0):N==="cancelThread"?ue.Qa[M.thread].postMessage({cmd:"cancel"}):N==="loaded"?(i.loaded=!0,c(i)):N==="alert"?alert("Thread "+M.threadId+": "+M.text):M.target==="setimmediate"?i.postMessage(M):N==="callHandler"?a[M.handler](...M.args):N&&j("worker sent an unknown command "+N)},i.onerror=M=>{throw j("worker sent an error! "+M.filename+":"+M.lineno+": "+M.message),M},I&&(i.on("message",function(M){i.onmessage({data:M})}),i.on("error",function(M){i.onerror(M)}));var f=[],S=["onExit","onAbort","print","printErr"],T;for(T of S)a.hasOwnProperty(T)&&f.push(T);i.postMessage({cmd:"load",handlers:f,urlOrBlob:a.mainScriptUrlOrBlob||e,wasmMemory:$e,wasmModule:Se})}),Bb:function(i){i()},qb:function(){var i=B("ort-wasm-simd-threaded.worker.js");i=new Worker(i),ue.ab.push(i)},tb:function(){return ue.ab.length==0&&(ue.qb(),ue.Cb(ue.ab[0])),ue.ab.pop()}};a.PThread=ue;var ht=i=>{for(;0<i.length;)i.shift()(a)};a.establishStackSpace=function(){var i=_r(),c=n()[i+52>>2>>>0];i=n()[i+56>>2>>>0],ao(c,c-i),Er(c)};function yr(i){if(x)return H(2,0,i);jt(i)}a.invokeEntryPoint=function(i,c){i=io.apply(null,[i,c]),ot()?ue.kb(i):un(i)};function at(i){this.fb=i-24,this.pb=function(c){s()[this.fb+4>>2>>>0]=c},this.ob=function(c){s()[this.fb+8>>2>>>0]=c},this.gb=function(c,f){this.nb(),this.pb(c),this.ob(f)},this.nb=function(){s()[this.fb+16>>2>>>0]=0}}var Xe=0,br=0;function Ct(i,c,f,S){return x?H(3,1,i,c,f,S):qt(i,c,f,S)}function qt(i,c,f,S){if(i>>>=0,c>>>=0,f>>>=0,S>>>=0,typeof SharedArrayBuffer>"u")return j("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var T=[];return x&&T.length===0?Ct(i,c,f,S):(i={Gb:f,Xa:i,rb:S,Mb:T},x?(i.Ob="spawnThread",postMessage(i,T),0):Lt(i))}function Kt(i,c,f){return x?H(4,1,i,c,f):0}function wr(i,c){if(x)return H(5,1,i,c)}var It=i=>{for(var c=0,f=0;f<i.length;++f){var S=i.charCodeAt(f);127>=S?c++:2047>=S?c+=2:55296<=S&&57343>=S?(c+=4,++f):c+=3}return c},vr=(i,c,f,S)=>{if(f>>>=0,!(0<S))return 0;var T=f;S=f+S-1;for(var M=0;M<i.length;++M){var N=i.charCodeAt(M);if(55296<=N&&57343>=N){var ae=i.charCodeAt(++M);N=65536+((N&1023)<<10)|ae&1023}if(127>=N){if(f>=S)break;c[f++>>>0]=N}else{if(2047>=N){if(f+1>=S)break;c[f++>>>0]=192|N>>6}else{if(65535>=N){if(f+2>=S)break;c[f++>>>0]=224|N>>12}else{if(f+3>=S)break;c[f++>>>0]=240|N>>18,c[f++>>>0]=128|N>>12&63}c[f++>>>0]=128|N>>6&63}c[f++>>>0]=128|N&63}}return c[f>>>0]=0,f-T},$r=(i,c,f)=>vr(i,o(),c,f);function Sr(i,c){if(x)return H(6,1,i,c)}function xr(i,c,f){if(x)return H(7,1,i,c,f)}function Cr(i,c,f){return x?H(8,1,i,c,f):0}function Ir(i,c){if(x)return H(9,1,i,c)}function Dt(i,c,f){if(x)return H(10,1,i,c,f)}function Yt(i,c,f,S){if(x)return H(11,1,i,c,f,S)}function Zt(i,c,f,S){if(x)return H(12,1,i,c,f,S)}function Xt(i,c,f,S){if(x)return H(13,1,i,c,f,S)}function Qt(i){if(x)return H(14,1,i)}function Jt(i,c){if(x)return H(15,1,i,c)}function er(i,c,f){if(x)return H(16,1,i,c,f)}var tr=i=>{if(!Ie)try{if(i(),!ot())try{x?un(Ae):jt(Ae)}catch(c){c instanceof yt||c=="unwind"||w(1,c)}}catch(c){c instanceof yt||c=="unwind"||w(1,c)}};function zt(i){i>>>=0,typeof Atomics.Nb=="function"&&(Atomics.Nb(n(),i>>2,i).value.then(At),i+=128,Atomics.store(n(),i>>2,1))}a.__emscripten_thread_mailbox_await=zt;function At(){var i=_r();i&&(zt(i),tr(()=>no()))}a.checkMailbox=At;var bt=i=>i%4===0&&(i%100!==0||i%400===0),Tt=[0,31,60,91,121,152,182,213,244,274,305,335],rr=[0,31,59,90,120,151,181,212,243,273,304,334];function l(i,c,f,S,T,M,N,ae){return x?H(17,1,i,c,f,S,T,M,N,ae):-52}function m(i,c,f,S,T,M,N){if(x)return H(18,1,i,c,f,S,T,M,N)}var y=i=>{var c=It(i)+1,f=an(c);return f&&$r(i,f,c),f},C=[],_=(i,c)=>{C.length=0;var f;for(c>>=2;f=o()[i++>>>0];)c+=f!=105&c,C.push(f==105?n()[c>>>0]:d()[c++>>>1]),++c;return C},G=i=>{var c=ln();return i=i(),Er(c),i};function H(i,c){var f=arguments.length-2,S=arguments;return G(()=>{for(var T=dn(8*f),M=T>>3,N=0;N<f;N++){var ae=S[2+N];d()[M+N>>>0]=ae}return ro(i,f,T,c)})}var le=[],Z={},oe=()=>{if(!J){var i={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:g||"./this.program"},c;for(c in Z)Z[c]===void 0?delete i[c]:i[c]=Z[c];var f=[];for(c in i)f.push(`${c}=${i[c]}`);J=f}return J},J;function me(i,c){if(x)return H(19,1,i,c);i>>>=0,c>>>=0;var f=0;return oe().forEach(function(S,T){var M=c+f;for(T=s()[i+4*T>>2>>>0]=M,M=0;M<S.length;++M)r()[T++>>0>>>0]=S.charCodeAt(M);r()[T>>0>>>0]=0,f+=S.length+1}),0}function we(i,c){if(x)return H(20,1,i,c);i>>>=0,c>>>=0;var f=oe();s()[i>>2>>>0]=f.length;var S=0;return f.forEach(function(T){S+=T.length+1}),s()[c>>2>>>0]=S,0}function O(i){return x?H(21,1,i):52}function ie(i,c,f,S){return x?H(22,1,i,c,f,S):52}function ge(i,c,f,S,T){return x?H(23,1,i,c,f,S,T):70}var gt=[null,[],[]];function nr(i,c,f,S){if(x)return H(24,1,i,c,f,S);c>>>=0,f>>>=0,S>>>=0;for(var T=0,M=0;M<f;M++){var N=s()[c>>2>>>0],ae=s()[c+4>>2>>>0];c+=8;for(var ee=0;ee<ae;ee++){var re=o()[N+ee>>>0],se=gt[i];re===0||re===10?((i===1?R:j)(gr(se,0)),se.length=0):se.push(re)}T+=ae}return s()[S>>2>>>0]=T,0}var Kn=[31,29,31,30,31,30,31,31,30,31,30,31],Yn=[31,28,31,30,31,30,31,31,30,31,30,31];function Au(i){var c=Array(It(i)+1);return vr(i,c,0,c.length),c}var Tu=(i,c)=>{r().set(i,c>>>0)};function Zn(i,c,f,S){function T(k,ce,xe){for(k=typeof k=="number"?k.toString():k||"";k.length<ce;)k=xe[0]+k;return k}function M(k,ce){return T(k,ce,"0")}function N(k,ce){function xe(mo){return 0>mo?-1:0<mo?1:0}var _t;return(_t=xe(k.getFullYear()-ce.getFullYear()))===0&&(_t=xe(k.getMonth()-ce.getMonth()))===0&&(_t=xe(k.getDate()-ce.getDate())),_t}function ae(k){switch(k.getDay()){case 0:return new Date(k.getFullYear()-1,11,29);case 1:return k;case 2:return new Date(k.getFullYear(),0,3);case 3:return new Date(k.getFullYear(),0,2);case 4:return new Date(k.getFullYear(),0,1);case 5:return new Date(k.getFullYear()-1,11,31);case 6:return new Date(k.getFullYear()-1,11,30)}}function ee(k){var ce=k.Za;for(k=new Date(new Date(k.$a+1900,0,1).getTime());0<ce;){var xe=k.getMonth(),_t=(bt(k.getFullYear())?Kn:Yn)[xe];if(ce>_t-k.getDate())ce-=_t-k.getDate()+1,k.setDate(1),11>xe?k.setMonth(xe+1):(k.setMonth(0),k.setFullYear(k.getFullYear()+1));else{k.setDate(k.getDate()+ce);break}}return xe=new Date(k.getFullYear()+1,0,4),ce=ae(new Date(k.getFullYear(),0,4)),xe=ae(xe),0>=N(ce,k)?0>=N(xe,k)?k.getFullYear()+1:k.getFullYear():k.getFullYear()-1}i>>>=0,c>>>=0,f>>>=0,S>>>=0;var re=n()[S+40>>2>>>0];S={Kb:n()[S>>2>>>0],Jb:n()[S+4>>2>>>0],cb:n()[S+8>>2>>>0],ib:n()[S+12>>2>>>0],eb:n()[S+16>>2>>>0],$a:n()[S+20>>2>>>0],Wa:n()[S+24>>2>>>0],Za:n()[S+28>>2>>>0],Tb:n()[S+32>>2>>>0],Ib:n()[S+36>>2>>>0],Lb:re?Ne(re):""},f=Ne(f),re={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var se in re)f=f.replace(new RegExp(se,"g"),re[se]);var ve="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Ce="January February March April May June July August September October November December".split(" ");re={"%a":k=>ve[k.Wa].substring(0,3),"%A":k=>ve[k.Wa],"%b":k=>Ce[k.eb].substring(0,3),"%B":k=>Ce[k.eb],"%C":k=>M((k.$a+1900)/100|0,2),"%d":k=>M(k.ib,2),"%e":k=>T(k.ib,2," "),"%g":k=>ee(k).toString().substring(2),"%G":k=>ee(k),"%H":k=>M(k.cb,2),"%I":k=>(k=k.cb,k==0?k=12:12<k&&(k-=12),M(k,2)),"%j":k=>{for(var ce=0,xe=0;xe<=k.eb-1;ce+=(bt(k.$a+1900)?Kn:Yn)[xe++]);return M(k.ib+ce,3)},"%m":k=>M(k.eb+1,2),"%M":k=>M(k.Jb,2),"%n":()=>`\n`,"%p":k=>0<=k.cb&&12>k.cb?"AM":"PM","%S":k=>M(k.Kb,2),"%t":()=>"	","%u":k=>k.Wa||7,"%U":k=>M(Math.floor((k.Za+7-k.Wa)/7),2),"%V":k=>{var ce=Math.floor((k.Za+7-(k.Wa+6)%7)/7);if(2>=(k.Wa+371-k.Za-2)%7&&ce++,ce)ce==53&&(xe=(k.Wa+371-k.Za)%7,xe==4||xe==3&&bt(k.$a)||(ce=1));else{ce=52;var xe=(k.Wa+7-k.Za-1)%7;(xe==4||xe==5&&bt(k.$a%400-1))&&ce++}return M(ce,2)},"%w":k=>k.Wa,"%W":k=>M(Math.floor((k.Za+7-(k.Wa+6)%7)/7),2),"%y":k=>(k.$a+1900).toString().substring(2),"%Y":k=>k.$a+1900,"%z":k=>{k=k.Ib;var ce=0<=k;return k=Math.abs(k)/60,(ce?"+":"-")+("0000"+(k/60*100+k%60)).slice(-4)},"%Z":k=>k.Lb,"%%":()=>"%"},f=f.replace(/%%/g,"\\0\\0");for(se in re)f.includes(se)&&(f=f.replace(new RegExp(se,"g"),re[se](S)));return f=f.replace(/\\0\\0/g,"%"),se=Au(f),se.length>c?0:(Tu(se,i),se.length-1)}function Ar(i){try{i()}catch(c){Qe(c)}}function _u(i){var c={},f;for(f in i)(function(S){var T=i[S];c[S]=typeof T=="function"?function(){Tr.push(S);try{return T.apply(null,arguments)}finally{Ie||(Tr.pop()===S||Qe(),it&&wt===1&&Tr.length===0&&(wt=0,Fe+=1,Ar(uo),typeof Fibers<"u"&&Fibers.Ub()))}}:T})(f);return c}var wt=0,it=null,Xn=0,Tr=[],Qn={},Jn={},Eu=0,on=null,Ou=[];function ku(){return new Promise((i,c)=>{on={resolve:i,reject:c}})}function Pu(){var i=an(65548),c=i+12;s()[i>>2>>>0]=c,s()[i+4>>2>>>0]=c+65536,c=Tr[0];var f=Qn[c];return f===void 0&&(f=Eu++,Qn[c]=f,Jn[f]=c),c=f,n()[i+8>>2>>>0]=c,i}function Ru(){var i=n()[it+8>>2>>>0];return i=Y[Jn[i]],--Fe,i()}function Bu(i){if(!Ie){if(wt===0){var c=!1,f=!1;i((S=0)=>{if(!Ie&&(Xn=S,c=!0,f)){wt=2,Ar(()=>lo(it)),typeof Browser<"u"&&Browser.hb.sb&&Browser.hb.resume(),S=!1;try{var T=Ru()}catch(ae){T=ae,S=!0}var M=!1;if(!it){var N=on;N&&(on=null,(S?N.reject:N.resolve)(T),M=!0)}if(S&&!M)throw T}}),f=!0,c||(wt=1,it=Pu(),typeof Browser<"u"&&Browser.hb.sb&&Browser.hb.pause(),Ar(()=>so(it)))}else wt===2?(wt=0,Ar(co),eo(it),it=null,Ou.forEach(S=>tr(S))):Qe(`invalid state: ${wt}`);return Xn}}function Mu(i){return Bu(c=>{i().then(c)})}ue.gb();var Du=[null,Ft,yr,Ct,Kt,wr,Sr,xr,Cr,Ir,Dt,Yt,Zt,Xt,Qt,Jt,er,l,m,me,we,O,ie,ge,nr],zu={r:function(i,c,f){return Mu(async()=>{await a.xb(i,c,f)})},b:function(i,c,f){throw i>>>=0,new at(i).gb(c>>>0,f>>>0),Xe=i,br++,Xe},P:function(i){to(i>>>0,!v,1,!b,131072,!1),ue.lb()},n:function(i){i>>>=0,x?postMessage({cmd:"cleanupThread",thread:i}):Bt(i)},K:qt,g:Kt,V:wr,F:Sr,H:xr,y:Cr,T:Ir,L:Dt,S:Yt,p:Zt,G:Xt,D:Qt,U:Jt,E:er,q:()=>!0,B:function(i,c){i>>>=0,i==c>>>0?setTimeout(()=>At()):x?postMessage({targetThread:i,cmd:"checkMailbox"}):(i=ue.Qa[i])&&i.postMessage({cmd:"checkMailbox"})},N:function(){return-1},O:zt,X:function(i){I&&ue.Qa[i>>>0].ref()},u:function(i,c,f){i=c+2097152>>>0<4194305-!!i?(i>>>0)+4294967296*c:NaN,f>>>=0,i=new Date(1e3*i),n()[f>>2>>>0]=i.getUTCSeconds(),n()[f+4>>2>>>0]=i.getUTCMinutes(),n()[f+8>>2>>>0]=i.getUTCHours(),n()[f+12>>2>>>0]=i.getUTCDate(),n()[f+16>>2>>>0]=i.getUTCMonth(),n()[f+20>>2>>>0]=i.getUTCFullYear()-1900,n()[f+24>>2>>>0]=i.getUTCDay(),i=(i.getTime()-Date.UTC(i.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,n()[f+28>>2>>>0]=i},v:function(i,c,f){i=c+2097152>>>0<4194305-!!i?(i>>>0)+4294967296*c:NaN,f>>>=0,i=new Date(1e3*i),n()[f>>2>>>0]=i.getSeconds(),n()[f+4>>2>>>0]=i.getMinutes(),n()[f+8>>2>>>0]=i.getHours(),n()[f+12>>2>>>0]=i.getDate(),n()[f+16>>2>>>0]=i.getMonth(),n()[f+20>>2>>>0]=i.getFullYear()-1900,n()[f+24>>2>>>0]=i.getDay(),c=(bt(i.getFullYear())?Tt:rr)[i.getMonth()]+i.getDate()-1|0,n()[f+28>>2>>>0]=c,n()[f+36>>2>>>0]=-(60*i.getTimezoneOffset()),c=new Date(i.getFullYear(),6,1).getTimezoneOffset();var S=new Date(i.getFullYear(),0,1).getTimezoneOffset();i=(c!=S&&i.getTimezoneOffset()==Math.min(S,c))|0,n()[f+32>>2>>>0]=i},w:function(i){i>>>=0;var c=new Date(n()[i+20>>2>>>0]+1900,n()[i+16>>2>>>0],n()[i+12>>2>>>0],n()[i+8>>2>>>0],n()[i+4>>2>>>0],n()[i>>2>>>0],0),f=n()[i+32>>2>>>0],S=c.getTimezoneOffset(),T=new Date(c.getFullYear(),6,1).getTimezoneOffset(),M=new Date(c.getFullYear(),0,1).getTimezoneOffset(),N=Math.min(M,T);return 0>f?n()[i+32>>2>>>0]=+(T!=M&&N==S):0<f!=(N==S)&&(T=Math.max(M,T),c.setTime(c.getTime()+6e4*((0<f?N:T)-S))),n()[i+24>>2>>>0]=c.getDay(),f=(bt(c.getFullYear())?Tt:rr)[c.getMonth()]+c.getDate()-1|0,n()[i+28>>2>>>0]=f,n()[i>>2>>>0]=c.getSeconds(),n()[i+4>>2>>>0]=c.getMinutes(),n()[i+8>>2>>>0]=c.getHours(),n()[i+12>>2>>>0]=c.getDate(),n()[i+16>>2>>>0]=c.getMonth(),n()[i+20>>2>>>0]=c.getYear(),i=c.getTime()/1e3,oo((ft=i,1<=+Math.abs(ft)?0<ft?+Math.floor(ft/4294967296)>>>0:~~+Math.ceil((ft-+(~~ft>>>0))/4294967296)>>>0:0)),i>>>0},s:l,t:m,A:function(i,c,f){function S(re){return(re=re.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?re[1]:"GMT"}i>>>=0,c>>>=0,f>>>=0;var T=new Date().getFullYear(),M=new Date(T,0,1),N=new Date(T,6,1);T=M.getTimezoneOffset();var ae=N.getTimezoneOffset(),ee=Math.max(T,ae);s()[i>>2>>>0]=60*ee,n()[c>>2>>>0]=+(T!=ae),i=S(M),c=S(N),i=y(i),c=y(c),ae<T?(s()[f>>2>>>0]=i,s()[f+4>>2>>>0]=c):(s()[f>>2>>>0]=c,s()[f+4>>2>>>0]=i)},e:()=>{Qe("")},c:function(i,c,f){return i>>>=0,c=_(c>>>0,f>>>0),Pt[i].apply(null,c)},l:function(i,c,f){return i>>>=0,c=_(c>>>0,f>>>0),Pt[i].apply(null,c)},o:function(){},k:function(){return Date.now()},W:()=>{throw Fe+=1,"unwind"},C:function(){return 4294901760},d:()=>performance.timeOrigin+performance.now(),i:function(){return I?(vo(),Vt(wo)).cpus().length:navigator.hardwareConcurrency},M:function(i,c,f,S){for(ue.Pb=c>>>0,le.length=f,c=S>>>0>>3,S=0;S<f;S++)le[S]=d()[c+S>>>0];return(0>i?Pt[-i-1]:Du[i]).apply(null,le)},z:function(i){i>>>=0;var c=o().length;if(i<=c||4294901760<i)return!1;for(var f=1;4>=f;f*=2){var S=c*(1+.2/f);S=Math.min(S,i+100663296);var T=Math;S=Math.max(i,S);e:{T=T.min.call(T,4294901760,S+(65536-S%65536)%65536)-$e.buffer.byteLength+65535>>>16;try{$e.grow(T),fe();var M=1;break e}catch{}M=void 0}if(M)return!0}return!1},Q:me,R:we,J:jt,h:O,m:ie,x:ge,j:nr,a:$e||a.wasmMemory,I:Zn,f:function(i,c,f,S){return Zn(i>>>0,c>>>0,f>>>0,S>>>0)}};(function(){function i(f,S){return f=f.exports,f=_u(f),Y=f=Vu(f),ue.mb.push(Y.Da),Re.unshift(Y.Y),Se=S,fr(),f}var c={a:zu};if(Nt(),a.instantiateWasm)try{return a.instantiateWasm(c,i)}catch(f){j("Module.instantiateWasm callback failed with error: "+f),h(f)}return hr(c,function(f){i(f.instance,f.module)}).catch(h),{}})(),a._OrtInit=(i,c)=>(a._OrtInit=Y.Z)(i,c),a._OrtGetLastError=(i,c)=>(a._OrtGetLastError=Y._)(i,c),a._OrtCreateSessionOptions=(i,c,f,S,T,M,N,ae,ee,re)=>(a._OrtCreateSessionOptions=Y.$)(i,c,f,S,T,M,N,ae,ee,re),a._OrtAppendExecutionProvider=(i,c)=>(a._OrtAppendExecutionProvider=Y.aa)(i,c),a._OrtAddFreeDimensionOverride=(i,c,f)=>(a._OrtAddFreeDimensionOverride=Y.ba)(i,c,f),a._OrtAddSessionConfigEntry=(i,c,f)=>(a._OrtAddSessionConfigEntry=Y.ca)(i,c,f),a._OrtReleaseSessionOptions=i=>(a._OrtReleaseSessionOptions=Y.da)(i),a._OrtCreateSession=(i,c,f)=>(a._OrtCreateSession=Y.ea)(i,c,f),a._OrtReleaseSession=i=>(a._OrtReleaseSession=Y.fa)(i),a._OrtGetInputOutputCount=(i,c,f)=>(a._OrtGetInputOutputCount=Y.ga)(i,c,f),a._OrtGetInputName=(i,c)=>(a._OrtGetInputName=Y.ha)(i,c),a._OrtGetOutputName=(i,c)=>(a._OrtGetOutputName=Y.ia)(i,c),a._OrtFree=i=>(a._OrtFree=Y.ja)(i),a._OrtCreateTensor=(i,c,f,S,T,M)=>(a._OrtCreateTensor=Y.ka)(i,c,f,S,T,M),a._OrtGetTensorData=(i,c,f,S,T)=>(a._OrtGetTensorData=Y.la)(i,c,f,S,T),a._OrtReleaseTensor=i=>(a._OrtReleaseTensor=Y.ma)(i),a._OrtCreateRunOptions=(i,c,f,S)=>(a._OrtCreateRunOptions=Y.na)(i,c,f,S),a._OrtAddRunConfigEntry=(i,c,f)=>(a._OrtAddRunConfigEntry=Y.oa)(i,c,f),a._OrtReleaseRunOptions=i=>(a._OrtReleaseRunOptions=Y.pa)(i),a._OrtCreateBinding=i=>(a._OrtCreateBinding=Y.qa)(i),a._OrtBindInput=(i,c,f)=>(a._OrtBindInput=Y.ra)(i,c,f),a._OrtBindOutput=(i,c,f,S)=>(a._OrtBindOutput=Y.sa)(i,c,f,S),a._OrtClearBoundOutputs=i=>(a._OrtClearBoundOutputs=Y.ta)(i),a._OrtReleaseBinding=i=>(a._OrtReleaseBinding=Y.ua)(i),a._OrtRunWithBinding=(i,c,f,S,T)=>(a._OrtRunWithBinding=Y.va)(i,c,f,S,T),a._OrtRun=(i,c,f,S,T,M,N,ae)=>(a._OrtRun=Y.wa)(i,c,f,S,T,M,N,ae),a._OrtEndProfiling=i=>(a._OrtEndProfiling=Y.xa)(i),a._JsepOutput=(i,c,f)=>(a._JsepOutput=Y.ya)(i,c,f),a._JsepGetNodeName=i=>(a._JsepGetNodeName=Y.za)(i);var _r=a._pthread_self=()=>(_r=a._pthread_self=Y.Aa)(),an=a._malloc=i=>(an=a._malloc=Y.Ba)(i),eo=a._free=i=>(eo=a._free=Y.Ca)(i);a.__emscripten_tls_init=()=>(a.__emscripten_tls_init=Y.Da)();var to=a.__emscripten_thread_init=(i,c,f,S,T,M)=>(to=a.__emscripten_thread_init=Y.Fa)(i,c,f,S,T,M);a.__emscripten_thread_crashed=()=>(a.__emscripten_thread_crashed=Y.Ga)();var ro=(i,c,f,S)=>(ro=Y.Ha)(i,c,f,S),sn=i=>(sn=Y.Ia)(i),un=a.__emscripten_thread_exit=i=>(un=a.__emscripten_thread_exit=Y.Ja)(i),no=a.__emscripten_check_mailbox=()=>(no=a.__emscripten_check_mailbox=Y.Ka)(),oo=i=>(oo=Y.La)(i),ao=(i,c)=>(ao=Y.Ma)(i,c),ln=()=>(ln=Y.Na)(),Er=i=>(Er=Y.Oa)(i),dn=i=>(dn=Y.Pa)(i),io=a.dynCall_ii=(i,c)=>(io=a.dynCall_ii=Y.Ra)(i,c),so=i=>(so=Y.Sa)(i),uo=()=>(uo=Y.Ta)(),lo=i=>(lo=Y.Ua)(i),co=()=>(co=Y.Va)();a.___start_em_js=1440058,a.___stop_em_js=1440219;function Vu(i){i=Object.assign({},i);var c=S=>()=>S()>>>0,f=S=>T=>S(T)>>>0;return i.__errno_location=c(i.__errno_location),i.pthread_self=c(i.pthread_self),i.malloc=f(i.malloc),i.stackSave=c(i.stackSave),i.stackAlloc=f(i.stackAlloc),i}a.keepRuntimeAlive=ot,a.wasmMemory=$e,a.stackAlloc=dn,a.stackSave=ln,a.stackRestore=Er,a.UTF8ToString=Ne,a.stringToUTF8=$r,a.lengthBytesUTF8=It,a.ExitStatus=yt,a.PThread=ue;var Or;xt=function i(){Or||po(),Or||(xt=i)};function po(){function i(){if(!Or&&(Or=!0,a.calledRun=!0,!Ie)&&(x||ht(Re),p(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),!x)){if(a.postRun)for(typeof a.postRun=="function"&&(a.postRun=[a.postRun]);a.postRun.length;){var c=a.postRun.shift();Ve.unshift(c)}ht(Ve)}}if(!(0<Ze))if(x)p(a),x||ht(Re),startWorker(a);else{if(a.preRun)for(typeof a.preRun=="function"&&(a.preRun=[a.preRun]);a.preRun.length;)Ke.unshift(a.preRun.shift());ht(Ke),0<Ze||(a.setStatus?(a.setStatus("Running..."),setTimeout(function(){setTimeout(function(){a.setStatus("")},1),i()},1)):i())}}if(a.preInit)for(typeof a.preInit=="function"&&(a.preInit=[a.preInit]);0<a.preInit.length;)a.preInit.pop()();return po(),t.ready}})();typeof So=="object"&&typeof yn=="object"?yn.exports=$o:typeof define=="function"&&define.amd&&define([],()=>$o)});var Co=or((Nc,ju)=>{ju.exports=\'"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>(0,eval)(fs.readFileSync(e,"utf8")+"//# sourceURL="+e),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason??e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err("worker.js received unknown command "+e.data.cmd),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed&&Module.__emscripten_thread_crashed(),a}}self.onmessage=handleMessage;\\n\'});var vn,ir,sr,Rr,ur,Oo,$n,ze=q(()=>{"use strict";vn=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},ir=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},sr=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],Rr=e=>{switch(e){case"float16":return Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},ur=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},Oo=e=>e==="float32"||e==="int32"||e==="int64"||e==="bool"||e==="float16"||e==="uint32",$n=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}});var tl,rl,ko,Po,Ro,nl,Pe,vt=q(()=>{"use strict";ze();tl=["V","I","W","E","F"],rl=(e,t)=>{console.log(`[${tl[e]},${new Date().toISOString()}]${t}`)},Ro=(e,t)=>{ko=e,Po=t},nl=(e,t)=>{let r=ur(e),o=ur(ko);r>=o&&rl(r,typeof t=="function"?t():t)},Pe=(...e)=>{Po&&nl(...e)}});var Bo,Mo=q(()=>{"use strict";ze();Bo=(e,t)=>new(Rr(t))(e)});var Br=q(()=>{"use strict"});var Mr,ol,Do,xn,Sn,Vo,Wo=q(()=>{"use strict";vt();Br();Mr=e=>Math.ceil(e/16)*16,ol=1,Do=()=>ol++,xn=async(e,t,r,o)=>{let n=Mr(r),s=e.device.createBuffer({size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let u=e.getCommandEncoder();e.endComputePass(),u.copyBufferToBuffer(t,0,s,0,n),e.flush(),await s.mapAsync(GPUMapMode.READ);let d=s.getMappedRange();if(o){let a=o();return a.set(new Uint8Array(d,0,r)),a}else return new Uint8Array(d.slice(0,r))}finally{s.destroy()}},Sn=class{constructor(t){this.backend=t;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map}upload(t,r){let o=r.buffer,n=r.byteOffset,s=r.byteLength,u=Mr(s),d=this.storageCache.get(t);if(!d)throw new Error("gpu data for uploading does not exist");if(d.originalSize!==s)throw new Error(`inconsistent data size. gpu data size=${d.originalSize}, data size=${s}`);let a=this.backend.device.createBuffer({mappedAtCreation:!0,size:u,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),p=a.getMappedRange();new Uint8Array(p).set(new Uint8Array(o,n,s)),a.unmap();let h=this.backend.getCommandEncoder();this.backend.endComputePass(),h.copyBufferToBuffer(a,0,d.gpuData.buffer,0,u),Pe("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${t})`),this.buffersForUploadingPending.push(a)}memcpy(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("source gpu data for memcpy does not exist");let n=this.storageCache.get(r);if(!n)throw new Error("destination gpu data for memcpy does not exist");if(o.originalSize!==n.originalSize)throw new Error("inconsistent source and destination gpu data size");let s=Mr(o.originalSize),u=this.backend.getCommandEncoder();this.backend.endComputePass(),u.copyBufferToBuffer(o.gpuData.buffer,0,n.gpuData.buffer,0,s)}registerExternalBuffer(t,r,o){let n;if(o){if(n=this.externalBuffers.get(o),n===void 0)throw new Error("previous buffer is not registered");if(t===o)return Pe("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${n}, buffer is the same, skip.`),n;this.externalBuffers.delete(o)}else n=Do();return this.storageCache.set(n,{gpuData:{id:n,type:0,buffer:t},originalSize:r}),this.externalBuffers.set(t,n),Pe("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${n}, registered.`),n}unregisterExternalBuffer(t){let r=this.externalBuffers.get(t);r!==void 0&&(this.storageCache.delete(r),this.externalBuffers.delete(t),Pe("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${r}`))}create(t,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let o=Mr(t),n,s=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,u=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(s||u){let a=s?this.freeBuffers:this.freeUniformBuffers,p=a.get(o);p||(p=[],a.set(o,p)),p.length>0?n=p.pop():n=this.backend.device.createBuffer({size:o,usage:r})}else n=this.backend.device.createBuffer({size:o,usage:r});let d={id:Do(),type:0,buffer:n};return this.storageCache.set(d.id,{gpuData:d,originalSize:t}),Pe("verbose",()=>`[WebGPU] GpuDataManager.create(size=${t}) => id=${d.id}`),d}get(t){return this.storageCache.get(t)?.gpuData}release(t){let r=this.storageCache.get(t);if(!r)throw new Error("releasing data does not exist");return Pe("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${r.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(r.gpuData.buffer),r.originalSize}async download(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("data does not exist");await xn(this.backend,o.gpuData.buffer,o.originalSize,r)}refreshPendingBuffers(){for(let t of this.buffersForUploadingPending)t.destroy();this.buffersForUploadingPending=[];for(let t of this.buffersPending)(t.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(t.size).push(t):(t.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(t.size).push(t):t.destroy();this.buffersPending=[]}dispose(){this.freeBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map}},Vo=(...e)=>new Sn(...e)});var Cn,X,Oe=q(()=>{"use strict";Cn=class{constructor(t){Object.assign(this,t)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(t=>`${this[t]}`).join(";")),this.key}},X=e=>new Cn(e)});var In,st,D,Et,Dr,zr,Vr,ye=q(()=>{"use strict";In=class{static calcMatMulShape(t,r){return t[1]!==r[0]?void 0:[t[0],r[1]]}},st=class{static calcShape(t,r,o=!1){let n=t.length,s=r.length;if(n===0)return r;if(s===0)return t;let u=Math.max(t.length,r.length),d=new Array(u);if(o){if(n<2||s<2)return;let a=In.calcMatMulShape([t[n-2],t[n-1]],[r[s-2],r[s-1]]);if(a===void 0)return;[d[u-2],d[u-1]]=a}for(let a=o?3:1;a<=u;a++){let p=n-a<0?1:t[n-a],h=s-a<0?1:r[s-a];if(p!==h&&p>1&&h>1)return;d[u-a]=Math.max(p,h)}return d}static isValidBroadcast(t,r){let o=t.length,n=r.length;if(o>n)return!1;for(let s=1;s<=o;s++)if(t[o-s]!==1&&t[o-s]!==r[n-s])return!1;return!0}},D=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,o){let n=1;for(let s=r;s<o;s++){if(t[s]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");n*=t[s]}return n}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let o=new Array(r);o[r-1]=1,o[r-2]=t[r-1];for(let n=r-3;n>=0;--n)o[n]=o[n+1]*t[n+1];return o}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(o=>this.normalizeAxis(o,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(o=>t[o]):t.slice().reverse()}static padShape(t,r){let o=t.length;return t.map((n,s)=>n+r[s]+r[s+o])}static areEqual(t,r){return t.length!==r.length?!1:t.every((o,n)=>o===r[n])}},Et=class e{static adjustPoolAttributes(t,r,o,n,s,u){if(!t&&o.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let d=0;d<r.length-2;d++)d>=o.length?o.push(r[d+2]):o[d]=r[d+2];for(let d=0;d<o.length;d++)if(d<n.length){if(n[d]<0)throw new Error("strides should be greater than or equal to 1")}else n.push(1);for(let d=0;d<o.length;d++)if(d<s.length){if(s[d]<0)throw new Error("dilations should be greater than or equal to 1")}else s.push(1);for(let d=0;d<o.length*2;d++)if(d<u.length){if(u[d]<0)throw new Error("pad should be greater than or equal to 1")}else u.push(0);for(let d=0;d<o.length;d++){if(o[d]<=0)throw new Error("kernel shapes need to be greater than 0");if(u[d]>=o[d]||u[d+o.length]>=o[d])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,o,n,s,u,d){if(d){if(s.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(n.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let a=0;a<t.length-2;a++)e.adjustPadAndReturnShape(t[a+(u?1:2)],r[a],o[a],n[a],s,a,a+t.length-2,d)}}static computePoolOutputShape(t,r,o,n,s,u,d){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let a=[r[0],r[1]];return e.computeShapeHelper(t,r,a,o,n,s,u,d),a}static computeConvOutputShape(t,r,o,n,s,u,d){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let a=[t[0],r[0]];return e.computeShapeHelper(!1,t,a,o,n,s,u,d),a}static computeShapeHelper(t,r,o,n,s,u,d,a){if(t)for(let p=0;p<r.length-2;p++)o.push(1);else for(let p=0;p<r.length-2;p++)o.push(e.adjustPadAndReturnShape(r[p+2],n[p],s[p],u[p],d,p,p+r.length-2,a))}static adjustPadAndReturnShape(t,r,o,n,s,u,d,a){let p=o*(n-1)+1;if(a&&a!=="NOTSET")switch(a){case"VALID":return s[u]=0,s[d]=0,Math.floor((t-p)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(o!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let $=((t+r-1)/r-1)*r+n-t;return s[u]=Math.floor(a==="SAME_LOWER"?($+1)/2:$/2),s[d]=$-s[u],Math.floor((t+$-n)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+s[u]+s[d]-p)/r+1)}},Dr=class{static getShapeOfGemmResult(t,r,o,n,s){if(t.length!==2||o.length!==2)throw new Error("shape need to be of size 2");let u,d,a;r?(u=t[1],d=t[0]):(u=t[0],d=t[1]);let p=-1;if(n?(a=o[0],p=1):(a=o[1],p=0),o[p]!==d)throw new Error("dimension mismatch");if(u<=0||a<=0||d<=0)throw new Error("invalid shape specified");if(s&&!st.isValidBroadcast(s,[u,a]))throw new Error("gemm: invalid bias shape for broadcast");return[u,a,d]}},zr=-34028234663852886e22,Vr=34028234663852886e22});var al,Uo,Te,ne,Ye,Ge,Je,et,je,Tn,W,K,No,An,Ho,_n,ke,be=q(()=>{"use strict";ze();ye();al=64,Uo=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}},Te=(e,t=1)=>{let r=Uo(e,t);return typeof r=="string"?r:r[0]},ne=e=>e.length===0?[]:[{type:"uint32",data:e},{type:"uint32",data:D.computeStrides(e)}],Ye=e=>e%4===0?4:e%2===0?2:1,Ge=(e="f32",t,r="0")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,Je=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}f(${r})`,et=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,je=(e,t,r)=>e.startsWith("uniforms.")&&r>4?typeof t=="string"?`${e}[(${t}) / 4][(${t}) % 4]`:`${e}[${Math.floor(t/4)}][${t%4}]`:r>1?`${e}[${t}]`:e,Tn=(e,t,r,o,n)=>{let s=typeof r=="number",u=s?r:r.length,d=[...new Array(u).keys()],a=u<2?"u32":u<=4?`vec${u}<u32>`:`array<u32, ${u}>`,p=Uo(t,n),h=typeof p=="string"?p:p[1],$=typeof p=="string"?p:p[0],g={indices:a,value:h,storage:$,tensor:t},w=L=>typeof L=="string"?L:`${L}u`,b={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},v=s?"uniforms.":"",I=`${v}${e}_shape`,x=`${v}${e}_strides`,A="";for(let L=0;L<u-1;L++)A+=`\n    let dim${L} = current / ${je(x,L,u)};\n    let rest${L} = current % ${je(x,L,u)};\n    indices[${L}] = dim${L};\n    current = rest${L};\n    `;A+=`indices[${u-1}] = current;`;let B=u<2?"":`\n  fn o2i_${e}(offset: u32) -> ${g.indices} {\n    var indices: ${g.indices};\n    var current = offset;\n    ${A}\n    return indices;\n  }`,E=L=>(b.offsetToIndices=!0,u<2?L:`o2i_${e}(${L})`),V=[];if(u>=2)for(let L=u-1;L>=0;L--)V.push(`${je(x,L,u)} * (indices[${L}])`);let P=u<2?"":`\n  fn i2o_${e}(indices: ${g.indices}) -> u32 {\n    return ${V.join("+")};\n  }`,z=L=>(b.indicesToOffset=!0,u<2?L:`i2o_${e}(${L})`),U=(...L)=>u===0?"0u":`${g.indices}(${L.map(w).join(",")})`,F=(L,de)=>u<2?`${L}`:`${je(L,de,u)}`,te=(L,de,fe)=>u<2?`${L}=${fe};`:`${je(L,de,u)}=${fe};`,R={},j=(L,de)=>{b.broadcastedIndicesToOffset=!0;let fe=`${de.name}broadcastedIndicesTo${e}Offset`;if(fe in R)return`${fe}(${L})`;let Ue=[];for(let Ke=u-1;Ke>=0;Ke--){let Re=de.indicesGet("outputIndices",Ke+de.rank-u);Ue.push(`${F(x,Ke)} * (${Re} % ${F(I,Ke)})`)}return R[fe]=`fn ${fe}(outputIndices: ${de.type.indices}) -> u32 {\n             return ${Ue.length>0?Ue.join("+"):"0u"};\n           }`,`${fe}(${L})`},pe=(L,de)=>(()=>{if(g.storage===g.value)return`${e}[${L}]=${de};`;if(g.storage==="vec2<u32>"&&g.value==="i32")return`${e}[${L}]=vec2<u32>(u32(${de}), select(0u, 0xFFFFFFFFu, ${de} < 0));`;if(g.storage==="vec2<u32>"&&g.value==="u32")return`${e}[${L}]=vec2<u32>(u32(${de}), 0u);`;if(g.storage==="u32"&&g.value==="vec4<bool>")return`${e}[${L}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${de}));`;throw new Error(`not supported combination of storage type ${g.storage} and value type ${g.value} yet`)})(),Q=L=>(()=>{if(g.storage===g.value)return`${e}[${L}]`;if(g.storage==="vec2<u32>"&&g.value==="i32")return`i32(${e}[${L}].x)`;if(g.storage==="vec2<u32>"&&g.value==="u32")return`u32(${e}[${L}].x)`;if(g.storage==="u32"&&g.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${L}] & 0xFFu), bool(${e}[${L}] & 0xFF00u), bool(${e}[${L}] & 0xFF0000u), bool(${e}[${L}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${g.storage} and value type ${g.value} yet`)})(),$e=u<2?"":`\n  fn get_${e}ByIndices(indices: ${g.indices}) -> ${h} {\n    return ${Q(`i2o_${e}(indices)`)};\n  }`,Y=u<2?"":(()=>{let L=d.map(fe=>`d${fe}: u32`).join(", "),de=d.map(fe=>`d${fe}`).join(", ");return`\n  fn get_${e}(${L}) -> ${h} {\n    return get_${e}ByIndices(${U(de)});\n  }`})(),Se=(...L)=>{if(L.length!==u)throw new Error(`indices length must be ${u}`);let de=L.map(w).join(",");return u===0?Q("0u"):u===1?Q(de[0]):(b.get=!0,b.getByIndices=!0,b.indicesToOffset=!0,`get_${e}(${de})`)},Ie=L=>u<2?Q(L):(b.getByIndices=!0,b.indicesToOffset=!0,`get_${e}ByIndices(${L})`),Ae=u<2?"":`\n  fn set_${e}ByIndices(indices: ${g.indices}, value: ${h}) {\n    ${pe(`i2o_${e}(indices)`,"value")}\n  }`,he=u<2?"":(()=>{let L=d.map(fe=>`d${fe}: u32`).join(", "),de=d.map(fe=>`d${fe}`).join(", ");return`\n  fn set_${e}(${L}, value: ${h}) {\n    set_${e}ByIndices(${U(de)}, value);\n  }`})();return{impl:()=>{let L=[];return s||(L.push(`const ${I} = ${g.indices}(${r.join(",")});`),L.push(`const ${x} = ${g.indices}(${D.computeStrides(r).join(",")});`)),b.offsetToIndices&&L.push(B),b.indicesToOffset&&L.push(P),b.broadcastedIndicesToOffset&&Object.values(R).forEach(de=>L.push(de)),b.set&&L.push(he),b.setByIndices&&L.push(Ae),b.get&&L.push(Y),b.getByIndices&&L.push($e),L.join(`\n`)},type:g,offsetToIndices:E,indicesToOffset:z,broadcastedIndicesToOffset:j,indices:U,indicesGet:F,indicesSet:te,set:(...L)=>{if(L.length!==u+1)throw new Error(`indices length must be ${u}`);let de=L[u];if(typeof de!="string")throw new Error("value must be string");let fe=L.slice(0,u).map(w).join(",");return u===0?pe("0u",de):u===1?pe(fe[0],de):(b.set=!0,b.setByIndices=!0,b.indicesToOffset=!0,`set_${e}(${fe}, ${de})`)},setByOffset:pe,setByIndices:(L,de)=>u<2?pe(L,de):(b.setByIndices=!0,b.indicesToOffset=!0,`set_${e}ByIndices(${L}, ${de});`),get:Se,getByOffset:Q,getByIndices:Ie,usage:o,name:e,strides:x,shape:I,rank:u}},W=(e,t,r,o=1)=>Tn(e,t,r,"input",o),K=(e,t,r,o=1)=>Tn(e,t,r,"output",o),No=(e,t,r,o=1)=>Tn(e,t,r,"internal",o),An=class{constructor(t){this.normalizedDispatchGroup=t;this.internalVariables=[];this.variables=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(t){return`if (global_idx >= ${typeof t=="number"?`${t}u`:t}) { return; }`}mainStart(t=al){let r=typeof t=="number"?t:t[0],o=typeof t=="number"?1:t[1],n=typeof t=="number"?1:t[2],s=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,u=s?`@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(local_invocation_index) local_index : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(num_workgroups) num_workgroups : vec3<u32>`,d=s?"let global_idx = global_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +\n          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${r*o*n}u + local_index;`;return`@compute @workgroup_size(${r}, ${o}, ${n})\n  fn main(${u}) {\n    ${d}\n  `}appendVariableUniforms(t){t.rank!==0&&(t.shape.startsWith("uniforms.")&&this.uniforms.push({name:t.shape.replace("uniforms.",""),type:"u32",length:t.rank}),t.strides.startsWith("uniforms.")&&this.uniforms.push({name:t.strides.replace("uniforms.",""),type:"u32",length:t.rank}))}declareVariable(t,r){if(t.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(t),this.appendVariableUniforms(t);let o=t.usage==="input"?"read":"read_write",n=t.type.storage;return`@group(0) @binding(${r}) var<storage, ${o}> ${t.name}: array<${n}>;`}declareVariables(...t){return t.map(r=>this.declareVariable(r,this.variableIndex++)).join(`\n`)}registerInternalVariable(t){if(t.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(t),this.appendVariableUniforms(t)}registerInternalVariables(...t){return t.forEach(r=>this.registerInternalVariable(r)),this}registerUniform(t,r,o=1){return this.uniforms.push({name:t,type:r,length:o}),this}registerUniforms(t){return this.uniforms=this.uniforms.concat(t),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let t=[];for(let{name:r,type:o,length:n}of this.uniforms)if(n&&n>4)t.push(`${r}:array<vec4<${o}>, ${Math.ceil(n/4)}>`);else{let s=n==null||n===1?o:`vec${n}<${o}>`;t.push(`${r}:${s}`)}return`\n      struct Uniforms { ${t.join(", ")} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(t=>t.impl()).join(`\n`)+this.internalVariables.map(t=>t.impl()).join(`\n`)}},Ho=e=>new An(e),_n=(e,t)=>{let r=e.length,o=[];for(let n=0;n<r;n++){let s=r-1-n,u=e[s]||1;(t[t.length-1-n]||1)>1&&u===1&&o.unshift(s)}return o},ke=e=>!0});var il,Go,sl,ul,tt,Lo,Fo,Wt=q(()=>{"use strict";ye();Oe();be();il=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},Go=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,sl=(e,t)=>D.sortBasedOnPerm(e,Go(e.length,t)),ul=(e,t,r,o)=>{let n=[];n.push(`fn perm(i: ${o.type.indices}) -> ${r.type.indices} {\n    var a: ${r.type.indices};`);for(let s=0;s<t;++s)n.push(r.indicesSet("a",e[s],`i[${s}]`));return n.push("return a;}"),n.join(`\n`)},tt=(e,t)=>{let r=e.dataType,o=e.dims.length,n=Go(o,t),s=ke(o),u=sl(e.dims,n),d=s?u.length:u,a=s?o:e.dims,p=K("output",r,d),h=W("a",r,a),$=g=>`\n  ${g.registerUniform("output_size","u32").declareVariables(h,p)}\n\n  ${ul(n,o,h,p)}\n\n  ${g.mainStart()}\n    ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${p.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${p.setByOffset("global_idx",h.getByIndices("aIndices"))}\n  }`;return{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:s?["rank"]:["dims"]},getRunData:g=>{let w=D.size(u);return{outputs:[{dims:u,dataType:g[0].dataType}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:s?[{type:"uint32",data:w},...ne(g[0].dims),...ne(u)]:[{type:"uint32",data:w}]}},getShaderSource:$}},Lo=(e,t)=>{il(e.inputs),e.compute(tt(e.inputs[0],t.perm))},Fo=e=>X({perm:e.perm})});var ll,dl,cl,pl,ml,fl,hl,gl,yl,bl,ut,jo,qo,Ko,Yo,Zo,Xo,Qo,Jo,ea,ta,ra=q(()=>{"use strict";ye();be();Wr();Wt();ll={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},dl={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},cl={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},pl={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},ml=(e,t)=>{let r=[];for(let o=t-e;o<t;++o)r.push(o);return r},fl=(e,t)=>{let r=[],o=e.length;for(let s=0;s<o;s++)t.indexOf(s)===-1&&r.push(e[s]);let n=t.map(s=>e[s]);return[r,n]},hl=(e,t)=>{let r=e.length+t.length,o=[],n=0;for(let s=0;s<r;s++)t.indexOf(s)===-1?o.push(e[n++]):o.push(1);return o},gl=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},yl=(e,t)=>{let r=[];if(!gl(e,t)){for(let o=0;o<t;++o)e.indexOf(o)===-1&&r.push(o);e.forEach(o=>r.push(o))}return r},bl=(e,t,r,o,n,s,u)=>{let d=r[0].dims,a=D.size(s),p=D.size(u),h=W("_A",r[0].dataType,d),$=K("output",n,s),g=32,w=`\n          var<workgroup> aBestValues : array<${$.type.storage}, ${g}>;\n       `;return{name:e,shaderCache:t,getShaderSource:v=>`\n        ${v.registerUniform("reduceSize","u32").declareVariables(h,$)}\n        ${w}\n        fn DIV_CEIL(a : u32, b : u32) -> u32 {\n          return ((a - 1u) / b + 1u);\n         }\n         ${v.mainStart(g)}\n          let local_idx = local_id.x;\n\n          let outputIndex = global_idx / ${g};\n          let offset = outputIndex * uniforms.reduceSize;\n\n          var bestValue = ${$.type.storage}(${cl[o]});\n          let Length = uniforms.reduceSize;\n          for (var k = local_idx; k < Length; k = k + ${g}) {\n           let candidate = ${$.type.storage}(${h.getByOffset("offset + k")});\n           bestValue = ${ll[o]};\n          }\n          aBestValues[local_idx] = bestValue;\n          workgroupBarrier();\n\n         var reduceSize = min(Length, ${g}u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (local_idx < currentSize) {\n            let candidate = aBestValues[local_idx + interval];\n            bestValue = ${dl[o]};\n            aBestValues[local_idx] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (local_idx == 0u) {\n          ${$.setByOffset("outputIndex",`${o==="mean"?`bestValue / ${$.type.storage}(uniforms.reduceSize)`:`${pl[o]}`}`)};\n         }\n        }`,getRunData:()=>({outputs:[{dims:s,dataType:n}],dispatchGroup:{x:a},programUniforms:[{type:"uint32",data:p}]})}},ut=(e,t,r,o)=>{let n=e.inputs.length===1?r:En(e.inputs,r),s=n.axes;s.length===0&&!n.noopWithEmptyAxes&&(s=e.inputs[0].dims.map((w,b)=>b));let u=D.normalizeAxes(s,e.inputs[0].dims.length),d=u,a=e.inputs[0],p=yl(d,e.inputs[0].dims.length);p.length>0&&(a=e.compute(tt(e.inputs[0],p),{inputs:[0],outputs:[-1]})[0],d=ml(d.length,a.dims.length));let[h,$]=fl(a.dims,d),g=h;n.keepDims&&(g=hl(h,u)),e.compute(bl(t,{hint:n.cacheKey,inputDependencies:["type"]},[a],o,e.inputs[0].dataType,g,$),{inputs:[a]})},jo=(e,t)=>{ut(e,"ReduceMeanShared",t,"mean")},qo=(e,t)=>{ut(e,"ReduceL1Shared",t,"l1")},Ko=(e,t)=>{ut(e,"ReduceL2Shared",t,"l2")},Yo=(e,t)=>{ut(e,"ReduceLogSumExpShared",t,"logSumExp")},Zo=(e,t)=>{ut(e,"ReduceMaxShared",t,"max")},Xo=(e,t)=>{ut(e,"ReduceMinShared",t,"min")},Qo=(e,t)=>{ut(e,"ReduceProdShared",t,"prod")},Jo=(e,t)=>{ut(e,"ReduceSumShared",t,"sum")},ea=(e,t)=>{ut(e,"ReduceSumSquareShared",t,"sumSquare")},ta=(e,t)=>{ut(e,"ReduceLogSumShared",t,"logSum")}});var lt,wl,Ur,En,dt,vl,$l,Sl,xl,Cl,Il,Al,Tl,_l,El,ct,na,oa,aa,ia,sa,ua,la,da,ca,pa,rt,Wr=q(()=>{"use strict";ye();Oe();be();ra();lt=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},wl=e=>["","",`var value = ${e.getByOffset("inputOffset")};`,""],Ur=(e,t,r,o,n,s,u=!1,d=!1)=>{let a=[],p=r[0].dims,h=D.normalizeAxes(n,r[0].dims.length),$=!d&&h.length===0;p.forEach((z,U)=>{$||h.indexOf(U)>=0?u&&a.push(1):a.push(z)});let g=[],w=W("_A",r[0].dataType,p),b=K("output",s,a),v=o(w,b,h),I=`inputOffset = ${w.indicesToOffset("inputIndices")};`,x=`let ${I};`,A=`var ${I};`,B=v[1]===""?"":A,E=(v[1]===""?x:I)+`\n`+v[2];for(let z=0,U=0;z<r[0].dims.length;z++)$||h.indexOf(z)>=0?(u&&U++,E=`for(var j${z}: u32 = 0; j${z} < ${r[0].dims[z]}; j${z}++) {\n                ${v[2].includes("lastIndex")?`let lastIndex = j${z};`:""}\n                ${w.indicesSet("inputIndices",z,`j${z}`)}\n                ${E}\n              }`):(g.push(`${w.indicesSet("inputIndices",z,b.indicesGet("outputIndices",U))};`),U++);let V=D.size(a);return{name:e,shaderCache:t,getShaderSource:z=>`\n        ${z.declareVariables(w,b)}\n\n        ${z.mainStart()}\n          ${z.guardAgainstOutOfBoundsWorkgroupSizes(V)}\n          var inputIndices: ${w.type.indices};\n          let outputIndices = ${b.offsetToIndices("global_idx")};\n\n          ${g.join(`\n`)}\n          ${v[0]}       // init ops for reduce max/min\n          ${B}\n          ${v[1]}\n          ${E}\n          ${v[3]}\n          ${v.length===4?b.setByOffset("global_idx","value"):v.slice(4).join(`\n`)}\n        }`,getRunData:()=>({outputs:[{dims:a,dataType:s}],dispatchGroup:{x:Math.ceil(V/64)}})}},En=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(o=>r.push(Number(o))),X({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},dt=(e,t,r,o)=>{let n=e.inputs,s=n.length===1?r:En(n,r);e.compute(Ur(t,{hint:s.cacheKey},[n[0]],s.noopWithEmptyAxes&&s.axes.length===0?wl:o,s.axes,n[0].dataType,s.keepDims,s.noopWithEmptyAxes),{inputs:[0]})},vl=(e,t)=>{lt(e.inputs),dt(e,"ReduceLogSum",t,(o,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${o.getByOffset("inputOffset")};`,"value = log(value);"])},$l=(e,t)=>{lt(e.inputs),dt(e,"ReduceL1",t,(o,n)=>[`var value = ${n.type.storage}(0);`,"",`value += abs(${o.getByOffset("inputOffset")});`,""])},Sl=(e,t)=>{lt(e.inputs),dt(e,"ReduceL2",t,(o,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${o.getByOffset("inputOffset")}; value += (t * t);`,"value = sqrt(value);"])},xl=(e,t)=>{lt(e.inputs),dt(e,"ReduceLogSumExp",t,(o,n)=>[`var value = ${n.type.storage}(0);`,"",`value += exp(${o.getByOffset("inputOffset")});`,"value = log(value);"])},Cl=(e,t)=>{lt(e.inputs),dt(e,"ReduceMax",t,(o,n,s)=>{let u=[];for(let d=0;d<o.rank;d++)(s.indexOf(d)>=0||s.length===0)&&u.push(o.indicesSet("inputIndices",d,0));return[`${u.join(`\n`)}`,`var value = ${o.getByOffset("inputOffset")};`,`value = max(value, ${o.getByOffset("inputOffset")});`,""]})},Il=(e,t)=>{lt(e.inputs),dt(e,"ReduceMean",t,(o,n,s)=>{let u=1;for(let d=0;d<o.rank;d++)(s.indexOf(d)>=0||s.length===0)&&(u*=e.inputs[0].dims[d]);return["var sum = f32(0);","",`sum += f32(${o.getByOffset("inputOffset")});`,`let value = ${n.type.value}(sum / ${u});`]})},Al=(e,t)=>{lt(e.inputs),dt(e,"ReduceMin",t,(o,n,s)=>{let u=[];for(let d=0;d<o.rank;d++)(s.indexOf(d)>=0||s.length===0)&&u.push(`inputIndices[${d}] = 0;`);return[`${u.join(`\n`)}`,`var value = ${o.getByOffset("inputOffset")};`,`value = min(value, ${o.getByOffset("inputOffset")});`,""]})},Tl=(e,t)=>{lt(e.inputs),dt(e,"ReduceProd",t,(o,n)=>[`var value = ${n.type.storage}(1);`,"",`value *= ${o.getByOffset("inputOffset")};`,""])},_l=(e,t)=>{lt(e.inputs),dt(e,"ReduceSum",t,(o,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${o.getByOffset("inputOffset")};`,""])},El=(e,t)=>{lt(e.inputs),dt(e,"ReduceSumSquare",t,(o,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${o.getByOffset("inputOffset")}; value += t * t;`,""])},ct=(e,t,r)=>{if(t.length===0)return!!r;let o=1,n=1;for(let s=0;s<t.length;s++)t.indexOf(s)===-1?o*=e[s]:n*=e[s];return n<32&&o>1024},na=(e,t)=>{ct(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Il(e,t):jo(e,t)},oa=(e,t)=>{ct(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?$l(e,t):qo(e,t)},aa=(e,t)=>{ct(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Sl(e,t):Ko(e,t)},ia=(e,t)=>{ct(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?xl(e,t):Yo(e,t)},sa=(e,t)=>{ct(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Cl(e,t):Zo(e,t)},ua=(e,t)=>{ct(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Al(e,t):Xo(e,t)},la=(e,t)=>{ct(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Tl(e,t):Qo(e,t)},da=(e,t)=>{ct(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?_l(e,t):Jo(e,t)},ca=(e,t)=>{ct(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?El(e,t):ea(e,t)},pa=(e,t)=>{ct(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?vl(e,t):ta(e,t)},rt=e=>X(e)});var ma,fa,ha,On,ga=q(()=>{"use strict";ze();Oe();Wr();ma=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},fa=(e,t)=>{ma(e.inputs);let r=(o,n,s)=>{let u=[];for(let d=0;d<o.rank;d++)(s.indexOf(d)>=0||s.length===0)&&u.push(`inputIndices[${d}] = 0;`);return[`${u.join(`\n`)}`,`var value = ${o.getByOffset("inputOffset")};\nvar bestIndex : i32 = 0;`,`if (${o.getByOffset("inputOffset")} ${t.selectLastIndex>0?"<=":"<"} value) {\n         value = ${o.getByOffset("inputOffset")};\n         bestIndex = i32(lastIndex);\n       }`,"",n.setByOffset("global_idx","bestIndex")]};e.compute(Ur("ArgMin",{hint:t.cacheKey},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},ha=(e,t)=>{ma(e.inputs);let r=(o,n,s)=>{let u=[];for(let d=0;d<o.rank;d++)(s.indexOf(d)>=0||s.length===0)&&u.push(`inputIndices[${d}] = 0;`);return[`${u.join(`\n`)}`,`var value = ${o.getByOffset("inputOffset")};\nvar bestIndex : i32 = 0;`,`if (${o.getByOffset("inputOffset")} ${t.selectLastIndex>0?">=":">"} value) {\n         value = ${o.getByOffset("inputOffset")};\n         bestIndex = i32(lastIndex);\n       }`,"",n.setByOffset("global_idx","bestIndex")]};e.compute(Ur("argMax",{hint:t.cacheKey},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},On=e=>X(e)});var Ol,ya,kl,Pl,Rl,Nr,Bl,ba,kn=q(()=>{"use strict";Oe();Br();be();Ol=(e,t)=>{let r=e[0],o=e[1],n=e[2],s=e[3],u=e[4],d=e[5];if(u&&d)throw new Error("Attention cannot have both past and relative_position_bias");if(r.dims.length!==3)throw new Error(\'Input "input" must have 3 dimensions\');let a=r.dims[0],p=r.dims[1],h=r.dims[2];if(n.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimensions\');if(o.dims.length!==2)throw new Error(\'Input "weights" is expected to have 2 dimensions\');if(o.dims[0]!==h)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(n.dims[0]!==o.dims[1])throw new Error(\'Input "bias" dimension 0 should have same length as dimension 1 of input "weights"\');let $=n.dims[0]/3,g=$,w=g;if(t.qkvHiddenSizes.length>0){if(t.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let B of t.qkvHiddenSizes)if(B%t.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");$=t.qkvHiddenSizes[0],g=t.qkvHiddenSizes[1],w=t.qkvHiddenSizes[2]}let b=p;if($!==g)throw new Error("qkv_hidden_sizes first element should be same as the second");if(n.dims[0]!==$+g+w)throw new Error(\'Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes\');let v=0;if(u){if(g!==w)throw new Error(\'Input "past" expect k_hidden_size == v_hidden_size\');if(u.dims.length!==5)throw new Error(\'Input "past" must have 5 dimensions\');if(u.dims[0]!==2)throw new Error(\'Input "past" first dimension must be 2\');if(u.dims[1]!==a)throw new Error(\'Input "past" second dimension must be batch_size\');if(u.dims[2]!==t.numHeads)throw new Error(\'Input "past" third dimension must be num_heads\');if(u.dims[4]!==g/t.numHeads)throw new Error(\'Input "past" fifth dimension must be k_hidden_size / num_heads\');t.pastPresentShareBuffer||(v=u.dims[3])}let I=b+v,x=-1,A=0;if(s)throw new Error("Mask not supported");if(u)throw new Error("past is not supported");if(d)throw new Error("relativePositionBias is not supported");return{batchSize:a,sequenceLength:p,pastSequenceLength:v,kvSequenceLength:b,totalSequenceLength:I,maxSequenceLength:x,inputHiddenSize:h,hiddenSize:$,vHiddenSize:w,headSize:Math.floor($/t.numHeads),vHeadSize:Math.floor(w/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:A,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},ya=e=>X({...e}),kl=(e,t,r,o)=>{let n=Ye(o),s=K("x",t.dataType,t.dims,n),u="threadMaxVector";n===2?u="max(threadMaxVector.x, threadMaxVector.y)":n===4&&(u="max(max(threadMaxVector.x, threadMaxVector.y), max(threadMaxVector.z, threadMaxVector.w))");let d=Te(t.dataType),a=64,p=o/n;p<a?a=1:p/8<64&&(a=Math.ceil(p/8));let h=Math.ceil(o/n/a),$=g=>`\n  const dInv: ${d} = 1 / ${o};\n  const dComp = ${o/n};\n  var<workgroup> wgMax: array<f32, ${a}>;\n  var<workgroup> wgSum: array<f32, ${a}>;\n\n  ${g.declareVariables(s)}\n  @compute @workgroup_size(${a}, 1, 1)\n  fn main(@builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(local_invocation_index) local_index : u32) {\n    let localOffset = local_index * ${h};\n    let offset: u32 = workgroup_id.x * dComp + localOffset;\n\n    var threadMaxVector = ${Ge("f32",n,"-3.402823e+38f")};\n    for (var i: u32 = 0; i < ${h} && i + localOffset < dComp; i++) {\n      threadMaxVector = max(${Je(d,n,"x[offset + i]")}, threadMaxVector);\n    }\n    wgMax[local_index] = ${u};\n    workgroupBarrier();\n\n    var maxValue = -3.402823e+38f;\n    for (var i = 0u; i < ${a}; i++) {\n      maxValue = max(wgMax[i], maxValue);\n    }\n\n    var sumVector = ${Ge("f32",n,"0")};\n    for (var i: u32 = 0; i < ${h} && i + localOffset < dComp; i++) {\n      sumVector += exp(${Je(d,n,"x[offset + i]")} - maxValue);\n    }\n    wgSum[local_index] = ${et("sumVector",n)};\n    workgroupBarrier();\n\n    var sum: f32 = 0;\n    for (var i = 0u; i < ${a}; i++) {\n      sum += wgSum[i];\n    }\n\n    if (sum == 0) {\n      for (var i: u32 = 0; i < ${h} && i + localOffset < dComp; i++) {\n        x[offset + i] = ${Ge(d,n,"dInv")};\n      }\n    } else {\n      for (var i: u32 = 0; i < ${h} && i + localOffset < dComp; i++) {\n        let f32input = ${Je(d,n,"x[offset + i]")};\n        x[offset + i] = ${s.type.value}(exp(f32input - maxValue) / sum);\n      }\n    }\n  }`;e.compute({name:"AttentionProbsSoftmax",shaderCache:{hint:`${o}`},getShaderSource:$,getRunData:()=>({outputs:[],dispatchGroup:{x:r}})},{inputs:[t],outputs:[]})},Pl=(e,t,r,o,n,s)=>{let u=[n.batchSize,n.numHeads,n.sequenceLength,n.kvSequenceLength+n.pastSequenceLength],d=s.scale===0?1/Math.sqrt(n.headSize):s.scale,a=Te(t.dataType),p=Ye(n.headSize),h=W("q",t.dataType,t.dims,p),$=W("key",r.dataType,r.dims,p),g=K("output",t.dataType,u),w=n.headSize/p,b=n.sequenceLength,v=n.totalSequenceLength,I=w,x=12,A={x:Math.ceil(n.totalSequenceLength/x),y:Math.ceil(n.sequenceLength/x),z:n.batchSize*n.numHeads},B=[t,r],E=P=>`\n  const M: u32 = ${b}u;\n  const N: u32 = ${v}u;\n  const K: u32 = ${I}u;\n  const alpha: ${a} = ${d};\n  const beta: ${a} = 1.0;\n  const TILE_SIZE = ${x}u;\n\n  var<workgroup> tileQ: array<${h.type.storage}, ${x*x}>;\n  var<workgroup> tileK: array<${h.type.storage}, ${x*x}>;\n\n  ${P.declareVariables(h,$,g)}\n\n  @compute @workgroup_size(${x}, ${x}, 1)\n  fn main(@builtin(workgroup_id) workgroup_id : vec3<u32>,\n   @builtin(local_invocation_id) local_id : vec3<u32>, @builtin(local_invocation_index) local_index : u32) {\n   let global_idx = (workgroup_id.z * ${A.x*A.y}u +\n          workgroup_id.y * ${A.x}u + workgroup_id.x) * ${x*x}u + local_index;\n\n    // x holds the N and y holds the M\n    let headIdx = workgroup_id.z;\n    let m = workgroup_id.y * TILE_SIZE;\n    let n = workgroup_id.x * TILE_SIZE;\n    let lm = m + local_id.y;\n    let ln = n + local_id.x;\n\n    let qOffset = ${n.sequenceLength*w} * headIdx + m * K;\n    let kOffset = ${n.kvSequenceLength*w} * headIdx + n * K;\n\n    var value = ${Ge(a,p)};\n    for (var w: u32 = 0u; w < K; w += TILE_SIZE) {\n      if (m + local_id.y < M && w + local_id.x < K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * K + w + local_id.x];\n      }\n      if (n + local_id.y < N && w + local_id.x < K) {\n        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * K + w + local_id.x];\n      }\n      workgroupBarrier();\n\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < K; k++) {\n        value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = headIdx * M * N;\n    if (lm < M && ln < N) {\n      let outputIdx = headOffset + lm * N + ln;\n      output[outputIdx] = ${et("value",p)} * alpha;\n    }\n  }`,V=e.compute({name:"AttentionProbs",shaderCache:{hint:JSON.stringify(n)},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType,gpuDataType:0}],dispatchGroup:A}),getShaderSource:E},{inputs:B,outputs:[-1]})[0];return kl(e,V,n.batchSize*n.numHeads*n.sequenceLength,n.totalSequenceLength),V},Rl=(e,t,r,o)=>{let n=[o.batchSize,o.sequenceLength,o.vHiddenSize],s=W("probs",t.dataType,t.dims),u=W("v",r.dataType,r.dims),d=K("output",t.dataType,n),a=Te(t.dataType),p=12,h={x:Math.ceil(o.vHeadSize/p),y:Math.ceil(o.sequenceLength/p),z:o.batchSize*o.numHeads},$=g=>`\n  const M: u32 = ${o.sequenceLength}u;\n  const N: u32 = ${o.vHeadSize}u;\n  const K: u32 = ${o.totalSequenceLength}u;\n  const numHeads: u32 = ${o.numHeads}u;\n  const TILE_SIZE = ${p}u;\n\n  var<workgroup> tileQ: array<${s.type.storage}, ${p*p}>;\n  var<workgroup> tileK: array<${s.type.storage}, ${p*p}>;\n\n  ${g.declareVariables(s,u,d)}\n\n  @compute @workgroup_size(${p}, ${p}, 1)\n  fn main(@builtin(workgroup_id) workgroup_id : vec3<u32>,\n   @builtin(local_invocation_id) local_id : vec3<u32>, @builtin(local_invocation_index) local_index : u32) {\n   let global_idx = (workgroup_id.z * ${h.x*h.y}u +\n          workgroup_id.y * ${h.x}u + workgroup_id.x) * ${p*p}u + local_index;\n\n   let headIdx = workgroup_id.z;\n   let m = workgroup_id.y * TILE_SIZE + local_id.y;\n   let n = workgroup_id.x * TILE_SIZE + local_id.x;\n\n   let offsetA = headIdx * (M * K) + m * K;\n   let offsetB = headIdx * (N * K) + n;\n\n   var value = ${a}(0);\n   for (var w: u32 = 0u; w < K; w += TILE_SIZE) {\n     if (m < M && w + local_id.x < K) {\n       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];\n     }\n     if (n < N && w + local_id.y < K) {\n       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * N];\n     }\n     workgroupBarrier();\n     for (var k: u32 = 0u; k<TILE_SIZE && w+k < K; k++) {\n       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];\n     }\n     workgroupBarrier();\n   }\n\n   // we need to transpose output from BNSH_v to BSND_v\n   let batchIdx = workgroup_id.z / ${o.numHeads};\n   let currentBatchHeadNumber = workgroup_id.z % ${o.numHeads};\n   let headOffset = (batchIdx * M * ${o.numHeads} + currentBatchHeadNumber) * ${o.vHeadSize};\n   if (m < M && n < N) {\n     let outputIdx = batchIdx * ${o.sequenceLength*o.vHiddenSize} + m * ${o.vHiddenSize}\n       + currentBatchHeadNumber * ${o.vHeadSize} + n;\n     output[outputIdx] = value;\n   }\n  }`;return e.compute({name:"AttentionScore",shaderCache:{hint:JSON.stringify(o)},getRunData:()=>({outputs:[{dims:n,dataType:t.dataType,gpuDataType:0}],dispatchGroup:h}),getShaderSource:$},{inputs:[t,r],outputs:[0]})[0]},Nr=(e,t,r,o,n,s,u,d,a,p,h)=>{let $=Pl(e,t,r,a,p,h);Rl(e,$,o,p)},Bl=(e,t)=>{let r=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],o=Te(e.inputs[0].dataType),n=t.sequenceLength,s=t.inputHiddenSize,u=t.headSize,d=12,a={x:Math.ceil(t.headSize/d),y:Math.ceil(t.sequenceLength/d),z:t.batchSize*t.numHeads},p=()=>`\n  const M: u32 = ${n}u;\n  const K: u32 = ${s}u;\n  const N: u32 = ${u}u;\n  const numHeads: u32 = ${t.numHeads};\n  const ldb = ${t.hiddenSize+t.hiddenSize+t.vHiddenSize}u;\n  const TILE_SIZE = ${d}u;\n\n  var<workgroup> tileInput: array<${o}, ${d*d}>;\n  var<workgroup> tileWeightQ: array<${o}, ${d*d}>;\n  var<workgroup> tileWeightK: array<${o}, ${d*d}>;\n  var<workgroup> tileWeightV: array<${o}, ${d*d}>;\n\n  @group(0) @binding(0) var<storage, read> input: array<${o}>;\n  @group(0) @binding(1) var<storage, read> weight: array<${o}>;\n  @group(0) @binding(2) var<storage, read> bias: array<${o}>;\n  @group(0) @binding(3) var<storage, read_write> outputQ: array<${o}>;\n  @group(0) @binding(4) var<storage, read_write> outputK: array<${o}>;\n  @group(0) @binding(5) var<storage, read_write> outputV: array<${o}>;\n\n  @compute @workgroup_size(${d}, ${d}, 1)\n  fn main(@builtin(workgroup_id) workgroup_id : vec3<u32>,\n   @builtin(local_invocation_id) local_id : vec3<u32>, @builtin(local_invocation_index) local_index : u32) {\n   let global_idx = (workgroup_id.z * ${a.x*a.y}u +\n          workgroup_id.y * ${a.x}u + workgroup_id.x) * ${d*d}u + local_index;\n\n    let batchIndex = workgroup_id.z / ${t.numHeads};\n    let headNumber = workgroup_id.z % ${t.numHeads};\n    let m = workgroup_id.y * TILE_SIZE + local_id.y;\n    let n = workgroup_id.x * TILE_SIZE + local_id.x;\n\n    let inputOffset = batchIndex * (M * K) + m * K;\n    let biasOffsetQ = headNumber * ${t.headSize};\n    let biasOffsetK = ${t.hiddenSize} + biasOffsetQ;\n    let biasOffsetV = ${t.hiddenSize} + biasOffsetK;\n\n    var valueQ = ${o}(0);\n    var valueK = ${o}(0);\n    var valueV = ${o}(0);\n    for (var w: u32 = 0u; w < K; w += TILE_SIZE) {\n      if (m < M && w + local_id.x < K) {\n        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];\n      }\n      if (n < N && w + local_id.y < K) {\n        let offset = n + (w + local_id.y) * ldb;\n        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];\n        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];\n        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];\n      }\n      workgroupBarrier();\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < K; k++) {\n        let inputTileOffset = TILE_SIZE * local_id.y + k;\n        let weightTileOffset = TILE_SIZE * k + local_id.x;\n        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];\n        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];\n        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = (m * N + n) % ${t.headSize};\n    valueQ += bias[headOffset + biasOffsetQ];\n    valueK += bias[headOffset + biasOffsetK];\n    valueV += bias[headOffset + biasOffsetV];\n\n    let offset = workgroup_id.z * M * N;\n    if (m < M && n < N) {\n      let outputIdx = offset + m * N + n;\n      outputQ[outputIdx] = valueQ;\n      outputK[outputIdx] = valueK;\n      outputV[outputIdx] = valueV;\n    }\n  }`,h=[e.inputs[0],e.inputs[1],e.inputs[2]];return e.compute({name:"AttentionPrepare",shaderCache:{hint:JSON.stringify(t)},getRunData:()=>({outputs:[{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:a}),getShaderSource:p},{inputs:h,outputs:[-1,-1,-1]})},ba=(e,t)=>{let r=Ol(e.inputs,t),[o,n,s]=Bl(e,r);return Nr(e,o,n,s,e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t)}});var Hr=q(()=>{});var wa=q(()=>{Hr()});var va,$a=q(()=>{va="1.17.0"});var Sa,Pn,xa=q(()=>{$a();Sa="warning",Pn={wasm:{},webgl:{},webgpu:{},versions:{common:va},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);Sa=e}},get logLevel(){return Sa}};Object.defineProperty(Pn,"logLevel",{enumerable:!0})});var Ut,Ca=q(()=>{xa();Ut=Pn});var Ia=q(()=>{});var Aa=q(()=>{Gr()});var _a=q(()=>{});var Ea=q(()=>{Gr()});var Gr=q(()=>{Ia();Aa();_a();Ea()});var Lr=q(()=>{Gr()});var Oa=q(()=>{Hr();Lr()});var ka=q(()=>{Oa()});var Pa=q(()=>{});var Ra=q(()=>{Hr();Lr()});var Ba=q(()=>{Ra()});var Fr=q(()=>{wa();Ca();ka();Lr();Pa();Ba()});var zl,Vl,Wl,Ma,Da=q(()=>{"use strict";Fr();ye();Oe();be();zl=(e,t)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let r=(o,n,s)=>{let u=n.length;if(u!==o.length)throw new Error(`${s}: num dimensions != ${u}`);n.forEach((d,a)=>{if(d!==o[a])throw new Error(`${s}: dim[${a}] do not match`)})};if(e[0].dims.length>1){let o=t.format==="NHWC"?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);r(e[1].dims,o,"Invalid input scale"),r(e[2].dims,o,"Invalid input B"),r(e[3].dims,o,"Invalid input mean"),r(e[4].dims,o,"Invalid input var")}else r(e[1].dims,[1],"Invalid input scale"),r(e[2].dims,[1],"Invalid input B"),r(e[3].dims,[1],"Invalid input mean"),r(e[4].dims,[1],"Invalid input var")},Vl=(e,t)=>{let{epsilon:r,spatial:o,format:n}=t,s=e[0].dims,u=o?Ye(s[s.length-1]):1,d=n==="NHWC"&&s.length>1?u:1,a=D.size(s)/u,p=ke(s.length)&&o,h=p?s.length:s,$=W("x",e[0].dataType,e[0].dims,u),g=W("scale",e[1].dataType,e[1].dims,d),w=W("bias",e[2].dataType,e[2].dims,d),b=W("inputMean",e[3].dataType,e[3].dims,d),v=W("inputVar",e[4].dataType,e[4].dims,d),I=K("y",e[0].dataType,h,u),x=()=>{let B="";if(o)B=`let cOffset = ${s.length===1?"0u":n==="NHWC"?`outputIndices[${s.length-1}] / ${u}`:"outputIndices[1]"};`;else if(n==="NCHW")B=`\n            ${I.indicesSet("outputIndices","0","0")}\n            let cOffset = ${I.indicesToOffset("outputIndices")};`;else{B=`var cIndices = ${g.type.indices}(0);\n                       cIndices[0] = outputIndices[${s.length-1}];`;for(let E=1;E<g.rank;E++)B+=`cIndices[${E}] = outputIndices[${E}];`;B+=`let cOffset = ${g.indicesToOffset("cIndices")};`}return B},A=B=>`\n  const epsilon = ${r};\n  ${B.registerUniform("outputSize","u32").declareVariables($,g,w,b,v,I)}\n  ${B.mainStart()}\n  ${B.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n    var outputIndices = ${I.offsetToIndices(`global_idx * ${u}`)};\n    ${x()}\n    let scale = ${g.getByOffset("cOffset")};\n    let bias = ${w.getByOffset("cOffset")};\n    let inputMean = ${b.getByOffset("cOffset")};\n    let inputVar = ${v.getByOffset("cOffset")};\n    let x = ${$.getByOffset("global_idx")};\n    let value = (x - inputMean) / sqrt(inputVar + epsilon) * scale + bias;\n    ${I.setByOffset("global_idx","value")}\n  }`;return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${o}_${u}`,inputDependencies:p?["rank","type","type","type","type"]:void 0},getShaderSource:A,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:p?[{type:"uint32",data:a},...ne(s)]:[{type:"uint32",data:a}]})}},Wl=e=>X(e),Ma=(e,t)=>{let{inputs:r,outputCount:o}=e,n=Wl({...t,outputCount:o});if(Ut.webgpu.validateInputContent&&zl(r,n),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(Vl(r,n))}});var Ul,Nl,za,Va=q(()=>{"use strict";ye();be();Ul=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Nl=e=>{let t=e[0].dims,r=e[0].dims[2],o=D.size(t)/4,n=e[0].dataType,s=W("input",n,t,4),u=W("bias",n,[r],4),d=W("residual",n,t,4),a=K("output",n,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:h=>`\n  const channels = ${r}u / 4;\n  ${h.declareVariables(s,u,d,a)}\n\n  ${h.mainStart()}\n    ${h.guardAgainstOutOfBoundsWorkgroupSizes(o)}\n    let value = ${s.getByOffset("global_idx")}\n      + ${u.getByOffset("global_idx % channels")} + ${d.getByOffset("global_idx")};\n    ${a.setByOffset("global_idx","value")}\n  }`}},za=e=>{Ul(e.inputs),e.compute(Nl(e.inputs))}});var Hl,_e,Wa,Ua,Na,Ha,Ga,La,Fa,ja,qa,Gl,Ka,Ya,Za,Xa,jr,Qa,qr,Ja,ei,ti,ri,ni,oi,ai,ii,si,ui,li,di,ci,pi,mi,fi,hi,Rn=q(()=>{"use strict";ze();ye();Oe();be();Hl=(e,t,r,o,n,s)=>{let u=Math.ceil(t/4),d="";typeof n=="string"?d=`${n}(a)`:d=n("a");let a=W("inputData",r,[u],4),p=K("outputData",o,[u],4);return`\n      ${e.registerUniform("vec_size","u32").declareVariables(a,p)}\n\n  ${s??""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n\n    let a = ${a.getByOffset("global_idx")};\n    ${p.setByOffset("global_idx",d)}\n  }`},_e=(e,t,r,o,n,s=e.dataType)=>({name:t,shaderCache:{hint:n,inputDependencies:["type"]},getShaderSource:u=>Hl(u,D.size(e.dims),e.dataType,s,r,o),getRunData:u=>({outputs:[{dims:e.dims,dataType:s}],dispatchGroup:{x:Math.ceil(D.size(u[0].dims)/64/4)},programUniforms:[{type:"uint32",data:Math.ceil(D.size(e.dims)/4)}]})}),Wa=e=>{e.compute(_e(e.inputs[0],"Abs","abs"))},Ua=e=>{e.compute(_e(e.inputs[0],"Acos","acos"))},Na=e=>{e.compute(_e(e.inputs[0],"Acosh","acosh"))},Ha=e=>{e.compute(_e(e.inputs[0],"Asin","asin"))},Ga=e=>{e.compute(_e(e.inputs[0],"Asinh","asinh"))},La=e=>{e.compute(_e(e.inputs[0],"Atan","atan"))},Fa=e=>{e.compute(_e(e.inputs[0],"Atanh","atanh"))},ja=e=>X(e),qa=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute \'to\' from \'Cast\' operator): ${t.to}`)}e.compute(_e(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},Gl=e=>{let t=e.length>=2?e[1].getFloat32Array()[0]:zr,r=e.length>=3?e[2].getFloat32Array()[0]:Vr;return X({min:t,max:r})},Ka=(e,t)=>{let r=e.inputs.length===1?t:Gl(e.inputs),o=Te(e.inputs[0].dataType);e.compute(_e(e.inputs[0],"Clip",n=>`clamp(${n}, clip_min_, clip_max_)`,`\n    const clip_min_: vec4<${o}> = vec4(${o}(${r.min}));\n    const clip_max_: vec4<${o}> = vec4(${o}(${r.max}));\n`,r.cacheKey),{inputs:[0]})},Ya=e=>{e.compute(_e(e.inputs[0],"Ceil","ceil"))},Za=e=>{e.compute(_e(e.inputs[0],"Cos","cos"))},Xa=e=>{e.compute(_e(e.inputs[0],"Cosh","cosh"))},jr=e=>X(e),Qa=(e,t)=>{e.compute(_e(e.inputs[0],"Elu",r=>`elu_vf32(${r})`,`\n  const elu_alpha_: f32 = f32(${t.alpha});\n\n  fn elu_f32(a: f32) -> f32 {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<f32>) -> vec4<f32> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,t.cacheKey))},qr=(e,t="f32")=>`\nconst r0: ${t} = 0.3275911;\nconst r1: ${t} = 0.254829592;\nconst r2: ${t} = -0.284496736;\nconst r3: ${t} = 1.421413741;\nconst r4: ${t} = -1.453152027;\nconst r5: ${t} = 1.061405429;\n\nfn erf_vf32(v: ${e}) -> ${e} {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,Ja=e=>{let t=Te(e.inputs[0].dataType);e.compute(_e(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,qr(`vec4<${t}>`,t)))},ei=e=>{e.compute(_e(e.inputs[0],"Exp","exp"))},ti=e=>{e.compute(_e(e.inputs[0],"Floor","floor"))},ri=e=>{let t=Te(e.inputs[0].dataType);e.compute(_e(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,qr(`vec4<${t}>`,t)))},ni=(e,t)=>{e.compute(_e(e.inputs[0],"LeakyRelu",r=>`select(leaky_relu_alpha_ * ${r}, ${r}, ${r} >= vec4<f32>(0.0))`,`const leaky_relu_alpha_: f32 = f32(${t.alpha});`,t.cacheKey))},oi=e=>{e.compute(_e(e.inputs[0],"Not",t=>`!${t}`))},ai=e=>{e.compute(_e(e.inputs[0],"Neg",t=>`-${t}`))},ii=e=>{e.compute(_e(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},si=e=>{e.compute(_e(e.inputs[0],"Relu",t=>`select(vec4<f32>(0.0), ${t}, ${t} > vec4<f32>(0.0))`))},ui=e=>{e.compute(_e(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},li=e=>{e.compute(_e(e.inputs[0],"Sin","sin"))},di=e=>{e.compute(_e(e.inputs[0],"Sinh","sinh"))},ci=e=>{e.compute(_e(e.inputs[0],"Sqrt","sqrt"))},pi=e=>{e.compute(_e(e.inputs[0],"Tan","tan"))},mi=e=>{e.compute(_e(e.inputs[0],"Tanh","tanh"))},fi=(e,t)=>(e.compute(_e(e.inputs[0],"ThresholdedRelu",r=>`select(vec4<f32>(0.0), ${r}, ${r} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_: vec4<f32> = vec4<f32>(${t.alpha});`,t.cacheKey)),0),hi=e=>{e.compute(_e(e.inputs[0],"Log","log"))}});var Fl,jl,gi,yi=q(()=>{"use strict";ye();be();Rn();Fl=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},jl=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=W("input",e[0].dataType,e[0].dims,4),o=W("bias",e[0].dataType,[e[0].dims[2]],4),n=K("output",e[0].dataType,t,4),s=D.size(t)/4,u=Te(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:a=>`\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${e[0].dims[2]/4/2}u;\n\n  ${a.declareVariables(r,o,n)}\n\n  ${qr(`vec4<${u}>`,u)}\n\n  ${a.mainStart()}\n    ${a.guardAgainstOutOfBoundsWorkgroupSizes(s)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${n.setByOffset("global_idx","valueLeft * geluRight")}\n  }`}},gi=e=>{Fl(e.inputs),e.compute(jl(e.inputs))}});var ql,Kl,pt,bi,wi,vi,$i,Si,xi,Ci,Ii,Ai,Ti,_i=q(()=>{"use strict";ze();ye();be();ql=(e,t,r,o,n,s,u,d,a,p,h,$,g)=>{let w,b;typeof d=="string"?w=b=(P,z)=>`${d}((${P}),(${z}))`:typeof d=="function"?w=b=d:(w=d.scalar,b=d.vector);let v=$?t.length:t,I=$?r.length:r,x=$?o.length:o,A=K("outputData",h,x,4),B=W("aData",a,v,4),E=W("bData",p,I,4),V;if(n)if(s){let P=D.size(t)===1,z=D.size(r)===1,U=t.length>0&&t[t.length-1]%4===0,F=r.length>0&&r[r.length-1]%4===0;P||z?V=A.setByOffset("global_idx",b(P?`${B.type.value}(${B.getByOffset("0")}.x)`:B.getByOffset("global_idx"),z?`${E.type.value}(${E.getByOffset("0")}.x)`:E.getByOffset("global_idx"))):V=`\n            let outputIndices = ${A.offsetToIndices("global_idx * 4u")};\n            let offsetA = ${B.broadcastedIndicesToOffset("outputIndices",A)};\n            let offsetB = ${E.broadcastedIndicesToOffset("outputIndices",A)};\n            ${A.setByOffset("global_idx",b(u||U?B.getByOffset("offsetA / 4u"):`${B.type.value}(${B.getByOffset("offsetA / 4u")}[offsetA % 4u])`,u||F?E.getByOffset("offsetB / 4u"):`${E.type.value}(${E.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}\n          `}else V=A.setByOffset("global_idx",b(B.getByOffset("global_idx"),E.getByOffset("global_idx")));else{if(!s)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let P=(z,U,F="")=>{let te=`aData[indexA${U}][componentA${U}]`,R=`bData[indexB${U}][componentB${U}]`;return`\n            let outputIndices${U} = ${A.offsetToIndices(`global_idx * 4u + ${U}u`)};\n            let offsetA${U} = ${B.broadcastedIndicesToOffset(`outputIndices${U}`,A)};\n            let offsetB${U} = ${E.broadcastedIndicesToOffset(`outputIndices${U}`,A)};\n            let indexA${U} = offsetA${U} / 4u;\n            let indexB${U} = offsetB${U} / 4u;\n            let componentA${U} = offsetA${U} % 4u;\n            let componentB${U} = offsetB${U} % 4u;\n            ${z}[${U}] = ${F}(${w(te,R)});\n          `};h===9?V=`\n            var data = vec4<u32>(0);\n            ${P("data",0,"u32")}\n            ${P("data",1,"u32")}\n            ${P("data",2,"u32")}\n            ${P("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:V=`\n            ${P("outputData[global_idx]",0)}\n            ${P("outputData[global_idx]",1)}\n            ${P("outputData[global_idx]",2)}\n            ${P("outputData[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(B,E,A)}\n\n        ${g??""}\n\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${V}\n      }`},Kl=(e,t,r,o,n,s,u=r.dataType)=>{let d=!D.areEqual(r.dims,o.dims),a=r.dims,p=D.size(r.dims),h=!1,$=!1,g=[d];if(d){let b=st.calcShape(r.dims,o.dims,!1);if(!b)throw new Error("Can\'t perform binary op on the given tensors");a=b,p=D.size(a);let v=D.size(r.dims)===1,I=D.size(o.dims)===1,x=r.dims.length>0&&r.dims[r.dims.length-1]%4===0,A=o.dims.length>0&&o.dims[o.dims.length-1]%4===0;g.push(v),g.push(I),g.push(x),g.push(A);let B=1;for(let E=1;E<a.length;E++){let V=r.dims[r.dims.length-E]??1,P=o.dims[o.dims.length-E]??1;if(V===P)B*=V;else break}B%4===0?($=!0,h=!0):(v||I||x||A)&&(h=!0)}else h=!0;g.push(h);let w=ke(r.dims.length)&&ke(o.dims.length)&&ke(a.length);return{name:e,shaderCache:{hint:t+g.map(b=>b.toString()).join("_"),inputDependencies:w?["rank","rank"]:["dims","dims"]},getShaderSource:b=>ql(b,r.dims,o.dims,a,h,d,$,n,r.dataType,o.dataType,u,w,s),getRunData:()=>({outputs:[{dims:a,dataType:u}],dispatchGroup:{x:Math.ceil(p/64/4)},programUniforms:w?[{type:"uint32",data:Math.ceil(D.size(a)/4)},...ne(r.dims),...ne(o.dims),...ne(a)]:[{type:"uint32",data:Math.ceil(D.size(a)/4)}]})}},pt=(e,t,r,o,n,s)=>{e.compute(Kl(t,n??"",e.inputs[0],e.inputs[1],r,o,s))},bi=e=>{pt(e,"Add",(t,r)=>`${t}+${r}`)},wi=e=>{pt(e,"Div",(t,r)=>`${t}/${r}`)},vi=e=>{pt(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},$i=e=>{pt(e,"Mul",(t,r)=>`${t}*${r}`)},Si=e=>{let t=W("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;pt(e,"Pow",{scalar:(o,n)=>`pow_custom(${o},${n})`,vector:(o,n)=>`pow_vector_custom(${o},${n})`},`\n    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {\n      if (b == ${t}(0.0)) {\n        return ${t}(1.0);\n      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {\n        return ${t}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {\n      // TODO: implement vectorized pow\n      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `)},xi=e=>{pt(e,"Sub",(t,r)=>`${t}-${r}`)},Ci=e=>{pt(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},Ii=e=>{pt(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},Ai=e=>{pt(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},Ti=e=>{pt(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}});var Zl,Xl,Ql,Jl,Ei,Oi,ki=q(()=>{"use strict";ye();Oe();be();Zl=e=>{if(!e||e.length<1)throw new Error("too few inputs");let t=e[0].dataType,r=e[0].dims.length;for(let o of e){if(o.dataType!==t)throw new Error("input tensors should be one type");if(o.dims.length!==r)throw new Error("input tensors should have the same shape")}},Xl=(e,t)=>`\n  fn calculateInputIndex(index: u32) -> u32 {\n    let sizeInConcatAxis = array<u32, ${e}u>(${t});\n    for (var i: u32 = 0u; i < ${e}; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${e}u;\n  }`,Ql=(e,t)=>{let r=e.length,o=[];for(let n=0;n<r;++n){let s=t.setByOffset("global_idx",e[n].getByIndices("indices"));r===1?o.push(s):n===0?o.push(`if (inputIndex == ${n}u) { ${s} }`):n===r-1?o.push(`else { ${s} }`):o.push(`else if (inputIndex == ${n}) { ${s} }`)}return o.join(`\n`)},Jl=(e,t)=>{let r=e[0].dims.slice();if(t>=r.length||t<-1*r.length)throw new Error("axis specified for concat doesn\'t match input dimensionality");let o=t<0?r.length+t:t,n=r.slice(0);for(let E=1;E<e.length;E++){let V=e[E].dims.slice();for(let P=0;P<r.length;P++)if(P===o)n[o]+=V[P];else if(r[P]!==V[P])throw new Error("non concat dimensions must match")}let s=D.size(n),u=new Array(e.length),d=new Array(e.length),a=e[0].dataType,p=0,h=[],$=[],g=[],w=[{type:"uint32",data:s}];for(let E=0;E<e.length;++E)p+=e[E].dims[o],u[E]=p,g.push(ke(e[E].dims.length)),$.push(g[E]?e[E].dims.length:e[E].dims),d[E]=W(`input${E}`,a,$[E]),h.push(g[E]?"rank":"dims"),w.push({type:"uint32",data:u[E]});for(let E=0;E<e.length;++E)g[E]&&w.push(...ne(e[E].dims));let b=ke(n.length);b&&w.push(...ne(n));let v=b?n.length:n,I=K("output",a,v),x=I.indicesGet("indices",o),A=Array.from(Array(u.length).keys()).map(E=>`uniforms.sizeInConcatAxis${E}`).join(","),B=E=>`\n\n  ${(()=>{E.registerUniform("outputSize","u32");for(let V=0;V<e.length;V++)E.registerUniform(`sizeInConcatAxis${V}`,"u32");return E.declareVariables(...d,I)})()}\n\n  ${Xl(u.length,A)}\n\n  ${E.mainStart()}\n    ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n    var indices = ${I.offsetToIndices("global_idx")};\n\n    let inputIndex = calculateInputIndex(${x});\n    if (inputIndex != 0u) {\n      let sizeInConcatAxis = array<u32, ${u.length}u>(${A});\n      ${x} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${Ql(d,I)}\n  }`;return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:h},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:w}),getShaderSource:B}},Ei=(e,t)=>{Zl(e.inputs),e.compute(Jl(e.inputs,t.axis))},Oi=e=>X({axis:e.axis})});var $t,Kr,Ot=q(()=>{"use strict";ye();$t=(e,t)=>{switch(e.activation){case"Relu":return{activationFunction:"",applyActivation:`value = max(value, ${t}(0.0));`};case"Sigmoid":return{activationFunction:"",applyActivation:`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`};case"Clip":return{activationFunction:`const clip_min_=${t}(${e.clipMin});const clip_max_=${t}(${e.clipMax});`,applyActivation:"value = clamp(value, clip_min_, clip_max_);"};default:return{activationFunction:"",applyActivation:""}}},Kr=e=>{let t=e?.activation||"";if(t==="Clip"){let[r,o]=e?.activation_params||[zr,Vr];return{activation:t,clipMax:o,clipMin:r,activationCacheKey:`${t}:${r},${o}`}}return{activation:t,activationCacheKey:t}}});var We,Yr,Zr=q(()=>{"use strict";We=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},Yr=e=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      `});var Xr,Bn=q(()=>{"use strict";Xr=e=>`\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));\n}\n`});var ed,td,lr,Pi,rd,dr,nd,Qr,cr=q(()=>{"use strict";ye();be();Ot();Zr();ed=(e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `,td=(e,t)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`,lr=(e,t,r="f32",o,n=!1,s=32,u=!1,d=32)=>{let a=t[1]*e[1],p=t[0]*e[0],h=n?a:s,$=n?s:a,g=h/t[0],w=s/t[1];if(!((n&&g===4&&e[1]===4||!n&&(g===3||g===4))&&h%t[0]===0&&s%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${n} is true, innerElementSize ${g} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${g} must be 3 or 4.\n  tileAWidth ${h} must be divisible by workgroupSize[0]${t[0]}. tileInner ${s} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub: array<array<vec${g}<${r}>, ${h/g}>, ${$}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${r}>, ${p/e[0]}>, ${s}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${g};\nconst tileInner = ${s};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${u?"0":"i32(globalId.z)"};\n  ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n  let globalRowStart = i32(workgroupId.y) * ${a};\n\n  let numTiles = ${u?`${Math.ceil(d/s)}`:"(uniforms.dimInner - 1) / tileInner + 1"};\n  var kStart = ${u?`i32(globalId.z) * ${d}`:"0"};\n\n  var acc: array<vec4<${r}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${w};\n  for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${ed(n,o)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${w}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${o?", batchIndices":""});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${g===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${td(n,g)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`},Pi=(e,t)=>e?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${t?", batchIndices":""});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${t?", batchIndices":""});\n            `,rd=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",dr=(e,t,r="f32",o,n=!1,s=32,u=!1,d=32,a=!1)=>{let p=e[1]*t[1],h=e[0]*t[0],$=n?p:s,g=n?s:p;if(!(g%t[1]===0&&$%t[0]===0&&s%t[1]===0))throw new Error(`tileAHight ${g} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${$} must be divisible by workgroupSize[0]${t[0]}, tileInner ${s} must be divisible by workgroupSize[1]${t[1]}`);let w=g/t[1],b=$/t[0],v=s/t[1],I=a?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${p};\n    let globalColStart = i32(workgroupId.x) * ${h};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${g}; inputRow = inputRow + ${t[1]}) {\n        for (var inputCol = localCol; inputCol < ${$}; inputCol = inputCol + ${t[0]}) {\n          ${Pi(n,o)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${t[1]}) {\n            for (var inputCol = localCol; inputCol < ${h}; inputCol = inputCol + ${t[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${o?", batchIndices":""});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${r}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${n?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${p};\n\nlet tileRowA = i32(localId.y) * ${w};\nlet tileColA = i32(localId.x) * ${b};\nlet tileRowB = i32(localId.y) * ${v};\n// Loop over shared dimension.\nfor (var t = 0; t < numTiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${w}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${b}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${Pi(n,o)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${v}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${o?", batchIndices":""});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${r}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${rd(n)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<${r}, ${$}>, ${g}>;\n  var<workgroup> mm_Bsub : array<array<${r}, ${h}>, ${s}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${s};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${u?"0":"i32(globalId.z)"};\n    ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n    let numTiles = ${u?`${Math.ceil(d/s)}`:"(uniforms.dimInner - 1) / tileInner + 1"};\n    var kStart = ${u?`i32(globalId.z) * ${d}`:"0"};\n\n    var acc : array<array<${r}, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${I}\n  }\n`},nd=(e,t,r,o,n,s=!1)=>{let[u,d,a]=n,[p,h,$,g]=o,w=_n(u,a),b=_n(d,a),v=Te(o[0].type.tensor),I=()=>{let B=h.rank,E=p.rank,V=`var aIndices: ${h.type.indices};`;for(let P=B-2-1,z=E-1;P>=0;P--,z--)V+=`\naIndices[${P}] = ${E>1?`batchIndices[${z}]`:"batchIndices"};`;return w.forEach(P=>{V+=`\naIndices[${P}] = 0;`}),V+=`\naIndices[${B-2}] = u32(row);\n                   aIndices[${B-1}] = u32(colIn);`,V},x=()=>{let B=$.rank,E=p.rank,V=`var bIndices: ${$.type.indices};`;for(let P=B-2-1,z=E-1;P>=0;P--,z--)V+=`\nbIndices[${P}] = ${E>1?`batchIndices[${z}]`:"batchIndices"};`;return b.forEach(P=>{V+=`\nbIndices[${P}] = 0;`}),V+=`\nbIndices[${B-2}] = u32(row);\n                   bIndices[${B-1}] = u32(colIn);`,V};return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${p.type.indices}) -> ${We(e,v)} {\n      var value = ${We(e,v)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dimAOuter && col < uniforms.dimInner)\n      {\n        ${I()}\n        value = ${h.getByIndices("aIndices")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${p.type.indices}) -> ${We(e,v)} {\n      var value = ${We(e,v)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dimInner && col < uniforms.dimBOuter)\n      {\n        ${x()}\n        value = ${$.getByIndices("bIndices")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${We(e,v)}) {\n      let col = colIn * ${e};\n      if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${t?`value = value + ${s?"bias[colIn]":`${We(e,v)}(bias[row])`};`:""}\n        ${r}\n        ${g.setByIndices("vec3<u32>(coords)","value")}\n      }\n    }\n    `},Qr=(e,t,r,o,n=!1)=>{let s=e[0].dims,u=e[1].dims,d=s.slice(0,-2),a=u.slice(0,-2),p=o?o.slice(0,-2):r.slice(0,-2),h=ke(p.length),$=h?p.length:p,g=No("batchDims",e[0].dataType,$,1),w=D.size(p),b=s[s.length-2],v=s[s.length-1],I=u[u.length-1],x=v%4===0&&I%4===0,A=b<=8?[4,1,1]:[4,4,1],B=[8,8,1],E=[Math.ceil(I/B[0]/A[0]),Math.ceil(b/B[1]/A[1]),Math.ceil(w/B[2]/A[2])],V=Te(e[0].dataType),P=x?4:1,z=[...d,b,v/P],U=ke(z.length),F=U?z.length:z,te=[...a,v,I/P],R=ke(te.length),j=R?te.length:te,pe=[w,b,I/P],Q=W("a",e[0].dataType,F,P),$e=W("b",e[1].dataType,j,P),Y=K("result",e[0].dataType,pe.length,P),Se=[Q,$e],Ie=[{type:"int32",data:b},{type:"int32",data:I},{type:"int32",data:v}];h&&Ie.push(...ne(p)),U&&Ie.push(...ne(z)),R&&Ie.push(...ne(te));let Ae=[];Ae.push(U?"rank":"dims"),Ae.push(R?"rank":"dims");let he=e.length>2,{activationFunction:nt,applyActivation:He}=$t(t,Y.type.value),Le=nd(P,he,He,[g,Q,$e,Y],[d,a,p],n);if(he){let de=n?P:1;Se.push(W("bias",e[2].dataType,e[2].dims.length,de)),Ie.push(...ne(e[2].dims)),Ae.push("rank")}Ie.push(...ne(pe));let L=de=>`\n  ${de.registerUniform("dimAOuter","i32").registerUniform("dimBOuter","i32").registerUniform("dimInner","i32").registerInternalVariables(g).declareVariables(...Se,Y)}\n  ${nt}\n  ${Le}\n  ${x?lr(A,B,V,g):dr(A,B,V,g)}\n                   `;return{name:"MatMul",shaderCache:{hint:t.activationCacheKey+`${A}${t.activation}${t.clipMax}${t.clipMin}${x}${he}${n}`,inputDependencies:Ae},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]},programUniforms:Ie}),getShaderSource:L}}});var od,Ri,Bi=q(()=>{"use strict";vt();be();Ot();Zr();Bn();cr();od=(e,t,r,o,n=!1,s,u=4,d=4,a=4,p="f32")=>{let h=R=>{switch(R){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${p}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${R} is not supported.`)}},$=R=>{switch(R){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${R} is not supported.`)}},g=e?`\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    `:`\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    `,w=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,b=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",v=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",I=e?"row":"col",x=e?"col":"row",A=`\n    let inChannels = i32(uniforms.w_shape[2]);\n    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n    let outRow = ${I} / outWidth;\n    let outCol = ${I} % outWidth;\n\n    let WRow = ${x} / (filterDims[1] * inChannels);\n    let WCol = ${x} / inChannels % filterDims[1];\n    let xRow = outRow * stride[0] + dilation[0] * WRow - pad[0];\n    let xCol = outCol * stride[1] + dilation[1] * WCol - pad[1];\n    let xCh = ${x} % inChannels;\n    var resData = ${We(u,p)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the \'same\' padding type.\n    if (xRow >= 0 && xRow < ${b} && xCol >= 0 && xCol < ${v}) {\n      ${g}\n      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));\n      ${h(u)}\n    }\n    return resData;`,B=e?t&&o?`\n    let col = colIn * ${u};\n    ${A}`:`\n    let col = colIn * ${u};\n    if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n      ${A}\n    }\n    return ${We(u,p)}(0.0);`:o&&r?`\n    let col = colIn * ${u};\n    ${A}`:`\n    let col = colIn * ${u};\n    if (row < uniforms.dimInner && col < uniforms.dimBOuter) {\n      ${A}\n    }\n    return ${We(u,p)}(0.0);`,E=`${$(d)}`,V=We(a,p),P=e?We(u,p):We(d,p),z=e?We(d,p):We(u,p),{activationFunction:U,applyActivation:F}=$t(s,V);return`\n    ${U}\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${P} {\n      ${e?B:E}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${z} {\n      ${e?E:B}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${V}) {\n      let col = colIn * ${a};\n      if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${w}\n      ${Yr(n)}\n      ${F}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`},Ri=(e,t,r,o,n,s,u,d)=>{let a=t.format==="NHWC",p=a?e[0].dims[3]:e[0].dims[1],h=r[0],$=a?r[2]:r[3],g=a?r[1]:r[2],w=a?r[3]:r[1],b=a&&(p%4===0||p%3===0)&&w%4===0,v=a?w:$*g,I=a?$*g:w,x=[8,8,1],A=o<=8?[4,1,1]:[4,4,1],B=[Math.ceil(v/x[0]/A[0]),Math.ceil(I/x[1]/A[1]),Math.ceil(h/x[2]/A[2])];Pe("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${B}`);let E=b?a&&p%4!==0?3:4:1,V=x[1]*A[1],P=x[0]*A[0],z=Math.max(x[0]*E,x[1]),U=o%V===0,F=n%P===0,te=s%z===0,R=b?[E,4,4]:[1,1,1],j=Te(e[0].dataType),pe=b?4:1,Q=[{type:"int32",data:o},{type:"int32",data:n},{type:"int32",data:s}],$e=W("x",e[0].dataType,e[0].dims.length,E===3?1:E),Y=W("w",e[1].dataType,e[1].dims.length,pe),Se=[$e,Y];Q.push(...ne(e[0].dims)),Q.push(...ne(e[1].dims));let Ie=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${b?`vec4<${j}>`:j}) {\n        result[flatIndex] = ${b?`vec4<${j}>`:j}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${b?`vec4<${j}>`:j}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${b?"/ 4":""}, value);\n      }`;if(u){let he=W("bias",e[2].dataType,e[2].dims.length,pe);Se.push(he),Q.push(...ne(e[2].dims)),Ie+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${b?`vec4<${j}>`:j} {\n          return bias[coords.${a?"w":"y"}${b?"/ 4":""}];\n        }`}let Ae=K("result",e[0].dataType,r.length,pe);return Q.push(...ne(r)),{name:"Conv2DMatMul",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:B[0],y:B[1],z:B[2]},programUniforms:Q}),getShaderSource:he=>`\n        ${Xr("uniforms.result_strides")}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${he.registerUniform("dimAOuter","i32").registerUniform("dimBOuter","i32").registerUniform("dimInner","i32").declareVariables(...Se,Ae)}\n        const filterDims : vec2<i32> = vec2<i32>(${t.kernelShape[0]}, ${t.kernelShape[1]});\n        const pad : vec2<i32> = vec2<i32>(${t.pads[0]}, ${t.pads[1]});\n        const stride : vec2<i32> = vec2<i32>(${t.strides[0]}, ${t.strides[1]});\n        const dilation : vec2<i32> = vec2<i32>(${t.dilations[0]}, ${t.dilations[1]});\n        ${Ie}\n        ${od(a,U,F,te,u,t,R[0],R[1],R[2],j)}\n            ${b?lr(A,x,j,void 0,!a,z):dr(A,x,j,void 0,!a,z,!1,void 0,d)}`}}});var Mn,Mi=q(()=>{"use strict";ye();be();zn();Ot();Mn=(e,t,r)=>{let o=e.length>2,n=o?"value += b[output_channel];":"",s=e[0].dims,u=e[1].dims,d=u[0]/t.group,a=t.format==="NHWC",p=Dn(s,u,t.dilations,t.pads,t.strides,a),h=D.size(p),$=K("output",e[0].dataType,p),{activationFunction:g,applyActivation:w}=$t(t,$.type.value),b=W("x",e[0].dataType,s),v=W("w",e[1].dataType,u),I=[b,v];o&&I.push(W("b",e[2].dataType,e[2].dims));let x=A=>`\n  const strides: vec2<u32> = vec2(${t.strides[0]}u, ${t.strides[1]}u);\n  const pads: vec2<u32> = vec2(${t.pads[0]}u, ${t.pads[1]}u);\n\n  ${A.declareVariables(...I,$)}\n\n  ${g}\n\n  ${A.mainStart()}\n    ${A.guardAgainstOutOfBoundsWorkgroupSizes(h)}\n\n    let outputIndices = ${$.offsetToIndices("global_idx")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${a?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${a?1:2}], outputIndices[${a?2:3}]) * strides - pads;\n    let group_id: u32 = output_channel / ${d}u;\n\n    var value: ${$.type.value} = ${$.type.value}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < ${u[1]}u; wInChannel++) {\n      let input_channel = group_id * ${u[1]}u + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < ${u[2]}u; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * ${t.dilations[0]}u;\n\n        if (xHeight < 0u || xHeight >= ${s[a?1:2]}u) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < ${u[3]}u; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * ${t.dilations[1]}u;\n          if (xWidth < 0u || xWidth >= ${s[a?2:3]}u) {\n            continue;\n          }\n\n          let xVal = ${a?b.get("batch","xHeight","xWidth","input_channel"):b.get("batch","input_channel","xHeight","xWidth")};\n          let wVal = ${v.get("output_channel","wInChannel","wHeight","wWidth")};\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${n}\n    ${w}\n    ${$.setByOffset("global_idx","value")}\n  }`;return{name:"GroupedConv",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:r?r(p):p,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)}}),getShaderSource:x}}});var Dn,Di,ad,zi,Vn,id,sd,Wn,zn=q(()=>{"use strict";ye();Oe();Bi();cr();Mi();Ot();Wt();Dn=(e,t,r,o,n,s)=>{let u=e[0],d=e.slice(s?1:2,s?3:4),a=d.length,p=t[0],$=t.slice(2).map((b,v)=>b+(b-1)*(r[v]-1)),w=d.map((b,v)=>b+o[v]+o[v+a]).map((b,v)=>Math.floor((b-$[v]+n[v])/n[v]));return w.splice(0,0,u),w.splice(s?3:1,0,p),w},Di=[2,3,1,0],ad=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[1]*t.group;if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let n=e[0].dims.length-2;if(t.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(t.strides.length!==n)throw new Error(`strides should be ${n}D`);if(t.pads.length!==n*2)throw new Error(`pads should be ${n*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},zi=(e,t)=>{let r=e.kernelShape.slice();for(let s=2;s<t[1].dims.length;++s)r[s-2]===0&&(r[s-2]=t[1].dims[s]);let o=e.pads.slice();Et.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,o,e.format==="NHWC",e.autoPad);let n=Object.assign({},e);return Object.assign(n,{kernelShape:r,pads:o,cacheKey:e.cacheKey}),n},Vn=e=>{let t=Kr(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],n=e.dilations,s=e.group,u=e.kernel_shape,d=e.pads,a=e.strides,p=e.w_is_const();return X({autoPad:o,format:r,dilations:n,group:s,kernelShape:u,pads:d,strides:a,wIsConst:p,...t})},id=(e,t,r)=>{let o=zi(r,t);if(r.group!==1){e.compute(Mn(t,o));return}let n=r.format==="NHWC",s=t.length===3,u=t[0].dims[n?1:2],d=t[0].dims[n?2:3],a=t[0].dims[n?3:1],p=t[1].dims[2],h=t[1].dims[3],$=Dn(t[0].dims,t[1].dims,r.dilations,o.pads,r.strides,n),g=$[n?1:2],w=$[n?2:3],b=$[n?3:1],v=n&&p===u&&h===d&&r.pads[0]===0&&r.pads[1]===0;if(v||p===1&&h===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let P=$[0],z,U,F,te=[];if(n){let R=e.kernelCustomData.wT??e.compute(tt(t[1],Di),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=R),v){let j=u*d*a;z=t[0].reshape([1,P,j]),U=R.reshape([1,j,b]),F=[1,P,b]}else z=t[0].reshape([P,u*d,a]),U=R.reshape([1,a,b]),F=[P,g*w,b];te.push(z),te.push(U)}else z=t[0].reshape([P,a,u*d]),U=t[1].reshape([1,b,a]),F=[P,b,g*w],te.push(U),te.push(z);s&&te.push(t[2]),e.compute(Qr(te,o,$,F,n),{inputs:te});return}let I=!0,x=e.kernelCustomData.wT??e.compute(tt(t[1],Di),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=x);let A=[t[0],x];s&&A.push(t[2]);let B=n?g*w:b,E=n?b:g*w,V=p*h*a;e.compute(Ri(A,o,$,B,E,V,s,I),{inputs:A})},sd=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&o.push(e.inputs[2]);let n=[0,t.pads[0],0,t.pads[1]],s=[1].concat(t.strides),u=[1].concat(t.dilations),d=[1].concat(t.kernelShape),a=zi({...t,pads:n,strides:s,dilations:u,kernelShape:d},o);e.compute(Mn(o,a,p=>r?[p[0],p[2],p[3]]:[]))},Wn=(e,t)=>{ad(e.inputs,t),e.inputs[0].dims.length===3?sd(e,t):id(e,e.inputs,t)}});var ud,Vi,Wi=q(()=>{"use strict";vt();be();Ot();Zr();Bn();cr();ud=(e,t=!1,r,o=4)=>{let n=We(o,"f32"),s=A=>{switch(A){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];\n            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];\n            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];\n            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];\n            return vec4<f32>(v0, v1, v2, v3);\n            `;default:throw new Error(`innerElementSize ${A} is not supported.`)}},u=e?`\n      let coord = vec4<i32>(batch, iXR, iXC, xCh);\n      `:`\n      let coord = vec4<i32>(batch, xCh, iXR, iXC);\n      `,d=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,a=e?"outBackprop[1]":"outBackprop[2]",p=e?"outBackprop[2]":"outBackprop[3]",h=e?"row":"col",$=e?"col":"row",g=`\n      let inChannels = ${e?"outBackprop[3]":"outBackprop[1]"};\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      let outRow = ${h} / outWidth;\n      let outCol = ${h} % outWidth;\n\n      let WRow = ${$} / (filterDims[1] * inChannels);\n      let WCol = ${$} / inChannels % filterDims[1];\n      let xR = f32(outRow - pads[0] + dilation[0] * WRow) / f32(strides[0]);\n      let xC = f32(outCol - pads[1] + dilation[1] * WCol) / f32(strides[1]);\n      if (xR < 0.0 || xR >= f32(${a}) || fract(xR) > 0.0) {\n        return ${n}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(${p}) || fract(xC) > 0.0) {\n        return ${n}(0.0);\n      }\n      let iXR = i32(xR);\n      let iXC = i32(xC);\n      let xCh = ${$} % inChannels;\n      ${u}\n      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${o}];`,w=e?`\n      let col = colIn * ${o};\n      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n        ${g}\n      }\n      return ${n}(0.0);`:`\n      let col = colIn * ${o};\n      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {\n        ${g}\n      }\n      return ${n}(0.0);`,b=`\n      let col = colIn * ${o};\n      let inChannels = ${e?"outBackprop[3]":"outBackprop[1]"};\n      let coordX = filterDims.x - 1 - row / (filterDims[1] * inChannels);\n      let coordY = filterDims.y - 1 - (row / inChannels) % filterDims[1];\n      if (${e?"row < uniforms.dimInner && col < uniforms.dimBOuter":"row < uniforms.dimInner && col < uniforms.dimAOuter"}  && coordX >= 0 && coordY >= 0) {\n        let rowInner = row % inChannels;\n        let coord = vec4<i32>(coordX, coordY, col, rowInner);\n        ${s(o)}\n      }\n      return ${n}(0.0);\n      `,{activationFunction:v,applyActivation:I}=$t(r,n);return`\n      ${v}\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${n} {\n    ${e?w:b}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${n} {\n    ${e?b:w}\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${n}) {\n    let col = colIn * ${o};\n    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {\n      var value = valueInput;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${d}\n      ${Yr(t)}\n      ${I}\n      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${o}] = value;\n    }\n  }`},Vi=(e,t,r,o,n,s,u,d)=>{let a=t.format==="NHWC",p=a?e[0].dims[3]:e[0].dims[1],h=r[0],$=a?r[2]:r[3],g=a?r[1]:r[2],w=a?r[3]:r[1],b=a?p%4===0&&w%4===0:$%4===0&&w%4===0,v=a?w:$*g,I=a?$*g:w,x=b?[8,8,1]:[v<=4||I<=4?4:16,v>4&&I<=4?4:16,1],A=b?[4,4,1]:[v<=4?1:4,v>4&&I<=4?1:4,1],B=[Math.ceil(v/x[0]/A[0]),Math.ceil(I/x[1]/A[1]),Math.ceil(h/x[2]/A[2])];Pe("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${B}`);let E=b?4:1,V=Math.max(x[0]*E,x[1]),P=b?4:1,z=[{type:"int32",data:o},{type:"int32",data:n},{type:"int32",data:s}],U=W("x",e[0].dataType,e[0].dims.length,P),F=W("w",e[1].dataType,e[1].dims.length,1),te=K("result",e[0].dataType,r.length,P),R=[U,F];z.push(...ne(e[0].dims)),z.push(...ne(e[1].dims));let j="";if(u){let pe=W("bias",e[2].dataType,e[2].dims.length,P);R.push(pe),z.push(...ne(e[2].dims)),j+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${b?"vec4<f32>":"f32"} {\n          return bias[coords.${a?"w":"y"}${b?"/ 4":""}];\n        }`}return z.push(...ne(r)),{name:"Conv2DTransposeMatMul",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:B[0],y:B[1],z:B[2]},programUniforms:z}),getShaderSource:pe=>`\n        ${Xr("uniforms.result_strides")}\n        ${pe.registerUniform("dimAOuter","i32").registerUniform("dimBOuter","i32").registerUniform("dimInner","i32").declareVariables(...R,te)};\n        const outBackprop : vec4<i32> = vec4<i32>(${e[0].dims.join(",")});\n        const filterDims : vec2<i32> = vec2<i32>(${t.kernelShape[a?1:2]}, ${t.kernelShape[a?2:3]});\n        const effectiveFilterDims : vec2<i32> = filterDims + vec2<i32>(\n              ${t.dilations[0]<=1?0:(t.kernelShape[a?1:2]-1)*(t.dilations[0]-1)},\n              ${t.dilations[1]<=1?0:(t.kernelShape[a?2:3]-1)*(t.dilations[1]-1)});\n        const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${t.pads[0]+t.pads[2]})/2,\n                                         i32(effectiveFilterDims[1]) - 1 - (${t.pads[1]+t.pads[3]})/2);\n        const strides : vec2<i32> = vec2<i32>(${t.strides[0]}, ${t.strides[1]});\n        const dilation : vec2<i32> = vec2<i32>(${t.dilations[0]}, ${t.dilations[1]});\n        const dimAOuter : i32 = ${o};\n        const dimBOuter : i32 = ${n};\n        const dimInner : i32 = ${s};\n        ${j}\n        ${ud(a,u,t,E)}\n        ${b?lr(A,x,"f32",void 0,!a,V):dr(A,x,"f32",void 0,!a,V,!1,void 0,d)}`}}});var ld,Un,Ui=q(()=>{"use strict";vt();ye();be();ld=(e,t,r,o,n,s,u=!1,d)=>{let a=r.format==="NHWC",p=a?1:2,h=a?2:3,$=a?3:1,g=D.size(o),w=u?2:1,b=r.group,v=t[1].dims,I=v[0]/b,x=v[1],A=`\n  fn setOutputAtIndex(flatIndex : u32, value : ${u?`vec4<${d}>`:d}) {\n    result[flatIndex] = ${u?`vec4<${d}>`:d}(value);\n  }`;n&&(A+=`\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${u?`vec4<${d}>`:d} {\n      return bias[coords.${a?"w":"y"}${u?"/ 4":""}];\n    }`);let B=u?4:1,E=W("W",t[1].dataType,t[1].dims,B),V=W("Dy",t[0].dataType,t[0].dims,B),P=[V,E];n&&P.push(W("bias",t[2].dataType,[o[$]],B));let z=K("result",t[0].dataType,o,B),U=`{\n        let batch: u32 = ${s?"global_id.z":"workgroup_id.z"} / outShape[1];\n        let r = ${s?"global_id.z":"workgroup_id.z"} % outShape[1];\n        let c = ${s?"global_id.y":"workgroup_id.y"} * ${w};\n        let d1: u32 = ${s?"global_id.x":"workgroup_id.x"} * 4;\n\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(pads);\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd: array<vec4<${d}>, ${w}>;\n        for (var i = 0; i < ${w}; i++) {\n          dotProd[i] = vec4<${d}>(0.0);\n        }\n        for (var wR: u32 = 0; wR < filterDims[0]; wR = wR + 1) {\n          var dyR = (${d}(dyCorner.x) + ${d}(wR)) / ${d}(strides.x);\n          let wRPerm = filterDims[0] - 1 - wR;\n          if (dyR < 0.0 || dyR >= ${d}(outBackprop[1]) ||\n              fract(dyR) > 0.0 || wRPerm < 0) {\n            continue;\n          }\n          let idyR: u32 = u32(dyR);\n\n          for (var wC: u32 = 0; wC < filterDims[1]; wC = wC + 1) {\n            let dyC = (${d}(dyCorner.y) + ${d}(wC)) / ${d}(strides.y);\n            let dyC2 = (${d}(dyCorner.y) + 1.0 + ${d}(wC)) / ${d}(strides.y);\n            let wCPerm = filterDims[1] - 1 - wC;\n            if (wCPerm < 0) {\n              continue;\n            }\n            var bDyCVal = true;\n            var bDyCVal2 = true;\n            if (dyC < 0.0 || dyC >= ${d}(outBackprop[2]) ||\n                fract(dyC) > 0.0) {\n              bDyCVal = false;\n            }\n            if (dyC2 < 0.0 || dyC2 >= ${d}(outBackprop[2]) ||\n                fract(dyC2) > 0.0) {\n              bDyCVal2 = false;\n            }\n\n            let idyC: u32 = u32(dyC);\n            let idyC2: u32 = u32(dyC2);\n            if (bDyCVal && bDyCVal2) {\n              let d2Length = outBackprop[3];\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${E.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${E.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${E.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${E.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${V.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${d}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n\n                xValue =  ${V.get("batch","idyR","idyC2","d2")};\n\n                dotProd[1] = dotProd[1] + vec4<${d}>(dot(xValue, wValue0),\n                                                    dot(xValue, wValue1),\n                                                    dot(xValue, wValue2),\n                                                    dot(xValue, wValue3));\n              }\n            } else if (bDyCVal) {\n              let d2Length = outBackprop[${$}];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${E.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${E.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${E.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${E.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${V.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${d}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n              }\n            } else if (bDyCVal2) {\n              let d2Length = outBackprop[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${E.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${E.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${E.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${E.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${V.get("batch","idyR","idyC2","d2")};\n                let tmpval = vec4<${d}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[1] = dotProd[1] + tmpval;\n              }\n            }\n          }\n        }\n\n        for (var i: u32 = 0; i < ${w}; i = i + 1) {\n          let value = dotProd[i] + ${n?"bias[c+i]":"0.0"};\n          ${z.set("batch","r","c + i","d1","value")};\n        }\n      }`,F=`\n          let outputIndices = ${z.offsetToIndices("global_idx")};\n          let batch = ${z.indicesGet("outputIndices",0)};\n          let d1 = ${z.indicesGet("outputIndices",$)};\n          let r = ${z.indicesGet("outputIndices",p)};\n          let c = ${z.indicesGet("outputIndices",h)};\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - pads;\n          let dyRCorner = dyCorner.x;\n          let dyCCorner = dyCorner.y;\n          let groupId = d1 / ${x};\n          let wOutChannel = d1 - groupId * ${x};\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n          // ? = to be determined. : = across all values in that axis.\n          var dotProd = 0.0;\n          for (var wR: u32 = 0; wR < effectiveFilterDims.x; wR = wR + 1) {\n            if (wR % dilations.x != 0) {\n              continue;\n            }\n            let dyR = (${d}(dyRCorner) + ${d}(wR)) / ${d}(strides[0]);\n            let wRPerm = filterDims.x - 1 - wR / dilations.x;\n            if (dyR < 0.0 || dyR >= ${d}(outBackprop[${p}]) || fract(dyR) > 0.0 ||\n                wRPerm < 0) {\n              continue;\n            }\n            let idyR: u32 = u32(dyR);\n\n            for (var wC: u32 = 0; wC < effectiveFilterDims.y; wC = wC + 1) {\n              if (wC % dilations.y != 0) {\n                continue;\n              }\n              let dyC = (${d}(dyCCorner) + ${d}(wC)) / ${d}(strides.y);\n              let wCPerm = filterDims.y - 1 - wC / dilations.y;\n              if (dyC < 0.0 || dyC >= ${d}(outBackprop[${h}]) ||\n                  fract(dyC) > 0.0 || wCPerm < 0) {\n                continue;\n              }\n              let idyC: u32 = u32(dyC);\n              var inputChannel = groupId * ${I};\n              for (var d2: u32 = 0; d2 < ${I}; d2 = d2 + 1) {\n                let xValue = ${a?V.get("batch","idyR","idyC","inputChannel"):V.get("batch","inputChannel","idyR","idyC")};\n                let wValue = ${E.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};\n                dotProd = dotProd + xValue * wValue;\n                inputChannel = inputChannel + 1;\n              }\n            }\n          }\n          let value = dotProd + ${n?"bias[d1]":"0.0"};\n          ${z.setByOffset("global_idx","value")};\n        `;return`\n  ${e.declareVariables(...P,z)}\n  ${A}\n  const outShape : vec4<u32> = vec4<u32>(${o.join(",")});\n  const outBackprop : vec4<u32> = vec4<u32>(${t[0].dims.join(",")});\n  const strides : vec2<u32> = vec2<u32>(${r.strides[0]}, ${r.strides[1]});\n  const filterDims : vec2<u32> = vec2<u32>(${r.kernelShape[a?1:2]}, ${r.kernelShape[a?2:3]});\n  const dilations : vec2<u32> = vec2<u32>(${r.dilations[0]}, ${r.dilations[1]});\n  const effectiveFilterDims : vec2<u32> = filterDims + vec2<u32>(\n          ${r.dilations[0]<=1?0:(r.kernelShape[a?1:2]-1)*(r.dilations[0]-1)},\n          ${r.dilations[1]<=1?0:(r.kernelShape[a?2:3]-1)*(r.dilations[1]-1)});\n  const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${r.pads[0]+r.pads[2]})/2,\n                                     i32(effectiveFilterDims[1]) - 1 - (${r.pads[1]+r.pads[3]})/2);\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(g)};\n  ${u?U:F}}`},Un=(e,t,r)=>{let o=e.length>2,n=t.outputShape,s=D.size(n),u=[Math.ceil(s/64),1,1];Pe("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${u}`);let d=Te(e[0].dataType);return{name:"ConvTranspose2D",shaderCache:{hint:t.cacheKey},getRunData:()=>({dispatchGroup:{x:u[0],y:u[1],z:u[2]},outputs:[{dims:r?r(n):n,dataType:e[0].dataType}]}),getShaderSource:a=>ld(a,e,t,n,o,u[1]===1&&u[2]===1,!1,d)}}});var dd,cd,pd,Ni,Hi,md,fd,hd,gd,Gi,Li=q(()=>{"use strict";Oe();Wi();Ui();Ot();Wt();dd=(e,t,r,o,n,s)=>(e-1)*t+r+(o-1)*n+1-s,cd=(e,t,r,o,n)=>{let s=Math.floor(e/2);t==="SAME_UPPER"?(r[o]=s,r[n]=e-s):t==="SAME_LOWER"&&(r[o]=e-s,r[n]=s)},pd=(e,t,r,o,n,s,u,d,a,p)=>{let h=e.length-2,$=p.length===0;if(a.length===0)for(let b=0;b<h;++b)a.push(0);let g=e[0],w=t[d?3:1]*n;for(let b=0,v=e.length-h-(d?1:0);b<h;++b,++v){let I=e[v],x=$?I*u[b]:p[b],A=dd(I,u[b],s[b],t[v],r[b],x);cd(A,o,s,b,b+h),$&&p.push(u[b]*(I-1)+a[b]+(t[v]-1)*r[b]+1-s[b]-s[b+h])}p.splice(0,0,g),p.splice(d?3:1,0,w)},Ni=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((g,w)=>g*w,1)===0){r.length=0;for(let g=2;g<t[1].dims.length;++g)r.push(t[1].dims[g])}let o=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(o?3:1,0,t[1].dims[1]);let n=e.pads.slice(),s=e.outputShape.slice(),u=e.outputPadding.slice(),d=t[0].dims,a=e.dilations.slice();if(a.reduce((g,w)=>g+w,0)===0){let g=t[0].dims.length-2;a=new Array(g).fill(1)}let p=e.strides.slice();if(p.reduce((g,w)=>g+w,0)===0){let g=t[0].dims.length-2;p=new Array(g).fill(1)}pd(d,r,a,e.autoPad,e.group,n,p,o,u,s);let h=Object.assign({},e),$=e.cacheKey+[r.join("n,"),n.join(","),p.join(","),u.join(","),s.join(","),a.join(",")].join("_");return Object.assign(h,{kernelShape:r,pads:n,outputPadding:u,outputShape:s,dilations:a,strides:p,cacheKey:$}),h},Hi=e=>{let t=Kr(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],n=e.dilations,s=e.group,u=e.kernelShape,d=e.pads,a=e.strides,p=e.wIsConst(),h=e.outputPadding,$=e.outputShape;return X({autoPad:o,format:r,dilations:n,group:s,kernelShape:u,outputPadding:h,outputShape:$,pads:d,strides:a,wIsConst:p,...t})},md=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[0];if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let n=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==n))throw new Error("invalid bias");let s=e[0].dims.length-2;if(t.dilations.reduce((h,$)=>h+$,0)>0&&t.dilations.length!==s)throw new Error(`dilations should be ${s}D`);if(t.strides.reduce((h,$)=>h+$,0)>0&&t.strides.length!==s)throw new Error(`strides should be ${s}D`);if(t.pads.reduce((h,$)=>h+$,0)>0&&t.pads.length!==s*2)throw new Error(`pads should be ${s*2}D`);if(t.outputPadding.length!==s&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${s}D`);if(t.kernelShape.reduce((h,$)=>h+$,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},fd=[2,3,1,0],hd=(e,t,r)=>{let o=Ni(r,t),n=r.format==="NHWC",s=o.outputShape,u=s[n?3:1],d=t[0].dims[n?3:1];if(o.group!==1||u===1&&d===1){e.compute(Un(t,o));return}let a=s[n?1:2],p=s[n?2:3],h=t[1].dims[2],$=t[1].dims[3],g=n?a*p:u,w=n?u:a*p,b=h*$*d,v=!0,I=e.kernelCustomData.wT??e.compute(tt(t[1],fd),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=I);let x=[t[0],I],A=t.length===3;A&&(!n&&t[2].dims.length===1?x.push(t[2].reshape([t[2].dims[0],1,1])):x.push(t[2])),e.compute(Vi(x,o,s,g,w,b,A,v),{inputs:x})},gd=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];o.length===3&&o.push(e.inputs[2]);let n=t.kernelShape;(n.length===0||n[0]===0)&&(n=[e.inputs[1].dims[2]]);let s=t.dilations;(s.length===0||s[0]===0)&&(s=[1]);let u=t.strides;(u.length===0||u[0]===0)&&(u=[1]);let d=t.pads;d.length===0&&(d=[0,0]),d=[0,d[0],0,d[1]],u=[1].concat(u),s=[1].concat(s),n=[1].concat(n);let a=Ni({...t,pads:d,strides:u,dilations:s,kernelShape:n},o);e.compute(Un(o,a,p=>r?[p[0],p[2],p[3]]:[p[0],p[1],p[3]]))},Gi=(e,t)=>{md(e.inputs,t),e.inputs[0].dims.length===3?gd(e,t):hd(e,e.inputs,t)}});var yd,Fi,ji,qi=q(()=>{"use strict";ze();ye();Oe();be();yd=(e,t,r,o)=>{let n=D.size(t),s=t.length,u=W("input",e,s),d=K("output",e,s),a=r.dataType===6?r.getInt32Array()[0]:Number(r.getBigInt64Array()[0]),p=D.normalizeAxis(a,s),h=$=>{let g=` i32(${u.indicesGet("inputIndices","uniforms.axis")}) `,w=s===1?"i32(uniforms.input_shape)":"i32(uniforms.input_shape[uniforms.axis])",b=o.reverse?g+(o.exclusive?" + 1":""):"0",v=o.reverse?w:g+(o.exclusive?"":" + 1");return`\n                ${$.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(u,d)}\n                ${$.mainStart()}\n                  ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n                  var inputIndices = ${d.offsetToIndices("global_idx")};\n                  var sum = 0.0;\n                  let first : i32 = ${b};\n                  let last : i32 = ${v};\n                  for (var i : i32 = first; i < last; i++) {\n                    ${u.indicesSet("inputIndices","uniforms.axis","u32(i)")};\n                    sum = sum + ${u.getByIndices("inputIndices")};\n                  }\n                  ${d.setByOffset("global_idx","sum")};\n                }`};return{name:"CumSum",shaderCache:{hint:o.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:[{type:"uint32",data:n},{type:"int32",data:p},...ne(t),...ne(t)]}),getShaderSource:h}},Fi=(e,t)=>{let r=e.inputs[0].dims,o=e.inputs[0].dataType,n=e.inputs[1];e.compute(yd(o,r,n,t),{inputs:[0]})},ji=e=>{let t=e.exclusive===1,r=e.reverse===1;return X({exclusive:t,reverse:r})}});var Nn,Jr,Ki,bd,wd,Hn,Gn,Yi,vd,Zi,Xi,Qi=q(()=>{"use strict";ye();Oe();be();Nn="[a-zA-Z]|\\\\.\\\\.\\\\.",Jr="("+Nn+")+",Ki="^"+Jr+"$",bd="("+Jr+",)*"+Jr,wd="^"+bd+"$",Hn=class{constructor(t=-1){this.symbolToIndices=new Map,this.inputIndex=t}addSymbol(t,r){let o=this.symbolToIndices.get(t);o===void 0?o=[r]:o.push(r),this.symbolToIndices.set(t,o)}},Gn=class{constructor(t,r){this.equation=r;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[o,n]=r.includes("->")?r.split("->",2):[r,""];if(!o.match(RegExp(wd)))throw new Error("Invalid LHS term");if(o.split(",").forEach((d,a)=>{let p=t[a].dims.slice();if(!d.match(RegExp(Ki)))throw new Error("Invalid LHS term");let h=this.processTerm(d,!0,p,a);this.lhs.push(h)}),n==="")n+=[...this.symbolToInfo.entries()].filter(([d,a])=>a.count===1||d==="...").map(([d])=>d).join("");else if(!n.match(RegExp(Jr)))throw new Error("Invalid RHS");n.match(RegExp(Nn,"g"))?.forEach(d=>{if(d==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let a=this.symbolToInfo.get(d);if(a===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(a.dimValue)}}),this.rhs=this.processTerm(n,!1,this.outputDims)}addSymbol(t,r,o){let n=this.symbolToInfo.get(t);if(n!==void 0){if(n.dimValue!==r&&n.count!==1)throw new Error("Dimension mismatch");n.count++,n.inputIndices.push(o)}else n={count:1,dimValue:r,inputIndices:[o]};this.symbolToInfo.set(t,n)}processTerm(t,r,o,n=-1){let s=o.length,u=!1,d=[],a=0;if(!t.match(RegExp(Ki))&&!r&&t!=="")throw new Error("Invalid LHS term");let p=t.match(RegExp(Nn,"g")),h=new Hn(n);return p?.forEach(($,g)=>{if($==="..."){if(u)throw new Error("Only one ellipsis is allowed per input term");u=!0;let w=s-p.length+1;if(w<0)throw new Error("Ellipsis out of bounds");if(d=o.slice(a,a+w),this.hasEllipsis){if(this.ellipsisDims.length!==d.length||this.ellipsisDims.toString()!==d.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=d;else throw new Error("Ellipsis must be specified in the LHS");for(let b=0;b<d.length;b++){let v=String.fromCharCode("0".charCodeAt(0)+b);h.addSymbol(v,g+b),this.addSymbol(v,o[a++],n)}}else h.addSymbol($,g+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol($,o[a++],n)}),h}},Yi=e=>e+"_max",vd=(e,t,r,o,n)=>{let u=t.map((w,b)=>e[b]?w.length:w).map((w,b)=>W(`input${b}`,r,w)),d=D.size(n),a=ke(n.length),p=a?n.length:n,h=K("output",r,p),$=[...o.symbolToInfo.keys()].filter(w=>!o.rhs.symbolToIndices.has(w)),g=w=>{let b=[],v="var prod = 1.0;",I="var sum = 0.0;",x="sum += prod;",A=[],B=[],E=[],V=[],P=o.symbolToInfo.size===o.rhs.symbolToIndices.size;o.symbolToInfo.forEach((U,F)=>{if(o.rhs.symbolToIndices.has(F)){let te=o.rhs.symbolToIndices.get(F)?.[0];te!==void 0&&o.lhs.forEach((R,j)=>{if(U.inputIndices.includes(j)){let pe=R.symbolToIndices.get(F);if(pe===void 0)throw new Error("Invalid symbol error");pe.forEach(Q=>{b.push(`${u[j].indicesSet(`input${j}Indices`,Q,h.indicesGet("outputIndices",te))}`)})}})}else o.lhs.forEach((te,R)=>{if(U.inputIndices.includes(R)){let j=te.symbolToIndices.get(F);if(j===void 0)throw new Error("Invalid symbol error");j.forEach(pe=>{A.push(`${u[R].indicesSet(`input${R}Indices`,pe,`${F}`)}`)}),V.push(`prod *= ${u[R].getByIndices(`input${R}Indices`)};`)}}),B.push(`for(var ${F}: u32 = 0; ${F} < uniforms.${Yi(F)}; ${F}++) {`),E.push("}")});let z=P?[...b,`let sum = ${u.map((U,F)=>U.getByIndices(`input${F}Indices`)).join(" * ")};`]:[...b,I,...B,...A,v,...V,x,...E];return`\n            ${w.registerUniforms($.map(U=>({name:`${Yi(U)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...u,h)}\n\n            ${w.mainStart()}\n            ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n            var outputIndices = ${h.offsetToIndices("global_idx")};\n            ${u.map((U,F)=>`var input${F}Indices: ${u[F].type.indices};`).join(`\n`)}\n            ${z.join(`\n`)};\n            ${h.setByOffset("global_idx","sum")};\n          }`};return{name:"Einsum",shaderCache:{hint:o.equation,inputDependencies:e.map(w=>w?"rank":"dims")},getRunData:()=>{let w=$.filter(v=>o.symbolToInfo.has(v)).map(v=>({type:"uint32",data:o.symbolToInfo.get(v)?.dimValue||0}));w.push({type:"uint32",data:d});let b=t.filter((v,I)=>e[I]).map((v,I)=>[...ne(v)]).reduce((v,I)=>v.concat(I),w);return a&&b.push(...ne(n)),{outputs:[{dims:n,dataType:r}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:b}},getShaderSource:g}},Zi=(e,t)=>{let r=new Gn(e.inputs,t.equation),o=e.inputs.map((u,d)=>ke(u.dims.length)),n=r.outputDims,s=e.inputs.map((u,d)=>u.dims);e.compute(vd(o,s,e.inputs[0].dataType,r,n))},Xi=e=>{let t=e.equation.replace(/\\s+/g,"");return X({equation:t})}});var $d,Ji,Sd,xd,es,ts=q(()=>{"use strict";ze();ye();be();$d=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=r.length<t.length?0:r.length-t.length,n=t.length<r.length?0:t.length-r.length;for(;o<r.length&&n<t.length;++o,++n)if(r[o]!==t[n]&&r[o]!==1&&t[n]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Ji=(e,t)=>{let r=e.length-t.length,o=[];for(let n=0;n<r;++n)o.push(e[n]);for(let n=0;n<t.length;++n)o.push(t[n]===1?e[n+r]:t[n]);return o},Sd=(e,t)=>e.length>t.length?Ji(e,t):Ji(t,e),xd=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=Sd(t,r),n=e[0].dataType,s=n===9?4:1,u=D.size(o)/s,d=ke(t.length),a=ke(o.length),p=$=>{let g=d?t.length:t,w=a?o.length:o,b=W("input",n,g,s),v=K("output",n,w,s),I;if(n===9){let x=(A,B,E="")=>`\n          let outputIndices${B} = ${v.offsetToIndices(`outputOffset + ${B}u`)};\n          let offset${B} = ${b.broadcastedIndicesToOffset(`outputIndices${B}`,v)};\n          let index${B} = offset${B} / 4u;\n          let component${B} = offset${B} % 4u;\n          ${A}[${B}] = ${E}(${b.getByOffset(`index${B}`)}[component${B}]);\n        `;I=`\n        let outputOffset = global_idx * ${s};\n        var data = vec4<u32>(0);\n        ${x("data",0,"u32")}\n        ${x("data",1,"u32")}\n        ${x("data",2,"u32")}\n        ${x("data",3,"u32")}\n        ${v.setByOffset("global_idx","data")}\n      }`}else I=`\n        let outputIndices = ${v.offsetToIndices("global_idx")};\n        let inputOffset = ${b.broadcastedIndicesToOffset("outputIndices",v)};\n        ${v.setByOffset("global_idx",b.getByOffset("inputOffset"))}\n      }`;return`\n    ${$.registerUniform("vec_size","u32").declareVariables(b,v)}\n    ${$.mainStart()}\n    ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n    ${I}`},h=[{type:"uint32",data:u}];return d&&h.push(...ne(t)),a&&h.push(...ne(o)),{name:"Expand",shaderCache:{hint:`${o.length}`,inputDependencies:[d?"rank":"dims"]},getShaderSource:p,getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:h})}},es=e=>{$d(e.inputs),e.compute(xd(e.inputs),{inputs:[0]})}});var Cd,Id,rs,ns,os=q(()=>{"use strict";ze();ye();Oe();be();Cd=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},Id=(e,t)=>{let r=e[0].dims,o=e[1].dims,n=r.length,s=D.normalizeAxis(t.axis,n),u=r.slice(0);u.splice(s,1,...o);let d=r[s],a=e[0].dataType===9?4:1,p=D.size(u)/a,h=ke(e[0].dims.length),$=h?e[0].dims.length:e[0].dims,g=ke(e[1].dims.length),w=g?e[1].dims.length:e[1].dims,b=ke(u.length),v=b?u.length:u,I=[{type:"uint32",data:p},{type:"int32",data:d},{type:"uint32",data:s}];h&&I.push(...ne(e[0].dims)),g&&I.push(...ne(e[1].dims)),b&&I.push(...ne(u));let x=[];x.push(h?"rank":"dims"),x.push(g?"rank":"dims");let A=B=>{let E=W("data",e[0].dataType,$,a),V=W("inputIndices",e[1].dataType,w),P=K("output",e[0].dataType,v,a),z=F=>{let te=o.length,R=`var indicesIndices${F}  = ${V.type.indices}(0);`;for(let j=0;j<te;j++)R+=`${te>1?`indicesIndices${F}[${j}]`:`indicesIndices${F}`} = ${u.length>1?`outputIndices${F}[uniforms.axis + ${j}]`:`outputIndices${F}`};`;R+=`\n          var idx${F} = ${V.getByIndices(`indicesIndices${F}`)};\n          if (idx${F} < 0) {\n            idx${F} = idx${F} + uniforms.axisDimLimit;\n          }\n          var dataIndices${F} = ${E.type.indices}(0);\n        `;for(let j=0,pe=0;j<n;j++)j===s?(R+=`${n>1?`dataIndices${F}[${j}]`:`dataIndices${F}`} = u32(idx${F});`,pe+=te):(R+=`${n>1?`dataIndices${F}[${j}]`:`dataIndices${F}`} = ${u.length>1?`outputIndices${F}[${pe}]`:`outputIndices${F}`};`,pe++);return R},U;if(e[0].dataType===9){let F=(te,R,j="")=>`\n          let outputIndices${R} = ${P.offsetToIndices(`outputOffset + ${R}u`)};\n          ${z(R)};\n          let offset${R} = ${E.indicesToOffset(`dataIndices${R}`)};\n          let index${R} = offset${R} / 4u;\n          let component${R} = offset${R} % 4u;\n          ${te}[${R}] = ${j}(${E.getByOffset(`index${R}`)}[component${R}]);\n        `;U=`\n        let outputOffset = global_idx * ${a};\n        var value = vec4<u32>(0);\n        ${F("value",0,"u32")}\n        ${F("value",1,"u32")}\n        ${F("value",2,"u32")}\n        ${F("value",3,"u32")}\n        ${P.setByOffset("global_idx","value")}\n      `}else U=`\n      let outputIndices = ${P.offsetToIndices("global_idx")};\n      ${z("")};\n      let value = ${E.getByIndices("dataIndices")};\n      ${P.setByOffset("global_idx","value")};\n      `;return`\n      ${B.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(E,V,P)}\n      ${B.mainStart()}\n        ${B.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        ${U}\n      }`};return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:x},getRunData:()=>({outputs:[{dims:u,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:I}),getShaderSource:A}},rs=e=>X({axis:e.axis}),ns=(e,t)=>{let r=e.inputs;Cd(r),e.compute(Id(e.inputs,t))}});var Ad,Td,as,is,ss=q(()=>{"use strict";ye();Oe();be();Ad=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and\n                     indices input tensors be of same rank.`)},Td=(e,t)=>{let r=e[0].dims,o=e[0].dataType,n=r.length,s=e[1].dims,u=e[1].dataType,d=D.normalizeAxis(t.axis,n),a=r[d],p=s.slice(0),h=D.size(p),$=W("input",o,n),g=W("indicesInput",u,s.length),w=K("output",o,p.length),b=[{type:"uint32",data:h},{type:"int32",data:a},{type:"uint32",data:d}];return b.push(...ne(r)),b.push(...ne(s)),b.push(...ne(p)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:p,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:b}),getShaderSource:x=>`\n      ${x.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables($,g,w)}\n      ${x.mainStart()}\n      ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n      let outputIndices = ${w.offsetToIndices("global_idx")};\n\n      var idx = ${g.getByOffset("global_idx")};\n      if (idx < 0) {\n        idx = idx + uniforms.axisDimLimit;\n      }\n      var inputIndices = ${$.type.indices}(outputIndices);\n      ${$.indicesSet("inputIndices","uniforms.axis","u32(idx)")};\n      let value = ${$.getByIndices("inputIndices")};\n\n      ${w.setByOffset("global_idx","value")};\n  }`}},as=e=>X({axis:e.axis}),is=(e,t)=>{let r=e.inputs;Ad(r),e.compute(Td(e.inputs,t))}});var _d,Ed,Od,us,ls,ds=q(()=>{"use strict";ye();Oe();be();_d=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},Ed=(e,t,r)=>{if(r.length===0)return"0u";let o=r.length===1&&e!==1||r.length===2&&r[0]!==e,n=r[r.length-1]!==t,s="0u";return o||(s+=`+ m * ${r[r.length-1]}u`),n||(s+="+n"),s},Od=(e,t)=>{let r=e[0].dims.slice(),o=e[1].dims.slice(),[n,s,u]=Dr.getShapeOfGemmResult(r,t.transA,o,t.transB,e.length===3?e[2].dims:void 0),d=[n,s];if(!d)throw new Error("Can\'t use gemm on the given tensors");let a=D.size(d),p="";t.transA&&t.transB?p="value += a[k * M + m] * b[n * K + k];":t.transA&&!t.transB?p="value += a[k * M + m] * b[k * N + n];":!t.transA&&t.transB?p="value += a[m * K + k] * b[n * K + k];":!t.transA&&!t.transB&&(p="value += a[m * K + k] * b[k * N + n];");let h=Te(e[0].dataType),$=t.alpha===1?"":"value *= alpha;",g=e.length===3?`value += beta * c[${Ed(n,s,e[2].dims)}];`:"",w=[`@group(0) @binding(0) var<storage, read> a : array<${h}>;`,`@group(0) @binding(1) var<storage, read> b : array<${h}>;`];e.length===3&&w.push(`@group(0) @binding(2) var<storage, read> c : array<${h}>;`);let b=v=>`\n  const M: u32 = ${n}u;\n  const N: u32 = ${s}u;\n  const K: u32 = ${u}u;\n  const alpha = ${h}(${t.alpha});\n  const beta = ${h}(${t.beta});\n\n  ${w.join(`\n`)}\n  @group(0) @binding(${e.length}) var<storage, read_write> output : array<${h}>;\n\n  ${v.mainStart()}\n    ${v.guardAgainstOutOfBoundsWorkgroupSizes(a)}\n\n    let m = global_id.x / N;\n    let n = global_id.x % N;\n\n    var value = ${h}(0);\n    for (var k: u32 = 0u; k<${u}u; k++) {\n      ${p}\n    }\n\n    ${$}\n    ${g}\n    output[global_id.x] = value;\n\n  }`;return{name:"Gemm",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:d,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)}}),getShaderSource:b}},us=(e,t)=>{_d(e.inputs),e.compute(Od(e.inputs,t))},ls=e=>X(e)});var kd,Pd,Rd,Bd,cs,ps,ms=q(()=>{"use strict";ze();ye();Oe();be();kd={name:"InstanceNormalization"},Pd=(e,t)=>{let r=e[0].dims,o=r,n=2,s=D.sizeToDimension(r,n),u=D.sizeFromDimension(r,n),d=r[1],a=W("x",e[0].dataType,[r[0],r[1],u]),p=W("scale",e[1].dataType,e[1].dims),h=W("bias",e[2].dataType,e[2].dims),$=K("output",e[0].dataType,[r[0],r[1],u]),g=[a,p,h,$],w=a.type.value,b=64,v=I=>`\n\n  const C: u32 = ${d};\n  const normSize: u32 = ${u};\n  const epsilon: f32 = ${t.epsilon};\n  var<workgroup> meanShared : ${w};\n  var<workgroup> squaredNormShared : ${w};\n  var<workgroup> workgroupShared : array<${w}, ${b}>;\n  const workgroupSize = ${b}u;\n  ${I.declareVariables(...g)}\n  ${I.mainStart(b)}\n    let norm = global_idx / workgroupSize;\n    let batch = norm / C;\n    let channel = norm % C;\n    let localIndex = local_id.x;\n\n    // initialize workgroup memory\n    var initial: ${w} = 0;\n    for (var h = localIndex; h < normSize; h += workgroupSize) {\n      initial = initial + ${a.get("batch","channel","h")};\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the mean of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      meanShared = workgroupShared[0] / ${w}(normSize);\n    }\n    workgroupBarrier();\n\n    // reinitialize workgroup memory.\n    initial = 0;\n    for (var h = localIndex; h < normSize; h += workgroupSize) {\n      let deviation =  ${a.get("batch","channel","h")} - meanShared;\n      initial = initial + deviation * deviation;\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the sum of square of deviation of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      squaredNormShared = workgroupShared[0];\n    }\n    workgroupBarrier();\n\n    let invStdDev = 1 / sqrt(squaredNormShared / ${w}(normSize) + epsilon);\n    let channelScale = invStdDev * ${p.getByOffset("channel")};\n    let channelShift = ${h.getByOffset("channel")} - meanShared * channelScale;\n    for (var h = localIndex; h < normSize; h += workgroupSize) {\n      let value = ${a.get("batch","channel","h")} * channelScale + channelShift;\n      ${$.set("batch","channel","h","value")};\n    }\n  }`;return{...kd,shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:s}}),getShaderSource:v}},Rd=(e,t,r,o,n,s,u,d)=>{let a=Ye(u),p=W("input",t.dataType,t.dims,a),h=W("scale",r.dataType,r.dims,a),$=W("bias",o.dataType,o.dims,a),g=64,w=a===1?"vec2f":`mat2x${a}f`,b=a===1?"f32":`vec${a}f`,v=(V,P)=>`${w}(${V}, ${P})`,I=n*u/a,x=Math.ceil(s/g),A=V=>`\n  const H: u32 = ${s};\n  const C: u32 = ${u/a};\n  const imageSize: u32 = ${s*u/a};\n\n  ${V.declareVariables(p)}\n  @group(0) @binding(1) var<storage, read_write> output : array<${w}>;\n\n  ${V.mainStart(g)}\n    let currentImageNumber = global_idx / ${g} / C;\n    let currentChannelNumber = (global_idx / ${g}) % C;\n    let wgId = global_idx % ${g};\n    let wgOffset = wgId * ${x};\n    if (wgOffset >= H) {\n        return;\n    }\n    let wgMax = min(wgOffset + ${x}, H);\n\n    let offset = currentImageNumber * imageSize + currentChannelNumber;\n    var sum = ${Ge("f32",a)};\n    var squaredSum = ${Ge("f32",a)};\n    for (var i: u32 = wgOffset; i < wgMax; i++) {\n        let value = ${b}(input[offset + i * C]);\n        sum += value;\n        squaredSum += value * value;\n    }\n    output[global_idx] = ${v("sum","squaredSum")};\n  }`,B=e.compute({name:"InstanceNormComputeMean",shaderCache:{hint:JSON.stringify({components:a,n,h:s,c:u})},getRunData:()=>({outputs:[{dims:[n,u,g,2],dataType:1}],dispatchGroup:{x:n*u/a}}),getShaderSource:A},{inputs:[t],outputs:[-1]})[0],E=V=>`\n  const H: u32 = ${s};\n  const C: u32 = ${u/a};\n  const imageSize: u32 = ${g*u/a};\n  const epsilon: f32 = ${d};\n\n  @group(0) @binding(0) var<storage, read> input : array<${w}>;\n  @group(0) @binding(1) var<storage, read> scale : array<${h.type.storage}>;\n  @group(0) @binding(2) var<storage, read> bias : array<${$.type.storage}>;\n  @group(0) @binding(3) var<storage, read_write> output : array<${w}>;\n\n  ${V.mainStart()}\n    ${V.guardAgainstOutOfBoundsWorkgroupSizes(I)}\n    let currentImageNumber = global_idx / C;\n    let currentChannelNumber = global_idx % C;\n\n    let offset = currentImageNumber * imageSize;\n    var sum = ${Ge("f32",a)};\n    var squaredSum = ${Ge("f32",a)};\n    for (var i: u32 = 0; i < ${g}; i++) {\n        let value = input[offset + i + currentChannelNumber * ${g}];\n        sum += value[0];\n        squaredSum += value[1];\n    }\n    sum = sum / f32(H);\n    squaredSum = squaredSum / f32(H);\n    let invStdDev = 1 / sqrt(squaredSum - sum * sum + epsilon);\n    let channelScale = invStdDev * ${b}(scale[currentChannelNumber]);\n    let channelShift = ${b}(bias[currentChannelNumber]) - sum * channelScale;\n\n    output[global_idx] = ${v("channelScale","channelShift")};\n  }`;return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:JSON.stringify({components:a,n,h:s,c:u,epsilon:d})},getRunData:()=>({outputs:[{dims:[n,u,2],dataType:1}],dispatchGroup:{x:Math.ceil(I/64)}}),getShaderSource:E},{inputs:[B,r,o],outputs:[-1]})[0]},Bd=(e,t,r)=>{let o=t[0].dims,n=o,s=o[0],u=o[o.length-1],d=D.sizeFromDimension(o,1)/u,a=Ye(u),p=D.size(n)/a,h=W("input",t[0].dataType,t[0].dims,a),$=K("output",t[0].dataType,n,a),g=Te(t[0].dataType),w=a===1?"vec2f":`mat2x${a}f`,b=a===1?g:`vec${a}<${g}>`,v=Rd(e,t[0],t[1],t[2],s,d,u,r.epsilon),I=x=>`\n  const H: u32 = ${d};\n  const C: u32 = ${u/a};\n\n  @group(0) @binding(0) var<storage, read> input : array<${h.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scaleInput : array<${w}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${$.type.storage}>;\n\n  ${x.mainStart()}\n    let currentImageNumber = global_idx / (C * H);\n    let currentChannelNumber = global_idx % C;\n\n    let scaleOffset = currentImageNumber * C + currentChannelNumber;\n    let scale = scaleInput[scaleOffset];\n    output[global_idx] = fma(input[global_idx], ${b}(scale[0]), ${b}(scale[1]));\n  }`;e.compute({name:"InstanceNormalization",shaderCache:{hint:`${r.cacheKey}`},getRunData:()=>({outputs:[{dims:n,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)}}),getShaderSource:I},{inputs:[t[0],v]})},cs=e=>X({epsilon:e.epsilon,format:e.format}),ps=(e,t)=>{t.format==="NHWC"?Bd(e,e.inputs,t):e.compute(Pd(e.inputs,t))}});var Md,Dd,fs,hs,gs=q(()=>{"use strict";ze();ye();Oe();be();Md=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Dd=(e,t,r)=>{let o=e[0].dims,n=e[1],s=e[2],u=o,d=D.normalizeAxis(t.axis,o.length),a=D.sizeToDimension(o,d),p=D.sizeFromDimension(o,d),h=D.size(n.dims),$=s?D.size(s.dims):0;if(h!==p||s&&$!==p)throw new Error(`Size of X.shape()[axis:] == ${p}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${h} and bias size of ${$}`);let g=[];for(let E=0;E<o.length;++E)E<d?g.push(o[E]):g.push(1);let w=Ye(p),b=Te(e[0].dataType),v=[W("x",e[0].dataType,e[0].dims,w),W("scale",n.dataType,n.dims,w)];s&&v.push(W("bias",s.dataType,s.dims,w)),v.push(K("output",e[0].dataType,u,w));let I=r>1,x=r>2;I&&v.push(K("meanDataOutput",1,g)),x&&v.push(K("invStdOutput",1,g));let A=E=>`\n  const normSize: f32 = ${p};\n  const normSizeVectorized: u32 = ${p/w};\n  const epsilon: f32 = ${t.epsilon};\n\n  ${E.declareVariables(...v)}\n  ${E.mainStart()}\n    ${E.guardAgainstOutOfBoundsWorkgroupSizes(a)}\n    let offset = global_idx * normSizeVectorized;\n    var meanVector = ${Ge("f32",w)};\n    var meanSquareVector = ${Ge("f32",w)};\n\n    for (var h: u32 = 0u; h < normSizeVectorized; h++) {\n      let value = ${Je(b,w,"x[h + offset]")};\n      meanVector += value;\n      meanSquareVector += value * value;\n    }\n    let mean = ${et("meanVector",w)} / normSize;\n    let meanSquare = sqrt(${et("meanSquareVector",w)} \n      / normSize - mean * mean + epsilon);\n\n    for (var j: u32 = 0; j < normSizeVectorized; j++) {\n      let f32input = ${Je(b,w,"x[j + offset]")};\n      let f32scale = ${Je(b,w,"scale[j]")};\n      output[j + offset] = ${v[0].type.value}((f32input - mean) / meanSquare * f32scale\n        ${s?`+ ${Je(b,w,"bias[j]")}`:""}\n      );\n    }\n\n    ${I?"meanDataOutput[global_idx] = mean":""};\n    ${x?"invStdOutput[global_idx] = 1 / meanSquare":""};\n  }`,B=[{dims:u,dataType:e[0].dataType}];return I&&B.push({dims:g,dataType:1}),x&&B.push({dims:g,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${t.cacheKey}|${r}|${e.length}`},getRunData:()=>({outputs:B,dispatchGroup:{x:Math.ceil(a/64)}}),getShaderSource:A}},fs=e=>X({axis:e.axis,epsilon:e.epsilon}),hs=(e,t)=>{Md(e.inputs),e.compute(Dd(e.inputs,t,e.outputCount))}});var zd,ys,bs=q(()=>{"use strict";ye();cr();zd=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},ys=e=>{zd(e.inputs);let t=st.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can\'t use matmul on the given tensors");e.compute(Qr(e.inputs,{activation:"",activationCacheKey:""},t))}});var Vd,vs,ws,Wd,Ln,$s,Ss=q(()=>{"use strict";ye();Oe();Br();kn();be();Wt();Vd=(e,t)=>{let r=e[0],o=e[1],n=e[2],s=e[3],u=e[4],d=e[5],a=e[6],p=e[7];if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let h=!1,$=r.dims[0],g=r.dims[1],w=r.dims.length===3?h?r.dims[2]/3:r.dims[2]:t.numHeads*r.dims[4],b=g,v=0,I=0,x=Math.floor(w/t.numHeads);if(a&&p){if(a.dims.length!==4)throw new Error(\'Input "past_key" is expected to have 4 dimensions\');if(p.dims.length!==4)throw new Error(\'Input "past_value" is expected to have 4 dimensions\');v=a.dims[2],I=a.dims[2]}else if(a||p)throw new Error(\'Input "past_key" and "past_value" shall be both present or both absent\');let A;if(o){if(r.dims.length!==3)throw new Error(\'Input "query" is expected to have 3 dimensions when key is given\');if(o.dims.length<3||o.dims.length>5)throw new Error(\'Input "key" is expected to have 3, 4, or 5 dimensions\');if(r.dims[0]!==o.dims[0])throw new Error(\'Input "query" and "key" shall have same dim 0 (batch size)\');if(o.dims.length===3){if(o.dims[2]!==r.dims[2])throw new Error(\'Input "query" and "key" shall have same dim 2 (hidden_size)\');A=2,b=o.dims[1]}else if(o.dims.length===5){if(o.dims[2]!==t.numHeads||o.dims[3]!==2||o.dims[4]!==x)throw new Error(\'Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv\');if(n)throw new Error(\'Expect "value" be none when "key" has packed kv format.\');A=5,b=o.dims[1]}else{if(o.dims[1]!==t.numHeads||o.dims[3]!==x)throw new Error(\'Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key\');A=0,b=o.dims[2]}}else{if(r.dims.length!==3&&r.dims.length!==5)throw new Error(\'Input "query" is expected to have 3 or 5 dimensions when key is empty\');if(r.dims.length===5&&(r.dims[2]!==t.numHeads||r.dims[3]!==3))throw new Error(\'Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv\');A=3}if(s){if(s.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimension\');if(n&&r.dims.length===5&&r.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let B=0;if(u){B=8;let U=u.dims;throw U.length===1?U[0]===$?B=1:U[0]===3*$+2&&(B=3):U.length===2&&U[0]===$&&U[1]===b&&(B=5),B===8?new Error(\'Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)\'):new Error("Mask not supported")}let E=!1,V=w;if(n){if(n.dims.length!==3&&n.dims.length!==4)throw new Error(\'Input "value" is expected to have 3 or 4 dimensions\');if(r.dims[0]!==n.dims[0])throw new Error(\'Input "query" and "value" shall have same dim 0 (batch_size)\');if(n.dims.length===3){if(b!==n.dims[1])throw new Error(\'Input "key" and "value" shall have the same dim 1 (kv_sequence_length)\');V=n.dims[2]}else{if(b!==n.dims[2])throw new Error(\'Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)\');V=n.dims[1]*n.dims[3],E=!0}}let P=v+b,z=!1;if(u)throw new Error("Key padding mask is not supported");if(d)throw new Error("extraAddQk is not supported");if(a)throw new Error("pastKey is not supported");if(p)throw new Error("pastValue is not supported");return{batchSize:$,sequenceLength:g,pastSequenceLength:v,kvSequenceLength:b,totalSequenceLength:P,maxSequenceLength:I,inputHiddenSize:0,hiddenSize:w,vHiddenSize:V,headSize:x,vHeadSize:Math.floor(V/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:B,scale:t.scale,broadcastResPosBias:z,passPastInKv:E,qkvFormat:A}},vs=e=>X({...e}),ws=X({perm:[0,2,1,3]}),Wd=(e,t,r,o,n,s,u)=>{let d=[o,n,s],a=D.size(d),p=Te(t.dataType),h=$=>`\n  const biasOffset = ${u}u;\n  const hiddenSize = ${s}u;\n\n  @group(0) @binding(0) var<storage, read> qkv: array<${p}>;\n  @group(0) @binding(1) var<storage, read> bias: array<${p}>;\n  @group(0) @binding(2) var<storage, read_write> qkv_with_bias: array<${p}>;\n\n  ${$.mainStart()}\n    ${$.guardAgainstOutOfBoundsWorkgroupSizes(a)}\n    let biasOffsetIdx = (global_idx % hiddenSize) + biasOffset;\n\n    qkv_with_bias[global_idx] = qkv[global_idx] + bias[biasOffsetIdx];\n  }`;return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{hint:JSON.stringify({batchSize:o,sequenceLength:n,hiddenSize:s,biasOffset:u})},getRunData:()=>({outputs:[{dims:d,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(a/64)}}),getShaderSource:h},{inputs:[t,r],outputs:[-1]})[0]},Ln=(e,t,r,o,n,s,u,d)=>{let a=s;if(u){if(o===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return a=Wd(e,s,u,t,o,r*n,d),a=a.reshape([t,o,r,n]),e.compute(tt(a,ws.perm),{inputs:[a],outputs:[-1]})[0]}else return s.dims.length===3&&(a=s.reshape([t,o,r,n])),e.compute(tt(a,ws.perm),{inputs:[a],outputs:[-1]})[0]},$s=(e,t)=>{let r=Vd(e.inputs,t);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(e.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let o=e.inputs[1]&&e.inputs[2]&&e.inputs[1].dims.length===4&&e.inputs[2].dims.length===4,n=Ln(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,e.inputs[0],e.inputs[3],0);if(o)return Nr(e,n,e.inputs[1],e.inputs[2],e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t);let s=Ln(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.headSize,e.inputs[1],e.inputs[3],r.hiddenSize),u=Ln(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.vHeadSize,e.inputs[2],e.inputs[3],2*r.hiddenSize);Nr(e,n,s,u,e.inputs[4],void 0,e.inputs[6],e.inputs[7],e.inputs[5],r,t)}});var Ud,Nd,Hd,Gd,Ld,Fd,jd,qd,Kd,xs,Cs,Is=q(()=>{"use strict";ze();ye();Oe();be();Ud=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1)throw new Error("Input type must be float.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},Nd=(e,t,r,o,n,s)=>{let u=t.length,d="";for(let a=u-1;a>=0;--a)d+=`\n            k = i32(${e.indicesGet("indices",a)}) - ${o[a]};\n            if (k < 0) {\n              break;\n            }\n            if (k >= ${t[a]}) {\n              break;\n            }\n            offset += k * ${r[a]};\n        `;return`\n          value = ${n}(${s});\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${d}\n            value = x[offset];\n          }\n      `},Hd=(e,t,r,o)=>{let n=t.length,s="";for(let u=n-1;u>=0;--u)s+=`\n                k = i32(${e.indicesGet("indices",u)}) - ${o[u]};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = ${2*(t[u]-1)};\n                  k = k % _2n_1;\n                  if(k >= ${t[u]}) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * ${r[u]};\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${s}\n              value = x[offset];\n          `},Gd=(e,t,r,o)=>{let n=t.length,s="";for(let u=n-1;u>=0;--u)s+=`\n                k = i32(${e.indicesGet("indices",u)}) - ${o[u]};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= ${t[u]}) {\n                  k = ${t[u]-1};\n                }\n                offset += k * ${r[u]};\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${s}\n              value = x[offset];\n          `},Ld=(e,t,r,o)=>{let n=t.length,s="";for(let u=n-1;u>=0;--u)s+=`\n                k = i32(${e.indicesGet("indices",u)}) - ${o[u]};\n                if (k < 0)  {\n                  k += ${t[u]};\n                }\n                if (k >= ${t[u]}) {\n                  k -= ${t[u]};\n                }\n                offset += k * ${r[u]};\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${s}\n              value = x[offset];\n          `},Fd=(e,t,r,o,n)=>{switch(o.mode){case 0:return Nd(e,t,r,o.pads,n,o.value);case 1:return Hd(e,t,r,o.pads);case 2:return Gd(e,t,r,o.pads);case 3:return Ld(e,t,r,o.pads);default:throw new Error("Invalid mode")}},jd=(e,t,r,o)=>{let n=t[0].dims,s=D.padShape(n.slice(),r.pads),u=D.size(s),d=D.computeStrides(n),a=K("output",t[0].dataType,s),p=W("x",t[0].dataType,n),h=Fd(a,n,d,r,o);return`\n              ${e.declareVariables(p,a)}\n              ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n\n              let indices = ${a.offsetToIndices("global_idx")};\n\n              var value = ${o}(0);\n              ${h}\n              output[global_idx] = value;\n          }`},qd=(e,t)=>{let r=D.padShape(e[0].dims.slice(),t.pads);return{name:"Pad",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(D.size(r)/64)}}),getShaderSource:o=>jd(o,e,t,"f32")}},Kd=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),o=e.length>=3&&e[2].data?e[2].getFloat32Array()[0]:0,n=e[0].dims.length,s=new Int32Array(2*n).fill(0);if(e.length>=4){let d=e[3].getBigInt64Array();for(let a=0;a<d.length;a++)s[Number(d[a])]=Number(r[a]),s[Number(d[a])+n]=Number(r[a+d.length])}else r.forEach((d,a)=>s[Number(a)]=Number(d));let u=[];return s.forEach(d=>u.push(d)),X({mode:t.mode,value:o,pads:u})}else return t},xs=(e,t)=>{Ud(e.inputs);let r=Kd(e.inputs,t);e.compute(qd(e.inputs,r),{inputs:[0]})},Cs=e=>{let t=e.mode,r=e.value,o=e.pads;return X({mode:t,value:r,pads:o})}});var en,As,Ts,_s,Es,Os,ks,Ps,Rs,Bs,Ms,Ds,zs,Vs,Ws,Us,Ns=q(()=>{"use strict";Fr();ye();Oe();be();en=e=>{if(Ut.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},As=(e,t,r)=>{let o=t.format==="NHWC",n=e.dims.slice();o&&n.splice(1,0,n.pop());let s=Object.hasOwnProperty.call(t,"dilations"),u=t.kernelShape.slice(),d=t.strides.slice(),a=s?t.dilations.slice():[],p=t.pads.slice();Et.adjustPoolAttributes(r,n,u,d,a,p);let h=Et.computePoolOutputShape(r,n,d,a,u,p,t.autoPad),$=Object.assign({},t);s?Object.assign($,{kernelShape:u,strides:d,pads:p,dilations:a,cacheKey:t.cacheKey}):Object.assign($,{kernelShape:u,strides:d,pads:p,cacheKey:t.cacheKey});let g=h.slice();return g.push(g.splice(1,1)[0]),[$,o?g:h]},Ts=(e,t)=>{let r=t.format==="NHWC",o=D.size(e),n=D.size(t.kernelShape),s=[{type:"uint32",data:o},{type:"uint32",data:n}],u=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let d=t.kernelShape[t.kernelShape.length-1],a=t.strides[t.strides.length-1],p=t.pads[t.pads.length/2-1],h=t.pads[t.pads.length-1],$=!!(p+h);s.push({type:"uint32",data:d},{type:"uint32",data:a},{type:"uint32",data:p},{type:"uint32",data:h}),u.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let g=!1;if(t.kernelShape.length===2){let w=t.kernelShape[t.kernelShape.length-2],b=t.strides[t.strides.length-2],v=t.pads[t.pads.length/2-2],I=t.pads[t.pads.length-2];g=!!(v+I),s.push({type:"uint32",data:w},{type:"uint32",data:b},{type:"uint32",data:v},{type:"uint32",data:I}),u.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[s,u,!0,$,g]}else{if(r)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let d=D.computeStrides(t.kernelShape);s.push({type:"uint32",data:d},{type:"uint32",data:t.pads},{type:"uint32",data:t.strides}),u.push({name:"kernelStrides",type:"u32",length:d.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length});let a=t.pads.reduce((p,h)=>p+h);return[s,u,!!a,!1,!1]}},_s=(e,t,r,o,n,s,u,d,a,p,h,$)=>{let g=n.format==="NHWC",w=t.type.value,b=K("output",t.type.tensor,o);if(n.kernelShape.length<=2){let v="",I="",x="",A=r-(g?2:1);if(h===!0?v=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${A}] = indices[${A}] * uniforms.sw - uniforms.pwStart + i;\n                  if (xIndices[${A}] < 0 || xIndices[${A}]\n                      >= uniforms.x_shape[${A}]) {\n                    pad++;\n                    continue;\n                  }\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${s}\n                }`:v=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${A}] = indices[${A}] * uniforms.sw - uniforms.pwStart + i;\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${s}\n                }`,n.kernelShape.length===2){let E=r-(g?3:2);$===!0?I=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${E}] = indices[${E}] * uniforms.sh - uniforms.phStart + j;\n                  if (xIndices[${E}] < 0 || xIndices[${E}] >= uniforms.x_shape[${E}]) {\n                    pad += i32(uniforms.kw);\n                    continue;\n                  }\n              `:I=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${E}] = indices[${E}] * uniforms.sh - uniforms.phStart + j;\n                `,x=`\n              }\n            `}return`\n            ${e.registerUniforms(a).declareVariables(t,b)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n              let indices = ${b.offsetToIndices("global_idx")};\n              var xIndices = ${b.offsetToIndices("global_idx")};\n\n              var value = ${w}(${d});\n              var pad = 0;\n              ${I}\n              ${v}\n              ${x}\n              ${u}\n\n              output[global_idx] = value;\n            }`}else{if(g)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let v=n.kernelShape.length,I=n.pads.length,x="";return p?x=`\n                if (xIndices[j] >= uniforms.x_shape[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${t.indicesToOffset("xIndices")}];\n                ${s}\n              }`:x=`\n              }\n              let x_val = x[${t.indicesToOffset("xIndices")}];\n              ${s}\n            `,`\n            ${e.registerUniforms(a).declareVariables(t,b)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n              let indices = ${b.offsetToIndices("global_idx")};\n              var xIndices = ${b.offsetToIndices("global_idx")};\n\n              var offsets: array<u32, ${v}>;\n\n              var value = ${w}(${d});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${v-1}u; j++) {\n                  offsets[j] = offset / ${je("uniforms.kernelStrides","j",v)};\n                  offset -= offsets[j] * ${je("uniforms.kernelStrides","j",v)};\n                }\n                offsets[${v-1}] = offset;\n\n                isPad = false;\n                for (var j = ${r-v}u; j < ${r}u; j++) {\n                  xIndices[j] = indices[j] * ${je("uniforms.strides",`j - ${r-v}u`,v)}\n                    + offsets[j - ${r-v}u] - ${je("uniforms.pads","j - 2u",I)};\n                  ${x}\n              }\n              ${u}\n\n              output[global_idx] = value;\n            }`}},Es=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),Os=(e,t,r,o)=>{let[n,s]=As(t,o,r),u=W("x",t.dataType,t.dims.length),d=u.type.value,a="value += x_val;",p="";n.countIncludePad?p+=`value /= ${d}(uniforms.kernelSize);`:p+=`value /= ${d}(i32(uniforms.kernelSize) - pad);`;let[h,$,g,w,b]=Ts(s,n);h.push(...ne(t.dims)),h.push(...ne(s));let v=["rank"];return{name:e,shaderCache:{hint:o.cacheKey+g+w+b+n.countIncludePad,inputDependencies:v},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(D.size(s)/64)},programUniforms:h}),getShaderSource:I=>_s(I,u,t.dims.length,s.length,n,a,p,0,$,g,w,b)}},ks=e=>{let t=e.count_include_pad!==0,r=Es(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");return X({countIncludePad:t,...r})},Ps=(e,t)=>{en(e.inputs),e.compute(Os("AveragePool",e.inputs[0],!1,t))},Rs={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:""},Bs=e=>{let t=e.format;return{format:t,...Rs,cacheKey:t}},Ms=(e,t)=>{en(e.inputs),e.compute(Os("GlobalAveragePool",e.inputs[0],!0,t))},Ds=(e,t,r,o)=>{let[n,s]=As(t,o,r),u=`\n      value = max(x_val, value);\n    `,d="",a=W("x",t.dataType,t.dims.length),p=["rank"],[h,$,g,w,b]=Ts(s,n);return h.push(...ne(t.dims)),h.push(...ne(s)),{name:e,shaderCache:{hint:o.cacheKey+g,inputDependencies:p},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(D.size(s)/64)},programUniforms:h}),getShaderSource:v=>_s(v,a,t.dims.length,s.length,n,u,d,-1e5,$,g,w,b)}},zs=(e,t)=>{en(e.inputs),e.compute(Ds("MaxPool",e.inputs[0],!1,t))},Vs=e=>{let t=e.storage_order,r=e.dilations,o=Es(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(o.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");return X({storageOrder:t,dilations:r,...o})},Ws=e=>{let t=e.format;return{format:t,...Rs,cacheKey:t}},Us=(e,t)=>{en(e.inputs),e.compute(Ds("GlobalMaxPool",e.inputs[0],!0,t))}});var Zd,Xd,Hs,Gs=q(()=>{"use strict";Fr();ze();be();Zd=(e,t,r)=>{let o=e===t,n=e<t&&r<0,s=e>t&&r>0;if(o||n||s)throw new Error("Range these inputs\' contents are invalid.")},Xd=(e,t,r,o)=>{let n=Math.abs(Math.ceil((t-e)/r)),s=[n],u=n,d=K("output",o,s),a=d.type.storage,p=h=>`\n        ${h.declareVariables(d)}\n        ${h.mainStart()}\n        ${h.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n        output[global_idx] = ${a}(${e}) + ${a}(global_idx) * ${a}(${r});\n      }`;return{name:"Range",shaderCache:{hint:[e,t,r].map(h=>h.toString()).join("_")},getShaderSource:p,getRunData:()=>({outputs:[{dims:s,dataType:o}],dispatchGroup:{x:Math.ceil(u/64)}})}},Hs=e=>{let t=0,r=0,o=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],o=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],o=e.inputs[2].getFloat32Array()[0]),Ut.webgpu.validateInputContent&&Zd(t,r,o),e.compute(Xd(t,r,o,e.inputs[0].dataType),{inputs:[]})}});var Qd,Jd,ec,tc,rc,nc,oc,ac,ic,sc,uc,lc,dc,cc,pc,Ls,Fs,js=q(()=>{"use strict";ye();Oe();be();Qd=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for linear mode")}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},Jd=(e,t,r)=>{t.every(n=>n>=0&&n<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let o=new Array(r).fill(1);return t.forEach((n,s)=>o[n]=e[s]),o},ec=(e,t,r,o,n,s)=>{let[u,d,a]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],p=e[0].dims.length;if(u>0&&e.length>u&&e[u].dims.length>0)e[u].getFloat32Array().forEach(h=>s.push(h));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(d>0&&e.length>d&&e[d].dims.length>0){if(e[d].getFloat32Array().forEach(h=>o.push(h)),o.length!==0&&o.length!==p&&r>=18&&o.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");Qd(o,t),t.axes.length>0&&Jd(o,t.axes,p).forEach((h,$)=>o[$]=h)}if(a>0&&e.length>a&&(e[a].getBigInt64Array().forEach(h=>n.push(Number(h))),n.length!==p||r>=18&&n.length===t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(o.length!==t.axes.length)throw new Error(\'Resize requires "scales" input size to be of axes rank when axes attributes is specified\');if(n.length!==t.axes.length)throw new Error(\'Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified\')}if(typeof o<"u"&&typeof n<"u"&&o.length>0&&n.length>p)throw new Error("Resize requires only of scales or sizes to be specified")},tc=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: ${t}, xScale: ${t}, lengthResized: ${t},\n     lengthOriginal: ${t}, roiStart: ${t}, roiEnd: ${t}) -> ${t} { `+(()=>{switch(e){case"asymmetric":return"return xResized / xScale;";case"pytorch_half_pixel":return"if (lengthResized > 1) {                     return (xResized + 0.5) / xScale - 0.5;                   } else {                     return 0.0;                   }";case"tf_half_pixel_for_nn":return"return (xResized + 0.5) / xScale;";case"align_corners":return"if (lengthResized == 1) {                     return 0.0;                   } else {                     return xResized * (lengthOriginal - 1) / (lengthResized - 1);                   }";case"tf_crop_and_resize":return`if (lengthResized > 1) {                     return roiStart * (lengthOriginal - 1) +                           (xResized * (roiEnd - roiStart) * (lengthOriginal - 1)) / (lengthResized - 1);                   } else {                     return 0.5 * (roiStart + roiEnd) * ${t}(lengthOriginal - 1);                   }`;case"half_pixel_symmetric":return["const outputWidth = xScale * lengthResized;","const adjustment = lengthResized / outputWidth;","const center = lengthOriginal / 2;","const offset = center * (1 - adjustment);","return offset + ((xResized + 0.5) / xScale) - 0.5;"].join(`\n`);case"half_pixel":return"return ((xResized + 0.5) / xScale) - 0.5;";default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",rc=(e,t,r)=>`fn getNearestPixelFromOriginal(xOriginal: ${r}, isDownSample: bool) -> ${r} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",nc=(e,t,r)=>{let o=new Array(r).fill(0).concat(new Array(r).fill(1)),n=e.length===0?o:e.slice();return t.length>0?(t.forEach((s,u)=>{o[s]=n[u],o[u+r]=n[t.length+u]}),o):n},oc=(e,t,r,o)=>{let n=[];if(r.length>0)if(o.length>0){if(e.forEach(s=>n.push(s)),Math.max(...o)>e.length)throw new Error("axes is out of bound");o.forEach((s,u)=>n[s]=r[u])}else r.forEach(s=>n.push(s));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");n=e.map((s,u)=>Math.round(s*t[u]))}return n},ac=(e,t,r)=>{let o=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map(s=>t[s]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map(s=>t[s]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let n=e.slice();return r.axes.length>0?(r.axes.forEach(s=>t[s]=o),r.axes.forEach(s=>n[s]=Math.round(e[s]*t[s]))):(t.fill(o,0,t.length),n.forEach((s,u)=>n[u]=Math.round(s*t[u]))),n},ic=(e,t,r,o,n)=>`\n    fn calculateOriginalIndicesFromOutputIndices(outputIndices: ${e.type.indices}) -> array<${e.type.value}, ${r.length}> {\n      const inputShape = array<u32, ${t.length}>(${t.map(s=>`${s}u`).join(",")});\n      const outputShape = array<u32, ${r.length}>(${r.map(s=>`${s}u`).join(",")});\n      const scales = array<${e.type.value}, ${o.length}>(${o.map(s=>`${s}f`).join(",")});\n      const roi = array<${e.type.value}, ${n.length}>(${n.map(s=>`${s}f`).join(",")});\n      var originalIndices: array<${e.type.value}, ${r.length}>;\n      for (var i:u32 = 0; i < ${r.length}; i++) {\n        var outputIndex = ${r.length===1?"outputIndices":"outputIndices[i]"};\n        if (scales[i] == 1.0) {\n          originalIndices[i] = ${e.type.value}(outputIndex);\n        } else {\n          originalIndices[i] = getOriginalCoordinateFromResizedCoordinate(${e.type.value}(outputIndex), scales[i],\n                ${e.type.value}(outputShape[i]), ${e.type.value}(inputShape[i]), roi[i], roi[i + ${t.length}]);\n        }\n      }\n      return originalIndices;\n    }`,sc=(e,t,r,o,n,s,u)=>`\n    fn calculateInputIndicesFromOutputIndices(outputIndices: ${t.type.indices}) -> ${e.type.indices} {\n        const inputShape = array<u32, ${r.length}>(${r.map(d=>`${d}u`).join(",")});\n        const outputShape = array<u32, ${o.length}>(${o.map(d=>`${d}u`).join(",")});\n        const scales = array<${e.type.value}, ${n.length}>(${n.map(d=>`${d}`).join(",")});\n        const roi = array<${e.type.value}, ${s.length}>(${s.map(d=>`${d}`).join(",")});\n        var inputIndices: ${e.type.indices};\n        for (var i:u32 = 0; i < ${o.length}; i++) {\n          var outputIndex = ${o.length===1?"outputIndices":"outputIndices[i]"};\n          var inputIndex: u32;\n          if (scales[i] == 1.0) {\n            inputIndex = outputIndex;\n          } else {\n            var original_idx = getOriginalCoordinateFromResizedCoordinate(${e.type.value}(outputIndex), scales[i],\n                    ${e.type.value}(outputShape[i]), ${e.type.value}(inputShape[i]), roi[i], roi[i + ${r.length}]);\n            if (!${u} || (original_idx >= 0 && original_idx < ${e.type.value}(inputShape[i]))) {\n              if (original_idx < 0) {\n                inputIndex = 0;\n              } else if (original_idx > (${e.type.value}(inputShape[i]) - 1)) {\n                inputIndex = inputShape[i] - 1;\n              } else {\n                inputIndex = u32(getNearestPixelFromOriginal(original_idx, scales[i] < 1));\n              }\n            } else {\n              inputIndex = u32(original_idx);\n            }\n          }\n          ${e.indicesSet("inputIndices","i","inputIndex")}\n        }\n        return inputIndices;\n    }`,uc=(e,t)=>`\n    fn checkInputIndices(inputIndices: ${e.type.indices}) -> bool {\n      const inputShape = array<u32, ${t.length}>(${t.map(r=>`${r}u`).join(",")});\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var inputIndex = ${t.length===1?"inputIndices":"inputIndices[i]"};\n        if (inputIndex < 0 || inputIndex >= inputShape[i]) {\n          return false;\n        }\n      }\n      return true;\n    }`,lc=(e,t,r,o,n,s)=>{let[u,d,a,p]=r.length===2?[-1,0,1,-1]:o[1]===1?[0,2,3,1]:[0,1,2,3],h=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${h} {\n      var inputIndices: ${e.type.indices};\n      inputIndices[${d}] = max(0, min(row, ${r[d]} - 1));\n      inputIndices[${a}] = max(0, min(col, ${r[a]} - 1));\n      if (${r.length} > 2) {\n        inputIndices[${p}] = channel;\n        inputIndices[${u}] = batch;\n      };\n      return input[${e.indicesToOffset("inputIndices")}];\n    }\n\n    fn bilinearInterpolation(outputIndices: ${t.type.indices}) -> ${h} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(outputIndices);\n      var row:${h} = originalIndices[${d}];\n      var col:${h} = originalIndices[${a}];\n      if (${n} && (row < 0 || row > (${r[d]} - 1) || col < 0 || col > ${r[a]} - 1)) {\n        return ${s};\n      }\n      row = max(0, min(row, ${r[d]} - 1));\n      col = max(0, min(col, ${r[a]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = 0;\n      var batch: u32 = 0;\n      if (${r.length>2}) {\n        channel = u32(originalIndices[${p}]);\n        batch = u32(originalIndices[${u}]);\n      }\n      var x11: ${h} = getInputValue(batch, channel, row1, col1);\n      var x12: ${h} = getInputValue(batch, channel, row1, col2);\n      var x21: ${h} = getInputValue(batch, channel, row2, col1);\n      var x22: ${h} = getInputValue(batch, channel, row2, col2);\n      var dx1: ${h} = row - ${h}(row1);\n      var dx2: ${h} = ${h}(row2) - row;\n      var dy1 = col - ${h}(col1);\n      var dy2 = ${h}(col2) - col;\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`},dc=(e,t,r,o,n,s,u,d,a,p)=>{let[h,$]=r.length===2?[0,1]:n[1]===1?[2,3]:[1,2],g=e.type.value,w=b=>{let v=b===h?"row":"col";return`\n      fn ${v}CubicInterpolation(inputIndices: ${e.type.indices}, outputIndices: ${t.type.indices}) -> ${g} {\n        var outputIndex = ${o.length===1?"outputIndices":`outputIndices[${b}]`};\n        var originalIdx: ${g} = getOriginalCoordinateFromResizedCoordinate(${g}(outputIndex), ${n[b]},\n        ${g}(${o[b]}), ${g}(${r[b]}), ${s[b]}, ${s[b]} + ${r.length});\n        var fractOriginalIdx: ${g} = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${d} && (originalIdx < 0 || originalIdx > (${r[b]} - 1))) {\n          return ${a};\n        }\n        var data: array<${g}, 4> = array<${g}, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${v}: ${g} = originalIdx + ${g}(i);\n          if (${v} < 0 || ${v} >= ${r[b]}) {\n            if (${p}) {\n              coefs[i + 1] = 0.0;\n              continue;\n            } else if (${d}) {\n              return ${a};\n            } else {\n              ${v} = max(0, min(${v}, ${r[b]} - 1));\n            }\n          }\n          var inputIndicesCopy: ${e.type.indices} = inputIndices;\n          inputIndicesCopy[${b}] = u32(${v});\n          data[i + 1] = ${b===h?`input[${e.indicesToOffset("inputIndicesCopy")}];`:`\n                                               rowCubicInterpolation(inputIndicesCopy, outputIndices);`}\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${w(h)};\n    ${w($)};\n  fn getCubicInterpolationCoefs(s: ${g}) -> array<${g}, 4> {\n    var absS = abs(s);\n    var coeffs: array<${g}, 4> = array<${g}, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: ${g} = 1.0 - absS;\n    var twoMinusAbsS: ${g} = 2.0 - absS;\n    var onePlusAbsS: ${g} = 1.0 + absS;\n    coeffs[0] = ((${u} * onePlusAbsS - 5 * ${u}) * onePlusAbsS + 8 * ${u}) * onePlusAbsS - 4 * ${u};\n    coeffs[1] = ((${u} + 2) * absS - (${u} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${u} + 2) * oneMinusAbsS - (${u} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${u} * twoMinusAbsS - 5 * ${u}) * twoMinusAbsS + 8 * ${u}) * twoMinusAbsS - 4 * ${u};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<${g}, 4>, coefs: array<${g}, 4>) -> ${g} {\n    var coefsSum: ${g} = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(outputIndices: ${t.type.indices}) -> ${g} {\n    var inputIndices: ${e.type.indices} = outputIndices;\n    return colCubicInterpolation(inputIndices, outputIndices);\n  }\n    `},cc=(e,t,r,o,n,s)=>{let u=e.dims,d=nc(s,t.axes,u.length),a=oc(u,o,n,t.axes),p=o.slice();o.length===0&&(p=u.map((x,A)=>x===0?1:a[A]/x),t.keepAspectRatioPolicy!=="stretch"&&(a=ac(u,p,t)));let h=K("output",e.dataType,a),$=W("input",e.dataType,u),g=D.size(a),w=u.length===a.length&&u.every((x,A)=>x===a[A]),b=t.coordinateTransformMode==="tf_crop_and_resize",v=$.type.value,I=x=>`\n      ${w?"":`\n      ${tc(t.coordinateTransformMode,v)};\n      ${(()=>{switch(t.mode){case"nearest":return`\n              ${uc($,u)};\n              ${rc(t.nearestMode,r,v)};\n              ${sc($,h,u,a,p,d,b)};\n              `;case"linear":return`\n              ${ic(h,u,a,p,d)};\n              ${lc($,h,u,p,b,t.extrapolationValue)};\n              `;case"cubic":return`\n            ${dc($,h,u,a,p,d,t.cubicCoeffA,b,t.extrapolationValue,t.excludeOutside)};\n            `;default:throw Error("Invalid resize mode")}})()};\n      `}\n      ${x.declareVariables($,h)}\n      ${x.mainStart()}\n        ${x.guardAgainstOutOfBoundsWorkgroupSizes(g)}\n        ${w?"output[global_idx] = input[global_idx];":`\n        let outputIndices = ${h.offsetToIndices("global_idx")};\n        var inputIndices: ${$.type.indices};\n        ${(()=>{switch(t.mode){case"nearest":return`inputIndices = calculateInputIndicesFromOutputIndices(outputIndices);\n                if (checkInputIndices(inputIndices)) {\n                  output[global_idx] = input[${$.indicesToOffset("inputIndices")}];\n                } else {\n                  output[global_idx] = ${t.extrapolationValue};\n                }`;case"linear":return"output[global_idx] = bilinearInterpolation(outputIndices);";case"cubic":return"output[global_idx] = bicubicInterpolation(outputIndices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};\n        `}\n      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${p.length>0?p:""}|${n.length>0?n:""}|${w}`},getShaderSource:I,getRunData:()=>({outputs:[{dims:a,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(g/64)}})}},pc=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},Ls=(e,t)=>{let r=[],o=[],n=[],s=pc(e);ec(e.inputs,t,s,r,o,n),e.compute(cc(e.inputs[0],t,s,r,o,n),{inputs:[0]})},Fs=e=>{let t=e.antialias,r=e.axes,o=e.coordinateTransformMode,n=e.cubicCoeffA,s=e.excludeOutside!==0,u=e.extrapolationValue,d=e.keepAspectRatioPolicy,a=e.mode,p=e.nearestMode===""?"simple":e.nearestMode;return X({antialias:t,axes:r,coordinateTransformMode:o,cubicCoeffA:n,excludeOutside:s,extrapolationValue:u,keepAspectRatioPolicy:d,mode:a,nearestMode:p})}});var mc,fc,qs,Ks,Ys=q(()=>{"use strict";ze();ye();Oe();be();mc=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],o=e[2];if(t.dataType!==r.dataType||t.dataType!==o.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let n=t.dims[t.dims.length-1],s=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==n)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==s)throw new Error("Skip must have the same sequence length as input");if(o.dims.length!==1)throw new Error("Gamma must be 1D");if(o.dims[o.dims.length-1]!==n)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let u=e[3];if(u.dims.length!==1)throw new Error("Beta must be 1D");if(u.dims[u.dims.length-1]!==n)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let u=e[4];if(u.dims.length!==1)throw new Error("Bias must be 1D");if(u.dims[u.dims.length-1]!==n)throw new Error("Bias must have the same hidden size as input")}},fc=(e,t,r,o)=>{let n=e[0].dims,s=D.size(n),u=n,d=s,a=n.slice(-1)[0],p=o?n.slice(0,-1).concat(1):[],h=e.length>3,$=e.length>4,g=o&&r>1,w=o&&r>2,b=r>3,v=Ye(a),I=[W("x",e[0].dataType,e[0].dims,v),W("skip",e[1].dataType,e[1].dims,v),W("gamma",e[2].dataType,e[2].dims,v)];h&&I.push(W("beta",e[3].dataType,e[3].dims,v)),$&&I.push(W("bias",e[4].dataType,e[4].dims,v)),I.push(K("output",e[0].dataType,u,v)),g&&I.push(K("meanOutput",1,p)),w&&I.push(K("invStdOutput",1,p)),b&&I.push(K("inputSkipBiasSum",e[0].dataType,u,v));let x=Te(e[0].dataType),A=E=>`\n      const hiddenSize: f32 = ${a};\n      const hiddenSizeVectorized: u32 = ${a/v};\n      const epsilon: f32 = ${t.epsilon};\n\n      ${E.declareVariables(...I)}\n\n      ${E.mainStart()}\n        ${E.guardAgainstOutOfBoundsWorkgroupSizes(d/a)}\n        let offset = global_idx * hiddenSizeVectorized;\n        var sum = ${Ge("f32",v)};\n        var squareSum = ${Ge("f32",v)};\n        for (var i: u32 = 0; i < hiddenSizeVectorized; i++) {\n          let skipValue = skip[offset + i];\n          let biasValue = ${$?"bias[i]":"0.0"};\n          let inputValue = x[offset + i];\n          let value = inputValue + skipValue + biasValue;\n          ${b?"inputSkipBiasSum[offset + i] = value;":""}\n          output[offset + i] = value;\n          let f32Value = ${Je(x,v,"value")};\n          sum += f32Value;\n          squareSum += f32Value * f32Value;\n        }\n        let mean = ${et("sum",v)} / hiddenSize;\n        let variance = sqrt(${et("squareSum",v)} / hiddenSize - mean * mean + epsilon);\n        ${g?"meanOutput[global_idx] = mean;":""}\n        ${w?"invStdOutput[global_idx] = 1.0 / variance;":""}\n        for (var i: u32 = 0; i < hiddenSizeVectorized; i++) {\n          output[offset + i] = (output[offset + i] - ${x}(mean)) / ${x}(variance) * gamma[i]\n           + ${h?"beta[i]":"0.0"};\n        }\n      }`,B=[{dims:u,dataType:e[0].dataType}];return r>1&&B.push({dims:p,dataType:1}),r>2&&B.push({dims:p,dataType:1}),r>3&&B.push({dims:n,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:t.cacheKey},getShaderSource:A,getRunData:()=>({outputs:B,dispatchGroup:{x:Math.ceil(d/a/64)}})}},qs=(e,t)=>{mc(e.inputs);let o=[0];e.outputCount>1&&o.push(-3),e.outputCount>2&&o.push(-3),e.outputCount>3&&o.push(3),e.compute(fc(e.inputs,t,e.outputCount,!1),{outputs:o})},Ks=e=>{let t=e.epsilon;return X({epsilon:t})}});var hc,tn,gc,Zs,yc,bc,Xs,Qs,Js=q(()=>{"use strict";ze();ye();Oe();be();hc=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,o)=>{if(e[o+1].dataType!==6&&e[o+1].dataType!==7)throw new Error(`Input ${o} must be an array of int32 or int64`)})},tn=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(o=>r.push(Number(o)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(o=>r.push(Number(o)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},gc=(e,t)=>{if(e.length>1){let r=tn(e,1),o=tn(e,2),n=tn(e,3);return n.length===0&&(n=[...Array(e[0].dims.length).keys()]),X({starts:r,ends:o,axes:n})}else return t},Zs=(e,t,r,o,n)=>{let s=e;return e<0&&(s+=r[o[t]]),n[t]<0?Math.max(0,Math.min(s,r[o[t]]-1)):Math.max(0,Math.min(s,r[o[t]]))},yc=(e,t,r,o)=>`fn calculateInputIndices(outputIndices: ${t.type.indices}) -> ${e.type.indices} {\n          var inputIndices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${r.length}; i >= 0; i--) {\n            let input_shape_i = ${je("uniforms.input_shape","i",r.length)};\n            let steps_i = ${je("uniforms.steps","i",r.length)};\n            let signs_i = ${je("uniforms.signs","i",r.length)};\n            let starts_i = ${je("uniforms.starts","i",r.length)};\n            var outputIndex = ${o.length===1?"outputIndices":"outputIndices[i]"};\n            var inputIndex = outputIndex * steps_i + starts_i + carry;\n            carry = inputIndex / input_shape_i;\n            inputIndex = inputIndex % input_shape_i;\n            if (signs_i < 0) {\n              inputIndex = input_shape_i - inputIndex - 1u + starts_i;\n            }\n            ${r.length===1?"inputIndices":"inputIndices[i]"} = inputIndex;\n          }\n          return inputIndices;\n      }`,bc=(e,t)=>{let r=e[0].dims,o=D.size(r),n=t.axes.length>0?D.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],s=tn(e,4);s.forEach(x=>x!==0||(()=>{throw new Error("step cannot be 0")})),s.length===0&&(s=Array(n.length).fill(1));let u=t.starts.map((x,A)=>Zs(x,A,r,n,s)),d=t.ends.map((x,A)=>Zs(x,A,r,n,s));if(n.length!==u.length||n.length!==d.length)throw new Error("start, ends and axes should have the same number of elements");if(n.length!==r.length)for(let x=0;x<r.length;++x)n.includes(x)||(u.splice(x,0,0),d.splice(x,0,r[x]),s.splice(x,0,1));let a=s.map(x=>Math.sign(x));s.forEach((x,A,B)=>{if(x<0){let E=(d[A]-u[A])/x,V=u[A],P=V+E*s[A];u[A]=P,d[A]=V,B[A]=-x}});let p=r.slice(0);n.forEach((x,A)=>{p[x]=Math.ceil((d[x]-u[x])/s[x])});let h={dims:p,dataType:e[0].dataType},$=K("output",e[0].dataType,p.length),g=W("input",e[0].dataType,e[0].dims.length),w=D.size(p),b=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:u.length},{name:"signs",type:"i32",length:a.length},{name:"steps",type:"u32",length:s.length}],v=[{type:"uint32",data:w},{type:"uint32",data:u},{type:"int32",data:a},{type:"uint32",data:s},...ne(e[0].dims),...ne(p)],I=x=>`\n      ${x.registerUniforms(b).declareVariables(g,$)}\n        ${yc(g,$,r,p)}\n        ${x.mainStart()}\n          ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n          let outputIndices = ${$.offsetToIndices("global_idx")};\n          let inputIndices = calculateInputIndices(outputIndices);\n          ${$.setByOffset("global_idx",g.getByIndices("inputIndices"))}\n      }`;return{name:"Slice",shaderCache:{hint:`${a.length}_${u.length}_${s.length}`,inputDependencies:["rank"]},getShaderSource:I,getRunData:()=>({outputs:[h],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:v})}},Xs=(e,t)=>{hc(e.inputs,t);let r=gc(e.inputs,t);e.compute(bc(e.inputs,r),{inputs:[0]})},Qs=e=>{let t=e.starts,r=e.ends,o=e.axes;return X({starts:t,ends:r,axes:o})}});var wc,vc,eu,tu,ru=q(()=>{"use strict";ye();Oe();be();wc=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},vc=(e,t)=>{let r=e.dims,o=D.size(r),n=64,s=t.axis;if(s<0&&(s=r.length+s),s<r.length-1)throw new Error("softmax only supports last axis for now.");let u=r[s],d=o/u,a=Ye(u),p=u/a,h=(I,x)=>x===4?`max(max(${I}.x, ${I}.y), max(${I}.z, ${I}.w))`:x===2?`max(${I}.x, ${I}.y)`:x===3?`max(max(${I}.x, ${I}.y), ${I}.z)`:I,$=W("x",e.dataType,e.dims,a),g=K("result",e.dataType,e.dims,a),w=$.type.value,b=Te(e.dataType)==="f32"?`var threadMax = ${w}(-3.402823e+38f);`:`var threadMax = ${w}(-65504.0h);`,v=I=>`\n      var<workgroup> rowMaxShared : ${w};\n      var<workgroup> rowSumShared : ${w};\n      var<workgroup> threadShared : array<${w}, ${n}>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${w} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${w}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n      ${I.registerUniform("packedCols","i32").declareVariables($,g)}\n      ${I.mainStart()}\n        let gindex = i32(global_id.x);\n        let lindex = i32(local_id.x);\n        const wg = ${n};\n        let row = gindex / wg;\n        let cols = uniforms.packedCols;\n        let row_stride : i32 = uniforms.packedCols;\n\n        // find the rows max\n        ${b}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = ${w}(${h("threadShared[0]",a)});\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = ${w}(0.0);\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = ${w}(${et("threadShared[0]",a)});\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`;return{name:"Softmax",shaderCache:{hint:`${a}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.dataType}],dispatchGroup:{x:d},programUniforms:[{type:"uint32",data:p}]}),getShaderSource:v}},eu=(e,t)=>{wc(e.inputs),e.compute(vc(e.inputs[0],t))},tu=e=>X({axis:e.axis})});var $c,Sc,xc,Cc,Ic,nu,ou,au=q(()=>{"use strict";ye();Oe();be();$c=e=>{if(!e||e.length<1)throw new Error("too few inputs")},Sc=(e,t)=>{let r=[],o=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(n=>r.push(Number(n))),o=r.length),X({numOutputs:o,axis:t.axis,splitSizes:r})},xc=e=>`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n    if (index < sizeInConcatAxis[i]) {\n        return i;\n    }\n    }\n    return ${e}u;\n}`,Cc=e=>{let t=e.length,r=[];for(let o=0;o<t;++o){let n=e[o].setByIndices("indices","input[global_idx]");t===1?r.push(n):o===0?r.push(`if (outputNumber == ${o}u) { ${n} }`):o===t-1?r.push(`else { ${n} }`):r.push(`else if (outputNumber == ${o}) { ${n} }`)}return`\n      fn writeBufferData(outputNumber: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${r.join(`\n`)}\n      }`},Ic=(e,t)=>{let r=e[0].dims,o=D.size(r),n=e[0].dataType,s=r.length,u=t.axis,d=u<0?r.length+u:u,a=new Array(t.numOutputs),p=W("input",n,r),h=new Array(t.numOutputs),$=[],g=[],w=0;for(let I=0;I<t.numOutputs;I++){w+=t.splitSizes[I],h[I]=w;let x=r.slice();x[t.axis]=t.splitSizes[I],g.push(x),a[I]=K(`output${I}`,n,g[I]),$.push({dims:g[I],dataType:e[0].dataType})}let b=s<2?"indices":`indices[${d}]`,v=I=>`\n  ${I.declareVariables(p,...a)}\n  const sizeInConcatAxis = array<u32, ${h.length}>(${h.map(x=>`${x}u`).join(",")});\n  ${xc(h.length)}\n  ${Cc(a)}\n\n  ${I.mainStart()}\n    ${I.guardAgainstOutOfBoundsWorkgroupSizes(o)}\n\n    var indices = ${p.offsetToIndices("global_idx")};\n    let outputNumber = calculateOutputIndex(${b});\n    if (outputNumber != 0) {\n        ${b} -= sizeInConcatAxis[outputNumber - 1u];\n    }\n    writeBufferData(outputNumber, indices, global_idx);\n  }`;return{name:"Split",shaderCache:{hint:t.cacheKey},getShaderSource:v,getRunData:()=>({outputs:$,dispatchGroup:{x:Math.ceil(o/64)}})}},nu=(e,t)=>{$c(e.inputs);let r=e.inputs.length===1?t:Sc(e.inputs,t);e.compute(Ic(e.inputs,r),{inputs:[0]})},ou=e=>{let t=e.axis,r=e.splitSizes,o=e.numOutputs<0?r.length:e.numOutputs;if(o!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return X({axis:t,numOutputs:o,splitSizes:r})}});var iu,Ac,Tc,_c,su,uu=q(()=>{"use strict";ze();ye();be();iu=e=>Array.from(e.getBigInt64Array(),Number),Ac=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(iu(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},Tc=(e,t)=>{let r=[];for(let o=0;o<e.length;++o)r.push(e[o]*t[o]);return r},_c=e=>{let t=e[0].dims,r=iu(e[1]),o=Tc(t,r),n=D.size(o),s=e[0].dataType,u=W("input",s,t),d=K("output",s,o),a=p=>`\n      const inputShape = ${u.indices(...t)};\n      ${p.declareVariables(u,d)}\n      ${p.mainStart()}\n      ${p.guardAgainstOutOfBoundsWorkgroupSizes(n)}\n      let outputIndices = ${d.offsetToIndices("global_idx")};\n      var inputIndices: ${u.type.indices};\n      for (var i = 0; i < ${t.length}; i++) {\n        let inputDimValue = ${d.indicesGet("outputIndices","i")}  % ${u.indicesGet("inputShape","i")};\n\n        ${u.indicesSet("inputIndices","i","inputDimValue")}\n      }\n      ${d.setByOffset("global_idx",u.getByIndices("inputIndices"))}\n    }`;return{name:"Tile",shaderCache:{hint:`${r}`},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)}}),getShaderSource:a}},su=e=>{Ac(e.inputs),e.compute(_c(e.inputs),{inputs:[0]})}});var Ec,Oc,lu,du=q(()=>{"use strict";ze();ye();be();Ec=(e,t,r,o,n)=>{let s=D.size(r),u=Math.ceil(s/4),d=K("outputData",n,r,4),a=W("aData",t[1].dataType,t[1].dims,4),p=W("bData",t[2].dataType,t[2].dims,4),h=W("cData",t[0].dataType,t[0].dims,4),$,g=(w,b,v)=>`select(${b}, ${w}, ${v})`;if(!o)$=d.setByOffset("global_idx",g(a.getByOffset("global_idx"),p.getByOffset("global_idx"),h.getByOffset("global_idx")));else{let w=(b,v,I="")=>{let x=`aData[indexA${v}][componentA${v}]`,A=`bData[indexB${v}][componentB${v}]`,B=`bool(cData[indexC${v}] & ${4278190080>>>(3-v)*8}u)`;return`\n            let outputIndices${v} = ${d.offsetToIndices(`global_idx * 4u + ${v}u`)};\n            let offsetA${v} = ${a.broadcastedIndicesToOffset(`outputIndices${v}`,d)};\n            let offsetB${v} = ${p.broadcastedIndicesToOffset(`outputIndices${v}`,d)};\n            let offsetC${v} = ${h.broadcastedIndicesToOffset(`outputIndices${v}`,d)};\n            let indexA${v} = offsetA${v} / 4u;\n            let indexB${v} = offsetB${v} / 4u;\n            let indexC${v} = offsetC${v} / 4u;\n            let componentA${v} = offsetA${v} % 4u;\n            let componentB${v} = offsetB${v} % 4u;\n            ${b}[${v}] = ${I}(${g(x,A,B)});\n          `};n===9?$=`\n            var data = vec4<u32>(0);\n            ${w("data",0,"u32")}\n            ${w("data",1,"u32")}\n            ${w("data",2,"u32")}\n            ${w("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:$=`\n            ${w("outputData[global_idx]",0)}\n            ${w("outputData[global_idx]",1)}\n            ${w("outputData[global_idx]",2)}\n            ${w("outputData[global_idx]",3)}\n          `}return`\n        ${e.declareVariables(h,a,p,d)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n        ${$}\n      }`},Oc=e=>{let t=e[1].dims,r=e[2].dims,o=e[0].dims,n=e[1].dataType,s=!(D.areEqual(t,r)&&D.areEqual(r,o)),u=t,d=D.size(t);if(s){let a=st.calcShape(st.calcShape(t,r,!1),o,!1);if(!a)throw new Error("Can\'t perform where op on the given tensors");u=a,d=D.size(u)}return{name:"Where",getShaderSource:a=>Ec(a,e,u,s,n),getRunData:()=>({outputs:[{dims:u,dataType:n}],dispatchGroup:{x:Math.ceil(d/64/4)}})}},lu=e=>{e.compute(Oc(e.inputs))}});var cu,pu=q(()=>{"use strict";ga();kn();Da();Va();yi();_i();ki();zn();Li();qi();Qi();ts();os();ss();ds();ms();gs();bs();Ss();Is();Ns();Gs();Wr();js();Ys();Js();ru();au();uu();Wt();Rn();du();cu=new Map([["Abs",[Wa]],["Acos",[Ua]],["Acosh",[Na]],["Add",[bi]],["ArgMax",[ha,On]],["ArgMin",[fa,On]],["Asin",[Ha]],["Asinh",[Ga]],["Atan",[La]],["Atanh",[Fa]],["Attention",[ba,ya]],["AveragePool",[Ps,ks]],["BatchNormalization",[Ma]],["BiasAdd",[za]],["BiasSplitGelu",[gi]],["Cast",[qa,ja]],["Ceil",[Ya]],["Clip",[Ka]],["Concat",[Ei,Oi]],["Conv",[Wn,Vn]],["ConvTranspose",[Gi,Hi]],["Cos",[Za]],["Cosh",[Xa]],["CumSum",[Fi,ji]],["Div",[wi]],["Einsum",[Zi,Xi]],["Elu",[Qa,jr]],["Equal",[vi]],["Erf",[Ja]],["Exp",[ei]],["Expand",[es]],["Floor",[ti]],["FusedConv",[Wn,Vn]],["Gather",[ns,rs]],["GatherElements",[is,as]],["Gelu",[ri]],["Gemm",[us,ls]],["GlobalAveragePool",[Ms,Bs]],["GlobalMaxPool",[Us,Ws]],["Greater",[Ci]],["GreaterOrEqual",[Ai]],["InstanceNormalization",[ps,cs]],["LayerNormalization",[hs,fs]],["LeakyRelu",[ni,jr]],["Less",[Ii]],["LessOrEqual",[Ti]],["Log",[hi]],["MatMul",[ys]],["MaxPool",[zs,Vs]],["Mul",[$i]],["MultiHeadAttention",[$s,vs]],["Neg",[ai]],["Not",[oi]],["Pad",[xs,Cs]],["Pow",[Si]],["Range",[Hs]],["Reciprocal",[ii]],["ReduceMin",[ua,rt]],["ReduceMean",[na,rt]],["ReduceMax",[sa,rt]],["ReduceSum",[da,rt]],["ReduceProd",[la,rt]],["ReduceL1",[oa,rt]],["ReduceL2",[aa,rt]],["ReduceLogSum",[pa,rt]],["ReduceLogSumExp",[ia,rt]],["ReduceSumSquare",[ca,rt]],["Relu",[si]],["Resize",[Ls,Fs]],["Sigmoid",[ui]],["Sin",[li]],["Sinh",[di]],["Slice",[Xs,Qs]],["SkipLayerNormalization",[qs,Ks]],["Split",[nu,ou]],["Sqrt",[ci]],["Softmax",[eu,tu]],["Sub",[xi]],["Tan",[pi]],["Tanh",[mi]],["ThresholdedRelu",[fi,jr]],["Tile",[su]],["Transpose",[Lo,Fo]],["Where",[lu]]])});var rn,mu=q(()=>{"use strict";ze();vt();be();rn=class{constructor(t){this.backend=t;this.repo=new Map,this.attributesBound=!1}getArtifact(t){return this.repo.get(t)}setArtifact(t,r){this.repo.set(t,r)}run(t,r,o,n,s,u,d){let a=this.backend.device,p=this.backend.getComputePassEncoder();p.setPipeline(t.computePipeline);let h=[];for(let g of n)h.push({binding:h.length,resource:{buffer:g.buffer}});for(let g of s)h.push({binding:h.length,resource:{buffer:g.buffer}});d&&h.push({binding:h.length,resource:d});let $=a.createBindGroup({layout:t.computePipeline.getBindGroupLayout(0),entries:h,label:t.programInfo.name});if(p.setBindGroup(0,$),p.dispatchWorkgroups(...u),this.backend.pendingDispatchNumber++,this.backend.isQueryEnabled()){typeof this.backend.queryData>"u"&&(this.backend.queryData=this.backend.gpuDataManager.create(this.backend.querySetCount*8,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE));let g=this.backend.gpuDataManager.create(this.backend.querySetCount*8,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.backend.endComputePass(),this.backend.getCommandEncoder().resolveQuerySet(this.backend.querySet,0,2,this.backend.queryData.buffer,0),this.backend.getCommandEncoder().copyBufferToBuffer(this.backend.queryData.buffer,0,g.buffer,0,this.backend.querySetCount*8),this.backend.flush();let w=this.backend.currentKernelId,b=this.backend.kernels.get(w),v=`[${b[0]}] ${b[1]}`;g.buffer.mapAsync(GPUMapMode.READ).then(()=>{let I=new BigUint64Array(g.buffer.getMappedRange()),x=I[0],A=I[1];g.buffer.unmap(),typeof this.backend.queryTimeBase>"u"&&(this.backend.queryTimeBase=x);let B=Number(x-this.backend.queryTimeBase),E=Number(A-this.backend.queryTimeBase);if(!Number.isSafeInteger(B)||!Number.isSafeInteger(E))throw new RangeError("incorrect timestamp range");this.backend.gpuDataManager.release(g.id);let V="";r.forEach((z,U)=>{V+=`input[${U}]: [${z.dims}] | ${ir(z.dataType)}, `});let P="";o.forEach((z,U)=>{P+=`output[${U}]: [${z.dims}] | ${ir(z.dataType)}, `}),console.log(`[profiling] kernel "${w}|${v}|${t.programInfo.name}" ${V}${P}execution time: ${E-B} ns`)})}this.backend.pendingDispatchNumber>=16&&this.backend.flush()}dispose(){}build(t,r){let o=this.backend.device,n=[];o.features.has("shader-f16")&&n.push("enable f16;");let s=Ho(r),u=t.getShaderSource(s),d=`${n.join(`\n`)}\n${s.additionalImplementations}\n${u}`,a=o.createShaderModule({code:d,label:t.name});Pe("verbose",()=>`[WebGPU] ${t.name} shader code: ${d}`);let p=o.createComputePipeline({compute:{module:a,entryPoint:"main"},layout:"auto",label:t.name});return{programInfo:t,computePipeline:p}}normalizeDispatchGroupSize(t){let r=typeof t=="number"?t:t.x,o=typeof t=="number"?1:t.y||1,n=typeof t=="number"?1:t.z||1,s=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=s&&o<=s&&n<=s)return[r,o,n];let u=r*o*n,d=Math.ceil(Math.sqrt(u));if(d>s){if(d=Math.ceil(Math.cbrt(u)),d>s)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[d,d,d]}else return[d,d,1]}}});var kc,Pc,nn,fu=q(()=>{"use strict";vt();Mo();Wo();pu();mu();kc=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let o=0;o<e.length;++o){let n=e[o].dataType;switch(t[o]){case"none":{r.push("");break}case"type":{r.push(`${n}`);break}case"rank":{let s=e[o].dims.length;r.push(`${n};${s}`);break}case"dims":{let s=e[o].dims.join(",");r.push(`${n};${s}`);break}default:throw new Error(`unsupported input dependency: ${t[o]}`)}}return r.join("|")},Pc=(e,t,r)=>{let o=e.name;return e.shaderCache?.hint&&(o+="["+e.shaderCache.hint+"]"),o+=":"+r+`:${kc(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,o},nn=class{constructor(){this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.pendingDispatchNumber=0;this.querySetCount=2;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let t=this.kernelCustomData.get(this.currentKernelId);return t||(t={},this.kernelCustomData.set(this.currentKernelId,t)),t}async initialize(t){if(!navigator.gpu)throw new Error("WebGpuBackend: WebGPU is not available.");let r=await navigator.gpu.requestAdapter();if(!r)throw new Error("WebGpuBackend: Failed to get GPU adapter.");this.env=t;let o=[],n={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:o};r.features.has("timestamp-query")&&o.push("timestamp-query"),r.features.has("shader-f16")&&o.push("shader-f16"),this.device=await r.requestDevice(n),this.gpuDataManager=Vo(this),this.programManager=new rn(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Ro(t.logLevel,!!t.debug),this.device.onuncapturederror=s=>{s.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${s.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device})}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let t={};this.isQueryEnabled()&&(typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1}),this.computePassEncoder=this.getCommandEncoder().beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){this.commandEncoder&&(this.endComputePass(),this.device.queue.submit([this.getCommandEncoder().finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0)}isQueryEnabled(){return!!(this.device.features.has("timestamp-query")&&this.env.webgpu.profilingMode==="default")}run(t,r,o,n,s){let u=[];for(let A=0;A<r.length;++A){let B=this.gpuDataManager.get(r[A].data);if(!B)throw new Error(`no GPU data for input: ${r[A].data}`);u[A]=B}let{outputs:d,dispatchGroup:a,programUniforms:p}=t.getRunData(r),h=o.length===0?d.map((A,B)=>B):o;if(h.length!==d.length)throw new Error(`Output size ${h.length} must be equal to ${d.length}.`);let $=[],g=[];for(let A=0;A<d.length;++A){if(!Number.isInteger(h[A])||h[A]<-3||h[A]>=d.length)throw new Error(`Invalid output index: ${h[A]}`);if(h[A]===-3)continue;let B=h[A]===-1,E=h[A]===-2,V=B||E?s(d[A].dataType,d[A].dims):n(h[A],d[A].dataType,d[A].dims),P=this.gpuDataManager.get(V.data);if(!P)throw new Error(`no GPU data for output: ${V.data}`);if(B&&this.temporaryData.push(P),E){let z=this.kernelPersistentData.get(this.currentKernelId);z||(z=[],this.kernelPersistentData.set(this.currentKernelId,z)),z.push(P)}$.push(V),g.push(P)}let w;if(p){let A=0,B=[];p.forEach(z=>{let U=typeof z.data=="number"?[z.data]:z.data;if(U.length===0)return;let F=U.length<=2?U.length*4:16;A=Math.ceil(A/F)*F,B.push(A),A+=U.length>4?Math.ceil(U.length/4)*16:U.length*4});let E=16;A=Math.ceil(A/E)*E;let V=new ArrayBuffer(A);p.forEach((z,U)=>{let F=B[U],te=typeof z.data=="number"?[z.data]:z.data;z.type==="int32"?new Int32Array(V,F,te.length).set(te):z.type==="uint32"?new Uint32Array(V,F,te.length).set(te):new Float32Array(V,F,te.length).set(te)});let P=this.gpuDataManager.create(A,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(P.buffer,0,V,0,A),this.gpuDataManager.release(P.id),w={offset:0,size:A,buffer:P.buffer}}let b=this.programManager.normalizeDispatchGroupSize(a),v=b[1]===1&&b[2]===1,I=Pc(t,r,v),x=this.programManager.getArtifact(I);return x||(x=this.programManager.build(t,b),this.programManager.setArtifact(I,x),Pe("info",()=>`[artifact] key: ${I}, programName: ${t.name}`)),Pe("info",()=>`[ProgramManager] run "${t.name}" (key=${I}) with ${b[0]}x${b[1]}x${b[2]}`),this.programManager.run(x,r,$,u,g,b,w),$}upload(t,r){this.gpuDataManager.upload(t,r)}memcpy(t,r){this.gpuDataManager.memcpy(t,r)}async download(t,r){await this.gpuDataManager.download(t,r)}alloc(t){return this.gpuDataManager.create(t).id}free(t){return this.gpuDataManager.release(t)}createKernel(t,r,o,n){let s=cu.get(t);if(!s)throw new Error(`kernel not implemented: ${t}`);this.kernels.set(r,[t,n,s[0],[s[1],o]])}releaseKernel(t){let r=this.kernelPersistentData.get(t);if(r){for(let o of r)this.gpuDataManager.release(o.id);this.kernelPersistentData.delete(t)}this.kernelCustomData.delete(t),this.kernels.delete(t)}computeKernel(t,r,o){let n=this.kernels.get(t);if(!n)throw new Error(`kernel not created: ${t}`);let[s,u,d,a]=n;if(this.currentKernelId!==null)throw new Error(`kernel "[${s}] ${u}" is not allowed to be called recursively`);this.currentKernelId=t,a[0]&&(a[1]=a[0](a[1]),a[0]=void 0),Pe("info",()=>`[WebGPU] Start to run kernel "[${s}] ${u}"...`);let p=this.env.debug;this.temporaryData=[];try{return p&&this.device.pushErrorScope("validation"),d(r,a[1]),0}catch(h){return o.push(Promise.resolve(`[WebGPU] Kernel "[${s}] ${u}" failed. ${h}`)),1}finally{p&&o.push(this.device.popErrorScope().then(h=>h?`GPU validation error for kernel "[${s}] ${u}": ${h.message}`:null));for(let h of this.temporaryData)this.gpuDataManager.release(h.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(t,r,o,n){let s=this.sessionExternalDataMapping.get(t);s||(s=new Map,this.sessionExternalDataMapping.set(t,s));let u=s.get(r),d=this.gpuDataManager.registerExternalBuffer(o,n,u?.[1]);return s.set(r,[d,o]),d}unregisterBuffers(t){let r=this.sessionExternalDataMapping.get(t);r&&(r.forEach(o=>this.gpuDataManager.unregisterExternalBuffer(o[1])),this.sessionExternalDataMapping.delete(t))}getBuffer(t){let r=this.gpuDataManager.get(t);if(!r)throw new Error(`no GPU data for buffer: ${t}`);return r.buffer}createDownloader(t,r,o){return async()=>{let n=await xn(this,t,r);return Bo(n.buffer,o)}}}});var hu={};kr(hu,{init:()=>Rc});var pr,Fn,Rc,gu=q(()=>{"use strict";ze();fu();vt();ye();pr=class e{constructor(t,r,o,n){this.module=t;this.dataType=r;this.data=o;this.dims=n}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=D.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=D.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=D.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(D.size(t)!==D.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,t)}},Fn=class{constructor(t,r,o){this.module=t;this.backend=r;this.customDataOffset=0;this.customDataSize=0;let n=t.HEAPU32,s=o>>2;this.opKernelContext=n[s++];let u=n[s++];this.outputCount=n[s++],this.customDataOffset=n[s++],this.customDataSize=n[s++];let d=[];for(let a=0;a<u;a++){let p=n[s++],h=n[s++],$=n[s++],g=[];for(let w=0;w<$;w++)g.push(n[s++]);d.push(new pr(t,p,h,g))}this.inputs=d}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(t,r){let o=r?.inputs?.map(d=>typeof d=="number"?this.inputs[d]:d)??this.inputs,n=r?.outputs??[],s=(d,a,p)=>new pr(this.module,a,this.output(d,p),p),u=(d,a)=>{let p=sr(d);if(!p)throw new Error(`Unsupported data type: ${d}`);let h=p*D.size(a);return new pr(this.module,d,this.backend.gpuDataManager.create(h).id,a)};return this.backend.run(t,o,n,s,u)}output(t,r){let o=this.module.stackSave();try{let n=this.module.stackAlloc((1+r.length)*4),s=n>>2;this.module.HEAPU32[s++]=r.length;for(let u=0;u<r.length;u++)this.module.HEAPU32[s++]=r[u];return this.module._JsepOutput(this.opKernelContext,t,n)}catch(n){throw new Error(`Failed to generate kernel\'s output[${t}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${n}`)}finally{this.module.stackRestore(o)}}},Rc=async(e,t)=>{let r=e.jsepInit;if(r&&navigator.gpu){if(!t.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using WebGPU EP");let o=new nn;await o.initialize(t),r(o,n=>o.alloc(n),n=>o.free(n),(n,s,u,d=!1)=>{if(d)Pe("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${n}, dst=${s}, size=${u}`),o.memcpy(n,s);else{Pe("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${n}, gpuDataId=${s}, size=${u}`);let a=e.HEAPU8.subarray(n,n+u);o.upload(s,a)}},async(n,s,u)=>{Pe("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${n}, dataOffset=${s}, size=${u}`),await o.download(n,()=>e.HEAPU8.subarray(s,s+u))},(n,s,u)=>o.createKernel(n,s,u,t.debug||t.webgpu.profilingMode==="default"?e.UTF8ToString(e._JsepGetNodeName(s)):`${s}`),n=>o.releaseKernel(n),(n,s,u,d)=>{Pe("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${u}, kernel=${n}, contextDataOffset=${s}`);let a=new Fn(e,o,s);return o.computeKernel(n,a,d)})}}});var Ao;Ao=go();var qu=xo(),bn,wn=!1,Pr=!1,Io=!1,Ku=()=>{try{return typeof SharedArrayBuffer>"u"?!1:(typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch{return!1}},Yu=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Zu=(e,t)=>e?t?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":t?"ort-wasm-threaded.wasm":"ort-wasm.wasm",To=async e=>{if(wn)return Promise.resolve();if(Pr)throw new Error("multiple calls to \'initializeWebAssembly()\' detected.");if(Io)throw new Error("previous call to \'initializeWebAssembly()\' failed.");Pr=!0;let t=e.initTimeout,r=e.numThreads,o=e.simd,n=r>1&&Ku(),s=o&&Yu(),u=e.wasmPaths,d=typeof u=="string"?u:void 0,a=Zu(s,n),p=typeof u=="object"?u[a]:void 0,h=!1,$=[];if(t>0&&$.push(new Promise(g=>{setTimeout(()=>{h=!0,g()},t)})),$.push(new Promise((g,w)=>{let b=n?qu:Ao,v={locateFile:(I,x)=>{if(n&&I.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([Co()],{type:"text/javascript"}));if(I.endsWith(".wasm")){if(p)return p;let A=d??x;return a==="ort-wasm-simd.wasm"?A+"ort-wasm-simd.jsep.wasm":a==="ort-wasm-simd-threaded.wasm"?A+"ort-wasm-simd-threaded.jsep.wasm":A+a}return x+I}};if(n)if(typeof Blob>"u")v.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let I=`var ortWasmThreaded=${b.toString()};`;v.mainScriptUrlOrBlob=new Blob([I],{type:"text/javascript"})}b(v).then(I=>{Pr=!1,wn=!0,bn=I,g()},I=>{Pr=!1,Io=!0,w(I)})})),await Promise.race($),h)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},Be=()=>{if(wn&&bn)return bn;throw new Error("WebAssembly is not initialized yet.")};var De=(e,t)=>{let r=Be(),o=r.lengthBytesUTF8(e)+1,n=r._malloc(o);return r.stringToUTF8(e,n,o),t.push(n),n},ar=(e,t,r,o)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([n,s])=>{let u=t?t+n:n;if(typeof s=="object")ar(s,u+".",r,o);else if(typeof s=="string"||typeof s=="number")o(u,s.toString());else if(typeof s=="boolean")o(u,s?"1":"0");else throw new Error(`Can\'t handle extra config type: ${typeof s}`)})},Ee=e=>{let t=Be(),r=t.stackSave();try{let o=t.stackAlloc(8);t._OrtGetLastError(o,o+4);let n=t.HEAP32[o/4],s=t.HEAPU32[o/4+1],u=s?t.UTF8ToString(s):"";throw new Error(`${e} ERROR_CODE: ${n}, ERROR_MESSAGE: ${u}`)}finally{t.stackRestore(r)}};var _o=e=>{let t=Be(),r=0,o=[],n=e||{};try{if(e?.logSeverityLevel===void 0)n.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)n.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(n.terminate=!1);let s=0;return e?.tag!==void 0&&(s=De(e.tag,o)),r=t._OrtCreateRunOptions(n.logSeverityLevel,n.logVerbosityLevel,!!n.terminate,s),r===0&&Ee("Can\'t create run options."),e?.extra!==void 0&&ar(e.extra,"",new WeakSet,(u,d)=>{let a=De(u,o),p=De(d,o);t._OrtAddRunConfigEntry(r,a,p)!==0&&Ee(`Can\'t set a run config entry: ${u} - ${d}.`)}),[r,o]}catch(s){throw r!==0&&t._OrtReleaseRunOptions(r),o.forEach(u=>t._free(u)),s}};var Xu=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},Qu=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Ju=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},el=(e,t,r)=>{for(let o of t){let n=typeof o=="string"?o:o.name;switch(n){case"xnnpack":n="XNNPACK";break;case"webnn":if(n="WEBNN",typeof o!="string"){let u=o;if(u?.deviceType){let d=De("deviceType",r),a=De(u.deviceType,r);Be()._OrtAddSessionConfigEntry(e,d,a)!==0&&Ee(`Can\'t set a session config entry: \'deviceType\' - ${u.deviceType}.`)}if(u?.numThreads){let d=u.numThreads;(typeof d!="number"||!Number.isInteger(d)||d<0)&&(d=0);let a=De("numThreads",r),p=De(d.toString(),r);Be()._OrtAddSessionConfigEntry(e,a,p)!==0&&Ee(`Can\'t set a session config entry: \'numThreads\' - ${u.numThreads}.`)}if(u?.powerPreference){let d=De("powerPreference",r),a=De(u.powerPreference,r);Be()._OrtAddSessionConfigEntry(e,d,a)!==0&&Ee(`Can\'t set a session config entry: \'powerPreference\' - ${u.powerPreference}.`)}}break;case"webgpu":if(n="JS",typeof o!="string"){let u=o;if(u?.preferredLayout){if(u.preferredLayout!=="NCHW"&&u.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either \'NCHW\' or \'NHWC\': ${u.preferredLayout}`);let d=De("preferredLayout",r),a=De(u.preferredLayout,r);Be()._OrtAddSessionConfigEntry(e,d,a)!==0&&Ee(`Can\'t set a session config entry: \'preferredLayout\' - ${u.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${n}`)}let s=De(n,r);Be()._OrtAppendExecutionProvider(e,s)!==0&&Ee(`Can\'t append execution provider: ${n}.`)}},Eo=e=>{let t=Be(),r=0,o=[],n=e||{};Ju(n);try{let s=Xu(n.graphOptimizationLevel??"all"),u=Qu(n.executionMode??"sequential"),d=typeof n.logId=="string"?De(n.logId,o):0,a=n.logSeverityLevel??2;if(!Number.isInteger(a)||a<0||a>4)throw new Error(`log serverity level is not valid: ${a}`);let p=n.logVerbosityLevel??0;if(!Number.isInteger(p)||p<0||p>4)throw new Error(`log verbosity level is not valid: ${p}`);let h=typeof n.optimizedModelFilePath=="string"?De(n.optimizedModelFilePath,o):0;if(r=t._OrtCreateSessionOptions(s,!!n.enableCpuMemArena,!!n.enableMemPattern,u,!!n.enableProfiling,0,d,a,p,h),r===0&&Ee("Can\'t create session options."),n.executionProviders&&el(r,n.executionProviders,o),n.freeDimensionOverrides)for(let[$,g]of Object.entries(n.freeDimensionOverrides)){if(typeof $!="string")throw new Error(`free dimension override name must be a string: ${$}`);if(typeof g!="number"||!Number.isInteger(g)||g<0)throw new Error(`free dimension override value must be a non-negative integer: ${g}`);let w=De($,o);t._OrtAddFreeDimensionOverride(r,w,g)!==0&&Ee(`Can\'t set a free dimension override: ${$} - ${g}.`)}return n.extra!==void 0&&ar(n.extra,"",new WeakSet,($,g)=>{let w=De($,o),b=De(g,o);t._OrtAddSessionConfigEntry(r,w,b)!==0&&Ee(`Can\'t set a session config entry: ${$} - ${g}.`)}),[r,o]}catch(s){throw r!==0&&t._OrtReleaseSessionOptions(r),o.forEach(u=>t._free(u)),s}};ze();var bu=!1,Bc=e=>{let t=Be(),r=t.stackSave();try{let o=t.stackAlloc(8);return t._OrtGetInputOutputCount(e,o,o+4)!==0&&Ee("Can\'t get session input/output count."),[t.HEAP32[o/4],t.HEAP32[o/4+1]]}finally{t.stackRestore(r)}},Mc=(e,t)=>{Be()._OrtInit(e,t)!==0&&Ee("Can\'t initialize onnxruntime.")},wu=async e=>{Mc(e.wasm.numThreads,ur(e.logLevel));{let t=(gu(),Vt(hu)).init;await t(Be(),e)}bu=!0},mr=new Map,vu=()=>bu,jn=e=>{let t=Be(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can\'t create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},qn=(e,t)=>{let r=Be(),o=0,n=0,s=0,u=[],d=[],a=[];try{[n,u]=Eo(t),o=r._OrtCreateSession(e[0],e[1],n),o===0&&Ee("Can\'t create a session.");let[p,h]=Bc(o),$=[],g=[],w=[];for(let v=0;v<p;v++){let I=r._OrtGetInputName(o,v);I===0&&Ee("Can\'t get an input name."),d.push(I),$.push(r.UTF8ToString(I))}for(let v=0;v<h;v++){let I=r._OrtGetOutputName(o,v);I===0&&Ee("Can\'t get an output name."),a.push(I);let x=r.UTF8ToString(I);g.push(x);{let A=typeof t?.preferredOutputLocation=="string"?t.preferredOutputLocation:t?.preferredOutputLocation?.[x]??"cpu";if(A!=="cpu"&&A!=="cpu-pinned"&&A!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${A}.`);w.push(A)}}let b=null;return w.some(v=>v==="gpu-buffer")&&(s=r._OrtCreateBinding(o),s===0&&Ee("Can\'t create IO binding."),b={handle:s,outputPreferredLocations:w,outputPreferredLocationsEncoded:w.map(v=>$n(v))}),mr.set(o,[o,d,a,b]),[o,$,g]}catch(p){throw d.forEach(h=>r._OrtFree(h)),a.forEach(h=>r._OrtFree(h)),s!==0&&r._OrtReleaseBinding(s),o!==0&&r._OrtReleaseSession(o),p}finally{r._free(e[0]),n!==0&&r._OrtReleaseSessionOptions(n),u.forEach(p=>r._free(p))}},$u=(e,t)=>{let r=jn(e);return qn(r,t)},Su=e=>{let t=Be(),r=mr.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[o,n,s,u]=r;u&&t._OrtReleaseBinding(u.handle),t.jsepUnregisterBuffers?.(e),n.forEach(d=>t._OrtFree(d)),s.forEach(d=>t._OrtFree(d)),t._OrtReleaseSession(o),mr.delete(e)},yu=(e,t,r,o,n)=>{if(!e){t.push(0);return}let s=Be(),u=e[0],d=e[1],a=e[3],p,h;if(u==="string"&&a==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(a==="gpu-buffer"){let w=e[2].gpuBuffer,b=sr(vn(u));h=d.reduce((v,I)=>v*I,1)*b,p=s.jsepRegisterBuffer(o,n,w,h)}else{let w=e[2];if(Array.isArray(w)){h=4*w.length,p=s._malloc(h),r.push(p);let b=p/4;for(let v=0;v<w.length;v++){if(typeof w[v]!="string")throw new TypeError(`tensor data at index ${v} is not a string`);s.HEAPU32[b++]=De(w[v],r)}}else h=w.byteLength,p=s._malloc(h),r.push(p),s.HEAPU8.set(new Uint8Array(w.buffer,w.byteOffset,h),p)}let $=s.stackSave(),g=s.stackAlloc(4*d.length);try{let w=g/4;d.forEach(v=>s.HEAP32[w++]=v);let b=s._OrtCreateTensor(vn(u),p,h,g,d.length,$n(a));b===0&&Ee(`Can\'t create tensor for input/output. session=${o}, index=${n}.`),t.push(b)}finally{s.stackRestore($)}},xu=async(e,t,r,o,n,s)=>{let u=Be(),d=mr.get(e);if(!d)throw new Error(`cannot run inference. invalid session id: ${e}`);let[a,p,h,$]=d,g=t.length,w=o.length,b=0,v=[],I=[],x=[],A=[],B=u.stackSave(),E=u.stackAlloc(g*4),V=u.stackAlloc(g*4),P=u.stackAlloc(w*4),z=u.stackAlloc(w*4);try{[b,v]=_o(s);for(let Q=0;Q<g;Q++)yu(r[Q],I,A,e,t[Q]);for(let Q=0;Q<w;Q++)yu(n[Q],x,A,e,g+o[Q]);let U=E/4,F=V/4,te=P/4,R=z/4;for(let Q=0;Q<g;Q++)u.HEAPU32[U++]=I[Q],u.HEAPU32[F++]=p[t[Q]];for(let Q=0;Q<w;Q++)u.HEAPU32[te++]=x[Q],u.HEAPU32[R++]=h[o[Q]];if($){let{handle:Q,outputPreferredLocations:$e,outputPreferredLocationsEncoded:Y}=$;if(p.length!==g)throw new Error(`input count from feeds (${g}) is expected to be always equal to model\'s input count (${p.length}).`);for(let Se=0;Se<g;Se++){let Ie=t[Se];await u._OrtBindInput(Q,p[Ie],I[Se])!==0&&Ee(`Can\'t bind input[${Se}] for session=${e}.`)}for(let Se=0;Se<w;Se++){let Ie=o[Se];n[Se]?.[3]?u._OrtBindOutput(Q,h[Ie],x[Se],0)!==0&&Ee(`Can\'t bind pre-allocated output[${Se}] for session=${e}.`):u._OrtBindOutput(Q,h[Ie],0,Y[Ie])!==0&&Ee(`Can\'t bind output[${Se}] to ${$e[Se]} for session=${e}.`)}}let j;$?j=await u._OrtRunWithBinding(a,$.handle,w,P,b):j=await u._OrtRun(a,V,E,g,z,w,P,b),j!==0&&Ee("failed to call OrtRun().");let pe=[];for(let Q=0;Q<w;Q++){let $e=u.HEAPU32[P/4+Q];if($e===x[Q]){pe.push(n[Q]);continue}let Y=u.stackSave(),Se=u.stackAlloc(4*4),Ie=!1,Ae,he=0;try{u._OrtGetTensorData($e,Se,Se+4,Se+8,Se+12)!==0&&Ee(`Can\'t access output tensor data on index ${Q}.`);let He=Se/4,Le=u.HEAPU32[He++];he=u.HEAPU32[He++];let L=u.HEAPU32[He++],de=u.HEAPU32[He++],fe=[];for(let Re=0;Re<de;Re++)fe.push(u.HEAPU32[L/4+Re]);u._OrtFree(L);let Ue=fe.reduce((Re,Ve)=>Re*Ve,1);Ae=ir(Le);let Ke=$?.outputPreferredLocations[o[Q]];if(Ae==="string"){if(Ke==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let Re=[],Ve=he/4;for(let Fe=0;Fe<Ue;Fe++){let ot=u.HEAPU32[Ve++],Ze=Fe===Ue-1?void 0:u.HEAPU32[Ve]-ot;Re.push(u.UTF8ToString(ot,Ze))}pe.push([Ae,fe,Re,"cpu"])}else if(Ke==="gpu-buffer"&&Ue>0){let Re=u.jsepGetBuffer(he),Ve=sr(Le);if(Ve===void 0||!Oo(Ae))throw new Error(`Unsupported data type: ${Ae}`);Ie=!0,pe.push([Ae,fe,{gpuBuffer:Re,download:u.jsepCreateDownloader(Re,Ue*Ve,Ae),dispose:()=>{u._OrtReleaseTensor($e)}},"gpu-buffer"])}else{let Re=Rr(Ae),Ve=new Re(Ue);new Uint8Array(Ve.buffer,Ve.byteOffset,Ve.byteLength).set(u.HEAPU8.subarray(he,he+Ve.byteLength)),pe.push([Ae,fe,Ve,"cpu"])}}finally{u.stackRestore(Y),Ae==="string"&&he&&u._free(he),Ie||u._OrtReleaseTensor($e)}}return $&&u._OrtClearBoundOutputs($.handle),pe}finally{u.stackRestore(B),I.forEach(U=>u._OrtReleaseTensor(U)),x.forEach(U=>u._OrtReleaseTensor(U)),A.forEach(U=>u._free(U)),b!==0&&u._OrtReleaseRunOptions(b),v.forEach(U=>u._free(U))}},Cu=e=>{let t=Be(),r=mr.get(e);if(!r)throw new Error("invalid session id");let o=r[0],n=t._OrtEndProfiling(o);n===0&&Ee("Can\'t get an profile file name."),t._OrtFree(n)},Iu=e=>{let t=[];for(let r of e){let o=r[2];!Array.isArray(o)&&"buffer"in o&&t.push(o.buffer)}return t};self.onmessage=e=>{switch(e.data.type){case"init-wasm":try{To(e.data.in).then(()=>postMessage({type:"init-wasm"}),t=>postMessage({type:"init-wasm",err:t}))}catch(t){postMessage({type:"init-wasm",err:t})}break;case"init-ort":try{wu(e.data.in).then(()=>postMessage({type:"init-ort"}),t=>postMessage({type:"init-ort",err:t}))}catch(t){postMessage({type:"init-ort",err:t})}break;case"create_allocate":try{let{model:t}=e.data.in,r=jn(t);postMessage({type:"create_allocate",out:r})}catch(t){postMessage({type:"create_allocate",err:t})}break;case"create_finalize":try{let{modeldata:t,options:r}=e.data.in,o=qn(t,r);postMessage({type:"create_finalize",out:o})}catch(t){postMessage({type:"create_finalize",err:t})}break;case"create":try{let{model:t,options:r}=e.data.in,o=$u(t,r);postMessage({type:"create",out:o})}catch(t){postMessage({type:"create",err:t})}break;case"release":try{Su(e.data.in),postMessage({type:"release"})}catch(t){postMessage({type:"release",err:t})}break;case"run":try{let{sessionId:t,inputIndices:r,inputs:o,outputIndices:n,options:s}=e.data.in;xu(t,r,o,n,new Array(n.length).fill(null),s).then(u=>{u.some(d=>d[3]!=="cpu")?postMessage({type:"run",err:"Proxy does not support non-cpu tensor location."}):postMessage({type:"run",out:u},Iu(u))},u=>{postMessage({type:"run",err:u})})}catch(t){postMessage({type:"run",err:t})}break;case"end-profiling":try{let t=e.data.in;Cu(t),postMessage({type:"end-profiling"})}catch(t){postMessage({type:"end-profiling",err:t})}break;case"is-ort-env-initialized":try{let t=vu();postMessage({type:"is-ort-env-initialized",out:t})}catch(t){postMessage({type:"is-ort-env-initialized",err:t})}break;default:}};})();\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n'});var Or,Lt,la,bu,yu,uu,lu,du,cu,fu,pu,hu,mu,gu,Vr,mT,ua,by,yy,vy,wy,vu,xy,Ty,$y,Sy,wu=B(()=>{"use strict";kt();my();kn();Or=()=>!!Te.wasm.proxy&&typeof document<"u",la=!1,bu=!1,yu=!1,du=[],cu=[],fu=[],pu=[],hu=[],mu=[],gu=[],Vr=()=>{if(la||!bu||yu||!Lt)throw new Error("worker not ready")},mT=r=>{switch(r.data.type){case"init-wasm":la=!1,r.data.err?(yu=!0,uu[1](r.data.err)):(bu=!0,uu[0]());break;case"init-ort":r.data.err?lu[1](r.data.err):lu[0]();break;case"create_allocate":r.data.err?du.shift()[1](r.data.err):du.shift()[0](r.data.out);break;case"create_finalize":r.data.err?cu.shift()[1](r.data.err):cu.shift()[0](r.data.out);break;case"create":r.data.err?fu.shift()[1](r.data.err):fu.shift()[0](r.data.out);break;case"release":r.data.err?pu.shift()[1](r.data.err):pu.shift()[0]();break;case"run":r.data.err?hu.shift()[1](r.data.err):hu.shift()[0](r.data.out);break;case"end-profiling":r.data.err?mu.shift()[1](r.data.err):mu.shift()[0]();break;case"is-ort-env-initialized":r.data.err?gu.shift()[1](r.data.err):gu.shift()[0](r.data.out);break;default:}},ua=typeof document<"u"?document?.currentScript?.src:void 0,by=async()=>{if(Or()){if(bu)return;if(la)throw new Error("multiple calls to 'initWasm()' detected.");if(yu)throw new Error("previous call to 'initWasm()' failed.");return la=!0,Te.wasm.wasmPaths===void 0&&ua&&ua.indexOf("blob:")!==0&&(Te.wasm.wasmPaths=ua.substr(0,+ua.lastIndexOf("/")+1)),new Promise((r,e)=>{Lt?.terminate();let n=URL.createObjectURL(new Blob([gy()],{type:"text/javascript"}));Lt=new Worker(n,{name:"ort-wasm-proxy-worker"}),Lt.onerror=o=>e(o),Lt.onmessage=mT,URL.revokeObjectURL(n),uu=[r,e];let t={type:"init-wasm",in:Te.wasm};Lt.postMessage(t)})}else return Ph(Te.wasm)},yy=async r=>{if(Or())return Vr(),new Promise((e,n)=>{lu=[e,n];let t={type:"init-ort",in:r};Lt.postMessage(t)});await uy(r)},vy=async r=>Or()?(Vr(),new Promise((e,n)=>{du.push([e,n]);let t={type:"create_allocate",in:{model:r}};Lt.postMessage(t,[r.buffer])})):au(r),wy=async(r,e)=>Or()?(Vr(),new Promise((n,t)=>{cu.push([n,t]);let o={type:"create_finalize",in:{modeldata:r,options:e}};Lt.postMessage(o)})):su(r,e),vu=async(r,e)=>{if(Or()){if(e?.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return Vr(),new Promise((n,t)=>{fu.push([n,t]);let o={type:"create",in:{model:r,options:e}};Lt.postMessage(o,[r.buffer])})}else return dy(r,e)},xy=async r=>{if(Or())return Vr(),new Promise((e,n)=>{pu.push([e,n]);let t={type:"release",in:r};Lt.postMessage(t)});cy(r)},Ty=async(r,e,n,t,o,i)=>{if(Or()){if(n.some(u=>u[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(o.some(u=>u))throw new Error("pre-allocated output tensor is not supported for proxy.");return Vr(),new Promise((u,a)=>{hu.push([u,a]);let s=n,l={type:"run",in:{sessionId:r,inputIndices:e,inputs:s,outputIndices:t,options:i}};Lt.postMessage(l,hy(s))})}else return fy(r,e,n,t,o,i)},$y=async r=>{if(Or())return Vr(),new Promise((e,n)=>{mu.push([e,n]);let t={type:"end-profiling",in:r};Lt.postMessage(t)});py(r)},Sy=async()=>Or()?(Vr(),new Promise((r,e)=>{gu.push([r,e]);let n={type:"is-ort-env-initialized"};Lt.postMessage(n)})):ly()});var da,Iy,gT,ca,_y=B(()=>{"use strict";kt();wu();at();Iy=(r,e)=>{switch(r.location){case"cpu":return[r.type,r.dims,r.data,"cpu"];case"gpu-buffer":return[r.type,r.dims,{gpuBuffer:r.gpuBuffer},"gpu-buffer"];default:throw new Error(`invalid data location: ${r.location} for ${e()}`)}},gT=r=>{switch(r[3]){case"cpu":return new ht(r[0],r[2],r[1]);case"gpu-buffer":{let e=r[0];if(!Vi(e))throw new Error(`not supported data type: ${e} for deserializing GPU tensor`);let{gpuBuffer:n,download:t,dispose:o}=r[2];return ht.fromGpuBuffer(n,{dataType:e,dims:r[1],download:t,dispose:o})}default:throw new Error(`invalid data location: ${r[3]}`)}},ca=class{async createSessionAllocate(e){let n=await fetch(e);if(n.status!==200)throw new Error(`failed to load model: ${e}`);let t=await n.arrayBuffer();return vy(new Uint8Array(t))}async loadModel(e,n){if(await Sy()||(da||(da=yy(Te)),await da,da=void 0),typeof e=="string")if(typeof process<"u"&&process.versions&&process.versions.node){let t=await(void 0)(e);[this.sessionId,this.inputNames,this.outputNames]=await vu(t,n)}else{let t=await this.createSessionAllocate(e);[this.sessionId,this.inputNames,this.outputNames]=await wy(t,n)}else[this.sessionId,this.inputNames,this.outputNames]=await vu(e,n)}async dispose(){return xy(this.sessionId)}async run(e,n,t){let o=[],i=[];Object.entries(e).forEach(f=>{let g=f[0],b=f[1],y=this.inputNames.indexOf(g);if(y===-1)throw new Error(`invalid input '${g}'`);o.push(b),i.push(y)});let u=[],a=[];Object.entries(n).forEach(f=>{let g=f[0],b=f[1],y=this.outputNames.indexOf(g);if(y===-1)throw new Error(`invalid output '${g}'`);u.push(b),a.push(y)});let s=o.map((f,g)=>Iy(f,()=>`input "${this.inputNames[i[g]]}"`)),l=u.map((f,g)=>f?Iy(f,()=>`output "${this.outputNames[a[g]]}"`):null),d=await Ty(this.sessionId,i,s,a,l,t),p={};for(let f=0;f<d.length;f++)p[this.outputNames[a[f]]]=u[f]??gT(d[f]);return p}startProfiling(){}endProfiling(){$y(this.sessionId)}}});var bT,fa,Ay=B(()=>{"use strict";kt();wu();_y();bT=()=>{if((typeof Te.wasm.initTimeout!="number"||Te.wasm.initTimeout<0)&&(Te.wasm.initTimeout=0),typeof Te.wasm.simd!="boolean"&&(Te.wasm.simd=!0),typeof Te.wasm.proxy!="boolean"&&(Te.wasm.proxy=!1),typeof Te.wasm.numThreads!="number"||!Number.isInteger(Te.wasm.numThreads)||Te.wasm.numThreads<=0){let r=typeof navigator>"u"?(void 0)().length:navigator.hardwareConcurrency;Te.wasm.numThreads=Math.min(4,Math.ceil((r||1)/2))}},fa=class{async init(){bT(),await by()}async createInferenceSessionHandler(e,n){let t=new ca;return await t.loadModel(e,n),Promise.resolve(t)}}});var Oy={};Yr(Oy,{wasmBackend:()=>yT});var yT,Ey=B(()=>{"use strict";Ay();yT=new fa});kt();kt();kt();var fl="1.17.0";var CM=xa;{let r=(bh(),kr(gh)).onnxjsBackend;Sr("webgl",r,-10)}{let r=(Ey(),kr(Oy)).wasmBackend;typeof navigator<"u"&&navigator.gpu&&Sr("webgpu",r,5),Sr("cpu",r,10),Sr("wasm",r,10),Sr("xnnpack",r,9),Sr("webnn",r,9)}Object.defineProperty(Te.versions,"web",{value:fl,enumerable:!0});export{Ky as InferenceSession,ht as Tensor,Xy as TrainingSession,CM as default,Te as env,Sr as registerBackend};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/*! Bundled license information:

long/index.js:
  (**
   * @license
   * Copyright 2009 The Closure Library Authors
   * Copyright 2020 Daniel Wirtz / The long.js Authors.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *     http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *
   * SPDX-License-Identifier: Apache-2.0
   *)
*/
//# sourceMappingURL=ort.all.min.js.map
