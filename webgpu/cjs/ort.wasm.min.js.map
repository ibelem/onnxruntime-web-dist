{
  "version": 3,
  "sources": ["../../node_modules/onnxruntime-common/lib/backend-impl.ts", "../../node_modules/onnxruntime-common/lib/backend.ts", "../../node_modules/onnxruntime-common/lib/version.ts", "../../node_modules/onnxruntime-common/lib/env-impl.ts", "../../node_modules/onnxruntime-common/lib/env.ts", "../../node_modules/onnxruntime-common/lib/tensor-conversion-impl.ts", "../../node_modules/onnxruntime-common/lib/tensor-factory-impl.ts", "../../node_modules/onnxruntime-common/lib/tensor-impl-type-mapping.ts", "../../node_modules/onnxruntime-common/lib/tensor-utils-impl.ts", "../../node_modules/onnxruntime-common/lib/tensor-impl.ts", "../../node_modules/onnxruntime-common/lib/tensor.ts", "../../node_modules/onnxruntime-common/lib/inference-session-impl.ts", "../../node_modules/onnxruntime-common/lib/inference-session.ts", "../../node_modules/onnxruntime-common/lib/onnx-value.ts", "../../node_modules/onnxruntime-common/lib/training-session-impl.ts", "../../node_modules/onnxruntime-common/lib/training-session.ts", "../../node_modules/onnxruntime-common/lib/index.ts", "nodejs-ignore:fs", "nodejs-ignore:path", "../../lib/wasm/binding/ort-wasm.js", "nodejs-ignore:worker_threads", "nodejs-ignore:perf_hooks", "nodejs-ignore:os", "../../lib/wasm/binding/ort-wasm-threaded.js", "../../lib/wasm/binding/ort-wasm-threaded.worker.js", "../../lib/wasm/wasm-factory.ts", "../../lib/wasm/wasm-utils.ts", "../../lib/wasm/run-options.ts", "../../lib/wasm/session-options.ts", "../../lib/wasm/wasm-common.ts", "../../lib/wasm/wasm-core-impl.ts", "proxy-worker:./proxy-worker/main", "../../lib/wasm/proxy-wrapper.ts", "../../lib/wasm/session-handler-inference.ts", "../../lib/backend-wasm.ts", "../../lib/backend-wasm-inference.ts", "../../lib/index.ts", "../../lib/version.ts"],
  "sourcesContent": ["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Backend} from './backend.js';\n\ninterface BackendInfo {\n  backend: Backend;\n  priority: number;\n\n  initPromise?: Promise<void>;\n  initialized?: boolean;\n  aborted?: boolean;\n}\n\nconst backends: Map<string, BackendInfo> = new Map();\nconst backendsSortedByPriority: string[] = [];\n\n/**\n * Register a backend.\n *\n * @param name - the name as a key to lookup as an execution provider.\n * @param backend - the backend object.\n * @param priority - an integer indicating the priority of the backend. Higher number means higher priority. if priority\n * < 0, it will be considered as a 'beta' version and will not be used as a fallback backend by default.\n *\n * @ignore\n */\nexport const registerBackend = (name: string, backend: Backend, priority: number): void => {\n  if (backend && typeof backend.init === 'function' && typeof backend.createInferenceSessionHandler === 'function') {\n    const currentBackend = backends.get(name);\n    if (currentBackend === undefined) {\n      backends.set(name, {backend, priority});\n    } else if (currentBackend.priority > priority) {\n      // same name is already registered with a higher priority. skip registeration.\n      return;\n    } else if (currentBackend.priority === priority) {\n      if (currentBackend.backend !== backend) {\n        throw new Error(`cannot register backend \"${name}\" using priority ${priority}`);\n      }\n    }\n\n    if (priority >= 0) {\n      const i = backendsSortedByPriority.indexOf(name);\n      if (i !== -1) {\n        backendsSortedByPriority.splice(i, 1);\n      }\n\n      for (let i = 0; i < backendsSortedByPriority.length; i++) {\n        if (backends.get(backendsSortedByPriority[i])!.priority <= priority) {\n          backendsSortedByPriority.splice(i, 0, name);\n          return;\n        }\n      }\n      backendsSortedByPriority.push(name);\n    }\n    return;\n  }\n\n  throw new TypeError('not a valid backend');\n};\n\n/**\n * Resolve backend by specified hints.\n *\n * @param backendHints - a list of execution provider names to lookup. If omitted use registered backends as list.\n * @returns a promise that resolves to the backend.\n *\n * @ignore\n */\nexport const resolveBackend = async(backendHints: readonly string[]): Promise<Backend> => {\n  const backendNames = backendHints.length === 0 ? backendsSortedByPriority : backendHints;\n  const errors = [];\n  for (const backendName of backendNames) {\n    const backendInfo = backends.get(backendName);\n    if (backendInfo) {\n      if (backendInfo.initialized) {\n        return backendInfo.backend;\n      } else if (backendInfo.aborted) {\n        continue;  // current backend is unavailable; try next\n      }\n\n      const isInitializing = !!backendInfo.initPromise;\n      try {\n        if (!isInitializing) {\n          backendInfo.initPromise = backendInfo.backend.init(backendName);\n        }\n        await backendInfo.initPromise;\n        backendInfo.initialized = true;\n        return backendInfo.backend;\n      } catch (e) {\n        if (!isInitializing) {\n          errors.push({name: backendName, err: e});\n        }\n        backendInfo.aborted = true;\n      } finally {\n        delete backendInfo.initPromise;\n      }\n    }\n  }\n\n  throw new Error(`no available backend found. ERR: ${errors.map(e => `[${e.name}] ${e.err}`).join(', ')}`);\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from './inference-session.js';\nimport {OnnxValue} from './onnx-value.js';\nimport {TrainingSession} from './training-session.js';\n\n/**\n * @ignore\n */\nexport declare namespace SessionHandler {\n  type FeedsType = {[name: string]: OnnxValue};\n  type FetchesType = {[name: string]: OnnxValue | null};\n  type ReturnType = {[name: string]: OnnxValue};\n}\n\n/**\n * Represents shared SessionHandler functionality\n *\n * @ignore\n */\ninterface SessionHandler {\n  dispose(): Promise<void>;\n\n  readonly inputNames: readonly string[];\n  readonly outputNames: readonly string[];\n}\n\n/**\n * Represent a handler instance of an inference session.\n *\n * @ignore\n */\nexport interface InferenceSessionHandler extends SessionHandler {\n  startProfiling(): void;\n  endProfiling(): void;\n\n  run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType,\n      options: InferenceSession.RunOptions): Promise<SessionHandler.ReturnType>;\n}\n\n/**\n * Represent a handler instance of a training inference session.\n *\n * @ignore\n */\nexport interface TrainingSessionHandler extends SessionHandler {\n  readonly evalInputNames: readonly string[];\n  readonly evalOutputNames: readonly string[];\n\n  lazyResetGrad(): Promise<void>;\n  runTrainStep(\n      feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType,\n      options: InferenceSession.RunOptions): Promise<SessionHandler.ReturnType>;\n  runOptimizerStep(options: InferenceSession.RunOptions): Promise<void>;\n  runEvalStep(\n      feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType,\n      options: InferenceSession.RunOptions): Promise<SessionHandler.ReturnType>;\n\n  getParametersSize(trainableOnly: boolean): Promise<number>;\n  loadParametersBuffer(array: Uint8Array, trainableOnly: boolean): Promise<void>;\n  getContiguousParameters(trainableOnly: boolean): Promise<OnnxValue>;\n}\n\n/**\n * Represent a backend that provides implementation of model inferencing.\n *\n * @ignore\n */\nexport interface Backend {\n  /**\n   * Initialize the backend asynchronously. Should throw when failed.\n   */\n  init(backendName: string): Promise<void>;\n\n  createInferenceSessionHandler(uriOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<InferenceSessionHandler>;\n\n  createTrainingSessionHandler?\n      (checkpointStateUriOrBuffer: TrainingSession.URIorBuffer, trainModelUriOrBuffer: TrainingSession.URIorBuffer,\n       evalModelUriOrBuffer: TrainingSession.URIorBuffer, optimizerModelUriOrBuffer: TrainingSession.URIorBuffer,\n       options: InferenceSession.SessionOptions): Promise<TrainingSessionHandler>;\n}\n\nexport {registerBackend} from './backend-impl.js';\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n// This file is generated by /js/scripts/update-version.ts\n// Do not modify file content manually.\n\nexport const version = '1.17.0';\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from './env.js';\nimport {version} from './version.js';\n\ntype LogLevelType = Env['logLevel'];\n\nlet logLevelValue: Required<LogLevelType> = 'warning';\n\nexport const env: Env = {\n  wasm: {} as Env.WebAssemblyFlags,\n  webgl: {} as Env.WebGLFlags,\n  webgpu: {} as Env.WebGpuFlags,\n  versions: {common: version},\n\n  set logLevel(value: LogLevelType) {\n    if (value === undefined) {\n      return;\n    }\n    if (typeof value !== 'string' || ['verbose', 'info', 'warning', 'error', 'fatal'].indexOf(value) === -1) {\n      throw new Error(`Unsupported logging level: ${value}`);\n    }\n    logLevelValue = value;\n  },\n  get logLevel(): Required<LogLevelType> {\n    return logLevelValue;\n  },\n};\n\n// set property 'logLevel' so that they can be correctly transferred to worker by `postMessage()`.\nObject.defineProperty(env, 'logLevel', {enumerable: true});\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env as envImpl} from './env-impl.js';\n\nexport declare namespace Env {\n  export type WasmPrefixOrFilePaths = string|{\n    /* eslint-disable @typescript-eslint/naming-convention */\n    'ort-wasm.wasm'?: string;\n    'ort-wasm-threaded.wasm'?: string;\n    'ort-wasm-simd.wasm'?: string;\n    'ort-training-wasm-simd.wasm'?: string;\n    'ort-wasm-simd-threaded.wasm'?: string;\n    /* eslint-enable @typescript-eslint/naming-convention */\n  };\n  export interface WebAssemblyFlags {\n    /**\n     * set or get number of thread(s). If omitted or set to 0, number of thread(s) will be determined by system. If set\n     * to 1, no worker thread will be spawned.\n     *\n     * This setting is available only when WebAssembly multithread feature is available in current context.\n     *\n     * @defaultValue `0`\n     */\n    numThreads?: number;\n\n    /**\n     * set or get a boolean value indicating whether to enable SIMD. If set to false, SIMD will be forcely disabled.\n     *\n     * This setting is available only when WebAssembly SIMD feature is available in current context.\n     *\n     * @defaultValue `true`\n     */\n    simd?: boolean;\n\n    /**\n     * Set or get a number specifying the timeout for initialization of WebAssembly backend, in milliseconds. A zero\n     * value indicates no timeout is set.\n     *\n     * @defaultValue `0`\n     */\n    initTimeout?: number;\n\n    /**\n     * Set a custom URL prefix to the .wasm files or a set of overrides for each .wasm file. The override path should be\n     * an absolute path.\n     */\n    wasmPaths?: WasmPrefixOrFilePaths;\n\n    /**\n     * Set or get a boolean value indicating whether to proxy the execution of main thread to a worker thread.\n     *\n     * @defaultValue `false`\n     */\n    proxy?: boolean;\n  }\n\n  export interface WebGLFlags {\n    /**\n     * Set or get the WebGL Context ID (webgl or webgl2).\n     *\n     * @defaultValue `'webgl2'`\n     */\n    contextId?: 'webgl'|'webgl2';\n    /**\n     * Get the WebGL rendering context.\n     */\n    readonly context: WebGLRenderingContext;\n    /**\n     * Set or get the maximum batch size for matmul. 0 means to disable batching.\n     *\n     * @deprecated\n     */\n    matmulMaxBatchSize?: number;\n    /**\n     * Set or get the texture cache mode.\n     *\n     * @defaultValue `'full'`\n     */\n    textureCacheMode?: 'initializerOnly'|'full';\n    /**\n     * Set or get the packed texture mode\n     *\n     * @defaultValue `false`\n     */\n    pack?: boolean;\n    /**\n     * Set or get whether enable async download.\n     *\n     * @defaultValue `false`\n     */\n    async?: boolean;\n  }\n\n  export interface WebGpuProfilingDataV1TensorMetadata {\n    dims: readonly number[];\n    dataType: string;\n  }\n  export interface WebGpuProfilingDataV1 {\n    version: 1;\n    inputsMetadata: readonly WebGpuProfilingDataV1TensorMetadata[];\n    outputsMetadata: readonly WebGpuProfilingDataV1TensorMetadata[];\n    kernelId: number;\n    kernelType: string;\n    kernelName: string;\n    startTime: number;\n    endTime: number;\n  }\n\n  export type WebGpuProfilingData = WebGpuProfilingDataV1;\n\n  export interface WebGpuFlags {\n    /**\n     * Set or get the profiling mode.\n     *\n     * @deprecated Use `env.webgpu.profiling.mode` instead. If `env.webgpu.profiling.mode` is set, this property will be\n     * ignored.\n     */\n    profilingMode?: 'off'|'default';\n    /**\n     * Set or get the profiling configuration.\n     */\n    profiling?: {\n      /**\n       * Set or get the profiling mode.\n       *\n       * @defaultValue `'off'`\n       */\n      mode?: 'off'|'default';\n\n      /**\n       * Set or get a callback function when a profiling data is received. If not set, the profiling data will be\n       * printed to console.\n       */\n      ondata?: (data: WebGpuProfilingData) => void;\n    };\n    /**\n     * Get the device for WebGPU.\n     *\n     * When use with TypeScript, the type of this property is `GPUDevice` defined in \"@webgpu/types\".\n     * Use `const device = env.webgpu.device as GPUDevice;` in TypeScript to access this property with correct type.\n     *\n     * see comments on {@link GpuBufferType} for more details about why not use types defined in \"@webgpu/types\".\n     */\n    readonly device: unknown;\n    /**\n     * Set or get whether validate input content.\n     *\n     * @defaultValue `false`\n     */\n    validateInputContent?: boolean;\n  }\n}\n\nexport interface Env {\n  /**\n   * set the severity level for logging.\n   *\n   * @defaultValue `'warning'`\n   */\n  logLevel?: 'verbose'|'info'|'warning'|'error'|'fatal';\n  /**\n   * Indicate whether run in debug mode.\n   *\n   * @defaultValue `false`\n   */\n  debug?: boolean;\n\n  /**\n   * Get version of the current package.\n   */\n  readonly versions: {\n    readonly common: string;\n    readonly web?: string;\n    readonly node?: string;\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    readonly 'react-native'?: string;\n  };\n\n  /**\n   * Represent a set of flags for WebAssembly\n   */\n  readonly wasm: Env.WebAssemblyFlags;\n\n  /**\n   * Represent a set of flags for WebGL\n   */\n  readonly webgl: Env.WebGLFlags;\n\n  /**\n   * Represent a set of flags for WebGPU\n   */\n  readonly webgpu: Env.WebGpuFlags;\n\n  [name: string]: unknown;\n}\n\n/**\n * Represent a set of flags as a global singleton.\n */\nexport const env: Env = envImpl;\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorToDataUrlOptions, TensorToImageDataOptions} from './tensor-conversion.js';\nimport {Tensor} from './tensor.js';\n\n/**\n * implementation of Tensor.toDataURL()\n */\nexport const tensorToDataURL = (tensor: Tensor, options?: TensorToDataUrlOptions): string => {\n  const canvas = document.createElement('canvas');\n  canvas.width = tensor.dims[3];\n  canvas.height = tensor.dims[2];\n  const pixels2DContext = canvas.getContext('2d');\n\n  if (pixels2DContext != null) {\n    // Default values for height and width & format\n    let width: number;\n    let height: number;\n    if (options?.tensorLayout !== undefined && options.tensorLayout === 'NHWC') {\n      width = tensor.dims[2];\n      height = tensor.dims[3];\n    } else {  // Default layout is NCWH\n      width = tensor.dims[3];\n      height = tensor.dims[2];\n    }\n\n    const inputformat = options?.format !== undefined ? options.format : 'RGB';\n\n    const norm = options?.norm;\n    let normMean: [number, number, number, number];\n    let normBias: [number, number, number, number];\n    if (norm === undefined || norm.mean === undefined) {\n      normMean = [255, 255, 255, 255];\n    } else {\n      if (typeof (norm.mean) === 'number') {\n        normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n      } else {\n        normMean = [norm.mean[0], norm.mean[1], norm.mean[2], 0];\n        if (norm.mean[3] !== undefined) {\n          normMean[3] = norm.mean[3];\n        }\n      }\n    }\n    if (norm === undefined || norm.bias === undefined) {\n      normBias = [0, 0, 0, 0];\n    } else {\n      if (typeof (norm.bias) === 'number') {\n        normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n      } else {\n        normBias = [norm.bias[0], norm.bias[1], norm.bias[2], 0];\n        if (norm.bias[3] !== undefined) {\n          normBias[3] = norm.bias[3];\n        }\n      }\n    }\n\n    const stride = height * width;\n    // Default pointer assignments\n    let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n\n    // Updating the pointer assignments based on the input image format\n    if (inputformat === 'RGBA') {\n      rTensorPointer = 0;\n      gTensorPointer = stride;\n      bTensorPointer = stride * 2;\n      aTensorPointer = stride * 3;\n    } else if (inputformat === 'RGB') {\n      rTensorPointer = 0;\n      gTensorPointer = stride;\n      bTensorPointer = stride * 2;\n    } else if (inputformat === 'RBG') {\n      rTensorPointer = 0;\n      bTensorPointer = stride;\n      gTensorPointer = stride * 2;\n    }\n\n    for (let i = 0; i < height; i++) {\n      for (let j = 0; j < width; j++) {\n        const R = ((tensor.data[rTensorPointer++] as number) - normBias[0]) * normMean[0];  // R value\n        const G = ((tensor.data[gTensorPointer++] as number) - normBias[1]) * normMean[1];  // G value\n        const B = ((tensor.data[bTensorPointer++] as number) - normBias[2]) * normMean[2];  // B value\n        const A = aTensorPointer === -1 ?\n            255 :\n            ((tensor.data[aTensorPointer++] as number) - normBias[3]) * normMean[3];  // A value\n        // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n        pixels2DContext.fillStyle = 'rgba(' + R + ',' + G + ',' + B + ',' + A + ')';\n        pixels2DContext.fillRect(j, i, 1, 1);\n      }\n    }\n    return canvas.toDataURL();\n  } else {\n    throw new Error('Can not access image data');\n  }\n};\n\n/**\n * implementation of Tensor.toImageData()\n */\nexport const tensorToImageData = (tensor: Tensor, options?: TensorToImageDataOptions): ImageData => {\n  const pixels2DContext = document.createElement('canvas').getContext('2d');\n  let image: ImageData;\n  if (pixels2DContext != null) {\n    // Default values for height and width & format\n    let width: number;\n    let height: number;\n    let channels: number;\n    if (options?.tensorLayout !== undefined && options.tensorLayout === 'NHWC') {\n      width = tensor.dims[2];\n      height = tensor.dims[1];\n      channels = tensor.dims[3];\n    } else {  // Default layout is NCWH\n      width = tensor.dims[3];\n      height = tensor.dims[2];\n      channels = tensor.dims[1];\n    }\n    const inputformat = options !== undefined ? (options.format !== undefined ? options.format : 'RGB') : 'RGB';\n\n    const norm = options?.norm;\n    let normMean: [number, number, number, number];\n    let normBias: [number, number, number, number];\n    if (norm === undefined || norm.mean === undefined) {\n      normMean = [255, 255, 255, 255];\n    } else {\n      if (typeof (norm.mean) === 'number') {\n        normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n      } else {\n        normMean = [norm.mean[0], norm.mean[1], norm.mean[2], 255];\n        if (norm.mean[3] !== undefined) {\n          normMean[3] = norm.mean[3];\n        }\n      }\n    }\n    if (norm === undefined || norm.bias === undefined) {\n      normBias = [0, 0, 0, 0];\n    } else {\n      if (typeof (norm.bias) === 'number') {\n        normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n      } else {\n        normBias = [norm.bias[0], norm.bias[1], norm.bias[2], 0];\n        if (norm.bias[3] !== undefined) {\n          normBias[3] = norm.bias[3];\n        }\n      }\n    }\n\n    const stride = height * width;\n    if (options !== undefined) {\n      if (options.format !== undefined && (channels === 4 && options.format !== 'RGBA') ||\n          (channels === 3 && (options.format !== 'RGB' && options.format !== 'BGR'))) {\n        throw new Error('Tensor format doesn\\'t match input tensor dims');\n      }\n    }\n\n    // Default pointer assignments\n    const step = 4;\n    let rImagePointer = 0, gImagePointer = 1, bImagePointer = 2, aImagePointer = 3;\n    let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n\n    // Updating the pointer assignments based on the input image format\n    if (inputformat === 'RGBA') {\n      rTensorPointer = 0;\n      gTensorPointer = stride;\n      bTensorPointer = stride * 2;\n      aTensorPointer = stride * 3;\n    } else if (inputformat === 'RGB') {\n      rTensorPointer = 0;\n      gTensorPointer = stride;\n      bTensorPointer = stride * 2;\n    } else if (inputformat === 'RBG') {\n      rTensorPointer = 0;\n      bTensorPointer = stride;\n      gTensorPointer = stride * 2;\n    }\n\n    image = pixels2DContext.createImageData(width, height);\n\n    for (let i = 0; i < height * width;\n         rImagePointer += step, gImagePointer += step, bImagePointer += step, aImagePointer += step, i++) {\n      image.data[rImagePointer] = ((tensor.data[rTensorPointer++] as number) - normBias[0]) * normMean[0];  // R value\n      image.data[gImagePointer] = ((tensor.data[gTensorPointer++] as number) - normBias[1]) * normMean[1];  // G value\n      image.data[bImagePointer] = ((tensor.data[bTensorPointer++] as number) - normBias[2]) * normMean[2];  // B value\n      image.data[aImagePointer] = aTensorPointer === -1 ?\n          255 :\n          ((tensor.data[aTensorPointer++] as number) - normBias[3]) * normMean[3];  // A value\n    }\n\n  } else {\n    throw new Error('Can not access image data');\n  }\n  return image;\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {OptionsDimensions, OptionsFormat, OptionsNormalizationParameters, OptionsTensorFormat, OptionsTensorLayout, TensorFromGpuBufferOptions, TensorFromImageBitmapOptions, TensorFromImageDataOptions, TensorFromImageElementOptions, TensorFromTextureOptions, TensorFromUrlOptions} from './tensor-factory.js';\nimport {Tensor} from './tensor-impl.js';\nimport {Tensor as TensorInterface} from './tensor.js';\n\ninterface BufferToTensorOptions extends OptionsDimensions, OptionsTensorLayout, OptionsNormalizationParameters,\n                                        OptionsFormat, OptionsTensorFormat {}\n\n/**\n * Create a new tensor object from image object\n *\n * @param buffer - Extracted image buffer data - assuming RGBA format\n * @param imageFormat - input image configuration - required configurations height, width, format\n * @param tensorFormat - output tensor configuration - Default is RGB format\n */\nexport const bufferToTensor = (buffer: Uint8ClampedArray|undefined, options: BufferToTensorOptions): Tensor => {\n  if (buffer === undefined) {\n    throw new Error('Image buffer must be defined');\n  }\n  if (options.height === undefined || options.width === undefined) {\n    throw new Error('Image height and width must be defined');\n  }\n  if (options.tensorLayout === 'NHWC') {\n    throw new Error('NHWC Tensor layout is not supported yet');\n  }\n\n  const {height, width} = options;\n\n  const norm = options.norm ?? {mean: 255, bias: 0};\n  let normMean: [number, number, number, number];\n  let normBias: [number, number, number, number];\n\n  if (typeof (norm.mean) === 'number') {\n    normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n  } else {\n    normMean = [norm.mean![0], norm.mean![1], norm.mean![2], norm.mean![3] ?? 255];\n  }\n\n  if (typeof (norm.bias) === 'number') {\n    normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n  } else {\n    normBias = [norm.bias![0], norm.bias![1], norm.bias![2], norm.bias![3] ?? 0];\n  }\n\n  const inputformat = options.format !== undefined ? options.format : 'RGBA';\n  // default value is RGBA since imagedata and HTMLImageElement uses it\n\n  const outputformat =\n      options.tensorFormat !== undefined ? (options.tensorFormat !== undefined ? options.tensorFormat : 'RGB') : 'RGB';\n  const stride = height * width;\n  const float32Data = outputformat === 'RGBA' ? new Float32Array(stride * 4) : new Float32Array(stride * 3);\n\n  // Default pointer assignments\n  let step = 4, rImagePointer = 0, gImagePointer = 1, bImagePointer = 2, aImagePointer = 3;\n  let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n\n  // Updating the pointer assignments based on the input image format\n  if (inputformat === 'RGB') {\n    step = 3;\n    rImagePointer = 0;\n    gImagePointer = 1;\n    bImagePointer = 2;\n    aImagePointer = -1;\n  }\n\n  // Updating the pointer assignments based on the output tensor format\n  if (outputformat === 'RGBA') {\n    aTensorPointer = stride * 3;\n  } else if (outputformat === 'RBG') {\n    rTensorPointer = 0;\n    bTensorPointer = stride;\n    gTensorPointer = stride * 2;\n  } else if (outputformat === 'BGR') {\n    bTensorPointer = 0;\n    gTensorPointer = stride;\n    rTensorPointer = stride * 2;\n  }\n\n  for (let i = 0; i < stride;\n       i++, rImagePointer += step, bImagePointer += step, gImagePointer += step, aImagePointer += step) {\n    float32Data[rTensorPointer++] = (buffer[rImagePointer] + normBias[0]) / normMean[0];\n    float32Data[gTensorPointer++] = (buffer[gImagePointer] + normBias[1]) / normMean[1];\n    float32Data[bTensorPointer++] = (buffer[bImagePointer] + normBias[2]) / normMean[2];\n    if (aTensorPointer !== -1 && aImagePointer !== -1) {\n      float32Data[aTensorPointer++] = (buffer[aImagePointer] + normBias[3]) / normMean[3];\n    }\n  }\n\n  // Float32Array -> ort.Tensor\n  const outputTensor = outputformat === 'RGBA' ? new Tensor('float32', float32Data, [1, 4, height, width]) :\n                                                 new Tensor('float32', float32Data, [1, 3, height, width]);\n  return outputTensor;\n};\n\n/**\n * implementation of Tensor.fromImage().\n */\nexport const tensorFromImage = async(\n    image: ImageData|HTMLImageElement|ImageBitmap|string,\n    options?: TensorFromImageDataOptions|TensorFromImageElementOptions|TensorFromImageBitmapOptions|\n    TensorFromUrlOptions): Promise<Tensor> => {\n  // checking the type of image object\n  const isHTMLImageEle = typeof (HTMLImageElement) !== 'undefined' && image instanceof HTMLImageElement;\n  const isImageDataEle = typeof (ImageData) !== 'undefined' && image instanceof ImageData;\n  const isImageBitmap = typeof (ImageBitmap) !== 'undefined' && image instanceof ImageBitmap;\n  const isString = typeof image === 'string';\n\n  let data: Uint8ClampedArray|undefined;\n  let bufferToTensorOptions: BufferToTensorOptions = options ?? {};\n\n  // filling and checking image configuration options\n  if (isHTMLImageEle) {\n    // HTMLImageElement - image object - format is RGBA by default\n    const canvas = document.createElement('canvas');\n    canvas.width = image.width;\n    canvas.height = image.height;\n    const pixels2DContext = canvas.getContext('2d');\n\n    if (pixels2DContext != null) {\n      let height = image.height;\n      let width = image.width;\n      if (options !== undefined && options.resizedHeight !== undefined && options.resizedWidth !== undefined) {\n        height = options.resizedHeight;\n        width = options.resizedWidth;\n      }\n\n      if (options !== undefined) {\n        bufferToTensorOptions = options;\n        if (options.tensorFormat !== undefined) {\n          throw new Error('Image input config format must be RGBA for HTMLImageElement');\n        } else {\n          bufferToTensorOptions.tensorFormat = 'RGBA';\n        }\n        bufferToTensorOptions.height = height;\n        bufferToTensorOptions.width = width;\n      } else {\n        bufferToTensorOptions.tensorFormat = 'RGBA';\n        bufferToTensorOptions.height = height;\n        bufferToTensorOptions.width = width;\n      }\n\n      pixels2DContext.drawImage(image, 0, 0);\n      data = pixels2DContext.getImageData(0, 0, width, height).data;\n    } else {\n      throw new Error('Can not access image data');\n    }\n  } else if (isImageDataEle) {\n    let height: number;\n    let width: number;\n\n    if (options !== undefined && options.resizedWidth !== undefined && options.resizedHeight !== undefined) {\n      height = options.resizedHeight;\n      width = options.resizedWidth;\n    } else {\n      height = image.height;\n      width = image.width;\n    }\n\n    if (options !== undefined) {\n      bufferToTensorOptions = options;\n    }\n    bufferToTensorOptions.format = 'RGBA';\n    bufferToTensorOptions.height = height;\n    bufferToTensorOptions.width = width;\n\n    if (options !== undefined) {\n      const tempCanvas = document.createElement('canvas');\n\n      tempCanvas.width = width;\n      tempCanvas.height = height;\n\n      const pixels2DContext = tempCanvas.getContext('2d');\n\n      if (pixels2DContext != null) {\n        pixels2DContext.putImageData(image, 0, 0);\n        data = pixels2DContext.getImageData(0, 0, width, height).data;\n      } else {\n        throw new Error('Can not access image data');\n      }\n    } else {\n      data = image.data;\n    }\n  } else if (isImageBitmap) {\n    // ImageBitmap - image object - format must be provided by user\n    if (options === undefined) {\n      throw new Error('Please provide image config with format for Imagebitmap');\n    }\n\n    const canvas = document.createElement('canvas');\n    canvas.width = image.width;\n    canvas.height = image.height;\n    const pixels2DContext = canvas.getContext('2d');\n\n    if (pixels2DContext != null) {\n      const height = image.height;\n      const width = image.width;\n      pixels2DContext.drawImage(image, 0, 0, width, height);\n      data = pixels2DContext.getImageData(0, 0, width, height).data;\n      bufferToTensorOptions.height = height;\n      bufferToTensorOptions.width = width;\n      return bufferToTensor(data, bufferToTensorOptions);\n    } else {\n      throw new Error('Can not access image data');\n    }\n  } else if (isString) {\n    return new Promise((resolve, reject) => {\n      const canvas = document.createElement('canvas');\n      const context = canvas.getContext('2d');\n      if (!image || !context) {\n        return reject();\n      }\n      const newImage = new Image();\n      newImage.crossOrigin = 'Anonymous';\n      newImage.src = image;\n      newImage.onload = () => {\n        canvas.width = newImage.width;\n        canvas.height = newImage.height;\n        context.drawImage(newImage, 0, 0, canvas.width, canvas.height);\n        const img = context.getImageData(0, 0, canvas.width, canvas.height);\n\n        bufferToTensorOptions.height = canvas.height;\n        bufferToTensorOptions.width = canvas.width;\n        resolve(bufferToTensor(img.data, bufferToTensorOptions));\n      };\n    });\n  } else {\n    throw new Error('Input data provided is not supported - aborted tensor creation');\n  }\n\n  if (data !== undefined) {\n    return bufferToTensor(data, bufferToTensorOptions);\n  } else {\n    throw new Error('Input data provided is not supported - aborted tensor creation');\n  }\n};\n\n/**\n * implementation of Tensor.fromTexture().\n */\nexport const tensorFromTexture = <T extends TensorInterface.TextureDataTypes>(\n    texture: TensorInterface.TextureType, options: TensorFromTextureOptions<T>): Tensor => {\n  const {width, height, download, dispose} = options;\n  // Always assume RGBAF32. TODO: support different texture format\n  const dims = [1, height, width, 4];\n  return new Tensor({location: 'texture', type: 'float32', texture, dims, download, dispose});\n};\n\n/**\n * implementation of Tensor.fromGpuBuffer().\n */\nexport const tensorFromGpuBuffer = <T extends TensorInterface.GpuBufferDataTypes>(\n    gpuBuffer: TensorInterface.GpuBufferType, options: TensorFromGpuBufferOptions<T>): Tensor => {\n  const {dataType, dims, download, dispose} = options;\n  return new Tensor({location: 'gpu-buffer', type: dataType ?? 'float32', gpuBuffer, dims, download, dispose});\n};\n\n/**\n * implementation of Tensor.fromPinnedBuffer().\n */\nexport const tensorFromPinnedBuffer = <T extends TensorInterface.CpuPinnedDataTypes>(\n    type: T, buffer: TensorInterface.DataTypeMap[T], dims?: readonly number[]): Tensor =>\n    new Tensor({location: 'cpu-pinned', type, data: buffer, dims: dims ?? [buffer.length]});\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from './tensor.js';\n\nexport type SupportedTypedArrayConstructors = Float32ArrayConstructor|Uint8ArrayConstructor|Int8ArrayConstructor|\n    Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|Uint8ArrayConstructor|\n    Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor;\nexport type SupportedTypedArray = InstanceType<SupportedTypedArrayConstructors>;\n\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nexport const NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP = new Map<string, SupportedTypedArrayConstructors>([\n  ['float32', Float32Array],\n  ['uint8', Uint8Array],\n  ['int8', Int8Array],\n  ['uint16', Uint16Array],\n  ['float16', Uint16Array],\n  ['int16', Int16Array],\n  ['int32', Int32Array],\n  ['bool', Uint8Array],\n  ['float64', Float64Array],\n  ['uint32', Uint32Array],\n]);\n\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nexport const NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP = new Map<SupportedTypedArrayConstructors, Tensor.Type>([\n  [Float32Array, 'float32'],\n  [Uint8Array, 'uint8'],\n  [Int8Array, 'int8'],\n  [Uint16Array, 'uint16'],\n  [Int16Array, 'int16'],\n  [Int32Array, 'int32'],\n  [Float64Array, 'float64'],\n  [Uint32Array, 'uint32'],\n]);\n\n// the following code allows delaying execution of BigInt checking. This allows lazy initialization for\n// NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP and NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP, which allows BigInt polyfill\n// if available.\nlet isBigIntChecked = false;\nexport const checkBigInt = () => {\n  if (!isBigIntChecked) {\n    isBigIntChecked = true;\n    const isBigInt64ArrayAvailable = typeof BigInt64Array !== 'undefined' && typeof BigInt64Array.from === 'function';\n    const isBigUint64ArrayAvailable =\n        typeof BigUint64Array !== 'undefined' && typeof BigUint64Array.from === 'function';\n\n    if (isBigInt64ArrayAvailable) {\n      NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('int64', BigInt64Array);\n      NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigInt64Array, 'int64');\n    }\n    if (isBigUint64ArrayAvailable) {\n      NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('uint64', BigUint64Array);\n      NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigUint64Array, 'uint64');\n    }\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {CpuPinnedConstructorParameters, GpuBufferConstructorParameters, TextureConstructorParameters} from './tensor-factory.js';\nimport {Tensor} from './tensor-impl.js';\n\n/**\n * calculate size from dims.\n *\n * @param dims the dims array. May be an illegal input.\n */\nexport const calculateSize = (dims: readonly unknown[]): number => {\n  let size = 1;\n  for (let i = 0; i < dims.length; i++) {\n    const dim = dims[i];\n    if (typeof dim !== 'number' || !Number.isSafeInteger(dim)) {\n      throw new TypeError(`dims[${i}] must be an integer, got: ${dim}`);\n    }\n    if (dim < 0) {\n      throw new RangeError(`dims[${i}] must be a non-negative integer, got: ${dim}`);\n    }\n    size *= dim;\n  }\n  return size;\n};\n\n/**\n * implementation of Tensor.reshape()\n */\nexport const tensorReshape = (tensor: Tensor, dims: readonly number[]): Tensor => {\n  switch (tensor.location) {\n    case 'cpu':\n      return new Tensor(tensor.type, tensor.data, dims);\n    case 'cpu-pinned':\n      return new Tensor({\n        location: 'cpu-pinned',\n        data: tensor.data as CpuPinnedConstructorParameters['data'],\n        type: tensor.type as CpuPinnedConstructorParameters['type'],\n        dims,\n      });\n    case 'texture':\n      return new Tensor({\n        location: 'texture',\n        texture: tensor.texture,\n        type: tensor.type as TextureConstructorParameters['type'],\n        dims,\n      });\n    case 'gpu-buffer':\n      return new Tensor({\n        location: 'gpu-buffer',\n        gpuBuffer: tensor.gpuBuffer,\n        type: tensor.type as GpuBufferConstructorParameters['type'],\n        dims,\n      });\n    default:\n      throw new Error(`tensorReshape: tensor location ${tensor.location} is not supported`);\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {tensorToDataURL, tensorToImageData} from './tensor-conversion-impl.js';\nimport {TensorToDataUrlOptions, TensorToImageDataOptions} from './tensor-conversion.js';\nimport {tensorFromGpuBuffer, tensorFromImage, tensorFromPinnedBuffer, tensorFromTexture} from './tensor-factory-impl.js';\nimport {CpuPinnedConstructorParameters, GpuBufferConstructorParameters, TensorFromGpuBufferOptions, TensorFromImageBitmapOptions, TensorFromImageDataOptions, TensorFromImageElementOptions, TensorFromTextureOptions, TensorFromUrlOptions, TextureConstructorParameters} from './tensor-factory.js';\nimport {checkBigInt, NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP, NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP, SupportedTypedArray, SupportedTypedArrayConstructors} from './tensor-impl-type-mapping.js';\nimport {calculateSize, tensorReshape} from './tensor-utils-impl.js';\nimport {Tensor as TensorInterface} from './tensor.js';\n\n// type aliases for those exported from Tensor interface\n\ntype TensorType = TensorInterface.Type;\ntype TensorDataType = TensorInterface.DataType;\ntype TensorDataLocation = TensorInterface.DataLocation;\ntype TensorTextureType = TensorInterface.TextureType;\ntype TensorGpuBufferType = TensorInterface.GpuBufferType;\n\n/**\n * the implementation of Tensor interface.\n *\n * @ignore\n */\nexport class Tensor implements TensorInterface {\n  // #region constructors\n\n  /**\n   * Construct a new CPU tensor object from the given type, data and dims.\n   */\n  constructor(\n      type: TensorType, data: TensorDataType|readonly string[]|readonly number[]|readonly boolean[],\n      dims?: readonly number[]);\n  /**\n   * Construct a new CPU tensor object from the given data and dims. Type is inferred from data.\n   */\n  constructor(data: TensorDataType|readonly string[]|readonly boolean[], dims?: readonly number[]);\n  /**\n   * Construct a new tensor object from the pinned CPU data with the given type and dims.\n   *\n   * Tensor's location will be set to 'cpu-pinned'.\n   *\n   * @param params - Specify the parameters to construct the tensor.\n   */\n  constructor(params: CpuPinnedConstructorParameters);\n  /**\n   * Construct a new tensor object from the WebGL texture with the given type and dims.\n   *\n   * Tensor's location will be set to 'texture'.\n   *\n   * @param params - Specify the parameters to construct the tensor.\n   */\n  constructor(params: TextureConstructorParameters);\n  /**\n   * Construct a new tensor object from the WebGPU buffer with the given type and dims.\n   *\n   * Tensor's location will be set to 'gpu-buffer'.\n   *\n   * @param params - Specify the parameters to construct the tensor.\n   */\n  constructor(params: GpuBufferConstructorParameters);\n\n  /**\n   * implementation.\n   */\n  constructor(\n      arg0: TensorType|TensorDataType|readonly string[]|readonly boolean[]|CpuPinnedConstructorParameters|\n      TextureConstructorParameters|GpuBufferConstructorParameters,\n      arg1?: TensorDataType|readonly number[]|readonly string[]|readonly boolean[], arg2?: readonly number[]) {\n    // perform one-time check for BigInt support\n    checkBigInt();\n\n    let type: TensorType;\n    let dims: readonly number[];\n\n    if (typeof arg0 === 'object' && 'location' in arg0) {\n      //\n      // constructing tensor from specific location\n      //\n      this.dataLocation = arg0.location;\n      type = arg0.type;\n      dims = arg0.dims;\n      switch (arg0.location) {\n        case 'cpu-pinned': {\n          const expectedTypedArrayConstructor = NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(type);\n          if (!expectedTypedArrayConstructor) {\n            throw new TypeError(`unsupported type \"${type}\" to create tensor from pinned buffer`);\n          }\n          if (!(arg0.data instanceof expectedTypedArrayConstructor)) {\n            throw new TypeError(`buffer should be of type ${expectedTypedArrayConstructor.name}`);\n          }\n          this.cpuData = arg0.data;\n          break;\n        }\n        case 'texture': {\n          if (type !== 'float32') {\n            throw new TypeError(`unsupported type \"${type}\" to create tensor from texture`);\n          }\n          this.gpuTextureData = arg0.texture;\n          this.downloader = arg0.download;\n          this.disposer = arg0.dispose;\n          break;\n        }\n        case 'gpu-buffer': {\n          if ((type !== 'float32' && type !== 'float16' && type !== 'int32' && type !== 'int64' && type !== 'uint32' &&\n               type !== 'bool')) {\n            throw new TypeError(`unsupported type \"${type}\" to create tensor from gpu buffer`);\n          }\n          this.gpuBufferData = arg0.gpuBuffer;\n          this.downloader = arg0.download;\n          this.disposer = arg0.dispose;\n          break;\n        }\n        default:\n          throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`);\n      }\n    } else {\n      //\n      // constructing tensor of location 'cpu'\n      //\n      let data: TensorDataType;\n      let maybeDims: typeof arg1|typeof arg2;\n      // check whether arg0 is type or data\n      if (typeof arg0 === 'string') {\n        //\n        // Override: constructor(type, data, ...)\n        //\n        type = arg0;\n        maybeDims = arg2;\n        if (arg0 === 'string') {\n          // string tensor\n          if (!Array.isArray(arg1)) {\n            throw new TypeError('A string tensor\\'s data must be a string array.');\n          }\n          // we don't check whether every element in the array is string; this is too slow. we assume it's correct and\n          // error will be populated at inference\n          data = arg1;\n        } else {\n          // numeric tensor\n          const typedArrayConstructor = NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(arg0);\n          if (typedArrayConstructor === undefined) {\n            throw new TypeError(`Unsupported tensor type: ${arg0}.`);\n          }\n          if (Array.isArray(arg1)) {\n            if (arg0 === 'float16') {\n              // Throw error here because when user try to use number array as data,\n              // e.g. new Tensor('float16', [1, 2, 3, 4], dims)), it will actually call\n              // Uint16Array.from(arg1) which generates wrong data.\n              throw new TypeError(\n                  'Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.');\n            } else if (arg0 === 'uint64' || arg0 === 'int64') {\n              // use 'as any' here because:\n              // 1. TypeScript's check on type of 'Array.isArray()' does not work with readonly arrays.\n              // see https://github.com/microsoft/TypeScript/issues/17002\n              // 2. TypeScript's check on union type of '(BigInt64ArrayConstructor|BigUint64ArrayConstructor).from()'\n              // does not accept parameter mapFn.\n              // 3. parameters of 'SupportedTypedArrayConstructors.from()' does not match the requirement of the union\n              // type.\n\n              // assume 'arg1' is of type \"readonly number[]|readonly bigint[]\" here.\n\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              data = (typedArrayConstructor as any).from(arg1, BigInt);\n            } else {\n              // assume 'arg1' is of type \"readonly number[]\" here.\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              data = (typedArrayConstructor as any).from(arg1);\n            }\n          } else if (arg1 instanceof typedArrayConstructor) {\n            data = arg1;\n          } else {\n            throw new TypeError(`A ${type} tensor's data must be type of ${typedArrayConstructor}`);\n          }\n        }\n      } else {\n        //\n        // Override: constructor(data, ...)\n        //\n        maybeDims = arg1;\n        if (Array.isArray(arg0)) {\n          // only boolean[] and string[] is supported\n          if (arg0.length === 0) {\n            throw new TypeError('Tensor type cannot be inferred from an empty array.');\n          }\n          const firstElementType = typeof arg0[0];\n          if (firstElementType === 'string') {\n            type = 'string';\n            data = arg0;\n          } else if (firstElementType === 'boolean') {\n            type = 'bool';\n            // 'arg0' is of type 'boolean[]'. Uint8Array.from(boolean[]) actually works, but typescript thinks this is\n            // wrong type. We use 'as any' to make it happy.\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            data = Uint8Array.from(arg0 as any[]);\n          } else {\n            throw new TypeError(`Invalid element type of data array: ${firstElementType}.`);\n          }\n        } else {\n          // get tensor type from TypedArray\n          const mappedType =\n              NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(arg0.constructor as SupportedTypedArrayConstructors);\n          if (mappedType === undefined) {\n            throw new TypeError(`Unsupported type for tensor data: ${arg0.constructor}.`);\n          }\n          type = mappedType;\n          data = arg0 as SupportedTypedArray;\n        }\n      }\n\n      // type and data is processed, now processing dims\n      if (maybeDims === undefined) {\n        // assume 1-D tensor if dims omitted\n        maybeDims = [data.length];\n      } else if (!Array.isArray(maybeDims)) {\n        throw new TypeError('A tensor\\'s dims must be a number array');\n      }\n      dims = maybeDims as readonly number[];\n\n      this.cpuData = data;\n      this.dataLocation = 'cpu';\n    }\n\n    // perform check on dims\n    const size = calculateSize(dims);\n    // if data is on CPU, check whether data length matches tensor size\n    if (this.cpuData && size !== this.cpuData.length) {\n      throw new Error(`Tensor's size(${size}) does not match data length(${this.cpuData.length}).`);\n    }\n\n    this.type = type;\n    this.dims = dims;\n    this.size = size;\n  }\n  // #endregion\n\n  // #region factory\n  static async fromImage(\n      image: ImageData|HTMLImageElement|ImageBitmap|string,\n      options?: TensorFromImageDataOptions|TensorFromImageElementOptions|TensorFromImageBitmapOptions|\n      TensorFromUrlOptions): Promise<TensorInterface> {\n    return tensorFromImage(image, options);\n  }\n\n  static fromTexture<T extends TensorInterface.TextureDataTypes>(\n      texture: TensorTextureType, options: TensorFromTextureOptions<T>): TensorInterface {\n    return tensorFromTexture(texture, options);\n  }\n\n  static fromGpuBuffer<T extends TensorInterface.GpuBufferDataTypes>(\n      gpuBuffer: TensorGpuBufferType, options: TensorFromGpuBufferOptions<T>): TensorInterface {\n    return tensorFromGpuBuffer(gpuBuffer, options);\n  }\n\n  static fromPinnedBuffer<T extends TensorInterface.CpuPinnedDataTypes>(\n      type: T, buffer: TensorInterface.DataTypeMap[T], dims?: readonly number[]): Tensor {\n    return tensorFromPinnedBuffer(type, buffer, dims);\n  }\n\n  // #endregion\n\n  // #region conversions\n  toDataURL(options?: TensorToDataUrlOptions): string {\n    return tensorToDataURL(this, options);\n  }\n\n  toImageData(options?: TensorToImageDataOptions): ImageData {\n    return tensorToImageData(this, options);\n  }\n  // #endregion\n\n  // #region public fields\n  readonly dims: readonly number[];\n  readonly type: TensorType;\n  readonly size: number;\n  // #endregion\n\n  // #region private fields\n\n  /**\n   * stores the location of the data.\n   */\n  private dataLocation: TensorDataLocation;\n\n  /**\n   * stores the data on CPU, if location is 'cpu' or 'cpu-pinned'. otherwise empty.\n   */\n  private cpuData?: TensorDataType;\n\n  /**\n   * stores the underlying texture when location is 'texture'. otherwise empty.\n   */\n  private gpuTextureData?: TensorTextureType;\n\n  /**\n   * stores the underlying GPU buffer when location is 'gpu-buffer'. otherwise empty.\n   */\n  private gpuBufferData?: TensorGpuBufferType;\n\n  /**\n   * stores an optional downloader function to download data from GPU to CPU.\n   */\n  private downloader?(): Promise<TensorDataType>;\n\n  /**\n   * a flag indicating whether the data is being downloaded from GPU to CPU.\n   */\n  private isDownloading?: boolean;\n\n  /**\n   * stores an optional disposer function to dispose the underlying data.\n   */\n  private disposer?(): void;\n  // #endregion\n\n  // #region properties\n  get data(): TensorDataType {\n    this.ensureValid();\n    if (!this.cpuData) {\n      throw new Error(\n          'The data is not on CPU. Use `getData()` to download GPU data to CPU, ' +\n          'or use `texture` or `gpuBuffer` property to access the GPU data directly.');\n    }\n    return this.cpuData;\n  }\n\n  get location(): TensorDataLocation {\n    return this.dataLocation;\n  }\n\n  get texture(): TensorTextureType {\n    this.ensureValid();\n    if (!this.gpuTextureData) {\n      throw new Error('The data is not stored as a WebGL texture.');\n    }\n    return this.gpuTextureData;\n  }\n\n  get gpuBuffer(): TensorGpuBufferType {\n    this.ensureValid();\n    if (!this.gpuBufferData) {\n      throw new Error('The data is not stored as a WebGPU buffer.');\n    }\n    return this.gpuBufferData;\n  }\n  // #endregion\n\n  // #region methods\n\n  async getData(releaseData?: boolean): Promise<TensorDataType> {\n    this.ensureValid();\n    switch (this.dataLocation) {\n      case 'cpu':\n      case 'cpu-pinned':\n        return this.data;\n      case 'texture':\n      case 'gpu-buffer': {\n        if (!this.downloader) {\n          throw new Error('The current tensor is not created with a specified data downloader.');\n        }\n        if (this.isDownloading) {\n          throw new Error('The current tensor is being downloaded.');\n        }\n        try {\n          this.isDownloading = true;\n          const data = await this.downloader();\n          this.downloader = undefined;\n          this.dataLocation = 'cpu';\n          this.cpuData = data;\n\n          if (releaseData && this.disposer) {\n            this.disposer();\n            this.disposer = undefined;\n          }\n\n          return data;\n\n        } finally {\n          this.isDownloading = false;\n        }\n      }\n      default:\n        throw new Error(`cannot get data from location: ${this.dataLocation}`);\n    }\n  }\n\n  dispose(): void {\n    if (this.isDownloading) {\n      throw new Error('The current tensor is being downloaded.');\n    }\n\n    if (this.disposer) {\n      this.disposer();\n      this.disposer = undefined;\n    }\n    this.cpuData = undefined;\n    this.gpuTextureData = undefined;\n    this.gpuBufferData = undefined;\n    this.downloader = undefined;\n    this.isDownloading = undefined;\n\n    this.dataLocation = 'none';\n  }\n\n  // #endregion\n\n  // #region tensor utilities\n  private ensureValid(): void {\n    if (this.dataLocation === 'none') {\n      throw new Error('The tensor is disposed.');\n    }\n  }\n\n  reshape(dims: readonly number[]): TensorInterface {\n    this.ensureValid();\n    if (this.downloader || this.disposer) {\n      throw new Error('Cannot reshape a tensor that owns GPU resource.');\n    }\n    return tensorReshape(this, dims);\n  }\n  // #endregion\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorFactory} from './tensor-factory.js';\nimport {Tensor as TensorImpl} from './tensor-impl.js';\nimport {TypedTensorUtils} from './tensor-utils.js';\n\n/* eslint-disable @typescript-eslint/no-redeclare */\n\n/**\n * represent a basic tensor with specified dimensions and data type.\n */\ninterface TypedTensorBase<T extends Tensor.Type> {\n  /**\n   * Get the dimensions of the tensor.\n   */\n  readonly dims: readonly number[];\n  /**\n   * Get the data type of the tensor.\n   */\n  readonly type: T;\n  /**\n   * Get the buffer data of the tensor.\n   *\n   * If the data is not on CPU (eg. it's in the form of WebGL texture or WebGPU buffer), throw error.\n   */\n  readonly data: Tensor.DataTypeMap[T];\n  /**\n   * Get the location of the data.\n   */\n  readonly location: Tensor.DataLocation;\n  /**\n   * Get the WebGL texture that holds the tensor data.\n   *\n   * If the data is not on GPU as WebGL texture, throw error.\n   */\n  readonly texture: Tensor.TextureType;\n  /**\n   * Get the WebGPU buffer that holds the tensor data.\n   *\n   * If the data is not on GPU as WebGPU buffer, throw error.\n   */\n  readonly gpuBuffer: Tensor.GpuBufferType;\n\n  /**\n   * Get the buffer data of the tensor.\n   *\n   * If the data is on CPU, returns the data immediately.\n   * If the data is on GPU, downloads the data and returns the promise.\n   *\n   * @param releaseData - whether release the data on GPU. Ignore if data is already on CPU.\n   */\n  getData(releaseData?: boolean): Promise<Tensor.DataTypeMap[T]>;\n\n  /**\n   * Dispose the tensor data.\n   *\n   * If the data is on CPU, remove its internal reference to the underlying data.\n   * If the data is on GPU, release the data on GPU.\n   *\n   * After calling this function, the tensor is considered no longer valid. Its location will be set to 'none'.\n   */\n  dispose(): void;\n}\n\nexport declare namespace Tensor {\n  interface DataTypeMap {\n    float32: Float32Array;\n    uint8: Uint8Array;\n    int8: Int8Array;\n    uint16: Uint16Array;\n    int16: Int16Array;\n    int32: Int32Array;\n    int64: BigInt64Array;\n    string: string[];\n    bool: Uint8Array;\n    float16: Uint16Array;  // Keep using Uint16Array until we have a concrete solution for float 16.\n    float64: Float64Array;\n    uint32: Uint32Array;\n    uint64: BigUint64Array;\n    // complex64: never;\n    // complex128: never;\n    // bfloat16: never;\n  }\n\n  interface ElementTypeMap {\n    float32: number;\n    uint8: number;\n    int8: number;\n    uint16: number;\n    int16: number;\n    int32: number;\n    int64: bigint;\n    string: string;\n    bool: boolean;\n    float16: number;  // Keep using Uint16Array until we have a concrete solution for float 16.\n    float64: number;\n    uint32: number;\n    uint64: bigint;\n    // complex64: never;\n    // complex128: never;\n    // bfloat16: never;\n  }\n\n  type DataType = DataTypeMap[Type];\n  type ElementType = ElementTypeMap[Type];\n\n  /**\n   * supported data types for constructing a tensor from a pinned CPU buffer\n   */\n  export type CpuPinnedDataTypes = Exclude<Tensor.Type, 'string'>;\n\n  /**\n   * type alias for WebGL texture\n   */\n  export type TextureType = WebGLTexture;\n\n  /**\n   * supported data types for constructing a tensor from a WebGL texture\n   */\n  export type TextureDataTypes = 'float32';\n\n  /**\n   * type alias for WebGPU buffer\n   *\n   * The reason why we don't use type \"GPUBuffer\" defined in webgpu.d.ts from @webgpu/types is because \"@webgpu/types\"\n   * requires \"@types/dom-webcodecs\" as peer dependency when using TypeScript < v5.1 and its version need to be chosen\n   * carefully according to the TypeScript version being used. This means so far there is not a way to keep every\n   * TypeScript version happy. It turns out that we will easily broke users on some TypeScript version.\n   *\n   * for more info see https://github.com/gpuweb/types/issues/127\n   */\n  export type GpuBufferType = {size: number; mapState: 'unmapped' | 'pending' | 'mapped'};\n\n  /**\n   * supported data types for constructing a tensor from a WebGPU buffer\n   */\n  export type GpuBufferDataTypes = 'float32'|'float16'|'int32'|'int64'|'uint32'|'bool';\n\n  /**\n   * represent where the tensor data is stored\n   */\n  export type DataLocation = 'none'|'cpu'|'cpu-pinned'|'texture'|'gpu-buffer';\n\n  /**\n   * represent the data type of a tensor\n   */\n  export type Type = keyof DataTypeMap;\n}\n\n/**\n * Represent multi-dimensional arrays to feed to or fetch from model inferencing.\n */\nexport interface TypedTensor<T extends Tensor.Type> extends TypedTensorBase<T>, TypedTensorUtils<T> {}\n/**\n * Represent multi-dimensional arrays to feed to or fetch from model inferencing.\n */\nexport interface Tensor extends TypedTensorBase<Tensor.Type>, TypedTensorUtils<Tensor.Type> {}\n\n/**\n * type TensorConstructor defines the constructors of 'Tensor' to create CPU tensor instances.\n */\nexport interface TensorConstructor {\n  // #region CPU tensor - specify element type\n  /**\n   * Construct a new string tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(type: 'string', data: Tensor.DataTypeMap['string']|readonly string[],\n      dims?: readonly number[]): TypedTensor<'string'>;\n\n  /**\n   * Construct a new bool tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(type: 'bool', data: Tensor.DataTypeMap['bool']|readonly boolean[], dims?: readonly number[]): TypedTensor<'bool'>;\n\n  /**\n   * Construct a new 64-bit integer typed tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new<T extends 'uint64'|'int64'>(\n      type: T, data: Tensor.DataTypeMap[T]|readonly bigint[]|readonly number[],\n      dims?: readonly number[]): TypedTensor<T>;\n\n  /**\n   * Construct a new numeric tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new<T extends Exclude<Tensor.Type, 'string'|'bool'|'uint64'|'int64'>>(\n      type: T, data: Tensor.DataTypeMap[T]|readonly number[], dims?: readonly number[]): TypedTensor<T>;\n  // #endregion\n\n  // #region CPU tensor - infer element types\n\n  /**\n   * Construct a new float32 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Float32Array, dims?: readonly number[]): TypedTensor<'float32'>;\n\n  /**\n   * Construct a new int8 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Int8Array, dims?: readonly number[]): TypedTensor<'int8'>;\n\n  /**\n   * Construct a new uint8 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Uint8Array, dims?: readonly number[]): TypedTensor<'uint8'>;\n\n  /**\n   * Construct a new uint16 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Uint16Array, dims?: readonly number[]): TypedTensor<'uint16'>;\n\n  /**\n   * Construct a new int16 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Int16Array, dims?: readonly number[]): TypedTensor<'int16'>;\n\n  /**\n   * Construct a new int32 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Int32Array, dims?: readonly number[]): TypedTensor<'int32'>;\n\n  /**\n   * Construct a new int64 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: BigInt64Array, dims?: readonly number[]): TypedTensor<'int64'>;\n\n  /**\n   * Construct a new string tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: readonly string[], dims?: readonly number[]): TypedTensor<'string'>;\n\n  /**\n   * Construct a new bool tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: readonly boolean[], dims?: readonly number[]): TypedTensor<'bool'>;\n\n  /**\n   * Construct a new float64 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Float64Array, dims?: readonly number[]): TypedTensor<'float64'>;\n\n  /**\n   * Construct a new uint32 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Uint32Array, dims?: readonly number[]): TypedTensor<'uint32'>;\n\n  /**\n   * Construct a new uint64 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: BigUint64Array, dims?: readonly number[]): TypedTensor<'uint64'>;\n\n  // #endregion\n\n  // #region CPU tensor - fall back to non-generic tensor type declaration\n\n  /**\n   * Construct a new tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(type: Tensor.Type, data: Tensor.DataType|readonly number[]|readonly string[]|readonly bigint[]|readonly boolean[],\n      dims?: readonly number[]): Tensor;\n\n  /**\n   * Construct a new tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Tensor.DataType, dims?: readonly number[]): Tensor;\n  // #endregion\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const Tensor = TensorImpl as (TensorConstructor & TensorFactory);\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {resolveBackend} from './backend-impl.js';\nimport {InferenceSessionHandler} from './backend.js';\nimport {InferenceSession as InferenceSessionInterface} from './inference-session.js';\nimport {OnnxValue} from './onnx-value.js';\nimport {Tensor} from './tensor.js';\n\ntype SessionOptions = InferenceSessionInterface.SessionOptions;\ntype RunOptions = InferenceSessionInterface.RunOptions;\ntype FeedsType = InferenceSessionInterface.FeedsType;\ntype FetchesType = InferenceSessionInterface.FetchesType;\ntype ReturnType = InferenceSessionInterface.ReturnType;\n\nexport class InferenceSession implements InferenceSessionInterface {\n  private constructor(handler: InferenceSessionHandler) {\n    this.handler = handler;\n  }\n  run(feeds: FeedsType, options?: RunOptions): Promise<ReturnType>;\n  run(feeds: FeedsType, fetches: FetchesType, options?: RunOptions): Promise<ReturnType>;\n  async run(feeds: FeedsType, arg1?: FetchesType|RunOptions, arg2?: RunOptions): Promise<ReturnType> {\n    const fetches: {[name: string]: OnnxValue|null} = {};\n    let options: RunOptions = {};\n    // check inputs\n    if (typeof feeds !== 'object' || feeds === null || feeds instanceof Tensor || Array.isArray(feeds)) {\n      throw new TypeError(\n          '\\'feeds\\' must be an object that use input names as keys and OnnxValue as corresponding values.');\n    }\n\n    let isFetchesEmpty = true;\n    // determine which override is being used\n    if (typeof arg1 === 'object') {\n      if (arg1 === null) {\n        throw new TypeError('Unexpected argument[1]: cannot be null.');\n      }\n      if (arg1 instanceof Tensor) {\n        throw new TypeError('\\'fetches\\' cannot be a Tensor');\n      }\n\n      if (Array.isArray(arg1)) {\n        if (arg1.length === 0) {\n          throw new TypeError('\\'fetches\\' cannot be an empty array.');\n        }\n        isFetchesEmpty = false;\n        // output names\n        for (const name of arg1) {\n          if (typeof name !== 'string') {\n            throw new TypeError('\\'fetches\\' must be a string array or an object.');\n          }\n          if (this.outputNames.indexOf(name) === -1) {\n            throw new RangeError(`'fetches' contains invalid output name: ${name}.`);\n          }\n          fetches[name] = null;\n        }\n\n        if (typeof arg2 === 'object' && arg2 !== null) {\n          options = arg2;\n        } else if (typeof arg2 !== 'undefined') {\n          throw new TypeError('\\'options\\' must be an object.');\n        }\n      } else {\n        // decide whether arg1 is fetches or options\n        // if any output name is present and its value is valid OnnxValue, we consider it fetches\n        let isFetches = false;\n        const arg1Keys = Object.getOwnPropertyNames(arg1);\n        for (const name of this.outputNames) {\n          if (arg1Keys.indexOf(name) !== -1) {\n            const v = (arg1 as InferenceSessionInterface.NullableOnnxValueMapType)[name];\n            if (v === null || v instanceof Tensor) {\n              isFetches = true;\n              isFetchesEmpty = false;\n              fetches[name] = v;\n            }\n          }\n        }\n\n        if (isFetches) {\n          if (typeof arg2 === 'object' && arg2 !== null) {\n            options = arg2;\n          } else if (typeof arg2 !== 'undefined') {\n            throw new TypeError('\\'options\\' must be an object.');\n          }\n        } else {\n          options = arg1 as RunOptions;\n        }\n      }\n    } else if (typeof arg1 !== 'undefined') {\n      throw new TypeError('Unexpected argument[1]: must be \\'fetches\\' or \\'options\\'.');\n    }\n\n    // check if all inputs are in feed\n    for (const name of this.inputNames) {\n      if (typeof feeds[name] === 'undefined') {\n        throw new Error(`input '${name}' is missing in 'feeds'.`);\n      }\n    }\n\n    // if no fetches is specified, we use the full output names list\n    if (isFetchesEmpty) {\n      for (const name of this.outputNames) {\n        fetches[name] = null;\n      }\n    }\n\n    // feeds, fetches and options are prepared\n\n    const results = await this.handler.run(feeds, fetches, options);\n    const returnValue: {[name: string]: OnnxValue} = {};\n    for (const key in results) {\n      if (Object.hasOwnProperty.call(results, key)) {\n        const result = results[key];\n        if (result instanceof Tensor) {\n          returnValue[key] = result;\n        } else {\n          returnValue[key] = new Tensor(result.type, result.data, result.dims);\n        }\n      }\n    }\n    return returnValue;\n  }\n\n  async release(): Promise<void> {\n    return this.handler.dispose();\n  }\n\n  static create(path: string, options?: SessionOptions): Promise<InferenceSessionInterface>;\n  static create(buffer: ArrayBufferLike, options?: SessionOptions): Promise<InferenceSessionInterface>;\n  static create(buffer: ArrayBufferLike, byteOffset: number, byteLength?: number, options?: SessionOptions):\n      Promise<InferenceSessionInterface>;\n  static create(buffer: Uint8Array, options?: SessionOptions): Promise<InferenceSessionInterface>;\n  static async create(\n      arg0: string|ArrayBufferLike|Uint8Array, arg1?: SessionOptions|number, arg2?: number,\n      arg3?: SessionOptions): Promise<InferenceSessionInterface> {\n    // either load from a file or buffer\n    let filePathOrUint8Array: string|Uint8Array;\n    let options: SessionOptions = {};\n\n    if (typeof arg0 === 'string') {\n      filePathOrUint8Array = arg0;\n      if (typeof arg1 === 'object' && arg1 !== null) {\n        options = arg1;\n      } else if (typeof arg1 !== 'undefined') {\n        throw new TypeError('\\'options\\' must be an object.');\n      }\n    } else if (arg0 instanceof Uint8Array) {\n      filePathOrUint8Array = arg0;\n      if (typeof arg1 === 'object' && arg1 !== null) {\n        options = arg1;\n      } else if (typeof arg1 !== 'undefined') {\n        throw new TypeError('\\'options\\' must be an object.');\n      }\n    } else if (\n        arg0 instanceof ArrayBuffer ||\n        (typeof SharedArrayBuffer !== 'undefined' && arg0 instanceof SharedArrayBuffer)) {\n      const buffer = arg0;\n      let byteOffset = 0;\n      let byteLength = arg0.byteLength;\n      if (typeof arg1 === 'object' && arg1 !== null) {\n        options = arg1;\n      } else if (typeof arg1 === 'number') {\n        byteOffset = arg1;\n        if (!Number.isSafeInteger(byteOffset)) {\n          throw new RangeError('\\'byteOffset\\' must be an integer.');\n        }\n        if (byteOffset < 0 || byteOffset >= buffer.byteLength) {\n          throw new RangeError(`'byteOffset' is out of range [0, ${buffer.byteLength}).`);\n        }\n        byteLength = arg0.byteLength - byteOffset;\n        if (typeof arg2 === 'number') {\n          byteLength = arg2;\n          if (!Number.isSafeInteger(byteLength)) {\n            throw new RangeError('\\'byteLength\\' must be an integer.');\n          }\n          if (byteLength <= 0 || byteOffset + byteLength > buffer.byteLength) {\n            throw new RangeError(`'byteLength' is out of range (0, ${buffer.byteLength - byteOffset}].`);\n          }\n          if (typeof arg3 === 'object' && arg3 !== null) {\n            options = arg3;\n          } else if (typeof arg3 !== 'undefined') {\n            throw new TypeError('\\'options\\' must be an object.');\n          }\n        } else if (typeof arg2 !== 'undefined') {\n          throw new TypeError('\\'byteLength\\' must be a number.');\n        }\n      } else if (typeof arg1 !== 'undefined') {\n        throw new TypeError('\\'options\\' must be an object.');\n      }\n      filePathOrUint8Array = new Uint8Array(buffer, byteOffset, byteLength);\n    } else {\n      throw new TypeError('Unexpected argument[0]: must be \\'path\\' or \\'buffer\\'.');\n    }\n\n    // get backend hints\n    const eps = options.executionProviders || [];\n    const backendHints = eps.map(i => typeof i === 'string' ? i : i.name);\n    const backend = await resolveBackend(backendHints);\n    const handler = await backend.createInferenceSessionHandler(filePathOrUint8Array, options);\n    return new InferenceSession(handler);\n  }\n\n  startProfiling(): void {\n    this.handler.startProfiling();\n  }\n  endProfiling(): void {\n    this.handler.endProfiling();\n  }\n\n  get inputNames(): readonly string[] {\n    return this.handler.inputNames;\n  }\n  get outputNames(): readonly string[] {\n    return this.handler.outputNames;\n  }\n\n  private handler: InferenceSessionHandler;\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession as InferenceSessionImpl} from './inference-session-impl.js';\nimport {OnnxValue, OnnxValueDataLocation} from './onnx-value.js';\n\n/* eslint-disable @typescript-eslint/no-redeclare */\n\nexport declare namespace InferenceSession {\n  // #region input/output types\n\n  type OnnxValueMapType = {readonly [name: string]: OnnxValue};\n  type NullableOnnxValueMapType = {readonly [name: string]: OnnxValue | null};\n\n  /**\n   * A feeds (model inputs) is an object that uses input names as keys and OnnxValue as corresponding values.\n   */\n  type FeedsType = OnnxValueMapType;\n\n  /**\n   * A fetches (model outputs) could be one of the following:\n   *\n   * - Omitted. Use model's output names definition.\n   * - An array of string indicating the output names.\n   * - An object that use output names as keys and OnnxValue or null as corresponding values.\n   *\n   * @remark\n   * different from input argument, in output, OnnxValue is optional. If an OnnxValue is present it will be\n   * used as a pre-allocated value by the inference engine; if omitted, inference engine will allocate buffer\n   * internally.\n   */\n  type FetchesType = readonly string[]|NullableOnnxValueMapType;\n\n  /**\n   * A inferencing return type is an object that uses output names as keys and OnnxValue as corresponding values.\n   */\n  type ReturnType = OnnxValueMapType;\n\n  // #endregion\n\n  // #region session options\n\n  /**\n   * A set of configurations for session behavior.\n   */\n  export interface SessionOptions {\n    /**\n     * An array of execution provider options.\n     *\n     * An execution provider option can be a string indicating the name of the execution provider,\n     * or an object of corresponding type.\n     */\n    executionProviders?: readonly ExecutionProviderConfig[];\n\n    /**\n     * The intra OP threads number.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native).\n     */\n    intraOpNumThreads?: number;\n\n    /**\n     * The inter OP threads number.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native).\n     */\n    interOpNumThreads?: number;\n\n    /**\n     * The free dimension override.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    freeDimensionOverrides?: {readonly [dimensionName: string]: number};\n\n    /**\n     * The optimization level.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    graphOptimizationLevel?: 'disabled'|'basic'|'extended'|'all';\n\n    /**\n     * Whether enable CPU memory arena.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    enableCpuMemArena?: boolean;\n\n    /**\n     * Whether enable memory pattern.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    enableMemPattern?: boolean;\n\n    /**\n     * Execution mode.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    executionMode?: 'sequential'|'parallel';\n\n    /**\n     * Optimized model file path.\n     *\n     * If this setting is specified, the optimized model will be dumped. In browser, a blob will be created\n     * with a pop-up window.\n     */\n    optimizedModelFilePath?: string;\n\n    /**\n     * Wether enable profiling.\n     *\n     * This setting is a placeholder for a future use.\n     */\n    enableProfiling?: boolean;\n\n    /**\n     * File prefix for profiling.\n     *\n     * This setting is a placeholder for a future use.\n     */\n    profileFilePrefix?: string;\n\n    /**\n     * Log ID.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    logId?: string;\n\n    /**\n     * Log severity level. See\n     * https://github.com/microsoft/onnxruntime/blob/main/include/onnxruntime/core/common/logging/severity.h\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    logSeverityLevel?: 0|1|2|3|4;\n\n    /**\n     * Log verbosity level.\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     */\n    logVerbosityLevel?: number;\n\n    /**\n     * Specify string as a preferred data location for all outputs, or an object that use output names as keys and a\n     * preferred data location as corresponding values.\n     *\n     * This setting is available only in ONNXRuntime Web for WebGL and WebGPU EP.\n     */\n    preferredOutputLocation?: OnnxValueDataLocation|{readonly [outputName: string]: OnnxValueDataLocation};\n\n    /**\n     * Store configurations for a session. See\n     * https://github.com/microsoft/onnxruntime/blob/main/include/onnxruntime/core/session/\n     * onnxruntime_session_options_config_keys.h\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     *\n     * @example\n     * ```js\n     * extra: {\n     *   session: {\n     *     set_denormal_as_zero: \"1\",\n     *     disable_prepacking: \"1\"\n     *   },\n     *   optimization: {\n     *     enable_gelu_approximation: \"1\"\n     *   }\n     * }\n     * ```\n     */\n    extra?: Record<string, unknown>;\n  }\n\n  // #region execution providers\n\n  // Currently, we have the following backends to support execution providers:\n  // Backend Node.js binding: supports 'cpu' and 'cuda'.\n  // Backend WebAssembly: supports 'cpu', 'wasm', 'xnnpack' and 'webnn'.\n  // Backend ONNX.js: supports 'webgl'.\n  // Backend React Native: supports 'cpu', 'xnnpack', 'coreml' (iOS), 'nnapi' (Android).\n  interface ExecutionProviderOptionMap {\n    cpu: CpuExecutionProviderOption;\n    coreml: CoreMlExecutionProviderOption;\n    cuda: CudaExecutionProviderOption;\n    dml: DmlExecutionProviderOption;\n    tensorrt: TensorRtExecutionProviderOption;\n    wasm: WebAssemblyExecutionProviderOption;\n    webgl: WebGLExecutionProviderOption;\n    xnnpack: XnnpackExecutionProviderOption;\n    webgpu: WebGpuExecutionProviderOption;\n    webnn: WebNNExecutionProviderOption;\n    nnapi: NnapiExecutionProviderOption;\n  }\n\n  type ExecutionProviderName = keyof ExecutionProviderOptionMap;\n  type ExecutionProviderConfig =\n      ExecutionProviderOptionMap[ExecutionProviderName]|ExecutionProviderOption|ExecutionProviderName|string;\n\n  export interface ExecutionProviderOption {\n    readonly name: string;\n  }\n  export interface CpuExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'cpu';\n    useArena?: boolean;\n  }\n  export interface CudaExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'cuda';\n    deviceId?: number;\n  }\n  export interface CoreMlExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'coreml';\n    coreMlFlags?: number;\n  }\n  export interface DmlExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'dml';\n    deviceId?: number;\n  }\n  export interface TensorRtExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'tensorrt';\n    deviceId?: number;\n  }\n  export interface WebAssemblyExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'wasm';\n  }\n  export interface WebGLExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'webgl';\n    // TODO: add flags\n  }\n  export interface XnnpackExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'xnnpack';\n  }\n  export interface WebGpuExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'webgpu';\n    preferredLayout?: 'NCHW'|'NHWC';\n  }\n  export interface WebNNExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'webnn';\n    deviceType?: 'cpu'|'gpu';\n    numThreads?: number;\n    powerPreference?: 'default'|'low-power'|'high-performance';\n  }\n  export interface CoreMLExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'coreml';\n    useCPUOnly?: boolean;\n    enableOnSubgraph?: boolean;\n    onlyEnableDeviceWithANE?: boolean;\n  }\n  export interface NnapiExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'nnapi';\n    useFP16?: boolean;\n    useNCHW?: boolean;\n    cpuDisabled?: boolean;\n    cpuOnly?: boolean;\n  }\n  // #endregion\n\n  // #endregion\n\n  // #region run options\n\n  /**\n   * A set of configurations for inference run behavior\n   */\n  export interface RunOptions {\n    /**\n     * Log severity level. See\n     * https://github.com/microsoft/onnxruntime/blob/main/include/onnxruntime/core/common/logging/severity.h\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    logSeverityLevel?: 0|1|2|3|4;\n\n    /**\n     * Log verbosity level.\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     */\n    logVerbosityLevel?: number;\n\n    /**\n     * Terminate all incomplete OrtRun calls as soon as possible if true\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     */\n    terminate?: boolean;\n\n    /**\n     * A tag for the Run() calls using this\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    tag?: string;\n\n    /**\n     * Set a single run configuration entry. See\n     * https://github.com/microsoft/onnxruntime/blob/main/include/onnxruntime/core/session/\n     * onnxruntime_run_options_config_keys.h\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     *\n     * @example\n     *\n     * ```js\n     * extra: {\n     *   memory: {\n     *     enable_memory_arena_shrinkage: \"1\",\n     *   }\n     * }\n     * ```\n     */\n    extra?: Record<string, unknown>;\n  }\n\n  // #endregion\n\n  // #region value metadata\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-interface\n  interface ValueMetadata {\n    // TBD\n  }\n\n  // #endregion\n}\n\n/**\n * Represent a runtime instance of an ONNX model.\n */\nexport interface InferenceSession {\n  // #region run()\n\n  /**\n   * Execute the model asynchronously with the given feeds and options.\n   *\n   * @param feeds - Representation of the model input. See type description of `InferenceSession.InputType` for detail.\n   * @param options - Optional. A set of options that controls the behavior of model inference.\n   * @returns A promise that resolves to a map, which uses output names as keys and OnnxValue as corresponding values.\n   */\n  run(feeds: InferenceSession.FeedsType, options?: InferenceSession.RunOptions): Promise<InferenceSession.ReturnType>;\n\n  /**\n   * Execute the model asynchronously with the given feeds, fetches and options.\n   *\n   * @param feeds - Representation of the model input. See type description of `InferenceSession.InputType` for detail.\n   * @param fetches - Representation of the model output. See type description of `InferenceSession.OutputType` for\n   * detail.\n   * @param options - Optional. A set of options that controls the behavior of model inference.\n   * @returns A promise that resolves to a map, which uses output names as keys and OnnxValue as corresponding values.\n   */\n  run(feeds: InferenceSession.FeedsType, fetches: InferenceSession.FetchesType,\n      options?: InferenceSession.RunOptions): Promise<InferenceSession.ReturnType>;\n\n  // #endregion\n\n  // #region release()\n\n  /**\n   * Release the inference session and the underlying resources.\n   */\n  release(): Promise<void>;\n\n  // #endregion\n\n  // #region profiling\n\n  /**\n   * Start profiling.\n   */\n  startProfiling(): void;\n\n  /**\n   * End profiling.\n   */\n  endProfiling(): void;\n\n  // #endregion\n\n  // #region metadata\n\n  /**\n   * Get input names of the loaded model.\n   */\n  readonly inputNames: readonly string[];\n\n  /**\n   * Get output names of the loaded model.\n   */\n  readonly outputNames: readonly string[];\n\n  // /**\n  //  * Get input metadata of the loaded model.\n  //  */\n  // readonly inputMetadata: ReadonlyArray<Readonly<InferenceSession.ValueMetadata>>;\n\n  // /**\n  //  * Get output metadata of the loaded model.\n  //  */\n  // readonly outputMetadata: ReadonlyArray<Readonly<InferenceSession.ValueMetadata>>;\n\n  // #endregion\n}\n\nexport interface InferenceSessionFactory {\n  // #region create()\n\n  /**\n   * Create a new inference session and load model asynchronously from an ONNX model file.\n   *\n   * @param uri - The URI or file path of the model to load.\n   * @param options - specify configuration for creating a new inference session.\n   * @returns A promise that resolves to an InferenceSession object.\n   */\n  create(uri: string, options?: InferenceSession.SessionOptions): Promise<InferenceSession>;\n\n  /**\n   * Create a new inference session and load model asynchronously from an array bufer.\n   *\n   * @param buffer - An ArrayBuffer representation of an ONNX model.\n   * @param options - specify configuration for creating a new inference session.\n   * @returns A promise that resolves to an InferenceSession object.\n   */\n  create(buffer: ArrayBufferLike, options?: InferenceSession.SessionOptions): Promise<InferenceSession>;\n\n  /**\n   * Create a new inference session and load model asynchronously from segment of an array bufer.\n   *\n   * @param buffer - An ArrayBuffer representation of an ONNX model.\n   * @param byteOffset - The beginning of the specified portion of the array buffer.\n   * @param byteLength - The length in bytes of the array buffer.\n   * @param options - specify configuration for creating a new inference session.\n   * @returns A promise that resolves to an InferenceSession object.\n   */\n  create(buffer: ArrayBufferLike, byteOffset: number, byteLength?: number, options?: InferenceSession.SessionOptions):\n      Promise<InferenceSession>;\n\n  /**\n   * Create a new inference session and load model asynchronously from a Uint8Array.\n   *\n   * @param buffer - A Uint8Array representation of an ONNX model.\n   * @param options - specify configuration for creating a new inference session.\n   * @returns A promise that resolves to an InferenceSession object.\n   */\n  create(buffer: Uint8Array, options?: InferenceSession.SessionOptions): Promise<InferenceSession>;\n\n  // #endregion\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const InferenceSession: InferenceSessionFactory = InferenceSessionImpl;\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from './tensor.js';\n\ntype NonTensorType = never;\n\n/**\n * Type OnnxValue Represents both tensors and non-tensors value for model's inputs/outputs.\n *\n * NOTE: currently not support non-tensor\n */\nexport type OnnxValue = Tensor|NonTensorType;\n\n/**\n * Type OnnxValueDataLocation represents the location of the data of an OnnxValue.\n */\nexport type OnnxValueDataLocation = Tensor.DataLocation;\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {resolveBackend} from './backend-impl.js';\nimport {SessionHandler, TrainingSessionHandler} from './backend.js';\nimport {InferenceSession as InferenceSession} from './inference-session.js';\nimport {OnnxValue} from './onnx-value.js';\nimport {Tensor} from './tensor.js';\nimport {TrainingSession as TrainingSessionInterface, TrainingSessionCreateOptions} from './training-session.js';\n\ntype SessionOptions = InferenceSession.SessionOptions;\ntype FeedsType = InferenceSession.FeedsType;\ntype FetchesType = InferenceSession.FetchesType;\ntype ReturnType = InferenceSession.ReturnType;\ntype RunOptions = InferenceSession.RunOptions;\n\nconst noBackendErrMsg: string = 'Training backend could not be resolved. ' +\n    'Make sure you\\'re using the correct configuration & WebAssembly files.';\n\nexport class TrainingSession implements TrainingSessionInterface {\n  private constructor(handler: TrainingSessionHandler, hasOptimizerModel: boolean, hasEvalModel: boolean) {\n    this.handler = handler;\n    this.hasOptimizerModel = hasOptimizerModel;\n    this.hasEvalModel = hasEvalModel;\n  }\n  private handler: TrainingSessionHandler;\n  private hasOptimizerModel: boolean;\n  private hasEvalModel: boolean;\n\n  get trainingInputNames(): readonly string[] {\n    return this.handler.inputNames;\n  }\n  get trainingOutputNames(): readonly string[] {\n    return this.handler.outputNames;\n  }\n\n  get evalInputNames(): readonly string[] {\n    if (this.hasEvalModel) {\n      return this.handler.evalInputNames;\n    } else {\n      throw new Error('This training session has no evalModel loaded.');\n    }\n  }\n  get evalOutputNames(): readonly string[] {\n    if (this.hasEvalModel) {\n      return this.handler.evalOutputNames;\n    } else {\n      throw new Error('This training session has no evalModel loaded.');\n    }\n  }\n\n  static async create(trainingOptions: TrainingSessionCreateOptions, sessionOptions?: SessionOptions):\n      Promise<TrainingSession> {\n    const evalModel: string|Uint8Array = trainingOptions.evalModel || '';\n    const optimizerModel: string|Uint8Array = trainingOptions.optimizerModel || '';\n    const options: SessionOptions = sessionOptions || {};\n\n    // get backend hints\n    const eps = options.executionProviders || [];\n    const backendHints = eps.map(i => typeof i === 'string' ? i : i.name);\n    const backend = await resolveBackend(backendHints);\n    if (backend.createTrainingSessionHandler) {\n      const handler = await backend.createTrainingSessionHandler(\n          trainingOptions.checkpointState, trainingOptions.trainModel, evalModel, optimizerModel, options);\n      return new TrainingSession(handler, !!trainingOptions.optimizerModel, !!trainingOptions.evalModel);\n    } else {\n      throw new Error(noBackendErrMsg);\n    }\n  }\n\n  /**\n   * Helper function for runTrainStep and future runStep methods that handles the type-narrowing conversion from\n   * the given parameters to SessionHandler.FetchesType and RunOptions.\n   *\n   * @param inputNames the feeds object is checked that they contain all input names in the provided list of input\n   * names.\n   * @param outputNames the fetches object is checked that their keys match up with valid names in the list of output\n   * names.\n   * @param feeds the required input\n   * @param arg1 narrowed & converted into the SessionHandler.FetchesType or RunOptions object\n   * @param arg2 optional RunOptions object.\n   * @returns\n   */\n  typeNarrowingForRunStep(\n      inputNames: readonly string[], outputNames: readonly string[], feeds: FeedsType, arg1?: FetchesType|RunOptions,\n      arg2?: RunOptions): [SessionHandler.FetchesType, RunOptions] {\n    const fetches: {[name: string]: OnnxValue|null} = {};\n    let options: RunOptions = {};\n    // check inputs\n    if (typeof feeds !== 'object' || feeds === null || feeds instanceof Tensor || Array.isArray(feeds)) {\n      throw new TypeError(\n          '\\'feeds\\' must be an object that use input names as keys and OnnxValue as corresponding values.');\n    }\n\n    let isFetchesEmpty = true;\n    // determine which override is being used\n    if (typeof arg1 === 'object') {\n      if (arg1 === null) {\n        throw new TypeError('Unexpected argument[1]: cannot be null.');\n      }\n      if (arg1 instanceof Tensor) {\n        throw new TypeError('\\'fetches\\' cannot be a Tensor');\n      }\n\n      if (Array.isArray(arg1)) {\n        if (arg1.length === 0) {\n          throw new TypeError('\\'fetches\\' cannot be an empty array.');\n        }\n        isFetchesEmpty = false;\n        // output names\n        for (const name of arg1) {\n          if (typeof name !== 'string') {\n            throw new TypeError('\\'fetches\\' must be a string array or an object.');\n          }\n          if (outputNames.indexOf(name) === -1) {\n            throw new RangeError(`'fetches' contains invalid output name: ${name}.`);\n          }\n          fetches[name] = null;\n        }\n\n        if (typeof arg2 === 'object' && arg2 !== null) {\n          options = arg2;\n        } else if (typeof arg2 !== 'undefined') {\n          throw new TypeError('\\'options\\' must be an object.');\n        }\n      } else {\n        // decide whether arg1 is fetches or options\n        // if any output name is present and its value is valid OnnxValue, we consider it fetches\n        let isFetches = false;\n        const arg1Keys = Object.getOwnPropertyNames(arg1);\n        for (const name of outputNames) {\n          if (arg1Keys.indexOf(name) !== -1) {\n            const v = (arg1 as InferenceSession.NullableOnnxValueMapType)[name];\n            if (v === null || v instanceof Tensor) {\n              isFetches = true;\n              isFetchesEmpty = false;\n              fetches[name] = v;\n            }\n          }\n        }\n\n        if (isFetches) {\n          if (typeof arg2 === 'object' && arg2 !== null) {\n            options = arg2;\n          } else if (typeof arg2 !== 'undefined') {\n            throw new TypeError('\\'options\\' must be an object.');\n          }\n        } else {\n          options = arg1 as RunOptions;\n        }\n      }\n    } else if (typeof arg1 !== 'undefined') {\n      throw new TypeError('Unexpected argument[1]: must be \\'fetches\\' or \\'options\\'.');\n    }\n\n    // check if all inputs are in feed\n    for (const name of inputNames) {\n      if (typeof feeds[name] === 'undefined') {\n        throw new Error(`input '${name}' is missing in 'feeds'.`);\n      }\n    }\n\n    // if no fetches is specified, we use the full output names list\n    if (isFetchesEmpty) {\n      for (const name of outputNames) {\n        fetches[name] = null;\n      }\n    }\n\n    return [fetches, options];\n  }\n\n  /**\n   * Helper method for runTrainStep and any other runStep methods. Takes the ReturnType result from the SessionHandler\n   * and changes it into a map of Tensors.\n   *\n   * @param results\n   * @returns\n   */\n  convertHandlerReturnTypeToMapOfTensors(results: SessionHandler.ReturnType): ReturnType {\n    const returnValue: {[name: string]: OnnxValue} = {};\n    for (const key in results) {\n      if (Object.hasOwnProperty.call(results, key)) {\n        const result = results[key];\n        if (result instanceof Tensor) {\n          returnValue[key] = result;\n        } else {\n          returnValue[key] = new Tensor(result.type, result.data, result.dims);\n        }\n      }\n    }\n    return returnValue;\n  }\n\n  async lazyResetGrad(): Promise<void> {\n    await this.handler.lazyResetGrad();\n  }\n\n  runTrainStep(feeds: FeedsType, options?: RunOptions): Promise<ReturnType>;\n  runTrainStep(feeds: FeedsType, fetches: FetchesType, options?: RunOptions): Promise<ReturnType>;\n  async runTrainStep(feeds: FeedsType, arg1?: FetchesType|RunOptions, arg2?: RunOptions): Promise<ReturnType> {\n    const [fetches, options] =\n        this.typeNarrowingForRunStep(this.trainingInputNames, this.trainingOutputNames, feeds, arg1, arg2);\n    const results = await this.handler.runTrainStep(feeds, fetches, options);\n    return this.convertHandlerReturnTypeToMapOfTensors(results);\n  }\n\n  async runOptimizerStep(options?: InferenceSession.RunOptions|undefined): Promise<void> {\n    if (this.hasOptimizerModel) {\n      await this.handler.runOptimizerStep(options || {});\n    } else {\n      throw new Error('This TrainingSession has no OptimizerModel loaded.');\n    }\n  }\n\n  runEvalStep(feeds: FeedsType, options?: RunOptions|undefined): Promise<ReturnType>;\n  runEvalStep(feeds: FeedsType, fetches: FetchesType, options?: RunOptions|undefined): Promise<ReturnType>;\n  async runEvalStep(feeds: FeedsType, arg1?: FetchesType|RunOptions, arg2?: RunOptions): Promise<ReturnType> {\n    if (this.hasEvalModel) {\n      const [fetches, options] =\n          this.typeNarrowingForRunStep(this.evalInputNames, this.evalOutputNames, feeds, arg1, arg2);\n      const results = await this.handler.runEvalStep(feeds, fetches, options);\n      return this.convertHandlerReturnTypeToMapOfTensors(results);\n    } else {\n      throw new Error('This TrainingSession has no EvalModel loaded.');\n    }\n  }\n\n  async getParametersSize(trainableOnly = true): Promise<number> {\n    return this.handler.getParametersSize(trainableOnly);\n  }\n\n  async loadParametersBuffer(array: Uint8Array, trainableOnly = true): Promise<void> {\n    const paramsSize = await this.getParametersSize(trainableOnly);\n    // checking that the size of the Uint8Array is equivalent to the byte length of a Float32Array of the number\n    // of parameters\n    if (array.length !== 4 * paramsSize) {\n      throw new Error(\n          'Size of the buffer passed into loadParametersBuffer must match the number of parameters in ' +\n          'the model. Please use getParametersSize method to check.');\n    }\n    return this.handler.loadParametersBuffer(array, trainableOnly);\n  }\n\n  async getContiguousParameters(trainableOnly = true): Promise<OnnxValue> {\n    return this.handler.getContiguousParameters(trainableOnly);\n  }\n\n  async release(): Promise<void> {\n    return this.handler.dispose();\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from './inference-session.js';\nimport {OnnxValue} from './onnx-value.js';\nimport {TrainingSession as TrainingSessionImpl} from './training-session-impl.js';\n\n/* eslint-disable @typescript-eslint/no-redeclare */\n\nexport declare namespace TrainingSession {\n  /**\n   * Either URI file path (string) or Uint8Array containing model or checkpoint information.\n   */\n  type URIorBuffer = string|Uint8Array;\n}\n\n/**\n * Represent a runtime instance of an ONNX training session,\n * which contains a model that can be trained, and, optionally,\n * an eval and optimizer model.\n */\nexport interface TrainingSession {\n  // #region run()\n\n  /**\n   * Lazily resets the gradients of all trainable parameters to zero. Should happen after the invocation of\n   * runOptimizerStep.\n   */\n  lazyResetGrad(): Promise<void>;\n\n  /**\n   * Run TrainStep asynchronously with the given feeds and options.\n   *\n   * @param feeds - Representation of the model input. See type description of `InferenceSession.InputType` for\n   detail.\n   * @param options - Optional. A set of options that controls the behavior of model training.\n   * @returns A promise that resolves to a map, which uses output names as keys and OnnxValue as corresponding values.\n   */\n  runTrainStep(feeds: InferenceSession.FeedsType, options?: InferenceSession.RunOptions):\n      Promise<InferenceSession.ReturnType>;\n\n  /**\n   * Run a single train step with the given inputs and options.\n   *\n   * @param feeds - Representation of the model input.\n   * @param fetches - Representation of the model output.\n   * detail.\n   * @param options - Optional. A set of options that controls the behavior of model training.\n   * @returns A promise that resolves to a map, which uses output names as keys and OnnxValue as corresponding\n   values.\n   */\n  runTrainStep(\n      feeds: InferenceSession.FeedsType, fetches: InferenceSession.FetchesType,\n      options?: InferenceSession.RunOptions): Promise<InferenceSession.ReturnType>;\n\n  /**\n   * Runs a single optimizer step, which performs weight updates for the trainable parameters using the optimizer model.\n   *\n   * @param options - Optional. A set of options that controls the behavior of model optimizing.\n   */\n  runOptimizerStep(options?: InferenceSession.RunOptions): Promise<void>;\n\n  /**\n   * Run a single eval step with the given inputs and options using the eval model.\n   *\n   * @param feeds - Representation of the model input.\n   * @param options - Optional. A set of options that controls the behavior of model eval step.\n   * @returns A promise that resolves to a map, which uses output names as keys and OnnxValue as corresponding\n   values.\n   */\n  runEvalStep(feeds: InferenceSession.FeedsType, options?: InferenceSession.RunOptions):\n      Promise<InferenceSession.ReturnType>;\n\n  /**\n   * Run a single eval step with the given inputs and options using the eval model.\n   *\n   * @param feeds - Representation of the model input.\n   * @param fetches - Representation of the model output.\n   * detail.\n   * @param options - Optional. A set of options that controls the behavior of model eval step.\n   * @returns A promise that resolves to a map, which uses output names as keys and OnnxValue as corresponding\n   values.\n   */\n  runEvalStep(\n      feeds: InferenceSession.FeedsType, fetches: InferenceSession.FetchesType,\n      options?: InferenceSession.RunOptions): Promise<InferenceSession.ReturnType>;\n\n  // #endregion\n\n  // #region copy parameters\n\n  /**\n   * Retrieves the size of all parameters for the training state. Calculates the total number of primitive (datatype of\n   * the parameters) elements of all the parameters in the training state.\n   *\n   * @param trainableOnly - When set to true, the size is calculated for trainable params only. Default value is true.\n   */\n  getParametersSize(trainableOnly: boolean): Promise<number>;\n\n  /**\n   * Copies parameter values from the given array to the training state. Currently, only supporting models with\n   * parameters of type Float32.\n   *\n   * @param buffer - Float32 buffer containing parameters converted to a Uint8Array.\n   * @param trainableOnly - True if trainable parameters only to be modified, false otherwise. Default value is true.\n   */\n  loadParametersBuffer(array: Uint8Array, trainableOnly: boolean): Promise<void>;\n\n  /**\n   * Copies the model parameters to a contiguous buffer. Usually used in the context of Federated Learning.\n   * Currently, only supporting models with parameters of type Float32.\n   *\n   * @param trainableOnly - When set to true, only trainable parameters are copied. Trainable parameters are parameters\n   * for which requires_grad is set to true. Default value is true.\n   * @returns A promise that resolves to a Float32 OnnxValue of the requested parameters.\n   */\n  getContiguousParameters(trainableOnly: boolean): Promise<OnnxValue>;\n  // #endregion\n\n  // #region release()\n\n  /**\n   * Release the inference session and the underlying resources.\n   */\n  release(): Promise<void>;\n  // #endregion\n\n  // #region metadata\n\n  /**\n   * Get input names of the loaded training model.\n   */\n  readonly trainingInputNames: readonly string[];\n\n  /**\n   * Get output names of the loaded training model.\n   */\n  readonly trainingOutputNames: readonly string[];\n\n  /**\n   * Get input names of the loaded eval model. Is an empty array if no eval model is loaded.\n   */\n  readonly evalInputNames: readonly string[];\n\n  /**\n   * Get output names of the loaded eval model. Is an empty array if no eval model is loaded.\n   */\n  readonly evalOutputNames: readonly string[];\n\n  // #endregion\n}\n\n/**\n * Represents the optional parameters that can be passed into the TrainingSessionFactory.\n */\nexport interface TrainingSessionCreateOptions {\n  /**\n   * URI or buffer for a .ckpt file that contains the checkpoint for the training model.\n   */\n  checkpointState: TrainingSession.URIorBuffer;\n  /**\n   * URI or buffer for the .onnx training file.\n   */\n  trainModel: TrainingSession.URIorBuffer;\n  /**\n   * Optional. URI or buffer for the .onnx optimizer model file.\n   */\n  optimizerModel?: TrainingSession.URIorBuffer;\n  /**\n   * Optional. URI or buffer for the .onnx eval model file.\n   */\n  evalModel?: TrainingSession.URIorBuffer;\n}\n\n/**\n * Defines method overload possibilities for creating a TrainingSession.\n */\nexport interface TrainingSessionFactory {\n  // #region create()\n\n  /**\n   * Creates a new TrainingSession and asynchronously loads any models passed in through trainingOptions\n   *\n   * @param trainingOptions specify models and checkpoints to load into the Training Session\n   * @param sessionOptions specify configuration for training session behavior\n   *\n   * @returns Promise that resolves to a TrainingSession object\n   */\n  create(trainingOptions: TrainingSessionCreateOptions, sessionOptions?: InferenceSession.SessionOptions):\n      Promise<TrainingSession>;\n\n  // #endregion\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const TrainingSession: TrainingSessionFactory = TrainingSessionImpl;\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * # ONNX Runtime JavaScript API\n *\n * ONNX Runtime JavaScript API is a unified API for all JavaScript usages, including the following NPM packages:\n *\n * - [onnxruntime-node](https://www.npmjs.com/package/onnxruntime-node)\n * - [onnxruntime-web](https://www.npmjs.com/package/onnxruntime-web)\n * - [onnxruntime-react-native](https://www.npmjs.com/package/onnxruntime-react-native)\n *\n * See also:\n * - [Get Started](https://onnxruntime.ai/docs/get-started/with-javascript.html)\n * - [Inference examples](https://github.com/microsoft/onnxruntime-inference-examples/tree/main/js)\n *\n * @packageDocumentation\n */\n\nexport * from './backend.js';\nexport * from './env.js';\nexport * from './inference-session.js';\nexport * from './tensor.js';\nexport * from './onnx-value.js';\nexport * from './training-session.js';\n", "export const readFile = undefined;", "export const join = undefined;", "\nvar ortWasm = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(moduleArg = {}) {\n\nvar e=moduleArg,k,l;e.ready=new Promise((a,b)=>{k=a;l=b});var q=Object.assign({},e),v=\"./this.program\",aa=\"object\"==typeof window,x=\"function\"==typeof importScripts,ba=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,y=\"\",A,B,C;\nif(ba){var fs=require(\"fs\"),D=require(\"path\");y=x?D.dirname(y)+\"/\":__dirname+\"/\";A=(a,b)=>{a=a.startsWith(\"file://\")?new URL(a):D.normalize(a);return fs.readFileSync(a,b?void 0:\"utf8\")};C=a=>{a=A(a,!0);a.buffer||(a=new Uint8Array(a));return a};B=(a,b,c,f=!0)=>{a=a.startsWith(\"file://\")?new URL(a):D.normalize(a);fs.readFile(a,f?void 0:\"utf8\",(g,h)=>{g?c(g):b(f?h.buffer:h)})};!e.thisProgram&&1<process.argv.length&&(v=process.argv[1].replace(/\\\\/g,\"/\"));process.argv.slice(2);e.inspect=()=>\"[Emscripten Module object]\"}else if(aa||\nx)x?y=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(y=document.currentScript.src),_scriptDir&&(y=_scriptDir),0!==y.indexOf(\"blob:\")?y=y.substr(0,y.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):y=\"\",A=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);return b.responseText},x&&(C=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\"arraybuffer\";b.send(null);return new Uint8Array(b.response)}),B=(a,b,c)=>{var f=new XMLHttpRequest;f.open(\"GET\",a,!0);f.responseType=\n\"arraybuffer\";f.onload=()=>{200==f.status||0==f.status&&f.response?b(f.response):c()};f.onerror=c;f.send(null)};var ca=e.print||console.log.bind(console),E=e.printErr||console.error.bind(console);Object.assign(e,q);q=null;e.thisProgram&&(v=e.thisProgram);var F;e.wasmBinary&&(F=e.wasmBinary);var noExitRuntime=e.noExitRuntime||!0;\"object\"!=typeof WebAssembly&&G(\"no native wasm support detected\");var H,I,da=!1,J,K,L,M;\nfunction ea(){var a=H.buffer;e.HEAP8=J=new Int8Array(a);e.HEAP16=new Int16Array(a);e.HEAP32=L=new Int32Array(a);e.HEAPU8=K=new Uint8Array(a);e.HEAPU16=new Uint16Array(a);e.HEAPU32=M=new Uint32Array(a);e.HEAPF32=new Float32Array(a);e.HEAPF64=new Float64Array(a)}var fa=[],ha=[],ia=[];function ja(){var a=e.preRun.shift();fa.unshift(a)}var N=0,O=null,P=null;\nfunction G(a){if(e.onAbort)e.onAbort(a);a=\"Aborted(\"+a+\")\";E(a);da=!0;a=new WebAssembly.RuntimeError(a+\". Build with -sASSERTIONS for more info.\");l(a);throw a;}function ka(a){return a.startsWith(\"data:application/octet-stream;base64,\")}var Q;Q=\"ort-wasm.wasm\";if(!ka(Q)){var la=Q;Q=e.locateFile?e.locateFile(la,y):y+la}function ma(a){if(a==Q&&F)return new Uint8Array(F);if(C)return C(a);throw\"both async and sync fetching of the wasm failed\";}\nfunction na(a){if(!F&&(aa||x)){if(\"function\"==typeof fetch&&!a.startsWith(\"file://\"))return fetch(a,{credentials:\"same-origin\"}).then(b=>{if(!b.ok)throw\"failed to load wasm binary file at '\"+a+\"'\";return b.arrayBuffer()}).catch(()=>ma(a));if(B)return new Promise((b,c)=>{B(a,f=>b(new Uint8Array(f)),c)})}return Promise.resolve().then(()=>ma(a))}function oa(a,b,c){return na(a).then(f=>WebAssembly.instantiate(f,b)).then(f=>f).then(c,f=>{E(\"failed to asynchronously prepare wasm: \"+f);G(f)})}\nfunction pa(a,b){var c=Q;return F||\"function\"!=typeof WebAssembly.instantiateStreaming||ka(c)||c.startsWith(\"file://\")||ba||\"function\"!=typeof fetch?oa(c,a,b):fetch(c,{credentials:\"same-origin\"}).then(f=>WebAssembly.instantiateStreaming(f,a).then(b,function(g){E(\"wasm streaming compile failed: \"+g);E(\"falling back to ArrayBuffer instantiation\");return oa(c,a,b)}))}var R,S=a=>{for(;0<a.length;)a.shift()(e)};\nfunction qa(a){this.va=a-24;this.Ea=function(b){M[this.va+4>>2>>>0]=b};this.za=function(b){M[this.va+8>>2>>>0]=b};this.xa=function(b,c){this.ya();this.Ea(b);this.za(c)};this.ya=function(){M[this.va+16>>2>>>0]=0}}\nvar ra=0,sa=0,ta=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0,ua=(a,b,c)=>{b>>>=0;var f=b+c;for(c=b;a[c]&&!(c>=f);)++c;if(16<c-b&&a.buffer&&ta)return ta.decode(a.subarray(b,c));for(f=\"\";b<c;){var g=a[b++];if(g&128){var h=a[b++]&63;if(192==(g&224))f+=String.fromCharCode((g&31)<<6|h);else{var m=a[b++]&63;g=224==(g&240)?(g&15)<<12|h<<6|m:(g&7)<<18|h<<12|m<<6|a[b++]&63;65536>g?f+=String.fromCharCode(g):(g-=65536,f+=String.fromCharCode(55296|g>>10,56320|g&1023))}}else f+=String.fromCharCode(g)}return f},\nT=(a,b)=>(a>>>=0)?ua(K,a,b):\"\",U=a=>{for(var b=0,c=0;c<a.length;++c){var f=a.charCodeAt(c);127>=f?b++:2047>=f?b+=2:55296<=f&&57343>=f?(b+=4,++c):b+=3}return b},V=(a,b,c,f)=>{c>>>=0;if(!(0<f))return 0;var g=c;f=c+f-1;for(var h=0;h<a.length;++h){var m=a.charCodeAt(h);if(55296<=m&&57343>=m){var r=a.charCodeAt(++h);m=65536+((m&1023)<<10)|r&1023}if(127>=m){if(c>=f)break;b[c++>>>0]=m}else{if(2047>=m){if(c+1>=f)break;b[c++>>>0]=192|m>>6}else{if(65535>=m){if(c+2>=f)break;b[c++>>>0]=224|m>>12}else{if(c+3>=\nf)break;b[c++>>>0]=240|m>>18;b[c++>>>0]=128|m>>12&63}b[c++>>>0]=128|m>>6&63}b[c++>>>0]=128|m&63}}b[c>>>0]=0;return c-g},W=a=>0===a%4&&(0!==a%100||0===a%400),va=[0,31,60,91,121,152,182,213,244,274,305,335],wa=[0,31,59,90,120,151,181,212,243,273,304,334],Ba=a=>{var b=U(a)+1,c=Aa(b);c&&V(a,K,c,b);return c},X={},Ca=()=>{if(!Y){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\n\"_\")+\".UTF-8\",_:v||\"./this.program\"},b;for(b in X)void 0===X[b]?delete a[b]:a[b]=X[b];var c=[];for(b in a)c.push(`${b}=${a[b]}`);Y=c}return Y},Y,Da=[null,[],[]],Ea=[31,29,31,30,31,30,31,31,30,31,30,31],Fa=[31,28,31,30,31,30,31,31,30,31,30,31];function Ga(a){var b=Array(U(a)+1);V(a,b,0,b.length);return b}\nfunction Ha(a,b,c,f){function g(d,n,p){for(d=\"number\"==typeof d?d.toString():d||\"\";d.length<n;)d=p[0]+d;return d}function h(d,n){return g(d,n,\"0\")}function m(d,n){function p(xa){return 0>xa?-1:0<xa?1:0}var z;0===(z=p(d.getFullYear()-n.getFullYear()))&&0===(z=p(d.getMonth()-n.getMonth()))&&(z=p(d.getDate()-n.getDate()));return z}function r(d){switch(d.getDay()){case 0:return new Date(d.getFullYear()-1,11,29);case 1:return d;case 2:return new Date(d.getFullYear(),0,3);case 3:return new Date(d.getFullYear(),\n0,2);case 4:return new Date(d.getFullYear(),0,1);case 5:return new Date(d.getFullYear()-1,11,31);case 6:return new Date(d.getFullYear()-1,11,30)}}function w(d){var n=d.ra;for(d=new Date((new Date(d.sa+1900,0,1)).getTime());0<n;){var p=d.getMonth(),z=(W(d.getFullYear())?Ea:Fa)[p];if(n>z-d.getDate())n-=z-d.getDate()+1,d.setDate(1),11>p?d.setMonth(p+1):(d.setMonth(0),d.setFullYear(d.getFullYear()+1));else{d.setDate(d.getDate()+n);break}}p=new Date(d.getFullYear()+1,0,4);n=r(new Date(d.getFullYear(),\n0,4));p=r(p);return 0>=m(n,d)?0>=m(p,d)?d.getFullYear()+1:d.getFullYear():d.getFullYear()-1}a>>>=0;b>>>=0;c>>>=0;f>>>=0;var t=L[f+40>>2>>>0];f={Ca:L[f>>2>>>0],Ba:L[f+4>>2>>>0],ta:L[f+8>>2>>>0],wa:L[f+12>>2>>>0],ua:L[f+16>>2>>>0],sa:L[f+20>>2>>>0],ma:L[f+24>>2>>>0],ra:L[f+28>>2>>>0],Fa:L[f+32>>2>>>0],Aa:L[f+36>>2>>>0],Da:t?T(t):\"\"};c=T(c);t={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\n\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var u in t)c=c.replace(new RegExp(u,\"g\"),t[u]);var ya=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),za=\"January February March April May June July August September October November December\".split(\" \");t={\"%a\":d=>ya[d.ma].substring(0,3),\"%A\":d=>ya[d.ma],\"%b\":d=>\nza[d.ua].substring(0,3),\"%B\":d=>za[d.ua],\"%C\":d=>h((d.sa+1900)/100|0,2),\"%d\":d=>h(d.wa,2),\"%e\":d=>g(d.wa,2,\" \"),\"%g\":d=>w(d).toString().substring(2),\"%G\":d=>w(d),\"%H\":d=>h(d.ta,2),\"%I\":d=>{d=d.ta;0==d?d=12:12<d&&(d-=12);return h(d,2)},\"%j\":d=>{for(var n=0,p=0;p<=d.ua-1;n+=(W(d.sa+1900)?Ea:Fa)[p++]);return h(d.wa+n,3)},\"%m\":d=>h(d.ua+1,2),\"%M\":d=>h(d.Ba,2),\"%n\":()=>\"\\n\",\"%p\":d=>0<=d.ta&&12>d.ta?\"AM\":\"PM\",\"%S\":d=>h(d.Ca,2),\"%t\":()=>\"\\t\",\"%u\":d=>d.ma||7,\"%U\":d=>h(Math.floor((d.ra+7-d.ma)/7),2),\"%V\":d=>\n{var n=Math.floor((d.ra+7-(d.ma+6)%7)/7);2>=(d.ma+371-d.ra-2)%7&&n++;if(n)53==n&&(p=(d.ma+371-d.ra)%7,4==p||3==p&&W(d.sa)||(n=1));else{n=52;var p=(d.ma+7-d.ra-1)%7;(4==p||5==p&&W(d.sa%400-1))&&n++}return h(n,2)},\"%w\":d=>d.ma,\"%W\":d=>h(Math.floor((d.ra+7-(d.ma+6)%7)/7),2),\"%y\":d=>(d.sa+1900).toString().substring(2),\"%Y\":d=>d.sa+1900,\"%z\":d=>{d=d.Aa;var n=0<=d;d=Math.abs(d)/60;return(n?\"+\":\"-\")+String(\"0000\"+(d/60*100+d%60)).slice(-4)},\"%Z\":d=>d.Da,\"%%\":()=>\"%\"};c=c.replace(/%%/g,\"\\x00\\x00\");for(u in t)c.includes(u)&&\n(c=c.replace(new RegExp(u,\"g\"),t[u](f)));c=c.replace(/\\0\\0/g,\"%\");u=Ga(c);if(u.length>b)return 0;J.set(u,a>>>0);return u.length-1}\nvar Ja={a:function(a,b,c){a>>>=0;(new qa(a)).xa(b>>>0,c>>>0);ra=a;sa++;throw ra;},e:function(){return 0},H:function(){},x:function(){},z:function(){},k:function(){return 0},F:function(){},B:function(){},E:function(){},g:function(){},y:function(){},v:function(){},G:function(){},w:function(){},l:()=>!0,o:function(a,b,c){a=b+2097152>>>0<4194305-!!a?(a>>>0)+4294967296*b:NaN;c>>>=0;a=new Date(1E3*a);L[c>>2>>>0]=a.getUTCSeconds();L[c+4>>2>>>0]=a.getUTCMinutes();L[c+8>>2>>>0]=a.getUTCHours();L[c+12>>2>>>\n0]=a.getUTCDate();L[c+16>>2>>>0]=a.getUTCMonth();L[c+20>>2>>>0]=a.getUTCFullYear()-1900;L[c+24>>2>>>0]=a.getUTCDay();L[c+28>>2>>>0]=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864E5|0},p:function(a,b,c){a=b+2097152>>>0<4194305-!!a?(a>>>0)+4294967296*b:NaN;c>>>=0;a=new Date(1E3*a);L[c>>2>>>0]=a.getSeconds();L[c+4>>2>>>0]=a.getMinutes();L[c+8>>2>>>0]=a.getHours();L[c+12>>2>>>0]=a.getDate();L[c+16>>2>>>0]=a.getMonth();L[c+20>>2>>>0]=a.getFullYear()-1900;L[c+24>>2>>>0]=a.getDay();L[c+28>>2>>>\n0]=(W(a.getFullYear())?va:wa)[a.getMonth()]+a.getDate()-1|0;L[c+36>>2>>>0]=-(60*a.getTimezoneOffset());b=(new Date(a.getFullYear(),6,1)).getTimezoneOffset();var f=(new Date(a.getFullYear(),0,1)).getTimezoneOffset();L[c+32>>2>>>0]=(b!=f&&a.getTimezoneOffset()==Math.min(f,b))|0},q:function(a){a>>>=0;var b=new Date(L[a+20>>2>>>0]+1900,L[a+16>>2>>>0],L[a+12>>2>>>0],L[a+8>>2>>>0],L[a+4>>2>>>0],L[a>>2>>>0],0),c=L[a+32>>2>>>0],f=b.getTimezoneOffset(),g=(new Date(b.getFullYear(),6,1)).getTimezoneOffset(),\nh=(new Date(b.getFullYear(),0,1)).getTimezoneOffset(),m=Math.min(h,g);0>c?L[a+32>>2>>>0]=Number(g!=h&&m==f):0<c!=(m==f)&&(g=Math.max(h,g),b.setTime(b.getTime()+6E4*((0<c?m:g)-f)));L[a+24>>2>>>0]=b.getDay();L[a+28>>2>>>0]=(W(b.getFullYear())?va:wa)[b.getMonth()]+b.getDate()-1|0;L[a>>2>>>0]=b.getSeconds();L[a+4>>2>>>0]=b.getMinutes();L[a+8>>2>>>0]=b.getHours();L[a+12>>2>>>0]=b.getDate();L[a+16>>2>>>0]=b.getMonth();L[a+20>>2>>>0]=b.getYear();a=b.getTime()/1E3;return Ia((R=a,1<=+Math.abs(R)?0<R?+Math.floor(R/\n4294967296)>>>0:~~+Math.ceil((R-+(~~R>>>0))/4294967296)>>>0:0)),a>>>0},m:function(){return-52},n:function(){},t:function(a,b,c){function f(w){return(w=w.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?w[1]:\"GMT\"}c>>>=0;var g=(new Date).getFullYear(),h=new Date(g,0,1),m=new Date(g,6,1);g=h.getTimezoneOffset();var r=m.getTimezoneOffset();M[a>>>0>>2>>>0]=60*Math.max(g,r);L[b>>>0>>2>>>0]=Number(g!=r);a=f(h);b=f(m);a=Ba(a);b=Ba(b);r<g?(M[c>>2>>>0]=a,M[c+4>>2>>>0]=b):(M[c>>2>>>0]=b,M[c+4>>2>>>0]=a)},d:()=>{G(\"\")},\nh:function(){return Date.now()},u:function(){return 4294901760},b:()=>performance.now(),I:function(a,b,c){b>>>=0;return K.copyWithin(a>>>0>>>0,b>>>0,b+(c>>>0)>>>0)},s:function(a){a>>>=0;var b=K.length;if(4294901760<a)return!1;for(var c=1;4>=c;c*=2){var f=b*(1+.2/c);f=Math.min(f,a+100663296);var g=Math;f=Math.max(a,f);a:{g=g.min.call(g,4294901760,f+(65536-f%65536)%65536)-H.buffer.byteLength+65535>>>16;try{H.grow(g);ea();var h=1;break a}catch(m){}h=void 0}if(h)return!0}return!1},C:function(a,b){a>>>=\n0;b>>>=0;var c=0;Ca().forEach(function(f,g){var h=b+c;g=M[a+4*g>>2>>>0]=h;for(h=0;h<f.length;++h)J[g++>>0>>>0]=f.charCodeAt(h);J[g>>0>>>0]=0;c+=f.length+1});return 0},D:function(a,b){a>>>=0;b>>>=0;var c=Ca();M[a>>2>>>0]=c.length;var f=0;c.forEach(function(g){f+=g.length+1});M[b>>2>>>0]=f;return 0},f:()=>52,j:function(){return 52},r:function(){return 70},i:function(a,b,c,f){b>>>=0;c>>>=0;f>>>=0;for(var g=0,h=0;h<c;h++){var m=M[b>>2>>>0],r=M[b+4>>2>>>0];b+=8;for(var w=0;w<r;w++){var t=K[m+w>>>0],u=\nDa[a];0===t||10===t?((1===a?ca:E)(ua(u,0)),u.length=0):u.push(t)}g+=r}M[f>>2>>>0]=g;return 0},A:Ha,c:function(a,b,c,f){return Ha(a>>>0,b>>>0,c>>>0,f>>>0)}};\n(function(){function a(c){c=c.exports;I=c=Ka(c);H=I.J;ea();ha.unshift(I.K);N--;e.monitorRunDependencies&&e.monitorRunDependencies(N);if(0==N&&(null!==O&&(clearInterval(O),O=null),P)){var f=P;P=null;f()}return c}var b={a:Ja};N++;e.monitorRunDependencies&&e.monitorRunDependencies(N);if(e.instantiateWasm)try{return e.instantiateWasm(b,a)}catch(c){E(\"Module.instantiateWasm callback failed with error: \"+c),l(c)}pa(b,function(c){a(c.instance)}).catch(l);return{}})();\ne._OrtInit=(a,b)=>(e._OrtInit=I.L)(a,b);e._OrtGetLastError=(a,b)=>(e._OrtGetLastError=I.M)(a,b);e._OrtCreateSessionOptions=(a,b,c,f,g,h,m,r,w,t)=>(e._OrtCreateSessionOptions=I.N)(a,b,c,f,g,h,m,r,w,t);e._OrtAppendExecutionProvider=(a,b)=>(e._OrtAppendExecutionProvider=I.O)(a,b);e._OrtAddFreeDimensionOverride=(a,b,c)=>(e._OrtAddFreeDimensionOverride=I.P)(a,b,c);e._OrtAddSessionConfigEntry=(a,b,c)=>(e._OrtAddSessionConfigEntry=I.Q)(a,b,c);e._OrtReleaseSessionOptions=a=>(e._OrtReleaseSessionOptions=I.R)(a);\ne._OrtCreateSession=(a,b,c)=>(e._OrtCreateSession=I.S)(a,b,c);e._OrtReleaseSession=a=>(e._OrtReleaseSession=I.T)(a);e._OrtGetInputOutputCount=(a,b,c)=>(e._OrtGetInputOutputCount=I.U)(a,b,c);e._OrtGetInputName=(a,b)=>(e._OrtGetInputName=I.V)(a,b);e._OrtGetOutputName=(a,b)=>(e._OrtGetOutputName=I.W)(a,b);e._OrtFree=a=>(e._OrtFree=I.X)(a);e._OrtCreateTensor=(a,b,c,f,g,h)=>(e._OrtCreateTensor=I.Y)(a,b,c,f,g,h);e._OrtGetTensorData=(a,b,c,f,g)=>(e._OrtGetTensorData=I.Z)(a,b,c,f,g);\ne._OrtReleaseTensor=a=>(e._OrtReleaseTensor=I._)(a);e._OrtCreateRunOptions=(a,b,c,f)=>(e._OrtCreateRunOptions=I.$)(a,b,c,f);e._OrtAddRunConfigEntry=(a,b,c)=>(e._OrtAddRunConfigEntry=I.aa)(a,b,c);e._OrtReleaseRunOptions=a=>(e._OrtReleaseRunOptions=I.ba)(a);e._OrtCreateBinding=a=>(e._OrtCreateBinding=I.ca)(a);e._OrtBindInput=(a,b,c)=>(e._OrtBindInput=I.da)(a,b,c);e._OrtBindOutput=(a,b,c,f)=>(e._OrtBindOutput=I.ea)(a,b,c,f);e._OrtClearBoundOutputs=a=>(e._OrtClearBoundOutputs=I.fa)(a);\ne._OrtReleaseBinding=a=>(e._OrtReleaseBinding=I.ga)(a);e._OrtRunWithBinding=(a,b,c,f,g)=>(e._OrtRunWithBinding=I.ha)(a,b,c,f,g);e._OrtRun=(a,b,c,f,g,h,m,r)=>(e._OrtRun=I.ia)(a,b,c,f,g,h,m,r);e._OrtEndProfiling=a=>(e._OrtEndProfiling=I.ja)(a);var Aa=e._malloc=a=>(Aa=e._malloc=I.ka)(a);e._free=a=>(e._free=I.la)(a);var Ia=a=>(Ia=I.na)(a),La=()=>(La=I.oa)(),Ma=a=>(Ma=I.pa)(a),Na=a=>(Na=I.qa)(a);\nfunction Ka(a){a=Object.assign({},a);var b=f=>()=>f()>>>0,c=f=>g=>f(g)>>>0;a.__errno_location=b(a.__errno_location);a.malloc=c(a.malloc);a.stackSave=b(a.stackSave);a.stackAlloc=c(a.stackAlloc);return a}e.stackAlloc=Na;e.stackSave=La;e.stackRestore=Ma;e.UTF8ToString=T;e.stringToUTF8=(a,b,c)=>V(a,K,b,c);e.lengthBytesUTF8=U;var Z;P=function Oa(){Z||Pa();Z||(P=Oa)};\nfunction Pa(){function a(){if(!Z&&(Z=!0,e.calledRun=!0,!da)){S(ha);k(e);if(e.onRuntimeInitialized)e.onRuntimeInitialized();if(e.postRun)for(\"function\"==typeof e.postRun&&(e.postRun=[e.postRun]);e.postRun.length;){var b=e.postRun.shift();ia.unshift(b)}S(ia)}}if(!(0<N)){if(e.preRun)for(\"function\"==typeof e.preRun&&(e.preRun=[e.preRun]);e.preRun.length;)ja();S(fa);0<N||(e.setStatus?(e.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){e.setStatus(\"\")},1);a()},1)):a())}}\nif(e.preInit)for(\"function\"==typeof e.preInit&&(e.preInit=[e.preInit]);0<e.preInit.length;)e.preInit.pop()();Pa();\n\n\n  return moduleArg.ready\n}\n\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = ortWasm;\nelse if (typeof define === 'function' && define['amd'])\n  define([], () => ortWasm);\n", "", "", "export const cpus = undefined;", "\nvar ortWasmThreaded = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(moduleArg = {}) {\n\nfunction aa(){d.buffer!=l.buffer&&m();return l}function n(){d.buffer!=l.buffer&&m();return ba}function p(){d.buffer!=l.buffer&&m();return ca}function r(){d.buffer!=l.buffer&&m();return da}function ea(){d.buffer!=l.buffer&&m();return fa}var w=moduleArg,ha,x;w.ready=new Promise((a,b)=>{ha=a;x=b});\nvar ia=Object.assign({},w),ja=\"./this.program\",z=(a,b)=>{throw b;},ka=\"object\"==typeof window,A=\"function\"==typeof importScripts,B=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,D=w.ENVIRONMENT_IS_PTHREAD||!1,E=\"\";function la(a){return w.locateFile?w.locateFile(a,E):E+a}var ma,F,H;\nif(B){var fs=require(\"fs\"),na=require(\"path\");E=A?na.dirname(E)+\"/\":__dirname+\"/\";ma=(b,c)=>{b=b.startsWith(\"file://\")?new URL(b):na.normalize(b);return fs.readFileSync(b,c?void 0:\"utf8\")};H=b=>{b=ma(b,!0);b.buffer||(b=new Uint8Array(b));return b};F=(b,c,e,h=!0)=>{b=b.startsWith(\"file://\")?new URL(b):na.normalize(b);fs.readFile(b,h?void 0:\"utf8\",(g,k)=>{g?e(g):c(h?k.buffer:k)})};!w.thisProgram&&1<process.argv.length&&(ja=process.argv[1].replace(/\\\\/g,\"/\"));process.argv.slice(2);z=(b,c)=>{process.exitCode=\nb;throw c;};w.inspect=()=>\"[Emscripten Module object]\";let a;try{a=require(\"worker_threads\")}catch(b){throw console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?'),b;}global.Worker=a.Worker}else if(ka||A)A?E=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(E=document.currentScript.src),(typeof _scriptDir !== \"undefined\" && _scriptDir)&&(E=_scriptDir),0!==E.indexOf(\"blob:\")?E=E.substr(0,E.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):E=\"\",B||(ma=a=>{var b=\nnew XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);return b.responseText},A&&(H=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\"arraybuffer\";b.send(null);return new Uint8Array(b.response)}),F=(a,b,c)=>{var e=new XMLHttpRequest;e.open(\"GET\",a,!0);e.responseType=\"arraybuffer\";e.onload=()=>{200==e.status||0==e.status&&e.response?b(e.response):c()};e.onerror=c;e.send(null)});B&&\"undefined\"==typeof performance&&(global.performance=require(\"perf_hooks\").performance);\nvar oa=console.log.bind(console),pa=console.error.bind(console);B&&(oa=(...a)=>fs.writeSync(1,a.join(\" \")+\"\\n\"),pa=(...a)=>fs.writeSync(2,a.join(\" \")+\"\\n\"));var qa=w.print||oa,I=w.printErr||pa;Object.assign(w,ia);ia=null;w.thisProgram&&(ja=w.thisProgram);w.quit&&(z=w.quit);var J;w.wasmBinary&&(J=w.wasmBinary);var noExitRuntime=w.noExitRuntime||!0;\"object\"!=typeof WebAssembly&&K(\"no native wasm support detected\");var d,L,ra,M=!1,N,l,ba,ca,da,fa;\nfunction m(){var a=d.buffer;w.HEAP8=l=new Int8Array(a);w.HEAP16=new Int16Array(a);w.HEAP32=ca=new Int32Array(a);w.HEAPU8=ba=new Uint8Array(a);w.HEAPU16=new Uint16Array(a);w.HEAPU32=da=new Uint32Array(a);w.HEAPF32=new Float32Array(a);w.HEAPF64=fa=new Float64Array(a)}var O=w.INITIAL_MEMORY||16777216;5242880<=O||K(\"INITIAL_MEMORY should be larger than STACK_SIZE, was \"+O+\"! (STACK_SIZE=5242880)\");\nif(D)d=w.wasmMemory;else if(w.wasmMemory)d=w.wasmMemory;else if(d=new WebAssembly.Memory({initial:O/65536,maximum:65536,shared:!0}),!(d.buffer instanceof SharedArrayBuffer))throw I(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\"),B&&I(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)\"),\nError(\"bad memory\");m();O=d.buffer.byteLength;var sa,ta=[],ua=[],va=[],wa=0;function P(){return noExitRuntime||0<wa}var Q=0,xa=null,R=null;function ya(){Q++;w.monitorRunDependencies&&w.monitorRunDependencies(Q)}function za(){Q--;w.monitorRunDependencies&&w.monitorRunDependencies(Q);if(0==Q&&(null!==xa&&(clearInterval(xa),xa=null),R)){var a=R;R=null;a()}}\nfunction K(a){if(w.onAbort)w.onAbort(a);a=\"Aborted(\"+a+\")\";I(a);M=!0;N=1;a=new WebAssembly.RuntimeError(a+\". Build with -sASSERTIONS for more info.\");x(a);throw a;}function Aa(a){return a.startsWith(\"data:application/octet-stream;base64,\")}var S;S=\"ort-wasm-threaded.wasm\";Aa(S)||(S=la(S));function Ba(a){if(a==S&&J)return new Uint8Array(J);if(H)return H(a);throw\"both async and sync fetching of the wasm failed\";}\nfunction Ca(a){if(!J&&(ka||A)){if(\"function\"==typeof fetch&&!a.startsWith(\"file://\"))return fetch(a,{credentials:\"same-origin\"}).then(b=>{if(!b.ok)throw\"failed to load wasm binary file at '\"+a+\"'\";return b.arrayBuffer()}).catch(()=>Ba(a));if(F)return new Promise((b,c)=>{F(a,e=>b(new Uint8Array(e)),c)})}return Promise.resolve().then(()=>Ba(a))}function Da(a,b,c){return Ca(a).then(e=>WebAssembly.instantiate(e,b)).then(e=>e).then(c,e=>{I(\"failed to asynchronously prepare wasm: \"+e);K(e)})}\nfunction Ea(a,b){var c=S;return J||\"function\"!=typeof WebAssembly.instantiateStreaming||Aa(c)||c.startsWith(\"file://\")||B||\"function\"!=typeof fetch?Da(c,a,b):fetch(c,{credentials:\"same-origin\"}).then(e=>WebAssembly.instantiateStreaming(e,a).then(b,function(h){I(\"wasm streaming compile failed: \"+h);I(\"falling back to ArrayBuffer instantiation\");return Da(c,a,b)}))}var T;function U(a){this.name=\"ExitStatus\";this.message=`Program terminated with exit(${a})`;this.status=a}\nfunction Fa(a){a.terminate();a.onmessage=()=>{}}function Ga(a){(a=V.La[a])||K();V.lb(a)}function Ha(a){var b=V.fb();if(!b)return 6;V.Oa.push(b);V.La[a.Na]=b;b.Na=a.Na;var c={cmd:\"run\",start_routine:a.mb,arg:a.eb,pthread_ptr:a.Na};B&&b.unref();b.postMessage(c,a.sb);return 0}\nvar Ia=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0,Ja=(a,b,c)=>{b>>>=0;var e=b+c;for(c=b;a[c]&&!(c>=e);)++c;if(16<c-b&&a.buffer&&Ia)return Ia.decode(a.buffer instanceof SharedArrayBuffer?a.slice(b,c):a.subarray(b,c));for(e=\"\";b<c;){var h=a[b++];if(h&128){var g=a[b++]&63;if(192==(h&224))e+=String.fromCharCode((h&31)<<6|g);else{var k=a[b++]&63;h=224==(h&240)?(h&15)<<12|g<<6|k:(h&7)<<18|g<<12|k<<6|a[b++]&63;65536>h?e+=String.fromCharCode(h):(h-=65536,e+=String.fromCharCode(55296|h>>\n10,56320|h&1023))}}else e+=String.fromCharCode(h)}return e},Ka=(a,b)=>(a>>>=0)?Ja(n(),a,b):\"\";function La(a){if(D)return W(1,1,a);N=a;if(!P()){V.nb();if(w.onExit)w.onExit(a);M=!0}z(a,new U(a))}\nvar Na=a=>{N=a;if(D)throw Ma(a),\"unwind\";La(a)},V={Ra:[],Oa:[],Za:[],La:{},Va:function(){D?V.hb():V.gb()},gb:function(){ta.unshift(()=>{ya();V.ib(()=>za())})},hb:function(){V.receiveObjectTransfer=V.kb;V.threadInitTLS=V.Ya;V.setExitStatus=V.Xa;noExitRuntime=!1},Xa:function(a){N=a},xb:[\"$terminateWorker\"],nb:function(){for(var a of V.Oa)Fa(a);for(a of V.Ra)Fa(a);V.Ra=[];V.Oa=[];V.La=[]},lb:function(a){var b=a.Na;delete V.La[b];V.Ra.push(a);V.Oa.splice(V.Oa.indexOf(a),1);a.Na=0;Oa(b)},kb:function(){},\nYa:function(){V.Za.forEach(a=>a())},jb:a=>new Promise(b=>{a.onmessage=g=>{g=g.data;var k=g.cmd;if(g.targetThread&&g.targetThread!=X()){var t=V.La[g.wb];t?t.postMessage(g,g.transferList):I('Internal error! Worker sent a message \"'+k+'\" to target pthread '+g.targetThread+\", but that thread no longer exists!\")}else if(\"checkMailbox\"===k)Y();else if(\"spawnThread\"===k)Ha(g);else if(\"cleanupThread\"===k)Ga(g.thread);else if(\"killThread\"===k)g=g.thread,k=V.La[g],delete V.La[g],Fa(k),Oa(g),V.Oa.splice(V.Oa.indexOf(k),\n1),k.Na=0;else if(\"cancelThread\"===k)V.La[g.thread].postMessage({cmd:\"cancel\"});else if(\"loaded\"===k)a.loaded=!0,b(a);else if(\"alert\"===k)alert(\"Thread \"+g.threadId+\": \"+g.text);else if(\"setimmediate\"===g.target)a.postMessage(g);else if(\"callHandler\"===k)w[g.handler](...g.args);else k&&I(\"worker sent an unknown command \"+k)};a.onerror=g=>{I(\"worker sent an error! \"+g.filename+\":\"+g.lineno+\": \"+g.message);throw g;};B&&(a.on(\"message\",function(g){a.onmessage({data:g})}),a.on(\"error\",function(g){a.onerror(g)}));\nvar c=[],e=[\"onExit\",\"onAbort\",\"print\",\"printErr\"],h;for(h of e)w.hasOwnProperty(h)&&c.push(h);a.postMessage({cmd:\"load\",handlers:c,urlOrBlob:w.mainScriptUrlOrBlob||_scriptDir,wasmMemory:d,wasmModule:ra})}),ib:function(a){a()},cb:function(){var a=la(\"ort-wasm-threaded.worker.js\");a=new Worker(a);V.Ra.push(a)},fb:function(){0==V.Ra.length&&(V.cb(),V.jb(V.Ra[0]));return V.Ra.pop()}};w.PThread=V;var Pa=a=>{for(;0<a.length;)a.shift()(w)};\nw.establishStackSpace=function(){var a=X(),b=p()[a+52>>2>>>0];a=p()[a+56>>2>>>0];Qa(b,b-a);Ra(b)};function Ma(a){if(D)return W(2,0,a);Na(a)}var Sa=[];w.invokeEntryPoint=function(a,b){var c=Sa[a];c||(a>=Sa.length&&(Sa.length=a+1),Sa[a]=c=sa.get(a));a=c(b);P()?V.Xa(a):Ta(a)};function Ua(a){this.Ua=a-24;this.bb=function(b){r()[this.Ua+4>>2>>>0]=b};this.ab=function(b){r()[this.Ua+8>>2>>>0]=b};this.Va=function(b,c){this.$a();this.bb(b);this.ab(c)};this.$a=function(){r()[this.Ua+16>>2>>>0]=0}}\nvar Va=0,Wa=0;function Xa(a,b,c,e){return D?W(3,1,a,b,c,e):Ya(a,b,c,e)}function Ya(a,b,c,e){a>>>=0;b>>>=0;c>>>=0;e>>>=0;if(\"undefined\"==typeof SharedArrayBuffer)return I(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\"),6;var h=[];if(D&&0===h.length)return Xa(a,b,c,e);a={mb:c,Na:a,eb:e,sb:h};return D?(a.ub=\"spawnThread\",postMessage(a,h),0):Ha(a)}function Za(a,b,c){return D?W(4,1,a,b,c):0}function $a(a,b){if(D)return W(5,1,a,b)}\nvar ab=a=>{for(var b=0,c=0;c<a.length;++c){var e=a.charCodeAt(c);127>=e?b++:2047>=e?b+=2:55296<=e&&57343>=e?(b+=4,++c):b+=3}return b},bb=(a,b,c,e)=>{c>>>=0;if(!(0<e))return 0;var h=c;e=c+e-1;for(var g=0;g<a.length;++g){var k=a.charCodeAt(g);if(55296<=k&&57343>=k){var t=a.charCodeAt(++g);k=65536+((k&1023)<<10)|t&1023}if(127>=k){if(c>=e)break;b[c++>>>0]=k}else{if(2047>=k){if(c+1>=e)break;b[c++>>>0]=192|k>>6}else{if(65535>=k){if(c+2>=e)break;b[c++>>>0]=224|k>>12}else{if(c+3>=e)break;b[c++>>>0]=240|k>>\n18;b[c++>>>0]=128|k>>12&63}b[c++>>>0]=128|k>>6&63}b[c++>>>0]=128|k&63}}b[c>>>0]=0;return c-h},cb=(a,b,c)=>bb(a,n(),b,c);function db(a,b){if(D)return W(6,1,a,b)}function eb(a,b,c){if(D)return W(7,1,a,b,c)}function fb(a,b,c){return D?W(8,1,a,b,c):0}function gb(a,b){if(D)return W(9,1,a,b)}function hb(a,b,c){if(D)return W(10,1,a,b,c)}function ib(a,b,c,e){if(D)return W(11,1,a,b,c,e)}function jb(a,b,c,e){if(D)return W(12,1,a,b,c,e)}function kb(a,b,c,e){if(D)return W(13,1,a,b,c,e)}\nfunction lb(a){if(D)return W(14,1,a)}function mb(a,b){if(D)return W(15,1,a,b)}function nb(a,b,c){if(D)return W(16,1,a,b,c)}var ob=a=>{if(!M)try{if(a(),!P())try{D?Ta(N):Na(N)}catch(b){b instanceof U||\"unwind\"==b||z(1,b)}}catch(b){b instanceof U||\"unwind\"==b||z(1,b)}};function pb(a){a>>>=0;\"function\"===typeof Atomics.tb&&(Atomics.tb(p(),a>>2,a).value.then(Y),a+=128,Atomics.store(p(),a>>2,1))}w.__emscripten_thread_mailbox_await=pb;function Y(){var a=X();a&&(pb(a),ob(()=>qb()))}w.checkMailbox=Y;\nvar Z=a=>0===a%4&&(0!==a%100||0===a%400),rb=[0,31,60,91,121,152,182,213,244,274,305,335],sb=[0,31,59,90,120,151,181,212,243,273,304,334];function tb(a,b,c,e,h,g,k,t){return D?W(17,1,a,b,c,e,h,g,k,t):-52}function ub(a,b,c,e,h,g,k){if(D)return W(18,1,a,b,c,e,h,g,k)}var wb=a=>{var b=ab(a)+1,c=vb(b);c&&cb(a,c,b);return c},yb=a=>{var b=xb();a=a();Ra(b);return a};\nfunction W(a,b){var c=arguments.length-2,e=arguments;return yb(()=>{for(var h=zb(8*c),g=h>>3,k=0;k<c;k++){var t=e[2+k];ea()[g+k>>>0]=t}return Ab(a,c,h,b)})}\nvar Bb=[],Cb={},Eb=()=>{if(!Db){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:ja||\"./this.program\"},b;for(b in Cb)void 0===Cb[b]?delete a[b]:a[b]=Cb[b];var c=[];for(b in a)c.push(`${b}=${a[b]}`);Db=c}return Db},Db;\nfunction Fb(a,b){if(D)return W(19,1,a,b);a>>>=0;b>>>=0;var c=0;Eb().forEach(function(e,h){var g=b+c;h=r()[a+4*h>>2>>>0]=g;for(g=0;g<e.length;++g)aa()[h++>>0>>>0]=e.charCodeAt(g);aa()[h>>0>>>0]=0;c+=e.length+1});return 0}function Gb(a,b){if(D)return W(20,1,a,b);a>>>=0;b>>>=0;var c=Eb();r()[a>>2>>>0]=c.length;var e=0;c.forEach(function(h){e+=h.length+1});r()[b>>2>>>0]=e;return 0}function Hb(a){return D?W(21,1,a):52}function Lb(a,b,c,e){return D?W(22,1,a,b,c,e):52}\nfunction Mb(a,b,c,e,h){return D?W(23,1,a,b,c,e,h):70}var Nb=[null,[],[]];function Ob(a,b,c,e){if(D)return W(24,1,a,b,c,e);b>>>=0;c>>>=0;e>>>=0;for(var h=0,g=0;g<c;g++){var k=r()[b>>2>>>0],t=r()[b+4>>2>>>0];b+=8;for(var C=0;C<t;C++){var v=n()[k+C>>>0],y=Nb[a];0===v||10===v?((1===a?qa:I)(Ja(y,0)),y.length=0):y.push(v)}h+=t}r()[e>>2>>>0]=h;return 0}var Pb=[31,29,31,30,31,30,31,31,30,31,30,31],Qb=[31,28,31,30,31,30,31,31,30,31,30,31];function Rb(a){var b=Array(ab(a)+1);bb(a,b,0,b.length);return b}\nvar Sb=(a,b)=>{aa().set(a,b>>>0)};\nfunction Tb(a,b,c,e){function h(f,q,u){for(f=\"number\"==typeof f?f.toString():f||\"\";f.length<q;)f=u[0]+f;return f}function g(f,q){return h(f,q,\"0\")}function k(f,q){function u(Ib){return 0>Ib?-1:0<Ib?1:0}var G;0===(G=u(f.getFullYear()-q.getFullYear()))&&0===(G=u(f.getMonth()-q.getMonth()))&&(G=u(f.getDate()-q.getDate()));return G}function t(f){switch(f.getDay()){case 0:return new Date(f.getFullYear()-1,11,29);case 1:return f;case 2:return new Date(f.getFullYear(),0,3);case 3:return new Date(f.getFullYear(),\n0,2);case 4:return new Date(f.getFullYear(),0,1);case 5:return new Date(f.getFullYear()-1,11,31);case 6:return new Date(f.getFullYear()-1,11,30)}}function C(f){var q=f.Pa;for(f=new Date((new Date(f.Qa+1900,0,1)).getTime());0<q;){var u=f.getMonth(),G=(Z(f.getFullYear())?Pb:Qb)[u];if(q>G-f.getDate())q-=G-f.getDate()+1,f.setDate(1),11>u?f.setMonth(u+1):(f.setMonth(0),f.setFullYear(f.getFullYear()+1));else{f.setDate(f.getDate()+q);break}}u=new Date(f.getFullYear()+1,0,4);q=t(new Date(f.getFullYear(),\n0,4));u=t(u);return 0>=k(q,f)?0>=k(u,f)?f.getFullYear()+1:f.getFullYear():f.getFullYear()-1}a>>>=0;b>>>=0;c>>>=0;e>>>=0;var v=p()[e+40>>2>>>0];e={qb:p()[e>>2>>>0],pb:p()[e+4>>2>>>0],Sa:p()[e+8>>2>>>0],Wa:p()[e+12>>2>>>0],Ta:p()[e+16>>2>>>0],Qa:p()[e+20>>2>>>0],Ma:p()[e+24>>2>>>0],Pa:p()[e+28>>2>>>0],yb:p()[e+32>>2>>>0],ob:p()[e+36>>2>>>0],rb:v?Ka(v):\"\"};c=Ka(c);v={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\n\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var y in v)c=c.replace(new RegExp(y,\"g\"),v[y]);var Jb=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),Kb=\"January February March April May June July August September October November December\".split(\" \");v={\"%a\":f=>Jb[f.Ma].substring(0,3),\n\"%A\":f=>Jb[f.Ma],\"%b\":f=>Kb[f.Ta].substring(0,3),\"%B\":f=>Kb[f.Ta],\"%C\":f=>g((f.Qa+1900)/100|0,2),\"%d\":f=>g(f.Wa,2),\"%e\":f=>h(f.Wa,2,\" \"),\"%g\":f=>C(f).toString().substring(2),\"%G\":f=>C(f),\"%H\":f=>g(f.Sa,2),\"%I\":f=>{f=f.Sa;0==f?f=12:12<f&&(f-=12);return g(f,2)},\"%j\":f=>{for(var q=0,u=0;u<=f.Ta-1;q+=(Z(f.Qa+1900)?Pb:Qb)[u++]);return g(f.Wa+q,3)},\"%m\":f=>g(f.Ta+1,2),\"%M\":f=>g(f.pb,2),\"%n\":()=>\"\\n\",\"%p\":f=>0<=f.Sa&&12>f.Sa?\"AM\":\"PM\",\"%S\":f=>g(f.qb,2),\"%t\":()=>\"\\t\",\"%u\":f=>f.Ma||7,\"%U\":f=>g(Math.floor((f.Pa+\n7-f.Ma)/7),2),\"%V\":f=>{var q=Math.floor((f.Pa+7-(f.Ma+6)%7)/7);2>=(f.Ma+371-f.Pa-2)%7&&q++;if(q)53==q&&(u=(f.Ma+371-f.Pa)%7,4==u||3==u&&Z(f.Qa)||(q=1));else{q=52;var u=(f.Ma+7-f.Pa-1)%7;(4==u||5==u&&Z(f.Qa%400-1))&&q++}return g(q,2)},\"%w\":f=>f.Ma,\"%W\":f=>g(Math.floor((f.Pa+7-(f.Ma+6)%7)/7),2),\"%y\":f=>(f.Qa+1900).toString().substring(2),\"%Y\":f=>f.Qa+1900,\"%z\":f=>{f=f.ob;var q=0<=f;f=Math.abs(f)/60;return(q?\"+\":\"-\")+String(\"0000\"+(f/60*100+f%60)).slice(-4)},\"%Z\":f=>f.rb,\"%%\":()=>\"%\"};c=c.replace(/%%/g,\n\"\\x00\\x00\");for(y in v)c.includes(y)&&(c=c.replace(new RegExp(y,\"g\"),v[y](e)));c=c.replace(/\\0\\0/g,\"%\");y=Rb(c);if(y.length>b)return 0;Sb(y,a);return y.length-1}V.Va();\nvar Ub=[null,La,Ma,Xa,Za,$a,db,eb,fb,gb,hb,ib,jb,kb,lb,mb,nb,tb,ub,Fb,Gb,Hb,Lb,Mb,Ob],Xb={b:function(a,b,c){a>>>=0;(new Ua(a)).Va(b>>>0,c>>>0);Va=a;Wa++;throw Va;},N:function(a){Vb(a>>>0,!A,1,!ka,131072,!1);V.Ya()},j:function(a){a>>>=0;D?postMessage({cmd:\"cleanupThread\",thread:a}):Ga(a)},I:Ya,h:Za,T:$a,D:db,F:eb,U:fb,R:gb,J:hb,Q:ib,n:jb,E:kb,B:lb,S:mb,C:nb,q:()=>!0,z:function(a,b){a>>>=0;a==b>>>0?setTimeout(()=>Y()):D?postMessage({targetThread:a,cmd:\"checkMailbox\"}):(a=V.La[a])&&a.postMessage({cmd:\"checkMailbox\"})},\nL:function(){return-1},M:pb,p:function(a){B&&V.La[a>>>0].ref()},t:function(a,b,c){a=b+2097152>>>0<4194305-!!a?(a>>>0)+4294967296*b:NaN;c>>>=0;a=new Date(1E3*a);p()[c>>2>>>0]=a.getUTCSeconds();p()[c+4>>2>>>0]=a.getUTCMinutes();p()[c+8>>2>>>0]=a.getUTCHours();p()[c+12>>2>>>0]=a.getUTCDate();p()[c+16>>2>>>0]=a.getUTCMonth();p()[c+20>>2>>>0]=a.getUTCFullYear()-1900;p()[c+24>>2>>>0]=a.getUTCDay();a=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864E5|0;p()[c+28>>2>>>0]=a},u:function(a,b,c){a=b+\n2097152>>>0<4194305-!!a?(a>>>0)+4294967296*b:NaN;c>>>=0;a=new Date(1E3*a);p()[c>>2>>>0]=a.getSeconds();p()[c+4>>2>>>0]=a.getMinutes();p()[c+8>>2>>>0]=a.getHours();p()[c+12>>2>>>0]=a.getDate();p()[c+16>>2>>>0]=a.getMonth();p()[c+20>>2>>>0]=a.getFullYear()-1900;p()[c+24>>2>>>0]=a.getDay();b=(Z(a.getFullYear())?rb:sb)[a.getMonth()]+a.getDate()-1|0;p()[c+28>>2>>>0]=b;p()[c+36>>2>>>0]=-(60*a.getTimezoneOffset());b=(new Date(a.getFullYear(),6,1)).getTimezoneOffset();var e=(new Date(a.getFullYear(),0,1)).getTimezoneOffset();\na=(b!=e&&a.getTimezoneOffset()==Math.min(e,b))|0;p()[c+32>>2>>>0]=a},v:function(a){a>>>=0;var b=new Date(p()[a+20>>2>>>0]+1900,p()[a+16>>2>>>0],p()[a+12>>2>>>0],p()[a+8>>2>>>0],p()[a+4>>2>>>0],p()[a>>2>>>0],0),c=p()[a+32>>2>>>0],e=b.getTimezoneOffset(),h=(new Date(b.getFullYear(),6,1)).getTimezoneOffset(),g=(new Date(b.getFullYear(),0,1)).getTimezoneOffset(),k=Math.min(g,h);0>c?p()[a+32>>2>>>0]=Number(h!=g&&k==e):0<c!=(k==e)&&(h=Math.max(g,h),b.setTime(b.getTime()+6E4*((0<c?k:h)-e)));p()[a+24>>2>>>\n0]=b.getDay();c=(Z(b.getFullYear())?rb:sb)[b.getMonth()]+b.getDate()-1|0;p()[a+28>>2>>>0]=c;p()[a>>2>>>0]=b.getSeconds();p()[a+4>>2>>>0]=b.getMinutes();p()[a+8>>2>>>0]=b.getHours();p()[a+12>>2>>>0]=b.getDate();p()[a+16>>2>>>0]=b.getMonth();p()[a+20>>2>>>0]=b.getYear();a=b.getTime()/1E3;return Wb((T=a,1<=+Math.abs(T)?0<T?+Math.floor(T/4294967296)>>>0:~~+Math.ceil((T-+(~~T>>>0))/4294967296)>>>0:0)),a>>>0},r:tb,s:ub,y:function(a,b,c){function e(v){return(v=v.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?\nv[1]:\"GMT\"}a>>>=0;b>>>=0;c>>>=0;var h=(new Date).getFullYear(),g=new Date(h,0,1),k=new Date(h,6,1);h=g.getTimezoneOffset();var t=k.getTimezoneOffset(),C=Math.max(h,t);r()[a>>2>>>0]=60*C;p()[b>>2>>>0]=Number(h!=t);a=e(g);b=e(k);a=wb(a);b=wb(b);t<h?(r()[c>>2>>>0]=a,r()[c+4>>2>>>0]=b):(r()[c>>2>>>0]=b,r()[c+4>>2>>>0]=a)},c:()=>{K(\"\")},k:function(){},i:function(){return Date.now()},o:()=>{wa+=1;throw\"unwind\";},A:function(){return 4294901760},e:()=>performance.timeOrigin+performance.now(),f:function(){return B?\nrequire(\"os\").cpus().length:navigator.hardwareConcurrency},K:function(a,b,c,e){V.vb=b>>>0;Bb.length=c;b=e>>>0>>3;for(e=0;e<c;e++)Bb[e]=ea()[b+e>>>0];return Ub[a].apply(null,Bb)},x:function(a){a>>>=0;var b=n().length;if(a<=b||4294901760<a)return!1;for(var c=1;4>=c;c*=2){var e=b*(1+.2/c);e=Math.min(e,a+100663296);var h=Math;e=Math.max(a,e);a:{h=h.min.call(h,4294901760,e+(65536-e%65536)%65536)-d.buffer.byteLength+65535>>>16;try{d.grow(h);m();var g=1;break a}catch(k){}g=void 0}if(g)return!0}return!1},\nO:Fb,P:Gb,H:Na,g:Hb,m:Lb,w:Mb,l:Ob,a:d||w.wasmMemory,G:Tb,d:function(a,b,c,e){return Tb(a>>>0,b>>>0,c>>>0,e>>>0)}};(function(){function a(c,e){c=c.exports;L=c=Yb(c);V.Za.push(L.ya);sa=L.za;ua.unshift(L.V);ra=e;za();return c}var b={a:Xb};ya();if(w.instantiateWasm)try{return w.instantiateWasm(b,a)}catch(c){I(\"Module.instantiateWasm callback failed with error: \"+c),x(c)}Ea(b,function(c){a(c.instance,c.module)}).catch(x);return{}})();w._OrtInit=(a,b)=>(w._OrtInit=L.W)(a,b);\nw._OrtGetLastError=(a,b)=>(w._OrtGetLastError=L.X)(a,b);w._OrtCreateSessionOptions=(a,b,c,e,h,g,k,t,C,v)=>(w._OrtCreateSessionOptions=L.Y)(a,b,c,e,h,g,k,t,C,v);w._OrtAppendExecutionProvider=(a,b)=>(w._OrtAppendExecutionProvider=L.Z)(a,b);w._OrtAddFreeDimensionOverride=(a,b,c)=>(w._OrtAddFreeDimensionOverride=L._)(a,b,c);w._OrtAddSessionConfigEntry=(a,b,c)=>(w._OrtAddSessionConfigEntry=L.$)(a,b,c);w._OrtReleaseSessionOptions=a=>(w._OrtReleaseSessionOptions=L.aa)(a);\nw._OrtCreateSession=(a,b,c)=>(w._OrtCreateSession=L.ba)(a,b,c);w._OrtReleaseSession=a=>(w._OrtReleaseSession=L.ca)(a);w._OrtGetInputOutputCount=(a,b,c)=>(w._OrtGetInputOutputCount=L.da)(a,b,c);w._OrtGetInputName=(a,b)=>(w._OrtGetInputName=L.ea)(a,b);w._OrtGetOutputName=(a,b)=>(w._OrtGetOutputName=L.fa)(a,b);w._OrtFree=a=>(w._OrtFree=L.ga)(a);w._OrtCreateTensor=(a,b,c,e,h,g)=>(w._OrtCreateTensor=L.ha)(a,b,c,e,h,g);w._OrtGetTensorData=(a,b,c,e,h)=>(w._OrtGetTensorData=L.ia)(a,b,c,e,h);\nw._OrtReleaseTensor=a=>(w._OrtReleaseTensor=L.ja)(a);w._OrtCreateRunOptions=(a,b,c,e)=>(w._OrtCreateRunOptions=L.ka)(a,b,c,e);w._OrtAddRunConfigEntry=(a,b,c)=>(w._OrtAddRunConfigEntry=L.la)(a,b,c);w._OrtReleaseRunOptions=a=>(w._OrtReleaseRunOptions=L.ma)(a);w._OrtCreateBinding=a=>(w._OrtCreateBinding=L.na)(a);w._OrtBindInput=(a,b,c)=>(w._OrtBindInput=L.oa)(a,b,c);w._OrtBindOutput=(a,b,c,e)=>(w._OrtBindOutput=L.pa)(a,b,c,e);w._OrtClearBoundOutputs=a=>(w._OrtClearBoundOutputs=L.qa)(a);\nw._OrtReleaseBinding=a=>(w._OrtReleaseBinding=L.ra)(a);w._OrtRunWithBinding=(a,b,c,e,h)=>(w._OrtRunWithBinding=L.sa)(a,b,c,e,h);w._OrtRun=(a,b,c,e,h,g,k,t)=>(w._OrtRun=L.ta)(a,b,c,e,h,g,k,t);w._OrtEndProfiling=a=>(w._OrtEndProfiling=L.ua)(a);var X=w._pthread_self=()=>(X=w._pthread_self=L.va)(),vb=w._malloc=a=>(vb=w._malloc=L.wa)(a);w._free=a=>(w._free=L.xa)(a);w.__emscripten_tls_init=()=>(w.__emscripten_tls_init=L.ya)();\nvar Vb=w.__emscripten_thread_init=(a,b,c,e,h,g)=>(Vb=w.__emscripten_thread_init=L.Aa)(a,b,c,e,h,g);w.__emscripten_thread_crashed=()=>(w.__emscripten_thread_crashed=L.Ba)();var Ab=(a,b,c,e)=>(Ab=L.Ca)(a,b,c,e),Oa=a=>(Oa=L.Da)(a),Ta=w.__emscripten_thread_exit=a=>(Ta=w.__emscripten_thread_exit=L.Ea)(a),qb=w.__emscripten_check_mailbox=()=>(qb=w.__emscripten_check_mailbox=L.Fa)(),Wb=a=>(Wb=L.Ga)(a),Qa=(a,b)=>(Qa=L.Ha)(a,b),xb=()=>(xb=L.Ia)(),Ra=a=>(Ra=L.Ja)(a),zb=a=>(zb=L.Ka)(a);\nfunction Yb(a){a=Object.assign({},a);var b=e=>()=>e()>>>0,c=e=>h=>e(h)>>>0;a.__errno_location=b(a.__errno_location);a.pthread_self=b(a.pthread_self);a.malloc=c(a.malloc);a.stackSave=b(a.stackSave);a.stackAlloc=c(a.stackAlloc);return a}w.keepRuntimeAlive=P;w.wasmMemory=d;w.stackAlloc=zb;w.stackSave=xb;w.stackRestore=Ra;w.UTF8ToString=Ka;w.stringToUTF8=cb;w.lengthBytesUTF8=ab;w.ExitStatus=U;w.PThread=V;var Zb;R=function $b(){Zb||ac();Zb||(R=$b)};\nfunction ac(){function a(){if(!Zb&&(Zb=!0,w.calledRun=!0,!M)){D||Pa(ua);ha(w);if(w.onRuntimeInitialized)w.onRuntimeInitialized();if(!D){if(w.postRun)for(\"function\"==typeof w.postRun&&(w.postRun=[w.postRun]);w.postRun.length;){var b=w.postRun.shift();va.unshift(b)}Pa(va)}}}if(!(0<Q))if(D)ha(w),D||Pa(ua),startWorker(w);else{if(w.preRun)for(\"function\"==typeof w.preRun&&(w.preRun=[w.preRun]);w.preRun.length;)ta.unshift(w.preRun.shift());Pa(ta);0<Q||(w.setStatus?(w.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){w.setStatus(\"\")},\n1);a()},1)):a())}}if(w.preInit)for(\"function\"==typeof w.preInit&&(w.preInit=[w.preInit]);0<w.preInit.length;)w.preInit.pop()();ac();\n\n\n  return moduleArg.ready\n}\n\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = ortWasmThreaded;\nelse if (typeof define === 'function' && define['amd'])\n  define([], () => ortWasmThreaded);\n", "\"use strict\";var Module={},ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require(\"worker_threads\"),parentPort=nodeWorkerThreads.parentPort;parentPort.on(\"message\",e=>onmessage({data:e}));var fs=require(\"fs\");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>(0,eval)(fs.readFileSync(e,\"utf8\")+\"//# sourceURL=\"+e),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(\" \");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(\" \");postMessage({cmd:\"alert\",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason??e};function handleMessage(e){try{if(e.data.cmd===\"load\"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:\"loaded\"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:\"callHandler\",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob==\"string\")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd===\"run\"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!=\"unwind\")throw a}}else e.data.cmd===\"cancel\"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target===\"setimmediate\"||(e.data.cmd===\"checkMailbox\"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(\"worker.js received unknown command \"+e.data.cmd),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed&&Module.__emscripten_thread_crashed(),a}}self.onmessage=handleMessage;\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport * as path from 'node:path';\nimport {Env} from 'onnxruntime-common';\n\nimport {OrtWasmModule} from './binding/ort-wasm';\nimport {OrtWasmThreadedModule} from './binding/ort-wasm-threaded';\n\n/* eslint-disable @typescript-eslint/no-require-imports */\nlet ortWasmFactory: EmscriptenModuleFactory<OrtWasmModule>;\n\nif (!BUILD_DEFS.DISABLE_TRAINING) {\n  ortWasmFactory = require('./binding/ort-training-wasm-simd.js');\n} else {\n  ortWasmFactory =\n      BUILD_DEFS.DISABLE_WEBGPU ? require('./binding/ort-wasm.js') : require('./binding/ort-wasm-simd.jsep.js');\n}\n\nconst ortWasmFactoryThreaded: EmscriptenModuleFactory<OrtWasmModule> = !BUILD_DEFS.DISABLE_WASM_THREAD ?\n    (BUILD_DEFS.DISABLE_WEBGPU ? require('./binding/ort-wasm-threaded.js') :\n                                 require('./binding/ort-wasm-simd-threaded.jsep.js')) :\n    ortWasmFactory;\n/* eslint-enable @typescript-eslint/no-require-imports */\n\nlet wasm: OrtWasmModule|undefined;\nlet initialized = false;\nlet initializing = false;\nlet aborted = false;\n\nconst isMultiThreadSupported = (): boolean => {\n  try {\n    // If 'SharedArrayBuffer' is not available, WebAssembly threads will not work.\n    if (typeof SharedArrayBuffer === 'undefined') {\n      return false;\n    }\n\n    // Test for transferability of SABs (for browsers. needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    if (typeof MessageChannel !== 'undefined') {\n      new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    }\n\n    // Test for WebAssembly threads capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing threaded instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isSimdSupported = (): boolean => {\n  try {\n    // Test for WebAssembly SIMD capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing SIMD instructions.\n\n    // The binary data is generated from the following code by wat2wasm:\n    //\n    // (module\n    //   (type $t0 (func))\n    //   (func $f0 (type $t0)\n    //     (drop\n    //       (i32x4.dot_i16x8_s\n    //         (i8x16.splat\n    //           (i32.const 0))\n    //         (v128.const i32x4 0x00000000 0x00000000 0x00000000 0x00000000)))))\n\n    return WebAssembly.validate(new Uint8Array([\n      0,   97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 30, 1,   28,  0, 65, 0,\n      253, 15, 253, 12,  0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0,  0,  253, 186, 1, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst getWasmFileName = (useSimd: boolean, useThreads: boolean) => {\n  if (useSimd) {\n    if (!BUILD_DEFS.DISABLE_TRAINING) {\n      return 'ort-training-wasm-simd.wasm';\n    }\n    return useThreads ? 'ort-wasm-simd-threaded.wasm' : 'ort-wasm-simd.wasm';\n  } else {\n    return useThreads ? 'ort-wasm-threaded.wasm' : 'ort-wasm.wasm';\n  }\n};\n\nexport const initializeWebAssembly = async(flags: Env.WebAssemblyFlags): Promise<void> => {\n  if (initialized) {\n    return Promise.resolve();\n  }\n  if (initializing) {\n    throw new Error('multiple calls to \\'initializeWebAssembly()\\' detected.');\n  }\n  if (aborted) {\n    throw new Error('previous call to \\'initializeWebAssembly()\\' failed.');\n  }\n\n  initializing = true;\n\n  // wasm flags are already initialized\n  const timeout = flags.initTimeout!;\n  const numThreads = flags.numThreads!;\n  const simd = flags.simd!;\n\n  const useThreads = numThreads > 1 && isMultiThreadSupported();\n  const useSimd = simd && isSimdSupported();\n\n  const wasmPaths = flags.wasmPaths;\n  const wasmPrefixOverride = typeof wasmPaths === 'string' ? wasmPaths : undefined;\n  const wasmFileName = getWasmFileName(useSimd, useThreads);\n  const wasmPathOverride = typeof wasmPaths === 'object' ? wasmPaths[wasmFileName] : undefined;\n\n  let isTimeout = false;\n\n  const tasks: Array<Promise<void>> = [];\n\n  // promise for timeout\n  if (timeout > 0) {\n    tasks.push(new Promise((resolve) => {\n      setTimeout(() => {\n        isTimeout = true;\n        resolve();\n      }, timeout);\n    }));\n  }\n\n  // promise for module initialization\n  tasks.push(new Promise((resolve, reject) => {\n    const factory = useThreads ? ortWasmFactoryThreaded : ortWasmFactory;\n    const config: Partial<OrtWasmModule> = {\n      locateFile: (fileName: string, scriptDirectory: string) => {\n        if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads && fileName.endsWith('.worker.js') &&\n            typeof Blob !== 'undefined') {\n          return URL.createObjectURL(new Blob(\n              [\n                // This require() function is handled by esbuild plugin to load file content as string.\n                // eslint-disable-next-line @typescript-eslint/no-require-imports\n                require('./binding/ort-wasm-threaded.worker.js')\n              ],\n              {type: 'text/javascript'}));\n        }\n\n        if (fileName.endsWith('.wasm')) {\n          if (wasmPathOverride) {\n            return wasmPathOverride;\n          }\n\n          const prefix = wasmPrefixOverride ?? scriptDirectory;\n\n          if (!BUILD_DEFS.DISABLE_WEBGPU) {\n            if (wasmFileName === 'ort-wasm-simd.wasm') {\n              return prefix + 'ort-wasm-simd.jsep.wasm';\n            } else if (wasmFileName === 'ort-wasm-simd-threaded.wasm') {\n              return prefix + 'ort-wasm-simd-threaded.jsep.wasm';\n            }\n          }\n\n          return prefix + wasmFileName;\n        }\n\n        return scriptDirectory + fileName;\n      }\n    };\n\n    if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads) {\n      if (typeof Blob === 'undefined') {\n        config.mainScriptUrlOrBlob = path.join(__dirname, 'ort-wasm-threaded.js');\n      } else {\n        const scriptSourceCode = `var ortWasmThreaded=${factory.toString()};`;\n        config.mainScriptUrlOrBlob = new Blob([scriptSourceCode], {type: 'text/javascript'});\n      }\n    }\n\n    factory(config).then(\n        // wasm module initialized successfully\n        module => {\n          initializing = false;\n          initialized = true;\n          wasm = module;\n          resolve();\n        },\n        // wasm module failed to initialize\n        (what) => {\n          initializing = false;\n          aborted = true;\n          reject(what);\n        });\n  }));\n\n  await Promise.race(tasks);\n\n  if (isTimeout) {\n    throw new Error(`WebAssembly backend initializing failed due to timeout: ${timeout}ms`);\n  }\n};\n\nexport const getInstance = (): OrtWasmModule => {\n  if (initialized && wasm) {\n    return wasm;\n  }\n\n  throw new Error('WebAssembly is not initialized yet.');\n};\n\nexport const dispose = (): void => {\n  if (initialized && !initializing && !aborted) {\n    initializing = true;\n\n    (wasm as OrtWasmThreadedModule).PThread?.terminateAllThreads();\n    wasm = undefined;\n\n    initializing = false;\n    initialized = false;\n    aborted = true;\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getInstance} from './wasm-factory';\n\nexport const allocWasmString = (data: string, allocs: number[]): number => {\n  const wasm = getInstance();\n\n  const dataLength = wasm.lengthBytesUTF8(data) + 1;\n  const dataOffset = wasm._malloc(dataLength);\n  wasm.stringToUTF8(data, dataOffset, dataLength);\n  allocs.push(dataOffset);\n\n  return dataOffset;\n};\n\ninterface ExtraOptionsHandler {\n  (name: string, value: string): void;\n}\n\nexport const iterateExtraOptions =\n    (options: Record<string, unknown>, prefix: string, seen: WeakSet<Record<string, unknown>>,\n     handler: ExtraOptionsHandler): void => {\n      if (typeof options == 'object' && options !== null) {\n        if (seen.has(options)) {\n          throw new Error('Circular reference in options');\n        } else {\n          seen.add(options);\n        }\n      }\n\n      Object.entries(options).forEach(([key, value]) => {\n        const name = (prefix) ? prefix + key : key;\n        if (typeof value === 'object') {\n          iterateExtraOptions(value as Record<string, unknown>, name + '.', seen, handler);\n        } else if (typeof value === 'string' || typeof value === 'number') {\n          handler(name, value.toString());\n        } else if (typeof value === 'boolean') {\n          handler(name, (value) ? '1' : '0');\n        } else {\n          throw new Error(`Can't handle extra config type: ${typeof value}`);\n        }\n      });\n    };\n\n/**\n * check web assembly API's last error and throw error if any error occurred.\n * @param message a message used when an error occurred.\n */\nexport const checkLastError = (message: string): void => {\n  const wasm = getInstance();\n\n  const stack = wasm.stackSave();\n  try {\n    const paramsOffset = wasm.stackAlloc(8);\n    wasm._OrtGetLastError(paramsOffset, paramsOffset + 4);\n    const errorCode = wasm.HEAP32[paramsOffset / 4];\n    const errorMessagePointer = wasm.HEAPU32[paramsOffset / 4 + 1];\n    const errorMessage = errorMessagePointer ? wasm.UTF8ToString(errorMessagePointer) : '';\n    throw new Error(`${message} ERROR_CODE: ${errorCode}, ERROR_MESSAGE: ${errorMessage}`);\n  } finally {\n    wasm.stackRestore(stack);\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {getInstance} from './wasm-factory';\nimport {allocWasmString, checkLastError, iterateExtraOptions} from './wasm-utils';\n\nexport const setRunOptions = (options: InferenceSession.RunOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let runOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const runOptions: InferenceSession.RunOptions = options || {};\n\n  try {\n    if (options?.logSeverityLevel === undefined) {\n      runOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      runOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.terminate === undefined) {\n      runOptions.terminate = false;\n    }\n\n    let tagDataOffset = 0;\n    if (options?.tag !== undefined) {\n      tagDataOffset = allocWasmString(options.tag, allocs);\n    }\n\n    runOptionsHandle = wasm._OrtCreateRunOptions(\n        runOptions.logSeverityLevel!, runOptions.logVerbosityLevel!, !!runOptions.terminate!, tagDataOffset);\n    if (runOptionsHandle === 0) {\n      checkLastError('Can\\'t create run options.');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddRunConfigEntry(runOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          checkLastError(`Can't set a run config entry: ${key} - ${value}.`);\n        }\n      });\n    }\n\n    return [runOptionsHandle, allocs];\n  } catch (e) {\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    allocs.forEach(alloc => wasm._free(alloc));\n    throw e;\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {getInstance} from './wasm-factory';\nimport {allocWasmString, checkLastError, iterateExtraOptions} from './wasm-utils';\n\nconst getGraphOptimzationLevel = (graphOptimizationLevel: string|unknown): number => {\n  switch (graphOptimizationLevel) {\n    case 'disabled':\n      return 0;\n    case 'basic':\n      return 1;\n    case 'extended':\n      return 2;\n    case 'all':\n      return 99;\n    default:\n      throw new Error(`unsupported graph optimization level: ${graphOptimizationLevel}`);\n  }\n};\n\nconst getExecutionMode = (executionMode: 'sequential'|'parallel'): number => {\n  switch (executionMode) {\n    case 'sequential':\n      return 0;\n    case 'parallel':\n      return 1;\n    default:\n      throw new Error(`unsupported execution mode: ${executionMode}`);\n  }\n};\n\nconst appendDefaultOptions = (options: InferenceSession.SessionOptions): void => {\n  if (!options.extra) {\n    options.extra = {};\n  }\n  if (!options.extra.session) {\n    options.extra.session = {};\n  }\n  const session = options.extra.session as Record<string, string>;\n  if (!session.use_ort_model_bytes_directly) {\n    // eslint-disable-next-line camelcase\n    session.use_ort_model_bytes_directly = '1';\n  }\n\n  // if using JSEP with WebGPU, always disable memory pattern\n  if (options.executionProviders &&\n      options.executionProviders.some(ep => (typeof ep === 'string' ? ep : ep.name) === 'webgpu')) {\n    options.enableMemPattern = false;\n  }\n};\n\nconst setExecutionProviders =\n    (sessionOptionsHandle: number, executionProviders: readonly InferenceSession.ExecutionProviderConfig[],\n     allocs: number[]): void => {\n      for (const ep of executionProviders) {\n        let epName = typeof ep === 'string' ? ep : ep.name;\n\n        // check EP name\n        switch (epName) {\n          case 'xnnpack':\n            epName = 'XNNPACK';\n            break;\n          case 'webnn':\n            epName = 'WEBNN';\n            if (typeof ep !== 'string') {\n              const webnnOptions = ep as InferenceSession.WebNNExecutionProviderOption;\n              if (webnnOptions?.deviceType) {\n                const keyDataOffset = allocWasmString('deviceType', allocs);\n                const valueDataOffset = allocWasmString(webnnOptions.deviceType, allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  checkLastError(`Can't set a session config entry: 'deviceType' - ${webnnOptions.deviceType}.`);\n                }\n              }\n              if (webnnOptions?.numThreads) {\n                let numThreads = webnnOptions.numThreads;\n                // Just ignore invalid webnnOptions.numThreads.\n                if (typeof numThreads != 'number' || !Number.isInteger(numThreads) || numThreads < 0) {\n                  numThreads = 0;\n                }\n                const keyDataOffset = allocWasmString('numThreads', allocs);\n                const valueDataOffset = allocWasmString(numThreads.toString(), allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  checkLastError(`Can't set a session config entry: 'numThreads' - ${webnnOptions.numThreads}.`);\n                }\n              }\n              if (webnnOptions?.powerPreference) {\n                const keyDataOffset = allocWasmString('powerPreference', allocs);\n                const valueDataOffset = allocWasmString(webnnOptions.powerPreference, allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  checkLastError(\n                      `Can't set a session config entry: 'powerPreference' - ${webnnOptions.powerPreference}.`);\n                }\n              }\n            }\n            break;\n          case 'webgpu':\n            epName = 'JS';\n            if (typeof ep !== 'string') {\n              const webgpuOptions = ep as InferenceSession.WebGpuExecutionProviderOption;\n              if (webgpuOptions?.preferredLayout) {\n                if (webgpuOptions.preferredLayout !== 'NCHW' && webgpuOptions.preferredLayout !== 'NHWC') {\n                  throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${webgpuOptions.preferredLayout}`);\n                }\n                const keyDataOffset = allocWasmString('preferredLayout', allocs);\n                const valueDataOffset = allocWasmString(webgpuOptions.preferredLayout, allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  checkLastError(\n                      `Can't set a session config entry: 'preferredLayout' - ${webgpuOptions.preferredLayout}.`);\n                }\n              }\n            }\n            break;\n          case 'wasm':\n          case 'cpu':\n            continue;\n          default:\n            throw new Error(`not supported execution provider: ${epName}`);\n        }\n\n        const epNameDataOffset = allocWasmString(epName, allocs);\n        if (getInstance()._OrtAppendExecutionProvider(sessionOptionsHandle, epNameDataOffset) !== 0) {\n          checkLastError(`Can't append execution provider: ${epName}.`);\n        }\n      }\n    };\n\nexport const setSessionOptions = (options?: InferenceSession.SessionOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let sessionOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const sessionOptions: InferenceSession.SessionOptions = options || {};\n  appendDefaultOptions(sessionOptions);\n\n  try {\n    const graphOptimizationLevel = getGraphOptimzationLevel(sessionOptions.graphOptimizationLevel ?? 'all');\n    const executionMode = getExecutionMode(sessionOptions.executionMode ?? 'sequential');\n    const logIdDataOffset =\n        typeof sessionOptions.logId === 'string' ? allocWasmString(sessionOptions.logId, allocs) : 0;\n\n    const logSeverityLevel = sessionOptions.logSeverityLevel ?? 2;  // Default to 2 - warning\n    if (!Number.isInteger(logSeverityLevel) || logSeverityLevel < 0 || logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${logSeverityLevel}`);\n    }\n\n    const logVerbosityLevel = sessionOptions.logVerbosityLevel ?? 0;  // Default to 0 - verbose\n    if (!Number.isInteger(logVerbosityLevel) || logVerbosityLevel < 0 || logVerbosityLevel > 4) {\n      throw new Error(`log verbosity level is not valid: ${logVerbosityLevel}`);\n    }\n\n    const optimizedModelFilePathOffset = typeof sessionOptions.optimizedModelFilePath === 'string' ?\n        allocWasmString(sessionOptions.optimizedModelFilePath, allocs) :\n        0;\n\n    sessionOptionsHandle = wasm._OrtCreateSessionOptions(\n        graphOptimizationLevel, !!sessionOptions.enableCpuMemArena, !!sessionOptions.enableMemPattern, executionMode,\n        !!sessionOptions.enableProfiling, 0, logIdDataOffset, logSeverityLevel, logVerbosityLevel,\n        optimizedModelFilePathOffset);\n    if (sessionOptionsHandle === 0) {\n      checkLastError('Can\\'t create session options.');\n    }\n\n    if (sessionOptions.executionProviders) {\n      setExecutionProviders(sessionOptionsHandle, sessionOptions.executionProviders, allocs);\n    }\n\n    if (sessionOptions.freeDimensionOverrides) {\n      for (const [name, value] of Object.entries(sessionOptions.freeDimensionOverrides)) {\n        if (typeof name !== 'string') {\n          throw new Error(`free dimension override name must be a string: ${name}`);\n        }\n        if (typeof value !== 'number' || !Number.isInteger(value) || value < 0) {\n          throw new Error(`free dimension override value must be a non-negative integer: ${value}`);\n        }\n        const nameOffset = allocWasmString(name, allocs);\n        if (wasm._OrtAddFreeDimensionOverride(sessionOptionsHandle, nameOffset, value) !== 0) {\n          checkLastError(`Can't set a free dimension override: ${name} - ${value}.`);\n        }\n      }\n    }\n\n    if (sessionOptions.extra !== undefined) {\n      iterateExtraOptions(sessionOptions.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          checkLastError(`Can't set a session config entry: ${key} - ${value}.`);\n        }\n      });\n    }\n\n    return [sessionOptionsHandle, allocs];\n  } catch (e) {\n    if (sessionOptionsHandle !== 0) {\n      wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n    }\n    allocs.forEach(alloc => wasm._free(alloc));\n    throw e;\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from 'onnxruntime-common';\n\n// This file includes common definitions. They do NOT have dependency on the WebAssembly instance.\n\n/**\n * Copied from ONNX definition. Use this to drop dependency 'onnx_proto' to decrease compiled .js file size.\n */\nexport const enum DataType {\n  undefined = 0,\n  float = 1,\n  uint8 = 2,\n  int8 = 3,\n  uint16 = 4,\n  int16 = 5,\n  int32 = 6,\n  int64 = 7,\n  string = 8,\n  bool = 9,\n  float16 = 10,\n  double = 11,\n  uint32 = 12,\n  uint64 = 13,\n  complex64 = 14,\n  complex128 = 15,\n  bfloat16 = 16\n}\n\n/**\n * Map string tensor data to enum value\n */\nexport const tensorDataTypeStringToEnum = (type: string): DataType => {\n  switch (type) {\n    case 'int8':\n      return DataType.int8;\n    case 'uint8':\n      return DataType.uint8;\n    case 'bool':\n      return DataType.bool;\n    case 'int16':\n      return DataType.int16;\n    case 'uint16':\n      return DataType.uint16;\n    case 'int32':\n      return DataType.int32;\n    case 'uint32':\n      return DataType.uint32;\n    case 'float16':\n      return DataType.float16;\n    case 'float32':\n      return DataType.float;\n    case 'float64':\n      return DataType.double;\n    case 'string':\n      return DataType.string;\n    case 'int64':\n      return DataType.int64;\n    case 'uint64':\n      return DataType.uint64;\n\n    default:\n      throw new Error(`unsupported data type: ${type}`);\n  }\n};\n\n/**\n * Map enum value to string tensor data\n */\nexport const tensorDataTypeEnumToString = (typeProto: DataType): Tensor.Type => {\n  switch (typeProto) {\n    case DataType.int8:\n      return 'int8';\n    case DataType.uint8:\n      return 'uint8';\n    case DataType.bool:\n      return 'bool';\n    case DataType.int16:\n      return 'int16';\n    case DataType.uint16:\n      return 'uint16';\n    case DataType.int32:\n      return 'int32';\n    case DataType.uint32:\n      return 'uint32';\n    case DataType.float16:\n      return 'float16';\n    case DataType.float:\n      return 'float32';\n    case DataType.double:\n      return 'float64';\n    case DataType.string:\n      return 'string';\n    case DataType.int64:\n      return 'int64';\n    case DataType.uint64:\n      return 'uint64';\n\n    default:\n      throw new Error(`unsupported data type: ${typeProto}`);\n  }\n};\n\n/**\n * get tensor element size in bytes by the given data type\n * @returns size in integer or undefined if the data type is not supported\n */\nexport const getTensorElementSize = (dateType: number): number|\n    undefined => [undefined, 4, 1, 1, 2, 2, 4, 8, undefined, 1, 2, 8, 4, 8, undefined, undefined, undefined][dateType];\n\n/**\n * get typed array constructor by the given tensor type\n */\nexport const tensorTypeToTypedArrayConstructor = (type: Tensor.Type): Float32ArrayConstructor|Uint8ArrayConstructor|\n    Int8ArrayConstructor|Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|\n    Uint8ArrayConstructor|Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor => {\n      switch (type) {\n        case 'float16':\n          return Uint16Array;\n        case 'float32':\n          return Float32Array;\n        case 'uint8':\n          return Uint8Array;\n        case 'int8':\n          return Int8Array;\n        case 'uint16':\n          return Uint16Array;\n        case 'int16':\n          return Int16Array;\n        case 'int32':\n          return Int32Array;\n        case 'bool':\n          return Uint8Array;\n        case 'float64':\n          return Float64Array;\n        case 'uint32':\n          return Uint32Array;\n        case 'int64':\n          return BigInt64Array;\n        case 'uint64':\n          return BigUint64Array;\n        default:\n          throw new Error(`unsupported type: ${type}`);\n      }\n    };\n\n/**\n * Map string log level to integer value\n */\nexport const logLevelStringToEnum = (logLevel?: 'verbose'|'info'|'warning'|'error'|'fatal'): number => {\n  switch (logLevel) {\n    case 'verbose':\n      return 0;\n    case 'info':\n      return 1;\n    case 'warning':\n      return 2;\n    case 'error':\n      return 3;\n    case 'fatal':\n      return 4;\n    default:\n      throw new Error(`unsupported logging level: ${logLevel}`);\n  }\n};\n\n/**\n * Check whether the given tensor type is supported by GPU buffer\n */\nexport const isGpuBufferSupportedType = (type: Tensor.Type): type is Tensor.GpuBufferDataTypes => type === 'float32' ||\n    type === 'int32' || type === 'int64' || type === 'bool' || type === 'float16' || type === 'uint32';\n\n/**\n * Map string data location to integer value\n */\nexport const dataLocationStringToEnum = (location: Tensor.DataLocation): number => {\n  switch (location) {\n    case 'none':\n      return 0;\n    case 'cpu':\n      return 1;\n    case 'cpu-pinned':\n      return 2;\n    case 'texture':\n      return 3;\n    case 'gpu-buffer':\n      return 4;\n    default:\n      throw new Error(`unsupported data location: ${location}`);\n  }\n};\n\n/**\n * Map integer data location to string value\n */\nexport const dataLocationEnumToString = (location: number): Tensor.DataLocation|undefined =>\n    (['none', 'cpu', 'cpu-pinned', 'texture', 'gpu-buffer'] as const)[location];\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env, InferenceSession, Tensor} from 'onnxruntime-common';\n\nimport {SerializableInternalBuffer, SerializableSessionMetadata, SerializableTensorMetadata, TensorMetadata} from './proxy-messages';\nimport {setRunOptions} from './run-options';\nimport {setSessionOptions} from './session-options';\nimport {dataLocationStringToEnum, getTensorElementSize, isGpuBufferSupportedType, logLevelStringToEnum, tensorDataTypeEnumToString, tensorDataTypeStringToEnum, tensorTypeToTypedArrayConstructor} from './wasm-common';\nimport {getInstance} from './wasm-factory';\nimport {allocWasmString, checkLastError} from './wasm-utils';\n\n// #region Initializations\n\n/**\n * There are 4 different \"initialization\" steps for ORT. They happen in different places and different time.\n *\n * 1. JavaScript initialization for onnxruntime-common and onnxruntime-web.\n *    This is the first initialization step. In this step, onnxruntime-web calls onnxruntime-common's registerBackend()\n * function multiple times to register all the available backends. The backend registration is very fast. It only\n * registers the backend name with the uninitialized backend object. No heavy initialization is done in this step.\n *    Refer to web/lib/index.ts for the backend registration.\n *\n * 2. WebAssembly artifact initialization.\n *    This happens when any registered wasm backend is used for the first time (ie. `ort.InferenceSession.create()` or\n * `ort.TrainingSession.create()` is called). In this step, onnxruntime-web does the followings:\n *     - create a proxy worker and make sure the proxy worker is ready to receive messages, if proxy is enabled.\n *     - perform feature detection, locate correct WebAssembly artifact path and call the Emscripten generated\n * JavaScript code to initialize the WebAssembly runtime.\n *         - if proxy is enabled, this step happens in the proxy worker using message 'init-wasm'.\n *         - downloading the 'ort-wasm{...}.wasm' file is done in this step.\n *         - if multi-thread is enabled, one or more webworker will be created to initialize the PThread threadpool.\n *\n * 3. ORT environment initialization.\n *    This happens after step 2. In this step, onnxruntime-web performs ONNX Runtime environment initialization.\n * Function `_OrtInit()` is called in this step.\n *     - if proxy is enabled, this step happens in the proxy worker using message 'init-ort'.\n *     - logging level (ort.env.logLevel) and thread number (ort.env.wasm.numThreads) are set in this step.\n *\n * 4. Session initialization.\n *    This happens when `ort.InferenceSession.create()` or `ort.TrainingSession.create()` is called. Unlike the first 3\n * steps (they only called once), this step will be done for each session. In this step, onnxruntime-web does the\n * followings:\n *    If the parameter is a URL:\n *    - download the model data from the URL.\n *    - copy the model data to the WASM heap. (proxy: 'copy-from')\n *    - dereference the model buffer. This step allows the original ArrayBuffer to be garbage collected.\n *    - call `_OrtCreateSession()` to create the session. (proxy: 'create')\n *\n *    If the parameter is a Uint8Array object:\n *    - copy the model data to the WASM heap. (proxy: 'copy-from')\n *    - call `_OrtCreateSession()` to create the session. (proxy: 'create')\n *\n *\n */\n\n/**\n * initialize ORT environment.\n *\n * @param numThreads SetGlobalIntraOpNumThreads(numThreads)\n * @param loggingLevel CreateEnv(static_cast<OrtLoggingLevel>(logging_level))\n */\nconst initOrt = (numThreads: number, loggingLevel: number): void => {\n  const errorCode = getInstance()._OrtInit(numThreads, loggingLevel);\n  if (errorCode !== 0) {\n    checkLastError('Can\\'t initialize onnxruntime.');\n  }\n};\n\n/**\n * intialize runtime environment.\n * @param env passed in the environment config object.\n */\nexport const initRuntime = async(env: Env): Promise<void> => {\n  // init ORT\n  initOrt(env.wasm.numThreads!, logLevelStringToEnum(env.logLevel));\n};\n\n/**\n * perform EP specific initialization.\n *\n * @param env\n * @param epName\n */\nexport const initEp = async(env: Env, epName: string): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WEBGPU && epName === 'webgpu') {\n    // perform WebGPU availability check\n    if (typeof navigator === 'undefined' || !navigator.gpu) {\n      throw new Error('WebGPU is not supported in current environment');\n    }\n    const adapter = await navigator.gpu.requestAdapter();\n    if (!adapter) {\n      throw new Error(\n          'Failed to get GPU adapter. You may need to enable flag \"--enable-unsafe-webgpu\" if you are using Chrome.');\n    }\n\n    if (!env.wasm.simd) {\n      throw new Error(\n          'Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP');\n    }\n\n    // init JSEP if available\n\n    // eslint-disable-next-line @typescript-eslint/no-require-imports, @typescript-eslint/no-var-requires\n    const initJsep = require('./jsep/init').init;\n    await initJsep(getInstance(), env, adapter);\n  }\n};\n\n// #endregion Initializations\n\n/**\n * valid data locations for input/output tensors.\n */\ntype SupportedTensorDataLocationForInputOutput = 'cpu'|'cpu-pinned'|'gpu-buffer';\n\ntype IOBindingState = {\n  /**\n   * the handle of IO binding.\n   */\n  readonly handle: number;\n\n  /**\n   * the preferred location for each output tensor.\n   *\n   * value is one of 'cpu', 'cpu-pinned', 'gpu-buffer'.\n   */\n  readonly outputPreferredLocations: readonly SupportedTensorDataLocationForInputOutput[];\n\n  /**\n   * enum value of the preferred location for each output tensor.\n   */\n  readonly outputPreferredLocationsEncoded: readonly number[];\n};\n\n/**\n *  tuple elements are: InferenceSession ID; inputNamesUTF8Encoded; outputNamesUTF8Encoded; bindingState\n */\ntype SessionMetadata = [\n  inferenceSessionId: number, inputNamesUTF8Encoded: number[], outputNamesUTF8Encoded: number[],\n  bindingState: IOBindingState|null\n];\n\nconst activeSessions = new Map<number, SessionMetadata>();\n\n/**\n * get the input/output count of the session.\n * @param sessionHandle the handle representing the session. should be non-zero.\n * @returns a tuple including 2 numbers, representing the input count and output count.\n */\nconst getSessionInputOutputCount = (sessionHandle: number): [number, number] => {\n  const wasm = getInstance();\n  const stack = wasm.stackSave();\n  try {\n    const dataOffset = wasm.stackAlloc(8);\n    const errorCode = wasm._OrtGetInputOutputCount(sessionHandle, dataOffset, dataOffset + 4);\n    if (errorCode !== 0) {\n      checkLastError('Can\\'t get session input/output count.');\n    }\n    return [wasm.HEAP32[dataOffset / 4], wasm.HEAP32[dataOffset / 4 + 1]];\n  } finally {\n    wasm.stackRestore(stack);\n  }\n};\n\n/**\n * allocate the memory and memcpy the external buffer.\n *\n * @param model - the external buffer containing the model data. Must not be the same buffer as the WASM heap.\n * @returns a 2-elements tuple - the pointer and size of the allocated buffer\n */\nexport const copyFromExternalBuffer = (model: Uint8Array): [number, number] => {\n  const wasm = getInstance();\n  const modelDataOffset = wasm._malloc(model.byteLength);\n  if (modelDataOffset === 0) {\n    throw new Error(`Can't create a session. failed to allocate a buffer of size ${model.byteLength}.`);\n  }\n  wasm.HEAPU8.set(model, modelDataOffset);\n  return [modelDataOffset, model.byteLength];\n};\n\n/**\n * create an inference session from a model data buffer.\n *\n * @param modelData - either a Uint8Array object representing the model data, or a 2-elements tuple containing the\n *     pointer and size of the model data buffer.\n * @param options an optional session options object.\n * @returns a 3-elements tuple containing [session handle, input names, output names]\n */\nexport const createSession =\n    (modelData: Uint8Array|SerializableInternalBuffer,\n     options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      let modelDataOffset: number, modelDataLength: number;\n      const wasm = getInstance();\n\n      if (Array.isArray(modelData)) {\n        // if model data is an array, it must be a 2-elements tuple containing the pointer and size of the model data\n        [modelDataOffset, modelDataLength] = modelData;\n      } else if (modelData.buffer === wasm.HEAPU8.buffer) {\n        // if model data uses the same buffer as the WASM heap, we don't need to copy it.\n        [modelDataOffset, modelDataLength] = [modelData.byteOffset, modelData.byteLength];\n      } else {\n        // otherwise, copy the model data to the WASM heap.\n        [modelDataOffset, modelDataLength] = copyFromExternalBuffer(modelData);\n      }\n\n      let sessionHandle = 0;\n      let sessionOptionsHandle = 0;\n      let ioBindingHandle = 0;\n      let allocs: number[] = [];\n      const inputNamesUTF8Encoded = [];\n      const outputNamesUTF8Encoded = [];\n\n      try {\n        [sessionOptionsHandle, allocs] = setSessionOptions(options);\n\n        sessionHandle = wasm._OrtCreateSession(modelDataOffset, modelDataLength, sessionOptionsHandle);\n        if (sessionHandle === 0) {\n          checkLastError('Can\\'t create a session.');\n        }\n\n        const [inputCount, outputCount] = getSessionInputOutputCount(sessionHandle);\n\n        const inputNames = [];\n        const outputNames = [];\n        const outputPreferredLocations: SupportedTensorDataLocationForInputOutput[] = [];\n        for (let i = 0; i < inputCount; i++) {\n          const name = wasm._OrtGetInputName(sessionHandle, i);\n          if (name === 0) {\n            checkLastError('Can\\'t get an input name.');\n          }\n          inputNamesUTF8Encoded.push(name);\n          inputNames.push(wasm.UTF8ToString(name));\n        }\n        for (let i = 0; i < outputCount; i++) {\n          const name = wasm._OrtGetOutputName(sessionHandle, i);\n          if (name === 0) {\n            checkLastError('Can\\'t get an output name.');\n          }\n          outputNamesUTF8Encoded.push(name);\n          const nameString = wasm.UTF8ToString(name);\n          outputNames.push(nameString);\n\n          if (!BUILD_DEFS.DISABLE_WEBGPU) {\n            const location = typeof options?.preferredOutputLocation === 'string' ?\n                options.preferredOutputLocation :\n                options?.preferredOutputLocation?.[nameString] ?? 'cpu';\n            if (location !== 'cpu' && location !== 'cpu-pinned' && location !== 'gpu-buffer') {\n              throw new Error(`Not supported preferred output location: ${location}.`);\n            }\n            outputPreferredLocations.push(location);\n          }\n        }\n\n        // use IO binding only when at least one output is preffered to be on GPU.\n        let bindingState: IOBindingState|null = null;\n        if (!BUILD_DEFS.DISABLE_WEBGPU && outputPreferredLocations.some(l => l === 'gpu-buffer')) {\n          ioBindingHandle = wasm._OrtCreateBinding(sessionHandle);\n          if (ioBindingHandle === 0) {\n            checkLastError('Can\\'t create IO binding.');\n          }\n\n          bindingState = {\n            handle: ioBindingHandle,\n            outputPreferredLocations,\n            outputPreferredLocationsEncoded: outputPreferredLocations.map(l => dataLocationStringToEnum(l)),\n          };\n        }\n\n        activeSessions.set(sessionHandle, [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded, bindingState]);\n        return [sessionHandle, inputNames, outputNames];\n      } catch (e) {\n        inputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n        outputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n\n        if (ioBindingHandle !== 0) {\n          wasm._OrtReleaseBinding(ioBindingHandle);\n        }\n\n        if (sessionHandle !== 0) {\n          wasm._OrtReleaseSession(sessionHandle);\n        }\n        throw e;\n      } finally {\n        wasm._free(modelDataOffset);\n        if (sessionOptionsHandle !== 0) {\n          wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n        }\n        allocs.forEach(alloc => wasm._free(alloc));\n      }\n    };\n\nexport const releaseSession = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error(`cannot release session. invalid session id: ${sessionId}`);\n  }\n  const [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded, ioBindingState] = session;\n\n  if (ioBindingState) {\n    wasm._OrtReleaseBinding(ioBindingState.handle);\n  }\n\n  wasm.jsepUnregisterBuffers?.(sessionId);\n\n  inputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n  outputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n  wasm._OrtReleaseSession(sessionHandle);\n  activeSessions.delete(sessionId);\n};\n\nexport const prepareInputOutputTensor =\n    (tensor: TensorMetadata|null, tensorHandles: number[], allocs: number[], sessionId: number, index: number):\n        void => {\n          if (!tensor) {\n            tensorHandles.push(0);\n            return;\n          }\n\n          const wasm = getInstance();\n\n          const dataType = tensor[0];\n          const dims = tensor[1];\n          const location = tensor[3];\n\n          let rawData: number;\n          let dataByteLength: number;\n\n          if (dataType === 'string' && location === 'gpu-buffer') {\n            throw new Error('String tensor is not supported on GPU.');\n          }\n\n          if (location === 'gpu-buffer') {\n            const gpuBuffer = tensor[2].gpuBuffer as GPUBuffer;\n            const elementSizeInBytes = getTensorElementSize(tensorDataTypeStringToEnum(dataType))!;\n            dataByteLength = dims.reduce((a, b) => a * b, 1) * elementSizeInBytes;\n            rawData = wasm.jsepRegisterBuffer(sessionId, index, gpuBuffer, dataByteLength);\n          } else {\n            const data = tensor[2];\n\n            if (Array.isArray(data)) {\n              // string tensor\n              dataByteLength = 4 * data.length;\n              rawData = wasm._malloc(dataByteLength);\n              allocs.push(rawData);\n              let dataIndex = rawData / 4;\n              for (let i = 0; i < data.length; i++) {\n                if (typeof data[i] !== 'string') {\n                  throw new TypeError(`tensor data at index ${i} is not a string`);\n                }\n                wasm.HEAPU32[dataIndex++] = allocWasmString(data[i], allocs);\n              }\n            } else {\n              dataByteLength = data.byteLength;\n              rawData = wasm._malloc(dataByteLength);\n              allocs.push(rawData);\n              wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), rawData);\n            }\n          }\n\n          const stack = wasm.stackSave();\n          const dimsOffset = wasm.stackAlloc(4 * dims.length);\n          try {\n            let dimIndex = dimsOffset / 4;\n            dims.forEach(d => wasm.HEAP32[dimIndex++] = d);\n            const tensor = wasm._OrtCreateTensor(\n                tensorDataTypeStringToEnum(dataType), rawData, dataByteLength, dimsOffset, dims.length,\n                dataLocationStringToEnum(location));\n            if (tensor === 0) {\n              checkLastError(`Can't create tensor for input/output. session=${sessionId}, index=${index}.`);\n            }\n            tensorHandles.push(tensor);\n          } finally {\n            wasm.stackRestore(stack);\n          }\n        };\n\n/**\n * perform inference run\n */\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputTensors: TensorMetadata[], outputIndices: number[],\n    outputTensors: Array<TensorMetadata|null>, options: InferenceSession.RunOptions): Promise<TensorMetadata[]> => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error(`cannot run inference. invalid session id: ${sessionId}`);\n  }\n  const [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded, ioBindingState] = session;\n\n  const inputCount = inputIndices.length;\n  const outputCount = outputIndices.length;\n\n  let runOptionsHandle = 0;\n  let runOptionsAllocs: number[] = [];\n\n  const inputTensorHandles: number[] = [];\n  const outputTensorHandles: number[] = [];\n  const inputOutputAllocs: number[] = [];\n\n  const beforeRunStack = wasm.stackSave();\n  const inputValuesOffset = wasm.stackAlloc(inputCount * 4);\n  const inputNamesOffset = wasm.stackAlloc(inputCount * 4);\n  const outputValuesOffset = wasm.stackAlloc(outputCount * 4);\n  const outputNamesOffset = wasm.stackAlloc(outputCount * 4);\n\n  try {\n    [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n    // create input tensors\n    for (let i = 0; i < inputCount; i++) {\n      prepareInputOutputTensor(inputTensors[i], inputTensorHandles, inputOutputAllocs, sessionId, inputIndices[i]);\n    }\n\n    // create output tensors\n    for (let i = 0; i < outputCount; i++) {\n      prepareInputOutputTensor(\n          outputTensors[i], outputTensorHandles, inputOutputAllocs, sessionId, inputCount + outputIndices[i]);\n    }\n\n    let inputValuesIndex = inputValuesOffset / 4;\n    let inputNamesIndex = inputNamesOffset / 4;\n    let outputValuesIndex = outputValuesOffset / 4;\n    let outputNamesIndex = outputNamesOffset / 4;\n    for (let i = 0; i < inputCount; i++) {\n      wasm.HEAPU32[inputValuesIndex++] = inputTensorHandles[i];\n      wasm.HEAPU32[inputNamesIndex++] = inputNamesUTF8Encoded[inputIndices[i]];\n    }\n    for (let i = 0; i < outputCount; i++) {\n      wasm.HEAPU32[outputValuesIndex++] = outputTensorHandles[i];\n      wasm.HEAPU32[outputNamesIndex++] = outputNamesUTF8Encoded[outputIndices[i]];\n    }\n\n    if (!BUILD_DEFS.DISABLE_WEBGPU && ioBindingState) {\n      const {handle, outputPreferredLocations, outputPreferredLocationsEncoded} = ioBindingState;\n\n      if (inputNamesUTF8Encoded.length !== inputCount) {\n        throw new Error(`input count from feeds (${\n            inputCount}) is expected to be always equal to model's input count (${inputNamesUTF8Encoded.length}).`);\n      }\n\n      // process inputs\n      for (let i = 0; i < inputCount; i++) {\n        const index = inputIndices[i];\n        const errorCode = await wasm._OrtBindInput(handle, inputNamesUTF8Encoded[index], inputTensorHandles[i]);\n        if (errorCode !== 0) {\n          checkLastError(`Can't bind input[${i}] for session=${sessionId}.`);\n        }\n      }\n\n      // process pre-allocated outputs\n      for (let i = 0; i < outputCount; i++) {\n        const index = outputIndices[i];\n        const location = outputTensors[i]?.[3];  // undefined means output is not pre-allocated.\n\n        if (location) {\n          // output is pre-allocated. bind the tensor.\n          const errorCode = wasm._OrtBindOutput(handle, outputNamesUTF8Encoded[index], outputTensorHandles[i], 0);\n          if (errorCode !== 0) {\n            checkLastError(`Can't bind pre-allocated output[${i}] for session=${sessionId}.`);\n          }\n        } else {\n          // output is not pre-allocated. reset preferred location.\n          const errorCode =\n              wasm._OrtBindOutput(handle, outputNamesUTF8Encoded[index], 0, outputPreferredLocationsEncoded[index]);\n          if (errorCode !== 0) {\n            checkLastError(`Can't bind output[${i}] to ${outputPreferredLocations[i]} for session=${sessionId}.`);\n          }\n        }\n      }\n    }\n\n    let errorCode: number;\n\n    if (!BUILD_DEFS.DISABLE_WEBGPU && ioBindingState) {\n      errorCode = await wasm._OrtRunWithBinding(\n          sessionHandle, ioBindingState.handle, outputCount, outputValuesOffset, runOptionsHandle);\n    } else {\n      errorCode = await wasm._OrtRun(\n          sessionHandle, inputNamesOffset, inputValuesOffset, inputCount, outputNamesOffset, outputCount,\n          outputValuesOffset, runOptionsHandle);\n    }\n\n    if (errorCode !== 0) {\n      checkLastError('failed to call OrtRun().');\n    }\n\n    const output: TensorMetadata[] = [];\n\n    for (let i = 0; i < outputCount; i++) {\n      const tensor = wasm.HEAPU32[outputValuesOffset / 4 + i];\n      if (tensor === outputTensorHandles[i]) {\n        // output tensor is pre-allocated. no need to copy data.\n        output.push(outputTensors[i]!);\n        continue;\n      }\n\n      const beforeGetTensorDataStack = wasm.stackSave();\n      // stack allocate 4 pointer value\n      const tensorDataOffset = wasm.stackAlloc(4 * 4);\n\n      let keepOutputTensor = false;\n      let type: Tensor.Type|undefined, dataOffset = 0;\n      try {\n        const errorCode = wasm._OrtGetTensorData(\n            tensor, tensorDataOffset, tensorDataOffset + 4, tensorDataOffset + 8, tensorDataOffset + 12);\n        if (errorCode !== 0) {\n          checkLastError(`Can't access output tensor data on index ${i}.`);\n        }\n        let tensorDataIndex = tensorDataOffset / 4;\n        const dataType = wasm.HEAPU32[tensorDataIndex++];\n        dataOffset = wasm.HEAPU32[tensorDataIndex++];\n        const dimsOffset = wasm.HEAPU32[tensorDataIndex++];\n        const dimsLength = wasm.HEAPU32[tensorDataIndex++];\n        const dims = [];\n        for (let i = 0; i < dimsLength; i++) {\n          dims.push(wasm.HEAPU32[dimsOffset / 4 + i]);\n        }\n        wasm._OrtFree(dimsOffset);\n\n        const size = dims.reduce((a, b) => a * b, 1);\n        type = tensorDataTypeEnumToString(dataType);\n\n        const preferredLocation = ioBindingState?.outputPreferredLocations[outputIndices[i]];\n\n        if (type === 'string') {\n          if (preferredLocation === 'gpu-buffer') {\n            throw new Error('String tensor is not supported on GPU.');\n          }\n          const stringData: string[] = [];\n          let dataIndex = dataOffset / 4;\n          for (let i = 0; i < size; i++) {\n            const offset = wasm.HEAPU32[dataIndex++];\n            const maxBytesToRead = i === size - 1 ? undefined : wasm.HEAPU32[dataIndex] - offset;\n            stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\n          }\n          output.push([type, dims, stringData, 'cpu']);\n        } else {\n          // If a certain output's preferred location is GPU but the tensor is empty, we still need to create a CPU\n          // tensor for it. There is no mapping GPU buffer for an empty tensor.\n          if (preferredLocation === 'gpu-buffer' && size > 0) {\n            const gpuBuffer = wasm.jsepGetBuffer(dataOffset);\n            const elementSize = getTensorElementSize(dataType);\n            if (elementSize === undefined || !isGpuBufferSupportedType(type)) {\n              throw new Error(`Unsupported data type: ${type}`);\n            }\n\n            // do not release the tensor right now. it will be released when user calls tensor.dispose().\n            keepOutputTensor = true;\n\n            output.push([\n              type, dims, {\n                gpuBuffer,\n                download: wasm.jsepCreateDownloader(gpuBuffer, size * elementSize, type),\n                dispose: () => {\n                  wasm._OrtReleaseTensor(tensor);\n                }\n              },\n              'gpu-buffer'\n            ]);\n          } else {\n            const typedArrayConstructor = tensorTypeToTypedArrayConstructor(type);\n            const data = new typedArrayConstructor(size);\n            new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\n                .set(wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength));\n            output.push([type, dims, data, 'cpu']);\n          }\n        }\n      } finally {\n        wasm.stackRestore(beforeGetTensorDataStack);\n        if (type === 'string' && dataOffset) {\n          wasm._free(dataOffset);\n        }\n        if (!keepOutputTensor) {\n          wasm._OrtReleaseTensor(tensor);\n        }\n      }\n    }\n\n    if (ioBindingState) {\n      wasm._OrtClearBoundOutputs(ioBindingState.handle);\n    }\n\n    return output;\n  } finally {\n    wasm.stackRestore(beforeRunStack);\n\n    inputTensorHandles.forEach(v => wasm._OrtReleaseTensor(v));\n    outputTensorHandles.forEach(v => wasm._OrtReleaseTensor(v));\n    inputOutputAllocs.forEach(p => wasm._free(p));\n\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    runOptionsAllocs.forEach(p => wasm._free(p));\n  }\n};\n\n/**\n * end profiling\n */\nexport const endProfiling = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n\n  // profile file name is not used yet, but it must be freed.\n  const profileFileName = wasm._OrtEndProfiling(sessionHandle);\n  if (profileFileName === 0) {\n    checkLastError('Can\\'t get an profile file name.');\n  }\n  wasm._OrtFree(profileFileName);\n};\n\nexport const extractTransferableBuffers = (tensors: readonly SerializableTensorMetadata[]): ArrayBufferLike[] => {\n  const buffers: ArrayBufferLike[] = [];\n  for (const tensor of tensors) {\n    const data = tensor[2];\n    if (!Array.isArray(data) && 'buffer' in data) {\n      buffers.push(data.buffer);\n    }\n  }\n  return buffers;\n};\n", "/*!\n * ONNX Runtime Web v1.17.0\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\"use strict\";(()=>{var vt=Object.defineProperty;var $r=Object.getOwnPropertyDescriptor;var qr=Object.getOwnPropertyNames;var Vr=Object.prototype.hasOwnProperty;var _t=(u,m)=>()=>(u&&(m=u(u=0)),m);var rt=(u,m)=>()=>(m||u((m={exports:{}}).exports,m),m.exports),Et=(u,m)=>{for(var o in m)vt(u,o,{get:m[o],enumerable:!0})},Jr=(u,m,o,y)=>{if(m&&typeof m==\"object\"||typeof m==\"function\")for(let l of qr(m))!Vr.call(u,l)&&l!==o&&vt(u,l,{get:()=>m[l],enumerable:!(y=$r(m,l))||y.enumerable});return u};var nt=u=>Jr(vt({},\"__esModule\",{value:!0}),u);var St={};Et(St,{readFile:()=>Xr});var Xr,Tt=_t(()=>{Xr=void 0});var At={};Et(At,{join:()=>Zr});var Zr,Mt=_t(()=>{Zr=void 0});var cr=rt((lr,Ct)=>{\"use strict\";var fr=(()=>{var u=typeof document<\"u\"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<\"u\"&&(u=u||__filename),function(m={}){var o=m,y,l;o.ready=new Promise((r,i)=>{y=r,l=i});var O=Object.assign({},o),g=\"./this.program\",a=typeof window==\"object\",R=typeof importScripts==\"function\",x=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\",U=\"\",B,D,I;if(x){var k=(Tt(),nt(St)),L=(Mt(),nt(At));U=R?L.dirname(U)+\"/\":__dirname+\"/\",B=(r,i)=>(r=r.startsWith(\"file://\")?new URL(r):L.normalize(r),k.readFileSync(r,i?void 0:\"utf8\")),I=r=>(r=B(r,!0),r.buffer||(r=new Uint8Array(r)),r),D=(r,i,s,p=!0)=>{r=r.startsWith(\"file://\")?new URL(r):L.normalize(r),k.readFile(r,p?void 0:\"utf8\",(w,T)=>{w?s(w):i(p?T.buffer:T)})},!o.thisProgram&&1<process.argv.length&&(g=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),o.inspect=()=>\"[Emscripten Module object]\"}else(a||R)&&(R?U=self.location.href:typeof document<\"u\"&&document.currentScript&&(U=document.currentScript.src),u&&(U=u),U.indexOf(\"blob:\")!==0?U=U.substr(0,U.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):U=\"\",B=r=>{var i=new XMLHttpRequest;return i.open(\"GET\",r,!1),i.send(null),i.responseText},R&&(I=r=>{var i=new XMLHttpRequest;return i.open(\"GET\",r,!1),i.responseType=\"arraybuffer\",i.send(null),new Uint8Array(i.response)}),D=(r,i,s)=>{var p=new XMLHttpRequest;p.open(\"GET\",r,!0),p.responseType=\"arraybuffer\",p.onload=()=>{p.status==200||p.status==0&&p.response?i(p.response):s()},p.onerror=s,p.send(null)});var _=o.print||console.log.bind(console),F=o.printErr||console.error.bind(console);Object.assign(o,O),O=null,o.thisProgram&&(g=o.thisProgram);var q;o.wasmBinary&&(q=o.wasmBinary);var De=o.noExitRuntime||!0;typeof WebAssembly!=\"object\"&&Y(\"no native wasm support detected\");var ce,C,he=!1,ye,X,S,Z;function re(){var r=ce.buffer;o.HEAP8=ye=new Int8Array(r),o.HEAP16=new Int16Array(r),o.HEAP32=S=new Int32Array(r),o.HEAPU8=X=new Uint8Array(r),o.HEAPU16=new Uint16Array(r),o.HEAPU32=Z=new Uint32Array(r),o.HEAPF32=new Float32Array(r),o.HEAPF64=new Float64Array(r)}var be=[],Oe=[],M=[];function E(){var r=o.preRun.shift();be.unshift(r)}var de=0,ie=null,ne=null;function Y(r){throw o.onAbort&&o.onAbort(r),r=\"Aborted(\"+r+\")\",F(r),he=!0,r=new WebAssembly.RuntimeError(r+\". Build with -sASSERTIONS for more info.\"),l(r),r}function ue(r){return r.startsWith(\"data:application/octet-stream;base64,\")}var we;if(we=\"ort-wasm.wasm\",!ue(we)){var ve=we;we=o.locateFile?o.locateFile(ve,U):U+ve}function xe(r){if(r==we&&q)return new Uint8Array(q);if(I)return I(r);throw\"both async and sync fetching of the wasm failed\"}function me(r){if(!q&&(a||R)){if(typeof fetch==\"function\"&&!r.startsWith(\"file://\"))return fetch(r,{credentials:\"same-origin\"}).then(i=>{if(!i.ok)throw\"failed to load wasm binary file at '\"+r+\"'\";return i.arrayBuffer()}).catch(()=>xe(r));if(D)return new Promise((i,s)=>{D(r,p=>i(new Uint8Array(p)),s)})}return Promise.resolve().then(()=>xe(r))}function Me(r,i,s){return me(r).then(p=>WebAssembly.instantiate(p,i)).then(p=>p).then(s,p=>{F(\"failed to asynchronously prepare wasm: \"+p),Y(p)})}function _e(r,i){var s=we;return q||typeof WebAssembly.instantiateStreaming!=\"function\"||ue(s)||s.startsWith(\"file://\")||x||typeof fetch!=\"function\"?Me(s,r,i):fetch(s,{credentials:\"same-origin\"}).then(p=>WebAssembly.instantiateStreaming(p,r).then(i,function(w){return F(\"wasm streaming compile failed: \"+w),F(\"falling back to ArrayBuffer instantiation\"),Me(s,r,i)}))}var se,Ee=r=>{for(;0<r.length;)r.shift()(o)};function ee(r){this.va=r-24,this.Ea=function(i){Z[this.va+4>>2>>>0]=i},this.za=function(i){Z[this.va+8>>2>>>0]=i},this.xa=function(i,s){this.ya(),this.Ea(i),this.za(s)},this.ya=function(){Z[this.va+16>>2>>>0]=0}}var Q=0,Se=0,pe=typeof TextDecoder<\"u\"?new TextDecoder(\"utf8\"):void 0,Ie=(r,i,s)=>{i>>>=0;var p=i+s;for(s=i;r[s]&&!(s>=p);)++s;if(16<s-i&&r.buffer&&pe)return pe.decode(r.subarray(i,s));for(p=\"\";i<s;){var w=r[i++];if(w&128){var T=r[i++]&63;if((w&224)==192)p+=String.fromCharCode((w&31)<<6|T);else{var P=r[i++]&63;w=(w&240)==224?(w&15)<<12|T<<6|P:(w&7)<<18|T<<12|P<<6|r[i++]&63,65536>w?p+=String.fromCharCode(w):(w-=65536,p+=String.fromCharCode(55296|w>>10,56320|w&1023))}}else p+=String.fromCharCode(w)}return p},Ce=(r,i)=>(r>>>=0)?Ie(X,r,i):\"\",We=r=>{for(var i=0,s=0;s<r.length;++s){var p=r.charCodeAt(s);127>=p?i++:2047>=p?i+=2:55296<=p&&57343>=p?(i+=4,++s):i+=3}return i},ke=(r,i,s,p)=>{if(s>>>=0,!(0<p))return 0;var w=s;p=s+p-1;for(var T=0;T<r.length;++T){var P=r.charCodeAt(T);if(55296<=P&&57343>=P){var K=r.charCodeAt(++T);P=65536+((P&1023)<<10)|K&1023}if(127>=P){if(s>=p)break;i[s++>>>0]=P}else{if(2047>=P){if(s+1>=p)break;i[s++>>>0]=192|P>>6}else{if(65535>=P){if(s+2>=p)break;i[s++>>>0]=224|P>>12}else{if(s+3>=p)break;i[s++>>>0]=240|P>>18,i[s++>>>0]=128|P>>12&63}i[s++>>>0]=128|P>>6&63}i[s++>>>0]=128|P&63}}return i[s>>>0]=0,s-w},ge=r=>r%4===0&&(r%100!==0||r%400===0),Ge=[0,31,60,91,121,152,182,213,244,274,305,335],Re=[0,31,59,90,120,151,181,212,243,273,304,334],$e=r=>{var i=We(r)+1,s=Ze(i);return s&&ke(r,X,s,i),s},qe={},Ve=()=>{if(!Je){var r={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(typeof navigator==\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:g||\"./this.program\"},i;for(i in qe)qe[i]===void 0?delete r[i]:r[i]=qe[i];var s=[];for(i in r)s.push(`${i}=${r[i]}`);Je=s}return Je},Je,Fe=[null,[],[]],Pe=[31,29,31,30,31,30,31,31,30,31,30,31],Ne=[31,28,31,30,31,30,31,31,30,31,30,31];function it(r){var i=Array(We(r)+1);return ke(r,i,0,i.length),i}function Xe(r,i,s,p){function w(c,W,H){for(c=typeof c==\"number\"?c.toString():c||\"\";c.length<W;)c=H[0]+c;return c}function T(c,W){return w(c,W,\"0\")}function P(c,W){function H(tt){return 0>tt?-1:0<tt?1:0}var Te;return(Te=H(c.getFullYear()-W.getFullYear()))===0&&(Te=H(c.getMonth()-W.getMonth()))===0&&(Te=H(c.getDate()-W.getDate())),Te}function K(c){switch(c.getDay()){case 0:return new Date(c.getFullYear()-1,11,29);case 1:return c;case 2:return new Date(c.getFullYear(),0,3);case 3:return new Date(c.getFullYear(),0,2);case 4:return new Date(c.getFullYear(),0,1);case 5:return new Date(c.getFullYear()-1,11,31);case 6:return new Date(c.getFullYear()-1,11,30)}}function fe(c){var W=c.ra;for(c=new Date(new Date(c.sa+1900,0,1).getTime());0<W;){var H=c.getMonth(),Te=(ge(c.getFullYear())?Pe:Ne)[H];if(W>Te-c.getDate())W-=Te-c.getDate()+1,c.setDate(1),11>H?c.setMonth(H+1):(c.setMonth(0),c.setFullYear(c.getFullYear()+1));else{c.setDate(c.getDate()+W);break}}return H=new Date(c.getFullYear()+1,0,4),W=K(new Date(c.getFullYear(),0,4)),H=K(H),0>=P(W,c)?0>=P(H,c)?c.getFullYear()+1:c.getFullYear():c.getFullYear()-1}r>>>=0,i>>>=0,s>>>=0,p>>>=0;var oe=S[p+40>>2>>>0];p={Ca:S[p>>2>>>0],Ba:S[p+4>>2>>>0],ta:S[p+8>>2>>>0],wa:S[p+12>>2>>>0],ua:S[p+16>>2>>>0],sa:S[p+20>>2>>>0],ma:S[p+24>>2>>>0],ra:S[p+28>>2>>>0],Fa:S[p+32>>2>>>0],Aa:S[p+36>>2>>>0],Da:oe?Ce(oe):\"\"},s=Ce(s),oe={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var ae in oe)s=s.replace(new RegExp(ae,\"g\"),oe[ae]);var Ke=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),et=\"January February March April May June July August September October November December\".split(\" \");oe={\"%a\":c=>Ke[c.ma].substring(0,3),\"%A\":c=>Ke[c.ma],\"%b\":c=>et[c.ua].substring(0,3),\"%B\":c=>et[c.ua],\"%C\":c=>T((c.sa+1900)/100|0,2),\"%d\":c=>T(c.wa,2),\"%e\":c=>w(c.wa,2,\" \"),\"%g\":c=>fe(c).toString().substring(2),\"%G\":c=>fe(c),\"%H\":c=>T(c.ta,2),\"%I\":c=>(c=c.ta,c==0?c=12:12<c&&(c-=12),T(c,2)),\"%j\":c=>{for(var W=0,H=0;H<=c.ua-1;W+=(ge(c.sa+1900)?Pe:Ne)[H++]);return T(c.wa+W,3)},\"%m\":c=>T(c.ua+1,2),\"%M\":c=>T(c.Ba,2),\"%n\":()=>`\n`,\"%p\":c=>0<=c.ta&&12>c.ta?\"AM\":\"PM\",\"%S\":c=>T(c.Ca,2),\"%t\":()=>\"\t\",\"%u\":c=>c.ma||7,\"%U\":c=>T(Math.floor((c.ra+7-c.ma)/7),2),\"%V\":c=>{var W=Math.floor((c.ra+7-(c.ma+6)%7)/7);if(2>=(c.ma+371-c.ra-2)%7&&W++,W)W==53&&(H=(c.ma+371-c.ra)%7,H==4||H==3&&ge(c.sa)||(W=1));else{W=52;var H=(c.ma+7-c.ra-1)%7;(H==4||H==5&&ge(c.sa%400-1))&&W++}return T(W,2)},\"%w\":c=>c.ma,\"%W\":c=>T(Math.floor((c.ra+7-(c.ma+6)%7)/7),2),\"%y\":c=>(c.sa+1900).toString().substring(2),\"%Y\":c=>c.sa+1900,\"%z\":c=>{c=c.Aa;var W=0<=c;return c=Math.abs(c)/60,(W?\"+\":\"-\")+(\"0000\"+(c/60*100+c%60)).slice(-4)},\"%Z\":c=>c.Da,\"%%\":()=>\"%\"},s=s.replace(/%%/g,\"\\0\\0\");for(ae in oe)s.includes(ae)&&(s=s.replace(new RegExp(ae,\"g\"),oe[ae](p)));return s=s.replace(/\\0\\0/g,\"%\"),ae=it(s),ae.length>i?0:(ye.set(ae,r>>>0),ae.length-1)}var st={a:function(r,i,s){throw r>>>=0,new ee(r).xa(i>>>0,s>>>0),Q=r,Se++,Q},e:function(){return 0},H:function(){},x:function(){},z:function(){},k:function(){return 0},F:function(){},B:function(){},E:function(){},g:function(){},y:function(){},v:function(){},G:function(){},w:function(){},l:()=>!0,o:function(r,i,s){r=i+2097152>>>0<4194305-!!r?(r>>>0)+4294967296*i:NaN,s>>>=0,r=new Date(1e3*r),S[s>>2>>>0]=r.getUTCSeconds(),S[s+4>>2>>>0]=r.getUTCMinutes(),S[s+8>>2>>>0]=r.getUTCHours(),S[s+12>>2>>>0]=r.getUTCDate(),S[s+16>>2>>>0]=r.getUTCMonth(),S[s+20>>2>>>0]=r.getUTCFullYear()-1900,S[s+24>>2>>>0]=r.getUTCDay(),S[s+28>>2>>>0]=(r.getTime()-Date.UTC(r.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},p:function(r,i,s){r=i+2097152>>>0<4194305-!!r?(r>>>0)+4294967296*i:NaN,s>>>=0,r=new Date(1e3*r),S[s>>2>>>0]=r.getSeconds(),S[s+4>>2>>>0]=r.getMinutes(),S[s+8>>2>>>0]=r.getHours(),S[s+12>>2>>>0]=r.getDate(),S[s+16>>2>>>0]=r.getMonth(),S[s+20>>2>>>0]=r.getFullYear()-1900,S[s+24>>2>>>0]=r.getDay(),S[s+28>>2>>>0]=(ge(r.getFullYear())?Ge:Re)[r.getMonth()]+r.getDate()-1|0,S[s+36>>2>>>0]=-(60*r.getTimezoneOffset()),i=new Date(r.getFullYear(),6,1).getTimezoneOffset();var p=new Date(r.getFullYear(),0,1).getTimezoneOffset();S[s+32>>2>>>0]=(i!=p&&r.getTimezoneOffset()==Math.min(p,i))|0},q:function(r){r>>>=0;var i=new Date(S[r+20>>2>>>0]+1900,S[r+16>>2>>>0],S[r+12>>2>>>0],S[r+8>>2>>>0],S[r+4>>2>>>0],S[r>>2>>>0],0),s=S[r+32>>2>>>0],p=i.getTimezoneOffset(),w=new Date(i.getFullYear(),6,1).getTimezoneOffset(),T=new Date(i.getFullYear(),0,1).getTimezoneOffset(),P=Math.min(T,w);return 0>s?S[r+32>>2>>>0]=+(w!=T&&P==p):0<s!=(P==p)&&(w=Math.max(T,w),i.setTime(i.getTime()+6e4*((0<s?P:w)-p))),S[r+24>>2>>>0]=i.getDay(),S[r+28>>2>>>0]=(ge(i.getFullYear())?Ge:Re)[i.getMonth()]+i.getDate()-1|0,S[r>>2>>>0]=i.getSeconds(),S[r+4>>2>>>0]=i.getMinutes(),S[r+8>>2>>>0]=i.getHours(),S[r+12>>2>>>0]=i.getDate(),S[r+16>>2>>>0]=i.getMonth(),S[r+20>>2>>>0]=i.getYear(),r=i.getTime()/1e3,He((se=r,1<=+Math.abs(se)?0<se?+Math.floor(se/4294967296)>>>0:~~+Math.ceil((se-+(~~se>>>0))/4294967296)>>>0:0)),r>>>0},m:function(){return-52},n:function(){},t:function(r,i,s){function p(fe){return(fe=fe.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?fe[1]:\"GMT\"}s>>>=0;var w=new Date().getFullYear(),T=new Date(w,0,1),P=new Date(w,6,1);w=T.getTimezoneOffset();var K=P.getTimezoneOffset();Z[r>>>0>>2>>>0]=60*Math.max(w,K),S[i>>>0>>2>>>0]=+(w!=K),r=p(T),i=p(P),r=$e(r),i=$e(i),K<w?(Z[s>>2>>>0]=r,Z[s+4>>2>>>0]=i):(Z[s>>2>>>0]=i,Z[s+4>>2>>>0]=r)},d:()=>{Y(\"\")},h:function(){return Date.now()},u:function(){return 4294901760},b:()=>performance.now(),I:function(r,i,s){return i>>>=0,X.copyWithin(r>>>0>>>0,i>>>0,i+(s>>>0)>>>0)},s:function(r){r>>>=0;var i=X.length;if(4294901760<r)return!1;for(var s=1;4>=s;s*=2){var p=i*(1+.2/s);p=Math.min(p,r+100663296);var w=Math;p=Math.max(r,p);e:{w=w.min.call(w,4294901760,p+(65536-p%65536)%65536)-ce.buffer.byteLength+65535>>>16;try{ce.grow(w),re();var T=1;break e}catch{}T=void 0}if(T)return!0}return!1},C:function(r,i){r>>>=0,i>>>=0;var s=0;return Ve().forEach(function(p,w){var T=i+s;for(w=Z[r+4*w>>2>>>0]=T,T=0;T<p.length;++T)ye[w++>>0>>>0]=p.charCodeAt(T);ye[w>>0>>>0]=0,s+=p.length+1}),0},D:function(r,i){r>>>=0,i>>>=0;var s=Ve();Z[r>>2>>>0]=s.length;var p=0;return s.forEach(function(w){p+=w.length+1}),Z[i>>2>>>0]=p,0},f:()=>52,j:function(){return 52},r:function(){return 70},i:function(r,i,s,p){i>>>=0,s>>>=0,p>>>=0;for(var w=0,T=0;T<s;T++){var P=Z[i>>2>>>0],K=Z[i+4>>2>>>0];i+=8;for(var fe=0;fe<K;fe++){var oe=X[P+fe>>>0],ae=Fe[r];oe===0||oe===10?((r===1?_:F)(Ie(ae,0)),ae.length=0):ae.push(oe)}w+=K}return Z[p>>2>>>0]=w,0},A:Xe,c:function(r,i,s,p){return Xe(r>>>0,i>>>0,s>>>0,p>>>0)}};(function(){function r(s){if(s=s.exports,C=s=je(s),ce=C.J,re(),Oe.unshift(C.K),de--,o.monitorRunDependencies&&o.monitorRunDependencies(de),de==0&&(ie!==null&&(clearInterval(ie),ie=null),ne)){var p=ne;ne=null,p()}return s}var i={a:st};if(de++,o.monitorRunDependencies&&o.monitorRunDependencies(de),o.instantiateWasm)try{return o.instantiateWasm(i,r)}catch(s){F(\"Module.instantiateWasm callback failed with error: \"+s),l(s)}return _e(i,function(s){r(s.instance)}).catch(l),{}})(),o._OrtInit=(r,i)=>(o._OrtInit=C.L)(r,i),o._OrtGetLastError=(r,i)=>(o._OrtGetLastError=C.M)(r,i),o._OrtCreateSessionOptions=(r,i,s,p,w,T,P,K,fe,oe)=>(o._OrtCreateSessionOptions=C.N)(r,i,s,p,w,T,P,K,fe,oe),o._OrtAppendExecutionProvider=(r,i)=>(o._OrtAppendExecutionProvider=C.O)(r,i),o._OrtAddFreeDimensionOverride=(r,i,s)=>(o._OrtAddFreeDimensionOverride=C.P)(r,i,s),o._OrtAddSessionConfigEntry=(r,i,s)=>(o._OrtAddSessionConfigEntry=C.Q)(r,i,s),o._OrtReleaseSessionOptions=r=>(o._OrtReleaseSessionOptions=C.R)(r),o._OrtCreateSession=(r,i,s)=>(o._OrtCreateSession=C.S)(r,i,s),o._OrtReleaseSession=r=>(o._OrtReleaseSession=C.T)(r),o._OrtGetInputOutputCount=(r,i,s)=>(o._OrtGetInputOutputCount=C.U)(r,i,s),o._OrtGetInputName=(r,i)=>(o._OrtGetInputName=C.V)(r,i),o._OrtGetOutputName=(r,i)=>(o._OrtGetOutputName=C.W)(r,i),o._OrtFree=r=>(o._OrtFree=C.X)(r),o._OrtCreateTensor=(r,i,s,p,w,T)=>(o._OrtCreateTensor=C.Y)(r,i,s,p,w,T),o._OrtGetTensorData=(r,i,s,p,w)=>(o._OrtGetTensorData=C.Z)(r,i,s,p,w),o._OrtReleaseTensor=r=>(o._OrtReleaseTensor=C._)(r),o._OrtCreateRunOptions=(r,i,s,p)=>(o._OrtCreateRunOptions=C.$)(r,i,s,p),o._OrtAddRunConfigEntry=(r,i,s)=>(o._OrtAddRunConfigEntry=C.aa)(r,i,s),o._OrtReleaseRunOptions=r=>(o._OrtReleaseRunOptions=C.ba)(r),o._OrtCreateBinding=r=>(o._OrtCreateBinding=C.ca)(r),o._OrtBindInput=(r,i,s)=>(o._OrtBindInput=C.da)(r,i,s),o._OrtBindOutput=(r,i,s,p)=>(o._OrtBindOutput=C.ea)(r,i,s,p),o._OrtClearBoundOutputs=r=>(o._OrtClearBoundOutputs=C.fa)(r),o._OrtReleaseBinding=r=>(o._OrtReleaseBinding=C.ga)(r),o._OrtRunWithBinding=(r,i,s,p,w)=>(o._OrtRunWithBinding=C.ha)(r,i,s,p,w),o._OrtRun=(r,i,s,p,w,T,P,K)=>(o._OrtRun=C.ia)(r,i,s,p,w,T,P,K),o._OrtEndProfiling=r=>(o._OrtEndProfiling=C.ja)(r);var Ze=o._malloc=r=>(Ze=o._malloc=C.ka)(r);o._free=r=>(o._free=C.la)(r);var He=r=>(He=C.na)(r),Qe=()=>(Qe=C.oa)(),Ye=r=>(Ye=C.pa)(r),A=r=>(A=C.qa)(r);function je(r){r=Object.assign({},r);var i=p=>()=>p()>>>0,s=p=>w=>p(w)>>>0;return r.__errno_location=i(r.__errno_location),r.malloc=s(r.malloc),r.stackSave=i(r.stackSave),r.stackAlloc=s(r.stackAlloc),r}o.stackAlloc=A,o.stackSave=Qe,o.stackRestore=Ye,o.UTF8ToString=Ce,o.stringToUTF8=(r,i,s)=>ke(r,X,i,s),o.lengthBytesUTF8=We;var Ue;ne=function r(){Ue||Le(),Ue||(ne=r)};function Le(){function r(){if(!Ue&&(Ue=!0,o.calledRun=!0,!he)){if(Ee(Oe),y(o),o.onRuntimeInitialized&&o.onRuntimeInitialized(),o.postRun)for(typeof o.postRun==\"function\"&&(o.postRun=[o.postRun]);o.postRun.length;){var i=o.postRun.shift();M.unshift(i)}Ee(M)}}if(!(0<de)){if(o.preRun)for(typeof o.preRun==\"function\"&&(o.preRun=[o.preRun]);o.preRun.length;)E();Ee(be),0<de||(o.setStatus?(o.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){o.setStatus(\"\")},1),r()},1)):r())}}if(o.preInit)for(typeof o.preInit==\"function\"&&(o.preInit=[o.preInit]);0<o.preInit.length;)o.preInit.pop()();return Le(),m.ready}})();typeof lr==\"object\"&&typeof Ct==\"object\"?Ct.exports=fr:typeof define==\"function\"&&define.amd&&define([],()=>fr)});var dr=rt(()=>{});var pr=rt(()=>{});var mr={};Et(mr,{cpus:()=>Qr});var Qr,gr=_t(()=>{Qr=void 0});var br=rt((yr,Rt)=>{\"use strict\";var hr=(()=>{var u=typeof document<\"u\"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<\"u\"&&(u=u||__filename),function(m={}){function o(){return M.buffer!=Y.buffer&&me(),Y}function y(){return M.buffer!=Y.buffer&&me(),ue}function l(){return M.buffer!=Y.buffer&&me(),we}function O(){return M.buffer!=Y.buffer&&me(),ve}function g(){return M.buffer!=Y.buffer&&me(),xe}var a=m,R,x;a.ready=new Promise((e,t)=>{R=e,x=t});var U=Object.assign({},a),B=\"./this.program\",D=(e,t)=>{throw t},I=typeof window==\"object\",k=typeof importScripts==\"function\",L=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\",_=a.ENVIRONMENT_IS_PTHREAD||!1,F=\"\";function q(e){return a.locateFile?a.locateFile(e,F):F+e}var De,ce,C;if(L){var he=(Tt(),nt(St)),ye=(Mt(),nt(At));F=k?ye.dirname(F)+\"/\":__dirname+\"/\",De=(t,n)=>(t=t.startsWith(\"file://\")?new URL(t):ye.normalize(t),he.readFileSync(t,n?void 0:\"utf8\")),C=t=>(t=De(t,!0),t.buffer||(t=new Uint8Array(t)),t),ce=(t,n,f,b=!0)=>{t=t.startsWith(\"file://\")?new URL(t):ye.normalize(t),he.readFile(t,b?void 0:\"utf8\",(h,v)=>{h?f(h):n(b?v.buffer:v)})},!a.thisProgram&&1<process.argv.length&&(B=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),D=(t,n)=>{throw process.exitCode=t,n},a.inspect=()=>\"[Emscripten Module object]\";let e;try{e=dr()}catch(t){throw console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?'),t}global.Worker=e.Worker}else(I||k)&&(k?F=self.location.href:typeof document<\"u\"&&document.currentScript&&(F=document.currentScript.src),typeof u<\"u\"&&u&&(F=u),F.indexOf(\"blob:\")!==0?F=F.substr(0,F.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):F=\"\",L||(De=e=>{var t=new XMLHttpRequest;return t.open(\"GET\",e,!1),t.send(null),t.responseText},k&&(C=e=>{var t=new XMLHttpRequest;return t.open(\"GET\",e,!1),t.responseType=\"arraybuffer\",t.send(null),new Uint8Array(t.response)}),ce=(e,t,n)=>{var f=new XMLHttpRequest;f.open(\"GET\",e,!0),f.responseType=\"arraybuffer\",f.onload=()=>{f.status==200||f.status==0&&f.response?t(f.response):n()},f.onerror=n,f.send(null)}));L&&typeof performance>\"u\"&&(global.performance=pr().performance);var X=console.log.bind(console),S=console.error.bind(console);L&&(X=(...e)=>he.writeSync(1,e.join(\" \")+`\n`),S=(...e)=>he.writeSync(2,e.join(\" \")+`\n`));var Z=a.print||X,re=a.printErr||S;Object.assign(a,U),U=null,a.thisProgram&&(B=a.thisProgram),a.quit&&(D=a.quit);var be;a.wasmBinary&&(be=a.wasmBinary);var Oe=a.noExitRuntime||!0;typeof WebAssembly!=\"object\"&&ge(\"no native wasm support detected\");var M,E,de,ie=!1,ne,Y,ue,we,ve,xe;function me(){var e=M.buffer;a.HEAP8=Y=new Int8Array(e),a.HEAP16=new Int16Array(e),a.HEAP32=we=new Int32Array(e),a.HEAPU8=ue=new Uint8Array(e),a.HEAPU16=new Uint16Array(e),a.HEAPU32=ve=new Uint32Array(e),a.HEAPF32=new Float32Array(e),a.HEAPF64=xe=new Float64Array(e)}var Me=a.INITIAL_MEMORY||16777216;if(5242880<=Me||ge(\"INITIAL_MEMORY should be larger than STACK_SIZE, was \"+Me+\"! (STACK_SIZE=5242880)\"),_)M=a.wasmMemory;else if(a.wasmMemory)M=a.wasmMemory;else if(M=new WebAssembly.Memory({initial:Me/65536,maximum:65536,shared:!0}),!(M.buffer instanceof SharedArrayBuffer))throw re(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\"),L&&re(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)\"),Error(\"bad memory\");me(),Me=M.buffer.byteLength;var _e,se=[],Ee=[],ee=[],Q=0;function Se(){return Oe||0<Q}var pe=0,Ie=null,Ce=null;function We(){pe++,a.monitorRunDependencies&&a.monitorRunDependencies(pe)}function ke(){if(pe--,a.monitorRunDependencies&&a.monitorRunDependencies(pe),pe==0&&(Ie!==null&&(clearInterval(Ie),Ie=null),Ce)){var e=Ce;Ce=null,e()}}function ge(e){throw a.onAbort&&a.onAbort(e),e=\"Aborted(\"+e+\")\",re(e),ie=!0,ne=1,e=new WebAssembly.RuntimeError(e+\". Build with -sASSERTIONS for more info.\"),x(e),e}function Ge(e){return e.startsWith(\"data:application/octet-stream;base64,\")}var Re;Re=\"ort-wasm-threaded.wasm\",Ge(Re)||(Re=q(Re));function $e(e){if(e==Re&&be)return new Uint8Array(be);if(C)return C(e);throw\"both async and sync fetching of the wasm failed\"}function qe(e){if(!be&&(I||k)){if(typeof fetch==\"function\"&&!e.startsWith(\"file://\"))return fetch(e,{credentials:\"same-origin\"}).then(t=>{if(!t.ok)throw\"failed to load wasm binary file at '\"+e+\"'\";return t.arrayBuffer()}).catch(()=>$e(e));if(ce)return new Promise((t,n)=>{ce(e,f=>t(new Uint8Array(f)),n)})}return Promise.resolve().then(()=>$e(e))}function Ve(e,t,n){return qe(e).then(f=>WebAssembly.instantiate(f,t)).then(f=>f).then(n,f=>{re(\"failed to asynchronously prepare wasm: \"+f),ge(f)})}function Je(e,t){var n=Re;return be||typeof WebAssembly.instantiateStreaming!=\"function\"||Ge(n)||n.startsWith(\"file://\")||L||typeof fetch!=\"function\"?Ve(n,e,t):fetch(n,{credentials:\"same-origin\"}).then(f=>WebAssembly.instantiateStreaming(f,e).then(t,function(b){return re(\"wasm streaming compile failed: \"+b),re(\"falling back to ArrayBuffer instantiation\"),Ve(n,e,t)}))}var Fe;function Pe(e){this.name=\"ExitStatus\",this.message=`Program terminated with exit(${e})`,this.status=e}function Ne(e){e.terminate(),e.onmessage=()=>{}}function it(e){(e=A.La[e])||ge(),A.lb(e)}function Xe(e){var t=A.fb();if(!t)return 6;A.Oa.push(t),A.La[e.Na]=t,t.Na=e.Na;var n={cmd:\"run\",start_routine:e.mb,arg:e.eb,pthread_ptr:e.Na};return L&&t.unref(),t.postMessage(n,e.sb),0}var st=typeof TextDecoder<\"u\"?new TextDecoder(\"utf8\"):void 0,Ze=(e,t,n)=>{t>>>=0;var f=t+n;for(n=t;e[n]&&!(n>=f);)++n;if(16<n-t&&e.buffer&&st)return st.decode(e.buffer instanceof SharedArrayBuffer?e.slice(t,n):e.subarray(t,n));for(f=\"\";t<n;){var b=e[t++];if(b&128){var h=e[t++]&63;if((b&224)==192)f+=String.fromCharCode((b&31)<<6|h);else{var v=e[t++]&63;b=(b&240)==224?(b&15)<<12|h<<6|v:(b&7)<<18|h<<12|v<<6|e[t++]&63,65536>b?f+=String.fromCharCode(b):(b-=65536,f+=String.fromCharCode(55296|b>>10,56320|b&1023))}}else f+=String.fromCharCode(b)}return f},He=(e,t)=>(e>>>=0)?Ze(y(),e,t):\"\";function Qe(e){if(_)return j(1,1,e);ne=e,Se()||(A.nb(),a.onExit&&a.onExit(e),ie=!0),D(e,new Pe(e))}var Ye=e=>{if(ne=e,_)throw Ue(e),\"unwind\";Qe(e)},A={Ra:[],Oa:[],Za:[],La:{},Va:function(){_?A.hb():A.gb()},gb:function(){se.unshift(()=>{We(),A.ib(()=>ke())})},hb:function(){A.receiveObjectTransfer=A.kb,A.threadInitTLS=A.Ya,A.setExitStatus=A.Xa,Oe=!1},Xa:function(e){ne=e},xb:[\"$terminateWorker\"],nb:function(){for(var e of A.Oa)Ne(e);for(e of A.Ra)Ne(e);A.Ra=[],A.Oa=[],A.La=[]},lb:function(e){var t=e.Na;delete A.La[t],A.Ra.push(e),A.Oa.splice(A.Oa.indexOf(e),1),e.Na=0,yt(t)},kb:function(){},Ya:function(){A.Za.forEach(e=>e())},jb:e=>new Promise(t=>{e.onmessage=h=>{h=h.data;var v=h.cmd;if(h.targetThread&&h.targetThread!=ft()){var z=A.La[h.wb];z?z.postMessage(h,h.transferList):re('Internal error! Worker sent a message \"'+v+'\" to target pthread '+h.targetThread+\", but that thread no longer exists!\")}else v===\"checkMailbox\"?ut():v===\"spawnThread\"?Xe(h):v===\"cleanupThread\"?it(h.thread):v===\"killThread\"?(h=h.thread,v=A.La[h],delete A.La[h],Ne(v),yt(h),A.Oa.splice(A.Oa.indexOf(v),1),v.Na=0):v===\"cancelThread\"?A.La[h.thread].postMessage({cmd:\"cancel\"}):v===\"loaded\"?(e.loaded=!0,t(e)):v===\"alert\"?alert(\"Thread \"+h.threadId+\": \"+h.text):h.target===\"setimmediate\"?e.postMessage(h):v===\"callHandler\"?a[h.handler](...h.args):v&&re(\"worker sent an unknown command \"+v)},e.onerror=h=>{throw re(\"worker sent an error! \"+h.filename+\":\"+h.lineno+\": \"+h.message),h},L&&(e.on(\"message\",function(h){e.onmessage({data:h})}),e.on(\"error\",function(h){e.onerror(h)}));var n=[],f=[\"onExit\",\"onAbort\",\"print\",\"printErr\"],b;for(b of f)a.hasOwnProperty(b)&&n.push(b);e.postMessage({cmd:\"load\",handlers:n,urlOrBlob:a.mainScriptUrlOrBlob||u,wasmMemory:M,wasmModule:de})}),ib:function(e){e()},cb:function(){var e=q(\"ort-wasm-threaded.worker.js\");e=new Worker(e),A.Ra.push(e)},fb:function(){return A.Ra.length==0&&(A.cb(),A.jb(A.Ra[0])),A.Ra.pop()}};a.PThread=A;var je=e=>{for(;0<e.length;)e.shift()(a)};a.establishStackSpace=function(){var e=ft(),t=l()[e+52>>2>>>0];e=l()[e+56>>2>>>0],or(t,t-e),lt(t)};function Ue(e){if(_)return j(2,0,e);Ye(e)}var Le=[];a.invokeEntryPoint=function(e,t){var n=Le[e];n||(e>=Le.length&&(Le.length=e+1),Le[e]=n=_e.get(e)),e=n(t),Se()?A.Xa(e):bt(e)};function r(e){this.Ua=e-24,this.bb=function(t){O()[this.Ua+4>>2>>>0]=t},this.ab=function(t){O()[this.Ua+8>>2>>>0]=t},this.Va=function(t,n){this.$a(),this.bb(t),this.ab(n)},this.$a=function(){O()[this.Ua+16>>2>>>0]=0}}var i=0,s=0;function p(e,t,n,f){return _?j(3,1,e,t,n,f):w(e,t,n,f)}function w(e,t,n,f){if(e>>>=0,t>>>=0,n>>>=0,f>>>=0,typeof SharedArrayBuffer>\"u\")return re(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\"),6;var b=[];return _&&b.length===0?p(e,t,n,f):(e={mb:n,Na:e,eb:f,sb:b},_?(e.ub=\"spawnThread\",postMessage(e,b),0):Xe(e))}function T(e,t,n){return _?j(4,1,e,t,n):0}function P(e,t){if(_)return j(5,1,e,t)}var K=e=>{for(var t=0,n=0;n<e.length;++n){var f=e.charCodeAt(n);127>=f?t++:2047>=f?t+=2:55296<=f&&57343>=f?(t+=4,++n):t+=3}return t},fe=(e,t,n,f)=>{if(n>>>=0,!(0<f))return 0;var b=n;f=n+f-1;for(var h=0;h<e.length;++h){var v=e.charCodeAt(h);if(55296<=v&&57343>=v){var z=e.charCodeAt(++h);v=65536+((v&1023)<<10)|z&1023}if(127>=v){if(n>=f)break;t[n++>>>0]=v}else{if(2047>=v){if(n+1>=f)break;t[n++>>>0]=192|v>>6}else{if(65535>=v){if(n+2>=f)break;t[n++>>>0]=224|v>>12}else{if(n+3>=f)break;t[n++>>>0]=240|v>>18,t[n++>>>0]=128|v>>12&63}t[n++>>>0]=128|v>>6&63}t[n++>>>0]=128|v&63}}return t[n>>>0]=0,n-b},oe=(e,t,n)=>fe(e,y(),t,n);function ae(e,t){if(_)return j(6,1,e,t)}function Ke(e,t,n){if(_)return j(7,1,e,t,n)}function et(e,t,n){return _?j(8,1,e,t,n):0}function c(e,t){if(_)return j(9,1,e,t)}function W(e,t,n){if(_)return j(10,1,e,t,n)}function H(e,t,n,f){if(_)return j(11,1,e,t,n,f)}function Te(e,t,n,f){if(_)return j(12,1,e,t,n,f)}function tt(e,t,n,f){if(_)return j(13,1,e,t,n,f)}function Ut(e){if(_)return j(14,1,e)}function Lt(e,t){if(_)return j(15,1,e,t)}function Bt(e,t,n){if(_)return j(16,1,e,t,n)}var Wr=e=>{if(!ie)try{if(e(),!Se())try{_?bt(ne):Ye(ne)}catch(t){t instanceof Pe||t==\"unwind\"||D(1,t)}}catch(t){t instanceof Pe||t==\"unwind\"||D(1,t)}};function pt(e){e>>>=0,typeof Atomics.tb==\"function\"&&(Atomics.tb(l(),e>>2,e).value.then(ut),e+=128,Atomics.store(l(),e>>2,1))}a.__emscripten_thread_mailbox_await=pt;function ut(){var e=ft();e&&(pt(e),Wr(()=>rr()))}a.checkMailbox=ut;var ze=e=>e%4===0&&(e%100!==0||e%400===0),Wt=[0,31,60,91,121,152,182,213,244,274,305,335],kt=[0,31,59,90,120,151,181,212,243,273,304,334];function Nt(e,t,n,f,b,h,v,z){return _?j(17,1,e,t,n,f,b,h,v,z):-52}function Ht(e,t,n,f,b,h,v){if(_)return j(18,1,e,t,n,f,b,h,v)}var Yt=e=>{var t=K(e)+1,n=Kt(t);return n&&oe(e,n,t),n},kr=e=>{var t=Ot();return e=e(),lt(t),e};function j(e,t){var n=arguments.length-2,f=arguments;return kr(()=>{for(var b=wt(8*n),h=b>>3,v=0;v<n;v++){var z=f[2+v];g()[h+v>>>0]=z}return tr(e,n,b,t)})}var mt=[],gt={},jt=()=>{if(!ht){var e={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(typeof navigator==\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:B||\"./this.program\"},t;for(t in gt)gt[t]===void 0?delete e[t]:e[t]=gt[t];var n=[];for(t in e)n.push(`${t}=${e[t]}`);ht=n}return ht},ht;function zt(e,t){if(_)return j(19,1,e,t);e>>>=0,t>>>=0;var n=0;return jt().forEach(function(f,b){var h=t+n;for(b=O()[e+4*b>>2>>>0]=h,h=0;h<f.length;++h)o()[b++>>0>>>0]=f.charCodeAt(h);o()[b>>0>>>0]=0,n+=f.length+1}),0}function Gt(e,t){if(_)return j(20,1,e,t);e>>>=0,t>>>=0;var n=jt();O()[e>>2>>>0]=n.length;var f=0;return n.forEach(function(b){f+=b.length+1}),O()[t>>2>>>0]=f,0}function $t(e){return _?j(21,1,e):52}function qt(e,t,n,f){return _?j(22,1,e,t,n,f):52}function Vt(e,t,n,f,b){return _?j(23,1,e,t,n,f,b):70}var Nr=[null,[],[]];function Jt(e,t,n,f){if(_)return j(24,1,e,t,n,f);t>>>=0,n>>>=0,f>>>=0;for(var b=0,h=0;h<n;h++){var v=O()[t>>2>>>0],z=O()[t+4>>2>>>0];t+=8;for(var Ae=0;Ae<z;Ae++){var te=y()[v+Ae>>>0],le=Nr[e];te===0||te===10?((e===1?Z:re)(Ze(le,0)),le.length=0):le.push(te)}b+=z}return O()[f>>2>>>0]=b,0}var Xt=[31,29,31,30,31,30,31,31,30,31,30,31],Zt=[31,28,31,30,31,30,31,31,30,31,30,31];function Hr(e){var t=Array(K(e)+1);return fe(e,t,0,t.length),t}var Yr=(e,t)=>{o().set(e,t>>>0)};function Qt(e,t,n,f){function b(d,N,G){for(d=typeof d==\"number\"?d.toString():d||\"\";d.length<N;)d=G[0]+d;return d}function h(d,N){return b(d,N,\"0\")}function v(d,N){function G(ur){return 0>ur?-1:0<ur?1:0}var Be;return(Be=G(d.getFullYear()-N.getFullYear()))===0&&(Be=G(d.getMonth()-N.getMonth()))===0&&(Be=G(d.getDate()-N.getDate())),Be}function z(d){switch(d.getDay()){case 0:return new Date(d.getFullYear()-1,11,29);case 1:return d;case 2:return new Date(d.getFullYear(),0,3);case 3:return new Date(d.getFullYear(),0,2);case 4:return new Date(d.getFullYear(),0,1);case 5:return new Date(d.getFullYear()-1,11,31);case 6:return new Date(d.getFullYear()-1,11,30)}}function Ae(d){var N=d.Pa;for(d=new Date(new Date(d.Qa+1900,0,1).getTime());0<N;){var G=d.getMonth(),Be=(ze(d.getFullYear())?Xt:Zt)[G];if(N>Be-d.getDate())N-=Be-d.getDate()+1,d.setDate(1),11>G?d.setMonth(G+1):(d.setMonth(0),d.setFullYear(d.getFullYear()+1));else{d.setDate(d.getDate()+N);break}}return G=new Date(d.getFullYear()+1,0,4),N=z(new Date(d.getFullYear(),0,4)),G=z(G),0>=v(N,d)?0>=v(G,d)?d.getFullYear()+1:d.getFullYear():d.getFullYear()-1}e>>>=0,t>>>=0,n>>>=0,f>>>=0;var te=l()[f+40>>2>>>0];f={qb:l()[f>>2>>>0],pb:l()[f+4>>2>>>0],Sa:l()[f+8>>2>>>0],Wa:l()[f+12>>2>>>0],Ta:l()[f+16>>2>>>0],Qa:l()[f+20>>2>>>0],Ma:l()[f+24>>2>>>0],Pa:l()[f+28>>2>>>0],yb:l()[f+32>>2>>>0],ob:l()[f+36>>2>>>0],rb:te?He(te):\"\"},n=He(n),te={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var le in te)n=n.replace(new RegExp(le,\"g\"),te[le]);var ir=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),sr=\"January February March April May June July August September October November December\".split(\" \");te={\"%a\":d=>ir[d.Ma].substring(0,3),\"%A\":d=>ir[d.Ma],\"%b\":d=>sr[d.Ta].substring(0,3),\"%B\":d=>sr[d.Ta],\"%C\":d=>h((d.Qa+1900)/100|0,2),\"%d\":d=>h(d.Wa,2),\"%e\":d=>b(d.Wa,2,\" \"),\"%g\":d=>Ae(d).toString().substring(2),\"%G\":d=>Ae(d),\"%H\":d=>h(d.Sa,2),\"%I\":d=>(d=d.Sa,d==0?d=12:12<d&&(d-=12),h(d,2)),\"%j\":d=>{for(var N=0,G=0;G<=d.Ta-1;N+=(ze(d.Qa+1900)?Xt:Zt)[G++]);return h(d.Wa+N,3)},\"%m\":d=>h(d.Ta+1,2),\"%M\":d=>h(d.pb,2),\"%n\":()=>`\n`,\"%p\":d=>0<=d.Sa&&12>d.Sa?\"AM\":\"PM\",\"%S\":d=>h(d.qb,2),\"%t\":()=>\"\t\",\"%u\":d=>d.Ma||7,\"%U\":d=>h(Math.floor((d.Pa+7-d.Ma)/7),2),\"%V\":d=>{var N=Math.floor((d.Pa+7-(d.Ma+6)%7)/7);if(2>=(d.Ma+371-d.Pa-2)%7&&N++,N)N==53&&(G=(d.Ma+371-d.Pa)%7,G==4||G==3&&ze(d.Qa)||(N=1));else{N=52;var G=(d.Ma+7-d.Pa-1)%7;(G==4||G==5&&ze(d.Qa%400-1))&&N++}return h(N,2)},\"%w\":d=>d.Ma,\"%W\":d=>h(Math.floor((d.Pa+7-(d.Ma+6)%7)/7),2),\"%y\":d=>(d.Qa+1900).toString().substring(2),\"%Y\":d=>d.Qa+1900,\"%z\":d=>{d=d.ob;var N=0<=d;return d=Math.abs(d)/60,(N?\"+\":\"-\")+(\"0000\"+(d/60*100+d%60)).slice(-4)},\"%Z\":d=>d.rb,\"%%\":()=>\"%\"},n=n.replace(/%%/g,\"\\0\\0\");for(le in te)n.includes(le)&&(n=n.replace(new RegExp(le,\"g\"),te[le](f)));return n=n.replace(/\\0\\0/g,\"%\"),le=Hr(n),le.length>t?0:(Yr(le,e),le.length-1)}A.Va();var jr=[null,Qe,Ue,p,T,P,ae,Ke,et,c,W,H,Te,tt,Ut,Lt,Bt,Nt,Ht,zt,Gt,$t,qt,Vt,Jt],zr={b:function(e,t,n){throw e>>>=0,new r(e).Va(t>>>0,n>>>0),i=e,s++,i},N:function(e){er(e>>>0,!k,1,!I,131072,!1),A.Ya()},j:function(e){e>>>=0,_?postMessage({cmd:\"cleanupThread\",thread:e}):it(e)},I:w,h:T,T:P,D:ae,F:Ke,U:et,R:c,J:W,Q:H,n:Te,E:tt,B:Ut,S:Lt,C:Bt,q:()=>!0,z:function(e,t){e>>>=0,e==t>>>0?setTimeout(()=>ut()):_?postMessage({targetThread:e,cmd:\"checkMailbox\"}):(e=A.La[e])&&e.postMessage({cmd:\"checkMailbox\"})},L:function(){return-1},M:pt,p:function(e){L&&A.La[e>>>0].ref()},t:function(e,t,n){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,n>>>=0,e=new Date(1e3*e),l()[n>>2>>>0]=e.getUTCSeconds(),l()[n+4>>2>>>0]=e.getUTCMinutes(),l()[n+8>>2>>>0]=e.getUTCHours(),l()[n+12>>2>>>0]=e.getUTCDate(),l()[n+16>>2>>>0]=e.getUTCMonth(),l()[n+20>>2>>>0]=e.getUTCFullYear()-1900,l()[n+24>>2>>>0]=e.getUTCDay(),e=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,l()[n+28>>2>>>0]=e},u:function(e,t,n){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,n>>>=0,e=new Date(1e3*e),l()[n>>2>>>0]=e.getSeconds(),l()[n+4>>2>>>0]=e.getMinutes(),l()[n+8>>2>>>0]=e.getHours(),l()[n+12>>2>>>0]=e.getDate(),l()[n+16>>2>>>0]=e.getMonth(),l()[n+20>>2>>>0]=e.getFullYear()-1900,l()[n+24>>2>>>0]=e.getDay(),t=(ze(e.getFullYear())?Wt:kt)[e.getMonth()]+e.getDate()-1|0,l()[n+28>>2>>>0]=t,l()[n+36>>2>>>0]=-(60*e.getTimezoneOffset()),t=new Date(e.getFullYear(),6,1).getTimezoneOffset();var f=new Date(e.getFullYear(),0,1).getTimezoneOffset();e=(t!=f&&e.getTimezoneOffset()==Math.min(f,t))|0,l()[n+32>>2>>>0]=e},v:function(e){e>>>=0;var t=new Date(l()[e+20>>2>>>0]+1900,l()[e+16>>2>>>0],l()[e+12>>2>>>0],l()[e+8>>2>>>0],l()[e+4>>2>>>0],l()[e>>2>>>0],0),n=l()[e+32>>2>>>0],f=t.getTimezoneOffset(),b=new Date(t.getFullYear(),6,1).getTimezoneOffset(),h=new Date(t.getFullYear(),0,1).getTimezoneOffset(),v=Math.min(h,b);return 0>n?l()[e+32>>2>>>0]=+(b!=h&&v==f):0<n!=(v==f)&&(b=Math.max(h,b),t.setTime(t.getTime()+6e4*((0<n?v:b)-f))),l()[e+24>>2>>>0]=t.getDay(),n=(ze(t.getFullYear())?Wt:kt)[t.getMonth()]+t.getDate()-1|0,l()[e+28>>2>>>0]=n,l()[e>>2>>>0]=t.getSeconds(),l()[e+4>>2>>>0]=t.getMinutes(),l()[e+8>>2>>>0]=t.getHours(),l()[e+12>>2>>>0]=t.getDate(),l()[e+16>>2>>>0]=t.getMonth(),l()[e+20>>2>>>0]=t.getYear(),e=t.getTime()/1e3,nr((Fe=e,1<=+Math.abs(Fe)?0<Fe?+Math.floor(Fe/4294967296)>>>0:~~+Math.ceil((Fe-+(~~Fe>>>0))/4294967296)>>>0:0)),e>>>0},r:Nt,s:Ht,y:function(e,t,n){function f(te){return(te=te.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?te[1]:\"GMT\"}e>>>=0,t>>>=0,n>>>=0;var b=new Date().getFullYear(),h=new Date(b,0,1),v=new Date(b,6,1);b=h.getTimezoneOffset();var z=v.getTimezoneOffset(),Ae=Math.max(b,z);O()[e>>2>>>0]=60*Ae,l()[t>>2>>>0]=+(b!=z),e=f(h),t=f(v),e=Yt(e),t=Yt(t),z<b?(O()[n>>2>>>0]=e,O()[n+4>>2>>>0]=t):(O()[n>>2>>>0]=t,O()[n+4>>2>>>0]=e)},c:()=>{ge(\"\")},k:function(){},i:function(){return Date.now()},o:()=>{throw Q+=1,\"unwind\"},A:function(){return 4294901760},e:()=>performance.timeOrigin+performance.now(),f:function(){return L?(gr(),nt(mr)).cpus().length:navigator.hardwareConcurrency},K:function(e,t,n,f){for(A.vb=t>>>0,mt.length=n,t=f>>>0>>3,f=0;f<n;f++)mt[f]=g()[t+f>>>0];return jr[e].apply(null,mt)},x:function(e){e>>>=0;var t=y().length;if(e<=t||4294901760<e)return!1;for(var n=1;4>=n;n*=2){var f=t*(1+.2/n);f=Math.min(f,e+100663296);var b=Math;f=Math.max(e,f);e:{b=b.min.call(b,4294901760,f+(65536-f%65536)%65536)-M.buffer.byteLength+65535>>>16;try{M.grow(b),me();var h=1;break e}catch{}h=void 0}if(h)return!0}return!1},O:zt,P:Gt,H:Ye,g:$t,m:qt,w:Vt,l:Jt,a:M||a.wasmMemory,G:Qt,d:function(e,t,n,f){return Qt(e>>>0,t>>>0,n>>>0,f>>>0)}};(function(){function e(n,f){return n=n.exports,E=n=Gr(n),A.Za.push(E.ya),_e=E.za,Ee.unshift(E.V),de=f,ke(),n}var t={a:zr};if(We(),a.instantiateWasm)try{return a.instantiateWasm(t,e)}catch(n){re(\"Module.instantiateWasm callback failed with error: \"+n),x(n)}return Je(t,function(n){e(n.instance,n.module)}).catch(x),{}})(),a._OrtInit=(e,t)=>(a._OrtInit=E.W)(e,t),a._OrtGetLastError=(e,t)=>(a._OrtGetLastError=E.X)(e,t),a._OrtCreateSessionOptions=(e,t,n,f,b,h,v,z,Ae,te)=>(a._OrtCreateSessionOptions=E.Y)(e,t,n,f,b,h,v,z,Ae,te),a._OrtAppendExecutionProvider=(e,t)=>(a._OrtAppendExecutionProvider=E.Z)(e,t),a._OrtAddFreeDimensionOverride=(e,t,n)=>(a._OrtAddFreeDimensionOverride=E._)(e,t,n),a._OrtAddSessionConfigEntry=(e,t,n)=>(a._OrtAddSessionConfigEntry=E.$)(e,t,n),a._OrtReleaseSessionOptions=e=>(a._OrtReleaseSessionOptions=E.aa)(e),a._OrtCreateSession=(e,t,n)=>(a._OrtCreateSession=E.ba)(e,t,n),a._OrtReleaseSession=e=>(a._OrtReleaseSession=E.ca)(e),a._OrtGetInputOutputCount=(e,t,n)=>(a._OrtGetInputOutputCount=E.da)(e,t,n),a._OrtGetInputName=(e,t)=>(a._OrtGetInputName=E.ea)(e,t),a._OrtGetOutputName=(e,t)=>(a._OrtGetOutputName=E.fa)(e,t),a._OrtFree=e=>(a._OrtFree=E.ga)(e),a._OrtCreateTensor=(e,t,n,f,b,h)=>(a._OrtCreateTensor=E.ha)(e,t,n,f,b,h),a._OrtGetTensorData=(e,t,n,f,b)=>(a._OrtGetTensorData=E.ia)(e,t,n,f,b),a._OrtReleaseTensor=e=>(a._OrtReleaseTensor=E.ja)(e),a._OrtCreateRunOptions=(e,t,n,f)=>(a._OrtCreateRunOptions=E.ka)(e,t,n,f),a._OrtAddRunConfigEntry=(e,t,n)=>(a._OrtAddRunConfigEntry=E.la)(e,t,n),a._OrtReleaseRunOptions=e=>(a._OrtReleaseRunOptions=E.ma)(e),a._OrtCreateBinding=e=>(a._OrtCreateBinding=E.na)(e),a._OrtBindInput=(e,t,n)=>(a._OrtBindInput=E.oa)(e,t,n),a._OrtBindOutput=(e,t,n,f)=>(a._OrtBindOutput=E.pa)(e,t,n,f),a._OrtClearBoundOutputs=e=>(a._OrtClearBoundOutputs=E.qa)(e),a._OrtReleaseBinding=e=>(a._OrtReleaseBinding=E.ra)(e),a._OrtRunWithBinding=(e,t,n,f,b)=>(a._OrtRunWithBinding=E.sa)(e,t,n,f,b),a._OrtRun=(e,t,n,f,b,h,v,z)=>(a._OrtRun=E.ta)(e,t,n,f,b,h,v,z),a._OrtEndProfiling=e=>(a._OrtEndProfiling=E.ua)(e);var ft=a._pthread_self=()=>(ft=a._pthread_self=E.va)(),Kt=a._malloc=e=>(Kt=a._malloc=E.wa)(e);a._free=e=>(a._free=E.xa)(e),a.__emscripten_tls_init=()=>(a.__emscripten_tls_init=E.ya)();var er=a.__emscripten_thread_init=(e,t,n,f,b,h)=>(er=a.__emscripten_thread_init=E.Aa)(e,t,n,f,b,h);a.__emscripten_thread_crashed=()=>(a.__emscripten_thread_crashed=E.Ba)();var tr=(e,t,n,f)=>(tr=E.Ca)(e,t,n,f),yt=e=>(yt=E.Da)(e),bt=a.__emscripten_thread_exit=e=>(bt=a.__emscripten_thread_exit=E.Ea)(e),rr=a.__emscripten_check_mailbox=()=>(rr=a.__emscripten_check_mailbox=E.Fa)(),nr=e=>(nr=E.Ga)(e),or=(e,t)=>(or=E.Ha)(e,t),Ot=()=>(Ot=E.Ia)(),lt=e=>(lt=E.Ja)(e),wt=e=>(wt=E.Ka)(e);function Gr(e){e=Object.assign({},e);var t=f=>()=>f()>>>0,n=f=>b=>f(b)>>>0;return e.__errno_location=t(e.__errno_location),e.pthread_self=t(e.pthread_self),e.malloc=n(e.malloc),e.stackSave=t(e.stackSave),e.stackAlloc=n(e.stackAlloc),e}a.keepRuntimeAlive=Se,a.wasmMemory=M,a.stackAlloc=wt,a.stackSave=Ot,a.stackRestore=lt,a.UTF8ToString=He,a.stringToUTF8=oe,a.lengthBytesUTF8=K,a.ExitStatus=Pe,a.PThread=A;var ct;Ce=function e(){ct||ar(),ct||(Ce=e)};function ar(){function e(){if(!ct&&(ct=!0,a.calledRun=!0,!ie)&&(_||je(Ee),R(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),!_)){if(a.postRun)for(typeof a.postRun==\"function\"&&(a.postRun=[a.postRun]);a.postRun.length;){var t=a.postRun.shift();ee.unshift(t)}je(ee)}}if(!(0<pe))if(_)R(a),_||je(Ee),startWorker(a);else{if(a.preRun)for(typeof a.preRun==\"function\"&&(a.preRun=[a.preRun]);a.preRun.length;)se.unshift(a.preRun.shift());je(se),0<pe||(a.setStatus?(a.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){a.setStatus(\"\")},1),e()},1)):e())}}if(a.preInit)for(typeof a.preInit==\"function\"&&(a.preInit=[a.preInit]);0<a.preInit.length;)a.preInit.pop()();return ar(),m.ready}})();typeof yr==\"object\"&&typeof Rt==\"object\"?Rt.exports=hr:typeof define==\"function\"&&define.amd&&define([],()=>hr)});var Or=rt((hn,Kr)=>{Kr.exports='\"use strict\";var Module={},ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require(\"worker_threads\"),parentPort=nodeWorkerThreads.parentPort;parentPort.on(\"message\",e=>onmessage({data:e}));var fs=require(\"fs\");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>(0,eval)(fs.readFileSync(e,\"utf8\")+\"//# sourceURL=\"+e),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(\" \");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(\" \");postMessage({cmd:\"alert\",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason??e};function handleMessage(e){try{if(e.data.cmd===\"load\"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:\"loaded\"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:\"callHandler\",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob==\"string\")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd===\"run\"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!=\"unwind\")throw a}}else e.data.cmd===\"cancel\"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target===\"setimmediate\"||(e.data.cmd===\"checkMailbox\"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(\"worker.js received unknown command \"+e.data.cmd),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed&&Module.__emscripten_thread_crashed(),a}}self.onmessage=handleMessage;\\n'});var vr;vr=cr();var en=br(),Dt,xt=!1,dt=!1,wr=!1,tn=()=>{try{return typeof SharedArrayBuffer>\"u\"?!1:(typeof MessageChannel<\"u\"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch{return!1}},rn=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},nn=(u,m)=>u?m?\"ort-wasm-simd-threaded.wasm\":\"ort-wasm-simd.wasm\":m?\"ort-wasm-threaded.wasm\":\"ort-wasm.wasm\",_r=async u=>{if(xt)return Promise.resolve();if(dt)throw new Error(\"multiple calls to 'initializeWebAssembly()' detected.\");if(wr)throw new Error(\"previous call to 'initializeWebAssembly()' failed.\");dt=!0;let m=u.initTimeout,o=u.numThreads,y=u.simd,l=o>1&&tn(),O=y&&rn(),g=u.wasmPaths,a=typeof g==\"string\"?g:void 0,R=nn(O,l),x=typeof g==\"object\"?g[R]:void 0,U=!1,B=[];if(m>0&&B.push(new Promise(D=>{setTimeout(()=>{U=!0,D()},m)})),B.push(new Promise((D,I)=>{let k=l?en:vr,L={locateFile:(_,F)=>l&&_.endsWith(\".worker.js\")&&typeof Blob<\"u\"?URL.createObjectURL(new Blob([Or()],{type:\"text/javascript\"})):_.endsWith(\".wasm\")?x||(a??F)+R:F+_};if(l)if(typeof Blob>\"u\")L.mainScriptUrlOrBlob=(void 0)(__dirname,\"ort-wasm-threaded.js\");else{let _=`var ortWasmThreaded=${k.toString()};`;L.mainScriptUrlOrBlob=new Blob([_],{type:\"text/javascript\"})}k(L).then(_=>{dt=!1,xt=!0,Dt=_,D()},_=>{dt=!1,wr=!0,I(_)})})),await Promise.race(B),U)throw new Error(`WebAssembly backend initializing failed due to timeout: ${m}ms`)},V=()=>{if(xt&&Dt)return Dt;throw new Error(\"WebAssembly is not initialized yet.\")};var J=(u,m)=>{let o=V(),y=o.lengthBytesUTF8(u)+1,l=o._malloc(y);return o.stringToUTF8(u,l,y),m.push(l),l},ot=(u,m,o,y)=>{if(typeof u==\"object\"&&u!==null){if(o.has(u))throw new Error(\"Circular reference in options\");o.add(u)}Object.entries(u).forEach(([l,O])=>{let g=m?m+l:l;if(typeof O==\"object\")ot(O,g+\".\",o,y);else if(typeof O==\"string\"||typeof O==\"number\")y(g,O.toString());else if(typeof O==\"boolean\")y(g,O?\"1\":\"0\");else throw new Error(`Can't handle extra config type: ${typeof O}`)})},$=u=>{let m=V(),o=m.stackSave();try{let y=m.stackAlloc(8);m._OrtGetLastError(y,y+4);let l=m.HEAP32[y/4],O=m.HEAPU32[y/4+1],g=O?m.UTF8ToString(O):\"\";throw new Error(`${u} ERROR_CODE: ${l}, ERROR_MESSAGE: ${g}`)}finally{m.stackRestore(o)}};var Er=u=>{let m=V(),o=0,y=[],l=u||{};try{if(u?.logSeverityLevel===void 0)l.logSeverityLevel=2;else if(typeof u.logSeverityLevel!=\"number\"||!Number.isInteger(u.logSeverityLevel)||u.logSeverityLevel<0||u.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${u.logSeverityLevel}`);if(u?.logVerbosityLevel===void 0)l.logVerbosityLevel=0;else if(typeof u.logVerbosityLevel!=\"number\"||!Number.isInteger(u.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${u.logVerbosityLevel}`);u?.terminate===void 0&&(l.terminate=!1);let O=0;return u?.tag!==void 0&&(O=J(u.tag,y)),o=m._OrtCreateRunOptions(l.logSeverityLevel,l.logVerbosityLevel,!!l.terminate,O),o===0&&$(\"Can't create run options.\"),u?.extra!==void 0&&ot(u.extra,\"\",new WeakSet,(g,a)=>{let R=J(g,y),x=J(a,y);m._OrtAddRunConfigEntry(o,R,x)!==0&&$(`Can't set a run config entry: ${g} - ${a}.`)}),[o,y]}catch(O){throw o!==0&&m._OrtReleaseRunOptions(o),y.forEach(g=>m._free(g)),O}};var on=u=>{switch(u){case\"disabled\":return 0;case\"basic\":return 1;case\"extended\":return 2;case\"all\":return 99;default:throw new Error(`unsupported graph optimization level: ${u}`)}},an=u=>{switch(u){case\"sequential\":return 0;case\"parallel\":return 1;default:throw new Error(`unsupported execution mode: ${u}`)}},sn=u=>{u.extra||(u.extra={}),u.extra.session||(u.extra.session={});let m=u.extra.session;m.use_ort_model_bytes_directly||(m.use_ort_model_bytes_directly=\"1\"),u.executionProviders&&u.executionProviders.some(o=>(typeof o==\"string\"?o:o.name)===\"webgpu\")&&(u.enableMemPattern=!1)},un=(u,m,o)=>{for(let y of m){let l=typeof y==\"string\"?y:y.name;switch(l){case\"xnnpack\":l=\"XNNPACK\";break;case\"webnn\":if(l=\"WEBNN\",typeof y!=\"string\"){let g=y;if(g?.deviceType){let a=J(\"deviceType\",o),R=J(g.deviceType,o);V()._OrtAddSessionConfigEntry(u,a,R)!==0&&$(`Can't set a session config entry: 'deviceType' - ${g.deviceType}.`)}if(g?.numThreads){let a=g.numThreads;(typeof a!=\"number\"||!Number.isInteger(a)||a<0)&&(a=0);let R=J(\"numThreads\",o),x=J(a.toString(),o);V()._OrtAddSessionConfigEntry(u,R,x)!==0&&$(`Can't set a session config entry: 'numThreads' - ${g.numThreads}.`)}if(g?.powerPreference){let a=J(\"powerPreference\",o),R=J(g.powerPreference,o);V()._OrtAddSessionConfigEntry(u,a,R)!==0&&$(`Can't set a session config entry: 'powerPreference' - ${g.powerPreference}.`)}}break;case\"webgpu\":if(l=\"JS\",typeof y!=\"string\"){let g=y;if(g?.preferredLayout){if(g.preferredLayout!==\"NCHW\"&&g.preferredLayout!==\"NHWC\")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${g.preferredLayout}`);let a=J(\"preferredLayout\",o),R=J(g.preferredLayout,o);V()._OrtAddSessionConfigEntry(u,a,R)!==0&&$(`Can't set a session config entry: 'preferredLayout' - ${g.preferredLayout}.`)}}break;case\"wasm\":case\"cpu\":continue;default:throw new Error(`not supported execution provider: ${l}`)}let O=J(l,o);V()._OrtAppendExecutionProvider(u,O)!==0&&$(`Can't append execution provider: ${l}.`)}},Sr=u=>{let m=V(),o=0,y=[],l=u||{};sn(l);try{let O=on(l.graphOptimizationLevel??\"all\"),g=an(l.executionMode??\"sequential\"),a=typeof l.logId==\"string\"?J(l.logId,y):0,R=l.logSeverityLevel??2;if(!Number.isInteger(R)||R<0||R>4)throw new Error(`log serverity level is not valid: ${R}`);let x=l.logVerbosityLevel??0;if(!Number.isInteger(x)||x<0||x>4)throw new Error(`log verbosity level is not valid: ${x}`);let U=typeof l.optimizedModelFilePath==\"string\"?J(l.optimizedModelFilePath,y):0;if(o=m._OrtCreateSessionOptions(O,!!l.enableCpuMemArena,!!l.enableMemPattern,g,!!l.enableProfiling,0,a,R,x,U),o===0&&$(\"Can't create session options.\"),l.executionProviders&&un(o,l.executionProviders,y),l.freeDimensionOverrides)for(let[B,D]of Object.entries(l.freeDimensionOverrides)){if(typeof B!=\"string\")throw new Error(`free dimension override name must be a string: ${B}`);if(typeof D!=\"number\"||!Number.isInteger(D)||D<0)throw new Error(`free dimension override value must be a non-negative integer: ${D}`);let I=J(B,y);m._OrtAddFreeDimensionOverride(o,I,D)!==0&&$(`Can't set a free dimension override: ${B} - ${D}.`)}return l.extra!==void 0&&ot(l.extra,\"\",new WeakSet,(B,D)=>{let I=J(B,y),k=J(D,y);m._OrtAddSessionConfigEntry(o,I,k)!==0&&$(`Can't set a session config entry: ${B} - ${D}.`)}),[o,y]}catch(O){throw o!==0&&m._OrtReleaseSessionOptions(o),y.forEach(g=>m._free(g)),O}};var It=u=>{switch(u){case\"int8\":return 3;case\"uint8\":return 2;case\"bool\":return 9;case\"int16\":return 5;case\"uint16\":return 4;case\"int32\":return 6;case\"uint32\":return 12;case\"float16\":return 10;case\"float32\":return 1;case\"float64\":return 11;case\"string\":return 8;case\"int64\":return 7;case\"uint64\":return 13;default:throw new Error(`unsupported data type: ${u}`)}},Tr=u=>{switch(u){case 3:return\"int8\";case 2:return\"uint8\";case 9:return\"bool\";case 5:return\"int16\";case 4:return\"uint16\";case 6:return\"int32\";case 12:return\"uint32\";case 10:return\"float16\";case 1:return\"float32\";case 11:return\"float64\";case 8:return\"string\";case 7:return\"int64\";case 13:return\"uint64\";default:throw new Error(`unsupported data type: ${u}`)}},Ft=u=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][u],Ar=u=>{switch(u){case\"float16\":return Uint16Array;case\"float32\":return Float32Array;case\"uint8\":return Uint8Array;case\"int8\":return Int8Array;case\"uint16\":return Uint16Array;case\"int16\":return Int16Array;case\"int32\":return Int32Array;case\"bool\":return Uint8Array;case\"float64\":return Float64Array;case\"uint32\":return Uint32Array;case\"int64\":return BigInt64Array;case\"uint64\":return BigUint64Array;default:throw new Error(`unsupported type: ${u}`)}},Mr=u=>{switch(u){case\"verbose\":return 0;case\"info\":return 1;case\"warning\":return 2;case\"error\":return 3;case\"fatal\":return 4;default:throw new Error(`unsupported logging level: ${u}`)}},Cr=u=>u===\"float32\"||u===\"int32\"||u===\"int64\"||u===\"bool\"||u===\"float16\"||u===\"uint32\",Rr=u=>{switch(u){case\"none\":return 0;case\"cpu\":return 1;case\"cpu-pinned\":return 2;case\"texture\":return 3;case\"gpu-buffer\":return 4;default:throw new Error(`unsupported data location: ${u}`)}};var fn=(u,m)=>{V()._OrtInit(u,m)!==0&&$(\"Can't initialize onnxruntime.\")},xr=async u=>{fn(u.wasm.numThreads,Mr(u.logLevel))},Ir=async(u,m)=>{},at=new Map,ln=u=>{let m=V(),o=m.stackSave();try{let y=m.stackAlloc(8);return m._OrtGetInputOutputCount(u,y,y+4)!==0&&$(\"Can't get session input/output count.\"),[m.HEAP32[y/4],m.HEAP32[y/4+1]]}finally{m.stackRestore(o)}},Pt=u=>{let m=V(),o=m._malloc(u.byteLength);if(o===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${u.byteLength}.`);return m.HEAPU8.set(u,o),[o,u.byteLength]},Fr=(u,m)=>{let o,y,l=V();Array.isArray(u)?[o,y]=u:u.buffer===l.HEAPU8.buffer?[o,y]=[u.byteOffset,u.byteLength]:[o,y]=Pt(u);let O=0,g=0,a=0,R=[],x=[],U=[];try{[g,R]=Sr(m),O=l._OrtCreateSession(o,y,g),O===0&&$(\"Can't create a session.\");let[B,D]=ln(O),I=[],k=[],L=[];for(let F=0;F<B;F++){let q=l._OrtGetInputName(O,F);q===0&&$(\"Can't get an input name.\"),x.push(q),I.push(l.UTF8ToString(q))}for(let F=0;F<D;F++){let q=l._OrtGetOutputName(O,F);q===0&&$(\"Can't get an output name.\"),U.push(q);let De=l.UTF8ToString(q);k.push(De)}let _=null;return at.set(O,[O,x,U,_]),[O,I,k]}catch(B){throw x.forEach(D=>l._OrtFree(D)),U.forEach(D=>l._OrtFree(D)),a!==0&&l._OrtReleaseBinding(a),O!==0&&l._OrtReleaseSession(O),B}finally{l._free(o),g!==0&&l._OrtReleaseSessionOptions(g),R.forEach(B=>l._free(B))}},Pr=u=>{let m=V(),o=at.get(u);if(!o)throw new Error(`cannot release session. invalid session id: ${u}`);let[y,l,O,g]=o;g&&m._OrtReleaseBinding(g.handle),m.jsepUnregisterBuffers?.(u),l.forEach(a=>m._OrtFree(a)),O.forEach(a=>m._OrtFree(a)),m._OrtReleaseSession(y),at.delete(u)},Dr=(u,m,o,y,l)=>{if(!u){m.push(0);return}let O=V(),g=u[0],a=u[1],R=u[3],x,U;if(g===\"string\"&&R===\"gpu-buffer\")throw new Error(\"String tensor is not supported on GPU.\");if(R===\"gpu-buffer\"){let I=u[2].gpuBuffer,k=Ft(It(g));U=a.reduce((L,_)=>L*_,1)*k,x=O.jsepRegisterBuffer(y,l,I,U)}else{let I=u[2];if(Array.isArray(I)){U=4*I.length,x=O._malloc(U),o.push(x);let k=x/4;for(let L=0;L<I.length;L++){if(typeof I[L]!=\"string\")throw new TypeError(`tensor data at index ${L} is not a string`);O.HEAPU32[k++]=J(I[L],o)}}else U=I.byteLength,x=O._malloc(U),o.push(x),O.HEAPU8.set(new Uint8Array(I.buffer,I.byteOffset,U),x)}let B=O.stackSave(),D=O.stackAlloc(4*a.length);try{let I=D/4;a.forEach(L=>O.HEAP32[I++]=L);let k=O._OrtCreateTensor(It(g),x,U,D,a.length,Rr(R));k===0&&$(`Can't create tensor for input/output. session=${y}, index=${l}.`),m.push(k)}finally{O.stackRestore(B)}},Ur=async(u,m,o,y,l,O)=>{let g=V(),a=at.get(u);if(!a)throw new Error(`cannot run inference. invalid session id: ${u}`);let[R,x,U,B]=a,D=m.length,I=y.length,k=0,L=[],_=[],F=[],q=[],De=g.stackSave(),ce=g.stackAlloc(D*4),C=g.stackAlloc(D*4),he=g.stackAlloc(I*4),ye=g.stackAlloc(I*4);try{[k,L]=Er(O);for(let M=0;M<D;M++)Dr(o[M],_,q,u,m[M]);for(let M=0;M<I;M++)Dr(l[M],F,q,u,D+y[M]);let X=ce/4,S=C/4,Z=he/4,re=ye/4;for(let M=0;M<D;M++)g.HEAPU32[X++]=_[M],g.HEAPU32[S++]=x[m[M]];for(let M=0;M<I;M++)g.HEAPU32[Z++]=F[M],g.HEAPU32[re++]=U[y[M]];let be;be=await g._OrtRun(R,C,ce,D,ye,I,he,k),be!==0&&$(\"failed to call OrtRun().\");let Oe=[];for(let M=0;M<I;M++){let E=g.HEAPU32[he/4+M];if(E===F[M]){Oe.push(l[M]);continue}let de=g.stackSave(),ie=g.stackAlloc(4*4),ne=!1,Y,ue=0;try{g._OrtGetTensorData(E,ie,ie+4,ie+8,ie+12)!==0&&$(`Can't access output tensor data on index ${M}.`);let ve=ie/4,xe=g.HEAPU32[ve++];ue=g.HEAPU32[ve++];let me=g.HEAPU32[ve++],Me=g.HEAPU32[ve++],_e=[];for(let ee=0;ee<Me;ee++)_e.push(g.HEAPU32[me/4+ee]);g._OrtFree(me);let se=_e.reduce((ee,Q)=>ee*Q,1);Y=Tr(xe);let Ee=B?.outputPreferredLocations[y[M]];if(Y===\"string\"){if(Ee===\"gpu-buffer\")throw new Error(\"String tensor is not supported on GPU.\");let ee=[],Q=ue/4;for(let Se=0;Se<se;Se++){let pe=g.HEAPU32[Q++],Ie=Se===se-1?void 0:g.HEAPU32[Q]-pe;ee.push(g.UTF8ToString(pe,Ie))}Oe.push([Y,_e,ee,\"cpu\"])}else if(Ee===\"gpu-buffer\"&&se>0){let ee=g.jsepGetBuffer(ue),Q=Ft(xe);if(Q===void 0||!Cr(Y))throw new Error(`Unsupported data type: ${Y}`);ne=!0,Oe.push([Y,_e,{gpuBuffer:ee,download:g.jsepCreateDownloader(ee,se*Q,Y),dispose:()=>{g._OrtReleaseTensor(E)}},\"gpu-buffer\"])}else{let ee=Ar(Y),Q=new ee(se);new Uint8Array(Q.buffer,Q.byteOffset,Q.byteLength).set(g.HEAPU8.subarray(ue,ue+Q.byteLength)),Oe.push([Y,_e,Q,\"cpu\"])}}finally{g.stackRestore(de),Y===\"string\"&&ue&&g._free(ue),ne||g._OrtReleaseTensor(E)}}return B&&g._OrtClearBoundOutputs(B.handle),Oe}finally{g.stackRestore(De),_.forEach(X=>g._OrtReleaseTensor(X)),F.forEach(X=>g._OrtReleaseTensor(X)),q.forEach(X=>g._free(X)),k!==0&&g._OrtReleaseRunOptions(k),L.forEach(X=>g._free(X))}},Lr=u=>{let m=V(),o=at.get(u);if(!o)throw new Error(\"invalid session id\");let y=o[0],l=m._OrtEndProfiling(y);l===0&&$(\"Can't get an profile file name.\"),m._OrtFree(l)},Br=u=>{let m=[];for(let o of u){let y=o[2];!Array.isArray(y)&&\"buffer\"in y&&m.push(y.buffer)}return m};self.onmessage=u=>{let{type:m,in:o}=u.data;try{switch(m){case\"init-wasm\":_r(o.wasm).then(()=>{xr(o).then(()=>{postMessage({type:m})},y=>{postMessage({type:m,err:y})})},y=>{postMessage({type:m,err:y})});break;case\"init-ep\":{let{epName:y,env:l}=o;Ir(l,y).then(()=>{postMessage({type:m})},O=>{postMessage({type:m,err:O})});break}case\"copy-from\":{let{buffer:y}=o,l=Pt(y);postMessage({type:m,out:l});break}case\"create\":{let{model:y,options:l}=o,O=Fr(y,l);postMessage({type:m,out:O});break}case\"release\":Pr(o),postMessage({type:m});break;case\"run\":{let{sessionId:y,inputIndices:l,inputs:O,outputIndices:g,options:a}=o;Ur(y,l,O,g,new Array(g.length).fill(null),a).then(R=>{R.some(x=>x[3]!==\"cpu\")?postMessage({type:m,err:\"Proxy does not support non-cpu tensor location.\"}):postMessage({type:m,out:R},Br(R))},R=>{postMessage({type:m,err:R})});break}case\"end-profiling\":Lr(o),postMessage({type:m});break;default:}}catch(y){postMessage({type:m,err:y})}};})();\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env, InferenceSession} from 'onnxruntime-common';\n\nimport {OrtWasmMessage, SerializableInternalBuffer, SerializableSessionMetadata, SerializableTensorMetadata, TensorMetadata} from './proxy-messages';\nimport * as core from './wasm-core-impl';\nimport {initializeWebAssembly} from './wasm-factory';\n\nconst isProxy = (): boolean => !!env.wasm.proxy && typeof document !== 'undefined';\nlet proxyWorker: Worker|undefined;\nlet initializing = false;\nlet initialized = false;\nlet aborted = false;\n\ntype PromiseCallbacks<T = void> = [resolve: (result: T) => void, reject: (reason: unknown) => void];\nlet initWasmCallbacks: PromiseCallbacks;\nconst queuedCallbacks: Map<OrtWasmMessage['type'], Array<PromiseCallbacks<unknown>>> = new Map();\n\nconst enqueueCallbacks = (type: OrtWasmMessage['type'], callbacks: PromiseCallbacks<unknown>): void => {\n  const queue = queuedCallbacks.get(type);\n  if (queue) {\n    queue.push(callbacks);\n  } else {\n    queuedCallbacks.set(type, [callbacks]);\n  }\n};\n\nconst ensureWorker = (): void => {\n  if (initializing || !initialized || aborted || !proxyWorker) {\n    throw new Error('worker not ready');\n  }\n};\n\nconst onProxyWorkerMessage = (ev: MessageEvent<OrtWasmMessage>): void => {\n  switch (ev.data.type) {\n    case 'init-wasm':\n      initializing = false;\n      if (ev.data.err) {\n        aborted = true;\n        initWasmCallbacks[1](ev.data.err);\n      } else {\n        initialized = true;\n        initWasmCallbacks[0]();\n      }\n      break;\n    case 'init-ep':\n    case 'copy-from':\n    case 'create':\n    case 'release':\n    case 'run':\n    case 'end-profiling': {\n      const callbacks = queuedCallbacks.get(ev.data.type)!;\n      if (ev.data.err) {\n        callbacks.shift()![1](ev.data.err);\n      } else {\n        callbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    }\n    default:\n  }\n};\n\nconst scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src : undefined;\n\nexport const initializeWebAssemblyAndOrtRuntime = async(): Promise<void> => {\n  if (initialized) {\n    return;\n  }\n  if (initializing) {\n    throw new Error('multiple calls to \\'initWasm()\\' detected.');\n  }\n  if (aborted) {\n    throw new Error('previous call to \\'initWasm()\\' failed.');\n  }\n\n  initializing = true;\n\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    // overwrite wasm filepaths\n    if (env.wasm.wasmPaths === undefined) {\n      if (scriptSrc && scriptSrc.indexOf('blob:') !== 0) {\n        env.wasm.wasmPaths = scriptSrc.substr(0, +(scriptSrc).lastIndexOf('/') + 1);\n      }\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      proxyWorker?.terminate();\n\n      const workerUrl = URL.createObjectURL(new Blob(\n          [\n            // This require() function is handled by esbuild plugin to load file content as string.\n            // eslint-disable-next-line @typescript-eslint/no-require-imports\n            require('./proxy-worker/main')\n          ],\n          {type: 'text/javascript'}));\n      proxyWorker = new Worker(workerUrl, {name: 'ort-wasm-proxy-worker'});\n      proxyWorker.onerror = (ev: ErrorEvent) => reject(ev);\n      proxyWorker.onmessage = onProxyWorkerMessage;\n      URL.revokeObjectURL(workerUrl);\n      initWasmCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-wasm', in : env};\n      proxyWorker.postMessage(message);\n    });\n\n  } else {\n    try {\n      await initializeWebAssembly(env.wasm);\n      await core.initRuntime(env);\n      initialized = true;\n    } catch (e) {\n      aborted = true;\n      throw e;\n    } finally {\n      initializing = false;\n    }\n  }\n};\n\nexport const initializeOrtEp = async(epName: string): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      enqueueCallbacks('init-ep', [resolve, reject]);\n      const message: OrtWasmMessage = {type: 'init-ep', in : {epName, env}};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    await core.initEp(env, epName);\n  }\n};\n\nexport const copyFromExternalBuffer = async(buffer: Uint8Array): Promise<SerializableInternalBuffer> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableInternalBuffer>((resolve, reject) => {\n      enqueueCallbacks('copy-from', [resolve, reject]);\n      const message: OrtWasmMessage = {type: 'copy-from', in : {buffer}};\n      proxyWorker!.postMessage(message, [buffer.buffer]);\n    });\n  } else {\n    return core.copyFromExternalBuffer(buffer);\n  }\n};\n\nexport const createSession =\n    async(model: SerializableInternalBuffer|Uint8Array, options?: InferenceSession.SessionOptions):\n        Promise<SerializableSessionMetadata> => {\n          if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n            // check unsupported options\n            if (options?.preferredOutputLocation) {\n              throw new Error('session option \"preferredOutputLocation\" is not supported for proxy.');\n            }\n            ensureWorker();\n            return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n              enqueueCallbacks('create', [resolve, reject]);\n              const message: OrtWasmMessage = {type: 'create', in : {model, options}};\n              const transferable: Transferable[] = [];\n              if (model instanceof Uint8Array) {\n                transferable.push(model.buffer);\n              }\n              proxyWorker!.postMessage(message, transferable);\n            });\n          } else {\n            return core.createSession(model, options);\n          }\n        };\n\nexport const releaseSession = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      enqueueCallbacks('release', [resolve, reject]);\n      const message: OrtWasmMessage = {type: 'release', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.releaseSession(sessionId);\n  }\n};\n\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: TensorMetadata[], outputIndices: number[],\n    outputs: Array<TensorMetadata|null>, options: InferenceSession.RunOptions): Promise<TensorMetadata[]> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    // check inputs location\n    if (inputs.some(t => t[3] !== 'cpu')) {\n      throw new Error('input tensor on GPU is not supported for proxy.');\n    }\n    // check outputs location\n    if (outputs.some(t => t)) {\n      throw new Error('pre-allocated output tensor is not supported for proxy.');\n    }\n    ensureWorker();\n    return new Promise<SerializableTensorMetadata[]>((resolve, reject) => {\n      enqueueCallbacks('run', [resolve, reject]);\n      const serializableInputs = inputs as SerializableTensorMetadata[];  // every input is on CPU.\n      const message: OrtWasmMessage =\n          {type: 'run', in : {sessionId, inputIndices, inputs: serializableInputs, outputIndices, options}};\n      proxyWorker!.postMessage(message, core.extractTransferableBuffers(serializableInputs));\n    });\n  } else {\n    return core.run(sessionId, inputIndices, inputs, outputIndices, outputs, options);\n  }\n};\n\nexport const endProfiling = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      enqueueCallbacks('end-profiling', [resolve, reject]);\n      const message: OrtWasmMessage = {type: 'end-profiling', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.endProfiling(sessionId);\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'node:fs/promises';\nimport {InferenceSession, InferenceSessionHandler, SessionHandler, Tensor} from 'onnxruntime-common';\n\nimport {SerializableInternalBuffer, TensorMetadata} from './proxy-messages';\nimport {copyFromExternalBuffer, createSession, endProfiling, releaseSession, run} from './proxy-wrapper';\nimport {isGpuBufferSupportedType} from './wasm-common';\n\nexport const encodeTensorMetadata = (tensor: Tensor, getName: () => string): TensorMetadata => {\n  switch (tensor.location) {\n    case 'cpu':\n      return [tensor.type, tensor.dims, tensor.data, 'cpu'];\n    case 'gpu-buffer':\n      return [tensor.type, tensor.dims, {gpuBuffer: tensor.gpuBuffer}, 'gpu-buffer'];\n    default:\n      throw new Error(`invalid data location: ${tensor.location} for ${getName()}`);\n  }\n};\n\nexport const decodeTensorMetadata = (tensor: TensorMetadata): Tensor => {\n  switch (tensor[3]) {\n    case 'cpu':\n      return new Tensor(tensor[0], tensor[2], tensor[1]);\n    case 'gpu-buffer': {\n      const dataType = tensor[0];\n      if (!isGpuBufferSupportedType(dataType)) {\n        throw new Error(`not supported data type: ${dataType} for deserializing GPU tensor`);\n      }\n      const {gpuBuffer, download, dispose} = tensor[2];\n      return Tensor.fromGpuBuffer(gpuBuffer, {dataType, dims: tensor[1], download, dispose});\n    }\n    default:\n      throw new Error(`invalid data location: ${tensor[3]}`);\n  }\n};\n\nexport class OnnxruntimeWebAssemblySessionHandler implements InferenceSessionHandler {\n  private sessionId: number;\n\n  inputNames: string[];\n  outputNames: string[];\n\n  async fetchModelAndCopyToWasmMemory(path: string): Promise<SerializableInternalBuffer> {\n    // fetch model from url and move to wasm heap. The arraybufffer that held the http\n    // response is freed once we return\n    const response = await fetch(path);\n    if (response.status !== 200) {\n      throw new Error(`failed to load model: ${path}`);\n    }\n    const arrayBuffer = await response.arrayBuffer();\n    return copyFromExternalBuffer(new Uint8Array(arrayBuffer));\n  }\n\n  async loadModel(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions): Promise<void> {\n    let model: Parameters<typeof createSession>[0];\n\n    if (typeof pathOrBuffer === 'string') {\n      if (typeof process !== 'undefined' && process.versions && process.versions.node) {\n        // node\n        model = await readFile(pathOrBuffer);\n      } else {\n        // browser\n        // fetch model and copy to wasm heap.\n        model = await this.fetchModelAndCopyToWasmMemory(pathOrBuffer);\n      }\n    } else {\n      model = pathOrBuffer;\n    }\n\n    [this.sessionId, this.inputNames, this.outputNames] = await createSession(model, options);\n  }\n\n  async dispose(): Promise<void> {\n    return releaseSession(this.sessionId);\n  }\n\n  async run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType, options: InferenceSession.RunOptions):\n      Promise<SessionHandler.ReturnType> {\n    const inputArray: Tensor[] = [];\n    const inputIndices: number[] = [];\n    Object.entries(feeds).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.inputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid input '${name}'`);\n      }\n      inputArray.push(tensor);\n      inputIndices.push(index);\n    });\n\n    const outputArray: Array<Tensor|null> = [];\n    const outputIndices: number[] = [];\n    Object.entries(fetches).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.outputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid output '${name}'`);\n      }\n      outputArray.push(tensor);\n      outputIndices.push(index);\n    });\n\n    const inputs =\n        inputArray.map((t, i) => encodeTensorMetadata(t, () => `input \"${this.inputNames[inputIndices[i]]}\"`));\n    const outputs = outputArray.map(\n        (t, i) => t ? encodeTensorMetadata(t, () => `output \"${this.outputNames[outputIndices[i]]}\"`) : null);\n\n    const results = await run(this.sessionId, inputIndices, inputs, outputIndices, outputs, options);\n\n    const resultMap: SessionHandler.ReturnType = {};\n    for (let i = 0; i < results.length; i++) {\n      resultMap[this.outputNames[outputIndices[i]]] = outputArray[i] ?? decodeTensorMetadata(results[i]);\n    }\n    return resultMap;\n  }\n\n  startProfiling(): void {\n    // TODO: implement profiling\n  }\n\n  endProfiling(): void {\n    void endProfiling(this.sessionId);\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {cpus} from 'node:os';\nimport {Backend, env, InferenceSession, InferenceSessionHandler} from 'onnxruntime-common';\n\nimport {initializeOrtEp, initializeWebAssemblyAndOrtRuntime} from './wasm/proxy-wrapper';\nimport {OnnxruntimeWebAssemblySessionHandler} from './wasm/session-handler-inference';\n\n/**\n * This function initializes all flags for WebAssembly.\n *\n * Those flags are accessible from `ort.env.wasm`. Users are allow to set those flags before the first inference session\n * being created, to override default value.\n */\nexport const initializeFlags = (): void => {\n  if (typeof env.wasm.initTimeout !== 'number' || env.wasm.initTimeout < 0) {\n    env.wasm.initTimeout = 0;\n  }\n\n  if (typeof env.wasm.simd !== 'boolean') {\n    env.wasm.simd = true;\n  }\n\n  if (typeof env.wasm.proxy !== 'boolean') {\n    env.wasm.proxy = false;\n  }\n\n  if (typeof env.wasm.numThreads !== 'number' || !Number.isInteger(env.wasm.numThreads) || env.wasm.numThreads <= 0) {\n    const numCpuLogicalCores = typeof navigator === 'undefined' ? cpus().length : navigator.hardwareConcurrency;\n    env.wasm.numThreads = Math.min(4, Math.ceil((numCpuLogicalCores || 1) / 2));\n  }\n};\n\nexport class OnnxruntimeWebAssemblyBackend implements Backend {\n  /**\n   * This function initializes the WebAssembly backend.\n   *\n   * This function will be called only once for each backend name. It will be called the first time when\n   * `ort.InferenceSession.create()` is called with a registered backend name.\n   *\n   * @param backendName - the registered backend name.\n   */\n  async init(backendName: string): Promise<void> {\n    // populate wasm flags\n    initializeFlags();\n\n    // init wasm\n    await initializeWebAssemblyAndOrtRuntime();\n\n    // performe EP specific initialization\n    await initializeOrtEp(backendName);\n  }\n  createInferenceSessionHandler(path: string, options?: InferenceSession.SessionOptions):\n      Promise<InferenceSessionHandler>;\n  createInferenceSessionHandler(buffer: Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<InferenceSessionHandler>;\n  async createInferenceSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<InferenceSessionHandler> {\n    const handler = new OnnxruntimeWebAssemblySessionHandler();\n    await handler.loadModel(pathOrBuffer, options);\n    return Promise.resolve(handler);\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {OnnxruntimeWebAssemblyBackend} from './backend-wasm';\nexport const wasmBackend = new OnnxruntimeWebAssemblyBackend();\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports */\n// We use \"require\" instead of \"import\" here because import statement must be put in top level. Our current code does\n// not allow bundler to tree-shaking code as expected because some codes are treated as having side effects.\n// So we import code inside the if-clause to allow bundler remove the code safely.\n\nexport * from 'onnxruntime-common';\nimport * as ort from 'onnxruntime-common';\nexport default ort;\n\nimport {registerBackend, env} from 'onnxruntime-common';\nimport {version} from './version';\n\nif (!BUILD_DEFS.DISABLE_WEBGL) {\n  const onnxjsBackend = require('./backend-onnxjs').onnxjsBackend;\n  registerBackend('webgl', onnxjsBackend, -10);\n}\n\nif (!BUILD_DEFS.DISABLE_WASM) {\n  const wasmBackend = BUILD_DEFS.DISABLE_TRAINING ? require('./backend-wasm-inference').wasmBackend :\n                                                    require('./backend-wasm-training').wasmBackend;\n  if (!BUILD_DEFS.DISABLE_WEBGPU) {\n    registerBackend('webgpu', wasmBackend, 5);\n  }\n  registerBackend('cpu', wasmBackend, 10);\n  registerBackend('wasm', wasmBackend, 10);\n  if (BUILD_DEFS.DISABLE_TRAINING) {\n    registerBackend('xnnpack', wasmBackend, 9);\n    registerBackend('webnn', wasmBackend, 9);\n  }\n}\n\nObject.defineProperty(env.versions, 'web', {value: version, enumerable: true});\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n// This file is generated by /js/scripts/update-version.ts\n// Do not modify file content manually.\n\nexport const version = '1.17.0';\n"],
  "mappings": "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",
  "names": ["backends", "backendsSortedByPriority", "registerBackend", "resolveBackend", "init_backend_impl", "__esmMin", "name", "backend", "priority", "currentBackend", "i", "backendHints", "backendNames", "errors", "backendName", "backendInfo", "isInitializing", "e", "init_backend", "__esmMin", "init_backend_impl", "version", "init_version", "__esmMin", "logLevelValue", "env", "init_env_impl", "__esmMin", "init_version", "version", "value", "env", "init_env", "__esmMin", "init_env_impl", "tensorToDataURL", "tensorToImageData", "init_tensor_conversion_impl", "__esmMin", "tensor", "options", "canvas", "pixels2DContext", "width", "height", "inputformat", "norm", "normMean", "normBias", "stride", "rTensorPointer", "gTensorPointer", "bTensorPointer", "aTensorPointer", "i", "j", "R", "G", "B", "A", "image", "channels", "step", "rImagePointer", "gImagePointer", "bImagePointer", "aImagePointer", "bufferToTensor", "tensorFromImage", "tensorFromTexture", "tensorFromGpuBuffer", "tensorFromPinnedBuffer", "init_tensor_factory_impl", "__esmMin", "init_tensor_impl", "buffer", "options", "height", "width", "norm", "normMean", "normBias", "inputformat", "outputformat", "stride", "float32Data", "step", "rImagePointer", "gImagePointer", "bImagePointer", "aImagePointer", "rTensorPointer", "gTensorPointer", "bTensorPointer", "aTensorPointer", "i", "Tensor", "image", "isHTMLImageEle", "isImageDataEle", "isImageBitmap", "isString", "data", "bufferToTensorOptions", "canvas", "pixels2DContext", "tempCanvas", "resolve", "reject", "context", "newImage", "img", "texture", "download", "dispose", "dims", "gpuBuffer", "dataType", "type", "NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP", "NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP", "isBigIntChecked", "checkBigInt", "init_tensor_impl_type_mapping", "__esmMin", "isBigInt64ArrayAvailable", "isBigUint64ArrayAvailable", "calculateSize", "tensorReshape", "init_tensor_utils_impl", "__esmMin", "init_tensor_impl", "dims", "size", "i", "dim", "tensor", "Tensor", "Tensor", "init_tensor_impl", "__esmMin", "init_tensor_conversion_impl", "init_tensor_factory_impl", "init_tensor_impl_type_mapping", "init_tensor_utils_impl", "arg0", "arg1", "arg2", "checkBigInt", "type", "dims", "expectedTypedArrayConstructor", "NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP", "data", "maybeDims", "typedArrayConstructor", "firstElementType", "mappedType", "NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP", "size", "calculateSize", "image", "options", "tensorFromImage", "texture", "tensorFromTexture", "gpuBuffer", "tensorFromGpuBuffer", "buffer", "tensorFromPinnedBuffer", "tensorToDataURL", "tensorToImageData", "releaseData", "tensorReshape", "Tensor", "init_tensor", "__esmMin", "init_tensor_impl", "InferenceSession", "init_inference_session_impl", "__esmMin", "init_backend_impl", "init_tensor", "_InferenceSession", "handler", "feeds", "arg1", "arg2", "fetches", "options", "Tensor", "isFetchesEmpty", "name", "isFetches", "arg1Keys", "v", "results", "returnValue", "key", "result", "arg0", "arg3", "filePathOrUint8Array", "buffer", "byteOffset", "byteLength", "backendHints", "i", "resolveBackend", "InferenceSession", "init_inference_session", "__esmMin", "init_inference_session_impl", "init_onnx_value", "__esmMin", "noBackendErrMsg", "TrainingSession", "init_training_session_impl", "__esmMin", "init_backend_impl", "init_tensor", "_TrainingSession", "handler", "hasOptimizerModel", "hasEvalModel", "trainingOptions", "sessionOptions", "evalModel", "optimizerModel", "options", "backendHints", "i", "backend", "resolveBackend", "inputNames", "outputNames", "feeds", "arg1", "arg2", "fetches", "Tensor", "isFetchesEmpty", "name", "isFetches", "arg1Keys", "v", "results", "returnValue", "key", "result", "trainableOnly", "array", "paramsSize", "TrainingSession", "init_training_session", "__esmMin", "init_training_session_impl", "esm_exports", "__export", "InferenceSession", "Tensor", "TrainingSession", "env", "registerBackend", "init_esm", "__esmMin", "init_backend", "init_env", "init_inference_session", "init_tensor", "init_onnx_value", "init_training_session", "fs_exports", "__export", "readFile", "init_fs", "__esmMin", "path_exports", "__export", "join", "init_path", "__esmMin", "require_ort_wasm", "__commonJSMin", "exports", "module", "ortWasm", "_scriptDir", "moduleArg", "e", "k", "l", "a", "b", "q", "v", "aa", "x", "ba", "y", "A", "B", "C", "fs", "D", "f", "g", "h", "ca", "E", "F", "noExitRuntime", "H", "I", "da", "J", "L", "M", "ea", "fa", "ha", "ia", "ja", "N", "O", "P", "ka", "Q", "la", "ma", "na", "oa", "pa", "R", "S", "qa", "ra", "sa", "ta", "ua", "m", "T", "U", "V", "r", "W", "va", "wa", "Ba", "Aa", "X", "Ca", "Y", "Da", "Ea", "Fa", "Ga", "Ha", "d", "n", "p", "xa", "z", "w", "t", "u", "ya", "za", "Ja", "Ia", "Ka", "La", "Ma", "Na", "Z", "Oa", "Pa", "require_worker_threads", "__commonJSMin", "require_perf_hooks", "__commonJSMin", "os_exports", "__export", "cpus", "init_os", "__esmMin", "require_ort_wasm_threaded", "__commonJSMin", "exports", "module", "ortWasmThreaded", "_scriptDir", "moduleArg", "aa", "d", "l", "m", "n", "ba", "p", "ca", "r", "da", "ea", "fa", "w", "ha", "x", "a", "b", "ia", "ja", "z", "ka", "A", "B", "D", "E", "la", "ma", "F", "H", "fs", "na", "c", "e", "h", "g", "k", "oa", "pa", "qa", "I", "J", "noExitRuntime", "K", "L", "ra", "M", "N", "O", "sa", "ta", "ua", "va", "wa", "P", "Q", "xa", "R", "ya", "za", "Aa", "S", "Ba", "Ca", "Da", "Ea", "T", "U", "Fa", "Ga", "V", "Ha", "Ia", "Ja", "Ka", "La", "W", "Na", "Ma", "Oa", "X", "t", "Y", "Pa", "Qa", "Ra", "Sa", "Ta", "Ua", "Va", "Wa", "Xa", "Ya", "Za", "$a", "ab", "bb", "cb", "db", "eb", "fb", "gb", "hb", "ib", "jb", "kb", "lb", "mb", "nb", "ob", "pb", "qb", "Z", "rb", "sb", "tb", "ub", "wb", "vb", "yb", "xb", "zb", "Ab", "Bb", "Cb", "Eb", "Db", "Fb", "Gb", "Hb", "Lb", "Mb", "Nb", "Ob", "C", "v", "y", "Pb", "Qb", "Rb", "Sb", "Tb", "f", "q", "u", "Ib", "G", "Jb", "Kb", "Ub", "Xb", "Vb", "Wb", "Yb", "Zb", "$b", "ac", "require_ort_wasm_threaded_worker", "__commonJSMin", "exports", "module", "ortWasmFactory", "ortWasmFactoryThreaded", "wasm", "initialized", "initializing", "aborted", "isMultiThreadSupported", "isSimdSupported", "getWasmFileName", "initializeWebAssembly", "getInstance", "init_wasm_factory", "__esmMin", "useSimd", "useThreads", "flags", "timeout", "numThreads", "simd", "wasmPaths", "wasmPrefixOverride", "wasmFileName", "wasmPathOverride", "isTimeout", "tasks", "resolve", "reject", "factory", "config", "fileName", "scriptDirectory", "scriptSourceCode", "module", "what", "allocWasmString", "iterateExtraOptions", "checkLastError", "init_wasm_utils", "__esmMin", "init_wasm_factory", "data", "allocs", "wasm", "getInstance", "dataLength", "dataOffset", "options", "prefix", "seen", "handler", "key", "value", "name", "message", "stack", "paramsOffset", "errorCode", "errorMessagePointer", "errorMessage", "setRunOptions", "init_run_options", "__esmMin", "init_wasm_factory", "init_wasm_utils", "options", "wasm", "getInstance", "runOptionsHandle", "allocs", "runOptions", "tagDataOffset", "allocWasmString", "checkLastError", "iterateExtraOptions", "key", "value", "keyDataOffset", "valueDataOffset", "e", "alloc", "getGraphOptimzationLevel", "getExecutionMode", "appendDefaultOptions", "setExecutionProviders", "setSessionOptions", "init_session_options", "__esmMin", "init_wasm_factory", "init_wasm_utils", "graphOptimizationLevel", "executionMode", "options", "session", "ep", "sessionOptionsHandle", "executionProviders", "allocs", "epName", "webnnOptions", "keyDataOffset", "allocWasmString", "valueDataOffset", "getInstance", "checkLastError", "numThreads", "webgpuOptions", "epNameDataOffset", "wasm", "sessionOptions", "logIdDataOffset", "logSeverityLevel", "logVerbosityLevel", "optimizedModelFilePathOffset", "name", "value", "nameOffset", "iterateExtraOptions", "key", "e", "alloc", "tensorDataTypeStringToEnum", "tensorDataTypeEnumToString", "getTensorElementSize", "tensorTypeToTypedArrayConstructor", "logLevelStringToEnum", "isGpuBufferSupportedType", "dataLocationStringToEnum", "init_wasm_common", "__esmMin", "type", "typeProto", "dateType", "logLevel", "location", "initOrt", "initRuntime", "initEp", "activeSessions", "getSessionInputOutputCount", "copyFromExternalBuffer", "createSession", "releaseSession", "prepareInputOutputTensor", "run", "endProfiling", "extractTransferableBuffers", "init_wasm_core_impl", "__esmMin", "init_run_options", "init_session_options", "init_wasm_common", "init_wasm_factory", "init_wasm_utils", "numThreads", "loggingLevel", "getInstance", "checkLastError", "env", "logLevelStringToEnum", "epName", "sessionHandle", "wasm", "stack", "dataOffset", "model", "modelDataOffset", "modelData", "options", "modelDataLength", "sessionOptionsHandle", "ioBindingHandle", "allocs", "inputNamesUTF8Encoded", "outputNamesUTF8Encoded", "setSessionOptions", "inputCount", "outputCount", "inputNames", "outputNames", "outputPreferredLocations", "i", "name", "nameString", "bindingState", "e", "buf", "alloc", "sessionId", "session", "ioBindingState", "tensor", "tensorHandles", "index", "dataType", "dims", "location", "rawData", "dataByteLength", "gpuBuffer", "elementSizeInBytes", "getTensorElementSize", "tensorDataTypeStringToEnum", "a", "b", "data", "dataIndex", "allocWasmString", "dimsOffset", "dimIndex", "d", "dataLocationStringToEnum", "inputIndices", "inputTensors", "outputIndices", "outputTensors", "runOptionsHandle", "runOptionsAllocs", "inputTensorHandles", "outputTensorHandles", "inputOutputAllocs", "beforeRunStack", "inputValuesOffset", "inputNamesOffset", "outputValuesOffset", "outputNamesOffset", "setRunOptions", "inputValuesIndex", "inputNamesIndex", "outputValuesIndex", "outputNamesIndex", "errorCode", "output", "beforeGetTensorDataStack", "tensorDataOffset", "keepOutputTensor", "type", "tensorDataIndex", "dimsLength", "size", "tensorDataTypeEnumToString", "preferredLocation", "stringData", "offset", "maxBytesToRead", "elementSize", "isGpuBufferSupportedType", "typedArrayConstructor", "tensorTypeToTypedArrayConstructor", "v", "p", "profileFileName", "tensors", "buffers", "require_main", "__commonJSMin", "exports", "module", "isProxy", "proxyWorker", "initializing", "initialized", "aborted", "initWasmCallbacks", "queuedCallbacks", "enqueueCallbacks", "ensureWorker", "onProxyWorkerMessage", "scriptSrc", "initializeWebAssemblyAndOrtRuntime", "initializeOrtEp", "copyFromExternalBuffer", "createSession", "releaseSession", "run", "endProfiling", "init_proxy_wrapper", "__esmMin", "init_esm", "init_wasm_core_impl", "init_wasm_factory", "env", "type", "callbacks", "queue", "ev", "resolve", "reject", "workerUrl", "message", "initializeWebAssembly", "initRuntime", "e", "epName", "initEp", "buffer", "model", "options", "transferable", "sessionId", "inputIndices", "inputs", "outputIndices", "outputs", "t", "serializableInputs", "extractTransferableBuffers", "encodeTensorMetadata", "decodeTensorMetadata", "OnnxruntimeWebAssemblySessionHandler", "init_session_handler_inference", "__esmMin", "init_esm", "init_proxy_wrapper", "init_wasm_common", "tensor", "getName", "Tensor", "dataType", "isGpuBufferSupportedType", "gpuBuffer", "download", "dispose", "path", "response", "arrayBuffer", "copyFromExternalBuffer", "pathOrBuffer", "options", "model", "createSession", "releaseSession", "feeds", "fetches", "inputArray", "inputIndices", "kvp", "name", "index", "outputArray", "outputIndices", "inputs", "t", "i", "outputs", "results", "run", "resultMap", "endProfiling", "initializeFlags", "OnnxruntimeWebAssemblyBackend", "init_backend_wasm", "__esmMin", "init_esm", "init_proxy_wrapper", "init_session_handler_inference", "env", "numCpuLogicalCores", "backendName", "initializeWebAssemblyAndOrtRuntime", "initializeOrtEp", "pathOrBuffer", "options", "handler", "OnnxruntimeWebAssemblySessionHandler", "backend_wasm_inference_exports", "__export", "wasmBackend", "init_backend_wasm_inference", "__esmMin", "init_backend_wasm", "OnnxruntimeWebAssemblyBackend", "lib_exports", "__export", "InferenceSession", "Tensor", "TrainingSession", "lib_default", "env", "registerBackend", "__toCommonJS", "init_esm", "version", "lib_default", "esm_exports", "wasmBackend", "registerBackend", "env", "version"]
}
