/*!
 * ONNX Runtime Web v1.18.0
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
"use strict";var Ta=Object.defineProperty;var Md=Object.getOwnPropertyDescriptor;var zd=Object.getOwnPropertyNames;var Ud=Object.prototype.hasOwnProperty;var j=(e,t)=>()=>(e&&(t=e(e=0)),t);var _r=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),sr=(e,t)=>{for(var r in t)Ta(e,r,{get:t[r],enumerable:!0})},Wd=(e,t,r,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of zd(t))!Ud.call(e,i)&&i!==r&&Ta(e,i,{get:()=>t[i],enumerable:!(n=Md(t,i))||n.enumerable});return e};var Kt=e=>Wd(Ta({},"__esModule",{value:!0}),e);var Pn,ur,Yt,Rn,Bn=j(()=>{Pn=new Map,ur=[],Yt=(e,t,r)=>{if(t&&typeof t.init=="function"&&typeof t.createInferenceSessionHandler=="function"){let n=Pn.get(e);if(n===void 0)Pn.set(e,{backend:t,priority:r});else{if(n.priority>r)return;if(n.priority===r&&n.backend!==t)throw new Error(`cannot register backend "${e}" using priority ${r}`)}if(r>=0){let i=ur.indexOf(e);i!==-1&&ur.splice(i,1);for(let u=0;u<ur.length;u++)if(Pn.get(ur[u]).priority<=r){ur.splice(u,0,e);return}ur.push(e)}return}throw new TypeError("not a valid backend")},Rn=async e=>{let t=e.length===0?ur:e,r=[];for(let n of t){let i=Pn.get(n);if(i){if(i.initialized)return i.backend;if(i.aborted)continue;let u=!!i.initPromise;try{return u||(i.initPromise=i.backend.init(n)),await i.initPromise,i.initialized=!0,i.backend}catch(o){u||r.push({name:n,err:o}),i.aborted=!0}finally{delete i.initPromise}}}throw new Error(`no available backend found. ERR: ${r.map(n=>`[${n.name}] ${n.err}`).join(", ")}`)}});var Ki=j(()=>{Bn()});var Yi,Zi=j(()=>{Yi="1.18.0"});var Xi,lr,Ea=j(()=>{Zi();Xi="warning",lr={wasm:{},webgl:{},webgpu:{},versions:{common:Yi},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);Xi=e}},get logLevel(){return Xi}};Object.defineProperty(lr,"logLevel",{enumerable:!0})});var Pe,Ji=j(()=>{Ea();Pe=lr});var Qi,eo,to=j(()=>{Qi=(e,t)=>{let r=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);r.width=e.dims[3],r.height=e.dims[2];let n=r.getContext("2d");if(n!=null){let i,u;t?.tensorLayout!==void 0&&t.tensorLayout==="NHWC"?(i=e.dims[2],u=e.dims[3]):(i=e.dims[3],u=e.dims[2]);let o=t?.format!==void 0?t.format:"RGB",c=t?.norm,p,m;c===void 0||c.mean===void 0?p=[255,255,255,255]:typeof c.mean=="number"?p=[c.mean,c.mean,c.mean,c.mean]:(p=[c.mean[0],c.mean[1],c.mean[2],0],c.mean[3]!==void 0&&(p[3]=c.mean[3])),c===void 0||c.bias===void 0?m=[0,0,0,0]:typeof c.bias=="number"?m=[c.bias,c.bias,c.bias,c.bias]:(m=[c.bias[0],c.bias[1],c.bias[2],0],c.bias[3]!==void 0&&(m[3]=c.bias[3]));let l=u*i,g=0,b=l,$=l*2,v=-1;o==="RGBA"?(g=0,b=l,$=l*2,v=l*3):o==="RGB"?(g=0,b=l,$=l*2):o==="RBG"&&(g=0,$=l,b=l*2);for(let x=0;x<u;x++)for(let T=0;T<i;T++){let C=(e.data[g++]-m[0])*p[0],S=(e.data[b++]-m[1])*p[1],A=(e.data[$++]-m[2])*p[2],O=v===-1?255:(e.data[v++]-m[3])*p[3];n.fillStyle="rgba("+C+","+S+","+A+","+O+")",n.fillRect(T,x,1,1)}if("toDataURL"in r)return r.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},eo=(e,t)=>{let r=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),n;if(r!=null){let i,u,o;t?.tensorLayout!==void 0&&t.tensorLayout==="NHWC"?(i=e.dims[2],u=e.dims[1],o=e.dims[3]):(i=e.dims[3],u=e.dims[2],o=e.dims[1]);let c=t!==void 0&&t.format!==void 0?t.format:"RGB",p=t?.norm,m,l;p===void 0||p.mean===void 0?m=[255,255,255,255]:typeof p.mean=="number"?m=[p.mean,p.mean,p.mean,p.mean]:(m=[p.mean[0],p.mean[1],p.mean[2],255],p.mean[3]!==void 0&&(m[3]=p.mean[3])),p===void 0||p.bias===void 0?l=[0,0,0,0]:typeof p.bias=="number"?l=[p.bias,p.bias,p.bias,p.bias]:(l=[p.bias[0],p.bias[1],p.bias[2],0],p.bias[3]!==void 0&&(l[3]=p.bias[3]));let g=u*i;if(t!==void 0&&(t.format!==void 0&&o===4&&t.format!=="RGBA"||o===3&&t.format!=="RGB"&&t.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let b=4,$=0,v=1,x=2,T=3,C=0,S=g,A=g*2,O=-1;c==="RGBA"?(C=0,S=g,A=g*2,O=g*3):c==="RGB"?(C=0,S=g,A=g*2):c==="RBG"&&(C=0,A=g,S=g*2),n=r.createImageData(i,u);for(let M=0;M<u*i;$+=b,v+=b,x+=b,T+=b,M++)n.data[$]=(e.data[C++]-l[0])*m[0],n.data[v]=(e.data[S++]-l[1])*m[1],n.data[x]=(e.data[A++]-l[2])*m[2],n.data[T]=O===-1?255:(e.data[O++]-l[3])*m[3]}else throw new Error("Can not access image data");return n}});var Oa,ro,no,ao,io,oo=j(()=>{Dn();Oa=(e,t)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(t.height===void 0||t.width===void 0)throw new Error("Image height and width must be defined");if(t.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:r,width:n}=t,i=t.norm??{mean:255,bias:0},u,o;typeof i.mean=="number"?u=[i.mean,i.mean,i.mean,i.mean]:u=[i.mean[0],i.mean[1],i.mean[2],i.mean[3]??255],typeof i.bias=="number"?o=[i.bias,i.bias,i.bias,i.bias]:o=[i.bias[0],i.bias[1],i.bias[2],i.bias[3]??0];let c=t.format!==void 0?t.format:"RGBA",p=t.tensorFormat!==void 0&&t.tensorFormat!==void 0?t.tensorFormat:"RGB",m=r*n,l=p==="RGBA"?new Float32Array(m*4):new Float32Array(m*3),g=4,b=0,$=1,v=2,x=3,T=0,C=m,S=m*2,A=-1;c==="RGB"&&(g=3,b=0,$=1,v=2,x=-1),p==="RGBA"?A=m*3:p==="RBG"?(T=0,S=m,C=m*2):p==="BGR"&&(S=0,C=m,T=m*2);for(let M=0;M<m;M++,b+=g,v+=g,$+=g,x+=g)l[T++]=(e[b]+o[0])/u[0],l[C++]=(e[$]+o[1])/u[1],l[S++]=(e[v]+o[2])/u[2],A!==-1&&x!==-1&&(l[A++]=(e[x]+o[3])/u[3]);return p==="RGBA"?new ut("float32",l,[1,4,r,n]):new ut("float32",l,[1,3,r,n])},ro=async(e,t)=>{let r=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,n=typeof ImageData<"u"&&e instanceof ImageData,i=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,u=typeof e=="string",o,c=t??{},p=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},m=l=>l instanceof HTMLCanvasElement||l instanceof OffscreenCanvas?l.getContext("2d"):null;if(r){let l=p();l.width=e.width,l.height=e.height;let g=m(l);if(g!=null){let b=e.height,$=e.width;if(t!==void 0&&t.resizedHeight!==void 0&&t.resizedWidth!==void 0&&(b=t.resizedHeight,$=t.resizedWidth),t!==void 0){if(c=t,t.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");c.tensorFormat="RGBA",c.height=b,c.width=$}else c.tensorFormat="RGBA",c.height=b,c.width=$;g.drawImage(e,0,0),o=g.getImageData(0,0,$,b).data}else throw new Error("Can not access image data")}else if(n){let l,g;if(t!==void 0&&t.resizedWidth!==void 0&&t.resizedHeight!==void 0?(l=t.resizedHeight,g=t.resizedWidth):(l=e.height,g=e.width),t!==void 0&&(c=t),c.format="RGBA",c.height=l,c.width=g,t!==void 0){let b=p();b.width=g,b.height=l;let $=m(b);if($!=null)$.putImageData(e,0,0),o=$.getImageData(0,0,g,l).data;else throw new Error("Can not access image data")}else o=e.data}else if(i){if(t===void 0)throw new Error("Please provide image config with format for Imagebitmap");let l=p();l.width=e.width,l.height=e.height;let g=m(l);if(g!=null){let b=e.height,$=e.width;return g.drawImage(e,0,0,$,b),o=g.getImageData(0,0,$,b).data,c.height=b,c.width=$,Oa(o,c)}else throw new Error("Can not access image data")}else{if(u)return new Promise((l,g)=>{let b=p(),$=m(b);if(!e||!$)return g();let v=new Image;v.crossOrigin="Anonymous",v.src=e,v.onload=()=>{b.width=v.width,b.height=v.height,$.drawImage(v,0,0,b.width,b.height);let x=$.getImageData(0,0,b.width,b.height);c.height=b.height,c.width=b.width,l(Oa(x.data,c))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(o!==void 0)return Oa(o,c);throw new Error("Input data provided is not supported - aborted tensor creation")},no=(e,t)=>{let{width:r,height:n,download:i,dispose:u}=t,o=[1,n,r,4];return new ut({location:"texture",type:"float32",texture:e,dims:o,download:i,dispose:u})},ao=(e,t)=>{let{dataType:r,dims:n,download:i,dispose:u}=t;return new ut({location:"gpu-buffer",type:r??"float32",gpuBuffer:e,dims:n,download:i,dispose:u})},io=(e,t,r)=>new ut({location:"cpu-pinned",type:e,data:t,dims:r??[t.length]})});var Yr,Mn,so,uo,lo=j(()=>{Yr=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["float16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),Mn=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),so=!1,uo=()=>{if(!so){so=!0;let e=typeof BigInt64Array<"u"&&typeof BigInt64Array.from=="function",t=typeof BigUint64Array<"u"&&typeof BigUint64Array.from=="function";e&&(Yr.set("int64",BigInt64Array),Mn.set(BigInt64Array,"int64")),t&&(Yr.set("uint64",BigUint64Array),Mn.set(BigUint64Array,"uint64"))}}});var co,po,fo=j(()=>{Dn();co=e=>{let t=1;for(let r=0;r<e.length;r++){let n=e[r];if(typeof n!="number"||!Number.isSafeInteger(n))throw new TypeError(`dims[${r}] must be an integer, got: ${n}`);if(n<0)throw new RangeError(`dims[${r}] must be a non-negative integer, got: ${n}`);t*=n}return t},po=(e,t)=>{switch(e.location){case"cpu":return new ut(e.type,e.data,t);case"cpu-pinned":return new ut({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new ut({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new ut({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}});var ut,Dn=j(()=>{to();oo();lo();fo();ut=class{constructor(t,r,n){uo();let i,u;if(typeof t=="object"&&"location"in t)switch(this.dataLocation=t.location,i=t.type,u=t.dims,t.location){case"cpu-pinned":{let c=Yr.get(i);if(!c)throw new TypeError(`unsupported type "${i}" to create tensor from pinned buffer`);if(!(t.data instanceof c))throw new TypeError(`buffer should be of type ${c.name}`);this.cpuData=t.data;break}case"texture":{if(i!=="float32")throw new TypeError(`unsupported type "${i}" to create tensor from texture`);this.gpuTextureData=t.texture,this.downloader=t.download,this.disposer=t.dispose;break}case"gpu-buffer":{if(i!=="float32"&&i!=="float16"&&i!=="int32"&&i!=="int64"&&i!=="uint32"&&i!=="bool")throw new TypeError(`unsupported type "${i}" to create tensor from gpu buffer`);this.gpuBufferData=t.gpuBuffer,this.downloader=t.download,this.disposer=t.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let c,p;if(typeof t=="string")if(i=t,p=n,t==="string"){if(!Array.isArray(r))throw new TypeError("A string tensor's data must be a string array.");c=r}else{let m=Yr.get(t);if(m===void 0)throw new TypeError(`Unsupported tensor type: ${t}.`);if(Array.isArray(r)){if(t==="float16")throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");t==="uint64"||t==="int64"?c=m.from(r,BigInt):c=m.from(r)}else if(r instanceof m)c=r;else throw new TypeError(`A ${i} tensor's data must be type of ${m}`)}else if(p=r,Array.isArray(t)){if(t.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let m=typeof t[0];if(m==="string")i="string",c=t;else if(m==="boolean")i="bool",c=Uint8Array.from(t);else throw new TypeError(`Invalid element type of data array: ${m}.`)}else{let m=Mn.get(t.constructor);if(m===void 0)throw new TypeError(`Unsupported type for tensor data: ${t.constructor}.`);i=m,c=t}if(p===void 0)p=[c.length];else if(!Array.isArray(p))throw new TypeError("A tensor's dims must be a number array");u=p,this.cpuData=c,this.dataLocation="cpu"}let o=co(u);if(this.cpuData&&o!==this.cpuData.length)throw new Error(`Tensor's size(${o}) does not match data length(${this.cpuData.length}).`);this.type=i,this.dims=u,this.size=o}static async fromImage(t,r){return ro(t,r)}static fromTexture(t,r){return no(t,r)}static fromGpuBuffer(t,r){return ao(t,r)}static fromPinnedBuffer(t,r,n){return io(t,r,n)}toDataURL(t){return Qi(this,t)}toImageData(t){return eo(this,t)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(t){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let r=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=r,t&&this.disposer&&(this.disposer(),this.disposer=void 0),r}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(t){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return po(this,t)}}});var et,zn=j(()=>{Dn();et=ut});var Zr,mo,ft,mt,ka=j(()=>{Ea();Zr=(e,t)=>{lr.wasm.trace&&console.timeStamp(`${e}::ORT::${t}`)},mo=(e,t)=>{let r=new Error().stack?.split(/\r\n|\r|\n/g)||[],n=!1;for(let i=0;i<r.length;i++){if(n&&!r[i].includes("TRACE_FUNC")){let u=`FUNC_${e}::${r[i].trim().split(" ")[1]}`;t&&(u+=`::${t}`),Zr("CPU",u);return}r[i].includes("TRACE_FUNC")&&(n=!0)}},ft=e=>{lr.wasm.trace&&mo("BEGIN",e)},mt=e=>{lr.wasm.trace&&mo("END",e)}});var Un,ho=j(()=>{Bn();zn();ka();Un=class e{constructor(t){this.handler=t}async run(t,r,n){ft();let i={},u={};if(typeof t!="object"||t===null||t instanceof et||Array.isArray(t))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let o=!0;if(typeof r=="object"){if(r===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof et)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(r.length===0)throw new TypeError("'fetches' cannot be an empty array.");o=!1;for(let m of r){if(typeof m!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(m)===-1)throw new RangeError(`'fetches' contains invalid output name: ${m}.`);i[m]=null}if(typeof n=="object"&&n!==null)u=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else{let m=!1,l=Object.getOwnPropertyNames(r);for(let g of this.outputNames)if(l.indexOf(g)!==-1){let b=r[g];(b===null||b instanceof et)&&(m=!0,o=!1,i[g]=b)}if(m){if(typeof n=="object"&&n!==null)u=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else u=r}}else if(typeof r<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let m of this.inputNames)if(typeof t[m]>"u")throw new Error(`input '${m}' is missing in 'feeds'.`);if(o)for(let m of this.outputNames)i[m]=null;let c=await this.handler.run(t,i,u),p={};for(let m in c)if(Object.hasOwnProperty.call(c,m)){let l=c[m];l instanceof et?p[m]=l:p[m]=new et(l.type,l.data,l.dims)}return mt(),p}async release(){return this.handler.dispose()}static async create(t,r,n,i){ft();let u,o={};if(typeof t=="string"){if(u=t,typeof r=="object"&&r!==null)o=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof Uint8Array){if(u=t,typeof r=="object"&&r!==null)o=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&t instanceof SharedArrayBuffer){let g=t,b=0,$=t.byteLength;if(typeof r=="object"&&r!==null)o=r;else if(typeof r=="number"){if(b=r,!Number.isSafeInteger(b))throw new RangeError("'byteOffset' must be an integer.");if(b<0||b>=g.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${g.byteLength}).`);if($=t.byteLength-b,typeof n=="number"){if($=n,!Number.isSafeInteger($))throw new RangeError("'byteLength' must be an integer.");if($<=0||b+$>g.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${g.byteLength-b}].`);if(typeof i=="object"&&i!==null)o=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else if(typeof n<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof r<"u")throw new TypeError("'options' must be an object.");u=new Uint8Array(g,b,$)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let p=(o.executionProviders||[]).map(g=>typeof g=="string"?g:g.name),l=await(await Rn(p)).createInferenceSessionHandler(u,o);return mt(),new e(l)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}});var go,yo=j(()=>{ho();go=Un});var bo=j(()=>{});var Nd,Wn,vo=j(()=>{Bn();zn();Nd="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.",Wn=class e{constructor(t,r,n){this.handler=t,this.hasOptimizerModel=r,this.hasEvalModel=n}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(t,r){let n=t.evalModel||"",i=t.optimizerModel||"",u=r||{},c=(u.executionProviders||[]).map(m=>typeof m=="string"?m:m.name),p=await Rn(c);if(p.createTrainingSessionHandler){let m=await p.createTrainingSessionHandler(t.checkpointState,t.trainModel,n,i,u);return new e(m,!!t.optimizerModel,!!t.evalModel)}else throw new Error(Nd)}typeNarrowingForRunStep(t,r,n,i,u){let o={},c={};if(typeof n!="object"||n===null||n instanceof et||Array.isArray(n))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let p=!0;if(typeof i=="object"){if(i===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(i instanceof et)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(i)){if(i.length===0)throw new TypeError("'fetches' cannot be an empty array.");p=!1;for(let m of i){if(typeof m!="string")throw new TypeError("'fetches' must be a string array or an object.");if(r.indexOf(m)===-1)throw new RangeError(`'fetches' contains invalid output name: ${m}.`);o[m]=null}if(typeof u=="object"&&u!==null)c=u;else if(typeof u<"u")throw new TypeError("'options' must be an object.")}else{let m=!1,l=Object.getOwnPropertyNames(i);for(let g of r)if(l.indexOf(g)!==-1){let b=i[g];(b===null||b instanceof et)&&(m=!0,p=!1,o[g]=b)}if(m){if(typeof u=="object"&&u!==null)c=u;else if(typeof u<"u")throw new TypeError("'options' must be an object.")}else c=i}}else if(typeof i<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let m of t)if(typeof n[m]>"u")throw new Error(`input '${m}' is missing in 'feeds'.`);if(p)for(let m of r)o[m]=null;return[o,c]}convertHandlerReturnTypeToMapOfTensors(t){let r={};for(let n in t)if(Object.hasOwnProperty.call(t,n)){let i=t[n];i instanceof et?r[n]=i:r[n]=new et(i.type,i.data,i.dims)}return r}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(t,r,n){let[i,u]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,t,r,n),o=await this.handler.runTrainStep(t,i,u);return this.convertHandlerReturnTypeToMapOfTensors(o)}async runOptimizerStep(t){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(t||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(t,r,n){if(this.hasEvalModel){let[i,u]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,t,r,n),o=await this.handler.runEvalStep(t,i,u);return this.convertHandlerReturnTypeToMapOfTensors(o)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(t=!0){return this.handler.getParametersSize(t)}async loadParametersBuffer(t,r=!0){let n=await this.getParametersSize(r);if(t.length!==4*n)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(t,r)}async getContiguousParameters(t=!0){return this.handler.getContiguousParameters(t)}async release(){return this.handler.dispose()}}});var wo,$o=j(()=>{vo();wo=Wn});var Pa={};sr(Pa,{InferenceSession:()=>go,TRACE:()=>Zr,TRACE_FUNC_BEGIN:()=>ft,TRACE_FUNC_END:()=>mt,Tensor:()=>et,TrainingSession:()=>wo,env:()=>Pe,registerBackend:()=>Yt});var wt=j(()=>{Ki();Ji();yo();zn();ka();bo();$o()});var Ra={};sr(Ra,{createReadStream:()=>So,readFile:()=>Vd,readFileSync:()=>Hd});var Vd,Hd,So,Ba=j(()=>{Vd=void 0,Hd=void 0,So=void 0});var Da={};sr(Da,{join:()=>Ld});var Ld,Ma=j(()=>{Ld=void 0});var Io=_r((Co,za)=>{"use strict";var xo=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){var r=t,n,i;r.ready=new Promise((s,f)=>{n=s,i=f}),r.mountExternalData=(s,f)=>{(r.gb||(r.gb=new Map)).set(s,f)},r.unmountExternalData=()=>{delete r.gb},r.jsepInit=(s,f,y,_,E,D,H,q,J,Z,ce)=>{r.Ib=s,r.vb=f,r.zb=y,r.ob=_,r.yb=E,r.Sa=D,r.Ab=H,r.Cb=q,r.wb=J,r.xb=Z,r.Bb=ce,f=(ee,he,R)=>(...ie)=>{let we=nt,Qe=he?.();ie=ee(...ie);let pt=he?.();return Qe!==pt&&(ee=pt,R(Qe),he=R=null),nt!=we?mn():ie},y=ee=>async(...he)=>{try{if(r.fb)throw Error("Session already started");let R=r.fb={Db:he[0],errors:[]},ie=await ee(...he);if(r.fb!==R)throw Error("Session mismatch");s.flush();let we=R.errors;if(0<we.length){let Qe=await Promise.all(we);if(Qe=Qe.filter(pt=>pt),0<Qe.length)throw Error(Qe.join(`
`))}return ie}finally{r.fb=null}},r._OrtCreateSession=f(r._OrtCreateSession,()=>r._OrtCreateSession,ee=>r._OrtCreateSession=ee),r._OrtRun=y(f(r._OrtRun,()=>r._OrtRun,ee=>r._OrtRun=ee)),r._OrtRunWithBinding=y(f(r._OrtRunWithBinding,()=>r._OrtRunWithBinding,ee=>r._OrtRunWithBinding=ee)),r._OrtBindInput=f(r._OrtBindInput,()=>r._OrtBindInput,ee=>r._OrtBindInput=ee),r.jsepRegisterBuffer=(ee,he,R,ie)=>s.registerBuffer(ee,he,R,ie),r.jsepGetBuffer=ee=>s.getBuffer(ee),r.jsepCreateDownloader=(ee,he,R)=>s.createDownloader(ee,he,R),r.jsepOnReleaseSession=ee=>{s.onReleaseSession(ee)},r.jsepOnRunStart=ee=>s.onRunStart(ee)};var u=Object.assign({},r),o="./this.program",c=(s,f)=>{throw f},p=typeof window=="object",m=typeof importScripts=="function",l=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",g="",b,$,v;if(l){var x=(Ba(),Kt(Ra)),T=(Ma(),Kt(Da));g=m?T.dirname(g)+"/":__dirname+"/",b=(s,f)=>(s=oe(s)?new URL(s):T.normalize(s),x.readFileSync(s,f?void 0:"utf8")),v=s=>(s=b(s,!0),s.buffer||(s=new Uint8Array(s)),s),$=(s,f,y,_=!0)=>{s=oe(s)?new URL(s):T.normalize(s),x.readFile(s,_?void 0:"utf8",(E,D)=>{E?y(E):f(_?D.buffer:D)})},!r.thisProgram&&1<process.argv.length&&(o=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),c=(s,f)=>{throw process.exitCode=s,f},r.inspect=()=>"[Emscripten Module object]"}else(p||m)&&(m?g=self.location.href:typeof document<"u"&&document.currentScript&&(g=document.currentScript.src),e&&(g=e),g.indexOf("blob:")!==0?g=g.substr(0,g.replace(/[?#].*/,"").lastIndexOf("/")+1):g="",b=s=>{var f=new XMLHttpRequest;return f.open("GET",s,!1),f.send(null),f.responseText},m&&(v=s=>{var f=new XMLHttpRequest;return f.open("GET",s,!1),f.responseType="arraybuffer",f.send(null),new Uint8Array(f.response)}),$=(s,f,y)=>{var _=new XMLHttpRequest;_.open("GET",s,!0),_.responseType="arraybuffer",_.onload=()=>{_.status==200||_.status==0&&_.response?f(_.response):y()},_.onerror=y,_.send(null)});var C=console.log.bind(console),S=console.error.bind(console);Object.assign(r,u),u=null,typeof WebAssembly!="object"&&Ye("no native wasm support detected");var A,O=!1,M,z,V,K,ue,P,te,Me,We,$e,ve;function de(){var s=A.buffer;r.HEAP8=z=new Int8Array(s),r.HEAP16=K=new Int16Array(s),r.HEAPU8=V=new Uint8Array(s),r.HEAPU16=ue=new Uint16Array(s),r.HEAP32=P=new Int32Array(s),r.HEAPU32=te=new Uint32Array(s),r.HEAPF32=Me=new Float32Array(s),r.HEAPF64=ve=new Float64Array(s),r.HEAP64=We=new BigInt64Array(s),r.HEAPU64=$e=new BigUint64Array(s)}var Oe=[],xe=[],ae=[],_e=0,ke=null,Re=null;function Ye(s){throw s="Aborted("+s+")",S(s),O=!0,M=1,s=new WebAssembly.RuntimeError(s+". Build with -sASSERTIONS for more info."),i(s),s}var F=s=>s.startsWith("data:application/octet-stream;base64,"),oe=s=>s.startsWith("file://"),ye;if(ye="ort-wasm-simd.wasm",!F(ye)){var _t=ye;ye=r.locateFile?r.locateFile(_t,g):g+_t}function Ze(s){if(v)return v(s);throw"both async and sync fetching of the wasm failed"}function He(s){if(p||m){if(typeof fetch=="function"&&!oe(s))return fetch(s,{credentials:"same-origin"}).then(f=>{if(!f.ok)throw"failed to load wasm binary file at '"+s+"'";return f.arrayBuffer()}).catch(()=>Ze(s));if($)return new Promise((f,y)=>{$(s,_=>f(new Uint8Array(_)),y)})}return Promise.resolve().then(()=>Ze(s))}function Lt(s,f,y){return He(s).then(_=>WebAssembly.instantiate(_,f)).then(_=>_).then(y,_=>{S(`failed to asynchronously prepare wasm: ${_}`),Ye(_)})}function qe(s,f){var y=ye;return typeof WebAssembly.instantiateStreaming!="function"||F(y)||oe(y)||l||typeof fetch!="function"?Lt(y,s,f):fetch(y,{credentials:"same-origin"}).then(_=>WebAssembly.instantiateStreaming(_,s).then(f,function(E){return S(`wasm streaming compile failed: ${E}`),S("falling back to ArrayBuffer instantiation"),Lt(y,s,f)}))}var Le={945680:(s,f,y,_)=>{if(typeof r>"u"||!r.gb)return 1;if(s=je(s>>>0),s.startsWith("./")&&(s=s.substring(2)),s=r.gb.get(s),!s)return 2;if(f>>>=0,y>>>=0,f+y>s.byteLength)return 3;try{return V.set(s.subarray(f,f+y),_>>>0>>>0),0}catch{return 4}},946181:()=>{r.wb()},946212:()=>{r.xb()},946241:()=>{r.Bb()},946266:s=>r.vb(s),946299:s=>r.zb(s),946331:(s,f,y)=>{r.ob(s,f,y,!0)},946370:(s,f,y)=>{r.ob(s,f,y)},946403:s=>{r.Sa("Abs",s,void 0)},946454:s=>{r.Sa("Neg",s,void 0)},946505:s=>{r.Sa("Floor",s,void 0)},946558:s=>{r.Sa("Ceil",s,void 0)},946610:s=>{r.Sa("Reciprocal",s,void 0)},946668:s=>{r.Sa("Sqrt",s,void 0)},946720:s=>{r.Sa("Exp",s,void 0)},946771:s=>{r.Sa("Erf",s,void 0)},946822:s=>{r.Sa("Sigmoid",s,void 0)},946877:(s,f,y)=>{r.Sa("HardSigmoid",s,{alpha:f,beta:y})},946956:s=>{r.Sa("Log",s,void 0)},947007:s=>{r.Sa("Sin",s,void 0)},947058:s=>{r.Sa("Cos",s,void 0)},947109:s=>{r.Sa("Tan",s,void 0)},947160:s=>{r.Sa("Asin",s,void 0)},947212:s=>{r.Sa("Acos",s,void 0)},947264:s=>{r.Sa("Atan",s,void 0)},947316:s=>{r.Sa("Sinh",s,void 0)},947368:s=>{r.Sa("Cosh",s,void 0)},947420:s=>{r.Sa("Asinh",s,void 0)},947473:s=>{r.Sa("Acosh",s,void 0)},947526:s=>{r.Sa("Atanh",s,void 0)},947579:s=>{r.Sa("Tanh",s,void 0)},947631:s=>{r.Sa("Not",s,void 0)},947682:(s,f,y)=>{r.Sa("Clip",s,{min:f,max:y})},947751:s=>{r.Sa("Clip",s,void 0)},947803:(s,f)=>{r.Sa("Elu",s,{alpha:f})},947861:s=>{r.Sa("Relu",s,void 0)},947913:(s,f)=>{r.Sa("LeakyRelu",s,{alpha:f})},947977:(s,f)=>{r.Sa("ThresholdedRelu",s,{alpha:f})},948047:(s,f)=>{r.Sa("Cast",s,{to:f})},948105:s=>{r.Sa("Add",s,void 0)},948156:s=>{r.Sa("Sub",s,void 0)},948207:s=>{r.Sa("Mul",s,void 0)},948258:s=>{r.Sa("Div",s,void 0)},948309:s=>{r.Sa("Pow",s,void 0)},948360:s=>{r.Sa("Equal",s,void 0)},948413:s=>{r.Sa("Greater",s,void 0)},948468:s=>{r.Sa("GreaterOrEqual",s,void 0)},948530:s=>{r.Sa("Less",s,void 0)},948582:s=>{r.Sa("LessOrEqual",s,void 0)},948641:(s,f,y,_,E)=>{r.Sa("ReduceMean",s,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:_?Array.from(P.subarray(_>>>0,E>>>0)):[]})},948800:(s,f,y,_,E)=>{r.Sa("ReduceMax",s,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:_?Array.from(P.subarray(_>>>0,E>>>0)):[]})},948958:(s,f,y,_,E)=>{r.Sa("ReduceMin",s,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:_?Array.from(P.subarray(_>>>0,E>>>0)):[]})},949116:(s,f,y,_,E)=>{r.Sa("ReduceProd",s,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:_?Array.from(P.subarray(_>>>0,E>>>0)):[]})},949275:(s,f,y,_,E)=>{r.Sa("ReduceSum",s,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:_?Array.from(P.subarray(_>>>0,E>>>0)):[]})},949433:(s,f,y,_,E)=>{r.Sa("ReduceL1",s,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:_?Array.from(P.subarray(_>>>0,E>>>0)):[]})},949590:(s,f,y,_,E)=>{r.Sa("ReduceL2",s,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:_?Array.from(P.subarray(_>>>0,E>>>0)):[]})},949747:(s,f,y,_,E)=>{r.Sa("ReduceLogSum",s,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:_?Array.from(P.subarray(_>>>0,E>>>0)):[]})},949908:(s,f,y,_,E)=>{r.Sa("ReduceSumSquare",s,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:_?Array.from(P.subarray(_>>>0,E>>>0)):[]})},950072:(s,f,y,_,E)=>{r.Sa("ReduceLogSumExp",s,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:_?Array.from(P.subarray(_>>>0,E>>>0)):[]})},950236:s=>{r.Sa("Where",s,void 0)},950289:(s,f,y)=>{r.Sa("Transpose",s,{perm:f?Array.from(P.subarray(f>>>0,y>>>0)):[]})},950397:(s,f,y,_,E,D,H,q,J,Z,ce,ee,he,R,ie)=>{r.Sa("ConvTranspose",s,{format:J?"NHWC":"NCHW",autoPad:f,dilations:[y],group:_,kernel_shape:[E],pads:[D,H],strides:[q],wIsConst:()=>!!z[Z>>>0],outputPadding:ce?Array.from(P.subarray(ce>>>0,ee>>>0)):[],outputShape:he?Array.from(P.subarray(he>>>0,R>>>0)):[],activation:je(ie)})},950799:(s,f,y,_,E,D,H,q,J,Z,ce,ee,he,R)=>{r.Sa("ConvTranspose",s,{format:q?"NHWC":"NCHW",autoPad:f,dilations:Array.from(P.subarray(y>>>0,(y>>>0)+2>>>0)),group:_,kernelShape:Array.from(P.subarray(E>>>0,(E>>>0)+2>>>0)),pads:Array.from(P.subarray(D>>>0,(D>>>0)+4>>>0)),strides:Array.from(P.subarray(H>>>0,(H>>>0)+2>>>0)),wIsConst:()=>!!z[J>>>0],outputPadding:Z?Array.from(P.subarray(Z>>>0,ce>>>0)):[],outputShape:ee?Array.from(P.subarray(ee>>>0,he>>>0)):[],activation:je(R)})},951364:(s,f,y,_,E,D,H,q,J,Z,ce,ee,he,R,ie)=>{r.Sa("ConvTranspose",s,{format:J?"NHWC":"NCHW",autoPad:f,dilations:[y],group:_,kernel_shape:[E],pads:[D,H],strides:[q],wIsConst:()=>!!z[Z>>>0],outputPadding:ce?Array.from(P.subarray(ce>>>0,ee>>>0)):[],outputShape:he?Array.from(P.subarray(he>>>0,R>>>0)):[],activation:je(ie)})},951766:(s,f,y,_,E,D,H,q,J,Z,ce,ee,he,R)=>{r.Sa("ConvTranspose",s,{format:q?"NHWC":"NCHW",autoPad:f,dilations:Array.from(P.subarray(y>>>0,(y>>>0)+2>>>0)),group:_,kernelShape:Array.from(P.subarray(E>>>0,(E>>>0)+2>>>0)),pads:Array.from(P.subarray(D>>>0,(D>>>0)+4>>>0)),strides:Array.from(P.subarray(H>>>0,(H>>>0)+2>>>0)),wIsConst:()=>!!z[J>>>0],outputPadding:Z?Array.from(P.subarray(Z>>>0,ce>>>0)):[],outputShape:ee?Array.from(P.subarray(ee>>>0,he>>>0)):[],activation:je(R)})},952331:(s,f)=>{r.Sa("GlobalAveragePool",s,{format:f?"NHWC":"NCHW"})},952422:(s,f,y,_,E,D,H,q,J,Z,ce,ee,he,R,ie,we)=>{r.Sa("AveragePool",s,{format:we?"NHWC":"NCHW",auto_pad:f,ceil_mode:y,count_include_pad:_,storage_order:E,dilations:[D,H],kernel_shape:[q,J],pads:[Z,ce,ee,he],strides:[R,ie]})},952706:(s,f)=>{r.Sa("GlobalAveragePool",s,{format:f?"NHWC":"NCHW"})},952797:(s,f,y,_,E,D,H,q,J,Z,ce,ee,he,R,ie,we)=>{r.Sa("AveragePool",s,{format:we?"NHWC":"NCHW",auto_pad:f,ceil_mode:y,count_include_pad:_,storage_order:E,dilations:[D,H],kernel_shape:[q,J],pads:[Z,ce,ee,he],strides:[R,ie]})},953081:(s,f)=>{r.Sa("GlobalMaxPool",s,{format:f?"NHWC":"NCHW"})},953168:(s,f,y,_,E,D,H,q,J,Z,ce,ee,he,R,ie,we)=>{r.Sa("MaxPool",s,{format:we?"NHWC":"NCHW",auto_pad:f,ceil_mode:y,count_include_pad:_,storage_order:E,dilations:[D,H],kernel_shape:[q,J],pads:[Z,ce,ee,he],strides:[R,ie]})},953448:(s,f)=>{r.Sa("GlobalMaxPool",s,{format:f?"NHWC":"NCHW"})},953535:(s,f,y,_,E,D,H,q,J,Z,ce,ee,he,R,ie,we)=>{r.Sa("MaxPool",s,{format:we?"NHWC":"NCHW",auto_pad:f,ceil_mode:y,count_include_pad:_,storage_order:E,dilations:[D,H],kernel_shape:[q,J],pads:[Z,ce,ee,he],strides:[R,ie]})},953815:(s,f,y,_,E)=>{r.Sa("Gemm",s,{alpha:f,beta:y,transA:_,transB:E})},953919:s=>{r.Sa("MatMul",s,void 0)},953973:(s,f,y,_)=>{r.Sa("ArgMax",s,{keepDims:!!f,selectLastIndex:!!y,axis:_})},954081:(s,f,y,_)=>{r.Sa("ArgMin",s,{keepDims:!!f,selectLastIndex:!!y,axis:_})},954189:(s,f)=>{r.Sa("Softmax",s,{axis:f})},954252:(s,f)=>{r.Sa("Concat",s,{axis:f})},954312:(s,f,y,_,E)=>{r.Sa("Split",s,{axis:f,numOutputs:y,splitSizes:_?Array.from(P.subarray(_>>>0,E>>>0)):[]})},954452:s=>{r.Sa("Expand",s,void 0)},954506:(s,f)=>{r.Sa("Gather",s,{axis:Number(f)})},954577:(s,f)=>{r.Sa("GatherElements",s,{axis:Number(f)})},954656:(s,f,y,_,E,D,H,q,J,Z,ce)=>{r.Sa("Resize",s,{antialias:f,axes:y?Array.from(P.subarray(y>>>0,_>>>0)):[],coordinateTransformMode:je(E),cubicCoeffA:D,excludeOutside:H,extrapolationValue:q,keepAspectRatioPolicy:je(J),mode:je(Z),nearestMode:je(ce)})},955002:(s,f,y,_,E,D,H)=>{r.Sa("Slice",s,{starts:f?Array.from(P.subarray(f>>>0,y>>>0)):[],ends:_?Array.from(P.subarray(_>>>0,E>>>0)):[],axes:D?Array.from(P.subarray(D>>>0,H>>>0)):[]})},955218:s=>{r.Sa("Tile",s,void 0)},955270:(s,f,y)=>{r.Sa("LayerNormalization",s,{axis:Number(f),epsilon:Number(y)})},955377:(s,f,y)=>{r.Sa("InstanceNormalization",s,{epsilon:f,format:y?"NHWC":"NCHW"})},955491:(s,f,y)=>{r.Sa("InstanceNormalization",s,{epsilon:f,format:y?"NHWC":"NCHW"})},955605:s=>{r.Sa("Range",s,void 0)},955658:(s,f)=>{r.Sa("Einsum",s,{equation:je(f)})},955739:(s,f,y,_,E)=>{r.Sa("Pad",s,{mode:f,value:y,pads:_?Array.from(P.subarray(_>>>0,E>>>0)):[]})},955866:(s,f,y,_,E,D)=>{r.Sa("BatchNormalization",s,{epsilon:f,momentum:y,spatial:!!E,trainingMode:!!_,format:D?"NHWC":"NCHW"})},956035:(s,f,y,_,E,D)=>{r.Sa("BatchNormalization",s,{epsilon:f,momentum:y,spatial:!!E,trainingMode:!!_,format:D?"NHWC":"NCHW"})},956204:(s,f,y)=>{r.Sa("CumSum",s,{exclusive:Number(f),reverse:Number(y)})},956301:(s,f,y,_,E,D,H,q,J)=>{r.Sa("Attention",s,{numHeads:f,isUnidirectional:y,maskFilterValue:_,scale:E,doRotary:D,qkvHiddenSizes:H?Array.from(P.subarray(Number(q)>>>0,Number(q)+H>>>0)):[],pastPresentShareBuffer:!!J})},956573:s=>{r.Sa("Gelu",s,void 0)},956625:(s,f,y,_,E,D)=>{r.Sa("MultiHeadAttention",s,{numHeads:f,isUnidirectional:y,maskFilterValue:_,scale:E,doRotary:D})},956784:s=>{r.Sa("BiasAdd",s,void 0)},956839:s=>{r.Sa("BiasSplitGelu",s,void 0)},956900:(s,f)=>{r.Sa("SkipLayerNormalization",s,{epsilon:f})},956981:(s,f,y,_,E,D,H,q,J,Z,ce,ee,he)=>{r.Sa("Conv",s,{format:J?"NHWC":"NCHW",auto_pad:f,dilations:[y],group:_,kernel_shape:[E],pads:D?Array.from(P.subarray(D>>>0,H>>>0)):[],strides:[q],w_is_const:()=>!!z[Z>>>0],activation:je(ce),activation_params:ee?Array.from(Me.subarray(ee>>>0,he>>>0)):[]})},957351:(s,f,y,_,E,D,H,q,J,Z,ce,ee,he,R,ie,we)=>{r.Sa("Conv",s,{format:ee?"NHWC":"NCHW",auto_pad:f,dilations:[y,_],group:E,kernel_shape:[D,H],pads:q?Array.from(P.subarray(q>>>0,J>>>0)):[],strides:[Z,ce],w_is_const:()=>!!z[he>>>0],activation:je(R),activation_params:ie?Array.from(Me.subarray(ie>>>0,we>>>0)):[]})},957742:s=>{r.Ab(s)},957776:(s,f)=>r.Cb(s,f,r.fb.Db,r.fb.errors)};function Nt(s){this.name="ExitStatus",this.message=`Program terminated with exit(${s})`,this.status=s}function St(s){this.cb=s-24,this.rb=function(f){te[this.cb+4>>>2>>>0]=f},this.qb=function(f){te[this.cb+8>>>2>>>0]=f},this.kb=function(f,y){this.jb(),this.rb(f),this.qb(y)},this.jb=function(){te[this.cb+16>>>2>>>0]=0}}var Gt=0,Qt=0,Tr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Ft=(s,f,y)=>{f>>>=0;var _=f+y;for(y=f;s[y]&&!(y>=_);)++y;if(16<y-f&&s.buffer&&Tr)return Tr.decode(s.subarray(f,y));for(_="";f<y;){var E=s[f++];if(E&128){var D=s[f++]&63;if((E&224)==192)_+=String.fromCharCode((E&31)<<6|D);else{var H=s[f++]&63;E=(E&240)==224?(E&15)<<12|D<<6|H:(E&7)<<18|D<<12|H<<6|s[f++]&63,65536>E?_+=String.fromCharCode(E):(E-=65536,_+=String.fromCharCode(55296|E>>10,56320|E&1023))}}else _+=String.fromCharCode(E)}return _},je=(s,f)=>(s>>>=0)?Ft(V,s,f):"",Vt=s=>{for(var f=0,y=0;y<s.length;++y){var _=s.charCodeAt(y);127>=_?f++:2047>=_?f+=2:55296<=_&&57343>=_?(f+=4,++y):f+=3}return f},Et=(s,f,y,_)=>{if(y>>>=0,!(0<_))return 0;var E=y;_=y+_-1;for(var D=0;D<s.length;++D){var H=s.charCodeAt(D);if(55296<=H&&57343>=H){var q=s.charCodeAt(++D);H=65536+((H&1023)<<10)|q&1023}if(127>=H){if(y>=_)break;f[y++>>>0]=H}else{if(2047>=H){if(y+1>=_)break;f[y++>>>0]=192|H>>6}else{if(65535>=H){if(y+2>=_)break;f[y++>>>0]=224|H>>12}else{if(y+3>=_)break;f[y++>>>0]=240|H>>18,f[y++>>>0]=128|H>>12&63}f[y++>>>0]=128|H>>6&63}f[y++>>>0]=128|H&63}}return f[y>>>0]=0,y-E},Er=s=>{if(s===null)return"null";var f=typeof s;return f==="object"||f==="array"||f==="function"?s.toString():""+s},sn,lt=s=>{for(var f="";V[s>>>0];)f+=sn[V[s++>>>0]];return f},Or={},er={},kr={},bt;function un(s,f,y={}){var _=f.name;if(!s)throw new bt(`type "${_}" must have a positive integer typeid pointer`);if(er.hasOwnProperty(s)){if(y.tb)return;throw new bt(`Cannot register type '${_}' twice`)}er[s]=f,delete kr[s],Or.hasOwnProperty(s)&&(f=Or[s],delete Or[s],f.forEach(E=>E()))}function Xe(s,f,y={}){if(!("argPackAdvance"in f))throw new TypeError("registerType registeredInstance requires argPackAdvance");un(s,f,y)}var Pr=(s,f,y)=>{switch(f){case 1:return y?_=>z[_>>>0>>>0]:_=>V[_>>>0>>>0];case 2:return y?_=>K[_>>>1>>>0]:_=>ue[_>>>1>>>0];case 4:return y?_=>P[_>>>2>>>0]:_=>te[_>>>2>>>0];case 8:return y?_=>We[_>>>3]:_=>$e[_>>>3];default:throw new TypeError(`invalid integer width (${f}): ${s}`)}};function Rr(){this.$a=[void 0],this.nb=[]}var De=new Rr;function Br(s){s>>>=0,s>=De.cb&&--De.get(s).pb===0&&De.jb(s)}var Se=s=>{if(!s)throw new bt("Cannot use deleted val. handle = "+s);return De.get(s).value},dt=s=>{switch(s){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return De.kb({pb:1,value:s})}};function fr(s){return this.fromWireType(P[s>>>2>>>0])}var Dr=(s,f)=>{switch(f){case 4:return function(y){return this.fromWireType(Me[y>>>2>>>0])};case 8:return function(y){return this.fromWireType(ve[y>>>3>>>0])};default:throw new TypeError(`invalid float width (${f}): ${s}`)}};function ga(s){return this.fromWireType(te[s>>>2>>>0])}var Mr=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,ya=(s,f)=>{for(var y=s>>1,_=y+f/2;!(y>=_)&&ue[y>>>0];)++y;if(y<<=1,32<y-s&&Mr)return Mr.decode(V.subarray(s>>>0,y>>>0));for(y="",_=0;!(_>=f/2);++_){var E=K[s+2*_>>>1>>>0];if(E==0)break;y+=String.fromCharCode(E)}return y},fe=(s,f,y)=>{if(y??=2147483647,2>y)return 0;y-=2;var _=f;y=y<2*s.length?y/2:s.length;for(var E=0;E<y;++E)K[f>>>1>>>0]=s.charCodeAt(E),f+=2;return K[f>>>1>>>0]=0,f-_},mr=s=>2*s.length,ln=(s,f)=>{for(var y=0,_="";!(y>=f/4);){var E=P[s+4*y>>>2>>>0];if(E==0)break;++y,65536<=E?(E-=65536,_+=String.fromCharCode(55296|E>>10,56320|E&1023)):_+=String.fromCharCode(E)}return _},ba=(s,f,y)=>{if(f>>>=0,y??=2147483647,4>y)return 0;var _=f;y=_+y-4;for(var E=0;E<s.length;++E){var D=s.charCodeAt(E);if(55296<=D&&57343>=D){var H=s.charCodeAt(++E);D=65536+((D&1023)<<10)|H&1023}if(P[f>>>2>>>0]=D,f+=4,f+4>y)break}return P[f>>>2>>>0]=0,f-_},dn=s=>{for(var f=0,y=0;y<s.length;++y){var _=s.charCodeAt(y);55296<=_&&57343>=_&&++y,f+=4}return f},zr=(s,f)=>{var y=er[s];if(y===void 0)throw s=ar(s),y=lt(s),ct(s),new bt(f+" has unknown type "+y);return y},Ur=(s,f,y)=>{var _=[];return s=s.toWireType(_,y),_.length&&(te[f>>>2>>>0]=dt(_)),s},tr=s=>{try{s()}catch(f){Ye(f)}};function cn(){var s=le,f={};for(let[y,_]of Object.entries(s))f[y]=typeof _=="function"?function(){qt.push(y);try{return _.apply(null,arguments)}finally{O||(qt.pop(),nt&&xt===1&&qt.length===0&&(xt=0,tr(In),typeof Fibers<"u"&&Fibers.Kb()))}}:_;return f}var xt=0,nt=null,Wr=0,qt=[],Nr={},Vr={},pn=0,hr=null,fn=[];function mn(){return new Promise((s,f)=>{hr={resolve:s,reject:f}})}function hn(){var s=jt(65548),f=s+12;te[s>>>2>>>0]=f,te[s+4>>>2>>>0]=f+65536,f=qt[0];var y=Nr[f];return y===void 0&&(y=pn++,Nr[f]=y,Vr[y]=f),P[s+8>>>2>>>0]=y,s}function gn(s){if(!O){if(xt===0){var f=!1,y=!1;s((_=0)=>{if(!O&&(Wr=_,f=!0,y)){xt=2,tr(()=>Ct(nt)),typeof Browser<"u"&&Browser.lb.sb&&Browser.lb.resume(),_=!1;try{var E=(0,le[Vr[P[nt+8>>>2>>>0]]])()}catch(q){E=q,_=!0}var D=!1;if(!nt){var H=hr;H&&(hr=null,(_?H.reject:H.resolve)(E),D=!0)}if(_&&!D)throw E}}),y=!0,f||(xt=1,nt=hn(),typeof Browser<"u"&&Browser.lb.sb&&Browser.lb.pause(),tr(()=>ir(nt)))}else xt===2?(xt=0,tr(yt),ct(nt),nt=null,fn.forEach(_=>{if(!O)try{_();try{M=M=_=M,r.onExit?.(_),O=!0,c(_,new Nt(_))}catch(E){E instanceof Nt||E=="unwind"||c(1,E)}}catch(E){E instanceof Nt||E=="unwind"||c(1,E)}})):Ye(`invalid state: ${xt}`);return Wr}}function Hr(s){return gn(f=>{s().then(f)})}var rr=[],yn={},gr=s=>{var f=yn[s];return f===void 0?lt(s):f},Lr=()=>typeof globalThis=="object"?globalThis:Function("return this")(),gt=s=>{var f=rr.length;return rr.push(s),f},Gr=(s,f)=>{for(var y=Array(s),_=0;_<s;++_)y[_]=zr(te[f+4*_>>>2>>>0],"parameter "+_);return y},yr=(s,f)=>Object.defineProperty(f,"name",{value:s});function va(s){var f=Function;if(!(f instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof f} which is not a function`);var y=yr(f.name||"unknownFunctionName",function(){});return y.prototype=f.prototype,y=new y,s=f.apply(y,s),s instanceof Object?s:y}var at=s=>s%4===0&&(s%100!==0||s%400===0),bn=[0,31,60,91,121,152,182,213,244,274,305,335],vt=[0,31,59,90,120,151,181,212,243,273,304,334],Fr=s=>{var f=Vt(s)+1,y=jt(f);return y&&Et(s,V,y,f),y},br=[],it=(s,f)=>{br.length=0;for(var y;y=V[s++>>>0];){var _=y!=105;_&=y!=112,f+=_&&f%8?4:0,br.push(y==112?te[f>>>2>>>0]:y==106?We[f>>>3]:y==105?P[f>>>2>>>0]:ve[f>>>3>>>0]),f+=_?8:4}return br},nr={},Je=()=>{if(!ot){var s={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:o||"./this.program"},f;for(f in nr)nr[f]===void 0?delete s[f]:s[f]=nr[f];var y=[];for(f in s)y.push(`${f}=${s[f]}`);ot=y}return ot},ot,vn=[null,[],[]],wn=[31,29,31,30,31,30,31,31,30,31,30,31],$n=[31,28,31,30,31,30,31,31,30,31,30,31];function _n(s){var f=Array(Vt(s)+1);return Et(s,f,0,f.length),f}function Sn(s,f,y,_){function E(R,ie,we){for(R=typeof R=="number"?R.toString():R||"";R.length<ie;)R=we[0]+R;return R}function D(R,ie){return E(R,ie,"0")}function H(R,ie){function we(pt){return 0>pt?-1:0<pt?1:0}var Qe;return(Qe=we(R.getFullYear()-ie.getFullYear()))===0&&(Qe=we(R.getMonth()-ie.getMonth()))===0&&(Qe=we(R.getDate()-ie.getDate())),Qe}function q(R){switch(R.getDay()){case 0:return new Date(R.getFullYear()-1,11,29);case 1:return R;case 2:return new Date(R.getFullYear(),0,3);case 3:return new Date(R.getFullYear(),0,2);case 4:return new Date(R.getFullYear(),0,1);case 5:return new Date(R.getFullYear()-1,11,31);case 6:return new Date(R.getFullYear()-1,11,30)}}function J(R){var ie=R.ab;for(R=new Date(new Date(R.bb+1900,0,1).getTime());0<ie;){var we=R.getMonth(),Qe=(at(R.getFullYear())?wn:$n)[we];if(ie>Qe-R.getDate())ie-=Qe-R.getDate()+1,R.setDate(1),11>we?R.setMonth(we+1):(R.setMonth(0),R.setFullYear(R.getFullYear()+1));else{R.setDate(R.getDate()+ie);break}}return we=new Date(R.getFullYear()+1,0,4),ie=q(new Date(R.getFullYear(),0,4)),we=q(we),0>=H(ie,R)?0>=H(we,R)?R.getFullYear()+1:R.getFullYear():R.getFullYear()-1}s>>>=0,f>>>=0,y>>>=0,_>>>=0;var Z=te[_+40>>>2>>>0];_={Gb:P[_>>>2>>>0],Fb:P[_+4>>>2>>>0],hb:P[_+8>>>2>>>0],mb:P[_+12>>>2>>>0],ib:P[_+16>>>2>>>0],bb:P[_+20>>>2>>>0],Wa:P[_+24>>>2>>>0],ab:P[_+28>>>2>>>0],Jb:P[_+32>>>2>>>0],Eb:P[_+36>>>2>>>0],Hb:Z?je(Z):""},y=je(y),Z={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var ce in Z)y=y.replace(new RegExp(ce,"g"),Z[ce]);var ee="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),he="January February March April May June July August September October November December".split(" ");Z={"%a":R=>ee[R.Wa].substring(0,3),"%A":R=>ee[R.Wa],"%b":R=>he[R.ib].substring(0,3),"%B":R=>he[R.ib],"%C":R=>D((R.bb+1900)/100|0,2),"%d":R=>D(R.mb,2),"%e":R=>E(R.mb,2," "),"%g":R=>J(R).toString().substring(2),"%G":R=>J(R),"%H":R=>D(R.hb,2),"%I":R=>(R=R.hb,R==0?R=12:12<R&&(R-=12),D(R,2)),"%j":R=>{for(var ie=0,we=0;we<=R.ib-1;ie+=(at(R.bb+1900)?wn:$n)[we++]);return D(R.mb+ie,3)},"%m":R=>D(R.ib+1,2),"%M":R=>D(R.Fb,2),"%n":()=>`
`,"%p":R=>0<=R.hb&&12>R.hb?"AM":"PM","%S":R=>D(R.Gb,2),"%t":()=>"	","%u":R=>R.Wa||7,"%U":R=>D(Math.floor((R.ab+7-R.Wa)/7),2),"%V":R=>{var ie=Math.floor((R.ab+7-(R.Wa+6)%7)/7);if(2>=(R.Wa+371-R.ab-2)%7&&ie++,ie)ie==53&&(we=(R.Wa+371-R.ab)%7,we==4||we==3&&at(R.bb)||(ie=1));else{ie=52;var we=(R.Wa+7-R.ab-1)%7;(we==4||we==5&&at(R.bb%400-1))&&ie++}return D(ie,2)},"%w":R=>R.Wa,"%W":R=>D(Math.floor((R.ab+7-(R.Wa+6)%7)/7),2),"%y":R=>(R.bb+1900).toString().substring(2),"%Y":R=>R.bb+1900,"%z":R=>{R=R.Eb;var ie=0<=R;return R=Math.abs(R)/60,(ie?"+":"-")+("0000"+(R/60*100+R%60)).slice(-4)},"%Z":R=>R.Hb,"%%":()=>"%"},y=y.replace(/%%/g,"\0\0");for(ce in Z)y.includes(ce)&&(y=y.replace(new RegExp(ce,"g"),Z[ce](_)));return y=y.replace(/\0\0/g,"%"),ce=_n(y),ce.length>f?0:(z.set(ce,s>>>0),ce.length-1)}for(var xn=Array(256),vr=0;256>vr;++vr)xn[vr]=String.fromCharCode(vr);sn=xn,bt=r.BindingError=class extends Error{constructor(s){super(s),this.name="BindingError"}},r.InternalError=class extends Error{constructor(s){super(s),this.name="InternalError"}},Object.assign(Rr.prototype,{get(s){return this.$a[s]},has(s){return this.$a[s]!==void 0},kb(s){var f=this.nb.pop()||this.$a.length;return this.$a[f]=s,f},jb(s){this.$a[s]=void 0,this.nb.push(s)}}),De.$a.push({value:void 0},{value:null},{value:!0},{value:!1}),De.cb=De.$a.length,r.count_emval_handles=()=>{for(var s=0,f=De.cb;f<De.$a.length;++f)De.$a[f]!==void 0&&++s;return s};var wa={ia:function(s,f,y){return Hr(async()=>{await r.yb(s,f,y)})},a:function(s,f,y){throw s>>>=0,new St(s).kb(f>>>0,y>>>0),Gt=s,Qt++,Gt},x:function(){return 0},ba:function(){},O:function(){},Q:function(){},ca:function(){return 0},$:function(){},W:function(){},_:function(){},D:function(){},P:function(){},M:function(){},aa:function(){},N:function(){},G:function(s,f,y,_,E){f>>>=0,f=lt(f);var D=f.indexOf("u")!=-1;D&&(E=(1n<<64n)-1n),Xe(s>>>0,{name:f,fromWireType:H=>H,toWireType:function(H,q){if(typeof q!="bigint"&&typeof q!="number")throw new TypeError(`Cannot convert "${Er(q)}" to ${this.name}`);if(q<_||q>E)throw new TypeError(`Passing a number "${Er(q)}" from JS side to C/C++ side to an argument of type "${f}", which is outside the valid range [${_}, ${E}]!`);return q},argPackAdvance:8,readValueFromPointer:Pr(f,y>>>0,!D),eb:null})},ga:function(s,f,y,_){f=lt(f>>>0),Xe(s>>>0,{name:f,fromWireType:function(E){return!!E},toWireType:function(E,D){return D?y:_},argPackAdvance:8,readValueFromPointer:function(E){return this.fromWireType(V[E>>>0])},eb:null})},fa:function(s,f){f=lt(f>>>0),Xe(s>>>0,{name:f,fromWireType:y=>{var _=Se(y);return Br(y),_},toWireType:(y,_)=>dt(_),argPackAdvance:8,readValueFromPointer:fr,eb:null})},F:function(s,f,y){f=lt(f>>>0),Xe(s>>>0,{name:f,fromWireType:_=>_,toWireType:(_,E)=>E,argPackAdvance:8,readValueFromPointer:Dr(f,y>>>0),eb:null})},t:function(s,f,y,_,E){if(s>>>=0,y>>>=0,f=lt(f>>>0),E===-1&&(E=4294967295),E=q=>q,_===0){var D=32-8*y;E=q=>q<<D>>>D}var H=f.includes("unsigned")?function(q,J){return J>>>0}:function(q,J){return J};Xe(s,{name:f,fromWireType:E,toWireType:H,argPackAdvance:8,readValueFromPointer:Pr(f,y,_!==0),eb:null})},n:function(s,f,y){function _(D){return new E(z.buffer,te[D+4>>>2>>>0],te[D>>>2>>>0])}var E=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][f];y=lt(y>>>0),Xe(s>>>0,{name:y,fromWireType:_,argPackAdvance:8,readValueFromPointer:_},{tb:!0})},H:function(s,f){f=lt(f>>>0);var y=f==="std::string";Xe(s>>>0,{name:f,fromWireType:function(_){var E=te[_>>>2>>>0],D=_+4;if(y)for(var H=D,q=0;q<=E;++q){var J=D+q;if(q==E||V[J>>>0]==0){if(H=je(H,J-H),Z===void 0)var Z=H;else Z+=String.fromCharCode(0),Z+=H;H=J+1}}else{for(Z=Array(E),q=0;q<E;++q)Z[q]=String.fromCharCode(V[D+q>>>0]);Z=Z.join("")}return ct(_),Z},toWireType:function(_,E){E instanceof ArrayBuffer&&(E=new Uint8Array(E));var D=typeof E=="string";if(!(D||E instanceof Uint8Array||E instanceof Uint8ClampedArray||E instanceof Int8Array))throw new bt("Cannot pass non-string to std::string");var H=y&&D?Vt(E):E.length,q=jt(4+H+1),J=q+4;if(te[q>>>2>>>0]=H,y&&D)Et(E,V,J,H+1);else if(D)for(D=0;D<H;++D){var Z=E.charCodeAt(D);if(255<Z)throw ct(J),new bt("String has UTF-16 code units that do not fit in 8 bits");V[J+D>>>0]=Z}else for(D=0;D<H;++D)V[J+D>>>0]=E[D];return _!==null&&_.push(ct,q),q},argPackAdvance:8,readValueFromPointer:ga,eb(_){ct(_)}})},z:function(s,f,y){if(f>>>=0,y>>>=0,y=lt(y),f===2)var _=ya,E=fe,D=mr,H=()=>ue,q=1;else f===4&&(_=ln,E=ba,D=dn,H=()=>te,q=2);Xe(s>>>0,{name:y,fromWireType:J=>{for(var Z=te[J>>>2>>>0],ce=H(),ee,he=J+4,R=0;R<=Z;++R){var ie=J+4+R*f;(R==Z||ce[ie>>>q]==0)&&(he=_(he,ie-he),ee===void 0?ee=he:(ee+=String.fromCharCode(0),ee+=he),he=ie+f)}return ct(J),ee},toWireType:(J,Z)=>{if(typeof Z!="string")throw new bt(`Cannot pass non-string to C++ string type ${y}`);var ce=D(Z),ee=jt(4+ce+f);return te[ee>>>2]=ce>>q,E(Z,ee+4,ce+f),J!==null&&J.push(ct,ee),ee},argPackAdvance:8,readValueFromPointer:fr,eb(J){ct(J)}})},ha:function(s,f){f=lt(f>>>0),Xe(s>>>0,{ub:!0,name:f,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},da:()=>1,s:function(s,f,y){return f>>>=0,y>>>=0,s=Se(s>>>0),f=zr(f,"emval::as"),Ur(f,y,s)},w:function(s){return s>>>=0,Hr(()=>(s=Se(s),s.then(dt)))},o:function(s,f,y,_){return y>>>=0,_>>>=0,s=rr[s>>>0],f=Se(f>>>0),s(null,f,y,_)},k:function(s,f,y,_,E){return y>>>=0,_>>>=0,E>>>=0,s=rr[s>>>0],f=Se(f>>>0),y=gr(y),s(f,f[y],_,E)},b:Br,A:function(s,f){return f>>>=0,s=Se(s>>>0),f=Se(f),s==f},m:function(s){return s>>>=0,s===0?dt(Lr()):(s=gr(s),dt(Lr()[s]))},i:function(s,f,y){f=Gr(s,f>>>0);var _=f.shift();s--;var E=`return function (obj, func, destructorsRef, args) {
`,D=0,H=[];y===0&&H.push("obj");for(var q=["retType"],J=[_],Z=0;Z<s;++Z)H.push("arg"+Z),q.push("argType"+Z),J.push(f[Z]),E+=`  var arg${Z} = argType${Z}.readValueFromPointer(args${D?"+"+D:""});
`,D+=f[Z].argPackAdvance;for(E+=`  var rv = ${y===1?"new func":"func.call"}(${H.join(", ")});
`,Z=0;Z<s;++Z)f[Z].deleteObject&&(E+=`  argType${Z}.deleteObject(arg${Z});
`);return _.ub||(q.push("emval_returnValue"),J.push(Ur),E+=`  return emval_returnValue(retType, destructorsRef, rv);
`),q.push(E+`};
`),s=va(q).apply(null,J),y=`methodCaller<(${f.map(ce=>ce.name).join(", ")}) => ${_.name}>`,gt(yr(y,s))},r:function(s,f){return f>>>=0,s=Se(s>>>0),f=Se(f),dt(s[f])},f:function(s){s>>>=0,4<s&&(De.get(s).pb+=1)},u:function(){return dt([])},l:function(s){s=Se(s>>>0);for(var f=Array(s.length),y=0;y<s.length;y++)f[y]=s[y];return dt(f)},e:function(s){return dt(gr(s>>>0))},j:function(){return dt({})},h:function(s){s>>>=0;for(var f=Se(s);f.length;){var y=f.pop();f.pop()(y)}Br(s)},g:function(s,f,y){f>>>=0,y>>>=0,s=Se(s>>>0),f=Se(f),y=Se(y),s[f]=y},c:function(s,f){return f>>>=0,s=zr(s>>>0,"_emval_take_value"),s=s.readValueFromPointer(f),dt(s)},T:function(s,f){s=-9007199254740992>s||9007199254740992<s?NaN:Number(s),f>>>=0,s=new Date(1e3*s),P[f>>>2>>>0]=s.getUTCSeconds(),P[f+4>>>2>>>0]=s.getUTCMinutes(),P[f+8>>>2>>>0]=s.getUTCHours(),P[f+12>>>2>>>0]=s.getUTCDate(),P[f+16>>>2>>>0]=s.getUTCMonth(),P[f+20>>>2>>>0]=s.getUTCFullYear()-1900,P[f+24>>>2>>>0]=s.getUTCDay(),P[f+28>>>2>>>0]=(s.getTime()-Date.UTC(s.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},U:function(s,f){s=-9007199254740992>s||9007199254740992<s?NaN:Number(s),f>>>=0,s=new Date(1e3*s),P[f>>>2>>>0]=s.getSeconds(),P[f+4>>>2>>>0]=s.getMinutes(),P[f+8>>>2>>>0]=s.getHours(),P[f+12>>>2>>>0]=s.getDate(),P[f+16>>>2>>>0]=s.getMonth(),P[f+20>>>2>>>0]=s.getFullYear()-1900,P[f+24>>>2>>>0]=s.getDay(),P[f+28>>>2>>>0]=(at(s.getFullYear())?bn:vt)[s.getMonth()]+s.getDate()-1|0,P[f+36>>>2>>>0]=-(60*s.getTimezoneOffset());var y=new Date(s.getFullYear(),6,1).getTimezoneOffset(),_=new Date(s.getFullYear(),0,1).getTimezoneOffset();P[f+32>>>2>>>0]=(y!=_&&s.getTimezoneOffset()==Math.min(_,y))|0},V:function(s){s>>>=0;var f=new Date(P[s+20>>>2>>>0]+1900,P[s+16>>>2>>>0],P[s+12>>>2>>>0],P[s+8>>>2>>>0],P[s+4>>>2>>>0],P[s>>>2>>>0],0),y=P[s+32>>>2>>>0],_=f.getTimezoneOffset(),E=new Date(f.getFullYear(),6,1).getTimezoneOffset(),D=new Date(f.getFullYear(),0,1).getTimezoneOffset(),H=Math.min(D,E);return 0>y?P[s+32>>>2>>>0]=+(E!=D&&H==_):0<y!=(H==_)&&(E=Math.max(D,E),f.setTime(f.getTime()+6e4*((0<y?H:E)-_))),P[s+24>>>2>>>0]=f.getDay(),P[s+28>>>2>>>0]=(at(f.getFullYear())?bn:vt)[f.getMonth()]+f.getDate()-1|0,P[s>>>2>>>0]=f.getSeconds(),P[s+4>>>2>>>0]=f.getMinutes(),P[s+8>>>2>>>0]=f.getHours(),P[s+12>>>2>>>0]=f.getDate(),P[s+16>>>2>>>0]=f.getMonth(),P[s+20>>>2>>>0]=f.getYear(),s=f.getTime(),isNaN(s)?(P[Cn()>>>2>>>0]=61,s=-1):s/=1e3,BigInt(s)},R:function(){return-52},S:function(){},K:function(s,f,y){function _(J){return(J=J.toTimeString().match(/\(([A-Za-z ]+)\)$/))?J[1]:"GMT"}y>>>=0;var E=new Date().getFullYear(),D=new Date(E,0,1),H=new Date(E,6,1);E=D.getTimezoneOffset();var q=H.getTimezoneOffset();te[s>>>0>>>2>>>0]=60*Math.max(E,q),P[f>>>0>>>2>>>0]=+(E!=q),s=_(D),f=_(H),s=Fr(s),f=Fr(f),q<E?(te[y>>>2>>>0]=s,te[y+4>>>2>>>0]=f):(te[y>>>2>>>0]=f,te[y+4>>>2>>>0]=s)},v:()=>{Ye("")},d:function(s,f,y){return s>>>=0,f=it(f>>>0,y>>>0),Le[s].apply(null,f)},I:function(s,f,y){return s>>>=0,f=it(f>>>0,y>>>0),Le[s].apply(null,f)},E:()=>Date.now(),L:function(){return 4294901760},q:()=>performance.now(),J:function(s){s>>>=0;var f=V.length;if(4294901760<s)return!1;for(var y=1;4>=y;y*=2){var _=f*(1+.2/y);_=Math.min(_,s+100663296);var E=Math;_=Math.max(s,_);e:{E=(E.min.call(E,4294901760,_+(65536-_%65536)%65536)-A.buffer.byteLength+65535)/65536;try{A.grow(E),de();var D=1;break e}catch{}D=void 0}if(D)return!0}return!1},Y:function(s,f){s>>>=0,f>>>=0;var y=0;return Je().forEach((_,E)=>{var D=f+y;for(E=te[s+4*E>>>2>>>0]=D,D=0;D<_.length;++D)z[E++>>>0>>>0]=_.charCodeAt(D);z[E>>>0>>>0]=0,y+=_.length+1}),0},Z:function(s,f){s>>>=0,f>>>=0;var y=Je();te[s>>>2>>>0]=y.length;var _=0;return y.forEach(E=>_+=E.length+1),te[f>>>2>>>0]=_,0},y:()=>52,C:function(){return 52},X:function(){return 70},B:function(s,f,y,_){f>>>=0,y>>>=0,_>>>=0;for(var E=0,D=0;D<y;D++){var H=te[f>>>2>>>0],q=te[f+4>>>2>>>0];f+=8;for(var J=0;J<q;J++){var Z=V[H+J>>>0],ce=vn[s];Z===0||Z===10?((s===1?C:S)(Ft(ce,0)),ce.length=0):ce.push(Z)}E+=q}return te[_>>>2>>>0]=E,0},ea:Sn,p:function(s,f,y,_){return Sn(s>>>0,f>>>0,y>>>0,_>>>0)}},le=function(){function s(y){return le=y.exports,le=cn(),le=An(),A=le.ja,de(),xe.unshift(le.ka),_e--,_e==0&&(ke!==null&&(clearInterval(ke),ke=null),Re&&(y=Re,Re=null,y())),le}var f={a:wa};if(_e++,r.instantiateWasm)try{return r.instantiateWasm(f,s)}catch(y){S(`Module.instantiateWasm callback failed with error: ${y}`),i(y)}return qe(f,function(y){s(y.instance)}).catch(i),{}}();r._OrtInit=(s,f)=>(r._OrtInit=le.la)(s,f),r._OrtGetLastError=(s,f)=>(r._OrtGetLastError=le.ma)(s,f),r._OrtCreateSessionOptions=(s,f,y,_,E,D,H,q,J,Z)=>(r._OrtCreateSessionOptions=le.na)(s,f,y,_,E,D,H,q,J,Z),r._OrtAppendExecutionProvider=(s,f)=>(r._OrtAppendExecutionProvider=le.oa)(s,f),r._OrtAddFreeDimensionOverride=(s,f,y)=>(r._OrtAddFreeDimensionOverride=le.pa)(s,f,y),r._OrtAddSessionConfigEntry=(s,f,y)=>(r._OrtAddSessionConfigEntry=le.qa)(s,f,y),r._OrtReleaseSessionOptions=s=>(r._OrtReleaseSessionOptions=le.ra)(s),r._OrtCreateSession=(s,f,y)=>(r._OrtCreateSession=le.sa)(s,f,y),r._OrtReleaseSession=s=>(r._OrtReleaseSession=le.ta)(s),r._OrtGetInputOutputCount=(s,f,y)=>(r._OrtGetInputOutputCount=le.ua)(s,f,y),r._OrtGetInputName=(s,f)=>(r._OrtGetInputName=le.va)(s,f),r._OrtGetOutputName=(s,f)=>(r._OrtGetOutputName=le.wa)(s,f),r._OrtFree=s=>(r._OrtFree=le.xa)(s),r._OrtCreateTensor=(s,f,y,_,E,D)=>(r._OrtCreateTensor=le.ya)(s,f,y,_,E,D),r._OrtGetTensorData=(s,f,y,_,E)=>(r._OrtGetTensorData=le.za)(s,f,y,_,E),r._OrtReleaseTensor=s=>(r._OrtReleaseTensor=le.Aa)(s),r._OrtCreateRunOptions=(s,f,y,_)=>(r._OrtCreateRunOptions=le.Ba)(s,f,y,_),r._OrtAddRunConfigEntry=(s,f,y)=>(r._OrtAddRunConfigEntry=le.Ca)(s,f,y),r._OrtReleaseRunOptions=s=>(r._OrtReleaseRunOptions=le.Da)(s),r._OrtCreateBinding=s=>(r._OrtCreateBinding=le.Ea)(s),r._OrtBindInput=(s,f,y)=>(r._OrtBindInput=le.Fa)(s,f,y),r._OrtBindOutput=(s,f,y,_)=>(r._OrtBindOutput=le.Ga)(s,f,y,_),r._OrtClearBoundOutputs=s=>(r._OrtClearBoundOutputs=le.Ha)(s),r._OrtReleaseBinding=s=>(r._OrtReleaseBinding=le.Ia)(s),r._OrtRunWithBinding=(s,f,y,_,E)=>(r._OrtRunWithBinding=le.Ja)(s,f,y,_,E),r._OrtRun=(s,f,y,_,E,D,H,q)=>(r._OrtRun=le.Ka)(s,f,y,_,E,D,H,q),r._OrtEndProfiling=s=>(r._OrtEndProfiling=le.La)(s),r._JsepOutput=(s,f,y)=>(r._JsepOutput=le.Ma)(s,f,y),r._JsepGetNodeName=s=>(r._JsepGetNodeName=le.Na)(s);var Cn=()=>(Cn=le.Oa)(),jt=r._malloc=s=>(jt=r._malloc=le.Pa)(s),ct=r._free=s=>(ct=r._free=le.Qa)(s),ar=s=>(ar=le.Ra)(s),wr=()=>(wr=le.Ta)(),$r=s=>($r=le.Ua)(s),qr=s=>(qr=le.Va)(s),ir=s=>(ir=le.Xa)(s),In=()=>(In=le.Ya)(),Ct=s=>(Ct=le.Za)(s),yt=()=>(yt=le._a)();r.___start_em_js=957888,r.___stop_em_js=958049;function An(){var s=le;s=Object.assign({},s);var f=_=>()=>_()>>>0,y=_=>E=>_(E)>>>0;return s.Oa=f(s.Oa),s.Pa=y(s.Pa),s.Ra=y(s.Ra),s.Ta=f(s.Ta),s.Va=y(s.Va),s}r.stackAlloc=qr,r.stackSave=wr,r.stackRestore=$r,r.UTF8ToString=je,r.stringToUTF8=(s,f,y)=>Et(s,V,f,y),r.lengthBytesUTF8=Vt;var Ht;Re=function s(){Ht||jr(),Ht||(Re=s)};function jr(){if(!(0<_e)){if(r.preRun)for(typeof r.preRun=="function"&&(r.preRun=[r.preRun]);r.preRun.length;){var s=r.preRun.shift();Oe.unshift(s)}for(;0<Oe.length;)Oe.shift()(r);if(!(0<_e||Ht||(Ht=!0,r.calledRun=!0,O))){for(;0<xe.length;)xe.shift()(r);for(n(r);0<ae.length;)ae.shift()(r)}}}return jr(),t.ready}})();typeof Co=="object"&&typeof za=="object"?za.exports=xo:typeof define=="function"&&define.amd&&define([],()=>xo)});var Ao=_r(()=>{});var To=_r(()=>{});var Eo={};sr(Eo,{cpus:()=>Gd});var Gd,Oo=j(()=>{Gd=void 0});var Ro=_r((Po,Ua)=>{"use strict";var ko=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){function r(){return ve.buffer!=ae.buffer&&He(),ae}function n(){return ve.buffer!=ae.buffer&&He(),_e}function i(){return ve.buffer!=ae.buffer&&He(),ke}function u(){return ve.buffer!=ae.buffer&&He(),Re}function o(){return ve.buffer!=ae.buffer&&He(),Ye}function c(){return ve.buffer!=ae.buffer&&He(),F}function p(){return ve.buffer!=ae.buffer&&He(),oe}function m(){return ve.buffer!=ae.buffer&&He(),Ze}var l=t,g,b;l.ready=new Promise((a,d)=>{g=a,b=d}),l.mountExternalData=(a,d)=>{(l.Fb||(l.Fb=new Map)).set(a,d)},l.unmountExternalData=()=>{delete l.Fb},l.jsepInit=(a,d,h,w,I,k,U,G,Q,X,me)=>{l.uc=a,l.$b=d,l.dc=h,l.Ob=w,l.cc=I,l.eb=k,l.ec=U,l.hc=G,l.ac=Q,l.bc=X,l.fc=me,d=(ne,be,B)=>(...se)=>{let Ce=yt,st=be?.();se=ne(...se);let or=be?.();return st!==or&&(ne=or,B(st),be=B=null),yt!=Ce?E():se},h=ne=>async(...be)=>{try{if(l.Eb)throw Error("Session already started");let B=l.Eb={jc:be[0],errors:[]},se=await ne(...be);if(l.Eb!==B)throw Error("Session mismatch");a.flush();let Ce=B.errors;if(0<Ce.length){let st=await Promise.all(Ce);if(st=st.filter(or=>or),0<st.length)throw Error(st.join(`
`))}return se}finally{l.Eb=null}},l._OrtCreateSession=d(l._OrtCreateSession,()=>l._OrtCreateSession,ne=>l._OrtCreateSession=ne),l._OrtRun=h(d(l._OrtRun,()=>l._OrtRun,ne=>l._OrtRun=ne)),l._OrtRunWithBinding=h(d(l._OrtRunWithBinding,()=>l._OrtRunWithBinding,ne=>l._OrtRunWithBinding=ne)),l._OrtBindInput=d(l._OrtBindInput,()=>l._OrtBindInput,ne=>l._OrtBindInput=ne),l.jsepRegisterBuffer=(ne,be,B,se)=>a.registerBuffer(ne,be,B,se),l.jsepGetBuffer=ne=>a.getBuffer(ne),l.jsepCreateDownloader=(ne,be,B)=>a.createDownloader(ne,be,B),l.jsepOnReleaseSession=ne=>{a.onReleaseSession(ne)},l.jsepOnRunStart=ne=>a.onRunStart(ne)};var $=Object.assign({},l),v="./this.program",x=(a,d)=>{throw d},T=typeof window=="object",C=typeof importScripts=="function",S=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",A=l.ENVIRONMENT_IS_PTHREAD||!1,O="";function M(a){return l.locateFile?l.locateFile(a,O):O+a}var z,V,K;if(S){var ue=(Ba(),Kt(Ra)),P=(Ma(),Kt(Da));O=C?P.dirname(O)+"/":__dirname+"/",z=(d,h)=>(d=Vt(d)?new URL(d):P.normalize(d),ue.readFileSync(d,h?void 0:"utf8")),K=d=>(d=z(d,!0),d.buffer||(d=new Uint8Array(d)),d),V=(d,h,w,I=!0)=>{d=Vt(d)?new URL(d):P.normalize(d),ue.readFile(d,I?void 0:"utf8",(k,U)=>{k?w(k):h(I?U.buffer:U)})},!l.thisProgram&&1<process.argv.length&&(v=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),x=(d,h)=>{throw process.exitCode=d,h},l.inspect=()=>"[Emscripten Module object]";let a;try{a=Ao()}catch(d){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),d}global.Worker=a.Worker}else(T||C)&&(C?O=self.location.href:typeof document<"u"&&document.currentScript&&(O=document.currentScript.src),typeof e<"u"&&e&&(O=e),O.indexOf("blob:")!==0?O=O.substr(0,O.replace(/[?#].*/,"").lastIndexOf("/")+1):O="",S||(z=a=>{var d=new XMLHttpRequest;return d.open("GET",a,!1),d.send(null),d.responseText},C&&(K=a=>{var d=new XMLHttpRequest;return d.open("GET",a,!1),d.responseType="arraybuffer",d.send(null),new Uint8Array(d.response)}),V=(a,d,h)=>{var w=new XMLHttpRequest;w.open("GET",a,!0),w.responseType="arraybuffer",w.onload=()=>{w.status==200||w.status==0&&w.response?d(w.response):h()},w.onerror=h,w.send(null)}));S&&typeof performance>"u"&&(global.performance=To().performance);var te=console.log.bind(console),Me=console.error.bind(console);S&&(te=(...a)=>ue.writeSync(1,a.join(" ")+`
`),Me=(...a)=>ue.writeSync(2,a.join(" ")+`
`));var We=te,$e=Me;Object.assign(l,$),$=null,typeof WebAssembly!="object"&&Ft("no native wasm support detected");var ve,de,Oe=!1,xe,ae,_e,ke,Re,Ye,F,oe,ye,_t,Ze;function He(){var a=ve.buffer;l.HEAP8=ae=new Int8Array(a),l.HEAP16=ke=new Int16Array(a),l.HEAPU8=_e=new Uint8Array(a),l.HEAPU16=Re=new Uint16Array(a),l.HEAP32=Ye=new Int32Array(a),l.HEAPU32=F=new Uint32Array(a),l.HEAPF32=oe=new Float32Array(a),l.HEAPF64=Ze=new Float64Array(a),l.HEAP64=ye=new BigInt64Array(a),l.HEAPU64=_t=new BigUint64Array(a)}var Lt=16777216;if(A)ve=l.wasmMemory;else if(l.wasmMemory)ve=l.wasmMemory;else if(ve=new WebAssembly.Memory({initial:Lt/65536,maximum:65536,shared:!0}),!(ve.buffer instanceof SharedArrayBuffer))throw $e("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),S&&$e("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");He(),Lt=ve.buffer.byteLength;var qe=[],Le=[],Nt=[],St=0,Gt=null,Qt=null;function Tr(){if(St--,St==0&&(Gt!==null&&(clearInterval(Gt),Gt=null),Qt)){var a=Qt;Qt=null,a()}}function Ft(a){throw a="Aborted("+a+")",$e(a),Oe=!0,xe=1,a=new WebAssembly.RuntimeError(a+". Build with -sASSERTIONS for more info."),b(a),a}var je=a=>a.startsWith("data:application/octet-stream;base64,"),Vt=a=>a.startsWith("file://"),Et;Et="ort-wasm-simd-threaded.wasm",je(Et)||(Et=M(Et));function Er(a){if(K)return K(a);throw"both async and sync fetching of the wasm failed"}function sn(a){if(T||C){if(typeof fetch=="function"&&!Vt(a))return fetch(a,{credentials:"same-origin"}).then(d=>{if(!d.ok)throw"failed to load wasm binary file at '"+a+"'";return d.arrayBuffer()}).catch(()=>Er(a));if(V)return new Promise((d,h)=>{V(a,w=>d(new Uint8Array(w)),h)})}return Promise.resolve().then(()=>Er(a))}function lt(a,d,h){return sn(a).then(w=>WebAssembly.instantiate(w,d)).then(w=>w).then(h,w=>{$e(`failed to asynchronously prepare wasm: ${w}`),Ft(w)})}function Or(a,d){var h=Et;return typeof WebAssembly.instantiateStreaming!="function"||je(h)||Vt(h)||S||typeof fetch!="function"?lt(h,a,d):fetch(h,{credentials:"same-origin"}).then(w=>WebAssembly.instantiateStreaming(w,a).then(d,function(I){return $e(`wasm streaming compile failed: ${I}`),$e("falling back to ArrayBuffer instantiation"),lt(h,a,d)}))}var er={1381140:(a,d,h,w)=>{if(typeof l>"u"||!l.Fb)return 1;if(a=De(a>>>0),a.startsWith("./")&&(a=a.substring(2)),a=l.Fb.get(a),!a)return 2;if(d>>>=0,h>>>=0,w>>>=0,d+h>a.byteLength)return 3;try{return n().set(a.subarray(d,d+h),w>>>0),0}catch{return 4}},1381641:()=>{l.ac()},1381672:()=>{l.bc()},1381701:()=>{l.fc()},1381726:a=>l.$b(a),1381759:a=>l.dc(a),1381791:(a,d,h)=>{l.Ob(a,d,h,!0)},1381830:(a,d,h)=>{l.Ob(a,d,h)},1381863:a=>{l.eb("Abs",a,void 0)},1381914:a=>{l.eb("Neg",a,void 0)},1381965:a=>{l.eb("Floor",a,void 0)},1382018:a=>{l.eb("Ceil",a,void 0)},1382070:a=>{l.eb("Reciprocal",a,void 0)},1382128:a=>{l.eb("Sqrt",a,void 0)},1382180:a=>{l.eb("Exp",a,void 0)},1382231:a=>{l.eb("Erf",a,void 0)},1382282:a=>{l.eb("Sigmoid",a,void 0)},1382337:(a,d,h)=>{l.eb("HardSigmoid",a,{alpha:d,beta:h})},1382416:a=>{l.eb("Log",a,void 0)},1382467:a=>{l.eb("Sin",a,void 0)},1382518:a=>{l.eb("Cos",a,void 0)},1382569:a=>{l.eb("Tan",a,void 0)},1382620:a=>{l.eb("Asin",a,void 0)},1382672:a=>{l.eb("Acos",a,void 0)},1382724:a=>{l.eb("Atan",a,void 0)},1382776:a=>{l.eb("Sinh",a,void 0)},1382828:a=>{l.eb("Cosh",a,void 0)},1382880:a=>{l.eb("Asinh",a,void 0)},1382933:a=>{l.eb("Acosh",a,void 0)},1382986:a=>{l.eb("Atanh",a,void 0)},1383039:a=>{l.eb("Tanh",a,void 0)},1383091:a=>{l.eb("Not",a,void 0)},1383142:(a,d,h)=>{l.eb("Clip",a,{min:d,max:h})},1383211:a=>{l.eb("Clip",a,void 0)},1383263:(a,d)=>{l.eb("Elu",a,{alpha:d})},1383321:a=>{l.eb("Relu",a,void 0)},1383373:(a,d)=>{l.eb("LeakyRelu",a,{alpha:d})},1383437:(a,d)=>{l.eb("ThresholdedRelu",a,{alpha:d})},1383507:(a,d)=>{l.eb("Cast",a,{to:d})},1383565:a=>{l.eb("Add",a,void 0)},1383616:a=>{l.eb("Sub",a,void 0)},1383667:a=>{l.eb("Mul",a,void 0)},1383718:a=>{l.eb("Div",a,void 0)},1383769:a=>{l.eb("Pow",a,void 0)},1383820:a=>{l.eb("Equal",a,void 0)},1383873:a=>{l.eb("Greater",a,void 0)},1383928:a=>{l.eb("GreaterOrEqual",a,void 0)},1383990:a=>{l.eb("Less",a,void 0)},1384042:a=>{l.eb("LessOrEqual",a,void 0)},1384101:(a,d,h,w,I)=>{l.eb("ReduceMean",a,{keepDims:!!d,noopWithEmptyAxes:!!h,axes:w?Array.from(o().subarray(w>>>0,I>>>0)):[]})},1384260:(a,d,h,w,I)=>{l.eb("ReduceMax",a,{keepDims:!!d,noopWithEmptyAxes:!!h,axes:w?Array.from(o().subarray(w>>>0,I>>>0)):[]})},1384418:(a,d,h,w,I)=>{l.eb("ReduceMin",a,{keepDims:!!d,noopWithEmptyAxes:!!h,axes:w?Array.from(o().subarray(w>>>0,I>>>0)):[]})},1384576:(a,d,h,w,I)=>{l.eb("ReduceProd",a,{keepDims:!!d,noopWithEmptyAxes:!!h,axes:w?Array.from(o().subarray(w>>>0,I>>>0)):[]})},1384735:(a,d,h,w,I)=>{l.eb("ReduceSum",a,{keepDims:!!d,noopWithEmptyAxes:!!h,axes:w?Array.from(o().subarray(w>>>0,I>>>0)):[]})},1384893:(a,d,h,w,I)=>{l.eb("ReduceL1",a,{keepDims:!!d,noopWithEmptyAxes:!!h,axes:w?Array.from(o().subarray(w>>>0,I>>>0)):[]})},1385050:(a,d,h,w,I)=>{l.eb("ReduceL2",a,{keepDims:!!d,noopWithEmptyAxes:!!h,axes:w?Array.from(o().subarray(w>>>0,I>>>0)):[]})},1385207:(a,d,h,w,I)=>{l.eb("ReduceLogSum",a,{keepDims:!!d,noopWithEmptyAxes:!!h,axes:w?Array.from(o().subarray(w>>>0,I>>>0)):[]})},1385368:(a,d,h,w,I)=>{l.eb("ReduceSumSquare",a,{keepDims:!!d,noopWithEmptyAxes:!!h,axes:w?Array.from(o().subarray(w>>>0,I>>>0)):[]})},1385532:(a,d,h,w,I)=>{l.eb("ReduceLogSumExp",a,{keepDims:!!d,noopWithEmptyAxes:!!h,axes:w?Array.from(o().subarray(w>>>0,I>>>0)):[]})},1385696:a=>{l.eb("Where",a,void 0)},1385749:(a,d,h)=>{l.eb("Transpose",a,{perm:d?Array.from(o().subarray(d>>>0,h>>>0)):[]})},1385857:(a,d,h,w,I,k,U,G,Q,X,me,ne,be,B,se)=>{l.eb("ConvTranspose",a,{format:Q?"NHWC":"NCHW",autoPad:d,dilations:[h],group:w,kernel_shape:[I],pads:[k,U],strides:[G],wIsConst:()=>!!r()[X>>>0],outputPadding:me?Array.from(o().subarray(me>>>0,ne>>>0)):[],outputShape:be?Array.from(o().subarray(be>>>0,B>>>0)):[],activation:De(se)})},1386259:(a,d,h,w,I,k,U,G,Q,X,me,ne,be,B)=>{l.eb("ConvTranspose",a,{format:G?"NHWC":"NCHW",autoPad:d,dilations:Array.from(o().subarray(h>>>0,(h>>>0)+2>>>0)),group:w,kernelShape:Array.from(o().subarray(I>>>0,(I>>>0)+2>>>0)),pads:Array.from(o().subarray(k>>>0,(k>>>0)+4>>>0)),strides:Array.from(o().subarray(U>>>0,(U>>>0)+2>>>0)),wIsConst:()=>!!r()[Q>>>0],outputPadding:X?Array.from(o().subarray(X>>>0,me>>>0)):[],outputShape:ne?Array.from(o().subarray(ne>>>0,be>>>0)):[],activation:De(B)})},1386824:(a,d,h,w,I,k,U,G,Q,X,me,ne,be,B,se)=>{l.eb("ConvTranspose",a,{format:Q?"NHWC":"NCHW",autoPad:d,dilations:[h],group:w,kernel_shape:[I],pads:[k,U],strides:[G],wIsConst:()=>!!r()[X>>>0],outputPadding:me?Array.from(o().subarray(me>>>0,ne>>>0)):[],outputShape:be?Array.from(o().subarray(be>>>0,B>>>0)):[],activation:De(se)})},1387226:(a,d,h,w,I,k,U,G,Q,X,me,ne,be,B)=>{l.eb("ConvTranspose",a,{format:G?"NHWC":"NCHW",autoPad:d,dilations:Array.from(o().subarray(h>>>0,(h>>>0)+2>>>0)),group:w,kernelShape:Array.from(o().subarray(I>>>0,(I>>>0)+2>>>0)),pads:Array.from(o().subarray(k>>>0,(k>>>0)+4>>>0)),strides:Array.from(o().subarray(U>>>0,(U>>>0)+2>>>0)),wIsConst:()=>!!r()[Q>>>0],outputPadding:X?Array.from(o().subarray(X>>>0,me>>>0)):[],outputShape:ne?Array.from(o().subarray(ne>>>0,be>>>0)):[],activation:De(B)})},1387791:(a,d)=>{l.eb("GlobalAveragePool",a,{format:d?"NHWC":"NCHW"})},1387882:(a,d,h,w,I,k,U,G,Q,X,me,ne,be,B,se,Ce)=>{l.eb("AveragePool",a,{format:Ce?"NHWC":"NCHW",auto_pad:d,ceil_mode:h,count_include_pad:w,storage_order:I,dilations:[k,U],kernel_shape:[G,Q],pads:[X,me,ne,be],strides:[B,se]})},1388166:(a,d)=>{l.eb("GlobalAveragePool",a,{format:d?"NHWC":"NCHW"})},1388257:(a,d,h,w,I,k,U,G,Q,X,me,ne,be,B,se,Ce)=>{l.eb("AveragePool",a,{format:Ce?"NHWC":"NCHW",auto_pad:d,ceil_mode:h,count_include_pad:w,storage_order:I,dilations:[k,U],kernel_shape:[G,Q],pads:[X,me,ne,be],strides:[B,se]})},1388541:(a,d)=>{l.eb("GlobalMaxPool",a,{format:d?"NHWC":"NCHW"})},1388628:(a,d,h,w,I,k,U,G,Q,X,me,ne,be,B,se,Ce)=>{l.eb("MaxPool",a,{format:Ce?"NHWC":"NCHW",auto_pad:d,ceil_mode:h,count_include_pad:w,storage_order:I,dilations:[k,U],kernel_shape:[G,Q],pads:[X,me,ne,be],strides:[B,se]})},1388908:(a,d)=>{l.eb("GlobalMaxPool",a,{format:d?"NHWC":"NCHW"})},1388995:(a,d,h,w,I,k,U,G,Q,X,me,ne,be,B,se,Ce)=>{l.eb("MaxPool",a,{format:Ce?"NHWC":"NCHW",auto_pad:d,ceil_mode:h,count_include_pad:w,storage_order:I,dilations:[k,U],kernel_shape:[G,Q],pads:[X,me,ne,be],strides:[B,se]})},1389275:(a,d,h,w,I)=>{l.eb("Gemm",a,{alpha:d,beta:h,transA:w,transB:I})},1389379:a=>{l.eb("MatMul",a,void 0)},1389433:(a,d,h,w)=>{l.eb("ArgMax",a,{keepDims:!!d,selectLastIndex:!!h,axis:w})},1389541:(a,d,h,w)=>{l.eb("ArgMin",a,{keepDims:!!d,selectLastIndex:!!h,axis:w})},1389649:(a,d)=>{l.eb("Softmax",a,{axis:d})},1389712:(a,d)=>{l.eb("Concat",a,{axis:d})},1389772:(a,d,h,w,I)=>{l.eb("Split",a,{axis:d,numOutputs:h,splitSizes:w?Array.from(o().subarray(w>>>0,I>>>0)):[]})},1389912:a=>{l.eb("Expand",a,void 0)},1389966:(a,d)=>{l.eb("Gather",a,{axis:Number(d)})},1390037:(a,d)=>{l.eb("GatherElements",a,{axis:Number(d)})},1390116:(a,d,h,w,I,k,U,G,Q,X,me)=>{l.eb("Resize",a,{antialias:d,axes:h?Array.from(o().subarray(h>>>0,w>>>0)):[],coordinateTransformMode:De(I),cubicCoeffA:k,excludeOutside:U,extrapolationValue:G,keepAspectRatioPolicy:De(Q),mode:De(X),nearestMode:De(me)})},1390462:(a,d,h,w,I,k,U)=>{l.eb("Slice",a,{starts:d?Array.from(o().subarray(d>>>0,h>>>0)):[],ends:w?Array.from(o().subarray(w>>>0,I>>>0)):[],axes:k?Array.from(o().subarray(k>>>0,U>>>0)):[]})},1390678:a=>{l.eb("Tile",a,void 0)},1390730:(a,d,h)=>{l.eb("LayerNormalization",a,{axis:Number(d),epsilon:Number(h)})},1390837:(a,d,h)=>{l.eb("InstanceNormalization",a,{epsilon:d,format:h?"NHWC":"NCHW"})},1390951:(a,d,h)=>{l.eb("InstanceNormalization",a,{epsilon:d,format:h?"NHWC":"NCHW"})},1391065:a=>{l.eb("Range",a,void 0)},1391118:(a,d)=>{l.eb("Einsum",a,{equation:De(d)})},1391199:(a,d,h,w,I)=>{l.eb("Pad",a,{mode:d,value:h,pads:w?Array.from(o().subarray(w>>>0,I>>>0)):[]})},1391326:(a,d,h,w,I,k)=>{l.eb("BatchNormalization",a,{epsilon:d,momentum:h,spatial:!!I,trainingMode:!!w,format:k?"NHWC":"NCHW"})},1391495:(a,d,h,w,I,k)=>{l.eb("BatchNormalization",a,{epsilon:d,momentum:h,spatial:!!I,trainingMode:!!w,format:k?"NHWC":"NCHW"})},1391664:(a,d,h)=>{l.eb("CumSum",a,{exclusive:Number(d),reverse:Number(h)})},1391761:(a,d,h,w,I,k,U,G,Q)=>{l.eb("Attention",a,{numHeads:d,isUnidirectional:h,maskFilterValue:w,scale:I,doRotary:k,qkvHiddenSizes:U?Array.from(o().subarray(Number(G)>>>0,Number(G)+U>>>0)):[],pastPresentShareBuffer:!!Q})},1392033:a=>{l.eb("Gelu",a,void 0)},1392085:(a,d,h,w,I,k)=>{l.eb("MultiHeadAttention",a,{numHeads:d,isUnidirectional:h,maskFilterValue:w,scale:I,doRotary:k})},1392244:a=>{l.eb("BiasAdd",a,void 0)},1392299:a=>{l.eb("BiasSplitGelu",a,void 0)},1392360:(a,d)=>{l.eb("SkipLayerNormalization",a,{epsilon:d})},1392441:(a,d,h,w,I,k,U,G,Q,X,me,ne,be)=>{l.eb("Conv",a,{format:Q?"NHWC":"NCHW",auto_pad:d,dilations:[h],group:w,kernel_shape:[I],pads:k?Array.from(o().subarray(k>>>0,U>>>0)):[],strides:[G],w_is_const:()=>!!r()[X>>>0],activation:De(me),activation_params:ne?Array.from(p().subarray(ne>>>0,be>>>0)):[]})},1392811:(a,d,h,w,I,k,U,G,Q,X,me,ne,be,B,se,Ce)=>{l.eb("Conv",a,{format:ne?"NHWC":"NCHW",auto_pad:d,dilations:[h,w],group:I,kernel_shape:[k,U],pads:G?Array.from(o().subarray(G>>>0,Q>>>0)):[],strides:[X,me],w_is_const:()=>!!r()[be>>>0],activation:De(B),activation_params:se?Array.from(p().subarray(se>>>0,Ce>>>0)):[]})},1393202:a=>{l.ec(a)},1393236:(a,d)=>l.hc(a,d,l.Eb.jc,l.Eb.errors)};function kr(a){this.name="ExitStatus",this.message=`Program terminated with exit(${a})`,this.status=a}var bt=a=>{a.terminate(),a.onmessage=()=>{}},un=a=>{fe.yb.length==0&&(Mr(),fe.Pb(fe.yb[0]));var d=fe.yb.pop();if(!d)return 6;fe.zb.push(d),fe.pb[a.xb]=d,d.xb=a.xb;var h={cmd:"run",start_routine:a.kc,arg:a.Vb,pthread_ptr:a.xb};return S&&d.unref(),d.postMessage(h,a.qc),0},Xe=0,Pr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Rr=(a,d,h)=>{d>>>=0;var w=d+h;for(h=d;a[h]&&!(h>=w);)++h;if(16<h-d&&a.buffer&&Pr)return Pr.decode(a.buffer instanceof SharedArrayBuffer?a.slice(d,h):a.subarray(d,h));for(w="";d<h;){var I=a[d++];if(I&128){var k=a[d++]&63;if((I&224)==192)w+=String.fromCharCode((I&31)<<6|k);else{var U=a[d++]&63;I=(I&240)==224?(I&15)<<12|k<<6|U:(I&7)<<18|k<<12|U<<6|a[d++]&63,65536>I?w+=String.fromCharCode(I):(I-=65536,w+=String.fromCharCode(55296|I>>10,56320|I&1023))}}else w+=String.fromCharCode(I)}return w},De=(a,d)=>(a>>>=0)?Rr(n(),a,d):"",Br=a=>{var d=Ia();return a=a(),On(d),a};function Se(a,d){var h=arguments.length-2,w=arguments;return Br(()=>{for(var I=2*h,k=Aa(8*I),U=k>>>3,G=0;G<h;G++){var Q=w[2+G];typeof Q=="bigint"?(ye[U+2*G]=1n,ye[U+2*G+1]=Q):(ye[U+2*G]=0n,m()[U+2*G+1>>>0]=Q)}return Wi(a,I,k,d)})}function dt(a){if(A)return Se(0,1,a);xe=a,0<Xe||(fe.lc(),l.onExit?.(a),Oe=!0),x(a,new kr(a))}var fr=a=>{if(xe=a,A)throw ln(a),"unwind";dt(a)},Dr=a=>{a instanceof kr||a=="unwind"||x(1,a)};function ga(){for(var a=l.numThreads;a--;)Mr();qe.unshift(()=>{St++,ya(()=>Tr())})}function Mr(){var a=M("ort-wasm-simd-threaded.worker.js");a=new Worker(a),fe.yb.push(a)}function ya(a){A?a():Promise.all(fe.yb.map(fe.Pb)).then(a)}var fe={yb:[],zb:[],Ub:[],pb:{},Ib(){A?(fe.receiveObjectTransfer=fe.ic,fe.threadInitTLS=fe.Tb,fe.setExitStatus=fe.Sb):ga()},Sb:a=>xe=a,vc:["$terminateWorker"],lc:()=>{for(var a of fe.zb)bt(a);for(a of fe.yb)bt(a);fe.yb=[],fe.zb=[],fe.pb=[]},Rb:a=>{var d=a.xb;delete fe.pb[d],fe.yb.push(a),fe.zb.splice(fe.zb.indexOf(a),1),a.xb=0,xa(d)},ic(){},Tb(){fe.Ub.forEach(a=>a())},Pb:a=>new Promise(d=>{a.onmessage=k=>{k=k.data;var U=k.cmd;if(k.targetThread&&k.targetThread!=En()){var G=fe.pb[k.targetThread];G?G.postMessage(k,k.transferList):$e(`Internal error! Worker sent a message "${U}" to target pthread ${k.targetThread}, but that thread no longer exists!`)}else U==="checkMailbox"?ar():U==="spawnThread"?un(k):U==="cleanupThread"?fe.Rb(fe.pb[k.thread]):U==="killThread"?(k=k.thread,U=fe.pb[k],delete fe.pb[k],bt(U),xa(k),fe.zb.splice(fe.zb.indexOf(U),1),U.xb=0):U==="cancelThread"?fe.pb[k.thread].postMessage({cmd:"cancel"}):U==="loaded"?(a.loaded=!0,S&&!a.xb&&a.unref(),d(a)):U==="alert"?alert(`Thread ${k.threadId}: ${k.text}`):k.target==="setimmediate"?a.postMessage(k):U==="callHandler"?l[k.handler](...k.args):U&&$e(`worker sent an unknown command ${U}`)},a.onerror=k=>{throw $e(`worker sent an error! ${k.filename}:${k.lineno}: ${k.message}`),k},S&&(a.on("message",k=>a.onmessage({data:k})),a.on("error",k=>a.onerror(k)));var h=[],w=["onExit"],I;for(I of w)l.hasOwnProperty(I)&&h.push(I);a.postMessage({cmd:"load",handlers:h,urlOrBlob:l.mainScriptUrlOrBlob||e,wasmMemory:ve,wasmModule:de})})};l.PThread=fe;var mr=a=>{for(;0<a.length;)a.shift()(l)};l.establishStackSpace=()=>{var a=En(),d=c()[a+52>>>2>>>0];a=c()[a+56>>>2>>>0],Vi(d,d-a),On(d)};function ln(a){if(A)return Se(1,0,a);fr(a)}l.invokeEntryPoint=(a,d)=>{a=Hi.apply(null,[a,d]),0<Xe?fe.Sb(a):Ca(a)};function ba(a){this.Db=a-24,this.sc=function(d){c()[this.Db+4>>>2>>>0]=d},this.Mb=function(d){c()[this.Db+8>>>2>>>0]=d},this.Ib=function(d,h){this.Kb(),this.sc(d),this.Mb(h)},this.Kb=function(){c()[this.Db+16>>>2>>>0]=0}}var dn=0,zr=0;function Ur(a,d,h,w){return A?Se(2,1,a,d,h,w):tr(a,d,h,w)}function tr(a,d,h,w){if(a>>>=0,d>>>=0,h>>>=0,w>>>=0,typeof SharedArrayBuffer>"u")return $e("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var I=[];return A&&I.length===0?Ur(a,d,h,w):(a={kc:h,xb:a,Vb:w,qc:I},A?(a.tc="spawnThread",postMessage(a,I),0):un(a))}function cn(a,d,h){return A?Se(3,1,a,d,h):0}function xt(a,d){if(A)return Se(4,1,a,d)}var nt=a=>{for(var d=0,h=0;h<a.length;++h){var w=a.charCodeAt(h);127>=w?d++:2047>=w?d+=2:55296<=w&&57343>=w?(d+=4,++h):d+=3}return d},Wr=(a,d,h,w)=>{if(h>>>=0,!(0<w))return 0;var I=h;w=h+w-1;for(var k=0;k<a.length;++k){var U=a.charCodeAt(k);if(55296<=U&&57343>=U){var G=a.charCodeAt(++k);U=65536+((U&1023)<<10)|G&1023}if(127>=U){if(h>=w)break;d[h++>>>0]=U}else{if(2047>=U){if(h+1>=w)break;d[h++>>>0]=192|U>>6}else{if(65535>=U){if(h+2>=w)break;d[h++>>>0]=224|U>>12}else{if(h+3>=w)break;d[h++>>>0]=240|U>>18,d[h++>>>0]=128|U>>12&63}d[h++>>>0]=128|U>>6&63}d[h++>>>0]=128|U&63}}return d[h>>>0]=0,h-I},qt=(a,d,h)=>Wr(a,n(),d,h);function Nr(a,d){if(A)return Se(5,1,a,d)}function Vr(a,d,h){if(A)return Se(6,1,a,d,h)}function pn(a,d,h){return A?Se(7,1,a,d,h):0}function hr(a,d){if(A)return Se(8,1,a,d)}function fn(a,d,h){if(A)return Se(9,1,a,d,h)}function mn(a,d,h,w){if(A)return Se(10,1,a,d,h,w)}function hn(a,d,h,w){if(A)return Se(11,1,a,d,h,w)}function gn(a,d,h,w){if(A)return Se(12,1,a,d,h,w)}function Hr(a){if(A)return Se(13,1,a)}function rr(a,d){if(A)return Se(14,1,a,d)}function yn(a,d,h){if(A)return Se(15,1,a,d,h)}var gr=a=>{if(a===null)return"null";var d=typeof a;return d==="object"||d==="array"||d==="function"?a.toString():""+a},Lr,gt=a=>{for(var d="";n()[a>>>0];)d+=Lr[n()[a++>>>0]];return d},Gr={},yr={},va={},at;function bn(a,d,h={}){var w=d.name;if(!a)throw new at(`type "${w}" must have a positive integer typeid pointer`);if(yr.hasOwnProperty(a)){if(h.Yb)return;throw new at(`Cannot register type '${w}' twice`)}yr[a]=d,delete va[a],Gr.hasOwnProperty(a)&&(d=Gr[a],delete Gr[a],d.forEach(I=>I()))}function vt(a,d,h={}){if(!("argPackAdvance"in d))throw new TypeError("registerType registeredInstance requires argPackAdvance");bn(a,d,h)}var Fr=(a,d,h)=>{switch(d){case 1:return h?w=>r()[w>>>0>>>0]:w=>n()[w>>>0>>>0];case 2:return h?w=>i()[w>>>1>>>0]:w=>u()[w>>>1>>>0];case 4:return h?w=>o()[w>>>2>>>0]:w=>c()[w>>>2>>>0];case 8:return h?w=>ye[w>>>3]:w=>_t[w>>>3];default:throw new TypeError(`invalid integer width (${d}): ${a}`)}};function br(){this.wb=[void 0],this.Nb=[]}var it=new br;function nr(a){a>>>=0,a>=it.Db&&--it.get(a).Qb===0&&it.Mb(a)}var Je=a=>{if(!a)throw new at("Cannot use deleted val. handle = "+a);return it.get(a).value},ot=a=>{switch(a){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return it.Kb({Qb:1,value:a})}};function vn(a){return this.fromWireType(o()[a>>>2>>>0])}var wn=(a,d)=>{switch(d){case 4:return function(h){return this.fromWireType(p()[h>>>2>>>0])};case 8:return function(h){return this.fromWireType(m()[h>>>3>>>0])};default:throw new TypeError(`invalid float width (${d}): ${a}`)}};function $n(a){return this.fromWireType(c()[a>>>2>>>0])}var _n=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Sn=(a,d)=>{for(var h=a>>1,w=h+d/2;!(h>=w)&&u()[h>>>0];)++h;if(h<<=1,32<h-a&&_n)return _n.decode(n().slice(a,h));for(h="",w=0;!(w>=d/2);++w){var I=i()[a+2*w>>>1>>>0];if(I==0)break;h+=String.fromCharCode(I)}return h},xn=(a,d,h)=>{if(h??=2147483647,2>h)return 0;h-=2;var w=d;h=h<2*a.length?h/2:a.length;for(var I=0;I<h;++I){var k=a.charCodeAt(I);i()[d>>>1>>>0]=k,d+=2}return i()[d>>>1>>>0]=0,d-w},vr=a=>2*a.length,wa=(a,d)=>{for(var h=0,w="";!(h>=d/4);){var I=o()[a+4*h>>>2>>>0];if(I==0)break;++h,65536<=I?(I-=65536,w+=String.fromCharCode(55296|I>>10,56320|I&1023)):w+=String.fromCharCode(I)}return w},le=(a,d,h)=>{if(d>>>=0,h??=2147483647,4>h)return 0;var w=d;h=w+h-4;for(var I=0;I<a.length;++I){var k=a.charCodeAt(I);if(55296<=k&&57343>=k){var U=a.charCodeAt(++I);k=65536+((k&1023)<<10)|U&1023}if(o()[d>>>2>>>0]=k,d+=4,d+4>h)break}return o()[d>>>2>>>0]=0,d-w},Cn=a=>{for(var d=0,h=0;h<a.length;++h){var w=a.charCodeAt(h);55296<=w&&57343>=w&&++h,d+=4}return d},jt=()=>{if(!(0<Xe))try{A?Ca(xe):fr(xe)}catch(a){Dr(a)}};function ct(a){a>>>=0,typeof Atomics.rc=="function"&&(Atomics.rc(o(),a>>>2,a).value.then(ar),a+=128,Atomics.store(o(),a>>>2,1))}l.__emscripten_thread_mailbox_await=ct;var ar=()=>{var a=En();if(a&&(ct(a),!Oe))try{Ni(),jt()}catch(d){Dr(d)}};l.checkMailbox=ar;var wr=[],$r=(a,d)=>{var h=yr[a];if(h===void 0)throw a=zi(a),h=gt(a),Ot(a),new at(d+" has unknown type "+h);return h},qr=(a,d,h)=>{var w=[];return a=a.toWireType(w,h),w.length&&(c()[d>>>2>>>0]=ot(w)),a},ir=a=>{try{a()}catch(d){Ft(d)}};function In(){var a=re,d={};for(let[h,w]of Object.entries(a))d[h]=typeof w=="function"?function(){Ht.push(h);try{return w.apply(null,arguments)}finally{Oe||(Ht.pop(),yt&&Ct===1&&Ht.length===0&&(Ct=0,Xe+=1,ir(Gi),typeof Fibers<"u"&&Fibers.xc()))}}:w;return d}var Ct=0,yt=null,An=0,Ht=[],jr={},s={},f=0,y=null,_=[];function E(){return new Promise((a,d)=>{y={resolve:a,reject:d}})}function D(){var a=Kr(65548),d=a+12;c()[a>>>2>>>0]=d,c()[a+4>>>2>>>0]=d+65536,d=Ht[0];var h=jr[d];return h===void 0&&(h=f++,jr[d]=h,s[h]=d),d=h,o()[a+8>>>2>>>0]=d,a}function H(){var a=o()[yt+8>>>2>>>0];return a=re[s[a]],--Xe,a()}function q(a){if(!Oe){if(Ct===0){var d=!1,h=!1;a((w=0)=>{if(!Oe&&(An=w,d=!0,h)){Ct=2,ir(()=>Fi(yt)),typeof Browser<"u"&&Browser.Jb.Xb&&Browser.Jb.resume(),w=!1;try{var I=H()}catch(G){I=G,w=!0}var k=!1;if(!yt){var U=y;U&&(y=null,(w?U.reject:U.resolve)(I),k=!0)}if(w&&!k)throw I}}),h=!0,d||(Ct=1,yt=D(),typeof Browser<"u"&&Browser.Jb.Xb&&Browser.Jb.pause(),ir(()=>Li(yt)))}else Ct===2?(Ct=0,ir(qi),Ot(yt),yt=null,_.forEach(w=>{if(!Oe)try{w(),jt()}catch(I){Dr(I)}})):Ft(`invalid state: ${Ct}`);return An}}function J(a){return q(d=>{a().then(d)})}var Z=[],ce={},ee=a=>{var d=ce[a];return d===void 0?gt(a):d},he=()=>typeof globalThis=="object"?globalThis:Function("return this")(),R=a=>{var d=Z.length;return Z.push(a),d},ie=(a,d)=>{for(var h=Array(a),w=0;w<a;++w)h[w]=$r(c()[d+4*w>>>2>>>0],"parameter "+w);return h},we=(a,d)=>Object.defineProperty(d,"name",{value:a});function Qe(a){var d=Function;if(!(d instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof d} which is not a function`);var h=we(d.name||"unknownFunctionName",function(){});return h.prototype=d.prototype,h=new h,a=d.apply(h,a),a instanceof Object?a:h}var pt=a=>a%4===0&&(a%100!==0||a%400===0),vi=[0,31,60,91,121,152,182,213,244,274,305,335],wi=[0,31,59,90,120,151,181,212,243,273,304,334];function $i(a,d,h,w,I,k,U){return A?Se(16,1,a,d,h,w,I,k,U):-52}function _i(a,d,h,w,I,k){if(A)return Se(17,1,a,d,h,w,I,k)}var Si=a=>{var d=nt(a)+1,h=Kr(d);return h&&qt(a,h,d),h},$a=[],xi=(a,d)=>{$a.length=0;for(var h;h=n()[a++>>>0];){var w=h!=105;w&=h!=112,d+=w&&d%8?4:0,$a.push(h==112?c()[d>>>2>>>0]:h==106?ye[d>>>3]:h==105?o()[d>>>2>>>0]:m()[d>>>3>>>0]),d+=w?8:4}return $a},_a={},Ci=()=>{if(!Sa){var a={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:v||"./this.program"},d;for(d in _a)_a[d]===void 0?delete a[d]:a[d]=_a[d];var h=[];for(d in a)h.push(`${d}=${a[d]}`);Sa=h}return Sa},Sa;function Ii(a,d){if(A)return Se(18,1,a,d);a>>>=0,d>>>=0;var h=0;return Ci().forEach((w,I)=>{var k=d+h;for(I=c()[a+4*I>>>2>>>0]=k,k=0;k<w.length;++k)r()[I++>>>0>>>0]=w.charCodeAt(k);r()[I>>>0>>>0]=0,h+=w.length+1}),0}function Ai(a,d){if(A)return Se(19,1,a,d);a>>>=0,d>>>=0;var h=Ci();c()[a>>>2>>>0]=h.length;var w=0;return h.forEach(I=>w+=I.length+1),c()[d>>>2>>>0]=w,0}function Ti(a){return A?Se(20,1,a):52}function Ei(a,d,h,w){return A?Se(21,1,a,d,h,w):52}function Oi(a,d,h,w){return A?Se(22,1,a,d,h,w):70}var Od=[null,[],[]];function ki(a,d,h,w){if(A)return Se(23,1,a,d,h,w);d>>>=0,h>>>=0,w>>>=0;for(var I=0,k=0;k<h;k++){var U=c()[d>>>2>>>0],G=c()[d+4>>>2>>>0];d+=8;for(var Q=0;Q<G;Q++){var X=n()[U+Q>>>0],me=Od[a];X===0||X===10?((a===1?We:$e)(Rr(me,0)),me.length=0):me.push(X)}I+=G}return c()[w>>>2>>>0]=I,0}var Pi=[31,29,31,30,31,30,31,31,30,31,30,31],Ri=[31,28,31,30,31,30,31,31,30,31,30,31];function kd(a){var d=Array(nt(a)+1);return Wr(a,d,0,d.length),d}var Pd=(a,d)=>{r().set(a,d>>>0)};function Bi(a,d,h,w){function I(B,se,Ce){for(B=typeof B=="number"?B.toString():B||"";B.length<se;)B=Ce[0]+B;return B}function k(B,se){return I(B,se,"0")}function U(B,se){function Ce(or){return 0>or?-1:0<or?1:0}var st;return(st=Ce(B.getFullYear()-se.getFullYear()))===0&&(st=Ce(B.getMonth()-se.getMonth()))===0&&(st=Ce(B.getDate()-se.getDate())),st}function G(B){switch(B.getDay()){case 0:return new Date(B.getFullYear()-1,11,29);case 1:return B;case 2:return new Date(B.getFullYear(),0,3);case 3:return new Date(B.getFullYear(),0,2);case 4:return new Date(B.getFullYear(),0,1);case 5:return new Date(B.getFullYear()-1,11,31);case 6:return new Date(B.getFullYear()-1,11,30)}}function Q(B){var se=B.Ab;for(B=new Date(new Date(B.Bb+1900,0,1).getTime());0<se;){var Ce=B.getMonth(),st=(pt(B.getFullYear())?Pi:Ri)[Ce];if(se>st-B.getDate())se-=st-B.getDate()+1,B.setDate(1),11>Ce?B.setMonth(Ce+1):(B.setMonth(0),B.setFullYear(B.getFullYear()+1));else{B.setDate(B.getDate()+se);break}}return Ce=new Date(B.getFullYear()+1,0,4),se=G(new Date(B.getFullYear(),0,4)),Ce=G(Ce),0>=U(se,B)?0>=U(Ce,B)?B.getFullYear()+1:B.getFullYear():B.getFullYear()-1}a>>>=0,d>>>=0,h>>>=0,w>>>=0;var X=c()[w+40>>>2>>>0];w={oc:o()[w>>>2>>>0],nc:o()[w+4>>>2>>>0],Gb:o()[w+8>>>2>>>0],Lb:o()[w+12>>>2>>>0],Hb:o()[w+16>>>2>>>0],Bb:o()[w+20>>>2>>>0],vb:o()[w+24>>>2>>>0],Ab:o()[w+28>>>2>>>0],wc:o()[w+32>>>2>>>0],mc:o()[w+36>>>2>>>0],pc:X?De(X):""},h=De(h),X={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var me in X)h=h.replace(new RegExp(me,"g"),X[me]);var ne="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),be="January February March April May June July August September October November December".split(" ");X={"%a":B=>ne[B.vb].substring(0,3),"%A":B=>ne[B.vb],"%b":B=>be[B.Hb].substring(0,3),"%B":B=>be[B.Hb],"%C":B=>k((B.Bb+1900)/100|0,2),"%d":B=>k(B.Lb,2),"%e":B=>I(B.Lb,2," "),"%g":B=>Q(B).toString().substring(2),"%G":B=>Q(B),"%H":B=>k(B.Gb,2),"%I":B=>(B=B.Gb,B==0?B=12:12<B&&(B-=12),k(B,2)),"%j":B=>{for(var se=0,Ce=0;Ce<=B.Hb-1;se+=(pt(B.Bb+1900)?Pi:Ri)[Ce++]);return k(B.Lb+se,3)},"%m":B=>k(B.Hb+1,2),"%M":B=>k(B.nc,2),"%n":()=>`
`,"%p":B=>0<=B.Gb&&12>B.Gb?"AM":"PM","%S":B=>k(B.oc,2),"%t":()=>"	","%u":B=>B.vb||7,"%U":B=>k(Math.floor((B.Ab+7-B.vb)/7),2),"%V":B=>{var se=Math.floor((B.Ab+7-(B.vb+6)%7)/7);if(2>=(B.vb+371-B.Ab-2)%7&&se++,se)se==53&&(Ce=(B.vb+371-B.Ab)%7,Ce==4||Ce==3&&pt(B.Bb)||(se=1));else{se=52;var Ce=(B.vb+7-B.Ab-1)%7;(Ce==4||Ce==5&&pt(B.Bb%400-1))&&se++}return k(se,2)},"%w":B=>B.vb,"%W":B=>k(Math.floor((B.Ab+7-(B.vb+6)%7)/7),2),"%y":B=>(B.Bb+1900).toString().substring(2),"%Y":B=>B.Bb+1900,"%z":B=>{B=B.mc;var se=0<=B;return B=Math.abs(B)/60,(se?"+":"-")+("0000"+(B/60*100+B%60)).slice(-4)},"%Z":B=>B.pc,"%%":()=>"%"},h=h.replace(/%%/g,"\0\0");for(me in X)h.includes(me)&&(h=h.replace(new RegExp(me,"g"),X[me](w)));return h=h.replace(/\0\0/g,"%"),me=kd(h),me.length>d?0:(Pd(me,a),me.length-1)}fe.Ib();for(var Di=Array(256),Tn=0;256>Tn;++Tn)Di[Tn]=String.fromCharCode(Tn);Lr=Di,at=l.BindingError=class extends Error{constructor(a){super(a),this.name="BindingError"}},l.InternalError=class extends Error{constructor(a){super(a),this.name="InternalError"}},Object.assign(br.prototype,{get(a){return this.wb[a]},has(a){return this.wb[a]!==void 0},Kb(a){var d=this.Nb.pop()||this.wb.length;return this.wb[d]=a,d},Mb(a){this.wb[a]=void 0,this.Nb.push(a)}}),it.wb.push({value:void 0},{value:null},{value:!0},{value:!1}),it.Db=it.wb.length,l.count_emval_handles=()=>{for(var a=0,d=it.Db;d<it.wb.length;++d)it.wb[d]!==void 0&&++a;return a};var Rd=[dt,ln,Ur,cn,xt,Nr,Vr,pn,hr,fn,mn,hn,gn,Hr,rr,yn,$i,_i,Ii,Ai,Ti,Ei,Oi,ki],Bd={ua:function(a,d,h){return J(async()=>{await l.cc(a,d,h)})},b:function(a,d,h){throw a>>>=0,new ba(a).Ib(d>>>0,h>>>0),dn=a,zr++,dn},ga:function(a){Ui(a>>>0,!C,1,!T,131072,!1),fe.Tb()},F:function(a){a>>>=0,A?postMessage({cmd:"cleanupThread",thread:a}):fe.Rb(fe.pb[a])},Y:tr,z:cn,ma:xt,U:Nr,W:Vr,N:pn,ka:hr,da:fn,ja:mn,H:hn,V:gn,S:Hr,la:rr,T:yn,K:function(a,d,h,w,I){a>>>=0,d>>>=0,h>>>=0,d=gt(d);var k=d.indexOf("u")!=-1;k&&(I=(1n<<64n)-1n),vt(a,{name:d,fromWireType:U=>U,toWireType:function(U,G){if(typeof G!="bigint"&&typeof G!="number")throw new TypeError(`Cannot convert "${gr(G)}" to ${this.name}`);if(G<w||G>I)throw new TypeError(`Passing a number "${gr(G)}" from JS side to C/C++ side to an argument of type "${d}", which is outside the valid range [${w}, ${I}]!`);return G},argPackAdvance:8,readValueFromPointer:Fr(d,h,!k),Cb:null})},sa:function(a,d,h,w){a>>>=0,d=gt(d>>>0),vt(a,{name:d,fromWireType:function(I){return!!I},toWireType:function(I,k){return k?h:w},argPackAdvance:8,readValueFromPointer:function(I){return this.fromWireType(n()[I>>>0])},Cb:null})},ra:function(a,d){a>>>=0,d=gt(d>>>0),vt(a,{name:d,fromWireType:h=>{var w=Je(h);return nr(h),w},toWireType:(h,w)=>ot(w),argPackAdvance:8,readValueFromPointer:vn,Cb:null})},J:function(a,d,h){a>>>=0,h>>>=0,d=gt(d>>>0),vt(a,{name:d,fromWireType:w=>w,toWireType:(w,I)=>I,argPackAdvance:8,readValueFromPointer:wn(d,h),Cb:null})},v:function(a,d,h,w,I){if(a>>>=0,h>>>=0,d=gt(d>>>0),I===-1&&(I=4294967295),I=G=>G,w===0){var k=32-8*h;I=G=>G<<k>>>k}var U=d.includes("unsigned")?function(G,Q){return Q>>>0}:function(G,Q){return Q};vt(a,{name:d,fromWireType:I,toWireType:U,argPackAdvance:8,readValueFromPointer:Fr(d,h,w!==0),Cb:null})},o:function(a,d,h){function w(k){var U=c()[k>>>2>>>0];return k=c()[k+4>>>2>>>0],new I(r().buffer,k,U)}a>>>=0;var I=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][d];h=gt(h>>>0),vt(a,{name:h,fromWireType:w,argPackAdvance:8,readValueFromPointer:w},{Yb:!0})},L:function(a,d){a>>>=0,d=gt(d>>>0);var h=d==="std::string";vt(a,{name:d,fromWireType:function(w){var I=c()[w>>>2>>>0],k=w+4;if(h)for(var U=k,G=0;G<=I;++G){var Q=k+G;if(G==I||n()[Q>>>0]==0){if(U=De(U,Q-U),X===void 0)var X=U;else X+=String.fromCharCode(0),X+=U;U=Q+1}}else{for(X=Array(I),G=0;G<I;++G)X[G]=String.fromCharCode(n()[k+G>>>0]);X=X.join("")}return Ot(w),X},toWireType:function(w,I){I instanceof ArrayBuffer&&(I=new Uint8Array(I));var k=typeof I=="string";if(!(k||I instanceof Uint8Array||I instanceof Uint8ClampedArray||I instanceof Int8Array))throw new at("Cannot pass non-string to std::string");var U=h&&k?nt(I):I.length,G=Kr(4+U+1),Q=G+4;if(c()[G>>>2>>>0]=U,h&&k)qt(I,Q,U+1);else if(k)for(k=0;k<U;++k){var X=I.charCodeAt(k);if(255<X)throw Ot(Q),new at("String has UTF-16 code units that do not fit in 8 bits");n()[Q+k>>>0]=X}else for(k=0;k<U;++k)n()[Q+k>>>0]=I[k];return w!==null&&w.push(Ot,G),G},argPackAdvance:8,readValueFromPointer:$n,Cb(w){Ot(w)}})},B:function(a,d,h){if(a>>>=0,d>>>=0,h>>>=0,h=gt(h),d===2)var w=Sn,I=xn,k=vr,U=()=>u(),G=1;else d===4&&(w=wa,I=le,k=Cn,U=()=>c(),G=2);vt(a,{name:h,fromWireType:Q=>{for(var X=c()[Q>>>2>>>0],me=U(),ne,be=Q+4,B=0;B<=X;++B){var se=Q+4+B*d;(B==X||me[se>>>G]==0)&&(be=w(be,se-be),ne===void 0?ne=be:(ne+=String.fromCharCode(0),ne+=be),be=se+d)}return Ot(Q),ne},toWireType:(Q,X)=>{if(typeof X!="string")throw new at(`Cannot pass non-string to C++ string type ${h}`);var me=k(X),ne=Kr(4+me+d);return c()[ne>>>2]=me>>G,I(X,ne+4,me+d),Q!==null&&Q.push(Ot,ne),ne},argPackAdvance:8,readValueFromPointer:vn,Cb(Q){Ot(Q)}})},ta:function(a,d){a>>>=0,d=gt(d>>>0),vt(a,{Zb:!0,name:d,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},qa:()=>1,Q:function(a,d){a>>>=0,a==d>>>0?setTimeout(()=>ar()):A?postMessage({targetThread:a,cmd:"checkMailbox"}):(a=fe.pb[a])&&a.postMessage({cmd:"checkMailbox"})},Z:function(a,d,h,w){d>>>=0,h/=2,wr.length=h,w=w>>>0>>>3;for(var I=0;I<h;I++)wr[I]=ye[w+2*I]?ye[w+2*I+1]:m()[w+2*I+1>>>0];return a=0>a?er[-a-1]:Rd[a],fe.Wb=d,d=a.apply(null,wr),fe.Wb=0,d},fa:ct,pa:function(a){S&&fe.pb[a>>>0].ref()},t:function(a,d,h){return d>>>=0,h>>>=0,a=Je(a>>>0),d=$r(d,"emval::as"),qr(d,h,a)},y:function(a){return a>>>=0,J(()=>(a=Je(a),a.then(ot)))},p:function(a,d,h,w){return h>>>=0,w>>>=0,a=Z[a>>>0],d=Je(d>>>0),a(null,d,h,w)},k:function(a,d,h,w,I){return h>>>=0,w>>>=0,I>>>=0,a=Z[a>>>0],d=Je(d>>>0),h=ee(h),a(d,d[h],w,I)},c:nr,C:function(a,d){return d>>>=0,a=Je(a>>>0),d=Je(d),a==d},n:function(a){return a>>>=0,a===0?ot(he()):(a=ee(a),ot(he()[a]))},j:function(a,d,h){d=ie(a,d>>>0);var w=d.shift();a--;var I=`return function (obj, func, destructorsRef, args) {
`,k=0,U=[];h===0&&U.push("obj");for(var G=["retType"],Q=[w],X=0;X<a;++X)U.push("arg"+X),G.push("argType"+X),Q.push(d[X]),I+=`  var arg${X} = argType${X}.readValueFromPointer(args${k?"+"+k:""});
`,k+=d[X].argPackAdvance;for(I+=`  var rv = ${h===1?"new func":"func.call"}(${U.join(", ")});
`,X=0;X<a;++X)d[X].deleteObject&&(I+=`  argType${X}.deleteObject(arg${X});
`);return w.Zb||(G.push("emval_returnValue"),Q.push(qr),I+=`  return emval_returnValue(retType, destructorsRef, rv);
`),G.push(I+`};
`),a=Qe(G).apply(null,Q),h=`methodCaller<(${d.map(me=>me.name).join(", ")}) => ${w.name}>`,R(we(h,a))},s:function(a,d){return d>>>=0,a=Je(a>>>0),d=Je(d),ot(a[d])},e:function(a){a>>>=0,4<a&&(it.get(a).Qb+=1)},w:function(){return ot([])},m:function(a){a=Je(a>>>0);for(var d=Array(a.length),h=0;h<a.length;h++)d[h]=a[h];return ot(d)},g:function(a){return ot(ee(a>>>0))},l:function(){return ot({})},i:function(a){a>>>=0;for(var d=Je(a);d.length;){var h=d.pop();d.pop()(h)}nr(a)},h:function(a,d,h){d>>>=0,h>>>=0,a=Je(a>>>0),d=Je(d),h=Je(h),a[d]=h},d:function(a,d){return d>>>=0,a=$r(a>>>0,"_emval_take_value"),a=a.readValueFromPointer(d),ot(a)},aa:function(a,d){a=-9007199254740992>a||9007199254740992<a?NaN:Number(a),d>>>=0,a=new Date(1e3*a),o()[d>>>2>>>0]=a.getUTCSeconds(),o()[d+4>>>2>>>0]=a.getUTCMinutes(),o()[d+8>>>2>>>0]=a.getUTCHours(),o()[d+12>>>2>>>0]=a.getUTCDate(),o()[d+16>>>2>>>0]=a.getUTCMonth(),o()[d+20>>>2>>>0]=a.getUTCFullYear()-1900,o()[d+24>>>2>>>0]=a.getUTCDay(),a=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,o()[d+28>>>2>>>0]=a},ba:function(a,d){a=-9007199254740992>a||9007199254740992<a?NaN:Number(a),d>>>=0,a=new Date(1e3*a),o()[d>>>2>>>0]=a.getSeconds(),o()[d+4>>>2>>>0]=a.getMinutes(),o()[d+8>>>2>>>0]=a.getHours(),o()[d+12>>>2>>>0]=a.getDate(),o()[d+16>>>2>>>0]=a.getMonth(),o()[d+20>>>2>>>0]=a.getFullYear()-1900,o()[d+24>>>2>>>0]=a.getDay();var h=(pt(a.getFullYear())?vi:wi)[a.getMonth()]+a.getDate()-1|0;o()[d+28>>>2>>>0]=h,o()[d+36>>>2>>>0]=-(60*a.getTimezoneOffset()),h=new Date(a.getFullYear(),6,1).getTimezoneOffset();var w=new Date(a.getFullYear(),0,1).getTimezoneOffset();a=(h!=w&&a.getTimezoneOffset()==Math.min(w,h))|0,o()[d+32>>>2>>>0]=a},ca:function(a){a>>>=0;var d=new Date(o()[a+20>>>2>>>0]+1900,o()[a+16>>>2>>>0],o()[a+12>>>2>>>0],o()[a+8>>>2>>>0],o()[a+4>>>2>>>0],o()[a>>>2>>>0],0),h=o()[a+32>>>2>>>0],w=d.getTimezoneOffset(),I=new Date(d.getFullYear(),6,1).getTimezoneOffset(),k=new Date(d.getFullYear(),0,1).getTimezoneOffset(),U=Math.min(k,I);return 0>h?o()[a+32>>>2>>>0]=+(I!=k&&U==w):0<h!=(U==w)&&(I=Math.max(k,I),d.setTime(d.getTime()+6e4*((0<h?U:I)-w))),o()[a+24>>>2>>>0]=d.getDay(),h=(pt(d.getFullYear())?vi:wi)[d.getMonth()]+d.getDate()-1|0,o()[a+28>>>2>>>0]=h,o()[a>>>2>>>0]=d.getSeconds(),o()[a+4>>>2>>>0]=d.getMinutes(),o()[a+8>>>2>>>0]=d.getHours(),o()[a+12>>>2>>>0]=d.getDate(),o()[a+16>>>2>>>0]=d.getMonth(),o()[a+20>>>2>>>0]=d.getYear(),a=d.getTime(),isNaN(a)?(o()[Mi()>>>2>>>0]=61,a=-1):a/=1e3,BigInt(a)},_:$i,$:_i,P:function(a,d,h){function w(X){return(X=X.toTimeString().match(/\(([A-Za-z ]+)\)$/))?X[1]:"GMT"}a>>>=0,d>>>=0,h>>>=0;var I=new Date().getFullYear(),k=new Date(I,0,1),U=new Date(I,6,1);I=k.getTimezoneOffset();var G=U.getTimezoneOffset(),Q=Math.max(I,G);c()[a>>>2>>>0]=60*Q,o()[d>>>2>>>0]=+(I!=G),a=w(k),d=w(U),a=Si(a),d=Si(d),G<I?(c()[h>>>2>>>0]=a,c()[h+4>>>2>>>0]=d):(c()[h>>>2>>>0]=d,c()[h+4>>>2>>>0]=a)},q:()=>{Ft("")},f:function(a,d,h){return a>>>=0,d=xi(d>>>0,h>>>0),er[a].apply(null,d)},M:function(a,d,h){return a>>>=0,d=xi(d>>>0,h>>>0),er[a].apply(null,d)},G:()=>{},I:()=>Date.now(),oa:()=>{throw Xe+=1,"unwind"},R:function(){return 4294901760},u:()=>performance.timeOrigin+performance.now(),x:()=>S?(Oo(),Kt(Eo)).cpus().length:navigator.hardwareConcurrency,O:function(a){a>>>=0;var d=n().length;if(a<=d||4294901760<a)return!1;for(var h=1;4>=h;h*=2){var w=d*(1+.2/h);w=Math.min(w,a+100663296);var I=Math;w=Math.max(a,w);e:{I=(I.min.call(I,4294901760,w+(65536-w%65536)%65536)-ve.buffer.byteLength+65535)/65536;try{ve.grow(I),He();var k=1;break e}catch{}k=void 0}if(k)return!0}return!1},ha:Ii,ia:Ai,X:fr,A:Ti,E:Ei,ea:Oi,D:ki,a:ve||l.wasmMemory,na:Bi,r:function(a,d,h,w){return Bi(a>>>0,d>>>0,h>>>0,w>>>0)}},re=function(){function a(h,w){return re=h.exports,re=In(),re=Dd(),fe.Ub.push(re.bb),Le.unshift(re.va),de=w,Tr(),re}var d={a:Bd};if(St++,l.instantiateWasm)try{return l.instantiateWasm(d,a)}catch(h){$e(`Module.instantiateWasm callback failed with error: ${h}`),b(h)}return Or(d,function(h){a(h.instance,h.module)}).catch(b),{}}();l._OrtInit=(a,d)=>(l._OrtInit=re.wa)(a,d),l._OrtGetLastError=(a,d)=>(l._OrtGetLastError=re.xa)(a,d),l._OrtCreateSessionOptions=(a,d,h,w,I,k,U,G,Q,X)=>(l._OrtCreateSessionOptions=re.ya)(a,d,h,w,I,k,U,G,Q,X),l._OrtAppendExecutionProvider=(a,d)=>(l._OrtAppendExecutionProvider=re.za)(a,d),l._OrtAddFreeDimensionOverride=(a,d,h)=>(l._OrtAddFreeDimensionOverride=re.Aa)(a,d,h),l._OrtAddSessionConfigEntry=(a,d,h)=>(l._OrtAddSessionConfigEntry=re.Ba)(a,d,h),l._OrtReleaseSessionOptions=a=>(l._OrtReleaseSessionOptions=re.Ca)(a),l._OrtCreateSession=(a,d,h)=>(l._OrtCreateSession=re.Da)(a,d,h),l._OrtReleaseSession=a=>(l._OrtReleaseSession=re.Ea)(a),l._OrtGetInputOutputCount=(a,d,h)=>(l._OrtGetInputOutputCount=re.Fa)(a,d,h),l._OrtGetInputName=(a,d)=>(l._OrtGetInputName=re.Ga)(a,d),l._OrtGetOutputName=(a,d)=>(l._OrtGetOutputName=re.Ha)(a,d),l._OrtFree=a=>(l._OrtFree=re.Ia)(a),l._OrtCreateTensor=(a,d,h,w,I,k)=>(l._OrtCreateTensor=re.Ja)(a,d,h,w,I,k),l._OrtGetTensorData=(a,d,h,w,I)=>(l._OrtGetTensorData=re.Ka)(a,d,h,w,I),l._OrtReleaseTensor=a=>(l._OrtReleaseTensor=re.La)(a),l._OrtCreateRunOptions=(a,d,h,w)=>(l._OrtCreateRunOptions=re.Ma)(a,d,h,w),l._OrtAddRunConfigEntry=(a,d,h)=>(l._OrtAddRunConfigEntry=re.Na)(a,d,h),l._OrtReleaseRunOptions=a=>(l._OrtReleaseRunOptions=re.Oa)(a),l._OrtCreateBinding=a=>(l._OrtCreateBinding=re.Pa)(a),l._OrtBindInput=(a,d,h)=>(l._OrtBindInput=re.Qa)(a,d,h),l._OrtBindOutput=(a,d,h,w)=>(l._OrtBindOutput=re.Ra)(a,d,h,w),l._OrtClearBoundOutputs=a=>(l._OrtClearBoundOutputs=re.Sa)(a),l._OrtReleaseBinding=a=>(l._OrtReleaseBinding=re.Ta)(a),l._OrtRunWithBinding=(a,d,h,w,I)=>(l._OrtRunWithBinding=re.Ua)(a,d,h,w,I),l._OrtRun=(a,d,h,w,I,k,U,G)=>(l._OrtRun=re.Va)(a,d,h,w,I,k,U,G),l._OrtEndProfiling=a=>(l._OrtEndProfiling=re.Wa)(a),l._JsepOutput=(a,d,h)=>(l._JsepOutput=re.Xa)(a,d,h),l._JsepGetNodeName=a=>(l._JsepGetNodeName=re.Ya)(a);var Mi=()=>(Mi=re.Za)(),En=l._pthread_self=()=>(En=l._pthread_self=re._a)(),Kr=l._malloc=a=>(Kr=l._malloc=re.$a)(a),Ot=l._free=a=>(Ot=l._free=re.ab)(a);l.__emscripten_tls_init=()=>(l.__emscripten_tls_init=re.bb)();var zi=a=>(zi=re.cb)(a);l.__embind_initialize_bindings=()=>(l.__embind_initialize_bindings=re.db)();var Ui=l.__emscripten_thread_init=(a,d,h,w,I,k)=>(Ui=l.__emscripten_thread_init=re.fb)(a,d,h,w,I,k);l.__emscripten_thread_crashed=()=>(l.__emscripten_thread_crashed=re.gb)();var Wi=(a,d,h,w)=>(Wi=re.hb)(a,d,h,w),xa=a=>(xa=re.ib)(a),Ca=l.__emscripten_thread_exit=a=>(Ca=l.__emscripten_thread_exit=re.jb)(a),Ni=()=>(Ni=re.kb)(),Vi=(a,d)=>(Vi=re.lb)(a,d),Ia=()=>(Ia=re.mb)(),On=a=>(On=re.nb)(a),Aa=a=>(Aa=re.ob)(a),Hi=l.dynCall_ii=(a,d)=>(Hi=l.dynCall_ii=re.qb)(a,d),Li=a=>(Li=re.rb)(a),Gi=()=>(Gi=re.sb)(),Fi=a=>(Fi=re.tb)(a),qi=()=>(qi=re.ub)();l.___start_em_js=1393348,l.___stop_em_js=1393509;function Dd(){var a=re;a=Object.assign({},a);var d=w=>()=>w()>>>0,h=w=>I=>w(I)>>>0;return a.Za=d(a.Za),a._a=d(a._a),a.$a=h(a.$a),a.cb=h(a.cb),a.emscripten_main_runtime_thread_id=d(a.emscripten_main_runtime_thread_id),a.mb=d(a.mb),a.ob=h(a.ob),a}l.wasmMemory=ve,l.stackAlloc=Aa,l.stackSave=Ia,l.stackRestore=On,l.keepRuntimeAlive=()=>0<Xe,l.UTF8ToString=De,l.stringToUTF8=qt,l.lengthBytesUTF8=nt,l.ExitStatus=kr,l.PThread=fe;var kn;Qt=function a(){kn||ji(),kn||(Qt=a)};function ji(){if(!(0<St))if(A)g(l),A||mr(Le),startWorker(l);else{if(l.preRun)for(typeof l.preRun=="function"&&(l.preRun=[l.preRun]);l.preRun.length;)qe.unshift(l.preRun.shift());mr(qe),0<St||kn||(kn=!0,l.calledRun=!0,Oe||(A||mr(Le),g(l),A||mr(Nt)))}}return ji(),t.ready}})();typeof Po=="object"&&typeof Ua=="object"?Ua.exports=ko:typeof define=="function"&&define.amd&&define([],()=>ko)});var Bo=_r((Wm,Fd)=>{Fd.exports='"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs"),vm=require("vm");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,"utf8"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed?.(),a}}self.onmessage=handleMessage;\n'});var Mo,qd,Wa,Na,Nn,Do,jd,Kd,Yd,zo,Ve,Sr=j(()=>{"use strict";Mo=Io();qd=Ro(),Na=!1,Nn=!1,Do=!1,jd=e=>{if(e===1)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+e+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+e+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},Kd=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Yd=(e,t)=>e?t?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":t?"ort-wasm-threaded.wasm":"ort-wasm.wasm",zo=async e=>{if(Na)return Promise.resolve();if(Nn)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Do)throw new Error("previous call to 'initializeWebAssembly()' failed.");Nn=!0;let t=e.initTimeout,r=e.numThreads,n=e.simd,i=jd(r),u=n&&Kd(),o=e.wasmPaths,c=typeof o=="string"?o:void 0,p=Yd(u,i),m=typeof o=="object"?o[p]:void 0,l=!1,g=[];if(t>0&&g.push(new Promise(b=>{setTimeout(()=>{l=!0,b()},t)})),g.push(new Promise((b,$)=>{let v=i?qd:Mo,x={locateFile:(T,C)=>{if(i&&T.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([Bo()],{type:"text/javascript"}));if(T.endsWith(".wasm")){if(m)return m;let S=c??C;return p==="ort-wasm-simd.wasm"?S+"ort-wasm-simd.jsep.wasm":p==="ort-wasm-simd-threaded.wasm"?S+"ort-wasm-simd-threaded.jsep.wasm":S+p}return C+T}};if(i)if(x.numThreads=r,typeof Blob>"u")x.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let T=`var ortWasmThreaded=${v.toString()};`;x.mainScriptUrlOrBlob=new Blob([T],{type:"text/javascript"})}v(x).then(T=>{Nn=!1,Na=!0,Wa=T,b()},T=>{Nn=!1,Do=!0,$(T)})})),await Promise.race(g),l)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},Ve=()=>{if(Na&&Wa)return Wa;throw new Error("WebAssembly is not initialized yet.")}});var Ne,Xr,ze,Vn=j(()=>{"use strict";Sr();Ne=(e,t)=>{let r=Ve(),n=r.lengthBytesUTF8(e)+1,i=r._malloc(n);return r.stringToUTF8(e,i,n),t.push(i),i},Xr=(e,t,r,n)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([i,u])=>{let o=t?t+i:i;if(typeof u=="object")Xr(u,o+".",r,n);else if(typeof u=="string"||typeof u=="number")n(o,u.toString());else if(typeof u=="boolean")n(o,u?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof u}`)})},ze=e=>{let t=Ve(),r=t.stackSave();try{let n=t.stackAlloc(8);t._OrtGetLastError(n,n+4);let i=t.HEAP32[n/4],u=t.HEAPU32[n/4+1],o=u?t.UTF8ToString(u):"";throw new Error(`${e} ERROR_CODE: ${i}, ERROR_MESSAGE: ${o}`)}finally{t.stackRestore(r)}}});var Uo,Wo=j(()=>{"use strict";Sr();Vn();Uo=e=>{let t=Ve(),r=0,n=[],i=e||{};try{if(e?.logSeverityLevel===void 0)i.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)i.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(i.terminate=!1);let u=0;return e?.tag!==void 0&&(u=Ne(e.tag,n)),r=t._OrtCreateRunOptions(i.logSeverityLevel,i.logVerbosityLevel,!!i.terminate,u),r===0&&ze("Can't create run options."),e?.extra!==void 0&&Xr(e.extra,"",new WeakSet,(o,c)=>{let p=Ne(o,n),m=Ne(c,n);t._OrtAddRunConfigEntry(r,p,m)!==0&&ze(`Can't set a run config entry: ${o} - ${c}.`)}),[r,n]}catch(u){throw r!==0&&t._OrtReleaseRunOptions(r),n.forEach(o=>t._free(o)),u}}});var Zd,Xd,Jd,Qd,No,Vo=j(()=>{"use strict";Sr();Vn();Zd=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},Xd=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Jd=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},Qd=(e,t,r)=>{for(let n of t){let i=typeof n=="string"?n:n.name;switch(i){case"webnn":if(i="WEBNN",typeof n!="string"){let o=n;if(o?.deviceType){let c=Ne("deviceType",r),p=Ne(o.deviceType,r);Ve()._OrtAddSessionConfigEntry(e,c,p)!==0&&ze(`Can't set a session config entry: 'deviceType' - ${o.deviceType}.`)}if(o?.numThreads){let c=o.numThreads;(typeof c!="number"||!Number.isInteger(c)||c<0)&&(c=0);let p=Ne("numThreads",r),m=Ne(c.toString(),r);Ve()._OrtAddSessionConfigEntry(e,p,m)!==0&&ze(`Can't set a session config entry: 'numThreads' - ${o.numThreads}.`)}if(o?.powerPreference){let c=Ne("powerPreference",r),p=Ne(o.powerPreference,r);Ve()._OrtAddSessionConfigEntry(e,c,p)!==0&&ze(`Can't set a session config entry: 'powerPreference' - ${o.powerPreference}.`)}}break;case"webgpu":if(i="JS",typeof n!="string"){let o=n;if(o?.preferredLayout){if(o.preferredLayout!=="NCHW"&&o.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${o.preferredLayout}`);let c=Ne("preferredLayout",r),p=Ne(o.preferredLayout,r);Ve()._OrtAddSessionConfigEntry(e,c,p)!==0&&ze(`Can't set a session config entry: 'preferredLayout' - ${o.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${i}`)}let u=Ne(i,r);Ve()._OrtAppendExecutionProvider(e,u)!==0&&ze(`Can't append execution provider: ${i}.`)}},No=e=>{let t=Ve(),r=0,n=[],i=e||{};Jd(i);try{let u=Zd(i.graphOptimizationLevel??"all"),o=Xd(i.executionMode??"sequential"),c=typeof i.logId=="string"?Ne(i.logId,n):0,p=i.logSeverityLevel??2;if(!Number.isInteger(p)||p<0||p>4)throw new Error(`log serverity level is not valid: ${p}`);let m=i.logVerbosityLevel??0;if(!Number.isInteger(m)||m<0||m>4)throw new Error(`log verbosity level is not valid: ${m}`);let l=typeof i.optimizedModelFilePath=="string"?Ne(i.optimizedModelFilePath,n):0;if(r=t._OrtCreateSessionOptions(u,!!i.enableCpuMemArena,!!i.enableMemPattern,o,!!i.enableProfiling,0,c,p,m,l),r===0&&ze("Can't create session options."),i.executionProviders&&Qd(r,i.executionProviders,n),i.enableGraphCapture!==void 0){if(typeof i.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${i.enableGraphCapture}`);let g=Ne("enableGraphCapture",n),b=Ne(i.enableGraphCapture.toString(),n);t._OrtAddSessionConfigEntry(r,g,b)!==0&&ze(`Can't set a session config entry: 'enableGraphCapture' - ${i.enableGraphCapture}.`)}if(i.freeDimensionOverrides)for(let[g,b]of Object.entries(i.freeDimensionOverrides)){if(typeof g!="string")throw new Error(`free dimension override name must be a string: ${g}`);if(typeof b!="number"||!Number.isInteger(b)||b<0)throw new Error(`free dimension override value must be a non-negative integer: ${b}`);let $=Ne(g,n);t._OrtAddFreeDimensionOverride(r,$,b)!==0&&ze(`Can't set a free dimension override: ${g} - ${b}.`)}return i.extra!==void 0&&Xr(i.extra,"",new WeakSet,(g,b)=>{let $=Ne(g,n),v=Ne(b,n);t._OrtAddSessionConfigEntry(r,$,v)!==0&&ze(`Can't set a session config entry: ${g} - ${b}.`)}),[r,n]}catch(u){throw r!==0&&t._OrtReleaseSessionOptions(r),n.forEach(o=>t._free(o)),u}}});var Va,Zt,Jr,Hn,Qr,Ln,Ha,ge=j(()=>{"use strict";Va=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},Zt=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},Jr=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],Hn=e=>{switch(e){case"float16":return Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},Qr=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},Ln=e=>e==="float32"||e==="int32"||e==="int64"||e==="bool"||e==="float16"||e==="uint32",Ha=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}});var en,La=j(()=>{"use strict";en=async e=>{if(typeof e=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(e))}catch(t){if(t.code==="ERR_FS_FILE_TOO_LARGE"){let r=(void 0)(e),n=[];for await(let i of r)n.push(i);return new Uint8Array(Buffer.concat(n))}throw t}else{let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let r=t.headers.get("Content-Length"),n=r?parseInt(r,10):0;if(n<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let i=t.body.getReader(),u;try{u=new ArrayBuffer(n)}catch(c){if(c instanceof RangeError){let p=Math.ceil(n/65536);u=new WebAssembly.Memory({initial:p,maximum:p}).buffer}else throw c}let o=0;for(;;){let{done:c,value:p}=await i.read();if(c)break;let m=p.byteLength;new Uint8Array(u,o,m).set(p),o+=m}return new Uint8Array(u,0,n)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}});var ec,tc,Ho,Lo,Go,rc,Ue,Xt=j(()=>{"use strict";ge();ec=["V","I","W","E","F"],tc=(e,t)=>{console.log(`[${ec[e]},${new Date().toISOString()}]${t}`)},Go=(e,t)=>{Ho=e,Lo=t},rc=(e,t)=>{let r=Qr(e),n=Qr(Ho);r>=n&&tc(r,typeof t=="function"?t():t)},Ue=(...e)=>{Lo&&rc(...e)}});var Fo,qo=j(()=>{"use strict";ge();Fo=(e,t)=>new(Hn(t))(e)});var Gn=j(()=>{"use strict"});var Fn,nc,jo,Fa,Ga,Yo,Zo=j(()=>{"use strict";Xt();Gn();Fn=e=>Math.ceil(e/16)*16,nc=1,jo=()=>nc++,Fa=async(e,t,r,n)=>{let i=Fn(r),u=e.device.createBuffer({size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let o=e.getCommandEncoder();e.endComputePass(),o.copyBufferToBuffer(t,0,u,0,i),e.flush(),await u.mapAsync(GPUMapMode.READ);let c=u.getMappedRange();if(n){let p=n();return p.set(new Uint8Array(c,0,r)),p}else return new Uint8Array(c.slice(0,r))}finally{u.destroy()}},Ga=class{constructor(t){this.backend=t;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map,this.capturedPendingBuffers=new Map}upload(t,r){let n=r.buffer,i=r.byteOffset,u=r.byteLength,o=Fn(u),c=this.storageCache.get(t);if(!c)throw new Error("gpu data for uploading does not exist");if(c.originalSize!==u)throw new Error(`inconsistent data size. gpu data size=${c.originalSize}, data size=${u}`);let p=this.backend.device.createBuffer({mappedAtCreation:!0,size:o,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),m=p.getMappedRange();new Uint8Array(m).set(new Uint8Array(n,i,u)),p.unmap();let l=this.backend.getCommandEncoder();this.backend.endComputePass(),l.copyBufferToBuffer(p,0,c.gpuData.buffer,0,o),Ue("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${t})`),this.buffersForUploadingPending.push(p)}memcpy(t,r){let n=this.storageCache.get(t);if(!n)throw new Error("source gpu data for memcpy does not exist");let i=this.storageCache.get(r);if(!i)throw new Error("destination gpu data for memcpy does not exist");if(n.originalSize!==i.originalSize)throw new Error("inconsistent source and destination gpu data size");let u=Fn(n.originalSize),o=this.backend.getCommandEncoder();this.backend.endComputePass(),o.copyBufferToBuffer(n.gpuData.buffer,0,i.gpuData.buffer,0,u)}registerExternalBuffer(t,r,n){let i;if(n){if(i=this.externalBuffers.get(n),i===void 0)throw new Error("previous buffer is not registered");if(t===n)return Ue("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${i}, buffer is the same, skip.`),i;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`);this.externalBuffers.delete(n)}else i=jo();return this.storageCache.set(i,{gpuData:{id:i,type:0,buffer:t},originalSize:r}),this.externalBuffers.set(t,i),Ue("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${i}, registered.`),i}unregisterExternalBuffer(t){let r=this.externalBuffers.get(t);r!==void 0&&(this.storageCache.delete(r),this.externalBuffers.delete(t),Ue("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${r}`))}create(t,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let n=Fn(t),i,u=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,o=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(u||o){let p=u?this.freeBuffers:this.freeUniformBuffers,m=p.get(n);m||(m=[],p.set(n,m)),m.length>0?i=m.pop():i=this.backend.device.createBuffer({size:n,usage:r})}else i=this.backend.device.createBuffer({size:n,usage:r});let c={id:jo(),type:0,buffer:i};return this.storageCache.set(c.id,{gpuData:c,originalSize:t}),Ue("verbose",()=>`[WebGPU] GpuDataManager.create(size=${t}) => id=${c.id}`),c}get(t){return this.storageCache.get(t)?.gpuData}release(t){let r=this.storageCache.get(t);if(!r)throw new Error("releasing data does not exist");return Ue("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${r.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(r.gpuData.buffer),r.originalSize}async download(t,r){let n=this.storageCache.get(t);if(!n)throw new Error("data does not exist");await Fa(this.backend,n.gpuData.buffer,n.originalSize,r)}refreshPendingBuffers(){for(let t of this.buffersForUploadingPending)t.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let t of this.buffersPending)(t.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(t.size).push(t):(t.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(t.size).push(t):t.destroy();this.buffersPending=[]}else{let t=this.capturedPendingBuffers.get(this.backend.currentSessionId);t||(t=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,t));for(let r of this.buffersPending)t.push(r);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(t){let r=this.capturedPendingBuffers.get(t);r&&(r.forEach(n=>{n.destroy()}),this.capturedPendingBuffers.delete(t))}},Yo=(...e)=>new Ga(...e)});var qa,Te,tt=j(()=>{"use strict";qa=class{constructor(t){Object.assign(this,t)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(t=>`${this[t]}`).join(";")),this.key}},Te=e=>new qa(e)});var ja,kt,N,dr,qn,jn,Kn,Ee=j(()=>{"use strict";ja=class{static calcMatMulShape(t,r){return t[1]!==r[0]?void 0:[t[0],r[1]]}},kt=class{static calcShape(t,r,n=!1){let i=t.length,u=r.length;if(i===0)return r;if(u===0)return t;let o=Math.max(t.length,r.length),c=new Array(o);if(n){if(i<2||u<2)return;let p=ja.calcMatMulShape([t[i-2],t[i-1]],[r[u-2],r[u-1]]);if(p===void 0)return;[c[o-2],c[o-1]]=p}for(let p=n?3:1;p<=o;p++){let m=i-p<0?1:t[i-p],l=u-p<0?1:r[u-p];if(m!==l&&m>1&&l>1)return;c[o-p]=Math.max(m,l)}return c}static isValidBroadcast(t,r){let n=t.length,i=r.length;if(n>i)return!1;for(let u=1;u<=n;u++)if(t[n-u]!==1&&t[n-u]!==r[i-u])return!1;return!0}},N=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,n){let i=1;for(let u=r;u<n;u++){if(t[u]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");i*=t[u]}return i}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let n=new Array(r);n[r-1]=1,n[r-2]=t[r-1];for(let i=r-3;i>=0;--i)n[i]=n[i+1]*t[i+1];return n}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(n=>this.normalizeAxis(n,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(n=>t[n]):t.slice().reverse()}static padShape(t,r){let n=t.length;return t.map((i,u)=>i+r[u]+r[u+n])}static areEqual(t,r){return t.length!==r.length?!1:t.every((n,i)=>n===r[i])}},dr=class e{static adjustPoolAttributes(t,r,n,i,u,o){if(!t&&n.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let c=0;c<r.length-2;c++)c>=n.length?n.push(r[c+2]):n[c]=r[c+2];for(let c=0;c<n.length;c++)if(c<i.length){if(i[c]<0)throw new Error("strides should be greater than or equal to 1")}else i.push(1);for(let c=0;c<n.length;c++)if(c<u.length){if(u[c]<0)throw new Error("dilations should be greater than or equal to 1")}else u.push(1);for(let c=0;c<n.length*2;c++)if(c<o.length){if(o[c]<0)throw new Error("pad should be greater than or equal to 1")}else o.push(0);for(let c=0;c<n.length;c++){if(n[c]<=0)throw new Error("kernel shapes need to be greater than 0");if(o[c]>=n[c]||o[c+n.length]>=n[c])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,n,i,u,o,c){if(c){if(u.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(i.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let p=0;p<t.length-2;p++)e.adjustPadAndReturnShape(t[p+(o?1:2)],r[p],n[p],i[p],u,p,p+t.length-2,c)}}static computePoolOutputShape(t,r,n,i,u,o,c){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let p=[r[0],r[1]];return e.computeShapeHelper(t,r,p,n,i,u,o,c),p}static computeConvOutputShape(t,r,n,i,u,o,c){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let p=[t[0],r[0]];return e.computeShapeHelper(!1,t,p,n,i,u,o,c),p}static computeShapeHelper(t,r,n,i,u,o,c,p){if(t)for(let m=0;m<r.length-2;m++)n.push(1);else for(let m=0;m<r.length-2;m++)n.push(e.adjustPadAndReturnShape(r[m+2],i[m],u[m],o[m],c,m,m+r.length-2,p))}static adjustPadAndReturnShape(t,r,n,i,u,o,c,p){let m=n*(i-1)+1;if(p&&p!=="NOTSET")switch(p){case"VALID":return u[o]=0,u[c]=0,Math.floor((t-m)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(n!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let g=((t+r-1)/r-1)*r+i-t;return u[o]=Math.floor(p==="SAME_LOWER"?(g+1)/2:g/2),u[c]=g-u[o],Math.floor((t+g-i)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+u[o]+u[c]-m)/r+1)}},qn=class{static getShapeOfGemmResult(t,r,n,i,u){if(t.length!==2||n.length!==2)throw new Error("shape need to be of size 2");let o,c,p;r?(o=t[1],c=t[0]):(o=t[0],c=t[1]);let m=-1;if(i?(p=n[0],m=1):(p=n[1],m=0),n[m]!==c)throw new Error("dimension mismatch");if(o<=0||p<=0||c<=0)throw new Error("invalid shape specified");if(u&&!kt.isValidBroadcast(u,[o,p]))throw new Error("gemm: invalid bias shape for broadcast");return[o,p,c]}},jn=-34028234663852886e22,Kn=34028234663852886e22});var ac,Ya,Ge,It,L,Fe,rt,At,ht,pe,Za,W,Y,Yn,Ka,Xo,xr,Ae=j(()=>{"use strict";ge();Ee();ac=64,Ya=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}},Ge=(e,t=1)=>{let r=Ya(e,t);return typeof r=="string"?r:r[0]},It=(e,t=1)=>{let r=Ya(e,t);return typeof r=="string"?r:r[1]},L=e=>e.length===0?[]:[{type:12,data:e},{type:12,data:N.computeStrides(e)}],Fe=e=>e%4===0?4:e%2===0?2:1,rt=(e="f32",t,r="0")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,At=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}f(${r})`,ht=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,pe=(e,t,r,n)=>e.startsWith("uniforms.")&&r>4?typeof t=="string"?n==="f16"?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:n==="f16"?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:r>1?`${e}[${t}]`:e,Za=(e,t,r,n,i)=>{let u=typeof r=="number",o=u?r:r.length,c=[...new Array(o).keys()],p=o<2?"u32":o<=4?`vec${o}<u32>`:`array<u32, ${o}>`,m=Ya(t,i),l=typeof m=="string"?m:m[1],g=typeof m=="string"?m:m[0],b={indices:p,value:l,storage:g,tensor:t},$=F=>typeof F=="string"?F:`${F}u`,v={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},x=u?"uniforms.":"",T=`${x}${e}_shape`,C=`${x}${e}_strides`,S="";for(let F=0;F<o-1;F++)S+=`
    let dim${F} = current / ${pe(C,F,o)};
    let rest${F} = current % ${pe(C,F,o)};
    indices[${F}] = dim${F};
    current = rest${F};
    `;S+=`indices[${o-1}] = current;`;let A=o<2?"":`
  fn o2i_${e}(offset: u32) -> ${b.indices} {
    var indices: ${b.indices};
    var current = offset;
    ${S}
    return indices;
  }`,O=F=>(v.offsetToIndices=!0,o<2?F:`o2i_${e}(${F})`),M=[];if(o>=2)for(let F=o-1;F>=0;F--)M.push(`${pe(C,F,o)} * (indices[${F}])`);let z=o<2?"":`
  fn i2o_${e}(indices: ${b.indices}) -> u32 {
    return ${M.join("+")};
  }`,V=F=>(v.indicesToOffset=!0,o<2?F:`i2o_${e}(${F})`),K=(...F)=>o===0?"0u":`${b.indices}(${F.map($).join(",")})`,ue=(F,oe)=>o<2?`${F}`:`${pe(F,oe,o)}`,P=(F,oe,ye)=>o<2?`${F}=${ye};`:`${pe(F,oe,o)}=${ye};`,te={},Me=(F,oe)=>{v.broadcastedIndicesToOffset=!0;let ye=`${oe.name}broadcastedIndicesTo${e}Offset`;if(ye in te)return`${ye}(${F})`;let _t=[];for(let Ze=o-1;Ze>=0;Ze--){let He=oe.indicesGet("outputIndices",Ze+oe.rank-o);_t.push(`${ue(C,Ze)} * (${He} % ${ue(T,Ze)})`)}return te[ye]=`fn ${ye}(outputIndices: ${oe.type.indices}) -> u32 {
             return ${_t.length>0?_t.join("+"):"0u"};
           }`,`${ye}(${F})`},We=(F,oe)=>(()=>{if(b.storage===b.value)return`${e}[${F}]=${oe};`;if(b.storage==="vec2<u32>"&&b.value==="i32")return`${e}[${F}]=vec2<u32>(u32(${oe}), select(0u, 0xFFFFFFFFu, ${oe} < 0));`;if(b.storage==="vec2<u32>"&&b.value==="u32")return`${e}[${F}]=vec2<u32>(u32(${oe}), 0u);`;if(b.storage==="u32"&&b.value==="vec4<bool>")return`${e}[${F}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${oe}));`;throw new Error(`not supported combination of storage type ${b.storage} and value type ${b.value} yet`)})(),$e=F=>(()=>{if(b.storage===b.value)return`${e}[${F}]`;if(b.storage==="vec2<u32>"&&b.value==="i32")return`i32(${e}[${F}].x)`;if(b.storage==="vec2<u32>"&&b.value==="u32")return`u32(${e}[${F}].x)`;if(b.storage==="u32"&&b.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${F}] & 0xFFu), bool(${e}[${F}] & 0xFF00u), bool(${e}[${F}] & 0xFF0000u), bool(${e}[${F}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${b.storage} and value type ${b.value} yet`)})(),ve=o<2?"":`
  fn get_${e}ByIndices(indices: ${b.indices}) -> ${l} {
    return ${$e(`i2o_${e}(indices)`)};
  }`,de=o<2?"":(()=>{let F=c.map(ye=>`d${ye}: u32`).join(", "),oe=c.map(ye=>`d${ye}`).join(", ");return`
  fn get_${e}(${F}) -> ${l} {
    return get_${e}ByIndices(${K(oe)});
  }`})(),Oe=(...F)=>{if(F.length!==o)throw new Error(`indices length must be ${o}`);let oe=F.map($).join(",");return o===0?$e("0u"):o===1?$e(oe[0]):(v.get=!0,v.getByIndices=!0,v.indicesToOffset=!0,`get_${e}(${oe})`)},xe=F=>o<2?$e(F):(v.getByIndices=!0,v.indicesToOffset=!0,`get_${e}ByIndices(${F})`),ae=o<2?"":`
  fn set_${e}ByIndices(indices: ${b.indices}, value: ${l}) {
    ${We(`i2o_${e}(indices)`,"value")}
  }`,_e=o<2?"":(()=>{let F=c.map(ye=>`d${ye}: u32`).join(", "),oe=c.map(ye=>`d${ye}`).join(", ");return`
  fn set_${e}(${F}, value: ${l}) {
    set_${e}ByIndices(${K(oe)}, value);
  }`})();return{impl:()=>{let F=[],oe=!1;return v.offsetToIndices&&(F.push(A),oe=!0),v.indicesToOffset&&(F.push(z),oe=!0),v.broadcastedIndicesToOffset&&(Object.values(te).forEach(ye=>F.push(ye)),oe=!0),v.set&&(F.push(_e),oe=!0),v.setByIndices&&(F.push(ae),oe=!0),v.get&&(F.push(de),oe=!0),v.getByIndices&&(F.push(ve),oe=!0),!u&&oe&&F.unshift(`const ${T} = ${b.indices}(${r.join(",")});`,`const ${C} = ${b.indices}(${N.computeStrides(r).join(",")});`),F.join(`
`)},type:b,offsetToIndices:O,indicesToOffset:V,broadcastedIndicesToOffset:Me,indices:K,indicesGet:ue,indicesSet:P,set:(...F)=>{if(F.length!==o+1)throw new Error(`indices length must be ${o}`);let oe=F[o];if(typeof oe!="string")throw new Error("value must be string");let ye=F.slice(0,o).map($).join(",");return o===0?We("0u",oe):o===1?We(ye[0],oe):(v.set=!0,v.setByIndices=!0,v.indicesToOffset=!0,`set_${e}(${ye}, ${oe})`)},setByOffset:We,setByIndices:(F,oe)=>o<2?We(F,oe):(v.setByIndices=!0,v.indicesToOffset=!0,`set_${e}ByIndices(${F}, ${oe});`),get:Oe,getByOffset:$e,getByIndices:xe,usage:n,name:e,strides:C,shape:T,rank:o}},W=(e,t,r,n=1)=>Za(e,t,r,"input",n),Y=(e,t,r,n=1)=>Za(e,t,r,"output",n),Yn=(e,t,r,n=1)=>Za(e,t,r,"internal",n),Ka=class{constructor(t){this.normalizedDispatchGroup=t;this.internalVariables=[];this.variables=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(t){return`if (global_idx >= ${typeof t=="number"?`${t}u`:t}) { return; }`}mainStart(t=ac){let r=typeof t=="number"?t:t[0],n=typeof t=="number"?1:t[1],i=typeof t=="number"?1:t[2],u=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,o=u?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,c=u?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${r*n*i}u + local_idx;`;return`@compute @workgroup_size(${r}, ${n}, ${i})
  fn main(${o}) {
    ${c}
  `}appendVariableUniforms(t){t.rank!==0&&(t.shape.startsWith("uniforms.")&&this.uniforms.push({name:t.shape.replace("uniforms.",""),type:"u32",length:t.rank}),t.strides.startsWith("uniforms.")&&this.uniforms.push({name:t.strides.replace("uniforms.",""),type:"u32",length:t.rank}))}declareVariable(t,r){if(t.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(t),this.appendVariableUniforms(t);let n=t.usage==="input"?"read":"read_write",i=t.type.storage;return`@group(0) @binding(${r}) var<storage, ${n}> ${t.name}: array<${i}>;`}declareVariables(...t){return t.map(r=>this.declareVariable(r,this.variableIndex++)).join(`
`)}registerInternalVariable(t){if(t.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(t),this.appendVariableUniforms(t)}registerInternalVariables(...t){return t.forEach(r=>this.registerInternalVariable(r)),this}registerUniform(t,r,n=1){return this.uniforms.push({name:t,type:r,length:n}),this}registerUniforms(t){return this.uniforms=this.uniforms.concat(t),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let t=[];for(let{name:r,type:n,length:i}of this.uniforms)if(i&&i>4)n==="f16"?t.push(`@align(16) ${r}:array<mat2x4<${n}>, ${Math.ceil(i/8)}>`):t.push(`${r}:array<vec4<${n}>, ${Math.ceil(i/4)}>`);else{let u=i==null||i===1?n:`vec${i}<${n}>`;t.push(`${r}:${u}`)}return`
      struct Uniforms { ${t.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(t=>t.impl()).join(`
`)+this.internalVariables.map(t=>t.impl()).join(`
`)}},Xo=e=>new Ka(e),xr=(e,t)=>{let r=e.length,n=[];for(let i=0;i<r;i++){let u=r-1-i,o=e[u]||1;(t[t.length-1-i]||1)>1&&o===1&&n.unshift(u)}return n}});var ic,Jo,oc,sc,Tt,Qo,es,Cr=j(()=>{"use strict";ge();Ee();tt();Ae();ic=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},Jo=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,oc=(e,t)=>N.sortBasedOnPerm(e,Jo(e.length,t)),sc=(e,t,r,n)=>{let i=[];i.push(`fn perm(i: ${n.type.indices}) -> ${r.type.indices} {
    var a: ${r.type.indices};`);for(let u=0;u<t;++u)i.push(r.indicesSet("a",e[u],`i[${u}]`));return i.push("return a;}"),i.join(`
`)},Tt=(e,t)=>{let r=e.dataType,n=e.dims.length,i=Jo(n,t),u=oc(e.dims,i),o=Y("output",r,u.length),c=W("a",r,n),p=m=>`
  ${m.registerUniform("output_size","u32").declareVariables(c,o)}

  ${sc(i,n,c,o)}

  ${m.mainStart()}
    ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${o.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${o.setByOffset("global_idx",c.getByIndices("aIndices"))}
  }`;return{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:m=>{let l=N.size(u);return{outputs:[{dims:u,dataType:m[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:[{type:12,data:l},...L(m[0].dims),...L(u)]}},getShaderSource:p}},Qo=(e,t)=>{ic(e.inputs),e.compute(Tt(e.inputs[0],t.perm))},es=e=>Te({perm:e.perm})});var uc,lc,dc,cc,pc,fc,mc,hc,gc,yc,Pt,ts,rs,ns,as,is,os,ss,us,ls,ds,cs=j(()=>{"use strict";ge();Ee();Ae();Zn();Cr();uc={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},lc={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},dc={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},cc={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},pc=(e,t)=>{let r=[];for(let n=t-e;n<t;++n)r.push(n);return r},fc=(e,t)=>{let r=[],n=e.length;for(let u=0;u<n;u++)t.indexOf(u)===-1&&r.push(e[u]);let i=t.map(u=>e[u]);return[r,i]},mc=(e,t)=>{let r=e.length+t.length,n=[],i=0;for(let u=0;u<r;u++)t.indexOf(u)===-1?n.push(e[i++]):n.push(1);return n},hc=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},gc=(e,t)=>{let r=[];if(!hc(e,t)){for(let n=0;n<t;++n)e.indexOf(n)===-1&&r.push(n);e.forEach(n=>r.push(n))}return r},yc=(e,t,r,n,i,u,o)=>{let c=r[0].dims,p=N.size(u),m=N.size(o),l=W("_A",r[0].dataType,c),g=Y("output",i,u),b=32,$=`
          var<workgroup> aBestValues : array<${g.type.storage}, ${b}>;
       `;return{name:e,shaderCache:t,getShaderSource:x=>`
        ${x.registerUniform("reduceSize","u32").declareVariables(l,g)}
        ${$}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${x.mainStart(b)}

          let outputIndex = global_idx / ${b};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = ${g.type.storage}(${dc[n]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${b}) {
           let candidate = ${g.type.storage}(${l.getByOffset("offset + k")});
           bestValue = ${uc[n]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${b}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${lc[n]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${g.setByOffset("outputIndex",`${n==="mean"?`bestValue / ${g.type.storage}(uniforms.reduceSize)`:`${cc[n]}`}`)};
         }
        }`,getRunData:()=>({outputs:[{dims:u,dataType:i}],dispatchGroup:{x:p},programUniforms:[{type:12,data:m}]})}},Pt=(e,t,r,n)=>{let i=e.inputs.length===1?r:Xa(e.inputs,r),u=i.axes;u.length===0&&!i.noopWithEmptyAxes&&(u=e.inputs[0].dims.map(($,v)=>v));let o=N.normalizeAxes(u,e.inputs[0].dims.length),c=o,p=e.inputs[0],m=gc(c,e.inputs[0].dims.length);m.length>0&&(p=e.compute(Tt(e.inputs[0],m),{inputs:[0],outputs:[-1]})[0],c=pc(c.length,p.dims.length));let[l,g]=fc(p.dims,c),b=l;i.keepDims&&(b=mc(l,o)),e.compute(yc(t,{hint:i.cacheKey,inputDependencies:["type"]},[p],n,e.inputs[0].dataType,b,g),{inputs:[p]})},ts=(e,t)=>{Pt(e,"ReduceMeanShared",t,"mean")},rs=(e,t)=>{Pt(e,"ReduceL1Shared",t,"l1")},ns=(e,t)=>{Pt(e,"ReduceL2Shared",t,"l2")},as=(e,t)=>{Pt(e,"ReduceLogSumExpShared",t,"logSumExp")},is=(e,t)=>{Pt(e,"ReduceMaxShared",t,"max")},os=(e,t)=>{Pt(e,"ReduceMinShared",t,"min")},ss=(e,t)=>{Pt(e,"ReduceProdShared",t,"prod")},us=(e,t)=>{Pt(e,"ReduceSumShared",t,"sum")},ls=(e,t)=>{Pt(e,"ReduceSumSquareShared",t,"sumSquare")},ds=(e,t)=>{Pt(e,"ReduceLogSumShared",t,"logSum")}});var Rt,bc,Xn,Xa,Bt,vc,wc,$c,_c,Sc,xc,Cc,Ic,Ac,Tc,Dt,ps,fs,ms,hs,gs,ys,bs,vs,ws,$s,Zn=j(()=>{"use strict";ge();Ee();tt();Ae();cs();Rt=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},bc=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],Xn=(e,t,r,n,i,u,o=!1,c=!1)=>{let p=[],m=r[0].dims,l=m.length,g=N.normalizeAxes(i,l),b=!c&&g.length===0;m.forEach((T,C)=>{b||g.indexOf(C)>=0?o&&p.push(1):p.push(T)});let $=p.length,v=N.size(p);return{name:e,shaderCache:t,getShaderSource:T=>{let C=[],S=W("_A",r[0].dataType,l),A=Y("output",u,$),O=n(S,A,g),M=O[2];for(let z=0,V=0;z<l;z++)b||g.indexOf(z)>=0?(o&&V++,M=`for(var j${z}: u32 = 0; j${z} < ${m[z]}; j${z}++) {
                  ${O[2].includes("last_index")?`let last_index = j${z};`:""}
                  ${S.indicesSet("input_indices",z,`j${z}`)}
                  ${M}
                }`):(C.push(`${S.indicesSet("input_indices",z,A.indicesGet("output_indices",V))};`),V++);return`

        ${T.registerUniform("output_size","u32").declareVariables(S,A)}

        ${T.mainStart()}
          ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${S.type.indices};
          let output_indices = ${A.offsetToIndices("global_idx")};

          ${C.join(`
`)}
          ${O[0]}       // init ops for reduce max/min
          ${O[1]}
          ${M}
          ${O[3]}
          ${O.length===4?A.setByOffset("global_idx","value"):O.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:p,dataType:u}],dispatchGroup:{x:Math.ceil(v/64)},programUniforms:[{type:12,data:v},...L(m),...L(p)]})}},Xa=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(n=>r.push(Number(n))),Te({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},Bt=(e,t,r,n)=>{let i=e.inputs,u=i.length===1?r:Xa(i,r);e.compute(Xn(t,{hint:u.cacheKey,inputDependencies:["rank"]},[i[0]],u.noopWithEmptyAxes&&u.axes.length===0?bc:n,u.axes,i[0].dataType,u.keepDims,u.noopWithEmptyAxes),{inputs:[0]})},vc=(e,t)=>{Rt(e.inputs),Bt(e,"ReduceLogSum",t,(n,i)=>[`var value = ${i.type.storage}(0);`,"",`value += ${n.getByIndices("input_indices")};`,"value = log(value);"])},wc=(e,t)=>{Rt(e.inputs),Bt(e,"ReduceL1",t,(n,i)=>[`var value = ${i.type.storage}(0);`,"",`value += abs(${n.getByIndices("input_indices")});`,""])},$c=(e,t)=>{Rt(e.inputs),Bt(e,"ReduceL2",t,(n,i)=>[`var t = ${i.type.value}(0); var value = ${i.type.value}(0);`,"",`t = ${n.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},_c=(e,t)=>{Rt(e.inputs),Bt(e,"ReduceLogSumExp",t,(n,i)=>[`var value = ${i.type.storage}(0);`,"",`value += exp(${n.getByIndices("input_indices")});`,"value = log(value);"])},Sc=(e,t)=>{Rt(e.inputs),Bt(e,"ReduceMax",t,(n,i,u)=>{let o=[];for(let c=0;c<n.rank;c++)(u.indexOf(c)>=0||u.length===0)&&o.push(n.indicesSet("input_indices",c,0));return[`${o.join(`
`)}`,`var value = ${n.getByIndices("input_indices")};`,`value = max(value, ${n.getByIndices("input_indices")});`,""]})},xc=(e,t)=>{Rt(e.inputs),Bt(e,"ReduceMean",t,(n,i,u)=>{let o=1;for(let c=0;c<n.rank;c++)(u.indexOf(c)>=0||u.length===0)&&(o*=e.inputs[0].dims[c]);return["var sum = f32(0);","",`sum += f32(${n.getByIndices("input_indices")});`,`let value = ${i.type.value}(sum / ${o});`]})},Cc=(e,t)=>{Rt(e.inputs),Bt(e,"ReduceMin",t,(n,i,u)=>{let o=[];for(let c=0;c<n.rank;c++)(u.indexOf(c)>=0||u.length===0)&&o.push(`input_indices[${c}] = 0;`);return[`${o.join(`
`)}`,`var value = ${n.getByIndices("input_indices")};`,`value = min(value, ${n.getByIndices("input_indices")});`,""]})},Ic=(e,t)=>{Rt(e.inputs),Bt(e,"ReduceProd",t,(n,i)=>[`var value = ${i.type.storage}(1);`,"",`value *= ${n.getByIndices("input_indices")};`,""])},Ac=(e,t)=>{Rt(e.inputs),Bt(e,"ReduceSum",t,(n,i)=>[`var value = ${i.type.storage}(0);`,"",`value += ${n.getByIndices("input_indices")};`,""])},Tc=(e,t)=>{Rt(e.inputs),Bt(e,"ReduceSumSquare",t,(n,i)=>[`var t = ${i.type.value}(0); var value = ${i.type.value}(0);`,"",`t = ${n.getByIndices("input_indices")}; value += t * t;`,""])},Dt=(e,t,r)=>{if(t.length===0)return r;let n=1,i=1;for(let u=0;u<t.length;u++)t.indexOf(u)===-1?n*=e[u]:i*=e[u];return i<32&&n>1024},ps=(e,t)=>{Dt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?xc(e,t):ts(e,t)},fs=(e,t)=>{Dt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?wc(e,t):rs(e,t)},ms=(e,t)=>{Dt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?$c(e,t):ns(e,t)},hs=(e,t)=>{Dt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?_c(e,t):as(e,t)},gs=(e,t)=>{Dt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Sc(e,t):is(e,t)},ys=(e,t)=>{Dt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Cc(e,t):os(e,t)},bs=(e,t)=>{Dt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ic(e,t):ss(e,t)},vs=(e,t)=>{Dt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ac(e,t):us(e,t)},ws=(e,t)=>{Dt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Tc(e,t):ls(e,t)},$s=(e,t)=>{Dt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?vc(e,t):ds(e,t)}});var _s,Ss,xs,Ja,Cs=j(()=>{"use strict";ge();tt();Zn();_s=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},Ss=(e,t)=>{_s(e.inputs);let r=(n,i,u)=>{let o=[];for(let c=0;c<n.rank;c++)(u.indexOf(c)>=0||u.length===0)&&o.push(`input_indices[${c}] = 0;`);return[`${o.join(`
`)}`,`var value = ${n.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${n.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {
         value = ${n.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(Xn("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},xs=(e,t)=>{_s(e.inputs);let r=(n,i,u)=>{let o=[];for(let c=0;c<n.rank;c++)(u.indexOf(c)>=0||u.length===0)&&o.push(`input_indices[${c}] = 0;`);return[`${o.join(`
`)}`,`var value = ${n.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${n.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {
         value = ${n.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(Xn("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},Ja=e=>Te(e)});var Ec,Oc,kc,Pc,Jn,Rc,Is,Qa=j(()=>{"use strict";ge();Gn();Ae();Ec=(e,t)=>{let r=e[0],n=e[1],i=e[2],u=e[3],o=e[4],c=e[5];if(o&&c)throw new Error("Attention cannot have both past and relative_position_bias");if(r.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let p=r.dims[0],m=r.dims[1],l=r.dims[2];if(i.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(n.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(n.dims[0]!==l)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(i.dims[0]!==n.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let g=i.dims[0]/3,b=g,$=b;if(t.qkvHiddenSizes.length>0){if(t.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let A of t.qkvHiddenSizes)if(A%t.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");g=t.qkvHiddenSizes[0],b=t.qkvHiddenSizes[1],$=t.qkvHiddenSizes[2]}let v=m;if(g!==b)throw new Error("qkv_hidden_sizes first element should be same as the second");if(i.dims[0]!==g+b+$)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let x=0;if(o){if(b!==$)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(o.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(o.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(o.dims[1]!==p)throw new Error('Input "past" second dimension must be batch_size');if(o.dims[2]!==t.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(o.dims[4]!==b/t.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');t.pastPresentShareBuffer||(x=o.dims[3])}let T=v+x,C=-1,S=0;if(u)throw new Error("Mask not supported");if(o)throw new Error("past is not supported");if(c)throw new Error("relativePositionBias is not supported");return{batchSize:p,sequenceLength:m,pastSequenceLength:x,kvSequenceLength:v,totalSequenceLength:T,maxSequenceLength:C,inputHiddenSize:l,hiddenSize:g,vHiddenSize:$,headSize:Math.floor(g/t.numHeads),vHeadSize:Math.floor($/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:S,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},Oc=(e,t,r,n)=>{let i=Fe(n),u=64,o=n/i;o<u?u=1:o/8<64&&(u=Math.ceil(o/8));let c=Math.ceil(n/i/u),p=[{type:t.dataType,data:1/n},{type:12,data:o},{type:12,data:c}],m=Ge(t.dataType,i),l=g=>{let b=Y("x",t.dataType,t.dims,i),$="thread_max_vector";i===2?$="max(thread_max_vector.x, thread_max_vector.y)":i===4&&($="max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))");let v=It(t.dataType),x=[{name:"d_inv",type:v},{name:"d_comp",type:"u32"},{name:"elements_per_wg",type:"u32"}];return`
  var<workgroup> wgMax: array<f32, ${u}>;
  var<workgroup> wgSum: array<f32, ${u}>;
  ${g.registerUniforms(x).declareVariables(b)}
  ${g.mainStart([u,1,1])}
    let localOffset = local_idx * uniforms.elements_per_wg;
    let offset: u32 = workgroup_id.x * uniforms.d_comp + localOffset;

    var thread_max_vector = ${rt("f32",i,"-3.402823e+38f")};
    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
      thread_max_vector = max(${At(v,i,"x[offset + i]")}, thread_max_vector);
    }
    wgMax[local_idx] = ${$};
    workgroupBarrier();

    var maxValue = -3.402823e+38f;
    for (var i = 0u; i < ${u}; i++) {
      maxValue = max(wgMax[i], maxValue);
    }

    var sumVector = ${rt("f32",i,"0")};
    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
      sumVector += exp(${At(v,i,"x[offset + i]")} - maxValue);
    }
    wgSum[local_idx] = ${ht("sumVector",i)};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${u}; i++) {
      sum += wgSum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
        x[offset + i] = ${rt(v,i,"uniforms.d_inv")};
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
        let f32input = ${At(v,i,"x[offset + i]")};
        x[offset + i] = ${b.type.value}(exp(f32input - maxValue) / sum);
      }
    }
  }`};e.compute({name:"AttentionProbsSoftmax",shaderCache:{hint:`${u};${m};${i}`},getShaderSource:l,getRunData:()=>({outputs:[],dispatchGroup:{x:r},programUniforms:p})},{inputs:[t],outputs:[]})},kc=(e,t,r,n,i,u)=>{let o=[i.batchSize,i.numHeads,i.sequenceLength,i.kvSequenceLength+i.pastSequenceLength],c=u.scale===0?1/Math.sqrt(i.headSize):u.scale,p=Fe(i.headSize),m=i.headSize/p,l=12,g={x:Math.ceil(i.totalSequenceLength/l),y:Math.ceil(i.sequenceLength/l),z:i.batchSize*i.numHeads},b=[{type:12,data:i.sequenceLength},{type:12,data:m},{type:12,data:i.totalSequenceLength},{type:12,data:i.kvSequenceLength},{type:t.dataType,data:c}],$=[t,r],v=T=>{let C=W("q",t.dataType,t.dims,p),S=W("key",r.dataType,r.dims,p),A=Y("output",t.dataType,o),O=Ge(t.dataType),M=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"alpha",type:O}];return`
  const beta: ${O} = 1.0;
  const TILE_SIZE = ${l}u;

  var<workgroup> tileQ: array<${C.type.storage}, ${l*l}>;
  var<workgroup> tileK: array<${C.type.storage}, ${l*l}>;
  ${T.registerUniforms(M).declareVariables(C,S,A)}
  ${T.mainStart([l,l,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let lm = m + local_id.y;
    let ln = n + local_id.x;

    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;
    let kOffset = uniforms.kv_sequence_length * uniforms.K * headIdx + n * uniforms.K;

    var value = ${rt(O,p)};
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m + local_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k];
      }

      workgroupBarrier();
    }

    let headOffset = headIdx * uniforms.M * uniforms.N;
    if (lm < uniforms.M && ln < uniforms.N) {
      let outputIdx = headOffset + lm * uniforms.N + ln;
      output[outputIdx] = ${ht("value",p)} * uniforms.alpha;
    }
  }`},x=e.compute({name:"AttentionProbs",shaderCache:{hint:`${p}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:o,dataType:t.dataType,gpuDataType:0}],dispatchGroup:g,programUniforms:b}),getShaderSource:v},{inputs:$,outputs:[-1]})[0];return Oc(e,x,i.batchSize*i.numHeads*i.sequenceLength,i.totalSequenceLength),x},Pc=(e,t,r,n)=>{let i=[n.batchSize,n.sequenceLength,n.vHiddenSize],u=12,o={x:Math.ceil(n.vHeadSize/u),y:Math.ceil(n.sequenceLength/u),z:n.batchSize*n.numHeads},c=[{type:12,data:n.sequenceLength},{type:12,data:n.totalSequenceLength},{type:12,data:n.vHeadSize},{type:12,data:n.numHeads},{type:12,data:n.vHiddenSize}],p=m=>{let l=W("probs",t.dataType,t.dims),g=W("v",r.dataType,r.dims),b=Y("output",t.dataType,i),$=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`
  const TILE_SIZE = ${u}u;
  var<workgroup> tileQ: array<${l.type.value}, ${u*u}>;
  var<workgroup> tileK: array<${l.type.value}, ${u*u}>;
  ${m.registerUniforms($).declareVariables(l,g,b)}
  ${m.mainStart([u,u,1])}
   let headIdx = workgroup_id.z;
   let m = workgroup_id.y * TILE_SIZE + local_id.y;
   let n = workgroup_id.x * TILE_SIZE + local_id.x;

   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;
   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;

   var value = ${l.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
     if (m < uniforms.M && w + local_id.x < uniforms.K) {
       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
     }
     if (n < uniforms.N && w + local_id.y < uniforms.K) {
       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];
     }
     workgroupBarrier();
     for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;
   let headOffset = (batchIdx * uniforms.M * uniforms.num_heads + currentBatchHeadNumber) * uniforms.N;
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M *uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + currentBatchHeadNumber * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return e.compute({name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:i,dataType:t.dataType,gpuDataType:0}],dispatchGroup:o,programUniforms:c}),getShaderSource:p},{inputs:[t,r],outputs:[0]})[0]},Jn=(e,t,r,n,i,u,o,c,p,m,l)=>{let g=kc(e,t,r,p,m,l);Pc(e,g,n,m)},Rc=(e,t)=>{let r=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],n=t.sequenceLength,i=t.inputHiddenSize,u=t.headSize,o=12,c={x:Math.ceil(t.headSize/o),y:Math.ceil(t.sequenceLength/o),z:t.batchSize*t.numHeads},p=[e.inputs[0],e.inputs[1],e.inputs[2]],m=[{type:12,data:n},{type:12,data:i},{type:12,data:u},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}],l=g=>{let b=Y("output_q",p[0].dataType,r),$=Y("output_k",p[0].dataType,r),v=Y("output_v",p[0].dataType,r),x=W("input",p[0].dataType,p[0].dims),T=W("weight",p[1].dataType,p[1].dims),C=W("bias",p[2].dataType,p[2].dims),S=x.type.storage,A=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${o}u;
  var<workgroup> tileInput: array<${S}, ${o*o}>;
  var<workgroup> tileWeightQ: array<${S}, ${o*o}>;
  var<workgroup> tileWeightK: array<${S}, ${o*o}>;
  var<workgroup> tileWeightV: array<${S}, ${o*o}>;
  ${g.registerUniforms(A).declareVariables(x,T,C,b,$,v)}
  ${g.mainStart([o,o,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE + local_id.y;
    let n = workgroup_id.x * TILE_SIZE + local_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${S}(0);
    var valueK = ${S}(0);
    var valueV = ${S}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:c,programUniforms:m}),getShaderSource:l},{inputs:p,outputs:[-1,-1,-1]})},Is=(e,t)=>{let r=Ec(e.inputs,t),[n,i,u]=Rc(e,r);return Jn(e,n,i,u,e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t)}});var Bc,Dc,Mc,As,Ts=j(()=>{"use strict";wt();ge();Ee();tt();Ae();Bc=(e,t)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let r=(n,i,u)=>{let o=i.length;if(o!==n.length)throw new Error(`${u}: num dimensions != ${o}`);i.forEach((c,p)=>{if(c!==n[p])throw new Error(`${u}: dim[${p}] do not match`)})};if(e[0].dims.length>1){let n=t.format==="NHWC"?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);r(e[1].dims,n,"Invalid input scale"),r(e[2].dims,n,"Invalid input B"),r(e[3].dims,n,"Invalid input mean"),r(e[4].dims,n,"Invalid input var")}else r(e[1].dims,[1],"Invalid input scale"),r(e[2].dims,[1],"Invalid input B"),r(e[3].dims,[1],"Invalid input mean"),r(e[4].dims,[1],"Invalid input var")},Dc=(e,t)=>{let{epsilon:r,spatial:n,format:i}=t,u=e[0].dims,o=n?Fe(u[u.length-1]):1,c=i==="NHWC"&&u.length>1?o:1,p=N.size(u)/o,m=n,l=m?u.length:u,g=W("x",e[0].dataType,e[0].dims,o),b=W("scale",e[1].dataType,e[1].dims,c),$=W("bias",e[2].dataType,e[2].dims,c),v=W("inputMean",e[3].dataType,e[3].dims,c),x=W("inputVar",e[4].dataType,e[4].dims,c),T=Y("y",e[0].dataType,l,o),C=()=>{let A="";if(n)A=`let cOffset = ${u.length===1?"0u":i==="NHWC"?`outputIndices[${u.length-1}] / ${o}`:"outputIndices[1]"};`;else if(i==="NCHW")A=`
            ${T.indicesSet("outputIndices","0","0")}
            let cOffset = ${T.indicesToOffset("outputIndices")};`;else{A=`var cIndices = ${b.type.indices}(0);
                       cIndices[0] = outputIndices[${u.length-1}];`;for(let O=1;O<b.rank;O++)A+=`cIndices[${O}] = outputIndices[${O}];`;A+=`let cOffset = ${b.indicesToOffset("cIndices")};`}return A},S=A=>`
  const epsilon = ${r};
  ${A.registerUniform("outputSize","u32").declareVariables(g,b,$,v,x,T)}
  ${A.mainStart()}
  ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${T.offsetToIndices(`global_idx * ${o}`)};
    ${C()}
    let scale = ${b.getByOffset("cOffset")};
    let bias = ${$.getByOffset("cOffset")};
    let inputMean = ${v.getByOffset("cOffset")};
    let inputVar = ${x.getByOffset("cOffset")};
    let x = ${g.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${T.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${n}_${o}`,inputDependencies:m?["rank","type","type","type","type"]:void 0},getShaderSource:S,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:m?[{type:12,data:p},...L(u)]:[{type:12,data:p}]})}},Mc=e=>Te(e),As=(e,t)=>{let{inputs:r,outputCount:n}=e,i=Mc({...t,outputCount:n});if(Pe.webgpu.validateInputContent&&Bc(r,i),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(Dc(r,i))}});var zc,Uc,Es,Os=j(()=>{"use strict";Ee();Ae();zc=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Uc=e=>{let t=e[0].dims,r=e[0].dims[2],n=N.size(t)/4,i=e[0].dataType,u=W("input",i,t,4),o=W("bias",i,[r],4),c=W("residual",i,t,4),p=Y("output",i,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)}}),getShaderSource:l=>`
  const channels = ${r}u / 4;
  ${l.declareVariables(u,o,c,p)}

  ${l.mainStart()}
    ${l.guardAgainstOutOfBoundsWorkgroupSizes(n)}
    let value = ${u.getByOffset("global_idx")}
      + ${o.getByOffset("global_idx % channels")} + ${c.getByOffset("global_idx")};
    ${p.setByOffset("global_idx","value")}
  }`}},Es=e=>{zc(e.inputs),e.compute(Uc(e.inputs))}});var Wc,Be,ks,Ps,Rs,Bs,Ds,Ms,zs,Us,Ws,Nc,Ns,Vs,Hs,Ls,Qn,Gs,ea,Fs,qs,js,Ks,Ys,Zs,Xs,Js,Qs,eu,tu,ru,nu,au,iu,ou,su,uu,lu,ei=j(()=>{"use strict";ge();Ee();tt();Ae();Wc=(e,t,r,n,i,u)=>{let o=Math.ceil(t/4),c="";typeof i=="string"?c=`${i}(a)`:c=i("a");let p=W("inputData",r,[o],4),m=Y("outputData",n,[o],4);return`
      ${e.registerUniform("vec_size","u32").declareVariables(p,m)}

  ${u??""}

  ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${p.getByOffset("global_idx")};
    ${m.setByOffset("global_idx",c)}
  }`},Be=(e,t,r,n,i,u=e.dataType)=>({name:t,shaderCache:{hint:i,inputDependencies:["type"]},getShaderSource:o=>Wc(o,N.size(e.dims),e.dataType,u,r,n),getRunData:o=>({outputs:[{dims:e.dims,dataType:u}],dispatchGroup:{x:Math.ceil(N.size(o[0].dims)/64/4)},programUniforms:[{type:12,data:Math.ceil(N.size(e.dims)/4)}]})}),ks=e=>{e.compute(Be(e.inputs[0],"Abs","abs"))},Ps=e=>{e.compute(Be(e.inputs[0],"Acos","acos"))},Rs=e=>{e.compute(Be(e.inputs[0],"Acosh","acosh"))},Bs=e=>{e.compute(Be(e.inputs[0],"Asin","asin"))},Ds=e=>{e.compute(Be(e.inputs[0],"Asinh","asinh"))},Ms=e=>{e.compute(Be(e.inputs[0],"Atan","atan"))},zs=e=>{e.compute(Be(e.inputs[0],"Atanh","atanh"))},Us=e=>Te(e),Ws=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${t.to}`)}e.compute(Be(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},Nc=e=>{let t=e.length>=2&&e[1].data!==0?e[1].getFloat32Array()[0]:jn,r=e.length>=3&&e[2].data!==0?e[2].getFloat32Array()[0]:Kn;return Te({min:t,max:r})},Ns=(e,t)=>{let r=e.inputs.length===1?t:Nc(e.inputs),n=It(e.inputs[0].dataType);e.compute(Be(e.inputs[0],"Clip",i=>`clamp(${i}, clip_min_, clip_max_)`,`
    const clip_min_: vec4<${n}> = vec4(${n}(${r.min}));
    const clip_max_: vec4<${n}> = vec4(${n}(${r.max}));
`,r.cacheKey),{inputs:[0]})},Vs=e=>{e.compute(Be(e.inputs[0],"Ceil","ceil"))},Hs=e=>{e.compute(Be(e.inputs[0],"Cos","cos"))},Ls=e=>{e.compute(Be(e.inputs[0],"Cosh","cosh"))},Qn=e=>Te(e),Gs=(e,t)=>{let r=It(e.inputs[0].dataType);e.compute(Be(e.inputs[0],"Elu",n=>`elu_vf32(${n})`,`
  const elu_alpha_ = ${r}(${t.alpha});

  fn elu_f32(a: ${r}) -> ${r} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${r}>) -> vec4<${r}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,t.cacheKey))},ea=(e,t="f32")=>`
const r0: ${t} = 0.3275911;
const r1: ${t} = 0.254829592;
const r2: ${t} = -0.284496736;
const r3: ${t} = 1.421413741;
const r4: ${t} = -1.453152027;
const r5: ${t} = 1.061405429;

fn erf_vf32(v: ${e}) -> ${e} {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,Fs=e=>{let t=It(e.inputs[0].dataType);e.compute(Be(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,ea(`vec4<${t}>`,t)))},qs=e=>{e.compute(Be(e.inputs[0],"Exp","exp"))},js=e=>{e.compute(Be(e.inputs[0],"Floor","floor"))},Ks=e=>{let t=It(e.inputs[0].dataType);e.compute(Be(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,ea(`vec4<${t}>`,t)))},Ys=(e,t)=>{let r=It(e.inputs[0].dataType);e.compute(Be(e.inputs[0],"LeakyRelu",n=>`select(leaky_relu_alpha_ * ${n}, ${n}, ${n} >= vec4<${r}>(0.0))`,`const leaky_relu_alpha_ = ${r}(${t.alpha});`,t.cacheKey))},Zs=e=>{e.compute(Be(e.inputs[0],"Not",t=>`!${t}`))},Xs=e=>{e.compute(Be(e.inputs[0],"Neg",t=>`-${t}`))},Js=e=>{e.compute(Be(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},Qs=e=>{let t=It(e.inputs[0].dataType);e.compute(Be(e.inputs[0],"Relu",r=>`select(vec4<${t}>(0.0), ${r}, ${r} > vec4<${t}>(0.0))`))},eu=e=>{e.compute(Be(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},tu=e=>Te(e),ru=(e,t)=>{let r=It(e.inputs[0].dataType);e.compute(Be(e.inputs[0],"HardSigmoid",n=>`max(vec4<${r}>(0.0), min(vec4<${r}>(1.0), ${t.alpha} * ${n} + vec4<${r}>(${t.beta})))`,void 0,t.cacheKey))},nu=e=>{e.compute(Be(e.inputs[0],"Sin","sin"))},au=e=>{e.compute(Be(e.inputs[0],"Sinh","sinh"))},iu=e=>{e.compute(Be(e.inputs[0],"Sqrt","sqrt"))},ou=e=>{e.compute(Be(e.inputs[0],"Tan","tan"))},su=e=>{e.compute(Be(e.inputs[0],"Tanh",t=>`sign(${t}) * (1 - exp(-2 * abs(${t}))) / (1 + exp(-2 * abs(${t})))`))},uu=(e,t)=>{let r=It(e.inputs[0].dataType);return e.compute(Be(e.inputs[0],"ThresholdedRelu",n=>`select(vec4<${r}>(0.0), ${n}, ${n} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${r}>(${t.alpha});`,t.cacheKey)),0},lu=e=>{e.compute(Be(e.inputs[0],"Log","log"))}});var Hc,Lc,du,cu=j(()=>{"use strict";Ee();Ae();ei();Hc=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Lc=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=W("input",e[0].dataType,e[0].dims,4),n=W("bias",e[0].dataType,[e[0].dims[2]],4),i=Y("output",e[0].dataType,t,4),u=N.size(t)/4,o=Ge(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)}}),getShaderSource:p=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${e[0].dims[2]/4/2}u;

  ${p.declareVariables(r,n,i)}

  ${ea(`vec4<${o}>`,o)}

  ${p.mainStart()}
    ${p.guardAgainstOutOfBoundsWorkgroupSizes(u)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${i.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},du=e=>{Hc(e.inputs),e.compute(Lc(e.inputs))}});var Gc,Fc,Mt,pu,fu,mu,hu,gu,yu,bu,vu,wu,$u,_u=j(()=>{"use strict";ge();Ee();Ae();Gc=(e,t,r,n,i,u,o,c,p,m,l,g)=>{let b,$;typeof c=="string"?b=$=(S,A)=>`${c}((${S}),(${A}))`:typeof c=="function"?b=$=c:(b=c.scalar,$=c.vector);let v=Y("outputData",l,n.length,4),x=W("aData",p,t.length,4),T=W("bData",m,r.length,4),C;if(i)if(u){let S=N.size(t)===1,A=N.size(r)===1,O=t.length>0&&t[t.length-1]%4===0,M=r.length>0&&r[r.length-1]%4===0;S||A?C=v.setByOffset("global_idx",$(S?`${x.type.value}(${x.getByOffset("0")}.x)`:x.getByOffset("global_idx"),A?`${T.type.value}(${T.getByOffset("0")}.x)`:T.getByOffset("global_idx"))):C=`
            let outputIndices = ${v.offsetToIndices("global_idx * 4u")};
            let offsetA = ${x.broadcastedIndicesToOffset("outputIndices",v)};
            let offsetB = ${T.broadcastedIndicesToOffset("outputIndices",v)};
            ${v.setByOffset("global_idx",$(o||O?x.getByOffset("offsetA / 4u"):`${x.type.value}(${x.getByOffset("offsetA / 4u")}[offsetA % 4u])`,o||M?T.getByOffset("offsetB / 4u"):`${T.type.value}(${T.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else C=v.setByOffset("global_idx",$(x.getByOffset("global_idx"),T.getByOffset("global_idx")));else{if(!u)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let S=(A,O,M="")=>{let z=`aData[indexA${O}][componentA${O}]`,V=`bData[indexB${O}][componentB${O}]`;return`
            let outputIndices${O} = ${v.offsetToIndices(`global_idx * 4u + ${O}u`)};
            let offsetA${O} = ${x.broadcastedIndicesToOffset(`outputIndices${O}`,v)};
            let offsetB${O} = ${T.broadcastedIndicesToOffset(`outputIndices${O}`,v)};
            let indexA${O} = offsetA${O} / 4u;
            let indexB${O} = offsetB${O} / 4u;
            let componentA${O} = offsetA${O} % 4u;
            let componentB${O} = offsetB${O} % 4u;
            ${A}[${O}] = ${M}(${b(z,V)});
          `};l===9?C=`
            var data = vec4<u32>(0);
            ${S("data",0,"u32")}
            ${S("data",1,"u32")}
            ${S("data",2,"u32")}
            ${S("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:C=`
            ${S("outputData[global_idx]",0)}
            ${S("outputData[global_idx]",1)}
            ${S("outputData[global_idx]",2)}
            ${S("outputData[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(x,T,v)}

        ${g??""}

        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${C}
      }`},Fc=(e,t,r,n,i,u,o=r.dataType)=>{let c=!N.areEqual(r.dims,n.dims),p=r.dims,m=N.size(r.dims),l=!1,g=!1,b=[c];if(c){let $=kt.calcShape(r.dims,n.dims,!1);if(!$)throw new Error("Can't perform binary op on the given tensors");p=$,m=N.size(p);let v=N.size(r.dims)===1,x=N.size(n.dims)===1,T=r.dims.length>0&&r.dims[r.dims.length-1]%4===0,C=n.dims.length>0&&n.dims[n.dims.length-1]%4===0;b.push(v),b.push(x),b.push(T),b.push(C);let S=1;for(let A=1;A<p.length;A++){let O=r.dims[r.dims.length-A]??1,M=n.dims[n.dims.length-A]??1;if(O===M)S*=O;else break}S%4===0?(g=!0,l=!0):(v||x||T||C)&&(l=!0)}else l=!0;return b.push(l),{name:e,shaderCache:{hint:t+b.map($=>$.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:$=>Gc($,r.dims,n.dims,p,l,c,g,i,r.dataType,n.dataType,o,u),getRunData:()=>({outputs:[{dims:p,dataType:o}],dispatchGroup:{x:Math.ceil(m/64/4)},programUniforms:[{type:12,data:Math.ceil(N.size(p)/4)},...L(r.dims),...L(n.dims),...L(p)]})}},Mt=(e,t,r,n,i,u)=>{e.compute(Fc(t,i??"",e.inputs[0],e.inputs[1],r,n,u))},pu=e=>{Mt(e,"Add",(t,r)=>`${t}+${r}`)},fu=e=>{Mt(e,"Div",(t,r)=>`${t}/${r}`)},mu=e=>{Mt(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},hu=e=>{Mt(e,"Mul",(t,r)=>`${t}*${r}`)},gu=e=>{let t=W("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;Mt(e,"Pow",{scalar:(n,i)=>`pow_custom(${n},${i})`,vector:(n,i)=>`pow_vector_custom(${n},${i})`},`
    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {
      if (b == ${t}(0.0)) {
        return ${t}(1.0);
      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {
        return ${t}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {
      // TODO: implement vectorized pow
      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},yu=e=>{Mt(e,"Sub",(t,r)=>`${t}-${r}`)},bu=e=>{Mt(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},vu=e=>{Mt(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},wu=e=>{Mt(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},$u=e=>{Mt(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}});var jc,Kc,Yc,Zc,Su,xu,Cu=j(()=>{"use strict";ge();Ee();tt();Ae();jc=e=>{if(!e||e.length<1)throw new Error("too few inputs");let t=e[0].dataType,r=e[0].dims.length;for(let n of e){if(n.dataType!==t)throw new Error("input tensors should be one type");if(n.dims.length!==r)throw new Error("input tensors should have the same shape")}},Kc=(e,t)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${e}u>(${t});
    for (var i: u32 = 0u; i < ${e}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${e}u;
  }`,Yc=(e,t)=>{let r=e.length,n=[];for(let i=0;i<r;++i){let u=t.setByOffset("global_idx",e[i].getByIndices("indices"));r===1?n.push(u):i===0?n.push(`if (inputIndex == ${i}u) { ${u} }`):i===r-1?n.push(`else { ${u} }`):n.push(`else if (inputIndex == ${i}) { ${u} }`)}return n.join(`
`)},Zc=(e,t)=>{let r=e[0].dims.slice();if(t>=r.length||t<-1*r.length)throw new Error("axis specified for concat doesn't match input dimensionality");let n=t<0?r.length+t:t,i=r.slice(0);for(let C=1;C<e.length;C++){let S=e[C].dims.slice();for(let A=0;A<r.length;A++)if(A===n)i[n]+=S[A];else if(r[A]!==S[A])throw new Error("non concat dimensions must match")}let u=N.size(i),o=new Array(e.length),c=new Array(e.length),p=e[0].dataType,m=0,l=[],g=[],b=[{type:12,data:u}];for(let C=0;C<e.length;++C)m+=e[C].dims[n],o[C]=m,g.push(e[C].dims.length),c[C]=W(`input${C}`,p,g[C]),l.push("rank"),b.push({type:12,data:o[C]});for(let C=0;C<e.length;++C)b.push(...L(e[C].dims));b.push(...L(i));let $=Y("output",p,i.length),v=$.indicesGet("indices",n),x=Array.from(Array(o.length).keys()).map(C=>`uniforms.sizeInConcatAxis${C}`).join(","),T=C=>`

  ${(()=>{C.registerUniform("outputSize","u32");for(let S=0;S<e.length;S++)C.registerUniform(`sizeInConcatAxis${S}`,"u32");return C.declareVariables(...c,$)})()}

  ${Kc(o.length,x)}

  ${C.mainStart()}
    ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${$.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${v});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${o.length}u>(${x});
      ${v} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${Yc(c,$)}
  }`;return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:b}),getShaderSource:T}},Su=(e,t)=>{jc(e.inputs),e.compute(Zc(e.inputs,t.axis))},xu=e=>Te({axis:e.axis})});var zt,Ut,Wt,ta,Jt=j(()=>{"use strict";ge();Ee();zt=(e,t)=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(uniforms.clip_min), ${t}(uniforms.clip_max));`;case"HardSigmoid":return`value = max(${t}(0.0), min(${t}(1.0), ${t}(uniforms.alpha) * value + ${t}(uniforms.beta)));`;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},Ut=(e,t)=>{e.activation==="Clip"?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"&&t.push({type:1,data:e.alpha},{type:1,data:e.beta})},Wt=(e,t)=>{e.activation==="Clip"?t.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"&&t.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"})},ta=e=>{let t=e?.activation||"";if(t==="HardSigmoid"){let[r,n]=e?.activation_params||[.2,.5];return{activation:t,alpha:r,beta:n}}else if(t==="Clip"){let[r,n]=e?.activation_params||[jn,Kn];return{activation:t,clipMax:n,clipMin:r}}return{activation:t}}});var Ke,ra,na=j(()=>{"use strict";Ke=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},ra=e=>`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      `});var aa,ti=j(()=>{"use strict";aa=e=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));
}
`});var Xc,Jc,tn,Iu,Qc,rn,ep,ia,nn=j(()=>{"use strict";ge();Ee();Ae();Jt();na();Xc=(e,t)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${t?", batchIndices":""});
        `,Jc=(e,t)=>e?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,tn=(e,t,r="f32",n,i=!1,u=32,o=!1,c=32)=>{let p=t[1]*e[1],m=t[0]*e[0],l=i?p:u,g=i?u:p,b=l/t[0],$=u/t[1];if(!((i&&b===4&&e[1]===4||!i&&(b===3||b===4))&&l%t[0]===0&&u%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${i} is true, innerElementSize ${b} and workPerThread[1] ${e[1]} must be 4.
      Otherwise, innerElementSize ${b} must be 3 or 4.
  tileAWidth ${l} must be divisible by workgroupSize[0]${t[0]}. tileInner ${u} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${b}<${r}>, ${l/b}>, ${g}>;
var<workgroup> mm_Bsub: array<array<vec4<${r}>, ${m/e[0]}>, ${u}>;

const rowPerThread = ${e[1]};
const colPerThread = ${e[0]};
const innerElementSize = ${b};
const tileInner = ${u};

@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${o?"0":"i32(globalId.z)"};
  ${n?`let batchIndices = ${n.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${p};

  let num_tiles = ${o?`${Math.ceil(c/u)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${o?`i32(globalId.z) * ${c}`:"0"};

  var acc: array<vec4<${r}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${$};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${Xc(i,n)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${$}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${n?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${b===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${Jc(i,b)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},Iu=(e,t)=>e?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${t?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${t?", batchIndices":""});
            `,Qc=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",rn=(e,t,r="f32",n,i=!1,u=32,o=!1,c=32,p=!1)=>{let m=e[1]*t[1],l=e[0]*t[0],g=i?m:u,b=i?u:m;if(!(b%t[1]===0&&g%t[0]===0&&u%t[1]===0))throw new Error(`tileAHight ${b} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${g} must be divisible by workgroupSize[0]${t[0]}, tileInner ${u} must be divisible by workgroupSize[1]${t[1]}`);let $=b/t[1],v=g/t[0],x=u/t[1],T=p?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${m};
    let globalColStart = i32(workgroupId.x) * ${l};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${b}; inputRow = inputRow + ${t[1]}) {
        for (var inputCol = localCol; inputCol < ${g}; inputCol = inputCol + ${t[0]}) {
          ${Iu(i,n)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${u}; inputRow = inputRow + ${t[1]}) {
            for (var inputCol = localCol; inputCol < ${l}; inputCol = inputCol + ${t[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${n?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${r}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${i?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${t[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${t[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${m};

let tileRowA = i32(localId.y) * ${$};
let tileColA = i32(localId.x) * ${v};
let tileRowB = i32(localId.y) * ${x};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${$}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${v}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${Iu(i,n)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${x}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${n?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${r}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${Qc(i)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${r}, ${g}>, ${b}>;
  var<workgroup> mm_Bsub : array<array<${r}, ${l}>, ${u}>;
  const rowPerThread = ${e[1]};
  const colPerThread = ${e[0]};
  const tileInner = ${u};

@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${o?"0":"i32(globalId.z)"};
    ${n?`let batchIndices = ${n.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${o?`${Math.ceil(c/u)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${o?`i32(globalId.z) * ${c}`:"0"};

    var acc : array<array<${r}, colPerThread>, rowPerThread>;

    // Without this initialization strange values show up in acc.
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = 0.0;
      }
    }
    ${T}
  }
`},ep=(e,t,r,n,i,u=!1)=>{let[o,c,p]=i,[m,l,g,b]=n,$=xr(o,p),v=xr(c,p),x=Ge(n[0].type.tensor),T=()=>{let A=l.rank,O=m.rank,M=`var aIndices: ${l.type.indices};`;for(let z=A-2-1,V=O-1;z>=0;z--,V--)M+=`
aIndices[${z}] = ${O>1?`batchIndices[${V}]`:"batchIndices"};`;return $.forEach(z=>{M+=`
aIndices[${z}] = 0;`}),M+=`
aIndices[${A-2}] = u32(row);
                   aIndices[${A-1}] = u32(colIn);`,M},C=()=>{let A=g.rank,O=m.rank,M=`var bIndices: ${g.type.indices};`;for(let z=A-2-1,V=O-1;z>=0;z--,V--)M+=`
bIndices[${z}] = ${O>1?`batchIndices[${V}]`:"batchIndices"};`;return v.forEach(z=>{M+=`
bIndices[${z}] = 0;`}),M+=`
bIndices[${A-2}] = u32(row);
                   bIndices[${A-1}] = u32(colIn);`,M};return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${m.type.indices}) -> ${Ke(e,x)} {
      var value = ${Ke(e,x)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        ${T()}
        value = ${l.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${m.type.indices}) -> ${Ke(e,x)} {
      var value = ${Ke(e,x)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        ${C()}
        value = ${g.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${Ke(e,x)}) {
      let col = colIn * ${e};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${t?`value = value + ${u?"bias[colIn]":`${Ke(e,x)}(bias[row])`};`:""}
        ${r}
        ${b.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},ia=(e,t,r,n,i=!1)=>{let u=e[0].dims,o=e[1].dims,c=u.slice(0,-2),p=o.slice(0,-2),m=n?n.slice(0,-2):r.slice(0,-2),l=N.size(m),g=u[u.length-2],b=u[u.length-1],$=o[o.length-1],v=b%4===0&&$%4===0,x=g<=8?[4,1,1]:[4,4,1],T=[8,8,1],C=[Math.ceil($/T[0]/x[0]),Math.ceil(g/T[1]/x[1]),Math.ceil(l/T[2]/x[2])],S=v?4:1,A=[...c,g,b/S],O=A.length,M=[...p,b,$/S],z=M.length,V=[l,g,$/S],K=[{type:6,data:g},{type:6,data:$},{type:6,data:b}];Ut(t,K),K.push(...L(m),...L(A),...L(M));let ue=["rank","rank"],P=e.length>2;P&&(K.push(...L(e[2].dims)),ue.push("rank")),K.push(...L(V));let te=Me=>{let We=m.length,$e=Yn("batchDims",e[0].dataType,We,1),ve=Ge(e[0].dataType),de=W("a",e[0].dataType,O,S),Oe=W("b",e[1].dataType,z,S),xe=Y("result",e[0].dataType,V.length,S),ae=[de,Oe];if(P){let Ye=i?S:1;ae.push(W("bias",e[2].dataType,e[2].dims.length,Ye))}let _e=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Wt(t,_e);let ke=zt(t,xe.type.value),Re=ep(S,P,ke,[$e,de,Oe,xe],[c,p,m],i);return`
  ${Me.registerUniforms(_e).registerInternalVariables($e).declareVariables(...ae,xe)}
  ${Re}
  ${v?tn(x,T,ve,$e):rn(x,T,ve,$e)}
                   `};return{name:"MatMul",shaderCache:{hint:`${x};${t.activation};${v};${i}`,inputDependencies:ue},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:C[0],y:C[1],z:C[2]},programUniforms:K}),getShaderSource:te}}});var tp,Au,Tu=j(()=>{"use strict";ge();Xt();Ae();Jt();na();ti();nn();tp=(e,t,r,n,i=!1,u,o=4,c=4,p=4,m="f32")=>{let l=P=>{switch(P){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${m}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${P} is not supported.`)}},g=P=>{switch(P){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${P} is not supported.`)}},b=e?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,$=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,v=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",x=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",T=e?"row":"col",C=e?"col":"row",S=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${T} / outWidth;
    let outCol = ${T} % outWidth;

    let WRow = ${C} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${C} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${C} % inChannels;
    var resData = ${Ke(o,m)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${v} && xCol >= 0 && xCol < ${x}) {
      ${b}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${l(o)}
    }
    return resData;`,A=e?t&&n?`
    let col = colIn * ${o};
    ${S}`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${S}
    }
    return ${Ke(o,m)}(0.0);`:n&&r?`
    let col = colIn * ${o};
    ${S}`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${S}
    }
    return ${Ke(o,m)}(0.0);`,O=`${g(c)}`,M=Ke(p,m),z=e?Ke(o,m):Ke(c,m),V=e?Ke(c,m):Ke(o,m),K=zt(u,M);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${z} {
      ${e?A:O}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${V} {
      ${e?O:A}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${M}) {
      let col = colIn * ${p};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${$}
      ${ra(i)}
      ${K}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},Au=(e,t,r,n,i,u,o,c)=>{let p=t.format==="NHWC",m=p?e[0].dims[3]:e[0].dims[1],l=r[0],g=p?r[2]:r[3],b=p?r[1]:r[2],$=p?r[3]:r[1],v=p&&(m%4===0||m%3===0)&&$%4===0,x=p?$:g*b,T=p?g*b:$,C=[8,8,1],S=n<=8?[4,1,1]:[4,4,1],A=[Math.ceil(x/C[0]/S[0]),Math.ceil(T/C[1]/S[1]),Math.ceil(l/C[2]/S[2])];Ue("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${A}`);let O=v?p&&m%4!==0?3:4:1,M=C[1]*S[1],z=C[0]*S[0],V=Math.max(C[0]*O,C[1]),K=n%M===0,ue=i%z===0,P=u%V===0,te=v?[O,4,4]:[1,1,1],Me=[{type:6,data:n},{type:6,data:i},{type:6,data:u},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];Ut(t,Me),Me.push(...L(e[0].dims),...L(e[1].dims));let We=["rank","rank"];o&&(Me.push(...L(e[2].dims)),We.push("rank")),Me.push(...L(r));let $e=ve=>{let de=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Wt(t,de);let Oe=v?4:1,xe=Ge(e[0].dataType),ae=`
      fn setOutputAtIndex(flatIndex : i32, value : ${v?`vec4<${xe}>`:xe}) {
        result[flatIndex] = ${v?`vec4<${xe}>`:xe}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${v?`vec4<${xe}>`:xe}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${v?"/ 4":""}, value);
      }`,_e=W("x",e[0].dataType,e[0].dims.length,O===3?1:O),ke=W("w",e[1].dataType,e[1].dims.length,Oe),Re=[_e,ke],Ye=Y("result",e[0].dataType,r.length,Oe);if(o){let F=W("bias",e[2].dataType,e[2].dims.length,Oe);Re.push(F),ae+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${v?`vec4<${xe}>`:xe} {
          return bias[coords.${p?"w":"y"}${v?"/ 4":""}];
        }`}return`
        ${aa("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${ve.registerUniforms(de).declareVariables(...Re,Ye)}
        ${ae}
        ${tp(p,K,ue,P,o,t,te[0],te[1],te[2],xe)}
        ${v?tn(S,C,xe,void 0,!p,V):rn(S,C,xe,void 0,!p,V,!1,void 0,c)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${O};${v};${K};${ue};${P};${M};${z};${V}`,inputDependencies:We},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:A[0],y:A[1],z:A[2]},programUniforms:Me}),getShaderSource:$e}}});var ri,Eu=j(()=>{"use strict";ge();Ee();Ae();ai();Jt();ri=(e,t,r)=>{let n=e.length>2,i=n?"value += b[output_channel];":"",u=e[0].dims,o=e[1].dims,c=o[0]/t.group,p=t.format==="NHWC",m=ni(u,o,t.dilations,t.pads,t.strides,p),l=N.size(m),g=[{type:12,data:l},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:c}];Ut(t,g),g.push(...L(u),...L(o),...L(m));let b=["rank","rank"];n&&(g.push(...L(e[2].dims)),b.push("rank")),g.push(...L(m));let $=v=>{let x=Y("output",e[0].dataType,m.length),T=zt(t,x.type.value),C=W("x",e[0].dataType,u.length),S=W("w",e[1].dataType,o.length),A=[C,S];n&&A.push(W("b",e[2].dataType,e[2].dims));let O=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];return Wt(t,O),`
  ${v.registerUniforms(O).declareVariables(...A,x)}

  ${v.mainStart()}
    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${x.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${p?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${p?1:2}], outputIndices[${p?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel / uniforms.output_channels_per_group;

    var value: ${x.type.value} = ${x.type.value}(0);
    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[${p?1:2}]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[${p?2:3}]) {
            continue;
          }

          let xVal = ${p?C.get("batch","xHeight","xWidth","input_channel"):C.get("batch","input_channel","xHeight","xWidth")};
          let wVal = ${S.get("output_channel","wInChannel","wHeight","wWidth")};
          value += xVal*wVal;
        }
      }
    }
    ${i}
    ${T}
    ${x.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:t.cacheKey,inputDependencies:b},getRunData:()=>({outputs:[{dims:r?r(m):m,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:g}),getShaderSource:$}}});var ii,rp,Ou,oi=j(()=>{"use strict";ge();Ee();nn();Ae();Jt();ii=(e,t,r,n,i=!1)=>{let u=e[0].dims,o=e[1].dims,c=u[u.length-2],p=o[o.length-1],m=u[u.length-1],l=Fe(p),g=Fe(m),b=Fe(c),$=N.size(r)/l/b,v=e.length>2,x=n?n.slice(0,-2):r.slice(0,-2),C=[N.size(x),c,p],S=[{type:12,data:$},{type:12,data:c},{type:12,data:p},{type:12,data:m}];Ut(t,S),S.push(...L(x),...L(u),...L(o)),v&&S.push(...L(e[2].dims)),S.push(...L(C));let A=O=>{let M=Yn("batch_dims",e[0].dataType,x.length),z=W("a",e[0].dataType,u.length,g),V=W("b",e[1].dataType,o.length,l),K=Y("output",e[0].dataType,C.length,l),ue=zt(t,K.type.value),P=[z,V],te="";if(v){let ae=i?l:1;P.push(W("bias",e[2].dataType,e[2].dims.length,ae)),te=`${i?`value += bias[col / ${ae}];`:`value += ${K.type.value}(bias[row + i]);`}`}let Me=u.slice(0,-2),We=o.slice(0,-2),$e=xr(Me,x),ve=xr(We,x),de=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];Wt(t,de);let Oe=(ae,_e)=>{let ke=ae.rank,Re=ae.name;if(ke===2)return`var ${Re}_indices = ${ae.type.indices}(0u, 0u);`;let Ye=M.rank,F=`var ${Re}_indices: ${ae.type.indices};`;for(let oe=ke-2-1,ye=Ye-1;oe>=0;oe--,ye--)F+=`
${Re}_indices[${oe}] = ${Ye>1?`batch_indices[${ye}]`:"batch_indices"};`;return _e.forEach(oe=>{F+=`
${Re}_indices[${oe}] = 0;`}),F+=`${Re}_indices[${ke-2}] = 0u;
                     ${Re}_indices[${ke-1}] = 0u;`,F},xe=()=>{let ae=`var a_data: ${z.type.value};`;for(let _e=0;_e<g;_e++)ae+=`
              let b_data${_e} = b[(b_offset + (k + ${_e}) * uniforms.N + col) / ${l}];`;for(let _e=0;_e<b;_e++){ae+=`a_data = a[(a_offset + (row + ${_e}) * uniforms.K + k) / ${g}];`;for(let ke=0;ke<g;ke++)ae+=`
            values[${_e}] = fma(${V.type.value}(a_data${g===1?"":`[${ke}]`}), b_data${ke}, values[${_e}]);
`}return ae};return`
  ${O.registerUniforms(de).registerInternalVariables(M).declareVariables(...P,K)}
  ${O.mainStart()}
    ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${l})) * ${l};
    var index1 = global_idx / (uniforms.N / ${l});
    let stride1 = uniforms.M / ${b};
    let row = (index1 % stride1) * ${b};
    let batch = index1 / stride1;

    ${r.length===2?"":`let batch_indices = ${M.offsetToIndices("batch")};`}
    ${Oe(z,$e)}
    let a_offset = ${z.indicesToOffset("a_indices")};
    ${Oe(V,ve)}
    let b_offset = ${V.indicesToOffset("b_indices")};
    var values: array<${K.type.value}, ${b}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${g}) {
      ${xe()}
    }
    for (var i = 0u; i < ${b}u; i++) {
      var value = values[i];
      ${te}
      ${ue}
      let cur_indices = ${K.type.indices}(batch, row + i, col);
      let offset = ${K.indicesToOffset("cur_indices")};
      ${K.setByOffset(`offset / ${l}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${l};${g};${b};${i}`,inputDependencies:v?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil($/64)},programUniforms:S}),getShaderSource:A}},rp=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},Ou=e=>{rp(e.inputs);let t=kt.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can't use matmul on the given tensors");let r=t[t.length-1],n=e.inputs[0].dims[e.inputs[0].dims.length-1];r<8&&n<8?e.compute(ii(e.inputs,{activation:""},t)):e.compute(ia(e.inputs,{activation:""},t))}});var ni,ku,np,Pu,si,ap,ip,ui,ai=j(()=>{"use strict";Ee();Tu();nn();Eu();Jt();oi();Cr();ni=(e,t,r,n,i,u)=>{let o=e[0],c=e.slice(u?1:2,u?3:4),p=c.length,m=t[0],g=t.slice(2).map((v,x)=>v+(v-1)*(r[x]-1)),$=c.map((v,x)=>v+n[x]+n[x+p]).map((v,x)=>Math.floor((v-g[x]+i[x])/i[x]));return $.splice(0,0,o),$.splice(u?3:1,0,m),$},ku=[2,3,1,0],np=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],n=e[1].dims[1]*t.group;if(r!==n)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let i=e[0].dims.length-2;if(t.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(t.strides.length!==i)throw new Error(`strides should be ${i}D`);if(t.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},Pu=(e,t)=>{let r=e.kernelShape.slice();for(let u=2;u<t[1].dims.length;++u)r[u-2]===0&&(r[u-2]=t[1].dims[u]);let n=e.pads.slice();dr.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,n,e.format==="NHWC",e.autoPad);let i=Object.assign({},e);return Object.assign(i,{kernelShape:r,pads:n}),i},si=e=>{let t=ta(e),r=e.format,n=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],i=e.dilations,u=e.group,o=e.kernel_shape,c=e.pads,p=e.strides,m=e.w_is_const();return{autoPad:n,format:r,dilations:i,group:u,kernelShape:o,pads:c,strides:p,wIsConst:m,...t,cacheKey:`${e.format};${t.activation};`}},ap=(e,t,r)=>{let n=Pu(r,t),i=r.format==="NHWC";if(r.group!==1){e.compute(ri(t,n));return}let u=t.length===3,o=t[0].dims[i?1:2],c=t[0].dims[i?2:3],p=t[0].dims[i?3:1],m=t[1].dims[2],l=t[1].dims[3],g=ni(t[0].dims,t[1].dims,r.dilations,n.pads,r.strides,i),b=g[i?1:2],$=g[i?2:3],v=g[i?3:1],x=i&&m===o&&l===c&&r.pads[0]===0&&r.pads[1]===0;if(x||m===1&&l===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let z=g[0],V,K,ue,P=[];if(i){let We=e.kernelCustomData.wT??e.compute(Tt(t[1],ku),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=We),x){let $e=o*c*p;V=t[0].reshape([1,z,$e]),K=We.reshape([1,$e,v]),ue=[1,z,v]}else V=t[0].reshape([z,o*c,p]),K=We.reshape([1,p,v]),ue=[z,b*$,v];P.push(V),P.push(K)}else V=t[0].reshape([z,p,o*c]),K=t[1].reshape([1,v,p]),ue=[z,v,b*$],P.push(K),P.push(V);u&&P.push(t[2]);let te=ue[2],Me=P[0].dims[P[0].dims.length-1];te<8&&Me<8?e.compute(ii(P,n,g,ue,i),{inputs:P}):e.compute(ia(P,n,g,ue,i),{inputs:P});return}let T=!0,C=e.kernelCustomData.wT??e.compute(Tt(t[1],ku),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=C);let S=[t[0],C];u&&S.push(t[2]);let A=i?b*$:v,O=i?v:b*$,M=m*l*p;e.compute(Au(S,n,g,A,O,M,u,T),{inputs:S})},ip=(e,t)=>{let r=t.format==="NHWC",n=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&n.push(e.inputs[2]);let i=[0,t.pads[0],0,t.pads[1]],u=[1].concat(t.strides),o=[1].concat(t.dilations),c=[1].concat(t.kernelShape),p=Pu({...t,pads:i,strides:u,dilations:o,kernelShape:c},n);e.compute(ri(n,p,m=>r?[m[0],m[2],m[3]]:[]))},ui=(e,t)=>{np(e.inputs,t),e.inputs[0].dims.length===3?ip(e,t):ap(e,e.inputs,t)}});var op,Ru,Bu=j(()=>{"use strict";ge();Xt();Ae();Jt();na();ti();nn();op=(e,t=!1,r,n=4)=>{let i=Ke(n,"f32"),u=C=>{switch(C){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];
            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];
            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];
            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${C} is not supported.`)}},o=e?`
      let coord = vec4<i32>(batch, iXR, iXC, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, iXR, iXC);
      `,c=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,p=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",m=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",l=e?"row":"col",g=e?"col":"row",b=`
      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      let outRow = ${l} / outWidth;
      let outCol = ${l} % outWidth;

      let WRow = ${g} / (uniforms.filter_dims[1] * inChannels);
      let WCol = ${g} / inChannels % uniforms.filter_dims[1];
      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(${p}) || fract(xR) > 0.0) {
        return ${i}(0.0);
      }
      if (xC < 0.0 || xC >= f32(${m}) || fract(xC) > 0.0) {
        return ${i}(0.0);
      }
      let iXR = i32(xR);
      let iXC = i32(xC);
      let xCh = ${g} % inChannels;
      ${o}
      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${n}];`,$=e?`
      let col = colIn * ${n};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
        ${b}
      }
      return ${i}(0.0);`:`
      let col = colIn * ${n};
      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
        ${b}
      }
      return ${i}(0.0);`,v=`
      let col = colIn * ${n};
      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);
      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];
      if (${e?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {
        let rowInner = row % inChannels;
        let coord = vec4<i32>(coordX, coordY, col, rowInner);
        ${u(n)}
      }
      return ${i}(0.0);
      `,x=zt(r,i);return`
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${i} {
    ${e?$:v}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${i} {
    ${e?v:$}
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${i}) {
    let col = colIn * ${n};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
      var value = valueInput;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${c}
      ${ra(t)}
      ${x}
      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${n}] = value;
    }
  }`},Ru=(e,t,r,n,i,u,o,c)=>{let p=t.format==="NHWC",m=p?e[0].dims[3]:e[0].dims[1],l=r[0],g=p?r[2]:r[3],b=p?r[1]:r[2],$=p?r[3]:r[1],v=p?m%4===0&&$%4===0:g%4===0&&$%4===0,x=p?$:g*b,T=p?g*b:$,C=v?[8,8,1]:[x<=4||T<=4?4:16,x>4&&T<=4?4:16,1],S=v?[4,4,1]:[x<=4?1:4,x>4&&T<=4?1:4,1],A=[Math.ceil(x/C[0]/S[0]),Math.ceil(T/C[1]/S[1]),Math.ceil(l/C[2]/S[2])];Ue("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${A}`);let O=v?4:1,M=Math.max(C[0]*O,C[1]),z=v?4:1,V=[t.kernelShape[p?1:2],t.kernelShape[p?2:3]],K=[V[0]+(t.dilations[0]<=1?0:(V[0]-1)*(t.dilations[0]-1)),V[1]+(t.dilations[1]<=1?0:(V[1]-1)*(t.dilations[1]-1))],ue=[K[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),K[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],P=[{type:6,data:n},{type:6,data:i},{type:6,data:u},{type:6,data:t.strides},{type:6,data:t.dilations},{type:6,data:V},{type:6,data:ue}];Ut(t,P),P.push(...L(e[0].dims),...L(e[1].dims));let te=["rank","rank"];o&&(P.push(...L(e[2].dims)),te.push("rank")),P.push(...L(r));let Me=We=>{let $e=W("x",e[0].dataType,e[0].dims.length,z),ve=W("w",e[1].dataType,e[1].dims.length,1),de=Y("result",e[0].dataType,r.length,z),Oe=[$e,ve],xe="";if(o){let _e=W("bias",e[2].dataType,e[2].dims.length,z);Oe.push(_e),xe+=`
          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${v?"vec4<f32>":"f32"} {
            return bias[coords.${p?"w":"y"}${v?"/ 4":""}];
          }`}let ae=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:V.length},{name:"pads",type:"i32",length:ue.length}];return Wt(t,ae),`
        ${aa("uniforms.result_strides")}
        ${We.registerUniforms(ae).declareVariables(...Oe,de)};
        ${xe}
        ${op(p,o,t,O)}
        ${v?tn(S,C,"f32",void 0,!p,M):rn(S,C,"f32",void 0,!p,M,!1,void 0,c)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${t.cacheKey};${S};${C};${v}`,inputDependencies:te},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:A[0],y:A[1],z:A[2]},programUniforms:P}),getShaderSource:Me}}});var sp,li,Du=j(()=>{"use strict";ge();Xt();Ee();Ae();sp=(e,t,r,n,i,u=!1,o,c,p=!1)=>{let m=p?1:2,l=p?2:3,g=p?3:1,b=u?2:1,$=`
  fn setOutputAtIndex(flatIndex : u32, value : ${u?`vec4<${o}>`:o}) {
    result[flatIndex] = ${u?`vec4<${o}>`:o}(value);
  }`;n&&($+=`
    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${u?`vec4<${o}>`:o} {
      return bias[coords.${p?"w":"y"}${u?"/ 4":""}];
    }`);let v=u?4:1,x=W("W",t[1].dataType,t[1].dims.length,v),T=W("Dy",t[0].dataType,t[0].dims.length,v),C=[T,x];n&&C.push(W("bias",t[2].dataType,[r[g]].length,v));let S=Y("result",t[0].dataType,r.length,v),A=`{
        let batch: u32 = ${i?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];
        let r = ${i?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];
        let c = ${i?"global_id.y":"workgroup_id.y"} * ${b};
        let d1: u32 = ${i?"global_id.x":"workgroup_id.x"} * 4;

        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd: array<vec4<${o}>, ${b}>;
        for (var i = 0; i < ${b}; i++) {
          dotProd[i] = vec4<${o}>(0.0);
        }
        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {
          var dyR = (${o}(dyCorner.x) + ${o}(wR)) / ${o}(uniforms.strides.x);
          let wRPerm = uniforms.filter_dims[0] - 1 - wR;
          if (dyR < 0.0 || dyR >= ${o}(uniforms.Dy_shape[1]) ||
              fract(dyR) > 0.0 || wRPerm < 0) {
            continue;
          }
          let idyR: u32 = u32(dyR);

          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {
            let dyC = (${o}(dyCorner.y) + ${o}(wC)) / ${o}(uniforms.strides.y);
            let dyC2 = (${o}(dyCorner.y) + 1.0 + ${o}(wC)) / ${o}(uniforms.strides.y);
            let wCPerm = uniforms.filter_dims[1] - 1 - wC;
            if (wCPerm < 0) {
              continue;
            }
            var bDyCVal = true;
            var bDyCVal2 = true;
            if (dyC < 0.0 || dyC >= ${o}(uniforms.Dy_shape[2]) ||
                fract(dyC) > 0.0) {
              bDyCVal = false;
            }
            if (dyC2 < 0.0 || dyC2 >= ${o}(uniforms.Dy_shape[2]) ||
                fract(dyC2) > 0.0) {
              bDyCVal2 = false;
            }

            let idyC: u32 = u32(dyC);
            let idyC2: u32 = u32(dyC2);
            if (bDyCVal && bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${T.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${o}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;

                xValue =  ${T.get("batch","idyR","idyC2","d2")};

                dotProd[1] = dotProd[1] + vec4<${o}>(dot(xValue, wValue0),
                                                    dot(xValue, wValue1),
                                                    dot(xValue, wValue2),
                                                    dot(xValue, wValue3));
              }
            } else if (bDyCVal) {
              let d2Length = uniforms.Dy_shape[${g}];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${T.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${o}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;
              }
            } else if (bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${T.get("batch","idyR","idyC2","d2")};
                let tmpval = vec4<${o}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[1] = dotProd[1] + tmpval;
              }
            }
          }
        }

        for (var i: u32 = 0; i < ${b}; i = i + 1) {
          let value = dotProd[i] + ${n?"bias[c+i]":`vec4<${o}>(0.0)`};
          ${S.set("batch","r","c + i","d1","value")};
        }
      }`,O=`
          let outputIndices = ${S.offsetToIndices("global_idx")};
          let batch = ${S.indicesGet("outputIndices",0)};
          let d1 = ${S.indicesGet("outputIndices",g)};
          let r = ${S.indicesGet("outputIndices",m)};
          let c = ${S.indicesGet("outputIndices",l)};
          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
          let dyRCorner = dyCorner.x;
          let dyCCorner = dyCorner.y;
          let groupId = d1 / uniforms.output_channels_per_group;
          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
          // ? = to be determined. : = across all values in that axis.
          var dotProd = ${o}(0.0);
          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
            if (wR % uniforms.dilations.x != 0) {
              continue;
            }
            let dyR = (${o}(dyRCorner) + ${o}(wR)) / ${o}(uniforms.strides[0]);
            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
            if (dyR < 0.0 || dyR >= ${o}(uniforms.Dy_shape[${m}]) || fract(dyR) > 0.0 ||
                wRPerm < 0) {
              continue;
            }
            let idyR: u32 = u32(dyR);

            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
              if (wC % uniforms.dilations.y != 0) {
                continue;
              }
              let dyC = (${o}(dyCCorner) + ${o}(wC)) / ${o}(uniforms.strides.y);
              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
              if (dyC < 0.0 || dyC >= ${o}(uniforms.Dy_shape[${l}]) ||
                  fract(dyC) > 0.0 || wCPerm < 0) {
                continue;
              }
              let idyC: u32 = u32(dyC);
              var inputChannel = groupId * uniforms.input_channels_per_group;
              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {
                let xValue = ${p?T.get("batch","idyR","idyC","inputChannel"):T.get("batch","inputChannel","idyR","idyC")};
                let wValue = ${x.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};
                dotProd = dotProd + xValue * wValue;
                inputChannel = inputChannel + 1;
              }
            }
          }
          let value = dotProd + ${n?"bias[d1]":`${o}(0.0)`};
          ${S.setByOffset("global_idx","value")};
        `;return`
  ${e.registerUniforms(c).declareVariables(...C,S)}
  ${$}

    ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
  ${u?A:O}}`},li=(e,t,r)=>{let n=e.length>2,i=t.outputShape,u=N.size(i),o=[Math.ceil(u/64),1,1];Ue("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${o}`);let c=t.format==="NHWC",p=["rank","rank"],m=[t.strides[0],t.strides[1]],l=[t.kernelShape[c?1:2],t.kernelShape[c?2:3]],g=[t.dilations[0],t.dilations[1]],b=[l[0]+(t.dilations[0]<=1?0:(t.kernelShape[c?1:2]-1)*(t.dilations[0]-1)),l[1]+(t.dilations[1]<=1?0:(t.kernelShape[c?2:3]-1)*(t.dilations[1]-1))],$=[b[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),b[1]-1-Math.floor(t.pads[1]+t.pads[3])/2],v=!1,x=t.group,T=e[1].dims,C=T[0]/x,S=T[1],A=[{type:6,data:u},{type:12,data:m},{type:12,data:l},{type:12,data:g},{type:12,data:b},{type:6,data:$},{type:12,data:C},{type:12,data:S},...L(e[0].dims),...L(e[1].dims)];n&&(A.push(...L(e[2].dims)),p.push("rank")),A.push(...L(i));let O=o[1]===1&&o[2]===1,M=z=>{let V=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:m.length},{name:"filter_dims",type:"u32",length:l.length},{name:"dilations",type:"u32",length:l.length},{name:"effective_filter_dims",type:"u32",length:b.length},{name:"pads",type:"i32",length:$.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],K=Ge(e[0].dataType);return`${sp(z,e,i,n,O,v,K,V,c)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};`,inputDependencies:p},getRunData:()=>({dispatchGroup:{x:o[0],y:o[1],z:o[2]},outputs:[{dims:r?r(i):i,dataType:e[0].dataType}],programUniforms:A}),getShaderSource:M}}});var up,lp,dp,Mu,zu,cp,pp,fp,mp,Uu,Wu=j(()=>{"use strict";Bu();Du();Jt();Cr();up=(e,t,r,n,i,u)=>(e-1)*t+r+(n-1)*i+1-u,lp=(e,t,r,n,i)=>{let u=Math.floor(e/2);t==="SAME_UPPER"?(r[n]=u,r[i]=e-u):t==="SAME_LOWER"&&(r[n]=e-u,r[i]=u)},dp=(e,t,r,n,i,u,o,c,p,m)=>{let l=e.length-2,g=m.length===0;if(p.length===0)for(let v=0;v<l;++v)p.push(0);let b=e[0],$=t[c?3:1]*i;for(let v=0,x=e.length-l-(c?1:0);v<l;++v,++x){let T=e[x],C=g?T*o[v]:m[v],S=up(T,o[v],u[v],t[x],r[v],C);lp(S,n,u,v,v+l),g&&m.push(o[v]*(T-1)+p[v]+(t[x]-1)*r[v]+1-u[v]-u[v+l])}m.splice(0,0,b),m.splice(c?3:1,0,$)},Mu=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((g,b)=>g*b,1)===0){r.length=0;for(let g=2;g<t[1].dims.length;++g)r.push(t[1].dims[g])}let n=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(n?3:1,0,t[1].dims[1]);let i=e.pads.slice(),u=e.outputShape.slice(),o=e.outputPadding.slice(),c=t[0].dims,p=e.dilations.slice();if(p.reduce((g,b)=>g+b,0)===0){let g=t[0].dims.length-2;p=new Array(g).fill(1)}let m=e.strides.slice();if(m.reduce((g,b)=>g+b,0)===0){let g=t[0].dims.length-2;m=new Array(g).fill(1)}dp(c,r,p,e.autoPad,e.group,i,m,n,o,u);let l=Object.assign({},e);return Object.assign(l,{kernelShape:r,pads:i,outputPadding:o,outputShape:u,dilations:p,strides:m}),l},zu=e=>{let t=ta(e),r=e.format,n=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],i=e.dilations,u=e.group,o=e.kernelShape,c=e.pads,p=e.strides,m=e.wIsConst(),l=e.outputPadding,g=e.outputShape;return{autoPad:n,format:r,dilations:i,group:u,kernelShape:o,outputPadding:l,outputShape:g,pads:c,strides:p,wIsConst:m,...t,cacheKey:`${e.format};${t.activation};`}},cp=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],n=e[1].dims[0];if(r!==n)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let i=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==i))throw new Error("invalid bias");let u=e[0].dims.length-2;if(t.dilations.reduce((l,g)=>l+g,0)>0&&t.dilations.length!==u)throw new Error(`dilations should be ${u}D`);if(t.strides.reduce((l,g)=>l+g,0)>0&&t.strides.length!==u)throw new Error(`strides should be ${u}D`);if(t.pads.reduce((l,g)=>l+g,0)>0&&t.pads.length!==u*2)throw new Error(`pads should be ${u*2}D`);if(t.outputPadding.length!==u&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${u}D`);if(t.kernelShape.reduce((l,g)=>l+g,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},pp=[2,3,1,0],fp=(e,t,r)=>{let n=Mu(r,t),i=r.format==="NHWC",u=n.outputShape,o=u[i?3:1],c=t[0].dims[i?3:1];if(n.group!==1||o===1&&c===1){e.compute(li(t,n));return}let p=u[i?1:2],m=u[i?2:3],l=t[1].dims[2],g=t[1].dims[3],b=i?p*m:o,$=i?o:p*m,v=l*g*c,x=!0,T=e.kernelCustomData.wT??e.compute(Tt(t[1],pp),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=T);let C=[t[0],T],S=t.length===3;S&&(!i&&t[2].dims.length===1?C.push(t[2].reshape([t[2].dims[0],1,1])):C.push(t[2])),e.compute(Ru(C,n,u,b,$,v,S,x),{inputs:C})},mp=(e,t)=>{let r=t.format==="NHWC",n=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];n.length===3&&n.push(e.inputs[2]);let i=t.kernelShape;(i.length===0||i[0]===0)&&(i=[e.inputs[1].dims[2]]);let u=t.dilations;(u.length===0||u[0]===0)&&(u=[1]);let o=t.strides;(o.length===0||o[0]===0)&&(o=[1]);let c=t.pads;c.length===0&&(c=[0,0]),c=[0,c[0],0,c[1]],o=[1].concat(o),u=[1].concat(u),i=[1].concat(i);let p=Mu({...t,pads:c,strides:o,dilations:u,kernelShape:i},n);e.compute(li(n,p,m=>r?[m[0],m[2],m[3]]:[m[0],m[1],m[3]]))},Uu=(e,t)=>{cp(e.inputs,t),e.inputs[0].dims.length===3?mp(e,t):fp(e,e.inputs,t)}});var hp,Nu,Vu,Hu=j(()=>{"use strict";ge();Ee();tt();Ae();hp=(e,t,r,n)=>{let i=N.size(t),u=t.length,o=W("input",e,u),c=Y("output",e,u),p=r.dataType===6?r.getInt32Array()[0]:Number(r.getBigInt64Array()[0]),m=N.normalizeAxis(p,u),l=g=>{let b=` i32(${o.indicesGet("inputIndices","uniforms.axis")}) `,$=pe("uniforms.input_shape","uniforms.axis",u),v=n.reverse?b+(n.exclusive?" + 1":""):"0",x=n.reverse?$:b+(n.exclusive?"":" + 1");return`
                ${g.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(o,c)}
                ${g.mainStart()}
                  ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${c.offsetToIndices("global_idx")};
                  var sum = ${c.type.value}(0);
                  let first : i32 = ${v};
                  let last : i32 = ${x};
                  for (var i : i32 = first; i < last; i++) {
                    ${o.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${o.getByIndices("inputIndices")};
                  }
                  ${c.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:n.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},{type:6,data:m},...L(t),...L(t)]}),getShaderSource:l}},Nu=(e,t)=>{let r=e.inputs[0].dims,n=e.inputs[0].dataType,i=e.inputs[1];e.compute(hp(n,r,i,t),{inputs:[0]})},Vu=e=>{let t=e.exclusive===1,r=e.reverse===1;return Te({exclusive:t,reverse:r})}});var di,oa,Lu,gp,yp,ci,pi,Gu,bp,Fu,qu,ju=j(()=>{"use strict";ge();Ee();tt();Ae();di="[a-zA-Z]|\\.\\.\\.",oa="("+di+")+",Lu="^"+oa+"$",gp="("+oa+",)*"+oa,yp="^"+gp+"$",ci=class{constructor(t=-1){this.symbolToIndices=new Map,this.inputIndex=t}addSymbol(t,r){let n=this.symbolToIndices.get(t);n===void 0?n=[r]:n.push(r),this.symbolToIndices.set(t,n)}},pi=class{constructor(t,r){this.equation=r;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[n,i]=r.includes("->")?r.split("->",2):[r,""];if(!n.match(RegExp(yp)))throw new Error("Invalid LHS term");if(n.split(",").forEach((c,p)=>{let m=t[p].dims.slice();if(!c.match(RegExp(Lu)))throw new Error("Invalid LHS term");let l=this.processTerm(c,!0,m,p);this.lhs.push(l)}),i==="")i+=[...this.symbolToInfo.entries()].filter(([c,p])=>p.count===1||c==="...").map(([c])=>c).join("");else if(!i.match(RegExp(oa)))throw new Error("Invalid RHS");i.match(RegExp(di,"g"))?.forEach(c=>{if(c==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let p=this.symbolToInfo.get(c);if(p===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(p.dimValue)}}),this.rhs=this.processTerm(i,!1,this.outputDims)}addSymbol(t,r,n){let i=this.symbolToInfo.get(t);if(i!==void 0){if(i.dimValue!==r&&i.count!==1)throw new Error("Dimension mismatch");i.count++,i.inputIndices.push(n)}else i={count:1,dimValue:r,inputIndices:[n]};this.symbolToInfo.set(t,i)}processTerm(t,r,n,i=-1){let u=n.length,o=!1,c=[],p=0;if(!t.match(RegExp(Lu))&&!r&&t!=="")throw new Error("Invalid LHS term");let m=t.match(RegExp(di,"g")),l=new ci(i);return m?.forEach((g,b)=>{if(g==="..."){if(o)throw new Error("Only one ellipsis is allowed per input term");o=!0;let $=u-m.length+1;if($<0)throw new Error("Ellipsis out of bounds");if(c=n.slice(p,p+$),this.hasEllipsis){if(this.ellipsisDims.length!==c.length||this.ellipsisDims.toString()!==c.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=c;else throw new Error("Ellipsis must be specified in the LHS");for(let v=0;v<c.length;v++){let x=String.fromCharCode("0".charCodeAt(0)+v);l.addSymbol(x,b+v),this.addSymbol(x,n[p++],i)}}else l.addSymbol(g,b+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(g,n[p++],i)}),l}},Gu=e=>e+"_max",bp=(e,t,r,n)=>{let u=e.map(l=>l.length).map((l,g)=>W(`input${g}`,t,l)),o=N.size(n),c=Y("output",t,n.length),p=[...r.symbolToInfo.keys()].filter(l=>!r.rhs.symbolToIndices.has(l)),m=l=>{let g=[],b="var prod = 1.0;",$="var sum = 0.0;",v="sum += prod;",x=[],T=[],C=[],S=[],A=r.symbolToInfo.size===r.rhs.symbolToIndices.size;r.symbolToInfo.forEach((M,z)=>{if(r.rhs.symbolToIndices.has(z)){let V=r.rhs.symbolToIndices.get(z)?.[0];V!==void 0&&r.lhs.forEach((K,ue)=>{if(M.inputIndices.includes(ue)){let P=K.symbolToIndices.get(z);if(P===void 0)throw new Error("Invalid symbol error");P.forEach(te=>{g.push(`${u[ue].indicesSet(`input${ue}Indices`,te,c.indicesGet("outputIndices",V))}`)})}})}else r.lhs.forEach((V,K)=>{if(M.inputIndices.includes(K)){let ue=V.symbolToIndices.get(z);if(ue===void 0)throw new Error("Invalid symbol error");ue.forEach(P=>{x.push(`${u[K].indicesSet(`input${K}Indices`,P,`${z}`)}`)}),S.push(`prod *= ${u[K].getByIndices(`input${K}Indices`)};`)}}),T.push(`for(var ${z}: u32 = 0; ${z} < uniforms.${Gu(z)}; ${z}++) {`),C.push("}")});let O=A?[...g,`let sum = ${u.map((M,z)=>M.getByIndices(`input${z}Indices`)).join(" * ")};`]:[...g,$,...T,...x,b,...S,v,...C];return`
            ${l.registerUniforms(p.map(M=>({name:`${Gu(M)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...u,c)}

            ${l.mainStart()}
            ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${c.offsetToIndices("global_idx")};
            ${u.map((M,z)=>`var input${z}Indices: ${u[z].type.indices};`).join(`
`)}
            ${O.join(`
`)};
            ${c.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:r.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let l=p.filter(b=>r.symbolToInfo.has(b)).map(b=>({type:12,data:r.symbolToInfo.get(b)?.dimValue||0}));l.push({type:12,data:o});let g=e.map((b,$)=>[...L(b)]).reduce((b,$)=>b.concat($),l);return g.push(...L(n)),{outputs:[{dims:n,dataType:t}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:g}},getShaderSource:m}},Fu=(e,t)=>{let r=new pi(e.inputs,t.equation),n=r.outputDims,i=e.inputs.map((u,o)=>u.dims);e.compute(bp(i,e.inputs[0].dataType,r,n))},qu=e=>{let t=e.equation.replace(/\s+/g,"");return Te({equation:t})}});var vp,Ku,wp,$p,Yu,Zu=j(()=>{"use strict";ge();Ee();Ae();vp=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),n=r.length<t.length?0:r.length-t.length,i=t.length<r.length?0:t.length-r.length;for(;n<r.length&&i<t.length;++n,++i)if(r[n]!==t[i]&&r[n]!==1&&t[i]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Ku=(e,t)=>{let r=e.length-t.length,n=[];for(let i=0;i<r;++i)n.push(e[i]);for(let i=0;i<t.length;++i)n.push(t[i]===1?e[i+r]:t[i]);return n},wp=(e,t)=>e.length>t.length?Ku(e,t):Ku(t,e),$p=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),n=wp(t,r),i=e[0].dataType,u=i===9?4:1,o=Math.ceil(N.size(n)/u),c=m=>{let l=W("input",i,t.length,u),g=Y("output",i,n.length,u),b;if(i===9){let $=(v,x,T="")=>`
          let outputIndices${x} = ${g.offsetToIndices(`outputOffset + ${x}u`)};
          let offset${x} = ${l.broadcastedIndicesToOffset(`outputIndices${x}`,g)};
          let index${x} = offset${x} / 4u;
          let component${x} = offset${x} % 4u;
          ${v}[${x}] = ${T}(${l.getByOffset(`index${x}`)}[component${x}]);
        `;b=`
        let outputOffset = global_idx * ${u};
        var data = vec4<u32>(0);
        ${$("data",0,"u32")}
        ${$("data",1,"u32")}
        ${$("data",2,"u32")}
        ${$("data",3,"u32")}
        ${g.setByOffset("global_idx","data")}
      }`}else b=`
        let outputIndices = ${g.offsetToIndices("global_idx")};
        let inputOffset = ${l.broadcastedIndicesToOffset("outputIndices",g)};
        ${g.setByOffset("global_idx",l.getByOffset("inputOffset"))}
      }`;return`
    ${m.registerUniform("vec_size","u32").declareVariables(l,g)}
    ${m.mainStart()}
    ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${b}`},p=[{type:12,data:o},...L(t),...L(n)];return{name:"Expand",shaderCache:{hint:`${n.length}`,inputDependencies:["rank"]},getShaderSource:c,getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:p})}},Yu=e=>{vp(e.inputs),e.compute($p(e.inputs),{inputs:[0]})}});var _p,Sp,Xu,Ju,Qu=j(()=>{"use strict";ge();Ee();tt();Ae();_p=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},Sp=(e,t)=>{let r=e[0].dims,n=e[1].dims,i=r.length,u=N.normalizeAxis(t.axis,i),o=r.slice(0);o.splice(u,1,...n);let c=r[u],p=e[0].dataType===9?4:1,m=Math.ceil(N.size(o)/p),l=[{type:12,data:m},{type:6,data:c},{type:12,data:u},...L(e[0].dims),...L(e[1].dims),...L(o)],g=b=>{let $=W("data",e[0].dataType,e[0].dims.length,p),v=W("inputIndices",e[1].dataType,e[1].dims.length),x=Y("output",e[0].dataType,o.length,p),T=S=>{let A=n.length,O=`var indicesIndices${S}  = ${v.type.indices}(0);`;for(let M=0;M<A;M++)O+=`${A>1?`indicesIndices${S}[${M}]`:`indicesIndices${S}`} = ${o.length>1?`outputIndices${S}[uniforms.axis + ${M}]`:`outputIndices${S}`};`;O+=`
          var idx${S} = ${v.getByIndices(`indicesIndices${S}`)};
          if (idx${S} < 0) {
            idx${S} = idx${S} + uniforms.axisDimLimit;
          }
          var dataIndices${S} = ${$.type.indices}(0);
        `;for(let M=0,z=0;M<i;M++)M===u?(O+=`${i>1?`dataIndices${S}[${M}]`:`dataIndices${S}`} = u32(idx${S});`,z+=A):(O+=`${i>1?`dataIndices${S}[${M}]`:`dataIndices${S}`} = ${o.length>1?`outputIndices${S}[${z}]`:`outputIndices${S}`};`,z++);return O},C;if(e[0].dataType===9){let S=(A,O,M="")=>`
          let outputIndices${O} = ${x.offsetToIndices(`outputOffset + ${O}u`)};
          ${T(O)};
          let offset${O} = ${$.indicesToOffset(`dataIndices${O}`)};
          let index${O} = offset${O} / 4u;
          let component${O} = offset${O} % 4u;
          ${A}[${O}] = ${M}(${$.getByOffset(`index${O}`)}[component${O}]);
        `;C=`
        let outputOffset = global_idx * ${p};
        var value = vec4<u32>(0);
        ${S("value",0,"u32")}
        ${S("value",1,"u32")}
        ${S("value",2,"u32")}
        ${S("value",3,"u32")}
        ${x.setByOffset("global_idx","value")}
      `}else C=`
      let outputIndices = ${x.offsetToIndices("global_idx")};
      ${T("")};
      let value = ${$.getByIndices("dataIndices")};
      ${x.setByOffset("global_idx","value")};
      `;return`
      ${b.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables($,v,x)}
      ${b.mainStart()}
        ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${C}
      }`};return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:l}),getShaderSource:g}},Xu=e=>Te({axis:e.axis}),Ju=(e,t)=>{let r=e.inputs;_p(r),e.compute(Sp(e.inputs,t))}});var xp,Cp,el,tl,rl=j(()=>{"use strict";ge();Ee();tt();Ae();xp=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},Cp=(e,t)=>{let r=e[0].dims,n=e[0].dataType,i=r.length,u=e[1].dims,o=e[1].dataType,c=N.normalizeAxis(t.axis,i),p=r[c],m=u.slice(0),l=N.size(m),g=W("input",n,i),b=W("indicesInput",o,u.length),$=Y("output",n,m.length),v=[{type:12,data:l},{type:6,data:p},{type:12,data:c}];return v.push(...L(r)),v.push(...L(u)),v.push(...L(m)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:m,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:v}),getShaderSource:C=>`
      ${C.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(g,b,$)}
      ${C.mainStart()}
      ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${$.offsetToIndices("global_idx")};

      var idx = ${b.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${g.type.indices}(outputIndices);
      ${g.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${g.getByIndices("inputIndices")};

      ${$.setByOffset("global_idx","value")};
  }`}},el=e=>Te({axis:e.axis}),tl=(e,t)=>{let r=e.inputs;xp(r),e.compute(Cp(e.inputs,t))}});var Ip,Ap,nl,al,il=j(()=>{"use strict";ge();Ee();Ae();Ip=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},Ap=(e,t)=>{let r=e[0].dims.slice(),n=e[1].dims.slice(),[i,u,o]=qn.getShapeOfGemmResult(r,t.transA,n,t.transB,e.length===3?e[2].dims:void 0),c=[i,u];if(!c)throw new Error("Can't use gemm on the given tensors");let p=N.size(c),m=[{type:12,data:p},{type:12,data:i},{type:12,data:u},{type:12,data:o},{type:1,data:t.alpha},{type:1,data:t.beta}],l=["type","type"];e.length===3&&(m.push(...L(e[2].dims)),l.push("rank")),m.push(...L(c));let g=b=>{let $="";t.transA&&t.transB?$="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":t.transA&&!t.transB?$="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!t.transA&&t.transB?$="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!t.transA&&!t.transB&&($="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let v=t.alpha===1?"":"value *= uniforms.alpha;",x=W("a",e[0].dataType,e[0].dims),T=W("b",e[1].dataType,e[1].dims),C=x.type.value,S=null,A=[x,T];e.length===3&&(S=W("c",e[2].dataType,e[2].dims.length),A.push(S));let O=Y("output",e[0].dataType,c.length);A.push(O);let M=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${b.registerUniforms(M).declareVariables(...A)}

  ${b.mainStart()}
    ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${C}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${$}
    }

    ${v}
    ${(()=>S!=null?`let cOffset = ${S.broadcastedIndicesToOffset("vec2(m, n)",O)}; value += ${C}(uniforms.beta) * ${S.getByOffset("cOffset")};`:"")()}
    output[global_idx] = value;
  }`};return{name:"Gemm",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:c,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:m}),getShaderSource:g}},nl=e=>{let t=e.transA,r=e.transB,n=e.alpha,i=e.beta;return{transA:t,transB:r,alpha:n,beta:i,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},al=(e,t)=>{Ip(e.inputs),e.compute(Ap(e.inputs,t))}});var Tp,Ep,Op,ol,sl=j(()=>{"use strict";ge();Ee();Ae();Tp=(e,t)=>{let r=e[0].dims,n=r,i=2,u=N.sizeToDimension(r,i),o=N.sizeFromDimension(r,i),c=Fe(o),p=o/c,m=[r[0],r[1],p],l=["rank","type","type"],g=[{type:12,data:o},{type:12,data:p}];g.push(...L(m),...L(m));let b=$=>{let v=W("x",e[0].dataType,m.length,c),x=W("scale",e[1].dataType,e[1].dims),T=W("bias",e[2].dataType,e[2].dims),C=Y("output",e[0].dataType,m.length,c),S=[v,x,T,C],A=v.type.value,O=c===1?"f32":`vec${c}<f32>`,M=64,z=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`
  var<workgroup> meanShared : f32;
  var<workgroup> squaredNormShared : f32;
  var<workgroup> workgroupShared : array<${O}, ${M}>;
  const workgroupSize = ${M}u;
  ${$.registerUniforms(z).declareVariables(...S)}
  ${$.mainStart(M)}
    let norm = global_idx / workgroupSize;
    let batch = norm / uniforms.x_shape[1];
    let channel = norm % uniforms.x_shape[1];
    let localIndex = local_id.x;

    // initialize workgroup memory
    var initial = ${O}(0);
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      initial = initial + ${O}(${v.get("batch","channel","h")});
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the mean of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      meanShared = ${ht("workgroupShared[0]",c)} / f32(uniforms.normSize);
    }
    workgroupBarrier();

    // reinitialize workgroup memory.
    initial = ${O}(0);
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      let deviation =  ${O}(${v.get("batch","channel","h")}) - ${O}(meanShared);
      initial = initial + deviation * deviation;
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the sum of square of deviation of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      squaredNormShared = ${ht("workgroupShared[0]",c)};
    }
    workgroupBarrier();

    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${t.epsilon}));
    let channelScale = invStdDev * f32(${x.getByOffset("channel")});
    let channelShift = f32(${T.getByOffset("channel")}) - meanShared * channelScale;
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      let value = ${v.get("batch","channel","h")} * ${A}(${O}(channelScale)) + ${A}(${O}(channelShift));
      ${C.set("batch","channel","h","value")};
    }
  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${t.epsilon};${c}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:u},programUniforms:g}),getShaderSource:b}},Ep=(e,t,r,n,i,u,o,c)=>{let p=Fe(o),m=64,l=p===1?"vec2f":`mat2x${p}f`,g=p===1?"f32":`vec${p}f`,b=(z,V)=>`${l}(${z}, ${V})`,$=i*o/p,v=Math.ceil(u/m),x=["type"],T=[{type:12,data:v},{type:12,data:u},{type:12,data:Math.floor(o/p)},{type:12,data:Math.floor(u*o/p)}],C=z=>{let V=W("input",t.dataType,t.dims,p);return`
  ${z.declareVariables(V)}
  @group(0) @binding(1) var<storage, read_write> output : array<${l}>;
  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};
  @group(0) @binding(2) var<uniform> uniforms: Uniforms;

  ${z.mainStart(m)}
    let currentImageNumber = global_idx / ${m} / uniforms.C;
    let currentChannelNumber = (global_idx / ${m}) % uniforms.C;
    let wgId = global_idx % ${m};
    let wgOffset = wgId * uniforms.wg_size;
    if (wgOffset >= uniforms.H) {
        return;
    }
    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);

    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;
    var sum = ${rt("f32",p)};
    var squaredSum = ${rt("f32",p)};
    for (var i: u32 = wgOffset; i < wgMax; i++) {
        let value = ${g}(input[offset + i * uniforms.C]);
        sum += value;
        squaredSum += value * value;
    }
    output[global_idx] = ${b("sum","squaredSum")};
  }`},S=e.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${p}`,inputDependencies:x},getRunData:()=>({outputs:[{dims:[i,o,m,2],dataType:1}],dispatchGroup:{x:i*o/p},programUniforms:T}),getShaderSource:C},{inputs:[t],outputs:[-1]})[0],A=[{type:12,data:$},{type:12,data:u},{type:12,data:Math.floor(o/p)},{type:12,data:Math.floor(m*o/p)}],O=["type","type","type"],M=z=>{let V=W("scale",r.dataType,r.dims,p),K=W("bias",n.dataType,n.dims,p);return`
  @group(0) @binding(0) var<storage, read> input : array<${l}>;
  @group(0) @binding(1) var<storage, read> scale : array<${V.type.storage}>;
  @group(0) @binding(2) var<storage, read> bias : array<${K.type.storage}>;
  @group(0) @binding(3) var<storage, read_write> output : array<${l}>;
  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};
  @group(0) @binding(4) var<uniform> uniforms: Uniforms;

  ${z.mainStart()}
    ${z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}
    let currentImageNumber = global_idx / uniforms.C;
    let currentChannelNumber = global_idx % uniforms.C;

    let offset = currentImageNumber * uniforms.image_size;
    var sum = ${rt("f32",p)};
    var squaredSum = ${rt("f32",p)};
    for (var i: u32 = 0; i < ${m}; i++) {
        let value = input[offset + i + currentChannelNumber * ${m}];
        sum += value[0];
        squaredSum += value[1];
    }
    sum = sum / f32(uniforms.H);
    squaredSum = squaredSum / f32(uniforms.H);
    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${c}));
    let channelScale = invStdDev * ${g}(scale[currentChannelNumber]);
    let channelShift = ${g}(bias[currentChannelNumber]) - sum * channelScale;

    output[global_idx] = ${b("channelScale","channelShift")};
  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${p};${c}`,inputDependencies:O},getRunData:()=>({outputs:[{dims:[i,o,2],dataType:1}],dispatchGroup:{x:Math.ceil($/64)},programUniforms:A}),getShaderSource:M},{inputs:[S,r,n],outputs:[-1]})[0]},Op=(e,t,r)=>{let n=t[0].dims,i=n,u=n[0],o=n[n.length-1],c=N.sizeFromDimension(n,1)/o,p=Fe(o),m=N.size(i)/p,l=[{type:12,data:c},{type:12,data:Math.floor(o/p)}],g=["type","type"],b=Ep(e,t[0],t[1],t[2],u,c,o,r.epsilon),$=v=>{let x=Ge(t[0].dataType),T=p===1?"vec2f":`mat2x${p}f`,C=p===1?x:`vec${p}<${x}>`,S=W("input",t[0].dataType,t[0].dims,p),A=Y("output",t[0].dataType,i,p);return`
  @group(0) @binding(0) var<storage, read> input : array<${S.type.storage}>;
  @group(0) @binding(1) var<storage, read> scaleInput : array<${T}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${A.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${v.mainStart()}
    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);
    let currentChannelNumber = global_idx % uniforms.C;

    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;
    let scale = scaleInput[scaleOffset];
    output[global_idx] = fma(input[global_idx], ${C}(scale[0]), ${C}(scale[1]));
  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${p}`,inputDependencies:g},getRunData:()=>({outputs:[{dims:i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:l}),getShaderSource:$},{inputs:[t[0],b]})},ol=(e,t)=>{t.format==="NHWC"?Op(e,e.inputs,t):e.compute(Tp(e.inputs,t))}});var kp,Pp,ul,ll=j(()=>{"use strict";ge();Ee();Ae();kp=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Pp=(e,t,r)=>{let n=e[0].dims,i=e[1],u=e[2],o=n,c=N.normalizeAxis(t.axis,n.length),p=N.sizeToDimension(n,c),m=N.sizeFromDimension(n,c),l=N.size(i.dims),g=u?N.size(u.dims):0;if(l!==m||u&&g!==m)throw new Error(`Size of X.shape()[axis:] == ${m}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${l} and bias size of ${g}`);let b=[];for(let O=0;O<n.length;++O)O<c?b.push(n[O]):b.push(1);let $=Fe(m),v=["type","type"],x=[{type:12,data:p},{type:1,data:m},{type:12,data:Math.floor(m/$)},{type:1,data:t.epsilon}];u&&v.push("type");let T=r>1,C=r>2,S=O=>{let M=Ge(e[0].dataType),z=[W("x",e[0].dataType,e[0].dims,$),W("scale",i.dataType,i.dims,$)];u&&z.push(W("bias",u.dataType,u.dims,$)),z.push(Y("output",e[0].dataType,o,$)),T&&z.push(Y("mean_data_output",1,b)),C&&z.push(Y("inv_std_output",1,b));let V=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${O.registerUniforms(V).declareVariables(...z)}
  ${O.mainStart()}
    ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var meanVector = ${rt("f32",$)};
    var meanSquareVector = ${rt("f32",$)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${At(M,$,"x[h + offset]")};
      meanVector += value;
      meanSquareVector += value * value;
    }
    let mean = ${ht("meanVector",$)} / uniforms.norm_size;
    let invStdDev =
        inverseSqrt(${ht("meanSquareVector",$)} / uniforms.norm_size - mean * mean + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${At(M,$,"x[j + offset]")};
      let f32scale = ${At(M,$,"scale[j]")};
      output[j + offset] = ${z[0].type.value}((f32input - mean) * invStdDev * f32scale
        ${u?`+ ${At(M,$,"bias[j]")}`:""}
      );
    }

    ${T?"mean_data_output[global_idx] = mean":""};
    ${C?"inv_std_output[global_idx] = invStdDev":""};
  }`},A=[{dims:o,dataType:e[0].dataType}];return T&&A.push({dims:b,dataType:1}),C&&A.push({dims:b,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${$};${r}`,inputDependencies:v},getRunData:()=>({outputs:A,dispatchGroup:{x:Math.ceil(p/64)},programUniforms:x}),getShaderSource:S}},ul=(e,t)=>{kp(e.inputs),e.compute(Pp(e.inputs,t,e.outputCount))}});var Rp,cl,dl,Bp,fi,pl,fl=j(()=>{"use strict";ge();Ee();tt();Gn();Qa();Ae();Cr();Rp=(e,t)=>{let r=e[0],n=e[1],i=e[2],u=e[3],o=e[4],c=e[5],p=e[6],m=e[7];if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let l=!1,g=r.dims[0],b=r.dims[1],$=r.dims.length===3?l?r.dims[2]/3:r.dims[2]:t.numHeads*r.dims[4],v=b,x=0,T=0,C=Math.floor($/t.numHeads);if(p&&m){if(p.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(m.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');x=p.dims[2],T=p.dims[2]}else if(p||m)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let S;if(n){if(r.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(n.dims.length<3||n.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(r.dims[0]!==n.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(n.dims.length===3){if(n.dims[2]!==r.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');S=2,v=n.dims[1]}else if(n.dims.length===5){if(n.dims[2]!==t.numHeads||n.dims[3]!==2||n.dims[4]!==C)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(i)throw new Error('Expect "value" be none when "key" has packed kv format.');S=5,v=n.dims[1]}else{if(n.dims[1]!==t.numHeads||n.dims[3]!==C)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');S=0,v=n.dims[2]}}else{if(r.dims.length!==3&&r.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(r.dims.length===5&&(r.dims[2]!==t.numHeads||r.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');S=3}if(u){if(u.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(i&&r.dims.length===5&&r.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let A=0;if(o){A=8;let K=o.dims;throw K.length===1?K[0]===g?A=1:K[0]===3*g+2&&(A=3):K.length===2&&K[0]===g&&K[1]===v&&(A=5),A===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)'):new Error("Mask not supported")}let O=!1,M=$;if(i){if(i.dims.length!==3&&i.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(r.dims[0]!==i.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(i.dims.length===3){if(v!==i.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');M=i.dims[2]}else{if(v!==i.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');M=i.dims[1]*i.dims[3],O=!0}}let z=x+v,V=!1;if(o)throw new Error("Key padding mask is not supported");if(c)throw new Error("extraAddQk is not supported");if(p)throw new Error("pastKey is not supported");if(m)throw new Error("pastValue is not supported");return{batchSize:g,sequenceLength:b,pastSequenceLength:x,kvSequenceLength:v,totalSequenceLength:z,maxSequenceLength:T,inputHiddenSize:0,hiddenSize:$,vHiddenSize:M,headSize:C,vHeadSize:Math.floor(M/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:A,scale:t.scale,broadcastResPosBias:V,passPastInKv:O,qkvFormat:S}},cl=e=>Te({...e}),dl=Te({perm:[0,2,1,3]}),Bp=(e,t,r,n,i,u,o)=>{let c=[n,i,u],p=N.size(c),m=[{type:12,data:p},{type:12,data:o},{type:12,data:u}],l=g=>{let b=Y("qkv_with_bias",t.dataType,c),$=W("qkv",t.dataType,c),v=W("bias",r.dataType,c),x=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${g.registerUniforms(x).declareVariables($,v,b)}
  ${g.mainStart()}
    ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:c,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:m}),getShaderSource:l},{inputs:[t,r],outputs:[-1]})[0]},fi=(e,t,r,n,i,u,o,c)=>{let p=u;if(o){if(n===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return p=Bp(e,u,o,t,n,r*i,c),p=p.reshape([t,n,r,i]),e.compute(Tt(p,dl.perm),{inputs:[p],outputs:[-1]})[0]}else return u.dims.length===3&&(p=u.reshape([t,n,r,i])),e.compute(Tt(p,dl.perm),{inputs:[p],outputs:[-1]})[0]},pl=(e,t)=>{let r=Rp(e.inputs,t);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(e.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let n=e.inputs[1]&&e.inputs[2]&&e.inputs[1].dims.length===4&&e.inputs[2].dims.length===4,i=fi(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,e.inputs[0],e.inputs[3],0);if(n)return Jn(e,i,e.inputs[1],e.inputs[2],e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t);let u=fi(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.headSize,e.inputs[1],e.inputs[3],r.hiddenSize),o=fi(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.vHeadSize,e.inputs[2],e.inputs[3],2*r.hiddenSize);Jn(e,i,u,o,e.inputs[4],void 0,e.inputs[6],e.inputs[7],e.inputs[5],r,t)}});var Dp,Mp,zp,Up,Wp,Np,Vp,Hp,ml,hl=j(()=>{"use strict";ge();Ee();Ae();Dp=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},Mp=(e,t,r)=>{let n="";for(let i=t-1;i>=0;--i)n+=`
            k = i32(${e.indicesGet("indices",i)}) - ${pe("uniforms.pads",i,r)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${pe("uniforms.x_shape",i,t)})) {
              break;
            }
            offset += k * i32(${pe("uniforms.x_strides",i,t)});
        `;return`
          value = ${e.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${n}
            value = x[offset];
          }
      `},zp=(e,t,r)=>{let n="";for(let i=t-1;i>=0;--i)n+=`
                k = i32(${e.indicesGet("indices",i)}) - ${pe("uniforms.pads",i,r)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${pe("uniforms.x_shape",i,t)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${pe("uniforms.x_shape",i,t)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${pe("uniforms.x_strides",i,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${n}
              value = x[offset];
          `},Up=(e,t,r)=>{let n="";for(let i=t-1;i>=0;--i)n+=`
                k = i32(${e.indicesGet("indices",i)}) - ${pe("uniforms.pads",i,r)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${pe("uniforms.x_shape",i,t)})) {
                  k = i32(${pe("uniforms.x_shape",i,t)}) - 1;
                }
                offset += k * i32(${pe("uniforms.x_strides",i,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${n}
              value = x[offset];
          `},Wp=(e,t,r)=>{let n="";for(let i=t-1;i>=0;--i)n+=`
                k = i32(${e.indicesGet("indices",i)}) - ${pe("uniforms.pads",i,r)};
                if (k < 0)  {
                  k += i32(${pe("uniforms.x_shape",i,t)}]);
                }
                if (k >= i32(${pe("uniforms.x_shape",i,t)})) {
                  k -= i32(${pe("uniforms.x_shape",i,t)});
                }
                offset += k * i32(${pe("uniforms.x_strides",i,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${n}
              value = x[offset];
          `},Np=(e,t,r)=>{switch(r.mode){case 0:return Mp(e,t,r.pads.length);case 1:return zp(e,t,r.pads.length);case 2:return Up(e,t,r.pads.length);case 3:return Wp(e,t,r.pads.length);default:throw new Error("Invalid mode")}},Vp=(e,t)=>{let r=N.padShape(e[0].dims.slice(),t.pads),n=e[0].dims,i=N.size(r),u=[{type:12,data:i},{type:12,data:t.pads}];t.mode===0&&u.push({type:e[0].dataType,data:t.value}),u.push(...L(e[0].dims),...L(r));let o=["rank"],c=p=>{let m=Y("output",e[0].dataType,r.length),l=W("x",e[0].dataType,n.length),g=l.type.value,b=Np(m,n.length,t),$=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return t.mode===0&&$.push({name:"constant_value",type:g}),`
            ${p.registerUniforms($).declareVariables(l,m)}
            ${p.mainStart()}
            ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${m.offsetToIndices("global_idx")};

            var value = ${g}(0);
            ${b}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${t.mode}`,inputDependencies:o},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(N.size(r)/64)},programUniforms:u}),getShaderSource:c}},Hp=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),n=e.length>=3&&e[2].data?e[2].getFloat32Array()[0]:0,i=e[0].dims.length,u=new Int32Array(2*i).fill(0);if(e.length>=4){let c=e[3].getBigInt64Array();for(let p=0;p<c.length;p++)u[Number(c[p])]=Number(r[p]),u[Number(c[p])+i]=Number(r[p+c.length])}else r.forEach((c,p)=>u[Number(p)]=Number(c));let o=[];return u.forEach(c=>o.push(c)),{mode:t.mode,value:n,pads:o}}else return t},ml=(e,t)=>{Dp(e.inputs);let r=Hp(e.inputs,t);e.compute(Vp(e.inputs,r),{inputs:[0]})}});var sa,gl,yl,bl,vl,Lp,Gp,wl,$l,_l,Sl,xl,Cl,Il,Al,Tl,El,Ol,kl,Pl=j(()=>{"use strict";wt();ge();Ee();Ae();sa=e=>{if(Pe.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},gl=(e,t,r)=>{let n=t.format==="NHWC",i=e.dims.slice();n&&i.splice(1,0,i.pop());let u=Object.hasOwnProperty.call(t,"dilations"),o=t.kernelShape.slice(),c=t.strides.slice(),p=u?t.dilations.slice():[],m=t.pads.slice();dr.adjustPoolAttributes(r,i,o,c,p,m);let l=dr.computePoolOutputShape(r,i,c,p,o,m,t.autoPad),g=Object.assign({},t);u?Object.assign(g,{kernelShape:o,strides:c,pads:m,dilations:p,cacheKey:t.cacheKey}):Object.assign(g,{kernelShape:o,strides:c,pads:m,cacheKey:t.cacheKey});let b=l.slice();return b.push(b.splice(1,1)[0]),[g,n?b:l]},yl=(e,t)=>{let r=t.format==="NHWC",n=N.size(e),i=N.size(t.kernelShape),u=[{type:12,data:n},{type:12,data:i}],o=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let c=t.kernelShape[t.kernelShape.length-1],p=t.strides[t.strides.length-1],m=t.pads[t.pads.length/2-1],l=t.pads[t.pads.length-1],g=!!(m+l);u.push({type:12,data:c},{type:12,data:p},{type:12,data:m},{type:12,data:l}),o.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let b=!1;if(t.kernelShape.length===2){let $=t.kernelShape[t.kernelShape.length-2],v=t.strides[t.strides.length-2],x=t.pads[t.pads.length/2-2],T=t.pads[t.pads.length-2];b=!!(x+T),u.push({type:12,data:$},{type:12,data:v},{type:12,data:x},{type:12,data:T}),o.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[u,o,!0,g,b]}else{if(r)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let c=N.computeStrides(t.kernelShape);u.push({type:12,data:c},{type:12,data:t.pads},{type:12,data:t.strides}),o.push({name:"kernelStrides",type:"u32",length:c.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length});let p=t.pads.reduce((m,l)=>m+l);return[u,o,!!p,!1,!1]}},bl=(e,t,r,n,i,u,o,c,p,m,l,g)=>{let b=i.format==="NHWC",$=t.type.value,v=Y("output",t.type.tensor,n);if(i.kernelShape.length<=2){let x="",T="",C="",S=r-(b?2:1);if(l?x=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${S}] = indices[${S}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${S}] < 0 || xIndices[${S}]
                      >= uniforms.x_shape[${S}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${t.indicesToOffset("xIndices")}];
                  ${u}
                }`:x=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${S}] = indices[${S}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${t.indicesToOffset("xIndices")}];
                  ${u}
                }`,i.kernelShape.length===2){let O=r-(b?3:2);g?T=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${O}] = indices[${O}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${O}] < 0 || xIndices[${O}] >= uniforms.x_shape[${O}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:T=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${O}] = indices[${O}] * uniforms.sh - uniforms.phStart + j;
                `,C=`
              }
            `}return`
            ${e.registerUniforms(p).declareVariables(t,v)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${v.offsetToIndices("global_idx")};
              var xIndices = ${v.offsetToIndices("global_idx")};

              var value = ${$}(${c});
              var pad = 0;
              ${T}
              ${x}
              ${C}
              ${o}

              output[global_idx] = value;
            }`}else{if(b)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let x=i.kernelShape.length,T=i.pads.length,C="";return m?C=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${t.indicesToOffset("xIndices")}];
                ${u}
              }`:C=`
              }
              let x_val = x[${t.indicesToOffset("xIndices")}];
              ${u}
            `,`
            ${e.registerUniforms(p).declareVariables(t,v)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${v.offsetToIndices("global_idx")};
              var xIndices = ${v.offsetToIndices("global_idx")};

              var offsets: array<u32, ${x}>;

              var value = ${$}(${c});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${x-1}u; j++) {
                  offsets[j] = offset / ${pe("uniforms.kernelStrides","j",x)};
                  offset -= offsets[j] * ${pe("uniforms.kernelStrides","j",x)};
                }
                offsets[${x-1}] = offset;

                isPad = false;
                for (var j = ${r-x}u; j < ${r}u; j++) {
                  xIndices[j] = indices[j] * ${pe("uniforms.strides",`j - ${r-x}u`,x)}
                    + offsets[j - ${r-x}u] - ${pe("uniforms.pads","j - 2u",T)};
                  ${C}
              }
              ${o}

              output[global_idx] = value;
            }`}},vl=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,Lp=e=>`${vl(e)};${e.countIncludePad}`,Gp=e=>`${vl(e)};${e.storageOrder};${e.dilations}`,wl=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),$l=(e,t,r,n)=>{let[i,u]=gl(t,n,r),o=W("x",t.dataType,t.dims.length),c=o.type.value,p="value += x_val;",m="";i.countIncludePad?m+=`value /= ${c}(uniforms.kernelSize);`:m+=`value /= ${c}(i32(uniforms.kernelSize) - pad);`;let[l,g,b,$,v]=yl(u,i);l.push(...L(t.dims),...L(u));let x=["rank"];return{name:e,shaderCache:{hint:`${n.cacheKey};${b};${$};${v}`,inputDependencies:x},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(N.size(u)/64)},programUniforms:l}),getShaderSource:T=>bl(T,o,t.dims.length,u.length,i,p,m,0,g,b,$,v)}},_l=e=>{let t=e.count_include_pad!==0,r=wl(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let n={countIncludePad:t,...r,cacheKey:""};return{...n,cacheKey:Lp(n)}},Sl=(e,t)=>{sa(e.inputs),e.compute($l("AveragePool",e.inputs[0],!1,t))},xl={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},Cl=e=>{let t=e.format;return{format:t,...xl,cacheKey:t}},Il=(e,t)=>{sa(e.inputs),e.compute($l("GlobalAveragePool",e.inputs[0],!0,t))},Al=(e,t,r,n)=>{let[i,u]=gl(t,n,r),o=`
      value = max(x_val, value);
    `,c="",p=W("x",t.dataType,t.dims.length),m=["rank"],[l,g,b,$,v]=yl(u,i);return l.push(...L(t.dims),...L(u)),{name:e,shaderCache:{hint:`${n.cacheKey};${b};${$};${v}`,inputDependencies:m},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(N.size(u)/64)},programUniforms:l}),getShaderSource:x=>bl(x,p,t.dims.length,u.length,i,o,c,-1e5,g,b,$,v)}},Tl=(e,t)=>{sa(e.inputs),e.compute(Al("MaxPool",e.inputs[0],!1,t))},El=e=>{let t=e.storage_order,r=e.dilations,n=wl(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(n.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let i={storageOrder:t,dilations:r,...n,cacheKey:""};return{...i,cacheKey:Gp(i)}},Ol=e=>{let t=e.format;return{format:t,...xl,cacheKey:t}},kl=(e,t)=>{sa(e.inputs),e.compute(Al("GlobalMaxPool",e.inputs[0],!0,t))}});var qp,jp,Rl,Bl=j(()=>{"use strict";wt();ge();Ae();qp=(e,t,r)=>{let n=e===t,i=e<t&&r<0,u=e>t&&r>0;if(n||i||u)throw new Error("Range these inputs' contents are invalid.")},jp=(e,t,r,n)=>{let i=Math.abs(Math.ceil((t-e)/r)),u=[i],o=i,c=[{type:12,data:o},{type:n,data:e},{type:n,data:r},...L(u)],p=m=>{let l=Y("output",n,u.length),g=l.type.value,b=[{name:"outputSize",type:"u32"},{name:"start",type:g},{name:"delta",type:g}];return`
        ${m.registerUniforms(b).declareVariables(l)}
        ${m.mainStart()}
        ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${g}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${n}`},getShaderSource:p,getRunData:()=>({outputs:[{dims:u,dataType:n}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:c})}},Rl=e=>{let t=0,r=0,n=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],n=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],n=e.inputs[2].getFloat32Array()[0]),Pe.webgpu.validateInputContent&&qp(t,r,n),e.compute(jp(t,r,n,e.inputs[0].dataType),{inputs:[]})}});var Kp,Yp,Zp,Xp,Jp,Qp,ef,tf,rf,nf,af,Dl,of,sf,uf,lf,df,Ml,zl,Ul=j(()=>{"use strict";ge();Ee();tt();Ae();Kp=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},Yp=(e,t,r)=>{t.every(i=>i>=0&&i<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let n=new Array(r).fill(1);return t.forEach((i,u)=>n[i]=e[u]),n},Zp=(e,t,r,n,i,u)=>{let[o,c,p]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],m=e[0].dims.length;if(o>0&&e.length>o&&e[o].dims.length>0)e[o].getFloat32Array().forEach(l=>u.push(l));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(c>0&&e.length>c&&e[c].dims.length>0){if(e[c].getFloat32Array().forEach(l=>n.push(l)),n.length!==0&&n.length!==m&&r>=18&&n.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");Kp(n,t),t.axes.length>0&&Yp(n,t.axes,m).forEach((l,g)=>n[g]=l)}if(p>0&&e.length>p&&(e[p].getBigInt64Array().forEach(l=>i.push(Number(l))),i.length!==m||r>=18&&i.length===t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(n.length!==t.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(i.length!==t.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof n<"u"&&typeof i<"u"&&n.length>0&&i.length>m)throw new Error("Resize requires only of scales or sizes to be specified")},Xp=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`return ${t}(xResized) / ${t}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating
                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
                    // offset-by-one error later in floor().
                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));
                    let fract =
                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);
                    return whole + fract;
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +
                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /
                        ${t}(lengthResized - 1);
                  } else {
                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);
                  const adjustment = ${t}(lengthResized) / outputWidth;
                  const center = ${t}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",Jp=(e,t,r)=>`fn getNearestPixelFromOriginal(xOriginal: ${r}, isDownSample: bool) -> ${r} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Qp=(e,t,r)=>{let n=new Array(r).fill(0).concat(new Array(r).fill(1)),i=e.length===0?n:e.slice();return t.length>0?(t.forEach((u,o)=>{n[u]=i[o],n[o+r]=i[t.length+o]}),n):i},ef=(e,t,r,n)=>{let i=[];if(r.length>0)if(n.length>0){if(e.forEach(u=>i.push(u)),Math.max(...n)>e.length)throw new Error("axes is out of bound");n.forEach((u,o)=>i[u]=r[o])}else r.forEach(u=>i.push(u));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");i=e.map((u,o)=>Math.round(u*t[o]))}return i},tf=(e,t,r)=>{let n=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map(u=>t[u]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map(u=>t[u]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let i=e.slice();return r.axes.length>0?(r.axes.forEach(u=>t[u]=n),r.axes.forEach(u=>i[u]=Math.round(e[u]*t[u]))):(t.fill(n,0,t.length),i.forEach((u,o)=>i[o]=Math.round(u*t[o]))),i},rf=(e,t,r,n,i)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${r.length}> {
      var original_indices: array<${e.type.value}, ${r.length}>;
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var scale = ${pe("uniforms.scales","i",n)};
        var roi_low = ${pe("uniforms.roi","i",i)};
        var roi_hi = ${pe("uniforms.roi",`i + ${t.length}`,i)};
        if (scale == 1.0) {
          original_indices[i] = ${e.type.value}(output_index);
        } else {
          var input_shape_i = ${pe("uniforms.input_shape","i",t.length)};
          var output_shape_i = ${pe("uniforms.output_shape","i",r.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,nf=(e,t,r,n,i,u,o)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {
      var input_indices: ${e.type.indices};
      for (var i:u32 = 0; i < ${n.length}; i++) {
        var output_index = ${t.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${pe("uniforms.scales","i",i)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${pe("uniforms.roi","i",u)};
          var roi_hi = ${pe("uniforms.roi",`i + ${r.length}`,u)};
          var input_shape_i = ${pe("uniforms.input_shape","i",r.length)};
          var output_shape_i = ${pe("uniforms.output_shape","i",n.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${o} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${e.indicesSet("input_indices","i"," input_index")}
      }
      return input_indices;
    }`,af=(e,t)=>`
    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var input_index = ${e.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${pe("uniforms.input_shape","i",t.length)}) {
          return false;
        }
      }
      return true;
    }`,Dl=(e,t,r,n)=>e.rank>n?`
    ${e.indicesSet("input_indices",t,"channel")};
    ${e.indicesSet("input_indices",r,"batch")};
`:"",of=(e,t,r,n,i)=>{let[o,c,p,m]=r.length===2?[-1,0,1,-1]:[0,2,3,1],l=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${l} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",c,`max(0, min(row, ${r[c]} - 1))`)};
      ${e.indicesSet("input_indices",p,`max(0, min(col, ${r[p]} - 1))`)};
      ${Dl(e,m,o,2)}
      return ${e.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${l} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${l} = originalIndices[${c}];
      var col:${l} = originalIndices[${p}];
      ${n?`if (row < 0 || row > (${r[c]} - 1) || col < 0 || col > (${r[p]} - 1)) {
        return ${i};
      }`:""};
      row = max(0, min(row, ${r[c]} - 1));
      col = max(0, min(col, ${r[p]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${r.length>2?`u32(originalIndices[${m}])`:"0"};
      var batch: u32 =  ${r.length>2?`u32(originalIndices[${o}])`:"0"};
      var x11: ${l} = getInputValue(batch, channel, row1, col1);
      var x12: ${l} = getInputValue(batch, channel, row1, col2);
      var x21: ${l} = getInputValue(batch, channel, row2, col1);
      var x22: ${l} = getInputValue(batch, channel, row2, col2);
      var dx1: ${l} = abs(row - ${l}(row1));
      var dx2: ${l} = abs(${l}(row2) - row);
      var dy1: ${l} = abs(col - ${l}(col1));
      var dy2: ${l} = abs(${l}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},sf=(e,t,r,n,i,u,o,c,p,m)=>{let l=r.length===2,g=!0,[b,$]=l?[0,1]:g?[2,3]:[1,2],v=e.type.value,x=T=>{let C=T===b?"row":"col";return`
      fn ${C}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${v} {
        var output_index = ${t.indicesGet("output_indices",T)};
        var originalIdx: ${v} = getOriginalCoordinateFromResizedCoordinate(output_index, ${i[T]},
        ${n[T]}, ${r[T]}, ${u[T]}, ${u[T]} + ${r.length});
        var fractOriginalIdx: ${v} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${c} && (originalIdx < 0 || originalIdx > (${r[T]} - 1))) {
          return ${p};
        }
        var data: array<${v}, 4> = array<${v}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${C}: ${v} = originalIdx + ${v}(i);
          if (${C} < 0 || ${C} >= ${r[T]}) {
            ${(()=>m?`coefs[i + 1] = 0.0;
                        continue;`:c?`return ${p};`:`${C} = max(0, min(${C}, ${r[T]} - 1));`)()};
          }
        var input_indices_copy: ${e.type.indices} = input_indices;
          ${e.indicesSet("input_indices_copy",T,`u32(${C})`)};
          data[i + 1] = ${T===b?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${x(b)};
    ${x($)};
  fn getCubicInterpolationCoefs(s: ${v}) -> array<${v}, 4> {
    var absS = abs(s);
    var coeffs: array<${v}, 4> = array<${v}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${v} = 1.0 - absS;
    var twoMinusAbsS: ${v} = 2.0 - absS;
    var onePlusAbsS: ${v} = 1.0 + absS;
    coeffs[0] = ((${o} * onePlusAbsS - 5 * ${o}) * onePlusAbsS + 8 * ${o}) * onePlusAbsS - 4 * ${o};
    coeffs[1] = ((${o} + 2) * absS - (${o} + 3)) * absS * absS + 1;
    coeffs[2] = ((${o} + 2) * oneMinusAbsS - (${o} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${o} * twoMinusAbsS - 5 * ${o}) * twoMinusAbsS + 8 * ${o}) * twoMinusAbsS - 4 * ${o};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${v}, 4>, coefs: array<${v}, 4>) -> ${v} {
    var coefsSum: ${v} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${v} {
    var input_indices: ${e.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},uf=(e,t,r,n,i)=>{let[o,c,p,m,l]=r.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],g=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${g} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",c,`max(0, min(depth, ${r[c]} - 1))`)};
      ${e.indicesSet("input_indices",p,`max(0, min(height, ${r[p]} - 1))`)};
      ${e.indicesSet("input_indices",m,`max(0, min(width, ${r[m]} - 1))`)};
      ${Dl(e,l,o,3)}
      return ${e.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${g} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${g} = originalIndices[${c}];
      var height:${g} = originalIndices[${p}];
      var width:${g} = originalIndices[${m}];
      ${n?`if (depth < 0 || depth > (${r[c]} - 1) || height < 0 || height > (${r[p]} - 1) || width < 0 || (width > ${r[m]} - 1)) {
      return ${i};
        }`:""};

    depth = max(0, min(depth, ${r[c]} - 1));
      height = max(0, min(height, ${r[p]} - 1));
      width = max(0, min(width, ${r[m]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${r.length>3?`u32(originalIndices[${l}])`:"0"};
      var batch: u32 =  ${r.length>3?`u32(originalIndices[${o}])`:"0"};

      var x111: ${g} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${g} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${g} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${g} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${g} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${g} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${g} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${g} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${g} = abs(depth - ${g}(depth1));
      var dx2: ${g} = abs(${g}(depth2) - depth);
      var dy1: ${g} = abs(height - ${g}(height1));
      var dy2: ${g} = abs(${g}(height2) - height);
      var dz1: ${g} = abs(width - ${g}(width1));
      var dz2: ${g} = abs(${g}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},lf=(e,t,r,n,i,u)=>{let o=e.dims,c=Qp(u,t.axes,o.length),p=ef(o,n,i,t.axes),m=n.slice();n.length===0&&(m=o.map((S,A)=>S===0?1:p[A]/S),t.keepAspectRatioPolicy!=="stretch"&&(p=tf(o,m,t)));let l=Y("output",e.dataType,p.length),g=W("input",e.dataType,o.length),b=N.size(p),$=o.length===p.length&&o.every((S,A)=>S===p[A]),v=t.coordinateTransformMode==="tf_crop_and_resize",x=t.extrapolationValue,T=g.type.value,C=S=>`
      ${$?"":`
      ${Xp(t.coordinateTransformMode,T)};
      ${(()=>{switch(t.mode){case"nearest":return`
              ${af(g,o)};
              ${Jp(t.nearestMode,r,T)};
              ${nf(g,l,o,p,m.length,c.length,v)};
              `;case"linear":return`
              ${rf(l,o,p,m.length,c.length)};
              ${(()=>{if(o.length===2||o.length===4)return`${of(g,l,o,v,x)}`;if(o.length===3||o.length===5)return`${uf(g,l,o,v,x)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(o.length===2||o.length===4)return`${sf(g,l,o,p,m,c,t.cubicCoeffA,v,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${S.registerUniform("output_size","u32").registerUniform("scales","f32",m.length).registerUniform("roi","f32",c.length).declareVariables(g,l)}
      ${S.mainStart()}
        ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${$?"output[global_idx] = input[global_idx];":`
        let output_indices = ${l.offsetToIndices("global_idx")};
        var input_indices: ${g.type.indices};
        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${g.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${t.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${o.length===2||o.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${m.length>0?m:""}|${i.length>0?i:""}|${c.length>0?c:""}|${$}|${o}`,inputDependencies:["rank"]},getShaderSource:C,getRunData:()=>({outputs:[{dims:p,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(b/64)},programUniforms:[{type:12,data:b},{type:1,data:m},{type:1,data:c},...L(o),...L(p)]})}},df=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},Ml=(e,t)=>{let r=[],n=[],i=[],u=df(e);if(t.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");Zp(e.inputs,t,u,r,n,i),e.compute(lf(e.inputs[0],t,u,r,n,i),{inputs:[0]})},zl=e=>{let t=e.antialias,r=e.axes,n=e.coordinateTransformMode,i=e.cubicCoeffA,u=e.excludeOutside!==0,o=e.extrapolationValue,c=e.keepAspectRatioPolicy,p=e.mode,m=e.nearestMode===""?"simple":e.nearestMode;return Te({antialias:t,axes:r,coordinateTransformMode:n,cubicCoeffA:i,excludeOutside:u,extrapolationValue:o,keepAspectRatioPolicy:c,mode:p,nearestMode:m})}});var cf,pf,Wl,Nl=j(()=>{"use strict";ge();Ee();Ae();cf=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],n=e[2];if(t.dataType!==r.dataType||t.dataType!==n.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let i=t.dims[t.dims.length-1],u=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==i)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==u)throw new Error("Skip must have the same sequence length as input");if(n.dims.length!==1)throw new Error("Gamma must be 1D");if(n.dims[n.dims.length-1]!==i)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let o=e[3];if(o.dims.length!==1)throw new Error("Beta must be 1D");if(o.dims[o.dims.length-1]!==i)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let o=e[4];if(o.dims.length!==1)throw new Error("Bias must be 1D");if(o.dims[o.dims.length-1]!==i)throw new Error("Bias must have the same hidden size as input")}},pf=(e,t,r,n)=>{let i=e[0].dims,u=N.size(i),o=i,c=u,p=i.slice(-1)[0],m=n?i.slice(0,-1).concat(1):[],l=e.length>3,g=e.length>4,b=n&&r>1,$=n&&r>2,v=r>3,x=Fe(p),T=[{type:12,data:c},{type:12,data:x},{type:12,data:p},{type:1,data:t.epsilon}],C=A=>{let O=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],M=[W("x",e[0].dataType,e[0].dims,x),W("skip",e[1].dataType,e[1].dims,x),W("gamma",e[2].dataType,e[2].dims,x)];l&&M.push(W("beta",e[3].dataType,e[3].dims,x)),g&&M.push(W("bias",e[4].dataType,e[4].dims,x)),M.push(Y("output",e[0].dataType,o,x)),b&&M.push(Y("mean_output",1,m)),$&&M.push(Y("inv_std_output",1,m)),v&&M.push(Y("input_skip_bias_sum",e[0].dataType,o,x));let z=Ge(e[0].dataType);return`

      ${A.registerUniforms(O).declareVariables(...M)}

      ${A.mainStart()}
        ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size / uniforms.hidden_size")}
        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        let offset = global_idx * hidden_size_vectorized;
        var sum = ${rt("f32",x)};
        var squareSum = ${rt("f32",x)};
        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${g?"bias[i]":"0.0"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${v?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${At(z,x,"value")};
          sum += f32_value;
          squareSum += f32_value * f32_value;
        }
        let mean = ${ht("sum",x)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${ht("squareSum",x)} / f32(uniforms.hidden_size) - mean * mean + uniforms.epsilon);
        ${b?"mean_output[global_idx] = mean;":""}
        ${$?"inv_std_output[global_idx] = inv_std_dev;":""}
        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {
          output[offset + i] = (output[offset + i] - ${z}(mean)) * ${z}(inv_std_dev) * gamma[i] + ${l?"beta[i]":"0.0"};
        }
      }`},S=[{dims:o,dataType:e[0].dataType}];return r>1&&S.push({dims:m,dataType:1}),r>2&&S.push({dims:m,dataType:1}),r>3&&S.push({dims:i,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${x};${b};${$};${v}`,inputDependencies:e.map((A,O)=>"type")},getShaderSource:C,getRunData:()=>({outputs:S,dispatchGroup:{x:Math.ceil(c/p/64)},programUniforms:T})}},Wl=(e,t)=>{cf(e.inputs);let n=[0];e.outputCount>1&&n.push(-3),e.outputCount>2&&n.push(-3),e.outputCount>3&&n.push(3),e.compute(pf(e.inputs,t,e.outputCount,!1),{outputs:n})}});var ff,ua,mf,Vl,hf,gf,Hl,Ll,Gl=j(()=>{"use strict";ge();Ee();tt();Ae();ff=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,n)=>{if(e[n+1].dataType!==6&&e[n+1].dataType!==7)throw new Error(`Input ${n} must be an array of int32 or int64`)})},ua=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(n=>r.push(Number(n)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(n=>r.push(Number(n)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},mf=(e,t)=>{if(e.length>1){let r=ua(e,1),n=ua(e,2),i=ua(e,3);return i.length===0&&(i=[...Array(e[0].dims.length).keys()]),Te({starts:r,ends:n,axes:i})}else return t},Vl=(e,t,r,n,i)=>{let u=e;return e<0&&(u+=r[n[t]]),i[t]<0?Math.max(0,Math.min(u,r[n[t]]-1)):Math.max(0,Math.min(u,r[n[t]]))},hf=(e,t,r)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {
          var input_indices: ${e.type.indices};
          var carry = 0u;
          for (var i = ${r.length}; i >= 0; i--) {
            let input_shape_i = ${pe("uniforms.input_shape","i",r.length)};
            let steps_i = ${pe("uniforms.steps","i",r.length)};
            let signs_i = ${pe("uniforms.signs","i",r.length)};
            let starts_i = ${pe("uniforms.starts","i",r.length)};
            var output_index = ${t.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${e.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,gf=(e,t)=>{let r=e[0].dims,n=N.size(r),i=t.axes.length>0?N.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],u=ua(e,4);u.forEach(C=>C!==0||(()=>{throw new Error("step cannot be 0")})),u.length===0&&(u=Array(i.length).fill(1));let o=t.starts.map((C,S)=>Vl(C,S,r,i,u)),c=t.ends.map((C,S)=>Vl(C,S,r,i,u));if(i.length!==o.length||i.length!==c.length)throw new Error("start, ends and axes should have the same number of elements");if(i.length!==r.length)for(let C=0;C<r.length;++C)i.includes(C)||(o.splice(C,0,0),c.splice(C,0,r[C]),u.splice(C,0,1));let p=u.map(C=>Math.sign(C));u.forEach((C,S,A)=>{if(C<0){let O=(c[S]-o[S])/C,M=o[S],z=M+O*u[S];o[S]=z,c[S]=M,A[S]=-C}});let m=r.slice(0);i.forEach((C,S)=>{m[C]=Math.ceil((c[C]-o[C])/u[C])});let l={dims:m,dataType:e[0].dataType},g=Y("output",e[0].dataType,m.length),b=W("input",e[0].dataType,e[0].dims.length),$=N.size(m),v=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:o.length},{name:"signs",type:"i32",length:p.length},{name:"steps",type:"u32",length:u.length}],x=[{type:12,data:$},{type:12,data:o},{type:6,data:p},{type:12,data:u},...L(e[0].dims),...L(m)],T=C=>`
      ${C.registerUniforms(v).declareVariables(b,g)}
        ${hf(b,g,r)}
        ${C.mainStart()}
          ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${g.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${g.setByOffset("global_idx",b.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${p.length}_${o.length}_${u.length}`,inputDependencies:["rank"]},getShaderSource:T,getRunData:()=>({outputs:[l],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:x})}},Hl=(e,t)=>{ff(e.inputs,t);let r=mf(e.inputs,t);e.compute(gf(e.inputs,r),{inputs:[0]})},Ll=e=>{let t=e.starts,r=e.ends,n=e.axes;return Te({starts:t,ends:r,axes:n})}});var yf,bf,Fl,ql,jl=j(()=>{"use strict";ge();Ee();tt();Ae();yf=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},bf=(e,t)=>{let r=e.dims,n=N.size(r),i=64,u=t.axis;if(u<0&&(u=r.length+u),u<r.length-1)throw new Error("softmax only supports last axis for now.");let o=r[u],c=n/o,p=Fe(o),m=o/p,l=(T,C)=>C===4?`max(max(${T}.x, ${T}.y), max(${T}.z, ${T}.w))`:C===2?`max(${T}.x, ${T}.y)`:C===3?`max(max(${T}.x, ${T}.y), ${T}.z)`:T,g=W("x",e.dataType,e.dims,p),b=Y("result",e.dataType,e.dims,p),$=g.type.value,v=Ge(e.dataType)==="f32"?`var threadMax = ${$}(-3.402823e+38f);`:`var threadMax = ${$}(-65504.0h);`,x=T=>`
      var<workgroup> rowMaxShared : ${$};
      var<workgroup> rowSumShared : ${$};
      var<workgroup> threadShared : array<${$}, ${i}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${$} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${$}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${T.registerUniform("packedCols","i32").declareVariables(g,b)}
      ${T.mainStart()}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${i};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${v}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${$}(${l("threadShared[0]",p)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${$}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${$}(${ht("threadShared[0]",p)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`;return{name:"Softmax",shaderCache:{hint:`${p}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.dataType}],dispatchGroup:{x:c},programUniforms:[{type:12,data:m}]}),getShaderSource:x}},Fl=(e,t)=>{yf(e.inputs),e.compute(bf(e.inputs[0],t))},ql=e=>Te({axis:e.axis})});var vf,wf,$f,_f,Sf,Kl,Yl,Zl=j(()=>{"use strict";ge();Ee();tt();Ae();vf=e=>{if(!e||e.length<1)throw new Error("too few inputs")},wf=(e,t)=>{let r=[],n=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(i=>r.push(Number(i))),n=r.length),Te({numOutputs:n,axis:t.axis,splitSizes:r})},$f=e=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {
    if (index < ${pe("uniforms.size_in_split_axis","i",e)}) {
        return i;
    }
    }
    return ${e}u;
}`,_f=e=>{let t=e.length,r=[];for(let n=0;n<t;++n){let i=e[n].setByIndices("indices","input[global_idx]");t===1?r.push(i):n===0?r.push(`if (output_number == ${n}u) { ${i} }`):n===t-1?r.push(`else { ${i} }`):r.push(`else if (output_number == ${n}) { ${i} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {
        ${r.join(`
`)}
      }`},Sf=(e,t)=>{let r=e[0].dims,n=N.size(r),i=e[0].dataType,u=N.normalizeAxis(t.axis,r.length),o=new Array(t.numOutputs),c=W("input",i,r),p=new Array(t.numOutputs),m=[],l=[],g=0,b=[{type:12,data:n}];for(let v=0;v<t.numOutputs;v++){g+=t.splitSizes[v],p[v]=g;let x=r.slice();x[t.axis]=t.splitSizes[v],l.push(x),o[v]=Y(`output${v}`,i,x),m.push({dims:l[v],dataType:e[0].dataType})}b.push({type:12,data:p}),b.push(...L(r)),l.forEach(v=>b.push(...L(v)));let $=v=>`
  ${v.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",p.length).declareVariables(c,...o)}
  ${$f(p.length)}
  ${_f(o)}

  ${v.mainStart()}
    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${c.offsetToIndices("global_idx")};
    var index = ${c.indicesGet("indices",u)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${pe("uniforms.size_in_split_axis","output_number - 1u",p.length)};
      ${c.indicesSet("indices",u,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:$,getRunData:()=>({outputs:m,dispatchGroup:{x:Math.ceil(n/64)},programUniforms:b})}},Kl=(e,t)=>{vf(e.inputs);let r=e.inputs.length===1?t:wf(e.inputs,t);e.compute(Sf(e.inputs,r),{inputs:[0]})},Yl=e=>{let t=e.axis,r=e.splitSizes,n=e.numOutputs<0?r.length:e.numOutputs;if(n!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return Te({axis:t,numOutputs:n,splitSizes:r})}});var Xl,xf,Cf,If,Jl,Ql=j(()=>{"use strict";ge();Ee();Ae();Xl=e=>Array.from(e.getBigInt64Array(),Number),xf=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Xl(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},Cf=(e,t)=>{let r=[];for(let n=0;n<e.length;++n)r.push(e[n]*t[n]);return r},If=e=>{let t=e[0].dims,r=Xl(e[1]),n=Cf(t,r),i=N.size(n),u=e[0].dataType,o=W("input",u,t.length),c=Y("output",u,n.length),p=m=>`
      const inputShape = ${o.indices(...t)};
      ${m.registerUniform("output_size","u32").declareVariables(o,c)}
      ${m.mainStart()}
      ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${c.offsetToIndices("global_idx")};
      var input_indices: ${o.type.indices};
      for (var i = 0; i < ${t.length}; i++) {
        let input_dim_i = ${o.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${c.indicesGet("output_indices","i")}  % input_dim_i;

        ${o.indicesSet("input_indices","i","input_dim_value")}
      }
      ${c.setByOffset("global_idx",o.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},...L(e[0].dims),...L(n)]}),getShaderSource:p}},Jl=e=>{xf(e.inputs),e.compute(If(e.inputs),{inputs:[0]})}});var Af,Tf,ed,td=j(()=>{"use strict";ge();Ee();Ae();Af=(e,t,r,n,i)=>{let u=Y("output_data",i,r.length,4),o=W("a_data",t[1].dataType,t[1].dims.length,4),c=W("b_data",t[2].dataType,t[2].dims.length,4),p=W("c_data",t[0].dataType,t[0].dims.length,4),m,l=(g,b,$)=>`select(${b}, ${g}, ${$})`;if(!n)m=u.setByOffset("global_idx",l(o.getByOffset("global_idx"),c.getByOffset("global_idx"),p.getByOffset("global_idx")));else{let g=(b,$,v="")=>{let x=`a_data[index_a${$}][component_a${$}]`,T=`b_data[index_b${$}][component_b${$}]`,C=`bool(c_data[index_c${$}] & ${4278190080>>>(3-$)*8}u)`;return`
            let output_indices${$} = ${u.offsetToIndices(`global_idx * 4u + ${$}u`)};
            let offset_a${$} = ${o.broadcastedIndicesToOffset(`output_indices${$}`,u)};
            let offset_b${$} = ${c.broadcastedIndicesToOffset(`output_indices${$}`,u)};
            let offset_c${$} = ${p.broadcastedIndicesToOffset(`output_indices${$}`,u)};
            let index_a${$} = offset_a${$} / 4u;
            let index_b${$} = offset_b${$} / 4u;
            let index_c${$} = offset_c${$} / 4u;
            let component_a${$} = offset_a${$} % 4u;
            let component_b${$} = offset_b${$} % 4u;
            ${b}[${$}] = ${v}(${l(x,T,C)});
          `};i===9?m=`
            var data = vec4<u32>(0);
            ${g("data",0,"u32")}
            ${g("data",1,"u32")}
            ${g("data",2,"u32")}
            ${g("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:m=`
            ${g("output_data[global_idx]",0)}
            ${g("output_data[global_idx]",1)}
            ${g("output_data[global_idx]",2)}
            ${g("output_data[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(p,o,c,u)}
        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${m}
      }`},Tf=e=>{let t=e[1].dims,r=e[2].dims,n=e[0].dims,i=e[1].dataType,u=!(N.areEqual(t,r)&&N.areEqual(r,n)),o=t,c=N.size(t);if(u){let m=kt.calcShape(kt.calcShape(t,r,!1),n,!1);if(!m)throw new Error("Can't perform where op on the given tensors");o=m,c=N.size(o)}let p=Math.ceil(c/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:m=>Af(m,e,o,u,i),getRunData:()=>({outputs:[{dims:o,dataType:i}],dispatchGroup:{x:Math.ceil(c/64/4)},programUniforms:[{type:12,data:p},...L(n),...L(t),...L(r),...L(o)]})}},ed=e=>{e.compute(Tf(e.inputs))}});var rd,nd=j(()=>{"use strict";Cs();Qa();Ts();Os();cu();_u();Cu();ai();Wu();Hu();ju();Zu();Qu();rl();il();sl();ll();oi();fl();hl();Pl();Bl();Zn();Ul();Nl();Gl();jl();Zl();Ql();Cr();ei();td();rd=new Map([["Abs",[ks]],["Acos",[Ps]],["Acosh",[Rs]],["Add",[pu]],["ArgMax",[xs,Ja]],["ArgMin",[Ss,Ja]],["Asin",[Bs]],["Asinh",[Ds]],["Atan",[Ms]],["Atanh",[zs]],["Attention",[Is]],["AveragePool",[Sl,_l]],["BatchNormalization",[As]],["BiasAdd",[Es]],["BiasSplitGelu",[du]],["Cast",[Ws,Us]],["Ceil",[Vs]],["Clip",[Ns]],["Concat",[Su,xu]],["Conv",[ui,si]],["ConvTranspose",[Uu,zu]],["Cos",[Hs]],["Cosh",[Ls]],["CumSum",[Nu,Vu]],["Div",[fu]],["Einsum",[Fu,qu]],["Elu",[Gs,Qn]],["Equal",[mu]],["Erf",[Fs]],["Exp",[qs]],["Expand",[Yu]],["Floor",[js]],["FusedConv",[ui,si]],["Gather",[Ju,Xu]],["GatherElements",[tl,el]],["Gelu",[Ks]],["Gemm",[al,nl]],["GlobalAveragePool",[Il,Cl]],["GlobalMaxPool",[kl,Ol]],["Greater",[bu]],["GreaterOrEqual",[wu]],["HardSigmoid",[ru,tu]],["InstanceNormalization",[ol]],["LayerNormalization",[ul]],["LeakyRelu",[Ys,Qn]],["Less",[vu]],["LessOrEqual",[$u]],["Log",[lu]],["MatMul",[Ou]],["MaxPool",[Tl,El]],["Mul",[hu]],["MultiHeadAttention",[pl,cl]],["Neg",[Xs]],["Not",[Zs]],["Pad",[ml]],["Pow",[gu]],["Range",[Rl]],["Reciprocal",[Js]],["ReduceMin",[ys]],["ReduceMean",[ps]],["ReduceMax",[gs]],["ReduceSum",[vs]],["ReduceProd",[bs]],["ReduceL1",[fs]],["ReduceL2",[ms]],["ReduceLogSum",[$s]],["ReduceLogSumExp",[hs]],["ReduceSumSquare",[ws]],["Relu",[Qs]],["Resize",[Ml,zl]],["Sigmoid",[eu]],["Sin",[nu]],["Sinh",[au]],["Slice",[Hl,Ll]],["SkipLayerNormalization",[Wl]],["Split",[Kl,Yl]],["Sqrt",[iu]],["Softmax",[Fl,ql]],["Sub",[yu]],["Tan",[ou]],["Tanh",[su]],["ThresholdedRelu",[uu,Qn]],["Tile",[Jl]],["Transpose",[Qo,es]],["Where",[ed]]])});var la,ad=j(()=>{"use strict";wt();Xt();Ae();la=class{constructor(t){this.backend=t;this.repo=new Map,this.attributesBound=!1}getArtifact(t){return this.repo.get(t)}setArtifact(t,r){this.repo.set(t,r)}run(t,r,n,i,u){ft(t.programInfo.name);let o=this.backend.device,c=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let p=[];for(let l of r)p.push({binding:p.length,resource:{buffer:l.buffer}});for(let l of n)p.push({binding:p.length,resource:{buffer:l.buffer}});u&&p.push({binding:p.length,resource:u});let m=o.createBindGroup({layout:t.computePipeline.getBindGroupLayout(0),entries:p,label:t.programInfo.name});if(this.backend.sessionStatus==="capturing"){let l={kernelId:this.backend.currentKernelId,computePipeline:t.computePipeline,bindGroup:m,dispatchGroup:i};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(l)}c.setPipeline(t.computePipeline),c.setBindGroup(0,m),c.dispatchWorkgroups(...i),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),mt(t.programInfo.name)}dispose(){}build(t,r){ft(t.name);let n=this.backend.device,i=[];n.features.has("shader-f16")&&i.push("enable f16;");let u=Xo(r),o=t.getShaderSource(u),c=`${i.join(`
`)}
${u.additionalImplementations}
${o}`,p=n.createShaderModule({code:c,label:t.name});Ue("verbose",()=>`[WebGPU] ${t.name} shader code: ${c}`);let m=n.createComputePipeline({compute:{module:p,entryPoint:"main"},layout:"auto",label:t.name});return mt(t.name),{programInfo:t,computePipeline:m}}normalizeDispatchGroupSize(t){let r=typeof t=="number"?t:t.x,n=typeof t=="number"?1:t.y||1,i=typeof t=="number"?1:t.z||1,u=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=u&&n<=u&&i<=u)return[r,n,i];let o=r*n*i,c=Math.ceil(Math.sqrt(o));if(c>u){if(c=Math.ceil(Math.cbrt(o)),c>u)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[c,c,c]}else return[c,c,1]}}});var Ef,Of,da,id=j(()=>{"use strict";wt();ge();Xt();qo();Zo();nd();ad();Ef=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let n=0;n<e.length;++n){let i=e[n].dataType;switch(t[n]){case"none":{r.push("");break}case"type":{r.push(`${i}`);break}case"rank":{let u=e[n].dims.length;r.push(`${i};${u}`);break}case"dims":{let u=e[n].dims.join(",");r.push(`${i};${u}`);break}default:throw new Error(`unsupported input dependency: ${t[n]}`)}}return r.join("|")},Of=(e,t,r)=>{let n=e.name;return e.shaderCache?.hint&&(n+="["+e.shaderCache.hint+"]"),n+=":"+r+`:${Ef(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,n},da=class{constructor(){this.currentSessionId=null;this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.maxDispatchNumber=16;this.pendingDispatchNumber=0;this.pendingKernels=[];this.pendingQueries=new Map;this.sessionStatus="default";this.capturedCommandList=new Map;this.capturedPendingKernels=new Map;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let t=this.kernelCustomData.get(this.currentKernelId);return t||(t={},this.kernelCustomData.set(this.currentKernelId,t)),t}async initialize(t,r){this.env=t;let n=[],i={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:n};r.features.has("chromium-experimental-timestamp-query-inside-passes")?n.push("chromium-experimental-timestamp-query-inside-passes"):r.features.has("timestamp-query")&&n.push("timestamp-query"),r.features.has("shader-f16")&&n.push("shader-f16"),this.device=await r.requestDevice(i),this.gpuDataManager=Yo(this),this.programManager=new la(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Go(t.logLevel,!!t.debug),this.device.onuncapturederror=u=>{u.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${u.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let t=this.getCommandEncoder(),r={};this.queryType==="at-passes"&&(r.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=t.beginComputePass(r)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;ft(),this.endComputePass();let t;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),t=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(t,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,t,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&t.mapAsync(GPUMapMode.READ).then(()=>{let r=new BigUint64Array(t.getMappedRange()),n=this.pendingQueries.get(t);for(let i=0;i<r.length/2;i++){let u=n[i],o=u.kernelId,c=this.kernels.get(o),p=c.kernelType,m=c.kernelName,l=u.programName,g=u.inputTensorViews,b=u.outputTensorViews,$=r[i*2],v=r[i*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=$);let x=Number($-this.queryTimeBase),T=Number(v-this.queryTimeBase);if(!Number.isSafeInteger(x)||!Number.isSafeInteger(T))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:g.map(C=>({dims:C.dims,dataType:Zt(C.dataType)})),outputsMetadata:b.map(C=>({dims:C.dims,dataType:Zt(C.dataType)})),kernelId:o,kernelType:p,kernelName:m,programName:l,startTime:x,endTime:T});else{let C="";g.forEach((A,O)=>{C+=`input[${O}]: [${A.dims}] | ${Zt(A.dataType)}, `});let S="";b.forEach((A,O)=>{S+=`output[${O}]: [${A.dims}] | ${Zt(A.dataType)}, `}),console.log(`[profiling] kernel "${o}|${p}|${m}|${l}" ${C}${S}execution time: ${T-x} ns`)}Zr("GPU",`${l}::${$}::${v}`)}t.unmap(),this.pendingQueries.delete(t)}),mt()}run(t,r,n,i,u){ft(t.name);let o=[];for(let S=0;S<r.length;++S){let A=this.gpuDataManager.get(r[S].data);if(!A)throw new Error(`no GPU data for input: ${r[S].data}`);o[S]=A}let{outputs:c,dispatchGroup:p,programUniforms:m}=t.getRunData(r),l=n.length===0?c.map((S,A)=>A):n;if(l.length!==c.length)throw new Error(`Output size ${l.length} must be equal to ${c.length}.`);let g=[],b=[];for(let S=0;S<c.length;++S){if(!Number.isInteger(l[S])||l[S]<-3||l[S]>=c.length)throw new Error(`Invalid output index: ${l[S]}`);if(l[S]===-3)continue;let A=l[S]===-1,O=l[S]===-2,M=A||O?u(c[S].dataType,c[S].dims):i(l[S],c[S].dataType,c[S].dims),z=this.gpuDataManager.get(M.data);if(!z)throw new Error(`no GPU data for output: ${M.data}`);if(A&&this.temporaryData.push(z),O){let V=this.kernelPersistentData.get(this.currentKernelId);V||(V=[],this.kernelPersistentData.set(this.currentKernelId,V)),V.push(z)}g.push(M),b.push(z)}let $;if(m){let S=0,A=[];m.forEach(V=>{let K=typeof V.data=="number"?[V.data]:V.data;if(K.length===0)return;let ue=V.type===10?2:4,P,te;V.type===10?(te=K.length>4?16:K.length>2?8:K.length*ue,P=K.length>4?16:ue*K.length):(te=K.length<=2?K.length*ue:16,P=16),S=Math.ceil(S/te)*te,A.push(S);let Me=V.type===10?8:4;S+=K.length>4?Math.ceil(K.length/Me)*P:K.length*ue});let O=16;S=Math.ceil(S/O)*O;let M=new ArrayBuffer(S);m.forEach((V,K)=>{let ue=A[K],P=typeof V.data=="number"?[V.data]:V.data;if(V.type===6)new Int32Array(M,ue,P.length).set(P);else if(V.type===12)new Uint32Array(M,ue,P.length).set(P);else if(V.type===10)new Uint16Array(M,ue,P.length).set(P);else if(V.type===1)new Float32Array(M,ue,P.length).set(P);else throw new Error(`Unsupported uniform type: ${Zt(V.type)}`)});let z=this.gpuDataManager.create(S,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(z.buffer,0,M,0,S),this.gpuDataManager.release(z.id),$={offset:0,size:S,buffer:z.buffer}}let v=this.programManager.normalizeDispatchGroupSize(p),x=v[1]===1&&v[2]===1,T=Of(t,r,x),C=this.programManager.getArtifact(T);if(C||(C=this.programManager.build(t,v),this.programManager.setArtifact(T,C),Ue("info",()=>`[artifact] key: ${T}, programName: ${t.name}`)),Ue("info",()=>`[ProgramManager] run "${t.name}" (key=${T}) with ${v[0]}x${v[1]}x${v[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let S={kernelId:this.currentKernelId,programName:C.programInfo.name,inputTensorViews:r,outputTensorViews:g};this.pendingKernels.push(S),this.capturedPendingKernels.get(this.currentSessionId).push(S)}return this.programManager.run(C,o,b,v,$),mt(t.name),g}upload(t,r){this.gpuDataManager.upload(t,r)}memcpy(t,r){this.gpuDataManager.memcpy(t,r)}async download(t,r){await this.gpuDataManager.download(t,r)}alloc(t){return this.gpuDataManager.create(t).id}free(t){return this.gpuDataManager.release(t)}createKernel(t,r,n,i){let u=rd.get(t);if(!u)throw new Error(`kernel not implemented: ${t}`);let o={kernelType:t,kernelName:i,kernelEntry:u[0],attributes:[u[1],n]};this.kernels.set(r,o)}releaseKernel(t){let r=this.kernelPersistentData.get(t);if(r){for(let n of r)this.gpuDataManager.release(n.id);this.kernelPersistentData.delete(t)}this.kernelCustomData.delete(t),this.kernels.delete(t)}computeKernel(t,r,n){let i=this.kernels.get(t);if(!i)throw new Error(`kernel not created: ${t}`);let u=i.kernelType,o=i.kernelName,c=i.kernelEntry,p=i.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${u}] ${o}" is not allowed to be called recursively`);this.currentKernelId=t,p[0]&&(p[1]=p[0](p[1]),p[0]=void 0),Ue("info",()=>`[WebGPU] Start to run kernel "[${u}] ${o}"...`);let m=this.env.debug;this.temporaryData=[];try{return m&&this.device.pushErrorScope("validation"),c(r,p[1]),0}catch(l){return n.push(Promise.resolve(`[WebGPU] Kernel "[${u}] ${o}" failed. ${l}`)),1}finally{m&&n.push(this.device.popErrorScope().then(l=>l?`GPU validation error for kernel "[${u}] ${o}": ${l.message}`:null));for(let l of this.temporaryData)this.gpuDataManager.release(l.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(t,r,n,i){let u=this.sessionExternalDataMapping.get(t);u||(u=new Map,this.sessionExternalDataMapping.set(t,u));let o=u.get(r),c=this.gpuDataManager.registerExternalBuffer(n,i,o?.[1]);return u.set(r,[c,n]),c}unregisterBuffers(t){let r=this.sessionExternalDataMapping.get(t);r&&(r.forEach(n=>this.gpuDataManager.unregisterExternalBuffer(n[1])),this.sessionExternalDataMapping.delete(t))}getBuffer(t){let r=this.gpuDataManager.get(t);if(!r)throw new Error(`no GPU data for buffer: ${t}`);return r.buffer}createDownloader(t,r,n){return async()=>{let i=await Fa(this,t,r);return Fo(i.buffer,n)}}writeTimestamp(t){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,t)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||this.env.wasm.trace)&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){Ue("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){Ue("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){Ue("info","replay"),this.sessionStatus="replaying";let t=this.capturedCommandList.get(this.currentSessionId),r=this.capturedPendingKernels.get(this.currentSessionId),n=t.length;this.pendingKernels=[];for(let i=0;i<n;i++){let u=this.getComputePassEncoder(),o=t[i];this.writeTimestamp(this.pendingDispatchNumber*2),u.setPipeline(o.computePipeline),u.setBindGroup(0,o.bindGroup),u.dispatchWorkgroups(...o.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(r[i]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onReleaseSession(t){this.unregisterBuffers(t),this.capturedCommandList.has(t)&&this.capturedCommandList.delete(t),this.capturedPendingKernels.has(t)&&this.capturedPendingKernels.delete(t),this.gpuDataManager.onReleaseSession(t)}onRunStart(t){this.currentSessionId=t,this.setQueryType()}}});var od={};sr(od,{init:()=>kf});var an,mi,kf,sd=j(()=>{"use strict";ge();id();Xt();Ee();an=class e{constructor(t,r,n,i){this.module=t;this.dataType=r;this.data=n;this.dims=i}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=N.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=N.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=N.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(N.size(t)!==N.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,t)}},mi=class{constructor(t,r,n){this.module=t;this.backend=r;this.customDataOffset=0;this.customDataSize=0;let i=t.HEAPU32,u=n>>>2;this.opKernelContext=i[u++];let o=i[u++];this.outputCount=i[u++],this.customDataOffset=i[u++],this.customDataSize=i[u++];let c=[];for(let p=0;p<o;p++){let m=i[u++],l=i[u++],g=i[u++],b=[];for(let $=0;$<g;$++)b.push(i[u++]);c.push(new an(t,m,l,b))}this.inputs=c}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(t,r){let n=r?.inputs?.map(c=>typeof c=="number"?this.inputs[c]:c)??this.inputs,i=r?.outputs??[],u=(c,p,m)=>new an(this.module,p,this.output(c,m),m),o=(c,p)=>{let m=Jr(c);if(!m)throw new Error(`Unsupported data type: ${c}`);let l=m*N.size(p);return new an(this.module,c,this.backend.gpuDataManager.create(l).id,p)};return this.backend.run(t,n,i,u,o)}output(t,r){let n=this.module.stackSave();try{let i=this.module.stackAlloc((1+r.length)*4),u=i>>2;this.module.HEAPU32[u++]=r.length;for(let o=0;o<r.length;o++)this.module.HEAPU32[u++]=r[o];return this.module._JsepOutput(this.opKernelContext,t,i)}catch(i){throw new Error(`Failed to generate kernel's output[${t}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${i}`)}finally{this.module.stackRestore(n)}}},kf=async(e,t,r)=>{let n=e.jsepInit;if(!n)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");let i=new da;await i.initialize(t,r),n(i,u=>i.alloc(u),u=>i.free(u),(u,o,c,p=!1)=>{if(p)Ue("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${u}, dst=${o}, size=${c}`),i.memcpy(u,o);else{Ue("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${u}, gpuDataId=${o}, size=${c}`);let m=e.HEAPU8.subarray(u>>>0,(u>>>0)+c);i.upload(o,m)}},async(u,o,c)=>{Ue("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${u}, dataOffset=${o}, size=${c}`),await i.download(u,()=>e.HEAPU8.subarray(o>>>0,(o>>>0)+c))},(u,o,c)=>i.createKernel(u,o,c,e.UTF8ToString(e._JsepGetNodeName(o))),u=>i.releaseKernel(u),(u,o,c,p)=>{Ue("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${c}, kernel=${u}, contextDataOffset=${o}`);let m=new mi(e,i,o);return i.computeKernel(u,m,p)},()=>i.captureBegin(),()=>i.captureEnd(),()=>i.replay())}});var Pf,ld,dd,cr,Rf,hi,cd,pd,ud,fd,md,hd,gd=j(()=>{"use strict";Wo();Vo();ge();Sr();Vn();La();Pf=(e,t)=>{Ve()._OrtInit(e,t)!==0&&ze("Can't initialize onnxruntime.")},ld=async e=>{Pf(e.wasm.numThreads,Qr(e.logLevel))},dd=async(e,t)=>{if(t==="webgpu"||t==="webnn"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let r=await navigator.gpu.requestAdapter();if(!r)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.');if(!e.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");let n=(sd(),Kt(od)).init;await n(Ve(),e,r)}},cr=new Map,Rf=e=>{let t=Ve(),r=t.stackSave();try{let n=t.stackAlloc(8);return t._OrtGetInputOutputCount(e,n,n+4)!==0&&ze("Can't get session input/output count."),[t.HEAP32[n/4],t.HEAP32[n/4+1]]}finally{t.stackRestore(r)}},hi=e=>{let t=Ve(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},cd=async(e,t)=>{let r,n,i=Ve();Array.isArray(e)?[r,n]=e:e.buffer===i.HEAPU8.buffer?[r,n]=[e.byteOffset,e.byteLength]:[r,n]=hi(e);let u=0,o=0,c=0,p=[],m=[],l=[];try{if([o,p]=No(t),t?.externalData&&i.mountExternalData){let S=[];for(let A of t.externalData){let O=typeof A=="string"?A:A.path;S.push(en(typeof A=="string"?A:A.data).then(M=>{i.mountExternalData(O,M)}))}await Promise.all(S)}u=await i._OrtCreateSession(r,n,o),u===0&&ze("Can't create a session.");let[g,b]=Rf(u),$=!!t?.enableGraphCapture,v=[],x=[],T=[];for(let S=0;S<g;S++){let A=i._OrtGetInputName(u,S);A===0&&ze("Can't get an input name."),m.push(A),v.push(i.UTF8ToString(A))}for(let S=0;S<b;S++){let A=i._OrtGetOutputName(u,S);A===0&&ze("Can't get an output name."),l.push(A);let O=i.UTF8ToString(A);x.push(O);{if($&&t?.preferredOutputLocation===void 0){T.push("gpu-buffer");continue}let M=typeof t?.preferredOutputLocation=="string"?t.preferredOutputLocation:t?.preferredOutputLocation?.[O]??"cpu";if(M!=="cpu"&&M!=="cpu-pinned"&&M!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${M}.`);if($&&M!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${M}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);T.push(M)}}let C=null;return T.some(S=>S==="gpu-buffer")&&(c=i._OrtCreateBinding(u),c===0&&ze("Can't create IO binding."),C={handle:c,outputPreferredLocations:T,outputPreferredLocationsEncoded:T.map(S=>Ha(S))}),cr.set(u,[u,m,l,C,$,!1]),[u,v,x]}catch(g){throw m.forEach(b=>i._OrtFree(b)),l.forEach(b=>i._OrtFree(b)),c!==0&&i._OrtReleaseBinding(c),u!==0&&i._OrtReleaseSession(u),g}finally{i._free(r),o!==0&&i._OrtReleaseSessionOptions(o),p.forEach(g=>i._free(g)),i.unmountExternalData?.()}},pd=e=>{let t=Ve(),r=cr.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[n,i,u,o,c]=r;o&&(c&&t._OrtClearBoundOutputs(o.handle),t._OrtReleaseBinding(o.handle)),t.jsepOnReleaseSession?.(e),i.forEach(p=>t._OrtFree(p)),u.forEach(p=>t._OrtFree(p)),t._OrtReleaseSession(n),cr.delete(e)},ud=(e,t,r,n,i,u=!1)=>{if(!e){t.push(0);return}let o=Ve(),c=e[0],p=e[1],m=e[3],l,g;if(c==="string"&&m==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(u&&m!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${i} when enableGraphCapture is true.`);if(m==="gpu-buffer"){let v=e[2].gpuBuffer,x=Jr(Va(c));g=p.reduce((T,C)=>T*C,1)*x,l=o.jsepRegisterBuffer(n,i,v,g)}else{let v=e[2];if(Array.isArray(v)){g=4*v.length,l=o._malloc(g),r.push(l);let x=l/4;for(let T=0;T<v.length;T++){if(typeof v[T]!="string")throw new TypeError(`tensor data at index ${T} is not a string`);o.HEAPU32[x++]=Ne(v[T],r)}}else g=v.byteLength,l=o._malloc(g),r.push(l),o.HEAPU8.set(new Uint8Array(v.buffer,v.byteOffset,g),l)}let b=o.stackSave(),$=o.stackAlloc(4*p.length);try{let v=$/4;p.forEach(T=>o.HEAP32[v++]=T);let x=o._OrtCreateTensor(Va(c),l,g,$,p.length,Ha(m));x===0&&ze(`Can't create tensor for input/output. session=${n}, index=${i}.`),t.push(x)}finally{o.stackRestore(b)}},fd=async(e,t,r,n,i,u)=>{let o=Ve(),c=cr.get(e);if(!c)throw new Error(`cannot run inference. invalid session id: ${e}`);let p=c[0],m=c[1],l=c[2],g=c[3],b=c[4],$=c[5],v=t.length,x=n.length,T=0,C=[],S=[],A=[],O=[],M=o.stackSave(),z=o.stackAlloc(v*4),V=o.stackAlloc(v*4),K=o.stackAlloc(x*4),ue=o.stackAlloc(x*4);try{[T,C]=Uo(u);for(let de=0;de<v;de++)ud(r[de],S,O,e,t[de],b);for(let de=0;de<x;de++)ud(i[de],A,O,e,v+n[de],b);let P=z/4,te=V/4,Me=K/4,We=ue/4;for(let de=0;de<v;de++)o.HEAPU32[P++]=S[de],o.HEAPU32[te++]=m[t[de]];for(let de=0;de<x;de++)o.HEAPU32[Me++]=A[de],o.HEAPU32[We++]=l[n[de]];if(g&&!$){let{handle:de,outputPreferredLocations:Oe,outputPreferredLocationsEncoded:xe}=g;if(m.length!==v)throw new Error(`input count from feeds (${v}) is expected to be always equal to model's input count (${m.length}).`);for(let ae=0;ae<v;ae++){let _e=t[ae];await o._OrtBindInput(de,m[_e],S[ae])!==0&&ze(`Can't bind input[${ae}] for session=${e}.`)}for(let ae=0;ae<x;ae++){let _e=n[ae];i[ae]?.[3]?o._OrtBindOutput(de,l[_e],A[ae],0)!==0&&ze(`Can't bind pre-allocated output[${ae}] for session=${e}.`):o._OrtBindOutput(de,l[_e],0,xe[_e])!==0&&ze(`Can't bind output[${ae}] to ${Oe[ae]} for session=${e}.`)}cr.set(e,[p,m,l,g,b,!0])}o.jsepOnRunStart?.(p);let $e;g?$e=await o._OrtRunWithBinding(p,g.handle,x,K,T):$e=await o._OrtRun(p,V,z,v,ue,x,K,T),$e!==0&&ze("failed to call OrtRun().");let ve=[];for(let de=0;de<x;de++){let Oe=o.HEAPU32[K/4+de];if(Oe===A[de]){ve.push(i[de]);continue}let xe=o.stackSave(),ae=o.stackAlloc(4*4),_e=!1,ke,Re=0;try{o._OrtGetTensorData(Oe,ae,ae+4,ae+8,ae+12)!==0&&ze(`Can't access output tensor data on index ${de}.`);let F=ae/4,oe=o.HEAPU32[F++];Re=o.HEAPU32[F++];let ye=o.HEAPU32[F++],_t=o.HEAPU32[F++],Ze=[];for(let qe=0;qe<_t;qe++)Ze.push(o.HEAPU32[ye/4+qe]);o._OrtFree(ye);let He=Ze.reduce((qe,Le)=>qe*Le,1);ke=Zt(oe);let Lt=g?.outputPreferredLocations[n[de]];if(ke==="string"){if(Lt==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let qe=[],Le=Re/4;for(let Nt=0;Nt<He;Nt++){let St=o.HEAPU32[Le++],Gt=Nt===He-1?void 0:o.HEAPU32[Le]-St;qe.push(o.UTF8ToString(St,Gt))}ve.push([ke,Ze,qe,"cpu"])}else if(Lt==="gpu-buffer"&&He>0){let qe=o.jsepGetBuffer(Re),Le=Jr(oe);if(Le===void 0||!Ln(ke))throw new Error(`Unsupported data type: ${ke}`);_e=!0,ve.push([ke,Ze,{gpuBuffer:qe,download:o.jsepCreateDownloader(qe,He*Le,ke),dispose:()=>{o._OrtReleaseTensor(Oe)}},"gpu-buffer"])}else{let qe=Hn(ke),Le=new qe(He);new Uint8Array(Le.buffer,Le.byteOffset,Le.byteLength).set(o.HEAPU8.subarray(Re,Re+Le.byteLength)),ve.push([ke,Ze,Le,"cpu"])}}finally{o.stackRestore(xe),ke==="string"&&Re&&o._free(Re),_e||o._OrtReleaseTensor(Oe)}}return g&&!b&&(o._OrtClearBoundOutputs(g.handle),cr.set(e,[p,m,l,g,b,!1])),ve}finally{o.stackRestore(M),S.forEach(P=>o._OrtReleaseTensor(P)),A.forEach(P=>o._OrtReleaseTensor(P)),O.forEach(P=>o._free(P)),T!==0&&o._OrtReleaseRunOptions(T),C.forEach(P=>o._free(P))}},md=e=>{let t=Ve(),r=cr.get(e);if(!r)throw new Error("invalid session id");let n=r[0],i=t._OrtEndProfiling(n);i===0&&ze("Can't get an profile file name."),t._OrtFree(i)},hd=e=>{let t=[];for(let r of e){let n=r[2];!Array.isArray(n)&&"buffer"in n&&t.push(n.buffer)}return t}});var yd=_r((zw,Df)=>{Df.exports='/*!\n * ONNX Runtime Web v1.18.0\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n"use strict";(()=>{var no=Object.defineProperty;var Dl=Object.getOwnPropertyDescriptor;var Bl=Object.getOwnPropertyNames;var Ml=Object.prototype.hasOwnProperty;var J=(e,t)=>()=>(e&&(t=e(e=0)),t);var Ur=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),bn=(e,t)=>{for(var r in t)no(e,r,{get:t[r],enumerable:!0})},zl=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of Bl(t))!Ml.call(e,i)&&i!==r&&no(e,i,{get:()=>t[i],enumerable:!(o=Dl(t,i))||o.enumerable});return e};var pr=e=>zl(no({},"__esModule",{value:!0}),e);var oo={};bn(oo,{createReadStream:()=>wi,readFile:()=>Ul,readFileSync:()=>Vl});var Ul,Vl,wi,io=J(()=>{Ul=void 0,Vl=void 0,wi=void 0});var ao={};bn(ao,{join:()=>Wl});var Wl,so=J(()=>{Wl=void 0});var _i=Ur(($i,uo)=>{"use strict";var vi=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){var r=t,o,i;r.ready=new Promise((s,c)=>{o=s,i=c}),r.mountExternalData=(s,c)=>{(r.gb||(r.gb=new Map)).set(s,c)},r.unmountExternalData=()=>{delete r.gb},r.jsepInit=(s,c,g,$,I,B,H,q,X,Y,ce)=>{r.Ib=s,r.vb=c,r.zb=g,r.ob=$,r.yb=I,r.Sa=B,r.Ab=H,r.Cb=q,r.wb=X,r.xb=Y,r.Bb=ce,c=(ee,he,R)=>(...ie)=>{let ve=tt,Xe=he?.();ie=ee(...ie);let lt=he?.();return Xe!==lt&&(ee=lt,R(Xe),he=R=null),tt!=ve?Qr():ie},g=ee=>async(...he)=>{try{if(r.fb)throw Error("Session already started");let R=r.fb={Db:he[0],errors:[]},ie=await ee(...he);if(r.fb!==R)throw Error("Session mismatch");s.flush();let ve=R.errors;if(0<ve.length){let Xe=await Promise.all(ve);if(Xe=Xe.filter(lt=>lt),0<Xe.length)throw Error(Xe.join(`\n`))}return ie}finally{r.fb=null}},r._OrtCreateSession=c(r._OrtCreateSession,()=>r._OrtCreateSession,ee=>r._OrtCreateSession=ee),r._OrtRun=g(c(r._OrtRun,()=>r._OrtRun,ee=>r._OrtRun=ee)),r._OrtRunWithBinding=g(c(r._OrtRunWithBinding,()=>r._OrtRunWithBinding,ee=>r._OrtRunWithBinding=ee)),r._OrtBindInput=c(r._OrtBindInput,()=>r._OrtBindInput,ee=>r._OrtBindInput=ee),r.jsepRegisterBuffer=(ee,he,R,ie)=>s.registerBuffer(ee,he,R,ie),r.jsepGetBuffer=ee=>s.getBuffer(ee),r.jsepCreateDownloader=(ee,he,R)=>s.createDownloader(ee,he,R),r.jsepOnReleaseSession=ee=>{s.onReleaseSession(ee)},r.jsepOnRunStart=ee=>s.onRunStart(ee)};var u=Object.assign({},r),a="./this.program",p=(s,c)=>{throw c},m=typeof window=="object",h=typeof importScripts=="function",d=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",y="",v,S,w;if(d){var x=(io(),pr(oo)),E=(so(),pr(ao));y=h?E.dirname(y)+"/":__dirname+"/",v=(s,c)=>(s=ae(s)?new URL(s):E.normalize(s),x.readFileSync(s,c?void 0:"utf8")),w=s=>(s=v(s,!0),s.buffer||(s=new Uint8Array(s)),s),S=(s,c,g,$=!0)=>{s=ae(s)?new URL(s):E.normalize(s),x.readFile(s,$?void 0:"utf8",(I,B)=>{I?g(I):c($?B.buffer:B)})},!r.thisProgram&&1<process.argv.length&&(a=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),p=(s,c)=>{throw process.exitCode=s,c},r.inspect=()=>"[Emscripten Module object]"}else(m||h)&&(h?y=self.location.href:typeof document<"u"&&document.currentScript&&(y=document.currentScript.src),e&&(y=e),y.indexOf("blob:")!==0?y=y.substr(0,y.replace(/[?#].*/,"").lastIndexOf("/")+1):y="",v=s=>{var c=new XMLHttpRequest;return c.open("GET",s,!1),c.send(null),c.responseText},h&&(w=s=>{var c=new XMLHttpRequest;return c.open("GET",s,!1),c.responseType="arraybuffer",c.send(null),new Uint8Array(c.response)}),S=(s,c,g)=>{var $=new XMLHttpRequest;$.open("GET",s,!0),$.responseType="arraybuffer",$.onload=()=>{$.status==200||$.status==0&&$.response?c($.response):g()},$.onerror=g,$.send(null)});var C=console.log.bind(console),_=console.error.bind(console);Object.assign(r,u),u=null,typeof WebAssembly!="object"&&Ke("no native wasm support detected");var T,O=!1,z,M,N,j,ue,k,te,Be,Ue,$e,we;function de(){var s=T.buffer;r.HEAP8=M=new Int8Array(s),r.HEAP16=j=new Int16Array(s),r.HEAPU8=N=new Uint8Array(s),r.HEAPU16=ue=new Uint16Array(s),r.HEAP32=k=new Int32Array(s),r.HEAPU32=te=new Uint32Array(s),r.HEAPF32=Be=new Float32Array(s),r.HEAPF64=we=new Float64Array(s),r.HEAP64=Ue=new BigInt64Array(s),r.HEAPU64=$e=new BigUint64Array(s)}var Pe=[],xe=[],oe=[],_e=0,Oe=null,ke=null;function Ke(s){throw s="Aborted("+s+")",_(s),O=!0,z=1,s=new WebAssembly.RuntimeError(s+". Build with -sASSERTIONS for more info."),i(s),s}var F=s=>s.startsWith("data:application/octet-stream;base64,"),ae=s=>s.startsWith("file://"),ge;if(ge="ort-wasm-simd.wasm",!F(ge)){var ht=ge;ge=r.locateFile?r.locateFile(ht,y):y+ht}function Ye(s){if(w)return w(s);throw"both async and sync fetching of the wasm failed"}function Ne(s){if(m||h){if(typeof fetch=="function"&&!ae(s))return fetch(s,{credentials:"same-origin"}).then(c=>{if(!c.ok)throw"failed to load wasm binary file at \'"+s+"\'";return c.arrayBuffer()}).catch(()=>Ye(s));if(S)return new Promise((c,g)=>{S(s,$=>c(new Uint8Array($)),g)})}return Promise.resolve().then(()=>Ye(s))}function Mt(s,c,g){return Ne(s).then($=>WebAssembly.instantiate($,c)).then($=>$).then(g,$=>{_(`failed to asynchronously prepare wasm: ${$}`),Ke($)})}function Fe(s,c){var g=ge;return typeof WebAssembly.instantiateStreaming!="function"||F(g)||ae(g)||d||typeof fetch!="function"?Mt(g,s,c):fetch(g,{credentials:"same-origin"}).then($=>WebAssembly.instantiateStreaming($,s).then(c,function(I){return _(`wasm streaming compile failed: ${I}`),_("falling back to ArrayBuffer instantiation"),Mt(g,s,c)}))}var He={945680:(s,c,g,$)=>{if(typeof r>"u"||!r.gb)return 1;if(s=qe(s>>>0),s.startsWith("./")&&(s=s.substring(2)),s=r.gb.get(s),!s)return 2;if(c>>>=0,g>>>=0,c+g>s.byteLength)return 3;try{return N.set(s.subarray(c,c+g),$>>>0>>>0),0}catch{return 4}},946181:()=>{r.wb()},946212:()=>{r.xb()},946241:()=>{r.Bb()},946266:s=>r.vb(s),946299:s=>r.zb(s),946331:(s,c,g)=>{r.ob(s,c,g,!0)},946370:(s,c,g)=>{r.ob(s,c,g)},946403:s=>{r.Sa("Abs",s,void 0)},946454:s=>{r.Sa("Neg",s,void 0)},946505:s=>{r.Sa("Floor",s,void 0)},946558:s=>{r.Sa("Ceil",s,void 0)},946610:s=>{r.Sa("Reciprocal",s,void 0)},946668:s=>{r.Sa("Sqrt",s,void 0)},946720:s=>{r.Sa("Exp",s,void 0)},946771:s=>{r.Sa("Erf",s,void 0)},946822:s=>{r.Sa("Sigmoid",s,void 0)},946877:(s,c,g)=>{r.Sa("HardSigmoid",s,{alpha:c,beta:g})},946956:s=>{r.Sa("Log",s,void 0)},947007:s=>{r.Sa("Sin",s,void 0)},947058:s=>{r.Sa("Cos",s,void 0)},947109:s=>{r.Sa("Tan",s,void 0)},947160:s=>{r.Sa("Asin",s,void 0)},947212:s=>{r.Sa("Acos",s,void 0)},947264:s=>{r.Sa("Atan",s,void 0)},947316:s=>{r.Sa("Sinh",s,void 0)},947368:s=>{r.Sa("Cosh",s,void 0)},947420:s=>{r.Sa("Asinh",s,void 0)},947473:s=>{r.Sa("Acosh",s,void 0)},947526:s=>{r.Sa("Atanh",s,void 0)},947579:s=>{r.Sa("Tanh",s,void 0)},947631:s=>{r.Sa("Not",s,void 0)},947682:(s,c,g)=>{r.Sa("Clip",s,{min:c,max:g})},947751:s=>{r.Sa("Clip",s,void 0)},947803:(s,c)=>{r.Sa("Elu",s,{alpha:c})},947861:s=>{r.Sa("Relu",s,void 0)},947913:(s,c)=>{r.Sa("LeakyRelu",s,{alpha:c})},947977:(s,c)=>{r.Sa("ThresholdedRelu",s,{alpha:c})},948047:(s,c)=>{r.Sa("Cast",s,{to:c})},948105:s=>{r.Sa("Add",s,void 0)},948156:s=>{r.Sa("Sub",s,void 0)},948207:s=>{r.Sa("Mul",s,void 0)},948258:s=>{r.Sa("Div",s,void 0)},948309:s=>{r.Sa("Pow",s,void 0)},948360:s=>{r.Sa("Equal",s,void 0)},948413:s=>{r.Sa("Greater",s,void 0)},948468:s=>{r.Sa("GreaterOrEqual",s,void 0)},948530:s=>{r.Sa("Less",s,void 0)},948582:s=>{r.Sa("LessOrEqual",s,void 0)},948641:(s,c,g,$,I)=>{r.Sa("ReduceMean",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(k.subarray($>>>0,I>>>0)):[]})},948800:(s,c,g,$,I)=>{r.Sa("ReduceMax",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(k.subarray($>>>0,I>>>0)):[]})},948958:(s,c,g,$,I)=>{r.Sa("ReduceMin",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(k.subarray($>>>0,I>>>0)):[]})},949116:(s,c,g,$,I)=>{r.Sa("ReduceProd",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(k.subarray($>>>0,I>>>0)):[]})},949275:(s,c,g,$,I)=>{r.Sa("ReduceSum",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(k.subarray($>>>0,I>>>0)):[]})},949433:(s,c,g,$,I)=>{r.Sa("ReduceL1",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(k.subarray($>>>0,I>>>0)):[]})},949590:(s,c,g,$,I)=>{r.Sa("ReduceL2",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(k.subarray($>>>0,I>>>0)):[]})},949747:(s,c,g,$,I)=>{r.Sa("ReduceLogSum",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(k.subarray($>>>0,I>>>0)):[]})},949908:(s,c,g,$,I)=>{r.Sa("ReduceSumSquare",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(k.subarray($>>>0,I>>>0)):[]})},950072:(s,c,g,$,I)=>{r.Sa("ReduceLogSumExp",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(k.subarray($>>>0,I>>>0)):[]})},950236:s=>{r.Sa("Where",s,void 0)},950289:(s,c,g)=>{r.Sa("Transpose",s,{perm:c?Array.from(k.subarray(c>>>0,g>>>0)):[]})},950397:(s,c,g,$,I,B,H,q,X,Y,ce,ee,he,R,ie)=>{r.Sa("ConvTranspose",s,{format:X?"NHWC":"NCHW",autoPad:c,dilations:[g],group:$,kernel_shape:[I],pads:[B,H],strides:[q],wIsConst:()=>!!M[Y>>>0],outputPadding:ce?Array.from(k.subarray(ce>>>0,ee>>>0)):[],outputShape:he?Array.from(k.subarray(he>>>0,R>>>0)):[],activation:qe(ie)})},950799:(s,c,g,$,I,B,H,q,X,Y,ce,ee,he,R)=>{r.Sa("ConvTranspose",s,{format:q?"NHWC":"NCHW",autoPad:c,dilations:Array.from(k.subarray(g>>>0,(g>>>0)+2>>>0)),group:$,kernelShape:Array.from(k.subarray(I>>>0,(I>>>0)+2>>>0)),pads:Array.from(k.subarray(B>>>0,(B>>>0)+4>>>0)),strides:Array.from(k.subarray(H>>>0,(H>>>0)+2>>>0)),wIsConst:()=>!!M[X>>>0],outputPadding:Y?Array.from(k.subarray(Y>>>0,ce>>>0)):[],outputShape:ee?Array.from(k.subarray(ee>>>0,he>>>0)):[],activation:qe(R)})},951364:(s,c,g,$,I,B,H,q,X,Y,ce,ee,he,R,ie)=>{r.Sa("ConvTranspose",s,{format:X?"NHWC":"NCHW",autoPad:c,dilations:[g],group:$,kernel_shape:[I],pads:[B,H],strides:[q],wIsConst:()=>!!M[Y>>>0],outputPadding:ce?Array.from(k.subarray(ce>>>0,ee>>>0)):[],outputShape:he?Array.from(k.subarray(he>>>0,R>>>0)):[],activation:qe(ie)})},951766:(s,c,g,$,I,B,H,q,X,Y,ce,ee,he,R)=>{r.Sa("ConvTranspose",s,{format:q?"NHWC":"NCHW",autoPad:c,dilations:Array.from(k.subarray(g>>>0,(g>>>0)+2>>>0)),group:$,kernelShape:Array.from(k.subarray(I>>>0,(I>>>0)+2>>>0)),pads:Array.from(k.subarray(B>>>0,(B>>>0)+4>>>0)),strides:Array.from(k.subarray(H>>>0,(H>>>0)+2>>>0)),wIsConst:()=>!!M[X>>>0],outputPadding:Y?Array.from(k.subarray(Y>>>0,ce>>>0)):[],outputShape:ee?Array.from(k.subarray(ee>>>0,he>>>0)):[],activation:qe(R)})},952331:(s,c)=>{r.Sa("GlobalAveragePool",s,{format:c?"NHWC":"NCHW"})},952422:(s,c,g,$,I,B,H,q,X,Y,ce,ee,he,R,ie,ve)=>{r.Sa("AveragePool",s,{format:ve?"NHWC":"NCHW",auto_pad:c,ceil_mode:g,count_include_pad:$,storage_order:I,dilations:[B,H],kernel_shape:[q,X],pads:[Y,ce,ee,he],strides:[R,ie]})},952706:(s,c)=>{r.Sa("GlobalAveragePool",s,{format:c?"NHWC":"NCHW"})},952797:(s,c,g,$,I,B,H,q,X,Y,ce,ee,he,R,ie,ve)=>{r.Sa("AveragePool",s,{format:ve?"NHWC":"NCHW",auto_pad:c,ceil_mode:g,count_include_pad:$,storage_order:I,dilations:[B,H],kernel_shape:[q,X],pads:[Y,ce,ee,he],strides:[R,ie]})},953081:(s,c)=>{r.Sa("GlobalMaxPool",s,{format:c?"NHWC":"NCHW"})},953168:(s,c,g,$,I,B,H,q,X,Y,ce,ee,he,R,ie,ve)=>{r.Sa("MaxPool",s,{format:ve?"NHWC":"NCHW",auto_pad:c,ceil_mode:g,count_include_pad:$,storage_order:I,dilations:[B,H],kernel_shape:[q,X],pads:[Y,ce,ee,he],strides:[R,ie]})},953448:(s,c)=>{r.Sa("GlobalMaxPool",s,{format:c?"NHWC":"NCHW"})},953535:(s,c,g,$,I,B,H,q,X,Y,ce,ee,he,R,ie,ve)=>{r.Sa("MaxPool",s,{format:ve?"NHWC":"NCHW",auto_pad:c,ceil_mode:g,count_include_pad:$,storage_order:I,dilations:[B,H],kernel_shape:[q,X],pads:[Y,ce,ee,he],strides:[R,ie]})},953815:(s,c,g,$,I)=>{r.Sa("Gemm",s,{alpha:c,beta:g,transA:$,transB:I})},953919:s=>{r.Sa("MatMul",s,void 0)},953973:(s,c,g,$)=>{r.Sa("ArgMax",s,{keepDims:!!c,selectLastIndex:!!g,axis:$})},954081:(s,c,g,$)=>{r.Sa("ArgMin",s,{keepDims:!!c,selectLastIndex:!!g,axis:$})},954189:(s,c)=>{r.Sa("Softmax",s,{axis:c})},954252:(s,c)=>{r.Sa("Concat",s,{axis:c})},954312:(s,c,g,$,I)=>{r.Sa("Split",s,{axis:c,numOutputs:g,splitSizes:$?Array.from(k.subarray($>>>0,I>>>0)):[]})},954452:s=>{r.Sa("Expand",s,void 0)},954506:(s,c)=>{r.Sa("Gather",s,{axis:Number(c)})},954577:(s,c)=>{r.Sa("GatherElements",s,{axis:Number(c)})},954656:(s,c,g,$,I,B,H,q,X,Y,ce)=>{r.Sa("Resize",s,{antialias:c,axes:g?Array.from(k.subarray(g>>>0,$>>>0)):[],coordinateTransformMode:qe(I),cubicCoeffA:B,excludeOutside:H,extrapolationValue:q,keepAspectRatioPolicy:qe(X),mode:qe(Y),nearestMode:qe(ce)})},955002:(s,c,g,$,I,B,H)=>{r.Sa("Slice",s,{starts:c?Array.from(k.subarray(c>>>0,g>>>0)):[],ends:$?Array.from(k.subarray($>>>0,I>>>0)):[],axes:B?Array.from(k.subarray(B>>>0,H>>>0)):[]})},955218:s=>{r.Sa("Tile",s,void 0)},955270:(s,c,g)=>{r.Sa("LayerNormalization",s,{axis:Number(c),epsilon:Number(g)})},955377:(s,c,g)=>{r.Sa("InstanceNormalization",s,{epsilon:c,format:g?"NHWC":"NCHW"})},955491:(s,c,g)=>{r.Sa("InstanceNormalization",s,{epsilon:c,format:g?"NHWC":"NCHW"})},955605:s=>{r.Sa("Range",s,void 0)},955658:(s,c)=>{r.Sa("Einsum",s,{equation:qe(c)})},955739:(s,c,g,$,I)=>{r.Sa("Pad",s,{mode:c,value:g,pads:$?Array.from(k.subarray($>>>0,I>>>0)):[]})},955866:(s,c,g,$,I,B)=>{r.Sa("BatchNormalization",s,{epsilon:c,momentum:g,spatial:!!I,trainingMode:!!$,format:B?"NHWC":"NCHW"})},956035:(s,c,g,$,I,B)=>{r.Sa("BatchNormalization",s,{epsilon:c,momentum:g,spatial:!!I,trainingMode:!!$,format:B?"NHWC":"NCHW"})},956204:(s,c,g)=>{r.Sa("CumSum",s,{exclusive:Number(c),reverse:Number(g)})},956301:(s,c,g,$,I,B,H,q,X)=>{r.Sa("Attention",s,{numHeads:c,isUnidirectional:g,maskFilterValue:$,scale:I,doRotary:B,qkvHiddenSizes:H?Array.from(k.subarray(Number(q)>>>0,Number(q)+H>>>0)):[],pastPresentShareBuffer:!!X})},956573:s=>{r.Sa("Gelu",s,void 0)},956625:(s,c,g,$,I,B)=>{r.Sa("MultiHeadAttention",s,{numHeads:c,isUnidirectional:g,maskFilterValue:$,scale:I,doRotary:B})},956784:s=>{r.Sa("BiasAdd",s,void 0)},956839:s=>{r.Sa("BiasSplitGelu",s,void 0)},956900:(s,c)=>{r.Sa("SkipLayerNormalization",s,{epsilon:c})},956981:(s,c,g,$,I,B,H,q,X,Y,ce,ee,he)=>{r.Sa("Conv",s,{format:X?"NHWC":"NCHW",auto_pad:c,dilations:[g],group:$,kernel_shape:[I],pads:B?Array.from(k.subarray(B>>>0,H>>>0)):[],strides:[q],w_is_const:()=>!!M[Y>>>0],activation:qe(ce),activation_params:ee?Array.from(Be.subarray(ee>>>0,he>>>0)):[]})},957351:(s,c,g,$,I,B,H,q,X,Y,ce,ee,he,R,ie,ve)=>{r.Sa("Conv",s,{format:ee?"NHWC":"NCHW",auto_pad:c,dilations:[g,$],group:I,kernel_shape:[B,H],pads:q?Array.from(k.subarray(q>>>0,X>>>0)):[],strides:[Y,ce],w_is_const:()=>!!M[he>>>0],activation:qe(R),activation_params:ie?Array.from(Be.subarray(ie>>>0,ve>>>0)):[]})},957742:s=>{r.Ab(s)},957776:(s,c)=>r.Cb(s,c,r.fb.Db,r.fb.errors)};function Rt(s){this.name="ExitStatus",this.message=`Program terminated with exit(${s})`,this.status=s}function gt(s){this.cb=s-24,this.rb=function(c){te[this.cb+4>>>2>>>0]=c},this.qb=function(c){te[this.cb+8>>>2>>>0]=c},this.kb=function(c,g){this.jb(),this.rb(c),this.qb(g)},this.jb=function(){te[this.cb+16>>>2>>>0]=0}}var zt=0,Lt=0,yr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Ut=(s,c,g)=>{c>>>=0;var $=c+g;for(g=c;s[g]&&!(g>=$);)++g;if(16<g-c&&s.buffer&&yr)return yr.decode(s.subarray(c,g));for($="";c<g;){var I=s[c++];if(I&128){var B=s[c++]&63;if((I&224)==192)$+=String.fromCharCode((I&31)<<6|B);else{var H=s[c++]&63;I=(I&240)==224?(I&15)<<12|B<<6|H:(I&7)<<18|B<<12|H<<6|s[c++]&63,65536>I?$+=String.fromCharCode(I):(I-=65536,$+=String.fromCharCode(55296|I>>10,56320|I&1023))}}else $+=String.fromCharCode(I)}return $},qe=(s,c)=>(s>>>=0)?Ut(N,s,c):"",Dt=s=>{for(var c=0,g=0;g<s.length;++g){var $=s.charCodeAt(g);127>=$?c++:2047>=$?c+=2:55296<=$&&57343>=$?(c+=4,++g):c+=3}return c},_t=(s,c,g,$)=>{if(g>>>=0,!(0<$))return 0;var I=g;$=g+$-1;for(var B=0;B<s.length;++B){var H=s.charCodeAt(B);if(55296<=H&&57343>=H){var q=s.charCodeAt(++B);H=65536+((H&1023)<<10)|q&1023}if(127>=H){if(g>=$)break;c[g++>>>0]=H}else{if(2047>=H){if(g+1>=$)break;c[g++>>>0]=192|H>>6}else{if(65535>=H){if(g+2>=$)break;c[g++>>>0]=224|H>>12}else{if(g+3>=$)break;c[g++>>>0]=240|H>>18,c[g++>>>0]=128|H>>12&63}c[g++>>>0]=128|H>>6&63}c[g++>>>0]=128|H&63}}return c[g>>>0]=0,g-I},br=s=>{if(s===null)return"null";var c=typeof s;return c==="object"||c==="array"||c==="function"?s.toString():""+s},qr,at=s=>{for(var c="";N[s>>>0];)c+=qr[N[s++>>>0]];return c},wr={},Ft={},vr={},mt;function jr(s,c,g={}){var $=c.name;if(!s)throw new mt(`type "${$}" must have a positive integer typeid pointer`);if(Ft.hasOwnProperty(s)){if(g.tb)return;throw new mt(`Cannot register type \'${$}\' twice`)}Ft[s]=c,delete vr[s],wr.hasOwnProperty(s)&&(c=wr[s],delete wr[s],c.forEach(I=>I()))}function Ze(s,c,g={}){if(!("argPackAdvance"in c))throw new TypeError("registerType registeredInstance requires argPackAdvance");jr(s,c,g)}var $r=(s,c,g)=>{switch(c){case 1:return g?$=>M[$>>>0>>>0]:$=>N[$>>>0>>>0];case 2:return g?$=>j[$>>>1>>>0]:$=>ue[$>>>1>>>0];case 4:return g?$=>k[$>>>2>>>0]:$=>te[$>>>2>>>0];case 8:return g?$=>Ue[$>>>3]:$=>$e[$>>>3];default:throw new TypeError(`invalid integer width (${c}): ${s}`)}};function _r(){this.$a=[void 0],this.nb=[]}var De=new _r;function Sr(s){s>>>=0,s>=De.cb&&--De.get(s).pb===0&&De.jb(s)}var Se=s=>{if(!s)throw new mt("Cannot use deleted val. handle = "+s);return De.get(s).value},st=s=>{switch(s){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return De.kb({pb:1,value:s})}};function nr(s){return this.fromWireType(k[s>>>2>>>0])}var xr=(s,c)=>{switch(c){case 4:return function(g){return this.fromWireType(Be[g>>>2>>>0])};case 8:return function(g){return this.fromWireType(we[g>>>3>>>0])};default:throw new TypeError(`invalid float width (${c}): ${s}`)}};function Fn(s){return this.fromWireType(te[s>>>2>>>0])}var Cr=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,qn=(s,c)=>{for(var g=s>>1,$=g+c/2;!(g>=$)&&ue[g>>>0];)++g;if(g<<=1,32<g-s&&Cr)return Cr.decode(N.subarray(s>>>0,g>>>0));for(g="",$=0;!($>=c/2);++$){var I=j[s+2*$>>>1>>>0];if(I==0)break;g+=String.fromCharCode(I)}return g},me=(s,c,g)=>{if(g??=2147483647,2>g)return 0;g-=2;var $=c;g=g<2*s.length?g/2:s.length;for(var I=0;I<g;++I)j[c>>>1>>>0]=s.charCodeAt(I),c+=2;return j[c>>>1>>>0]=0,c-$},or=s=>2*s.length,Kr=(s,c)=>{for(var g=0,$="";!(g>=c/4);){var I=k[s+4*g>>>2>>>0];if(I==0)break;++g,65536<=I?(I-=65536,$+=String.fromCharCode(55296|I>>10,56320|I&1023)):$+=String.fromCharCode(I)}return $},jn=(s,c,g)=>{if(c>>>=0,g??=2147483647,4>g)return 0;var $=c;g=$+g-4;for(var I=0;I<s.length;++I){var B=s.charCodeAt(I);if(55296<=B&&57343>=B){var H=s.charCodeAt(++I);B=65536+((B&1023)<<10)|H&1023}if(k[c>>>2>>>0]=B,c+=4,c+4>g)break}return k[c>>>2>>>0]=0,c-$},Yr=s=>{for(var c=0,g=0;g<s.length;++g){var $=s.charCodeAt(g);55296<=$&&57343>=$&&++g,c+=4}return c},Ar=(s,c)=>{var g=Ft[s];if(g===void 0)throw s=Yt(s),g=at(s),ut(s),new mt(c+" has unknown type "+g);return g},Ir=(s,c,g)=>{var $=[];return s=s.toWireType($,g),$.length&&(te[c>>>2>>>0]=st($)),s},qt=s=>{try{s()}catch(c){Ke(c)}};function Zr(){var s=le,c={};for(let[g,$]of Object.entries(s))c[g]=typeof $=="function"?function(){Vt.push(g);try{return $.apply(null,arguments)}finally{O||(Vt.pop(),tt&&yt===1&&Vt.length===0&&(yt=0,qt(pn),typeof Fibers<"u"&&Fibers.Kb()))}}:$;return c}var yt=0,tt=null,Tr=0,Vt=[],Er={},Pr={},Jr=0,ir=null,Xr=[];function Qr(){return new Promise((s,c)=>{ir={resolve:s,reject:c}})}function en(){var s=Wt(65548),c=s+12;te[s>>>2>>>0]=c,te[s+4>>>2>>>0]=c+65536,c=Vt[0];var g=Er[c];return g===void 0&&(g=Jr++,Er[c]=g,Pr[g]=c),k[s+8>>>2>>>0]=g,s}function tn(s){if(!O){if(yt===0){var c=!1,g=!1;s(($=0)=>{if(!O&&(Tr=$,c=!0,g)){yt=2,qt(()=>bt(tt)),typeof Browser<"u"&&Browser.lb.sb&&Browser.lb.resume(),$=!1;try{var I=(0,le[Pr[k[tt+8>>>2>>>0]]])()}catch(q){I=q,$=!0}var B=!1;if(!tt){var H=ir;H&&(ir=null,($?H.reject:H.resolve)(I),B=!0)}if($&&!B)throw I}}),g=!0,c||(yt=1,tt=en(),typeof Browser<"u"&&Browser.lb.sb&&Browser.lb.pause(),qt(()=>Zt(tt)))}else yt===2?(yt=0,qt(pt),ut(tt),tt=null,Xr.forEach($=>{if(!O)try{$();try{z=z=$=z,r.onExit?.($),O=!0,p($,new Rt($))}catch(I){I instanceof Rt||I=="unwind"||p(1,I)}}catch(I){I instanceof Rt||I=="unwind"||p(1,I)}})):Ke(`invalid state: ${yt}`);return Tr}}function Or(s){return tn(c=>{s().then(c)})}var jt=[],rn={},ar=s=>{var c=rn[s];return c===void 0?at(s):c},kr=()=>typeof globalThis=="object"?globalThis:Function("return this")(),ct=s=>{var c=jt.length;return jt.push(s),c},Rr=(s,c)=>{for(var g=Array(s),$=0;$<s;++$)g[$]=Ar(te[c+4*$>>>2>>>0],"parameter "+$);return g},sr=(s,c)=>Object.defineProperty(c,"name",{value:s});function Kn(s){var c=Function;if(!(c instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof c} which is not a function`);var g=sr(c.name||"unknownFunctionName",function(){});return g.prototype=c.prototype,g=new g,s=c.apply(g,s),s instanceof Object?s:g}var rt=s=>s%4===0&&(s%100!==0||s%400===0),nn=[0,31,60,91,121,152,182,213,244,274,305,335],ft=[0,31,59,90,120,151,181,212,243,273,304,334],Dr=s=>{var c=Dt(s)+1,g=Wt(c);return g&&_t(s,N,g,c),g},ur=[],nt=(s,c)=>{ur.length=0;for(var g;g=N[s++>>>0];){var $=g!=105;$&=g!=112,c+=$&&c%8?4:0,ur.push(g==112?te[c>>>2>>>0]:g==106?Ue[c>>>3]:g==105?k[c>>>2>>>0]:we[c>>>3>>>0]),c+=$?8:4}return ur},Kt={},Je=()=>{if(!ot){var s={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:a||"./this.program"},c;for(c in Kt)Kt[c]===void 0?delete s[c]:s[c]=Kt[c];var g=[];for(c in s)g.push(`${c}=${s[c]}`);ot=g}return ot},ot,on=[null,[],[]],an=[31,29,31,30,31,30,31,31,30,31,30,31],sn=[31,28,31,30,31,30,31,31,30,31,30,31];function un(s){var c=Array(Dt(s)+1);return _t(s,c,0,c.length),c}function ln(s,c,g,$){function I(R,ie,ve){for(R=typeof R=="number"?R.toString():R||"";R.length<ie;)R=ve[0]+R;return R}function B(R,ie){return I(R,ie,"0")}function H(R,ie){function ve(lt){return 0>lt?-1:0<lt?1:0}var Xe;return(Xe=ve(R.getFullYear()-ie.getFullYear()))===0&&(Xe=ve(R.getMonth()-ie.getMonth()))===0&&(Xe=ve(R.getDate()-ie.getDate())),Xe}function q(R){switch(R.getDay()){case 0:return new Date(R.getFullYear()-1,11,29);case 1:return R;case 2:return new Date(R.getFullYear(),0,3);case 3:return new Date(R.getFullYear(),0,2);case 4:return new Date(R.getFullYear(),0,1);case 5:return new Date(R.getFullYear()-1,11,31);case 6:return new Date(R.getFullYear()-1,11,30)}}function X(R){var ie=R.ab;for(R=new Date(new Date(R.bb+1900,0,1).getTime());0<ie;){var ve=R.getMonth(),Xe=(rt(R.getFullYear())?an:sn)[ve];if(ie>Xe-R.getDate())ie-=Xe-R.getDate()+1,R.setDate(1),11>ve?R.setMonth(ve+1):(R.setMonth(0),R.setFullYear(R.getFullYear()+1));else{R.setDate(R.getDate()+ie);break}}return ve=new Date(R.getFullYear()+1,0,4),ie=q(new Date(R.getFullYear(),0,4)),ve=q(ve),0>=H(ie,R)?0>=H(ve,R)?R.getFullYear()+1:R.getFullYear():R.getFullYear()-1}s>>>=0,c>>>=0,g>>>=0,$>>>=0;var Y=te[$+40>>>2>>>0];$={Gb:k[$>>>2>>>0],Fb:k[$+4>>>2>>>0],hb:k[$+8>>>2>>>0],mb:k[$+12>>>2>>>0],ib:k[$+16>>>2>>>0],bb:k[$+20>>>2>>>0],Wa:k[$+24>>>2>>>0],ab:k[$+28>>>2>>>0],Jb:k[$+32>>>2>>>0],Eb:k[$+36>>>2>>>0],Hb:Y?qe(Y):""},g=qe(g),Y={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var ce in Y)g=g.replace(new RegExp(ce,"g"),Y[ce]);var ee="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),he="January February March April May June July August September October November December".split(" ");Y={"%a":R=>ee[R.Wa].substring(0,3),"%A":R=>ee[R.Wa],"%b":R=>he[R.ib].substring(0,3),"%B":R=>he[R.ib],"%C":R=>B((R.bb+1900)/100|0,2),"%d":R=>B(R.mb,2),"%e":R=>I(R.mb,2," "),"%g":R=>X(R).toString().substring(2),"%G":R=>X(R),"%H":R=>B(R.hb,2),"%I":R=>(R=R.hb,R==0?R=12:12<R&&(R-=12),B(R,2)),"%j":R=>{for(var ie=0,ve=0;ve<=R.ib-1;ie+=(rt(R.bb+1900)?an:sn)[ve++]);return B(R.mb+ie,3)},"%m":R=>B(R.ib+1,2),"%M":R=>B(R.Fb,2),"%n":()=>`\n`,"%p":R=>0<=R.hb&&12>R.hb?"AM":"PM","%S":R=>B(R.Gb,2),"%t":()=>"	","%u":R=>R.Wa||7,"%U":R=>B(Math.floor((R.ab+7-R.Wa)/7),2),"%V":R=>{var ie=Math.floor((R.ab+7-(R.Wa+6)%7)/7);if(2>=(R.Wa+371-R.ab-2)%7&&ie++,ie)ie==53&&(ve=(R.Wa+371-R.ab)%7,ve==4||ve==3&&rt(R.bb)||(ie=1));else{ie=52;var ve=(R.Wa+7-R.ab-1)%7;(ve==4||ve==5&&rt(R.bb%400-1))&&ie++}return B(ie,2)},"%w":R=>R.Wa,"%W":R=>B(Math.floor((R.ab+7-(R.Wa+6)%7)/7),2),"%y":R=>(R.bb+1900).toString().substring(2),"%Y":R=>R.bb+1900,"%z":R=>{R=R.Eb;var ie=0<=R;return R=Math.abs(R)/60,(ie?"+":"-")+("0000"+(R/60*100+R%60)).slice(-4)},"%Z":R=>R.Hb,"%%":()=>"%"},g=g.replace(/%%/g,"\\0\\0");for(ce in Y)g.includes(ce)&&(g=g.replace(new RegExp(ce,"g"),Y[ce]($)));return g=g.replace(/\\0\\0/g,"%"),ce=un(g),ce.length>c?0:(M.set(ce,s>>>0),ce.length-1)}for(var dn=Array(256),lr=0;256>lr;++lr)dn[lr]=String.fromCharCode(lr);qr=dn,mt=r.BindingError=class extends Error{constructor(s){super(s),this.name="BindingError"}},r.InternalError=class extends Error{constructor(s){super(s),this.name="InternalError"}},Object.assign(_r.prototype,{get(s){return this.$a[s]},has(s){return this.$a[s]!==void 0},kb(s){var c=this.nb.pop()||this.$a.length;return this.$a[c]=s,c},jb(s){this.$a[s]=void 0,this.nb.push(s)}}),De.$a.push({value:void 0},{value:null},{value:!0},{value:!1}),De.cb=De.$a.length,r.count_emval_handles=()=>{for(var s=0,c=De.cb;c<De.$a.length;++c)De.$a[c]!==void 0&&++s;return s};var Yn={ia:function(s,c,g){return Or(async()=>{await r.yb(s,c,g)})},a:function(s,c,g){throw s>>>=0,new gt(s).kb(c>>>0,g>>>0),zt=s,Lt++,zt},x:function(){return 0},ba:function(){},O:function(){},Q:function(){},ca:function(){return 0},$:function(){},W:function(){},_:function(){},D:function(){},P:function(){},M:function(){},aa:function(){},N:function(){},G:function(s,c,g,$,I){c>>>=0,c=at(c);var B=c.indexOf("u")!=-1;B&&(I=(1n<<64n)-1n),Ze(s>>>0,{name:c,fromWireType:H=>H,toWireType:function(H,q){if(typeof q!="bigint"&&typeof q!="number")throw new TypeError(`Cannot convert "${br(q)}" to ${this.name}`);if(q<$||q>I)throw new TypeError(`Passing a number "${br(q)}" from JS side to C/C++ side to an argument of type "${c}", which is outside the valid range [${$}, ${I}]!`);return q},argPackAdvance:8,readValueFromPointer:$r(c,g>>>0,!B),eb:null})},ga:function(s,c,g,$){c=at(c>>>0),Ze(s>>>0,{name:c,fromWireType:function(I){return!!I},toWireType:function(I,B){return B?g:$},argPackAdvance:8,readValueFromPointer:function(I){return this.fromWireType(N[I>>>0])},eb:null})},fa:function(s,c){c=at(c>>>0),Ze(s>>>0,{name:c,fromWireType:g=>{var $=Se(g);return Sr(g),$},toWireType:(g,$)=>st($),argPackAdvance:8,readValueFromPointer:nr,eb:null})},F:function(s,c,g){c=at(c>>>0),Ze(s>>>0,{name:c,fromWireType:$=>$,toWireType:($,I)=>I,argPackAdvance:8,readValueFromPointer:xr(c,g>>>0),eb:null})},t:function(s,c,g,$,I){if(s>>>=0,g>>>=0,c=at(c>>>0),I===-1&&(I=4294967295),I=q=>q,$===0){var B=32-8*g;I=q=>q<<B>>>B}var H=c.includes("unsigned")?function(q,X){return X>>>0}:function(q,X){return X};Ze(s,{name:c,fromWireType:I,toWireType:H,argPackAdvance:8,readValueFromPointer:$r(c,g,$!==0),eb:null})},n:function(s,c,g){function $(B){return new I(M.buffer,te[B+4>>>2>>>0],te[B>>>2>>>0])}var I=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][c];g=at(g>>>0),Ze(s>>>0,{name:g,fromWireType:$,argPackAdvance:8,readValueFromPointer:$},{tb:!0})},H:function(s,c){c=at(c>>>0);var g=c==="std::string";Ze(s>>>0,{name:c,fromWireType:function($){var I=te[$>>>2>>>0],B=$+4;if(g)for(var H=B,q=0;q<=I;++q){var X=B+q;if(q==I||N[X>>>0]==0){if(H=qe(H,X-H),Y===void 0)var Y=H;else Y+=String.fromCharCode(0),Y+=H;H=X+1}}else{for(Y=Array(I),q=0;q<I;++q)Y[q]=String.fromCharCode(N[B+q>>>0]);Y=Y.join("")}return ut($),Y},toWireType:function($,I){I instanceof ArrayBuffer&&(I=new Uint8Array(I));var B=typeof I=="string";if(!(B||I instanceof Uint8Array||I instanceof Uint8ClampedArray||I instanceof Int8Array))throw new mt("Cannot pass non-string to std::string");var H=g&&B?Dt(I):I.length,q=Wt(4+H+1),X=q+4;if(te[q>>>2>>>0]=H,g&&B)_t(I,N,X,H+1);else if(B)for(B=0;B<H;++B){var Y=I.charCodeAt(B);if(255<Y)throw ut(X),new mt("String has UTF-16 code units that do not fit in 8 bits");N[X+B>>>0]=Y}else for(B=0;B<H;++B)N[X+B>>>0]=I[B];return $!==null&&$.push(ut,q),q},argPackAdvance:8,readValueFromPointer:Fn,eb($){ut($)}})},z:function(s,c,g){if(c>>>=0,g>>>=0,g=at(g),c===2)var $=qn,I=me,B=or,H=()=>ue,q=1;else c===4&&($=Kr,I=jn,B=Yr,H=()=>te,q=2);Ze(s>>>0,{name:g,fromWireType:X=>{for(var Y=te[X>>>2>>>0],ce=H(),ee,he=X+4,R=0;R<=Y;++R){var ie=X+4+R*c;(R==Y||ce[ie>>>q]==0)&&(he=$(he,ie-he),ee===void 0?ee=he:(ee+=String.fromCharCode(0),ee+=he),he=ie+c)}return ut(X),ee},toWireType:(X,Y)=>{if(typeof Y!="string")throw new mt(`Cannot pass non-string to C++ string type ${g}`);var ce=B(Y),ee=Wt(4+ce+c);return te[ee>>>2]=ce>>q,I(Y,ee+4,ce+c),X!==null&&X.push(ut,ee),ee},argPackAdvance:8,readValueFromPointer:nr,eb(X){ut(X)}})},ha:function(s,c){c=at(c>>>0),Ze(s>>>0,{ub:!0,name:c,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},da:()=>1,s:function(s,c,g){return c>>>=0,g>>>=0,s=Se(s>>>0),c=Ar(c,"emval::as"),Ir(c,g,s)},w:function(s){return s>>>=0,Or(()=>(s=Se(s),s.then(st)))},o:function(s,c,g,$){return g>>>=0,$>>>=0,s=jt[s>>>0],c=Se(c>>>0),s(null,c,g,$)},k:function(s,c,g,$,I){return g>>>=0,$>>>=0,I>>>=0,s=jt[s>>>0],c=Se(c>>>0),g=ar(g),s(c,c[g],$,I)},b:Sr,A:function(s,c){return c>>>=0,s=Se(s>>>0),c=Se(c),s==c},m:function(s){return s>>>=0,s===0?st(kr()):(s=ar(s),st(kr()[s]))},i:function(s,c,g){c=Rr(s,c>>>0);var $=c.shift();s--;var I=`return function (obj, func, destructorsRef, args) {\n`,B=0,H=[];g===0&&H.push("obj");for(var q=["retType"],X=[$],Y=0;Y<s;++Y)H.push("arg"+Y),q.push("argType"+Y),X.push(c[Y]),I+=`  var arg${Y} = argType${Y}.readValueFromPointer(args${B?"+"+B:""});\n`,B+=c[Y].argPackAdvance;for(I+=`  var rv = ${g===1?"new func":"func.call"}(${H.join(", ")});\n`,Y=0;Y<s;++Y)c[Y].deleteObject&&(I+=`  argType${Y}.deleteObject(arg${Y});\n`);return $.ub||(q.push("emval_returnValue"),X.push(Ir),I+=`  return emval_returnValue(retType, destructorsRef, rv);\n`),q.push(I+`};\n`),s=Kn(q).apply(null,X),g=`methodCaller<(${c.map(ce=>ce.name).join(", ")}) => ${$.name}>`,ct(sr(g,s))},r:function(s,c){return c>>>=0,s=Se(s>>>0),c=Se(c),st(s[c])},f:function(s){s>>>=0,4<s&&(De.get(s).pb+=1)},u:function(){return st([])},l:function(s){s=Se(s>>>0);for(var c=Array(s.length),g=0;g<s.length;g++)c[g]=s[g];return st(c)},e:function(s){return st(ar(s>>>0))},j:function(){return st({})},h:function(s){s>>>=0;for(var c=Se(s);c.length;){var g=c.pop();c.pop()(g)}Sr(s)},g:function(s,c,g){c>>>=0,g>>>=0,s=Se(s>>>0),c=Se(c),g=Se(g),s[c]=g},c:function(s,c){return c>>>=0,s=Ar(s>>>0,"_emval_take_value"),s=s.readValueFromPointer(c),st(s)},T:function(s,c){s=-9007199254740992>s||9007199254740992<s?NaN:Number(s),c>>>=0,s=new Date(1e3*s),k[c>>>2>>>0]=s.getUTCSeconds(),k[c+4>>>2>>>0]=s.getUTCMinutes(),k[c+8>>>2>>>0]=s.getUTCHours(),k[c+12>>>2>>>0]=s.getUTCDate(),k[c+16>>>2>>>0]=s.getUTCMonth(),k[c+20>>>2>>>0]=s.getUTCFullYear()-1900,k[c+24>>>2>>>0]=s.getUTCDay(),k[c+28>>>2>>>0]=(s.getTime()-Date.UTC(s.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},U:function(s,c){s=-9007199254740992>s||9007199254740992<s?NaN:Number(s),c>>>=0,s=new Date(1e3*s),k[c>>>2>>>0]=s.getSeconds(),k[c+4>>>2>>>0]=s.getMinutes(),k[c+8>>>2>>>0]=s.getHours(),k[c+12>>>2>>>0]=s.getDate(),k[c+16>>>2>>>0]=s.getMonth(),k[c+20>>>2>>>0]=s.getFullYear()-1900,k[c+24>>>2>>>0]=s.getDay(),k[c+28>>>2>>>0]=(rt(s.getFullYear())?nn:ft)[s.getMonth()]+s.getDate()-1|0,k[c+36>>>2>>>0]=-(60*s.getTimezoneOffset());var g=new Date(s.getFullYear(),6,1).getTimezoneOffset(),$=new Date(s.getFullYear(),0,1).getTimezoneOffset();k[c+32>>>2>>>0]=(g!=$&&s.getTimezoneOffset()==Math.min($,g))|0},V:function(s){s>>>=0;var c=new Date(k[s+20>>>2>>>0]+1900,k[s+16>>>2>>>0],k[s+12>>>2>>>0],k[s+8>>>2>>>0],k[s+4>>>2>>>0],k[s>>>2>>>0],0),g=k[s+32>>>2>>>0],$=c.getTimezoneOffset(),I=new Date(c.getFullYear(),6,1).getTimezoneOffset(),B=new Date(c.getFullYear(),0,1).getTimezoneOffset(),H=Math.min(B,I);return 0>g?k[s+32>>>2>>>0]=+(I!=B&&H==$):0<g!=(H==$)&&(I=Math.max(B,I),c.setTime(c.getTime()+6e4*((0<g?H:I)-$))),k[s+24>>>2>>>0]=c.getDay(),k[s+28>>>2>>>0]=(rt(c.getFullYear())?nn:ft)[c.getMonth()]+c.getDate()-1|0,k[s>>>2>>>0]=c.getSeconds(),k[s+4>>>2>>>0]=c.getMinutes(),k[s+8>>>2>>>0]=c.getHours(),k[s+12>>>2>>>0]=c.getDate(),k[s+16>>>2>>>0]=c.getMonth(),k[s+20>>>2>>>0]=c.getYear(),s=c.getTime(),isNaN(s)?(k[cn()>>>2>>>0]=61,s=-1):s/=1e3,BigInt(s)},R:function(){return-52},S:function(){},K:function(s,c,g){function $(X){return(X=X.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?X[1]:"GMT"}g>>>=0;var I=new Date().getFullYear(),B=new Date(I,0,1),H=new Date(I,6,1);I=B.getTimezoneOffset();var q=H.getTimezoneOffset();te[s>>>0>>>2>>>0]=60*Math.max(I,q),k[c>>>0>>>2>>>0]=+(I!=q),s=$(B),c=$(H),s=Dr(s),c=Dr(c),q<I?(te[g>>>2>>>0]=s,te[g+4>>>2>>>0]=c):(te[g>>>2>>>0]=c,te[g+4>>>2>>>0]=s)},v:()=>{Ke("")},d:function(s,c,g){return s>>>=0,c=nt(c>>>0,g>>>0),He[s].apply(null,c)},I:function(s,c,g){return s>>>=0,c=nt(c>>>0,g>>>0),He[s].apply(null,c)},E:()=>Date.now(),L:function(){return 4294901760},q:()=>performance.now(),J:function(s){s>>>=0;var c=N.length;if(4294901760<s)return!1;for(var g=1;4>=g;g*=2){var $=c*(1+.2/g);$=Math.min($,s+100663296);var I=Math;$=Math.max(s,$);e:{I=(I.min.call(I,4294901760,$+(65536-$%65536)%65536)-T.buffer.byteLength+65535)/65536;try{T.grow(I),de();var B=1;break e}catch{}B=void 0}if(B)return!0}return!1},Y:function(s,c){s>>>=0,c>>>=0;var g=0;return Je().forEach(($,I)=>{var B=c+g;for(I=te[s+4*I>>>2>>>0]=B,B=0;B<$.length;++B)M[I++>>>0>>>0]=$.charCodeAt(B);M[I>>>0>>>0]=0,g+=$.length+1}),0},Z:function(s,c){s>>>=0,c>>>=0;var g=Je();te[s>>>2>>>0]=g.length;var $=0;return g.forEach(I=>$+=I.length+1),te[c>>>2>>>0]=$,0},y:()=>52,C:function(){return 52},X:function(){return 70},B:function(s,c,g,$){c>>>=0,g>>>=0,$>>>=0;for(var I=0,B=0;B<g;B++){var H=te[c>>>2>>>0],q=te[c+4>>>2>>>0];c+=8;for(var X=0;X<q;X++){var Y=N[H+X>>>0],ce=on[s];Y===0||Y===10?((s===1?C:_)(Ut(ce,0)),ce.length=0):ce.push(Y)}I+=q}return te[$>>>2>>>0]=I,0},ea:ln,p:function(s,c,g,$){return ln(s>>>0,c>>>0,g>>>0,$>>>0)}},le=function(){function s(g){return le=g.exports,le=Zr(),le=mn(),T=le.ja,de(),xe.unshift(le.ka),_e--,_e==0&&(Oe!==null&&(clearInterval(Oe),Oe=null),ke&&(g=ke,ke=null,g())),le}var c={a:Yn};if(_e++,r.instantiateWasm)try{return r.instantiateWasm(c,s)}catch(g){_(`Module.instantiateWasm callback failed with error: ${g}`),i(g)}return Fe(c,function(g){s(g.instance)}).catch(i),{}}();r._OrtInit=(s,c)=>(r._OrtInit=le.la)(s,c),r._OrtGetLastError=(s,c)=>(r._OrtGetLastError=le.ma)(s,c),r._OrtCreateSessionOptions=(s,c,g,$,I,B,H,q,X,Y)=>(r._OrtCreateSessionOptions=le.na)(s,c,g,$,I,B,H,q,X,Y),r._OrtAppendExecutionProvider=(s,c)=>(r._OrtAppendExecutionProvider=le.oa)(s,c),r._OrtAddFreeDimensionOverride=(s,c,g)=>(r._OrtAddFreeDimensionOverride=le.pa)(s,c,g),r._OrtAddSessionConfigEntry=(s,c,g)=>(r._OrtAddSessionConfigEntry=le.qa)(s,c,g),r._OrtReleaseSessionOptions=s=>(r._OrtReleaseSessionOptions=le.ra)(s),r._OrtCreateSession=(s,c,g)=>(r._OrtCreateSession=le.sa)(s,c,g),r._OrtReleaseSession=s=>(r._OrtReleaseSession=le.ta)(s),r._OrtGetInputOutputCount=(s,c,g)=>(r._OrtGetInputOutputCount=le.ua)(s,c,g),r._OrtGetInputName=(s,c)=>(r._OrtGetInputName=le.va)(s,c),r._OrtGetOutputName=(s,c)=>(r._OrtGetOutputName=le.wa)(s,c),r._OrtFree=s=>(r._OrtFree=le.xa)(s),r._OrtCreateTensor=(s,c,g,$,I,B)=>(r._OrtCreateTensor=le.ya)(s,c,g,$,I,B),r._OrtGetTensorData=(s,c,g,$,I)=>(r._OrtGetTensorData=le.za)(s,c,g,$,I),r._OrtReleaseTensor=s=>(r._OrtReleaseTensor=le.Aa)(s),r._OrtCreateRunOptions=(s,c,g,$)=>(r._OrtCreateRunOptions=le.Ba)(s,c,g,$),r._OrtAddRunConfigEntry=(s,c,g)=>(r._OrtAddRunConfigEntry=le.Ca)(s,c,g),r._OrtReleaseRunOptions=s=>(r._OrtReleaseRunOptions=le.Da)(s),r._OrtCreateBinding=s=>(r._OrtCreateBinding=le.Ea)(s),r._OrtBindInput=(s,c,g)=>(r._OrtBindInput=le.Fa)(s,c,g),r._OrtBindOutput=(s,c,g,$)=>(r._OrtBindOutput=le.Ga)(s,c,g,$),r._OrtClearBoundOutputs=s=>(r._OrtClearBoundOutputs=le.Ha)(s),r._OrtReleaseBinding=s=>(r._OrtReleaseBinding=le.Ia)(s),r._OrtRunWithBinding=(s,c,g,$,I)=>(r._OrtRunWithBinding=le.Ja)(s,c,g,$,I),r._OrtRun=(s,c,g,$,I,B,H,q)=>(r._OrtRun=le.Ka)(s,c,g,$,I,B,H,q),r._OrtEndProfiling=s=>(r._OrtEndProfiling=le.La)(s),r._JsepOutput=(s,c,g)=>(r._JsepOutput=le.Ma)(s,c,g),r._JsepGetNodeName=s=>(r._JsepGetNodeName=le.Na)(s);var cn=()=>(cn=le.Oa)(),Wt=r._malloc=s=>(Wt=r._malloc=le.Pa)(s),ut=r._free=s=>(ut=r._free=le.Qa)(s),Yt=s=>(Yt=le.Ra)(s),dr=()=>(dr=le.Ta)(),cr=s=>(cr=le.Ua)(s),Br=s=>(Br=le.Va)(s),Zt=s=>(Zt=le.Xa)(s),pn=()=>(pn=le.Ya)(),bt=s=>(bt=le.Za)(s),pt=()=>(pt=le._a)();r.___start_em_js=957888,r.___stop_em_js=958049;function mn(){var s=le;s=Object.assign({},s);var c=$=>()=>$()>>>0,g=$=>I=>$(I)>>>0;return s.Oa=c(s.Oa),s.Pa=g(s.Pa),s.Ra=g(s.Ra),s.Ta=c(s.Ta),s.Va=g(s.Va),s}r.stackAlloc=Br,r.stackSave=dr,r.stackRestore=cr,r.UTF8ToString=qe,r.stringToUTF8=(s,c,g)=>_t(s,N,c,g),r.lengthBytesUTF8=Dt;var Bt;ke=function s(){Bt||Mr(),Bt||(ke=s)};function Mr(){if(!(0<_e)){if(r.preRun)for(typeof r.preRun=="function"&&(r.preRun=[r.preRun]);r.preRun.length;){var s=r.preRun.shift();Pe.unshift(s)}for(;0<Pe.length;)Pe.shift()(r);if(!(0<_e||Bt||(Bt=!0,r.calledRun=!0,O))){for(;0<xe.length;)xe.shift()(r);for(o(r);0<oe.length;)oe.shift()(r)}}}return Mr(),t.ready}})();typeof $i=="object"&&typeof uo=="object"?uo.exports=vi:typeof define=="function"&&define.amd&&define([],()=>vi)});var Si=Ur(()=>{});var xi=Ur(()=>{});var Ci={};bn(Ci,{cpus:()=>Nl});var Nl,Ai=J(()=>{Nl=void 0});var Ei=Ur((Ti,lo)=>{"use strict";var Ii=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){function r(){return we.buffer!=oe.buffer&&Ne(),oe}function o(){return we.buffer!=oe.buffer&&Ne(),_e}function i(){return we.buffer!=oe.buffer&&Ne(),Oe}function u(){return we.buffer!=oe.buffer&&Ne(),ke}function a(){return we.buffer!=oe.buffer&&Ne(),Ke}function p(){return we.buffer!=oe.buffer&&Ne(),F}function m(){return we.buffer!=oe.buffer&&Ne(),ae}function h(){return we.buffer!=oe.buffer&&Ne(),Ye}var d=t,y,v;d.ready=new Promise((n,l)=>{y=n,v=l}),d.mountExternalData=(n,l)=>{(d.Fb||(d.Fb=new Map)).set(n,l)},d.unmountExternalData=()=>{delete d.Fb},d.jsepInit=(n,l,f,b,A,P,U,L,Q,Z,fe)=>{d.uc=n,d.$b=l,d.dc=f,d.Ob=b,d.cc=A,d.eb=P,d.ec=U,d.hc=L,d.ac=Q,d.bc=Z,d.fc=fe,l=(ne,ye,D)=>(...se)=>{let Ce=pt,it=ye?.();se=ne(...se);let Jt=ye?.();return it!==Jt&&(ne=Jt,D(it),ye=D=null),pt!=Ce?I():se},f=ne=>async(...ye)=>{try{if(d.Eb)throw Error("Session already started");let D=d.Eb={jc:ye[0],errors:[]},se=await ne(...ye);if(d.Eb!==D)throw Error("Session mismatch");n.flush();let Ce=D.errors;if(0<Ce.length){let it=await Promise.all(Ce);if(it=it.filter(Jt=>Jt),0<it.length)throw Error(it.join(`\n`))}return se}finally{d.Eb=null}},d._OrtCreateSession=l(d._OrtCreateSession,()=>d._OrtCreateSession,ne=>d._OrtCreateSession=ne),d._OrtRun=f(l(d._OrtRun,()=>d._OrtRun,ne=>d._OrtRun=ne)),d._OrtRunWithBinding=f(l(d._OrtRunWithBinding,()=>d._OrtRunWithBinding,ne=>d._OrtRunWithBinding=ne)),d._OrtBindInput=l(d._OrtBindInput,()=>d._OrtBindInput,ne=>d._OrtBindInput=ne),d.jsepRegisterBuffer=(ne,ye,D,se)=>n.registerBuffer(ne,ye,D,se),d.jsepGetBuffer=ne=>n.getBuffer(ne),d.jsepCreateDownloader=(ne,ye,D)=>n.createDownloader(ne,ye,D),d.jsepOnReleaseSession=ne=>{n.onReleaseSession(ne)},d.jsepOnRunStart=ne=>n.onRunStart(ne)};var S=Object.assign({},d),w="./this.program",x=(n,l)=>{throw l},E=typeof window=="object",C=typeof importScripts=="function",_=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",T=d.ENVIRONMENT_IS_PTHREAD||!1,O="";function z(n){return d.locateFile?d.locateFile(n,O):O+n}var M,N,j;if(_){var ue=(io(),pr(oo)),k=(so(),pr(ao));O=C?k.dirname(O)+"/":__dirname+"/",M=(l,f)=>(l=Dt(l)?new URL(l):k.normalize(l),ue.readFileSync(l,f?void 0:"utf8")),j=l=>(l=M(l,!0),l.buffer||(l=new Uint8Array(l)),l),N=(l,f,b,A=!0)=>{l=Dt(l)?new URL(l):k.normalize(l),ue.readFile(l,A?void 0:"utf8",(P,U)=>{P?b(P):f(A?U.buffer:U)})},!d.thisProgram&&1<process.argv.length&&(w=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),x=(l,f)=>{throw process.exitCode=l,f},d.inspect=()=>"[Emscripten Module object]";let n;try{n=Si()}catch(l){throw console.error(\'The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?\'),l}global.Worker=n.Worker}else(E||C)&&(C?O=self.location.href:typeof document<"u"&&document.currentScript&&(O=document.currentScript.src),typeof e<"u"&&e&&(O=e),O.indexOf("blob:")!==0?O=O.substr(0,O.replace(/[?#].*/,"").lastIndexOf("/")+1):O="",_||(M=n=>{var l=new XMLHttpRequest;return l.open("GET",n,!1),l.send(null),l.responseText},C&&(j=n=>{var l=new XMLHttpRequest;return l.open("GET",n,!1),l.responseType="arraybuffer",l.send(null),new Uint8Array(l.response)}),N=(n,l,f)=>{var b=new XMLHttpRequest;b.open("GET",n,!0),b.responseType="arraybuffer",b.onload=()=>{b.status==200||b.status==0&&b.response?l(b.response):f()},b.onerror=f,b.send(null)}));_&&typeof performance>"u"&&(global.performance=xi().performance);var te=console.log.bind(console),Be=console.error.bind(console);_&&(te=(...n)=>ue.writeSync(1,n.join(" ")+`\n`),Be=(...n)=>ue.writeSync(2,n.join(" ")+`\n`));var Ue=te,$e=Be;Object.assign(d,S),S=null,typeof WebAssembly!="object"&&Ut("no native wasm support detected");var we,de,Pe=!1,xe,oe,_e,Oe,ke,Ke,F,ae,ge,ht,Ye;function Ne(){var n=we.buffer;d.HEAP8=oe=new Int8Array(n),d.HEAP16=Oe=new Int16Array(n),d.HEAPU8=_e=new Uint8Array(n),d.HEAPU16=ke=new Uint16Array(n),d.HEAP32=Ke=new Int32Array(n),d.HEAPU32=F=new Uint32Array(n),d.HEAPF32=ae=new Float32Array(n),d.HEAPF64=Ye=new Float64Array(n),d.HEAP64=ge=new BigInt64Array(n),d.HEAPU64=ht=new BigUint64Array(n)}var Mt=16777216;if(T)we=d.wasmMemory;else if(d.wasmMemory)we=d.wasmMemory;else if(we=new WebAssembly.Memory({initial:Mt/65536,maximum:65536,shared:!0}),!(we.buffer instanceof SharedArrayBuffer))throw $e("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),_&&$e("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");Ne(),Mt=we.buffer.byteLength;var Fe=[],He=[],Rt=[],gt=0,zt=null,Lt=null;function yr(){if(gt--,gt==0&&(zt!==null&&(clearInterval(zt),zt=null),Lt)){var n=Lt;Lt=null,n()}}function Ut(n){throw n="Aborted("+n+")",$e(n),Pe=!0,xe=1,n=new WebAssembly.RuntimeError(n+". Build with -sASSERTIONS for more info."),v(n),n}var qe=n=>n.startsWith("data:application/octet-stream;base64,"),Dt=n=>n.startsWith("file://"),_t;_t="ort-wasm-simd-threaded.wasm",qe(_t)||(_t=z(_t));function br(n){if(j)return j(n);throw"both async and sync fetching of the wasm failed"}function qr(n){if(E||C){if(typeof fetch=="function"&&!Dt(n))return fetch(n,{credentials:"same-origin"}).then(l=>{if(!l.ok)throw"failed to load wasm binary file at \'"+n+"\'";return l.arrayBuffer()}).catch(()=>br(n));if(N)return new Promise((l,f)=>{N(n,b=>l(new Uint8Array(b)),f)})}return Promise.resolve().then(()=>br(n))}function at(n,l,f){return qr(n).then(b=>WebAssembly.instantiate(b,l)).then(b=>b).then(f,b=>{$e(`failed to asynchronously prepare wasm: ${b}`),Ut(b)})}function wr(n,l){var f=_t;return typeof WebAssembly.instantiateStreaming!="function"||qe(f)||Dt(f)||_||typeof fetch!="function"?at(f,n,l):fetch(f,{credentials:"same-origin"}).then(b=>WebAssembly.instantiateStreaming(b,n).then(l,function(A){return $e(`wasm streaming compile failed: ${A}`),$e("falling back to ArrayBuffer instantiation"),at(f,n,l)}))}var Ft={1381140:(n,l,f,b)=>{if(typeof d>"u"||!d.Fb)return 1;if(n=De(n>>>0),n.startsWith("./")&&(n=n.substring(2)),n=d.Fb.get(n),!n)return 2;if(l>>>=0,f>>>=0,b>>>=0,l+f>n.byteLength)return 3;try{return o().set(n.subarray(l,l+f),b>>>0),0}catch{return 4}},1381641:()=>{d.ac()},1381672:()=>{d.bc()},1381701:()=>{d.fc()},1381726:n=>d.$b(n),1381759:n=>d.dc(n),1381791:(n,l,f)=>{d.Ob(n,l,f,!0)},1381830:(n,l,f)=>{d.Ob(n,l,f)},1381863:n=>{d.eb("Abs",n,void 0)},1381914:n=>{d.eb("Neg",n,void 0)},1381965:n=>{d.eb("Floor",n,void 0)},1382018:n=>{d.eb("Ceil",n,void 0)},1382070:n=>{d.eb("Reciprocal",n,void 0)},1382128:n=>{d.eb("Sqrt",n,void 0)},1382180:n=>{d.eb("Exp",n,void 0)},1382231:n=>{d.eb("Erf",n,void 0)},1382282:n=>{d.eb("Sigmoid",n,void 0)},1382337:(n,l,f)=>{d.eb("HardSigmoid",n,{alpha:l,beta:f})},1382416:n=>{d.eb("Log",n,void 0)},1382467:n=>{d.eb("Sin",n,void 0)},1382518:n=>{d.eb("Cos",n,void 0)},1382569:n=>{d.eb("Tan",n,void 0)},1382620:n=>{d.eb("Asin",n,void 0)},1382672:n=>{d.eb("Acos",n,void 0)},1382724:n=>{d.eb("Atan",n,void 0)},1382776:n=>{d.eb("Sinh",n,void 0)},1382828:n=>{d.eb("Cosh",n,void 0)},1382880:n=>{d.eb("Asinh",n,void 0)},1382933:n=>{d.eb("Acosh",n,void 0)},1382986:n=>{d.eb("Atanh",n,void 0)},1383039:n=>{d.eb("Tanh",n,void 0)},1383091:n=>{d.eb("Not",n,void 0)},1383142:(n,l,f)=>{d.eb("Clip",n,{min:l,max:f})},1383211:n=>{d.eb("Clip",n,void 0)},1383263:(n,l)=>{d.eb("Elu",n,{alpha:l})},1383321:n=>{d.eb("Relu",n,void 0)},1383373:(n,l)=>{d.eb("LeakyRelu",n,{alpha:l})},1383437:(n,l)=>{d.eb("ThresholdedRelu",n,{alpha:l})},1383507:(n,l)=>{d.eb("Cast",n,{to:l})},1383565:n=>{d.eb("Add",n,void 0)},1383616:n=>{d.eb("Sub",n,void 0)},1383667:n=>{d.eb("Mul",n,void 0)},1383718:n=>{d.eb("Div",n,void 0)},1383769:n=>{d.eb("Pow",n,void 0)},1383820:n=>{d.eb("Equal",n,void 0)},1383873:n=>{d.eb("Greater",n,void 0)},1383928:n=>{d.eb("GreaterOrEqual",n,void 0)},1383990:n=>{d.eb("Less",n,void 0)},1384042:n=>{d.eb("LessOrEqual",n,void 0)},1384101:(n,l,f,b,A)=>{d.eb("ReduceMean",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},1384260:(n,l,f,b,A)=>{d.eb("ReduceMax",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},1384418:(n,l,f,b,A)=>{d.eb("ReduceMin",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},1384576:(n,l,f,b,A)=>{d.eb("ReduceProd",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},1384735:(n,l,f,b,A)=>{d.eb("ReduceSum",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},1384893:(n,l,f,b,A)=>{d.eb("ReduceL1",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},1385050:(n,l,f,b,A)=>{d.eb("ReduceL2",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},1385207:(n,l,f,b,A)=>{d.eb("ReduceLogSum",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},1385368:(n,l,f,b,A)=>{d.eb("ReduceSumSquare",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},1385532:(n,l,f,b,A)=>{d.eb("ReduceLogSumExp",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},1385696:n=>{d.eb("Where",n,void 0)},1385749:(n,l,f)=>{d.eb("Transpose",n,{perm:l?Array.from(a().subarray(l>>>0,f>>>0)):[]})},1385857:(n,l,f,b,A,P,U,L,Q,Z,fe,ne,ye,D,se)=>{d.eb("ConvTranspose",n,{format:Q?"NHWC":"NCHW",autoPad:l,dilations:[f],group:b,kernel_shape:[A],pads:[P,U],strides:[L],wIsConst:()=>!!r()[Z>>>0],outputPadding:fe?Array.from(a().subarray(fe>>>0,ne>>>0)):[],outputShape:ye?Array.from(a().subarray(ye>>>0,D>>>0)):[],activation:De(se)})},1386259:(n,l,f,b,A,P,U,L,Q,Z,fe,ne,ye,D)=>{d.eb("ConvTranspose",n,{format:L?"NHWC":"NCHW",autoPad:l,dilations:Array.from(a().subarray(f>>>0,(f>>>0)+2>>>0)),group:b,kernelShape:Array.from(a().subarray(A>>>0,(A>>>0)+2>>>0)),pads:Array.from(a().subarray(P>>>0,(P>>>0)+4>>>0)),strides:Array.from(a().subarray(U>>>0,(U>>>0)+2>>>0)),wIsConst:()=>!!r()[Q>>>0],outputPadding:Z?Array.from(a().subarray(Z>>>0,fe>>>0)):[],outputShape:ne?Array.from(a().subarray(ne>>>0,ye>>>0)):[],activation:De(D)})},1386824:(n,l,f,b,A,P,U,L,Q,Z,fe,ne,ye,D,se)=>{d.eb("ConvTranspose",n,{format:Q?"NHWC":"NCHW",autoPad:l,dilations:[f],group:b,kernel_shape:[A],pads:[P,U],strides:[L],wIsConst:()=>!!r()[Z>>>0],outputPadding:fe?Array.from(a().subarray(fe>>>0,ne>>>0)):[],outputShape:ye?Array.from(a().subarray(ye>>>0,D>>>0)):[],activation:De(se)})},1387226:(n,l,f,b,A,P,U,L,Q,Z,fe,ne,ye,D)=>{d.eb("ConvTranspose",n,{format:L?"NHWC":"NCHW",autoPad:l,dilations:Array.from(a().subarray(f>>>0,(f>>>0)+2>>>0)),group:b,kernelShape:Array.from(a().subarray(A>>>0,(A>>>0)+2>>>0)),pads:Array.from(a().subarray(P>>>0,(P>>>0)+4>>>0)),strides:Array.from(a().subarray(U>>>0,(U>>>0)+2>>>0)),wIsConst:()=>!!r()[Q>>>0],outputPadding:Z?Array.from(a().subarray(Z>>>0,fe>>>0)):[],outputShape:ne?Array.from(a().subarray(ne>>>0,ye>>>0)):[],activation:De(D)})},1387791:(n,l)=>{d.eb("GlobalAveragePool",n,{format:l?"NHWC":"NCHW"})},1387882:(n,l,f,b,A,P,U,L,Q,Z,fe,ne,ye,D,se,Ce)=>{d.eb("AveragePool",n,{format:Ce?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:A,dilations:[P,U],kernel_shape:[L,Q],pads:[Z,fe,ne,ye],strides:[D,se]})},1388166:(n,l)=>{d.eb("GlobalAveragePool",n,{format:l?"NHWC":"NCHW"})},1388257:(n,l,f,b,A,P,U,L,Q,Z,fe,ne,ye,D,se,Ce)=>{d.eb("AveragePool",n,{format:Ce?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:A,dilations:[P,U],kernel_shape:[L,Q],pads:[Z,fe,ne,ye],strides:[D,se]})},1388541:(n,l)=>{d.eb("GlobalMaxPool",n,{format:l?"NHWC":"NCHW"})},1388628:(n,l,f,b,A,P,U,L,Q,Z,fe,ne,ye,D,se,Ce)=>{d.eb("MaxPool",n,{format:Ce?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:A,dilations:[P,U],kernel_shape:[L,Q],pads:[Z,fe,ne,ye],strides:[D,se]})},1388908:(n,l)=>{d.eb("GlobalMaxPool",n,{format:l?"NHWC":"NCHW"})},1388995:(n,l,f,b,A,P,U,L,Q,Z,fe,ne,ye,D,se,Ce)=>{d.eb("MaxPool",n,{format:Ce?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:A,dilations:[P,U],kernel_shape:[L,Q],pads:[Z,fe,ne,ye],strides:[D,se]})},1389275:(n,l,f,b,A)=>{d.eb("Gemm",n,{alpha:l,beta:f,transA:b,transB:A})},1389379:n=>{d.eb("MatMul",n,void 0)},1389433:(n,l,f,b)=>{d.eb("ArgMax",n,{keepDims:!!l,selectLastIndex:!!f,axis:b})},1389541:(n,l,f,b)=>{d.eb("ArgMin",n,{keepDims:!!l,selectLastIndex:!!f,axis:b})},1389649:(n,l)=>{d.eb("Softmax",n,{axis:l})},1389712:(n,l)=>{d.eb("Concat",n,{axis:l})},1389772:(n,l,f,b,A)=>{d.eb("Split",n,{axis:l,numOutputs:f,splitSizes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},1389912:n=>{d.eb("Expand",n,void 0)},1389966:(n,l)=>{d.eb("Gather",n,{axis:Number(l)})},1390037:(n,l)=>{d.eb("GatherElements",n,{axis:Number(l)})},1390116:(n,l,f,b,A,P,U,L,Q,Z,fe)=>{d.eb("Resize",n,{antialias:l,axes:f?Array.from(a().subarray(f>>>0,b>>>0)):[],coordinateTransformMode:De(A),cubicCoeffA:P,excludeOutside:U,extrapolationValue:L,keepAspectRatioPolicy:De(Q),mode:De(Z),nearestMode:De(fe)})},1390462:(n,l,f,b,A,P,U)=>{d.eb("Slice",n,{starts:l?Array.from(a().subarray(l>>>0,f>>>0)):[],ends:b?Array.from(a().subarray(b>>>0,A>>>0)):[],axes:P?Array.from(a().subarray(P>>>0,U>>>0)):[]})},1390678:n=>{d.eb("Tile",n,void 0)},1390730:(n,l,f)=>{d.eb("LayerNormalization",n,{axis:Number(l),epsilon:Number(f)})},1390837:(n,l,f)=>{d.eb("InstanceNormalization",n,{epsilon:l,format:f?"NHWC":"NCHW"})},1390951:(n,l,f)=>{d.eb("InstanceNormalization",n,{epsilon:l,format:f?"NHWC":"NCHW"})},1391065:n=>{d.eb("Range",n,void 0)},1391118:(n,l)=>{d.eb("Einsum",n,{equation:De(l)})},1391199:(n,l,f,b,A)=>{d.eb("Pad",n,{mode:l,value:f,pads:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},1391326:(n,l,f,b,A,P)=>{d.eb("BatchNormalization",n,{epsilon:l,momentum:f,spatial:!!A,trainingMode:!!b,format:P?"NHWC":"NCHW"})},1391495:(n,l,f,b,A,P)=>{d.eb("BatchNormalization",n,{epsilon:l,momentum:f,spatial:!!A,trainingMode:!!b,format:P?"NHWC":"NCHW"})},1391664:(n,l,f)=>{d.eb("CumSum",n,{exclusive:Number(l),reverse:Number(f)})},1391761:(n,l,f,b,A,P,U,L,Q)=>{d.eb("Attention",n,{numHeads:l,isUnidirectional:f,maskFilterValue:b,scale:A,doRotary:P,qkvHiddenSizes:U?Array.from(a().subarray(Number(L)>>>0,Number(L)+U>>>0)):[],pastPresentShareBuffer:!!Q})},1392033:n=>{d.eb("Gelu",n,void 0)},1392085:(n,l,f,b,A,P)=>{d.eb("MultiHeadAttention",n,{numHeads:l,isUnidirectional:f,maskFilterValue:b,scale:A,doRotary:P})},1392244:n=>{d.eb("BiasAdd",n,void 0)},1392299:n=>{d.eb("BiasSplitGelu",n,void 0)},1392360:(n,l)=>{d.eb("SkipLayerNormalization",n,{epsilon:l})},1392441:(n,l,f,b,A,P,U,L,Q,Z,fe,ne,ye)=>{d.eb("Conv",n,{format:Q?"NHWC":"NCHW",auto_pad:l,dilations:[f],group:b,kernel_shape:[A],pads:P?Array.from(a().subarray(P>>>0,U>>>0)):[],strides:[L],w_is_const:()=>!!r()[Z>>>0],activation:De(fe),activation_params:ne?Array.from(m().subarray(ne>>>0,ye>>>0)):[]})},1392811:(n,l,f,b,A,P,U,L,Q,Z,fe,ne,ye,D,se,Ce)=>{d.eb("Conv",n,{format:ne?"NHWC":"NCHW",auto_pad:l,dilations:[f,b],group:A,kernel_shape:[P,U],pads:L?Array.from(a().subarray(L>>>0,Q>>>0)):[],strides:[Z,fe],w_is_const:()=>!!r()[ye>>>0],activation:De(D),activation_params:se?Array.from(m().subarray(se>>>0,Ce>>>0)):[]})},1393202:n=>{d.ec(n)},1393236:(n,l)=>d.hc(n,l,d.Eb.jc,d.Eb.errors)};function vr(n){this.name="ExitStatus",this.message=`Program terminated with exit(${n})`,this.status=n}var mt=n=>{n.terminate(),n.onmessage=()=>{}},jr=n=>{me.yb.length==0&&(Cr(),me.Pb(me.yb[0]));var l=me.yb.pop();if(!l)return 6;me.zb.push(l),me.pb[n.xb]=l,l.xb=n.xb;var f={cmd:"run",start_routine:n.kc,arg:n.Vb,pthread_ptr:n.xb};return _&&l.unref(),l.postMessage(f,n.qc),0},Ze=0,$r=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,_r=(n,l,f)=>{l>>>=0;var b=l+f;for(f=l;n[f]&&!(f>=b);)++f;if(16<f-l&&n.buffer&&$r)return $r.decode(n.buffer instanceof SharedArrayBuffer?n.slice(l,f):n.subarray(l,f));for(b="";l<f;){var A=n[l++];if(A&128){var P=n[l++]&63;if((A&224)==192)b+=String.fromCharCode((A&31)<<6|P);else{var U=n[l++]&63;A=(A&240)==224?(A&15)<<12|P<<6|U:(A&7)<<18|P<<12|U<<6|n[l++]&63,65536>A?b+=String.fromCharCode(A):(A-=65536,b+=String.fromCharCode(55296|A>>10,56320|A&1023))}}else b+=String.fromCharCode(A)}return b},De=(n,l)=>(n>>>=0)?_r(o(),n,l):"",Sr=n=>{var l=to();return n=n(),gn(l),n};function Se(n,l){var f=arguments.length-2,b=arguments;return Sr(()=>{for(var A=2*f,P=ro(8*A),U=P>>>3,L=0;L<f;L++){var Q=b[2+L];typeof Q=="bigint"?(ge[U+2*L]=1n,ge[U+2*L+1]=Q):(ge[U+2*L]=0n,h()[U+2*L+1>>>0]=Q)}return di(n,A,P,l)})}function st(n){if(T)return Se(0,1,n);xe=n,0<Ze||(me.lc(),d.onExit?.(n),Pe=!0),x(n,new vr(n))}var nr=n=>{if(xe=n,T)throw Kr(n),"unwind";st(n)},xr=n=>{n instanceof vr||n=="unwind"||x(1,n)};function Fn(){for(var n=d.numThreads;n--;)Cr();Fe.unshift(()=>{gt++,qn(()=>yr())})}function Cr(){var n=z("ort-wasm-simd-threaded.worker.js");n=new Worker(n),me.yb.push(n)}function qn(n){T?n():Promise.all(me.yb.map(me.Pb)).then(n)}var me={yb:[],zb:[],Ub:[],pb:{},Ib(){T?(me.receiveObjectTransfer=me.ic,me.threadInitTLS=me.Tb,me.setExitStatus=me.Sb):Fn()},Sb:n=>xe=n,vc:["$terminateWorker"],lc:()=>{for(var n of me.zb)mt(n);for(n of me.yb)mt(n);me.yb=[],me.zb=[],me.pb=[]},Rb:n=>{var l=n.xb;delete me.pb[l],me.yb.push(n),me.zb.splice(me.zb.indexOf(n),1),n.xb=0,Qn(l)},ic(){},Tb(){me.Ub.forEach(n=>n())},Pb:n=>new Promise(l=>{n.onmessage=P=>{P=P.data;var U=P.cmd;if(P.targetThread&&P.targetThread!=hn()){var L=me.pb[P.targetThread];L?L.postMessage(P,P.transferList):$e(`Internal error! Worker sent a message "${U}" to target pthread ${P.targetThread}, but that thread no longer exists!`)}else U==="checkMailbox"?Yt():U==="spawnThread"?jr(P):U==="cleanupThread"?me.Rb(me.pb[P.thread]):U==="killThread"?(P=P.thread,U=me.pb[P],delete me.pb[P],mt(U),Qn(P),me.zb.splice(me.zb.indexOf(U),1),U.xb=0):U==="cancelThread"?me.pb[P.thread].postMessage({cmd:"cancel"}):U==="loaded"?(n.loaded=!0,_&&!n.xb&&n.unref(),l(n)):U==="alert"?alert(`Thread ${P.threadId}: ${P.text}`):P.target==="setimmediate"?n.postMessage(P):U==="callHandler"?d[P.handler](...P.args):U&&$e(`worker sent an unknown command ${U}`)},n.onerror=P=>{throw $e(`worker sent an error! ${P.filename}:${P.lineno}: ${P.message}`),P},_&&(n.on("message",P=>n.onmessage({data:P})),n.on("error",P=>n.onerror(P)));var f=[],b=["onExit"],A;for(A of b)d.hasOwnProperty(A)&&f.push(A);n.postMessage({cmd:"load",handlers:f,urlOrBlob:d.mainScriptUrlOrBlob||e,wasmMemory:we,wasmModule:de})})};d.PThread=me;var or=n=>{for(;0<n.length;)n.shift()(d)};d.establishStackSpace=()=>{var n=hn(),l=p()[n+52>>>2>>>0];n=p()[n+56>>>2>>>0],pi(l,l-n),gn(l)};function Kr(n){if(T)return Se(1,0,n);nr(n)}d.invokeEntryPoint=(n,l)=>{n=mi.apply(null,[n,l]),0<Ze?me.Sb(n):eo(n)};function jn(n){this.Db=n-24,this.sc=function(l){p()[this.Db+4>>>2>>>0]=l},this.Mb=function(l){p()[this.Db+8>>>2>>>0]=l},this.Ib=function(l,f){this.Kb(),this.sc(l),this.Mb(f)},this.Kb=function(){p()[this.Db+16>>>2>>>0]=0}}var Yr=0,Ar=0;function Ir(n,l,f,b){return T?Se(2,1,n,l,f,b):qt(n,l,f,b)}function qt(n,l,f,b){if(n>>>=0,l>>>=0,f>>>=0,b>>>=0,typeof SharedArrayBuffer>"u")return $e("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var A=[];return T&&A.length===0?Ir(n,l,f,b):(n={kc:f,xb:n,Vb:b,qc:A},T?(n.tc="spawnThread",postMessage(n,A),0):jr(n))}function Zr(n,l,f){return T?Se(3,1,n,l,f):0}function yt(n,l){if(T)return Se(4,1,n,l)}var tt=n=>{for(var l=0,f=0;f<n.length;++f){var b=n.charCodeAt(f);127>=b?l++:2047>=b?l+=2:55296<=b&&57343>=b?(l+=4,++f):l+=3}return l},Tr=(n,l,f,b)=>{if(f>>>=0,!(0<b))return 0;var A=f;b=f+b-1;for(var P=0;P<n.length;++P){var U=n.charCodeAt(P);if(55296<=U&&57343>=U){var L=n.charCodeAt(++P);U=65536+((U&1023)<<10)|L&1023}if(127>=U){if(f>=b)break;l[f++>>>0]=U}else{if(2047>=U){if(f+1>=b)break;l[f++>>>0]=192|U>>6}else{if(65535>=U){if(f+2>=b)break;l[f++>>>0]=224|U>>12}else{if(f+3>=b)break;l[f++>>>0]=240|U>>18,l[f++>>>0]=128|U>>12&63}l[f++>>>0]=128|U>>6&63}l[f++>>>0]=128|U&63}}return l[f>>>0]=0,f-A},Vt=(n,l,f)=>Tr(n,o(),l,f);function Er(n,l){if(T)return Se(5,1,n,l)}function Pr(n,l,f){if(T)return Se(6,1,n,l,f)}function Jr(n,l,f){return T?Se(7,1,n,l,f):0}function ir(n,l){if(T)return Se(8,1,n,l)}function Xr(n,l,f){if(T)return Se(9,1,n,l,f)}function Qr(n,l,f,b){if(T)return Se(10,1,n,l,f,b)}function en(n,l,f,b){if(T)return Se(11,1,n,l,f,b)}function tn(n,l,f,b){if(T)return Se(12,1,n,l,f,b)}function Or(n){if(T)return Se(13,1,n)}function jt(n,l){if(T)return Se(14,1,n,l)}function rn(n,l,f){if(T)return Se(15,1,n,l,f)}var ar=n=>{if(n===null)return"null";var l=typeof n;return l==="object"||l==="array"||l==="function"?n.toString():""+n},kr,ct=n=>{for(var l="";o()[n>>>0];)l+=kr[o()[n++>>>0]];return l},Rr={},sr={},Kn={},rt;function nn(n,l,f={}){var b=l.name;if(!n)throw new rt(`type "${b}" must have a positive integer typeid pointer`);if(sr.hasOwnProperty(n)){if(f.Yb)return;throw new rt(`Cannot register type \'${b}\' twice`)}sr[n]=l,delete Kn[n],Rr.hasOwnProperty(n)&&(l=Rr[n],delete Rr[n],l.forEach(A=>A()))}function ft(n,l,f={}){if(!("argPackAdvance"in l))throw new TypeError("registerType registeredInstance requires argPackAdvance");nn(n,l,f)}var Dr=(n,l,f)=>{switch(l){case 1:return f?b=>r()[b>>>0>>>0]:b=>o()[b>>>0>>>0];case 2:return f?b=>i()[b>>>1>>>0]:b=>u()[b>>>1>>>0];case 4:return f?b=>a()[b>>>2>>>0]:b=>p()[b>>>2>>>0];case 8:return f?b=>ge[b>>>3]:b=>ht[b>>>3];default:throw new TypeError(`invalid integer width (${l}): ${n}`)}};function ur(){this.wb=[void 0],this.Nb=[]}var nt=new ur;function Kt(n){n>>>=0,n>=nt.Db&&--nt.get(n).Qb===0&&nt.Mb(n)}var Je=n=>{if(!n)throw new rt("Cannot use deleted val. handle = "+n);return nt.get(n).value},ot=n=>{switch(n){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return nt.Kb({Qb:1,value:n})}};function on(n){return this.fromWireType(a()[n>>>2>>>0])}var an=(n,l)=>{switch(l){case 4:return function(f){return this.fromWireType(m()[f>>>2>>>0])};case 8:return function(f){return this.fromWireType(h()[f>>>3>>>0])};default:throw new TypeError(`invalid float width (${l}): ${n}`)}};function sn(n){return this.fromWireType(p()[n>>>2>>>0])}var un=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,ln=(n,l)=>{for(var f=n>>1,b=f+l/2;!(f>=b)&&u()[f>>>0];)++f;if(f<<=1,32<f-n&&un)return un.decode(o().slice(n,f));for(f="",b=0;!(b>=l/2);++b){var A=i()[n+2*b>>>1>>>0];if(A==0)break;f+=String.fromCharCode(A)}return f},dn=(n,l,f)=>{if(f??=2147483647,2>f)return 0;f-=2;var b=l;f=f<2*n.length?f/2:n.length;for(var A=0;A<f;++A){var P=n.charCodeAt(A);i()[l>>>1>>>0]=P,l+=2}return i()[l>>>1>>>0]=0,l-b},lr=n=>2*n.length,Yn=(n,l)=>{for(var f=0,b="";!(f>=l/4);){var A=a()[n+4*f>>>2>>>0];if(A==0)break;++f,65536<=A?(A-=65536,b+=String.fromCharCode(55296|A>>10,56320|A&1023)):b+=String.fromCharCode(A)}return b},le=(n,l,f)=>{if(l>>>=0,f??=2147483647,4>f)return 0;var b=l;f=b+f-4;for(var A=0;A<n.length;++A){var P=n.charCodeAt(A);if(55296<=P&&57343>=P){var U=n.charCodeAt(++A);P=65536+((P&1023)<<10)|U&1023}if(a()[l>>>2>>>0]=P,l+=4,l+4>f)break}return a()[l>>>2>>>0]=0,l-b},cn=n=>{for(var l=0,f=0;f<n.length;++f){var b=n.charCodeAt(f);55296<=b&&57343>=b&&++f,l+=4}return l},Wt=()=>{if(!(0<Ze))try{T?eo(xe):nr(xe)}catch(n){xr(n)}};function ut(n){n>>>=0,typeof Atomics.rc=="function"&&(Atomics.rc(a(),n>>>2,n).value.then(Yt),n+=128,Atomics.store(a(),n>>>2,1))}d.__emscripten_thread_mailbox_await=ut;var Yt=()=>{var n=hn();if(n&&(ut(n),!Pe))try{ci(),Wt()}catch(l){xr(l)}};d.checkMailbox=Yt;var dr=[],cr=(n,l)=>{var f=sr[n];if(f===void 0)throw n=ui(n),f=ct(n),St(n),new rt(l+" has unknown type "+f);return f},Br=(n,l,f)=>{var b=[];return n=n.toWireType(b,f),b.length&&(p()[l>>>2>>>0]=ot(b)),n},Zt=n=>{try{n()}catch(l){Ut(l)}};function pn(){var n=re,l={};for(let[f,b]of Object.entries(n))l[f]=typeof b=="function"?function(){Bt.push(f);try{return b.apply(null,arguments)}finally{Pe||(Bt.pop(),pt&&bt===1&&Bt.length===0&&(bt=0,Ze+=1,Zt(hi),typeof Fibers<"u"&&Fibers.xc()))}}:b;return l}var bt=0,pt=null,mn=0,Bt=[],Mr={},s={},c=0,g=null,$=[];function I(){return new Promise((n,l)=>{g={resolve:n,reject:l}})}function B(){var n=zr(65548),l=n+12;p()[n>>>2>>>0]=l,p()[n+4>>>2>>>0]=l+65536,l=Bt[0];var f=Mr[l];return f===void 0&&(f=c++,Mr[l]=f,s[f]=l),l=f,a()[n+8>>>2>>>0]=l,n}function H(){var n=a()[pt+8>>>2>>>0];return n=re[s[n]],--Ze,n()}function q(n){if(!Pe){if(bt===0){var l=!1,f=!1;n((b=0)=>{if(!Pe&&(mn=b,l=!0,f)){bt=2,Zt(()=>gi(pt)),typeof Browser<"u"&&Browser.Jb.Xb&&Browser.Jb.resume(),b=!1;try{var A=H()}catch(L){A=L,b=!0}var P=!1;if(!pt){var U=g;U&&(g=null,(b?U.reject:U.resolve)(A),P=!0)}if(b&&!P)throw A}}),f=!0,l||(bt=1,pt=B(),typeof Browser<"u"&&Browser.Jb.Xb&&Browser.Jb.pause(),Zt(()=>fi(pt)))}else bt===2?(bt=0,Zt(yi),St(pt),pt=null,$.forEach(b=>{if(!Pe)try{b(),Wt()}catch(A){xr(A)}})):Ut(`invalid state: ${bt}`);return mn}}function X(n){return q(l=>{n().then(l)})}var Y=[],ce={},ee=n=>{var l=ce[n];return l===void 0?ct(n):l},he=()=>typeof globalThis=="object"?globalThis:Function("return this")(),R=n=>{var l=Y.length;return Y.push(n),l},ie=(n,l)=>{for(var f=Array(n),b=0;b<n;++b)f[b]=cr(p()[l+4*b>>>2>>>0],"parameter "+b);return f},ve=(n,l)=>Object.defineProperty(l,"name",{value:n});function Xe(n){var l=Function;if(!(l instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof l} which is not a function`);var f=ve(l.name||"unknownFunctionName",function(){});return f.prototype=l.prototype,f=new f,n=l.apply(f,n),n instanceof Object?n:f}var lt=n=>n%4===0&&(n%100!==0||n%400===0),Lo=[0,31,60,91,121,152,182,213,244,274,305,335],Fo=[0,31,59,90,120,151,181,212,243,273,304,334];function qo(n,l,f,b,A,P,U){return T?Se(16,1,n,l,f,b,A,P,U):-52}function jo(n,l,f,b,A,P){if(T)return Se(17,1,n,l,f,b,A,P)}var Ko=n=>{var l=tt(n)+1,f=zr(l);return f&&Vt(n,f,l),f},Zn=[],Yo=(n,l)=>{Zn.length=0;for(var f;f=o()[n++>>>0];){var b=f!=105;b&=f!=112,l+=b&&l%8?4:0,Zn.push(f==112?p()[l>>>2>>>0]:f==106?ge[l>>>3]:f==105?a()[l>>>2>>>0]:h()[l>>>3>>>0]),l+=b?8:4}return Zn},Jn={},Zo=()=>{if(!Xn){var n={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:w||"./this.program"},l;for(l in Jn)Jn[l]===void 0?delete n[l]:n[l]=Jn[l];var f=[];for(l in n)f.push(`${l}=${n[l]}`);Xn=f}return Xn},Xn;function Jo(n,l){if(T)return Se(18,1,n,l);n>>>=0,l>>>=0;var f=0;return Zo().forEach((b,A)=>{var P=l+f;for(A=p()[n+4*A>>>2>>>0]=P,P=0;P<b.length;++P)r()[A++>>>0>>>0]=b.charCodeAt(P);r()[A>>>0>>>0]=0,f+=b.length+1}),0}function Xo(n,l){if(T)return Se(19,1,n,l);n>>>=0,l>>>=0;var f=Zo();p()[n>>>2>>>0]=f.length;var b=0;return f.forEach(A=>b+=A.length+1),p()[l>>>2>>>0]=b,0}function Qo(n){return T?Se(20,1,n):52}function ei(n,l,f,b){return T?Se(21,1,n,l,f,b):52}function ti(n,l,f,b){return T?Se(22,1,n,l,f,b):70}var Tl=[null,[],[]];function ri(n,l,f,b){if(T)return Se(23,1,n,l,f,b);l>>>=0,f>>>=0,b>>>=0;for(var A=0,P=0;P<f;P++){var U=p()[l>>>2>>>0],L=p()[l+4>>>2>>>0];l+=8;for(var Q=0;Q<L;Q++){var Z=o()[U+Q>>>0],fe=Tl[n];Z===0||Z===10?((n===1?Ue:$e)(_r(fe,0)),fe.length=0):fe.push(Z)}A+=L}return p()[b>>>2>>>0]=A,0}var ni=[31,29,31,30,31,30,31,31,30,31,30,31],oi=[31,28,31,30,31,30,31,31,30,31,30,31];function El(n){var l=Array(tt(n)+1);return Tr(n,l,0,l.length),l}var Pl=(n,l)=>{r().set(n,l>>>0)};function ii(n,l,f,b){function A(D,se,Ce){for(D=typeof D=="number"?D.toString():D||"";D.length<se;)D=Ce[0]+D;return D}function P(D,se){return A(D,se,"0")}function U(D,se){function Ce(Jt){return 0>Jt?-1:0<Jt?1:0}var it;return(it=Ce(D.getFullYear()-se.getFullYear()))===0&&(it=Ce(D.getMonth()-se.getMonth()))===0&&(it=Ce(D.getDate()-se.getDate())),it}function L(D){switch(D.getDay()){case 0:return new Date(D.getFullYear()-1,11,29);case 1:return D;case 2:return new Date(D.getFullYear(),0,3);case 3:return new Date(D.getFullYear(),0,2);case 4:return new Date(D.getFullYear(),0,1);case 5:return new Date(D.getFullYear()-1,11,31);case 6:return new Date(D.getFullYear()-1,11,30)}}function Q(D){var se=D.Ab;for(D=new Date(new Date(D.Bb+1900,0,1).getTime());0<se;){var Ce=D.getMonth(),it=(lt(D.getFullYear())?ni:oi)[Ce];if(se>it-D.getDate())se-=it-D.getDate()+1,D.setDate(1),11>Ce?D.setMonth(Ce+1):(D.setMonth(0),D.setFullYear(D.getFullYear()+1));else{D.setDate(D.getDate()+se);break}}return Ce=new Date(D.getFullYear()+1,0,4),se=L(new Date(D.getFullYear(),0,4)),Ce=L(Ce),0>=U(se,D)?0>=U(Ce,D)?D.getFullYear()+1:D.getFullYear():D.getFullYear()-1}n>>>=0,l>>>=0,f>>>=0,b>>>=0;var Z=p()[b+40>>>2>>>0];b={oc:a()[b>>>2>>>0],nc:a()[b+4>>>2>>>0],Gb:a()[b+8>>>2>>>0],Lb:a()[b+12>>>2>>>0],Hb:a()[b+16>>>2>>>0],Bb:a()[b+20>>>2>>>0],vb:a()[b+24>>>2>>>0],Ab:a()[b+28>>>2>>>0],wc:a()[b+32>>>2>>>0],mc:a()[b+36>>>2>>>0],pc:Z?De(Z):""},f=De(f),Z={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var fe in Z)f=f.replace(new RegExp(fe,"g"),Z[fe]);var ne="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),ye="January February March April May June July August September October November December".split(" ");Z={"%a":D=>ne[D.vb].substring(0,3),"%A":D=>ne[D.vb],"%b":D=>ye[D.Hb].substring(0,3),"%B":D=>ye[D.Hb],"%C":D=>P((D.Bb+1900)/100|0,2),"%d":D=>P(D.Lb,2),"%e":D=>A(D.Lb,2," "),"%g":D=>Q(D).toString().substring(2),"%G":D=>Q(D),"%H":D=>P(D.Gb,2),"%I":D=>(D=D.Gb,D==0?D=12:12<D&&(D-=12),P(D,2)),"%j":D=>{for(var se=0,Ce=0;Ce<=D.Hb-1;se+=(lt(D.Bb+1900)?ni:oi)[Ce++]);return P(D.Lb+se,3)},"%m":D=>P(D.Hb+1,2),"%M":D=>P(D.nc,2),"%n":()=>`\n`,"%p":D=>0<=D.Gb&&12>D.Gb?"AM":"PM","%S":D=>P(D.oc,2),"%t":()=>"	","%u":D=>D.vb||7,"%U":D=>P(Math.floor((D.Ab+7-D.vb)/7),2),"%V":D=>{var se=Math.floor((D.Ab+7-(D.vb+6)%7)/7);if(2>=(D.vb+371-D.Ab-2)%7&&se++,se)se==53&&(Ce=(D.vb+371-D.Ab)%7,Ce==4||Ce==3&&lt(D.Bb)||(se=1));else{se=52;var Ce=(D.vb+7-D.Ab-1)%7;(Ce==4||Ce==5&&lt(D.Bb%400-1))&&se++}return P(se,2)},"%w":D=>D.vb,"%W":D=>P(Math.floor((D.Ab+7-(D.vb+6)%7)/7),2),"%y":D=>(D.Bb+1900).toString().substring(2),"%Y":D=>D.Bb+1900,"%z":D=>{D=D.mc;var se=0<=D;return D=Math.abs(D)/60,(se?"+":"-")+("0000"+(D/60*100+D%60)).slice(-4)},"%Z":D=>D.pc,"%%":()=>"%"},f=f.replace(/%%/g,"\\0\\0");for(fe in Z)f.includes(fe)&&(f=f.replace(new RegExp(fe,"g"),Z[fe](b)));return f=f.replace(/\\0\\0/g,"%"),fe=El(f),fe.length>l?0:(Pl(fe,n),fe.length-1)}me.Ib();for(var ai=Array(256),fn=0;256>fn;++fn)ai[fn]=String.fromCharCode(fn);kr=ai,rt=d.BindingError=class extends Error{constructor(n){super(n),this.name="BindingError"}},d.InternalError=class extends Error{constructor(n){super(n),this.name="InternalError"}},Object.assign(ur.prototype,{get(n){return this.wb[n]},has(n){return this.wb[n]!==void 0},Kb(n){var l=this.Nb.pop()||this.wb.length;return this.wb[l]=n,l},Mb(n){this.wb[n]=void 0,this.Nb.push(n)}}),nt.wb.push({value:void 0},{value:null},{value:!0},{value:!1}),nt.Db=nt.wb.length,d.count_emval_handles=()=>{for(var n=0,l=nt.Db;l<nt.wb.length;++l)nt.wb[l]!==void 0&&++n;return n};var Ol=[st,Kr,Ir,Zr,yt,Er,Pr,Jr,ir,Xr,Qr,en,tn,Or,jt,rn,qo,jo,Jo,Xo,Qo,ei,ti,ri],kl={ua:function(n,l,f){return X(async()=>{await d.cc(n,l,f)})},b:function(n,l,f){throw n>>>=0,new jn(n).Ib(l>>>0,f>>>0),Yr=n,Ar++,Yr},ga:function(n){li(n>>>0,!C,1,!E,131072,!1),me.Tb()},F:function(n){n>>>=0,T?postMessage({cmd:"cleanupThread",thread:n}):me.Rb(me.pb[n])},Y:qt,z:Zr,ma:yt,U:Er,W:Pr,N:Jr,ka:ir,da:Xr,ja:Qr,H:en,V:tn,S:Or,la:jt,T:rn,K:function(n,l,f,b,A){n>>>=0,l>>>=0,f>>>=0,l=ct(l);var P=l.indexOf("u")!=-1;P&&(A=(1n<<64n)-1n),ft(n,{name:l,fromWireType:U=>U,toWireType:function(U,L){if(typeof L!="bigint"&&typeof L!="number")throw new TypeError(`Cannot convert "${ar(L)}" to ${this.name}`);if(L<b||L>A)throw new TypeError(`Passing a number "${ar(L)}" from JS side to C/C++ side to an argument of type "${l}", which is outside the valid range [${b}, ${A}]!`);return L},argPackAdvance:8,readValueFromPointer:Dr(l,f,!P),Cb:null})},sa:function(n,l,f,b){n>>>=0,l=ct(l>>>0),ft(n,{name:l,fromWireType:function(A){return!!A},toWireType:function(A,P){return P?f:b},argPackAdvance:8,readValueFromPointer:function(A){return this.fromWireType(o()[A>>>0])},Cb:null})},ra:function(n,l){n>>>=0,l=ct(l>>>0),ft(n,{name:l,fromWireType:f=>{var b=Je(f);return Kt(f),b},toWireType:(f,b)=>ot(b),argPackAdvance:8,readValueFromPointer:on,Cb:null})},J:function(n,l,f){n>>>=0,f>>>=0,l=ct(l>>>0),ft(n,{name:l,fromWireType:b=>b,toWireType:(b,A)=>A,argPackAdvance:8,readValueFromPointer:an(l,f),Cb:null})},v:function(n,l,f,b,A){if(n>>>=0,f>>>=0,l=ct(l>>>0),A===-1&&(A=4294967295),A=L=>L,b===0){var P=32-8*f;A=L=>L<<P>>>P}var U=l.includes("unsigned")?function(L,Q){return Q>>>0}:function(L,Q){return Q};ft(n,{name:l,fromWireType:A,toWireType:U,argPackAdvance:8,readValueFromPointer:Dr(l,f,b!==0),Cb:null})},o:function(n,l,f){function b(P){var U=p()[P>>>2>>>0];return P=p()[P+4>>>2>>>0],new A(r().buffer,P,U)}n>>>=0;var A=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][l];f=ct(f>>>0),ft(n,{name:f,fromWireType:b,argPackAdvance:8,readValueFromPointer:b},{Yb:!0})},L:function(n,l){n>>>=0,l=ct(l>>>0);var f=l==="std::string";ft(n,{name:l,fromWireType:function(b){var A=p()[b>>>2>>>0],P=b+4;if(f)for(var U=P,L=0;L<=A;++L){var Q=P+L;if(L==A||o()[Q>>>0]==0){if(U=De(U,Q-U),Z===void 0)var Z=U;else Z+=String.fromCharCode(0),Z+=U;U=Q+1}}else{for(Z=Array(A),L=0;L<A;++L)Z[L]=String.fromCharCode(o()[P+L>>>0]);Z=Z.join("")}return St(b),Z},toWireType:function(b,A){A instanceof ArrayBuffer&&(A=new Uint8Array(A));var P=typeof A=="string";if(!(P||A instanceof Uint8Array||A instanceof Uint8ClampedArray||A instanceof Int8Array))throw new rt("Cannot pass non-string to std::string");var U=f&&P?tt(A):A.length,L=zr(4+U+1),Q=L+4;if(p()[L>>>2>>>0]=U,f&&P)Vt(A,Q,U+1);else if(P)for(P=0;P<U;++P){var Z=A.charCodeAt(P);if(255<Z)throw St(Q),new rt("String has UTF-16 code units that do not fit in 8 bits");o()[Q+P>>>0]=Z}else for(P=0;P<U;++P)o()[Q+P>>>0]=A[P];return b!==null&&b.push(St,L),L},argPackAdvance:8,readValueFromPointer:sn,Cb(b){St(b)}})},B:function(n,l,f){if(n>>>=0,l>>>=0,f>>>=0,f=ct(f),l===2)var b=ln,A=dn,P=lr,U=()=>u(),L=1;else l===4&&(b=Yn,A=le,P=cn,U=()=>p(),L=2);ft(n,{name:f,fromWireType:Q=>{for(var Z=p()[Q>>>2>>>0],fe=U(),ne,ye=Q+4,D=0;D<=Z;++D){var se=Q+4+D*l;(D==Z||fe[se>>>L]==0)&&(ye=b(ye,se-ye),ne===void 0?ne=ye:(ne+=String.fromCharCode(0),ne+=ye),ye=se+l)}return St(Q),ne},toWireType:(Q,Z)=>{if(typeof Z!="string")throw new rt(`Cannot pass non-string to C++ string type ${f}`);var fe=P(Z),ne=zr(4+fe+l);return p()[ne>>>2]=fe>>L,A(Z,ne+4,fe+l),Q!==null&&Q.push(St,ne),ne},argPackAdvance:8,readValueFromPointer:on,Cb(Q){St(Q)}})},ta:function(n,l){n>>>=0,l=ct(l>>>0),ft(n,{Zb:!0,name:l,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},qa:()=>1,Q:function(n,l){n>>>=0,n==l>>>0?setTimeout(()=>Yt()):T?postMessage({targetThread:n,cmd:"checkMailbox"}):(n=me.pb[n])&&n.postMessage({cmd:"checkMailbox"})},Z:function(n,l,f,b){l>>>=0,f/=2,dr.length=f,b=b>>>0>>>3;for(var A=0;A<f;A++)dr[A]=ge[b+2*A]?ge[b+2*A+1]:h()[b+2*A+1>>>0];return n=0>n?Ft[-n-1]:Ol[n],me.Wb=l,l=n.apply(null,dr),me.Wb=0,l},fa:ut,pa:function(n){_&&me.pb[n>>>0].ref()},t:function(n,l,f){return l>>>=0,f>>>=0,n=Je(n>>>0),l=cr(l,"emval::as"),Br(l,f,n)},y:function(n){return n>>>=0,X(()=>(n=Je(n),n.then(ot)))},p:function(n,l,f,b){return f>>>=0,b>>>=0,n=Y[n>>>0],l=Je(l>>>0),n(null,l,f,b)},k:function(n,l,f,b,A){return f>>>=0,b>>>=0,A>>>=0,n=Y[n>>>0],l=Je(l>>>0),f=ee(f),n(l,l[f],b,A)},c:Kt,C:function(n,l){return l>>>=0,n=Je(n>>>0),l=Je(l),n==l},n:function(n){return n>>>=0,n===0?ot(he()):(n=ee(n),ot(he()[n]))},j:function(n,l,f){l=ie(n,l>>>0);var b=l.shift();n--;var A=`return function (obj, func, destructorsRef, args) {\n`,P=0,U=[];f===0&&U.push("obj");for(var L=["retType"],Q=[b],Z=0;Z<n;++Z)U.push("arg"+Z),L.push("argType"+Z),Q.push(l[Z]),A+=`  var arg${Z} = argType${Z}.readValueFromPointer(args${P?"+"+P:""});\n`,P+=l[Z].argPackAdvance;for(A+=`  var rv = ${f===1?"new func":"func.call"}(${U.join(", ")});\n`,Z=0;Z<n;++Z)l[Z].deleteObject&&(A+=`  argType${Z}.deleteObject(arg${Z});\n`);return b.Zb||(L.push("emval_returnValue"),Q.push(Br),A+=`  return emval_returnValue(retType, destructorsRef, rv);\n`),L.push(A+`};\n`),n=Xe(L).apply(null,Q),f=`methodCaller<(${l.map(fe=>fe.name).join(", ")}) => ${b.name}>`,R(ve(f,n))},s:function(n,l){return l>>>=0,n=Je(n>>>0),l=Je(l),ot(n[l])},e:function(n){n>>>=0,4<n&&(nt.get(n).Qb+=1)},w:function(){return ot([])},m:function(n){n=Je(n>>>0);for(var l=Array(n.length),f=0;f<n.length;f++)l[f]=n[f];return ot(l)},g:function(n){return ot(ee(n>>>0))},l:function(){return ot({})},i:function(n){n>>>=0;for(var l=Je(n);l.length;){var f=l.pop();l.pop()(f)}Kt(n)},h:function(n,l,f){l>>>=0,f>>>=0,n=Je(n>>>0),l=Je(l),f=Je(f),n[l]=f},d:function(n,l){return l>>>=0,n=cr(n>>>0,"_emval_take_value"),n=n.readValueFromPointer(l),ot(n)},aa:function(n,l){n=-9007199254740992>n||9007199254740992<n?NaN:Number(n),l>>>=0,n=new Date(1e3*n),a()[l>>>2>>>0]=n.getUTCSeconds(),a()[l+4>>>2>>>0]=n.getUTCMinutes(),a()[l+8>>>2>>>0]=n.getUTCHours(),a()[l+12>>>2>>>0]=n.getUTCDate(),a()[l+16>>>2>>>0]=n.getUTCMonth(),a()[l+20>>>2>>>0]=n.getUTCFullYear()-1900,a()[l+24>>>2>>>0]=n.getUTCDay(),n=(n.getTime()-Date.UTC(n.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,a()[l+28>>>2>>>0]=n},ba:function(n,l){n=-9007199254740992>n||9007199254740992<n?NaN:Number(n),l>>>=0,n=new Date(1e3*n),a()[l>>>2>>>0]=n.getSeconds(),a()[l+4>>>2>>>0]=n.getMinutes(),a()[l+8>>>2>>>0]=n.getHours(),a()[l+12>>>2>>>0]=n.getDate(),a()[l+16>>>2>>>0]=n.getMonth(),a()[l+20>>>2>>>0]=n.getFullYear()-1900,a()[l+24>>>2>>>0]=n.getDay();var f=(lt(n.getFullYear())?Lo:Fo)[n.getMonth()]+n.getDate()-1|0;a()[l+28>>>2>>>0]=f,a()[l+36>>>2>>>0]=-(60*n.getTimezoneOffset()),f=new Date(n.getFullYear(),6,1).getTimezoneOffset();var b=new Date(n.getFullYear(),0,1).getTimezoneOffset();n=(f!=b&&n.getTimezoneOffset()==Math.min(b,f))|0,a()[l+32>>>2>>>0]=n},ca:function(n){n>>>=0;var l=new Date(a()[n+20>>>2>>>0]+1900,a()[n+16>>>2>>>0],a()[n+12>>>2>>>0],a()[n+8>>>2>>>0],a()[n+4>>>2>>>0],a()[n>>>2>>>0],0),f=a()[n+32>>>2>>>0],b=l.getTimezoneOffset(),A=new Date(l.getFullYear(),6,1).getTimezoneOffset(),P=new Date(l.getFullYear(),0,1).getTimezoneOffset(),U=Math.min(P,A);return 0>f?a()[n+32>>>2>>>0]=+(A!=P&&U==b):0<f!=(U==b)&&(A=Math.max(P,A),l.setTime(l.getTime()+6e4*((0<f?U:A)-b))),a()[n+24>>>2>>>0]=l.getDay(),f=(lt(l.getFullYear())?Lo:Fo)[l.getMonth()]+l.getDate()-1|0,a()[n+28>>>2>>>0]=f,a()[n>>>2>>>0]=l.getSeconds(),a()[n+4>>>2>>>0]=l.getMinutes(),a()[n+8>>>2>>>0]=l.getHours(),a()[n+12>>>2>>>0]=l.getDate(),a()[n+16>>>2>>>0]=l.getMonth(),a()[n+20>>>2>>>0]=l.getYear(),n=l.getTime(),isNaN(n)?(a()[si()>>>2>>>0]=61,n=-1):n/=1e3,BigInt(n)},_:qo,$:jo,P:function(n,l,f){function b(Z){return(Z=Z.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?Z[1]:"GMT"}n>>>=0,l>>>=0,f>>>=0;var A=new Date().getFullYear(),P=new Date(A,0,1),U=new Date(A,6,1);A=P.getTimezoneOffset();var L=U.getTimezoneOffset(),Q=Math.max(A,L);p()[n>>>2>>>0]=60*Q,a()[l>>>2>>>0]=+(A!=L),n=b(P),l=b(U),n=Ko(n),l=Ko(l),L<A?(p()[f>>>2>>>0]=n,p()[f+4>>>2>>>0]=l):(p()[f>>>2>>>0]=l,p()[f+4>>>2>>>0]=n)},q:()=>{Ut("")},f:function(n,l,f){return n>>>=0,l=Yo(l>>>0,f>>>0),Ft[n].apply(null,l)},M:function(n,l,f){return n>>>=0,l=Yo(l>>>0,f>>>0),Ft[n].apply(null,l)},G:()=>{},I:()=>Date.now(),oa:()=>{throw Ze+=1,"unwind"},R:function(){return 4294901760},u:()=>performance.timeOrigin+performance.now(),x:()=>_?(Ai(),pr(Ci)).cpus().length:navigator.hardwareConcurrency,O:function(n){n>>>=0;var l=o().length;if(n<=l||4294901760<n)return!1;for(var f=1;4>=f;f*=2){var b=l*(1+.2/f);b=Math.min(b,n+100663296);var A=Math;b=Math.max(n,b);e:{A=(A.min.call(A,4294901760,b+(65536-b%65536)%65536)-we.buffer.byteLength+65535)/65536;try{we.grow(A),Ne();var P=1;break e}catch{}P=void 0}if(P)return!0}return!1},ha:Jo,ia:Xo,X:nr,A:Qo,E:ei,ea:ti,D:ri,a:we||d.wasmMemory,na:ii,r:function(n,l,f,b){return ii(n>>>0,l>>>0,f>>>0,b>>>0)}},re=function(){function n(f,b){return re=f.exports,re=pn(),re=Rl(),me.Ub.push(re.bb),He.unshift(re.va),de=b,yr(),re}var l={a:kl};if(gt++,d.instantiateWasm)try{return d.instantiateWasm(l,n)}catch(f){$e(`Module.instantiateWasm callback failed with error: ${f}`),v(f)}return wr(l,function(f){n(f.instance,f.module)}).catch(v),{}}();d._OrtInit=(n,l)=>(d._OrtInit=re.wa)(n,l),d._OrtGetLastError=(n,l)=>(d._OrtGetLastError=re.xa)(n,l),d._OrtCreateSessionOptions=(n,l,f,b,A,P,U,L,Q,Z)=>(d._OrtCreateSessionOptions=re.ya)(n,l,f,b,A,P,U,L,Q,Z),d._OrtAppendExecutionProvider=(n,l)=>(d._OrtAppendExecutionProvider=re.za)(n,l),d._OrtAddFreeDimensionOverride=(n,l,f)=>(d._OrtAddFreeDimensionOverride=re.Aa)(n,l,f),d._OrtAddSessionConfigEntry=(n,l,f)=>(d._OrtAddSessionConfigEntry=re.Ba)(n,l,f),d._OrtReleaseSessionOptions=n=>(d._OrtReleaseSessionOptions=re.Ca)(n),d._OrtCreateSession=(n,l,f)=>(d._OrtCreateSession=re.Da)(n,l,f),d._OrtReleaseSession=n=>(d._OrtReleaseSession=re.Ea)(n),d._OrtGetInputOutputCount=(n,l,f)=>(d._OrtGetInputOutputCount=re.Fa)(n,l,f),d._OrtGetInputName=(n,l)=>(d._OrtGetInputName=re.Ga)(n,l),d._OrtGetOutputName=(n,l)=>(d._OrtGetOutputName=re.Ha)(n,l),d._OrtFree=n=>(d._OrtFree=re.Ia)(n),d._OrtCreateTensor=(n,l,f,b,A,P)=>(d._OrtCreateTensor=re.Ja)(n,l,f,b,A,P),d._OrtGetTensorData=(n,l,f,b,A)=>(d._OrtGetTensorData=re.Ka)(n,l,f,b,A),d._OrtReleaseTensor=n=>(d._OrtReleaseTensor=re.La)(n),d._OrtCreateRunOptions=(n,l,f,b)=>(d._OrtCreateRunOptions=re.Ma)(n,l,f,b),d._OrtAddRunConfigEntry=(n,l,f)=>(d._OrtAddRunConfigEntry=re.Na)(n,l,f),d._OrtReleaseRunOptions=n=>(d._OrtReleaseRunOptions=re.Oa)(n),d._OrtCreateBinding=n=>(d._OrtCreateBinding=re.Pa)(n),d._OrtBindInput=(n,l,f)=>(d._OrtBindInput=re.Qa)(n,l,f),d._OrtBindOutput=(n,l,f,b)=>(d._OrtBindOutput=re.Ra)(n,l,f,b),d._OrtClearBoundOutputs=n=>(d._OrtClearBoundOutputs=re.Sa)(n),d._OrtReleaseBinding=n=>(d._OrtReleaseBinding=re.Ta)(n),d._OrtRunWithBinding=(n,l,f,b,A)=>(d._OrtRunWithBinding=re.Ua)(n,l,f,b,A),d._OrtRun=(n,l,f,b,A,P,U,L)=>(d._OrtRun=re.Va)(n,l,f,b,A,P,U,L),d._OrtEndProfiling=n=>(d._OrtEndProfiling=re.Wa)(n),d._JsepOutput=(n,l,f)=>(d._JsepOutput=re.Xa)(n,l,f),d._JsepGetNodeName=n=>(d._JsepGetNodeName=re.Ya)(n);var si=()=>(si=re.Za)(),hn=d._pthread_self=()=>(hn=d._pthread_self=re._a)(),zr=d._malloc=n=>(zr=d._malloc=re.$a)(n),St=d._free=n=>(St=d._free=re.ab)(n);d.__emscripten_tls_init=()=>(d.__emscripten_tls_init=re.bb)();var ui=n=>(ui=re.cb)(n);d.__embind_initialize_bindings=()=>(d.__embind_initialize_bindings=re.db)();var li=d.__emscripten_thread_init=(n,l,f,b,A,P)=>(li=d.__emscripten_thread_init=re.fb)(n,l,f,b,A,P);d.__emscripten_thread_crashed=()=>(d.__emscripten_thread_crashed=re.gb)();var di=(n,l,f,b)=>(di=re.hb)(n,l,f,b),Qn=n=>(Qn=re.ib)(n),eo=d.__emscripten_thread_exit=n=>(eo=d.__emscripten_thread_exit=re.jb)(n),ci=()=>(ci=re.kb)(),pi=(n,l)=>(pi=re.lb)(n,l),to=()=>(to=re.mb)(),gn=n=>(gn=re.nb)(n),ro=n=>(ro=re.ob)(n),mi=d.dynCall_ii=(n,l)=>(mi=d.dynCall_ii=re.qb)(n,l),fi=n=>(fi=re.rb)(n),hi=()=>(hi=re.sb)(),gi=n=>(gi=re.tb)(n),yi=()=>(yi=re.ub)();d.___start_em_js=1393348,d.___stop_em_js=1393509;function Rl(){var n=re;n=Object.assign({},n);var l=b=>()=>b()>>>0,f=b=>A=>b(A)>>>0;return n.Za=l(n.Za),n._a=l(n._a),n.$a=f(n.$a),n.cb=f(n.cb),n.emscripten_main_runtime_thread_id=l(n.emscripten_main_runtime_thread_id),n.mb=l(n.mb),n.ob=f(n.ob),n}d.wasmMemory=we,d.stackAlloc=ro,d.stackSave=to,d.stackRestore=gn,d.keepRuntimeAlive=()=>0<Ze,d.UTF8ToString=De,d.stringToUTF8=Vt,d.lengthBytesUTF8=tt,d.ExitStatus=vr,d.PThread=me;var yn;Lt=function n(){yn||bi(),yn||(Lt=n)};function bi(){if(!(0<gt))if(T)y(d),T||or(He),startWorker(d);else{if(d.preRun)for(typeof d.preRun=="function"&&(d.preRun=[d.preRun]);d.preRun.length;)Fe.unshift(d.preRun.shift());or(Fe),0<gt||yn||(yn=!0,d.calledRun=!0,Pe||(T||or(He),y(d),T||or(Rt)))}}return bi(),t.ready}})();typeof Ti=="object"&&typeof lo=="object"?lo.exports=Ii:typeof define=="function"&&define.amd&&define([],()=>Ii)});var Pi=Ur((Np,Hl)=>{Hl.exports=\'"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs"),vm=require("vm");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,"utf8"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed?.(),a}}self.onmessage=handleMessage;\\n\'});var mo,Nt,Wr,vn,Nr,Mi,fo,be=J(()=>{"use strict";mo=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},Nt=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},Wr=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],vn=e=>{switch(e){case"float16":return Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},Nr=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},Mi=e=>e==="float32"||e==="int32"||e==="int64"||e==="bool"||e==="float16"||e==="uint32",fo=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}});var $n=J(()=>{});var Ui=J(()=>{$n()});var Vi,Wi=J(()=>{Vi="1.18.0"});var Ni,Xt,ho=J(()=>{Wi();Ni="warning",Xt={wasm:{},webgl:{},webgpu:{},versions:{common:Vi},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);Ni=e}},get logLevel(){return Ni}};Object.defineProperty(Xt,"logLevel",{enumerable:!0})});var mr,Hi=J(()=>{ho();mr=Xt});var Gi=J(()=>{});var Li=J(()=>{_n()});var qi=J(()=>{});var ji=J(()=>{_n()});var _n=J(()=>{Gi();Li();qi();ji()});var Sn=J(()=>{_n()});var go,Ki,Qt,er,yo=J(()=>{ho();go=(e,t)=>{Xt.wasm.trace&&console.timeStamp(`${e}::ORT::${t}`)},Ki=(e,t)=>{let r=new Error().stack?.split(/\\r\\n|\\r|\\n/g)||[],o=!1;for(let i=0;i<r.length;i++){if(o&&!r[i].includes("TRACE_FUNC")){let u=`FUNC_${e}::${r[i].trim().split(" ")[1]}`;t&&(u+=`::${t}`),go("CPU",u);return}r[i].includes("TRACE_FUNC")&&(o=!0)}},Qt=e=>{Xt.wasm.trace&&Ki("BEGIN",e)},er=e=>{Xt.wasm.trace&&Ki("END",e)}});var Yi=J(()=>{$n();Sn();yo()});var Zi=J(()=>{Yi()});var Ji=J(()=>{});var Xi=J(()=>{$n();Sn()});var Qi=J(()=>{Xi()});var fr=J(()=>{Ui();Hi();Zi();Sn();yo();Ji();Qi()});var Ql,ed,ea,ta,ra,td,ze,Ht=J(()=>{"use strict";be();Ql=["V","I","W","E","F"],ed=(e,t)=>{console.log(`[${Ql[e]},${new Date().toISOString()}]${t}`)},ra=(e,t)=>{ea=e,ta=t},td=(e,t)=>{let r=Nr(e),o=Nr(ea);r>=o&&ed(r,typeof t=="function"?t():t)},ze=(...e)=>{ta&&td(...e)}});var na,oa=J(()=>{"use strict";be();na=(e,t)=>new(vn(t))(e)});var xn=J(()=>{"use strict"});var Cn,rd,ia,wo,bo,sa,ua=J(()=>{"use strict";Ht();xn();Cn=e=>Math.ceil(e/16)*16,rd=1,ia=()=>rd++,wo=async(e,t,r,o)=>{let i=Cn(r),u=e.device.createBuffer({size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let a=e.getCommandEncoder();e.endComputePass(),a.copyBufferToBuffer(t,0,u,0,i),e.flush(),await u.mapAsync(GPUMapMode.READ);let p=u.getMappedRange();if(o){let m=o();return m.set(new Uint8Array(p,0,r)),m}else return new Uint8Array(p.slice(0,r))}finally{u.destroy()}},bo=class{constructor(t){this.backend=t;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map,this.capturedPendingBuffers=new Map}upload(t,r){let o=r.buffer,i=r.byteOffset,u=r.byteLength,a=Cn(u),p=this.storageCache.get(t);if(!p)throw new Error("gpu data for uploading does not exist");if(p.originalSize!==u)throw new Error(`inconsistent data size. gpu data size=${p.originalSize}, data size=${u}`);let m=this.backend.device.createBuffer({mappedAtCreation:!0,size:a,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),h=m.getMappedRange();new Uint8Array(h).set(new Uint8Array(o,i,u)),m.unmap();let d=this.backend.getCommandEncoder();this.backend.endComputePass(),d.copyBufferToBuffer(m,0,p.gpuData.buffer,0,a),ze("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${t})`),this.buffersForUploadingPending.push(m)}memcpy(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("source gpu data for memcpy does not exist");let i=this.storageCache.get(r);if(!i)throw new Error("destination gpu data for memcpy does not exist");if(o.originalSize!==i.originalSize)throw new Error("inconsistent source and destination gpu data size");let u=Cn(o.originalSize),a=this.backend.getCommandEncoder();this.backend.endComputePass(),a.copyBufferToBuffer(o.gpuData.buffer,0,i.gpuData.buffer,0,u)}registerExternalBuffer(t,r,o){let i;if(o){if(i=this.externalBuffers.get(o),i===void 0)throw new Error("previous buffer is not registered");if(t===o)return ze("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${i}, buffer is the same, skip.`),i;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.\n             Please use the previous external buffer!`);this.externalBuffers.delete(o)}else i=ia();return this.storageCache.set(i,{gpuData:{id:i,type:0,buffer:t},originalSize:r}),this.externalBuffers.set(t,i),ze("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${i}, registered.`),i}unregisterExternalBuffer(t){let r=this.externalBuffers.get(t);r!==void 0&&(this.storageCache.delete(r),this.externalBuffers.delete(t),ze("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${r}`))}create(t,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let o=Cn(t),i,u=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,a=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(u||a){let m=u?this.freeBuffers:this.freeUniformBuffers,h=m.get(o);h||(h=[],m.set(o,h)),h.length>0?i=h.pop():i=this.backend.device.createBuffer({size:o,usage:r})}else i=this.backend.device.createBuffer({size:o,usage:r});let p={id:ia(),type:0,buffer:i};return this.storageCache.set(p.id,{gpuData:p,originalSize:t}),ze("verbose",()=>`[WebGPU] GpuDataManager.create(size=${t}) => id=${p.id}`),p}get(t){return this.storageCache.get(t)?.gpuData}release(t){let r=this.storageCache.get(t);if(!r)throw new Error("releasing data does not exist");return ze("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${r.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(r.gpuData.buffer),r.originalSize}async download(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("data does not exist");await wo(this.backend,o.gpuData.buffer,o.originalSize,r)}refreshPendingBuffers(){for(let t of this.buffersForUploadingPending)t.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let t of this.buffersPending)(t.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(t.size).push(t):(t.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(t.size).push(t):t.destroy();this.buffersPending=[]}else{let t=this.capturedPendingBuffers.get(this.backend.currentSessionId);t||(t=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,t));for(let r of this.buffersPending)t.push(r);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(t){let r=this.capturedPendingBuffers.get(t);r&&(r.forEach(o=>{o.destroy()}),this.capturedPendingBuffers.delete(t))}},sa=(...e)=>new bo(...e)});var vo,Te,Qe=J(()=>{"use strict";vo=class{constructor(t){Object.assign(this,t)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(t=>`${this[t]}`).join(";")),this.key}},Te=e=>new vo(e)});var $o,xt,W,tr,An,In,Tn,Ee=J(()=>{"use strict";$o=class{static calcMatMulShape(t,r){return t[1]!==r[0]?void 0:[t[0],r[1]]}},xt=class{static calcShape(t,r,o=!1){let i=t.length,u=r.length;if(i===0)return r;if(u===0)return t;let a=Math.max(t.length,r.length),p=new Array(a);if(o){if(i<2||u<2)return;let m=$o.calcMatMulShape([t[i-2],t[i-1]],[r[u-2],r[u-1]]);if(m===void 0)return;[p[a-2],p[a-1]]=m}for(let m=o?3:1;m<=a;m++){let h=i-m<0?1:t[i-m],d=u-m<0?1:r[u-m];if(h!==d&&h>1&&d>1)return;p[a-m]=Math.max(h,d)}return p}static isValidBroadcast(t,r){let o=t.length,i=r.length;if(o>i)return!1;for(let u=1;u<=o;u++)if(t[o-u]!==1&&t[o-u]!==r[i-u])return!1;return!0}},W=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,o){let i=1;for(let u=r;u<o;u++){if(t[u]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");i*=t[u]}return i}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let o=new Array(r);o[r-1]=1,o[r-2]=t[r-1];for(let i=r-3;i>=0;--i)o[i]=o[i+1]*t[i+1];return o}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(o=>this.normalizeAxis(o,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(o=>t[o]):t.slice().reverse()}static padShape(t,r){let o=t.length;return t.map((i,u)=>i+r[u]+r[u+o])}static areEqual(t,r){return t.length!==r.length?!1:t.every((o,i)=>o===r[i])}},tr=class e{static adjustPoolAttributes(t,r,o,i,u,a){if(!t&&o.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let p=0;p<r.length-2;p++)p>=o.length?o.push(r[p+2]):o[p]=r[p+2];for(let p=0;p<o.length;p++)if(p<i.length){if(i[p]<0)throw new Error("strides should be greater than or equal to 1")}else i.push(1);for(let p=0;p<o.length;p++)if(p<u.length){if(u[p]<0)throw new Error("dilations should be greater than or equal to 1")}else u.push(1);for(let p=0;p<o.length*2;p++)if(p<a.length){if(a[p]<0)throw new Error("pad should be greater than or equal to 1")}else a.push(0);for(let p=0;p<o.length;p++){if(o[p]<=0)throw new Error("kernel shapes need to be greater than 0");if(a[p]>=o[p]||a[p+o.length]>=o[p])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,o,i,u,a,p){if(p){if(u.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(i.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let m=0;m<t.length-2;m++)e.adjustPadAndReturnShape(t[m+(a?1:2)],r[m],o[m],i[m],u,m,m+t.length-2,p)}}static computePoolOutputShape(t,r,o,i,u,a,p){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let m=[r[0],r[1]];return e.computeShapeHelper(t,r,m,o,i,u,a,p),m}static computeConvOutputShape(t,r,o,i,u,a,p){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let m=[t[0],r[0]];return e.computeShapeHelper(!1,t,m,o,i,u,a,p),m}static computeShapeHelper(t,r,o,i,u,a,p,m){if(t)for(let h=0;h<r.length-2;h++)o.push(1);else for(let h=0;h<r.length-2;h++)o.push(e.adjustPadAndReturnShape(r[h+2],i[h],u[h],a[h],p,h,h+r.length-2,m))}static adjustPadAndReturnShape(t,r,o,i,u,a,p,m){let h=o*(i-1)+1;if(m&&m!=="NOTSET")switch(m){case"VALID":return u[a]=0,u[p]=0,Math.floor((t-h)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(o!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let y=((t+r-1)/r-1)*r+i-t;return u[a]=Math.floor(m==="SAME_LOWER"?(y+1)/2:y/2),u[p]=y-u[a],Math.floor((t+y-i)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+u[a]+u[p]-h)/r+1)}},An=class{static getShapeOfGemmResult(t,r,o,i,u){if(t.length!==2||o.length!==2)throw new Error("shape need to be of size 2");let a,p,m;r?(a=t[1],p=t[0]):(a=t[0],p=t[1]);let h=-1;if(i?(m=o[0],h=1):(m=o[1],h=0),o[h]!==p)throw new Error("dimension mismatch");if(a<=0||m<=0||p<=0)throw new Error("invalid shape specified");if(u&&!xt.isValidBroadcast(u,[a,m]))throw new Error("gemm: invalid bias shape for broadcast");return[a,m,p]}},In=-34028234663852886e22,Tn=34028234663852886e22});var nd,So,Ge,wt,G,Le,et,vt,dt,pe,xo,V,K,En,_o,la,hr,Ie=J(()=>{"use strict";be();Ee();nd=64,So=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}},Ge=(e,t=1)=>{let r=So(e,t);return typeof r=="string"?r:r[0]},wt=(e,t=1)=>{let r=So(e,t);return typeof r=="string"?r:r[1]},G=e=>e.length===0?[]:[{type:12,data:e},{type:12,data:W.computeStrides(e)}],Le=e=>e%4===0?4:e%2===0?2:1,et=(e="f32",t,r="0")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,vt=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}f(${r})`,dt=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,pe=(e,t,r,o)=>e.startsWith("uniforms.")&&r>4?typeof t=="string"?o==="f16"?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:o==="f16"?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:r>1?`${e}[${t}]`:e,xo=(e,t,r,o,i)=>{let u=typeof r=="number",a=u?r:r.length,p=[...new Array(a).keys()],m=a<2?"u32":a<=4?`vec${a}<u32>`:`array<u32, ${a}>`,h=So(t,i),d=typeof h=="string"?h:h[1],y=typeof h=="string"?h:h[0],v={indices:m,value:d,storage:y,tensor:t},S=F=>typeof F=="string"?F:`${F}u`,w={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},x=u?"uniforms.":"",E=`${x}${e}_shape`,C=`${x}${e}_strides`,_="";for(let F=0;F<a-1;F++)_+=`\n    let dim${F} = current / ${pe(C,F,a)};\n    let rest${F} = current % ${pe(C,F,a)};\n    indices[${F}] = dim${F};\n    current = rest${F};\n    `;_+=`indices[${a-1}] = current;`;let T=a<2?"":`\n  fn o2i_${e}(offset: u32) -> ${v.indices} {\n    var indices: ${v.indices};\n    var current = offset;\n    ${_}\n    return indices;\n  }`,O=F=>(w.offsetToIndices=!0,a<2?F:`o2i_${e}(${F})`),z=[];if(a>=2)for(let F=a-1;F>=0;F--)z.push(`${pe(C,F,a)} * (indices[${F}])`);let M=a<2?"":`\n  fn i2o_${e}(indices: ${v.indices}) -> u32 {\n    return ${z.join("+")};\n  }`,N=F=>(w.indicesToOffset=!0,a<2?F:`i2o_${e}(${F})`),j=(...F)=>a===0?"0u":`${v.indices}(${F.map(S).join(",")})`,ue=(F,ae)=>a<2?`${F}`:`${pe(F,ae,a)}`,k=(F,ae,ge)=>a<2?`${F}=${ge};`:`${pe(F,ae,a)}=${ge};`,te={},Be=(F,ae)=>{w.broadcastedIndicesToOffset=!0;let ge=`${ae.name}broadcastedIndicesTo${e}Offset`;if(ge in te)return`${ge}(${F})`;let ht=[];for(let Ye=a-1;Ye>=0;Ye--){let Ne=ae.indicesGet("outputIndices",Ye+ae.rank-a);ht.push(`${ue(C,Ye)} * (${Ne} % ${ue(E,Ye)})`)}return te[ge]=`fn ${ge}(outputIndices: ${ae.type.indices}) -> u32 {\n             return ${ht.length>0?ht.join("+"):"0u"};\n           }`,`${ge}(${F})`},Ue=(F,ae)=>(()=>{if(v.storage===v.value)return`${e}[${F}]=${ae};`;if(v.storage==="vec2<u32>"&&v.value==="i32")return`${e}[${F}]=vec2<u32>(u32(${ae}), select(0u, 0xFFFFFFFFu, ${ae} < 0));`;if(v.storage==="vec2<u32>"&&v.value==="u32")return`${e}[${F}]=vec2<u32>(u32(${ae}), 0u);`;if(v.storage==="u32"&&v.value==="vec4<bool>")return`${e}[${F}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${ae}));`;throw new Error(`not supported combination of storage type ${v.storage} and value type ${v.value} yet`)})(),$e=F=>(()=>{if(v.storage===v.value)return`${e}[${F}]`;if(v.storage==="vec2<u32>"&&v.value==="i32")return`i32(${e}[${F}].x)`;if(v.storage==="vec2<u32>"&&v.value==="u32")return`u32(${e}[${F}].x)`;if(v.storage==="u32"&&v.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${F}] & 0xFFu), bool(${e}[${F}] & 0xFF00u), bool(${e}[${F}] & 0xFF0000u), bool(${e}[${F}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${v.storage} and value type ${v.value} yet`)})(),we=a<2?"":`\n  fn get_${e}ByIndices(indices: ${v.indices}) -> ${d} {\n    return ${$e(`i2o_${e}(indices)`)};\n  }`,de=a<2?"":(()=>{let F=p.map(ge=>`d${ge}: u32`).join(", "),ae=p.map(ge=>`d${ge}`).join(", ");return`\n  fn get_${e}(${F}) -> ${d} {\n    return get_${e}ByIndices(${j(ae)});\n  }`})(),Pe=(...F)=>{if(F.length!==a)throw new Error(`indices length must be ${a}`);let ae=F.map(S).join(",");return a===0?$e("0u"):a===1?$e(ae[0]):(w.get=!0,w.getByIndices=!0,w.indicesToOffset=!0,`get_${e}(${ae})`)},xe=F=>a<2?$e(F):(w.getByIndices=!0,w.indicesToOffset=!0,`get_${e}ByIndices(${F})`),oe=a<2?"":`\n  fn set_${e}ByIndices(indices: ${v.indices}, value: ${d}) {\n    ${Ue(`i2o_${e}(indices)`,"value")}\n  }`,_e=a<2?"":(()=>{let F=p.map(ge=>`d${ge}: u32`).join(", "),ae=p.map(ge=>`d${ge}`).join(", ");return`\n  fn set_${e}(${F}, value: ${d}) {\n    set_${e}ByIndices(${j(ae)}, value);\n  }`})();return{impl:()=>{let F=[],ae=!1;return w.offsetToIndices&&(F.push(T),ae=!0),w.indicesToOffset&&(F.push(M),ae=!0),w.broadcastedIndicesToOffset&&(Object.values(te).forEach(ge=>F.push(ge)),ae=!0),w.set&&(F.push(_e),ae=!0),w.setByIndices&&(F.push(oe),ae=!0),w.get&&(F.push(de),ae=!0),w.getByIndices&&(F.push(we),ae=!0),!u&&ae&&F.unshift(`const ${E} = ${v.indices}(${r.join(",")});`,`const ${C} = ${v.indices}(${W.computeStrides(r).join(",")});`),F.join(`\n`)},type:v,offsetToIndices:O,indicesToOffset:N,broadcastedIndicesToOffset:Be,indices:j,indicesGet:ue,indicesSet:k,set:(...F)=>{if(F.length!==a+1)throw new Error(`indices length must be ${a}`);let ae=F[a];if(typeof ae!="string")throw new Error("value must be string");let ge=F.slice(0,a).map(S).join(",");return a===0?Ue("0u",ae):a===1?Ue(ge[0],ae):(w.set=!0,w.setByIndices=!0,w.indicesToOffset=!0,`set_${e}(${ge}, ${ae})`)},setByOffset:Ue,setByIndices:(F,ae)=>a<2?Ue(F,ae):(w.setByIndices=!0,w.indicesToOffset=!0,`set_${e}ByIndices(${F}, ${ae});`),get:Pe,getByOffset:$e,getByIndices:xe,usage:o,name:e,strides:C,shape:E,rank:a}},V=(e,t,r,o=1)=>xo(e,t,r,"input",o),K=(e,t,r,o=1)=>xo(e,t,r,"output",o),En=(e,t,r,o=1)=>xo(e,t,r,"internal",o),_o=class{constructor(t){this.normalizedDispatchGroup=t;this.internalVariables=[];this.variables=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(t){return`if (global_idx >= ${typeof t=="number"?`${t}u`:t}) { return; }`}mainStart(t=nd){let r=typeof t=="number"?t:t[0],o=typeof t=="number"?1:t[1],i=typeof t=="number"?1:t[2],u=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,a=u?`@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(local_invocation_id) local_id : vec3<u32>,\n    @builtin(local_invocation_index) local_idx : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(num_workgroups) num_workgroups : vec3<u32>`,p=u?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +\n          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${r*o*i}u + local_idx;`;return`@compute @workgroup_size(${r}, ${o}, ${i})\n  fn main(${a}) {\n    ${p}\n  `}appendVariableUniforms(t){t.rank!==0&&(t.shape.startsWith("uniforms.")&&this.uniforms.push({name:t.shape.replace("uniforms.",""),type:"u32",length:t.rank}),t.strides.startsWith("uniforms.")&&this.uniforms.push({name:t.strides.replace("uniforms.",""),type:"u32",length:t.rank}))}declareVariable(t,r){if(t.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(t),this.appendVariableUniforms(t);let o=t.usage==="input"?"read":"read_write",i=t.type.storage;return`@group(0) @binding(${r}) var<storage, ${o}> ${t.name}: array<${i}>;`}declareVariables(...t){return t.map(r=>this.declareVariable(r,this.variableIndex++)).join(`\n`)}registerInternalVariable(t){if(t.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(t),this.appendVariableUniforms(t)}registerInternalVariables(...t){return t.forEach(r=>this.registerInternalVariable(r)),this}registerUniform(t,r,o=1){return this.uniforms.push({name:t,type:r,length:o}),this}registerUniforms(t){return this.uniforms=this.uniforms.concat(t),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let t=[];for(let{name:r,type:o,length:i}of this.uniforms)if(i&&i>4)o==="f16"?t.push(`@align(16) ${r}:array<mat2x4<${o}>, ${Math.ceil(i/8)}>`):t.push(`${r}:array<vec4<${o}>, ${Math.ceil(i/4)}>`);else{let u=i==null||i===1?o:`vec${i}<${o}>`;t.push(`${r}:${u}`)}return`\n      struct Uniforms { ${t.join(", ")} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(t=>t.impl()).join(`\n`)+this.internalVariables.map(t=>t.impl()).join(`\n`)}},la=e=>new _o(e),hr=(e,t)=>{let r=e.length,o=[];for(let i=0;i<r;i++){let u=r-1-i,a=e[u]||1;(t[t.length-1-i]||1)>1&&a===1&&o.unshift(u)}return o}});var od,da,id,ad,$t,ca,pa,gr=J(()=>{"use strict";be();Ee();Qe();Ie();od=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},da=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,id=(e,t)=>W.sortBasedOnPerm(e,da(e.length,t)),ad=(e,t,r,o)=>{let i=[];i.push(`fn perm(i: ${o.type.indices}) -> ${r.type.indices} {\n    var a: ${r.type.indices};`);for(let u=0;u<t;++u)i.push(r.indicesSet("a",e[u],`i[${u}]`));return i.push("return a;}"),i.join(`\n`)},$t=(e,t)=>{let r=e.dataType,o=e.dims.length,i=da(o,t),u=id(e.dims,i),a=K("output",r,u.length),p=V("a",r,o),m=h=>`\n  ${h.registerUniform("output_size","u32").declareVariables(p,a)}\n\n  ${ad(i,o,p,a)}\n\n  ${h.mainStart()}\n    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${a.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${a.setByOffset("global_idx",p.getByIndices("aIndices"))}\n  }`;return{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:h=>{let d=W.size(u);return{outputs:[{dims:u,dataType:h[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:[{type:12,data:d},...G(h[0].dims),...G(u)]}},getShaderSource:m}},ca=(e,t)=>{od(e.inputs),e.compute($t(e.inputs[0],t.perm))},pa=e=>Te({perm:e.perm})});var sd,ud,ld,dd,cd,pd,md,fd,hd,gd,Ct,ma,fa,ha,ga,ya,ba,wa,va,$a,_a,Sa=J(()=>{"use strict";be();Ee();Ie();Pn();gr();sd={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},ud={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},ld={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},dd={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},cd=(e,t)=>{let r=[];for(let o=t-e;o<t;++o)r.push(o);return r},pd=(e,t)=>{let r=[],o=e.length;for(let u=0;u<o;u++)t.indexOf(u)===-1&&r.push(e[u]);let i=t.map(u=>e[u]);return[r,i]},md=(e,t)=>{let r=e.length+t.length,o=[],i=0;for(let u=0;u<r;u++)t.indexOf(u)===-1?o.push(e[i++]):o.push(1);return o},fd=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},hd=(e,t)=>{let r=[];if(!fd(e,t)){for(let o=0;o<t;++o)e.indexOf(o)===-1&&r.push(o);e.forEach(o=>r.push(o))}return r},gd=(e,t,r,o,i,u,a)=>{let p=r[0].dims,m=W.size(u),h=W.size(a),d=V("_A",r[0].dataType,p),y=K("output",i,u),v=32,S=`\n          var<workgroup> aBestValues : array<${y.type.storage}, ${v}>;\n       `;return{name:e,shaderCache:t,getShaderSource:x=>`\n        ${x.registerUniform("reduceSize","u32").declareVariables(d,y)}\n        ${S}\n        fn DIV_CEIL(a : u32, b : u32) -> u32 {\n          return ((a - 1u) / b + 1u);\n         }\n         ${x.mainStart(v)}\n\n          let outputIndex = global_idx / ${v};\n          let offset = outputIndex * uniforms.reduceSize;\n\n          var bestValue = ${y.type.storage}(${ld[o]});\n          let Length = uniforms.reduceSize;\n          for (var k = local_idx; k < Length; k = k + ${v}) {\n           let candidate = ${y.type.storage}(${d.getByOffset("offset + k")});\n           bestValue = ${sd[o]};\n          }\n          aBestValues[local_idx] = bestValue;\n          workgroupBarrier();\n\n         var reduceSize = min(Length, ${v}u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (local_idx < currentSize) {\n            let candidate = aBestValues[local_idx + interval];\n            bestValue = ${ud[o]};\n            aBestValues[local_idx] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (local_idx == 0u) {\n          ${y.setByOffset("outputIndex",`${o==="mean"?`bestValue / ${y.type.storage}(uniforms.reduceSize)`:`${dd[o]}`}`)};\n         }\n        }`,getRunData:()=>({outputs:[{dims:u,dataType:i}],dispatchGroup:{x:m},programUniforms:[{type:12,data:h}]})}},Ct=(e,t,r,o)=>{let i=e.inputs.length===1?r:Co(e.inputs,r),u=i.axes;u.length===0&&!i.noopWithEmptyAxes&&(u=e.inputs[0].dims.map((S,w)=>w));let a=W.normalizeAxes(u,e.inputs[0].dims.length),p=a,m=e.inputs[0],h=hd(p,e.inputs[0].dims.length);h.length>0&&(m=e.compute($t(e.inputs[0],h),{inputs:[0],outputs:[-1]})[0],p=cd(p.length,m.dims.length));let[d,y]=pd(m.dims,p),v=d;i.keepDims&&(v=md(d,a)),e.compute(gd(t,{hint:i.cacheKey,inputDependencies:["type"]},[m],o,e.inputs[0].dataType,v,y),{inputs:[m]})},ma=(e,t)=>{Ct(e,"ReduceMeanShared",t,"mean")},fa=(e,t)=>{Ct(e,"ReduceL1Shared",t,"l1")},ha=(e,t)=>{Ct(e,"ReduceL2Shared",t,"l2")},ga=(e,t)=>{Ct(e,"ReduceLogSumExpShared",t,"logSumExp")},ya=(e,t)=>{Ct(e,"ReduceMaxShared",t,"max")},ba=(e,t)=>{Ct(e,"ReduceMinShared",t,"min")},wa=(e,t)=>{Ct(e,"ReduceProdShared",t,"prod")},va=(e,t)=>{Ct(e,"ReduceSumShared",t,"sum")},$a=(e,t)=>{Ct(e,"ReduceSumSquareShared",t,"sumSquare")},_a=(e,t)=>{Ct(e,"ReduceLogSumShared",t,"logSum")}});var At,yd,On,Co,It,bd,wd,vd,$d,_d,Sd,xd,Cd,Ad,Id,Tt,xa,Ca,Aa,Ia,Ta,Ea,Pa,Oa,ka,Ra,Pn=J(()=>{"use strict";be();Ee();Qe();Ie();Sa();At=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},yd=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],On=(e,t,r,o,i,u,a=!1,p=!1)=>{let m=[],h=r[0].dims,d=h.length,y=W.normalizeAxes(i,d),v=!p&&y.length===0;h.forEach((E,C)=>{v||y.indexOf(C)>=0?a&&m.push(1):m.push(E)});let S=m.length,w=W.size(m);return{name:e,shaderCache:t,getShaderSource:E=>{let C=[],_=V("_A",r[0].dataType,d),T=K("output",u,S),O=o(_,T,y),z=O[2];for(let M=0,N=0;M<d;M++)v||y.indexOf(M)>=0?(a&&N++,z=`for(var j${M}: u32 = 0; j${M} < ${h[M]}; j${M}++) {\n                  ${O[2].includes("last_index")?`let last_index = j${M};`:""}\n                  ${_.indicesSet("input_indices",M,`j${M}`)}\n                  ${z}\n                }`):(C.push(`${_.indicesSet("input_indices",M,T.indicesGet("output_indices",N))};`),N++);return`\n\n        ${E.registerUniform("output_size","u32").declareVariables(_,T)}\n\n        ${E.mainStart()}\n          ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var input_indices: ${_.type.indices};\n          let output_indices = ${T.offsetToIndices("global_idx")};\n\n          ${C.join(`\n`)}\n          ${O[0]}       // init ops for reduce max/min\n          ${O[1]}\n          ${z}\n          ${O[3]}\n          ${O.length===4?T.setByOffset("global_idx","value"):O.slice(4).join(`\n`)}\n        }`},getRunData:()=>({outputs:[{dims:m,dataType:u}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:[{type:12,data:w},...G(h),...G(m)]})}},Co=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(o=>r.push(Number(o))),Te({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},It=(e,t,r,o)=>{let i=e.inputs,u=i.length===1?r:Co(i,r);e.compute(On(t,{hint:u.cacheKey,inputDependencies:["rank"]},[i[0]],u.noopWithEmptyAxes&&u.axes.length===0?yd:o,u.axes,i[0].dataType,u.keepDims,u.noopWithEmptyAxes),{inputs:[0]})},bd=(e,t)=>{At(e.inputs),It(e,"ReduceLogSum",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,"value = log(value);"])},wd=(e,t)=>{At(e.inputs),It(e,"ReduceL1",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += abs(${o.getByIndices("input_indices")});`,""])},vd=(e,t)=>{At(e.inputs),It(e,"ReduceL2",t,(o,i)=>[`var t = ${i.type.value}(0); var value = ${i.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},$d=(e,t)=>{At(e.inputs),It(e,"ReduceLogSumExp",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += exp(${o.getByIndices("input_indices")});`,"value = log(value);"])},_d=(e,t)=>{At(e.inputs),It(e,"ReduceMax",t,(o,i,u)=>{let a=[];for(let p=0;p<o.rank;p++)(u.indexOf(p)>=0||u.length===0)&&a.push(o.indicesSet("input_indices",p,0));return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = max(value, ${o.getByIndices("input_indices")});`,""]})},Sd=(e,t)=>{At(e.inputs),It(e,"ReduceMean",t,(o,i,u)=>{let a=1;for(let p=0;p<o.rank;p++)(u.indexOf(p)>=0||u.length===0)&&(a*=e.inputs[0].dims[p]);return["var sum = f32(0);","",`sum += f32(${o.getByIndices("input_indices")});`,`let value = ${i.type.value}(sum / ${a});`]})},xd=(e,t)=>{At(e.inputs),It(e,"ReduceMin",t,(o,i,u)=>{let a=[];for(let p=0;p<o.rank;p++)(u.indexOf(p)>=0||u.length===0)&&a.push(`input_indices[${p}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = min(value, ${o.getByIndices("input_indices")});`,""]})},Cd=(e,t)=>{At(e.inputs),It(e,"ReduceProd",t,(o,i)=>[`var value = ${i.type.storage}(1);`,"",`value *= ${o.getByIndices("input_indices")};`,""])},Ad=(e,t)=>{At(e.inputs),It(e,"ReduceSum",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,""])},Id=(e,t)=>{At(e.inputs),It(e,"ReduceSumSquare",t,(o,i)=>[`var t = ${i.type.value}(0); var value = ${i.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += t * t;`,""])},Tt=(e,t,r)=>{if(t.length===0)return r;let o=1,i=1;for(let u=0;u<t.length;u++)t.indexOf(u)===-1?o*=e[u]:i*=e[u];return i<32&&o>1024},xa=(e,t)=>{Tt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Sd(e,t):ma(e,t)},Ca=(e,t)=>{Tt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?wd(e,t):fa(e,t)},Aa=(e,t)=>{Tt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?vd(e,t):ha(e,t)},Ia=(e,t)=>{Tt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?$d(e,t):ga(e,t)},Ta=(e,t)=>{Tt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?_d(e,t):ya(e,t)},Ea=(e,t)=>{Tt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?xd(e,t):ba(e,t)},Pa=(e,t)=>{Tt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Cd(e,t):wa(e,t)},Oa=(e,t)=>{Tt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ad(e,t):va(e,t)},ka=(e,t)=>{Tt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Id(e,t):$a(e,t)},Ra=(e,t)=>{Tt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?bd(e,t):_a(e,t)}});var Da,Ba,Ma,Ao,za=J(()=>{"use strict";be();Qe();Pn();Da=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},Ba=(e,t)=>{Da(e.inputs);let r=(o,i,u)=>{let a=[];for(let p=0;p<o.rank;p++)(u.indexOf(p)>=0||u.length===0)&&a.push(`input_indices[${p}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {\n         value = ${o.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(On("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},Ma=(e,t)=>{Da(e.inputs);let r=(o,i,u)=>{let a=[];for(let p=0;p<o.rank;p++)(u.indexOf(p)>=0||u.length===0)&&a.push(`input_indices[${p}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {\n         value = ${o.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(On("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},Ao=e=>Te(e)});var Td,Ed,Pd,Od,kn,kd,Ua,Io=J(()=>{"use strict";be();xn();Ie();Td=(e,t)=>{let r=e[0],o=e[1],i=e[2],u=e[3],a=e[4],p=e[5];if(a&&p)throw new Error("Attention cannot have both past and relative_position_bias");if(r.dims.length!==3)throw new Error(\'Input "input" must have 3 dimensions\');let m=r.dims[0],h=r.dims[1],d=r.dims[2];if(i.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimensions\');if(o.dims.length!==2)throw new Error(\'Input "weights" is expected to have 2 dimensions\');if(o.dims[0]!==d)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(i.dims[0]!==o.dims[1])throw new Error(\'Input "bias" dimension 0 should have same length as dimension 1 of input "weights"\');let y=i.dims[0]/3,v=y,S=v;if(t.qkvHiddenSizes.length>0){if(t.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let T of t.qkvHiddenSizes)if(T%t.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");y=t.qkvHiddenSizes[0],v=t.qkvHiddenSizes[1],S=t.qkvHiddenSizes[2]}let w=h;if(y!==v)throw new Error("qkv_hidden_sizes first element should be same as the second");if(i.dims[0]!==y+v+S)throw new Error(\'Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes\');let x=0;if(a){if(v!==S)throw new Error(\'Input "past" expect k_hidden_size == v_hidden_size\');if(a.dims.length!==5)throw new Error(\'Input "past" must have 5 dimensions\');if(a.dims[0]!==2)throw new Error(\'Input "past" first dimension must be 2\');if(a.dims[1]!==m)throw new Error(\'Input "past" second dimension must be batch_size\');if(a.dims[2]!==t.numHeads)throw new Error(\'Input "past" third dimension must be num_heads\');if(a.dims[4]!==v/t.numHeads)throw new Error(\'Input "past" fifth dimension must be k_hidden_size / num_heads\');t.pastPresentShareBuffer||(x=a.dims[3])}let E=w+x,C=-1,_=0;if(u)throw new Error("Mask not supported");if(a)throw new Error("past is not supported");if(p)throw new Error("relativePositionBias is not supported");return{batchSize:m,sequenceLength:h,pastSequenceLength:x,kvSequenceLength:w,totalSequenceLength:E,maxSequenceLength:C,inputHiddenSize:d,hiddenSize:y,vHiddenSize:S,headSize:Math.floor(y/t.numHeads),vHeadSize:Math.floor(S/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:_,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},Ed=(e,t,r,o)=>{let i=Le(o),u=64,a=o/i;a<u?u=1:a/8<64&&(u=Math.ceil(a/8));let p=Math.ceil(o/i/u),m=[{type:t.dataType,data:1/o},{type:12,data:a},{type:12,data:p}],h=Ge(t.dataType,i),d=y=>{let v=K("x",t.dataType,t.dims,i),S="thread_max_vector";i===2?S="max(thread_max_vector.x, thread_max_vector.y)":i===4&&(S="max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))");let w=wt(t.dataType),x=[{name:"d_inv",type:w},{name:"d_comp",type:"u32"},{name:"elements_per_wg",type:"u32"}];return`\n  var<workgroup> wgMax: array<f32, ${u}>;\n  var<workgroup> wgSum: array<f32, ${u}>;\n  ${y.registerUniforms(x).declareVariables(v)}\n  ${y.mainStart([u,1,1])}\n    let localOffset = local_idx * uniforms.elements_per_wg;\n    let offset: u32 = workgroup_id.x * uniforms.d_comp + localOffset;\n\n    var thread_max_vector = ${et("f32",i,"-3.402823e+38f")};\n    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n      thread_max_vector = max(${vt(w,i,"x[offset + i]")}, thread_max_vector);\n    }\n    wgMax[local_idx] = ${S};\n    workgroupBarrier();\n\n    var maxValue = -3.402823e+38f;\n    for (var i = 0u; i < ${u}; i++) {\n      maxValue = max(wgMax[i], maxValue);\n    }\n\n    var sumVector = ${et("f32",i,"0")};\n    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n      sumVector += exp(${vt(w,i,"x[offset + i]")} - maxValue);\n    }\n    wgSum[local_idx] = ${dt("sumVector",i)};\n    workgroupBarrier();\n\n    var sum: f32 = 0;\n    for (var i = 0u; i < ${u}; i++) {\n      sum += wgSum[i];\n    }\n\n    if (sum == 0) {\n      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n        x[offset + i] = ${et(w,i,"uniforms.d_inv")};\n      }\n    } else {\n      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n        let f32input = ${vt(w,i,"x[offset + i]")};\n        x[offset + i] = ${v.type.value}(exp(f32input - maxValue) / sum);\n      }\n    }\n  }`};e.compute({name:"AttentionProbsSoftmax",shaderCache:{hint:`${u};${h};${i}`},getShaderSource:d,getRunData:()=>({outputs:[],dispatchGroup:{x:r},programUniforms:m})},{inputs:[t],outputs:[]})},Pd=(e,t,r,o,i,u)=>{let a=[i.batchSize,i.numHeads,i.sequenceLength,i.kvSequenceLength+i.pastSequenceLength],p=u.scale===0?1/Math.sqrt(i.headSize):u.scale,m=Le(i.headSize),h=i.headSize/m,d=12,y={x:Math.ceil(i.totalSequenceLength/d),y:Math.ceil(i.sequenceLength/d),z:i.batchSize*i.numHeads},v=[{type:12,data:i.sequenceLength},{type:12,data:h},{type:12,data:i.totalSequenceLength},{type:12,data:i.kvSequenceLength},{type:t.dataType,data:p}],S=[t,r],w=E=>{let C=V("q",t.dataType,t.dims,m),_=V("key",r.dataType,r.dims,m),T=K("output",t.dataType,a),O=Ge(t.dataType),z=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"alpha",type:O}];return`\n  const beta: ${O} = 1.0;\n  const TILE_SIZE = ${d}u;\n\n  var<workgroup> tileQ: array<${C.type.storage}, ${d*d}>;\n  var<workgroup> tileK: array<${C.type.storage}, ${d*d}>;\n  ${E.registerUniforms(z).declareVariables(C,_,T)}\n  ${E.mainStart([d,d,1])}\n    // x holds the N and y holds the M\n    let headIdx = workgroup_id.z;\n    let m = workgroup_id.y * TILE_SIZE;\n    let n = workgroup_id.x * TILE_SIZE;\n    let lm = m + local_id.y;\n    let ln = n + local_id.x;\n\n    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;\n    let kOffset = uniforms.kv_sequence_length * uniforms.K * headIdx + n * uniforms.K;\n\n    var value = ${et(O,m)};\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m + local_id.y < uniforms.M && w + local_id.x < uniforms.K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {\n        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      workgroupBarrier();\n\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = headIdx * uniforms.M * uniforms.N;\n    if (lm < uniforms.M && ln < uniforms.N) {\n      let outputIdx = headOffset + lm * uniforms.N + ln;\n      output[outputIdx] = ${dt("value",m)} * uniforms.alpha;\n    }\n  }`},x=e.compute({name:"AttentionProbs",shaderCache:{hint:`${m}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:a,dataType:t.dataType,gpuDataType:0}],dispatchGroup:y,programUniforms:v}),getShaderSource:w},{inputs:S,outputs:[-1]})[0];return Ed(e,x,i.batchSize*i.numHeads*i.sequenceLength,i.totalSequenceLength),x},Od=(e,t,r,o)=>{let i=[o.batchSize,o.sequenceLength,o.vHiddenSize],u=12,a={x:Math.ceil(o.vHeadSize/u),y:Math.ceil(o.sequenceLength/u),z:o.batchSize*o.numHeads},p=[{type:12,data:o.sequenceLength},{type:12,data:o.totalSequenceLength},{type:12,data:o.vHeadSize},{type:12,data:o.numHeads},{type:12,data:o.vHiddenSize}],m=h=>{let d=V("probs",t.dataType,t.dims),y=V("v",r.dataType,r.dims),v=K("output",t.dataType,i),S=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`\n  const TILE_SIZE = ${u}u;\n  var<workgroup> tileQ: array<${d.type.value}, ${u*u}>;\n  var<workgroup> tileK: array<${d.type.value}, ${u*u}>;\n  ${h.registerUniforms(S).declareVariables(d,y,v)}\n  ${h.mainStart([u,u,1])}\n   let headIdx = workgroup_id.z;\n   let m = workgroup_id.y * TILE_SIZE + local_id.y;\n   let n = workgroup_id.x * TILE_SIZE + local_id.x;\n\n   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;\n   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;\n\n   var value = ${d.type.storage}(0);\n   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n     if (m < uniforms.M && w + local_id.x < uniforms.K) {\n       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];\n     }\n     if (n < uniforms.N && w + local_id.y < uniforms.K) {\n       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];\n     }\n     workgroupBarrier();\n     for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];\n     }\n     workgroupBarrier();\n   }\n\n   // we need to transpose output from BNSH_v to BSND_v\n   let batchIdx = workgroup_id.z / uniforms.num_heads;\n   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;\n   let headOffset = (batchIdx * uniforms.M * uniforms.num_heads + currentBatchHeadNumber) * uniforms.N;\n   if (m < uniforms.M && n < uniforms.N) {\n     let outputIdx = batchIdx * uniforms.M *uniforms.v_hidden_size + m * uniforms.v_hidden_size\n       + currentBatchHeadNumber * uniforms.N + n;\n     output[outputIdx] = value;\n   }\n  }`};return e.compute({name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:i,dataType:t.dataType,gpuDataType:0}],dispatchGroup:a,programUniforms:p}),getShaderSource:m},{inputs:[t,r],outputs:[0]})[0]},kn=(e,t,r,o,i,u,a,p,m,h,d)=>{let y=Pd(e,t,r,m,h,d);Od(e,y,o,h)},kd=(e,t)=>{let r=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],o=t.sequenceLength,i=t.inputHiddenSize,u=t.headSize,a=12,p={x:Math.ceil(t.headSize/a),y:Math.ceil(t.sequenceLength/a),z:t.batchSize*t.numHeads},m=[e.inputs[0],e.inputs[1],e.inputs[2]],h=[{type:12,data:o},{type:12,data:i},{type:12,data:u},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}],d=y=>{let v=K("output_q",m[0].dataType,r),S=K("output_k",m[0].dataType,r),w=K("output_v",m[0].dataType,r),x=V("input",m[0].dataType,m[0].dims),E=V("weight",m[1].dataType,m[1].dims),C=V("bias",m[2].dataType,m[2].dims),_=x.type.storage,T=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`\n  const TILE_SIZE = ${a}u;\n  var<workgroup> tileInput: array<${_}, ${a*a}>;\n  var<workgroup> tileWeightQ: array<${_}, ${a*a}>;\n  var<workgroup> tileWeightK: array<${_}, ${a*a}>;\n  var<workgroup> tileWeightV: array<${_}, ${a*a}>;\n  ${y.registerUniforms(T).declareVariables(x,E,C,v,S,w)}\n  ${y.mainStart([a,a,1])}\n    let batchIndex = workgroup_id.z / uniforms.num_heads;\n    let headNumber = workgroup_id.z % uniforms.num_heads;\n    let m = workgroup_id.y * TILE_SIZE + local_id.y;\n    let n = workgroup_id.x * TILE_SIZE + local_id.x;\n\n    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;\n    let biasOffsetQ = headNumber * uniforms.head_size;\n    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;\n    let biasOffsetV = uniforms.hidden_size + biasOffsetK;\n\n    var valueQ = ${_}(0);\n    var valueK = ${_}(0);\n    var valueV = ${_}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\n        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];\n      }\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\n        let offset = n + (w + local_id.y) * uniforms.ldb;\n        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];\n        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];\n        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];\n      }\n      workgroupBarrier();\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        let inputTileOffset = TILE_SIZE * local_id.y + k;\n        let weightTileOffset = TILE_SIZE * k + local_id.x;\n        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];\n        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];\n        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = (m * uniforms.N + n) % uniforms.head_size;\n    valueQ += bias[headOffset + biasOffsetQ];\n    valueK += bias[headOffset + biasOffsetK];\n    valueV += bias[headOffset + biasOffsetV];\n\n    let offset = workgroup_id.z * uniforms.M * uniforms.N;\n    if (m < uniforms.M && n < uniforms.N) {\n      let outputIdx = offset + m * uniforms.N + n;\n      output_q[outputIdx] = valueQ;\n      output_k[outputIdx] = valueK;\n      output_v[outputIdx] = valueV;\n    }\n  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:p,programUniforms:h}),getShaderSource:d},{inputs:m,outputs:[-1,-1,-1]})},Ua=(e,t)=>{let r=Td(e.inputs,t),[o,i,u]=kd(e,r);return kn(e,o,i,u,e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t)}});var Rd,Dd,Bd,Va,Wa=J(()=>{"use strict";fr();be();Ee();Qe();Ie();Rd=(e,t)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let r=(o,i,u)=>{let a=i.length;if(a!==o.length)throw new Error(`${u}: num dimensions != ${a}`);i.forEach((p,m)=>{if(p!==o[m])throw new Error(`${u}: dim[${m}] do not match`)})};if(e[0].dims.length>1){let o=t.format==="NHWC"?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);r(e[1].dims,o,"Invalid input scale"),r(e[2].dims,o,"Invalid input B"),r(e[3].dims,o,"Invalid input mean"),r(e[4].dims,o,"Invalid input var")}else r(e[1].dims,[1],"Invalid input scale"),r(e[2].dims,[1],"Invalid input B"),r(e[3].dims,[1],"Invalid input mean"),r(e[4].dims,[1],"Invalid input var")},Dd=(e,t)=>{let{epsilon:r,spatial:o,format:i}=t,u=e[0].dims,a=o?Le(u[u.length-1]):1,p=i==="NHWC"&&u.length>1?a:1,m=W.size(u)/a,h=o,d=h?u.length:u,y=V("x",e[0].dataType,e[0].dims,a),v=V("scale",e[1].dataType,e[1].dims,p),S=V("bias",e[2].dataType,e[2].dims,p),w=V("inputMean",e[3].dataType,e[3].dims,p),x=V("inputVar",e[4].dataType,e[4].dims,p),E=K("y",e[0].dataType,d,a),C=()=>{let T="";if(o)T=`let cOffset = ${u.length===1?"0u":i==="NHWC"?`outputIndices[${u.length-1}] / ${a}`:"outputIndices[1]"};`;else if(i==="NCHW")T=`\n            ${E.indicesSet("outputIndices","0","0")}\n            let cOffset = ${E.indicesToOffset("outputIndices")};`;else{T=`var cIndices = ${v.type.indices}(0);\n                       cIndices[0] = outputIndices[${u.length-1}];`;for(let O=1;O<v.rank;O++)T+=`cIndices[${O}] = outputIndices[${O}];`;T+=`let cOffset = ${v.indicesToOffset("cIndices")};`}return T},_=T=>`\n  const epsilon = ${r};\n  ${T.registerUniform("outputSize","u32").declareVariables(y,v,S,w,x,E)}\n  ${T.mainStart()}\n  ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n    var outputIndices = ${E.offsetToIndices(`global_idx * ${a}`)};\n    ${C()}\n    let scale = ${v.getByOffset("cOffset")};\n    let bias = ${S.getByOffset("cOffset")};\n    let inputMean = ${w.getByOffset("cOffset")};\n    let inputVar = ${x.getByOffset("cOffset")};\n    let x = ${y.getByOffset("global_idx")};\n    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;\n    ${E.setByOffset("global_idx","value")}\n  }`;return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${o}_${a}`,inputDependencies:h?["rank","type","type","type","type"]:void 0},getShaderSource:_,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:h?[{type:12,data:m},...G(u)]:[{type:12,data:m}]})}},Bd=e=>Te(e),Va=(e,t)=>{let{inputs:r,outputCount:o}=e,i=Bd({...t,outputCount:o});if(mr.webgpu.validateInputContent&&Rd(r,i),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(Dd(r,i))}});var Md,zd,Na,Ha=J(()=>{"use strict";Ee();Ie();Md=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},zd=e=>{let t=e[0].dims,r=e[0].dims[2],o=W.size(t)/4,i=e[0].dataType,u=V("input",i,t,4),a=V("bias",i,[r],4),p=V("residual",i,t,4),m=K("output",i,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:d=>`\n  const channels = ${r}u / 4;\n  ${d.declareVariables(u,a,p,m)}\n\n  ${d.mainStart()}\n    ${d.guardAgainstOutOfBoundsWorkgroupSizes(o)}\n    let value = ${u.getByOffset("global_idx")}\n      + ${a.getByOffset("global_idx % channels")} + ${p.getByOffset("global_idx")};\n    ${m.setByOffset("global_idx","value")}\n  }`}},Na=e=>{Md(e.inputs),e.compute(zd(e.inputs))}});var Ud,Re,Ga,La,Fa,qa,ja,Ka,Ya,Za,Ja,Vd,Xa,Qa,es,ts,Rn,rs,Dn,ns,os,is,as,ss,us,ls,ds,cs,ps,ms,fs,hs,gs,ys,bs,ws,vs,$s,To=J(()=>{"use strict";be();Ee();Qe();Ie();Ud=(e,t,r,o,i,u)=>{let a=Math.ceil(t/4),p="";typeof i=="string"?p=`${i}(a)`:p=i("a");let m=V("inputData",r,[a],4),h=K("outputData",o,[a],4);return`\n      ${e.registerUniform("vec_size","u32").declareVariables(m,h)}\n\n  ${u??""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n\n    let a = ${m.getByOffset("global_idx")};\n    ${h.setByOffset("global_idx",p)}\n  }`},Re=(e,t,r,o,i,u=e.dataType)=>({name:t,shaderCache:{hint:i,inputDependencies:["type"]},getShaderSource:a=>Ud(a,W.size(e.dims),e.dataType,u,r,o),getRunData:a=>({outputs:[{dims:e.dims,dataType:u}],dispatchGroup:{x:Math.ceil(W.size(a[0].dims)/64/4)},programUniforms:[{type:12,data:Math.ceil(W.size(e.dims)/4)}]})}),Ga=e=>{e.compute(Re(e.inputs[0],"Abs","abs"))},La=e=>{e.compute(Re(e.inputs[0],"Acos","acos"))},Fa=e=>{e.compute(Re(e.inputs[0],"Acosh","acosh"))},qa=e=>{e.compute(Re(e.inputs[0],"Asin","asin"))},ja=e=>{e.compute(Re(e.inputs[0],"Asinh","asinh"))},Ka=e=>{e.compute(Re(e.inputs[0],"Atan","atan"))},Ya=e=>{e.compute(Re(e.inputs[0],"Atanh","atanh"))},Za=e=>Te(e),Ja=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute \'to\' from \'Cast\' operator): ${t.to}`)}e.compute(Re(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},Vd=e=>{let t=e.length>=2&&e[1].data!==0?e[1].getFloat32Array()[0]:In,r=e.length>=3&&e[2].data!==0?e[2].getFloat32Array()[0]:Tn;return Te({min:t,max:r})},Xa=(e,t)=>{let r=e.inputs.length===1?t:Vd(e.inputs),o=wt(e.inputs[0].dataType);e.compute(Re(e.inputs[0],"Clip",i=>`clamp(${i}, clip_min_, clip_max_)`,`\n    const clip_min_: vec4<${o}> = vec4(${o}(${r.min}));\n    const clip_max_: vec4<${o}> = vec4(${o}(${r.max}));\n`,r.cacheKey),{inputs:[0]})},Qa=e=>{e.compute(Re(e.inputs[0],"Ceil","ceil"))},es=e=>{e.compute(Re(e.inputs[0],"Cos","cos"))},ts=e=>{e.compute(Re(e.inputs[0],"Cosh","cosh"))},Rn=e=>Te(e),rs=(e,t)=>{let r=wt(e.inputs[0].dataType);e.compute(Re(e.inputs[0],"Elu",o=>`elu_vf32(${o})`,`\n  const elu_alpha_ = ${r}(${t.alpha});\n\n  fn elu_f32(a: ${r}) -> ${r} {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<${r}>) -> vec4<${r}> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,t.cacheKey))},Dn=(e,t="f32")=>`\nconst r0: ${t} = 0.3275911;\nconst r1: ${t} = 0.254829592;\nconst r2: ${t} = -0.284496736;\nconst r3: ${t} = 1.421413741;\nconst r4: ${t} = -1.453152027;\nconst r5: ${t} = 1.061405429;\n\nfn erf_vf32(v: ${e}) -> ${e} {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,ns=e=>{let t=wt(e.inputs[0].dataType);e.compute(Re(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,Dn(`vec4<${t}>`,t)))},os=e=>{e.compute(Re(e.inputs[0],"Exp","exp"))},is=e=>{e.compute(Re(e.inputs[0],"Floor","floor"))},as=e=>{let t=wt(e.inputs[0].dataType);e.compute(Re(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,Dn(`vec4<${t}>`,t)))},ss=(e,t)=>{let r=wt(e.inputs[0].dataType);e.compute(Re(e.inputs[0],"LeakyRelu",o=>`select(leaky_relu_alpha_ * ${o}, ${o}, ${o} >= vec4<${r}>(0.0))`,`const leaky_relu_alpha_ = ${r}(${t.alpha});`,t.cacheKey))},us=e=>{e.compute(Re(e.inputs[0],"Not",t=>`!${t}`))},ls=e=>{e.compute(Re(e.inputs[0],"Neg",t=>`-${t}`))},ds=e=>{e.compute(Re(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},cs=e=>{let t=wt(e.inputs[0].dataType);e.compute(Re(e.inputs[0],"Relu",r=>`select(vec4<${t}>(0.0), ${r}, ${r} > vec4<${t}>(0.0))`))},ps=e=>{e.compute(Re(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},ms=e=>Te(e),fs=(e,t)=>{let r=wt(e.inputs[0].dataType);e.compute(Re(e.inputs[0],"HardSigmoid",o=>`max(vec4<${r}>(0.0), min(vec4<${r}>(1.0), ${t.alpha} * ${o} + vec4<${r}>(${t.beta})))`,void 0,t.cacheKey))},hs=e=>{e.compute(Re(e.inputs[0],"Sin","sin"))},gs=e=>{e.compute(Re(e.inputs[0],"Sinh","sinh"))},ys=e=>{e.compute(Re(e.inputs[0],"Sqrt","sqrt"))},bs=e=>{e.compute(Re(e.inputs[0],"Tan","tan"))},ws=e=>{e.compute(Re(e.inputs[0],"Tanh",t=>`sign(${t}) * (1 - exp(-2 * abs(${t}))) / (1 + exp(-2 * abs(${t})))`))},vs=(e,t)=>{let r=wt(e.inputs[0].dataType);return e.compute(Re(e.inputs[0],"ThresholdedRelu",o=>`select(vec4<${r}>(0.0), ${o}, ${o} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${r}>(${t.alpha});`,t.cacheKey)),0},$s=e=>{e.compute(Re(e.inputs[0],"Log","log"))}});var Nd,Hd,_s,Ss=J(()=>{"use strict";Ee();Ie();To();Nd=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Hd=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=V("input",e[0].dataType,e[0].dims,4),o=V("bias",e[0].dataType,[e[0].dims[2]],4),i=K("output",e[0].dataType,t,4),u=W.size(t)/4,a=Ge(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)}}),getShaderSource:m=>`\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${e[0].dims[2]/4/2}u;\n\n  ${m.declareVariables(r,o,i)}\n\n  ${Dn(`vec4<${a}>`,a)}\n\n  ${m.mainStart()}\n    ${m.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${i.setByOffset("global_idx","valueLeft * geluRight")}\n  }`}},_s=e=>{Nd(e.inputs),e.compute(Hd(e.inputs))}});var Gd,Ld,Et,xs,Cs,As,Is,Ts,Es,Ps,Os,ks,Rs,Ds=J(()=>{"use strict";be();Ee();Ie();Gd=(e,t,r,o,i,u,a,p,m,h,d,y)=>{let v,S;typeof p=="string"?v=S=(_,T)=>`${p}((${_}),(${T}))`:typeof p=="function"?v=S=p:(v=p.scalar,S=p.vector);let w=K("outputData",d,o.length,4),x=V("aData",m,t.length,4),E=V("bData",h,r.length,4),C;if(i)if(u){let _=W.size(t)===1,T=W.size(r)===1,O=t.length>0&&t[t.length-1]%4===0,z=r.length>0&&r[r.length-1]%4===0;_||T?C=w.setByOffset("global_idx",S(_?`${x.type.value}(${x.getByOffset("0")}.x)`:x.getByOffset("global_idx"),T?`${E.type.value}(${E.getByOffset("0")}.x)`:E.getByOffset("global_idx"))):C=`\n            let outputIndices = ${w.offsetToIndices("global_idx * 4u")};\n            let offsetA = ${x.broadcastedIndicesToOffset("outputIndices",w)};\n            let offsetB = ${E.broadcastedIndicesToOffset("outputIndices",w)};\n            ${w.setByOffset("global_idx",S(a||O?x.getByOffset("offsetA / 4u"):`${x.type.value}(${x.getByOffset("offsetA / 4u")}[offsetA % 4u])`,a||z?E.getByOffset("offsetB / 4u"):`${E.type.value}(${E.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}\n          `}else C=w.setByOffset("global_idx",S(x.getByOffset("global_idx"),E.getByOffset("global_idx")));else{if(!u)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let _=(T,O,z="")=>{let M=`aData[indexA${O}][componentA${O}]`,N=`bData[indexB${O}][componentB${O}]`;return`\n            let outputIndices${O} = ${w.offsetToIndices(`global_idx * 4u + ${O}u`)};\n            let offsetA${O} = ${x.broadcastedIndicesToOffset(`outputIndices${O}`,w)};\n            let offsetB${O} = ${E.broadcastedIndicesToOffset(`outputIndices${O}`,w)};\n            let indexA${O} = offsetA${O} / 4u;\n            let indexB${O} = offsetB${O} / 4u;\n            let componentA${O} = offsetA${O} % 4u;\n            let componentB${O} = offsetB${O} % 4u;\n            ${T}[${O}] = ${z}(${v(M,N)});\n          `};d===9?C=`\n            var data = vec4<u32>(0);\n            ${_("data",0,"u32")}\n            ${_("data",1,"u32")}\n            ${_("data",2,"u32")}\n            ${_("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:C=`\n            ${_("outputData[global_idx]",0)}\n            ${_("outputData[global_idx]",1)}\n            ${_("outputData[global_idx]",2)}\n            ${_("outputData[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(x,E,w)}\n\n        ${y??""}\n\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${C}\n      }`},Ld=(e,t,r,o,i,u,a=r.dataType)=>{let p=!W.areEqual(r.dims,o.dims),m=r.dims,h=W.size(r.dims),d=!1,y=!1,v=[p];if(p){let S=xt.calcShape(r.dims,o.dims,!1);if(!S)throw new Error("Can\'t perform binary op on the given tensors");m=S,h=W.size(m);let w=W.size(r.dims)===1,x=W.size(o.dims)===1,E=r.dims.length>0&&r.dims[r.dims.length-1]%4===0,C=o.dims.length>0&&o.dims[o.dims.length-1]%4===0;v.push(w),v.push(x),v.push(E),v.push(C);let _=1;for(let T=1;T<m.length;T++){let O=r.dims[r.dims.length-T]??1,z=o.dims[o.dims.length-T]??1;if(O===z)_*=O;else break}_%4===0?(y=!0,d=!0):(w||x||E||C)&&(d=!0)}else d=!0;return v.push(d),{name:e,shaderCache:{hint:t+v.map(S=>S.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:S=>Gd(S,r.dims,o.dims,m,d,p,y,i,r.dataType,o.dataType,a,u),getRunData:()=>({outputs:[{dims:m,dataType:a}],dispatchGroup:{x:Math.ceil(h/64/4)},programUniforms:[{type:12,data:Math.ceil(W.size(m)/4)},...G(r.dims),...G(o.dims),...G(m)]})}},Et=(e,t,r,o,i,u)=>{e.compute(Ld(t,i??"",e.inputs[0],e.inputs[1],r,o,u))},xs=e=>{Et(e,"Add",(t,r)=>`${t}+${r}`)},Cs=e=>{Et(e,"Div",(t,r)=>`${t}/${r}`)},As=e=>{Et(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},Is=e=>{Et(e,"Mul",(t,r)=>`${t}*${r}`)},Ts=e=>{let t=V("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;Et(e,"Pow",{scalar:(o,i)=>`pow_custom(${o},${i})`,vector:(o,i)=>`pow_vector_custom(${o},${i})`},`\n    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {\n      if (b == ${t}(0.0)) {\n        return ${t}(1.0);\n      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {\n        return ${t}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {\n      // TODO: implement vectorized pow\n      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `)},Es=e=>{Et(e,"Sub",(t,r)=>`${t}-${r}`)},Ps=e=>{Et(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},Os=e=>{Et(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},ks=e=>{Et(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},Rs=e=>{Et(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}});var qd,jd,Kd,Yd,Bs,Ms,zs=J(()=>{"use strict";be();Ee();Qe();Ie();qd=e=>{if(!e||e.length<1)throw new Error("too few inputs");let t=e[0].dataType,r=e[0].dims.length;for(let o of e){if(o.dataType!==t)throw new Error("input tensors should be one type");if(o.dims.length!==r)throw new Error("input tensors should have the same shape")}},jd=(e,t)=>`\n  fn calculateInputIndex(index: u32) -> u32 {\n    let sizeInConcatAxis = array<u32, ${e}u>(${t});\n    for (var i: u32 = 0u; i < ${e}; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${e}u;\n  }`,Kd=(e,t)=>{let r=e.length,o=[];for(let i=0;i<r;++i){let u=t.setByOffset("global_idx",e[i].getByIndices("indices"));r===1?o.push(u):i===0?o.push(`if (inputIndex == ${i}u) { ${u} }`):i===r-1?o.push(`else { ${u} }`):o.push(`else if (inputIndex == ${i}) { ${u} }`)}return o.join(`\n`)},Yd=(e,t)=>{let r=e[0].dims.slice();if(t>=r.length||t<-1*r.length)throw new Error("axis specified for concat doesn\'t match input dimensionality");let o=t<0?r.length+t:t,i=r.slice(0);for(let C=1;C<e.length;C++){let _=e[C].dims.slice();for(let T=0;T<r.length;T++)if(T===o)i[o]+=_[T];else if(r[T]!==_[T])throw new Error("non concat dimensions must match")}let u=W.size(i),a=new Array(e.length),p=new Array(e.length),m=e[0].dataType,h=0,d=[],y=[],v=[{type:12,data:u}];for(let C=0;C<e.length;++C)h+=e[C].dims[o],a[C]=h,y.push(e[C].dims.length),p[C]=V(`input${C}`,m,y[C]),d.push("rank"),v.push({type:12,data:a[C]});for(let C=0;C<e.length;++C)v.push(...G(e[C].dims));v.push(...G(i));let S=K("output",m,i.length),w=S.indicesGet("indices",o),x=Array.from(Array(a.length).keys()).map(C=>`uniforms.sizeInConcatAxis${C}`).join(","),E=C=>`\n\n  ${(()=>{C.registerUniform("outputSize","u32");for(let _=0;_<e.length;_++)C.registerUniform(`sizeInConcatAxis${_}`,"u32");return C.declareVariables(...p,S)})()}\n\n  ${jd(a.length,x)}\n\n  ${C.mainStart()}\n    ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n    var indices = ${S.offsetToIndices("global_idx")};\n\n    let inputIndex = calculateInputIndex(${w});\n    if (inputIndex != 0u) {\n      let sizeInConcatAxis = array<u32, ${a.length}u>(${x});\n      ${w} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${Kd(p,S)}\n  }`;return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:v}),getShaderSource:E}},Bs=(e,t)=>{qd(e.inputs),e.compute(Yd(e.inputs,t.axis))},Ms=e=>Te({axis:e.axis})});var Pt,Ot,kt,Bn,Gt=J(()=>{"use strict";be();Ee();Pt=(e,t)=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(uniforms.clip_min), ${t}(uniforms.clip_max));`;case"HardSigmoid":return`value = max(${t}(0.0), min(${t}(1.0), ${t}(uniforms.alpha) * value + ${t}(uniforms.beta)));`;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},Ot=(e,t)=>{e.activation==="Clip"?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"&&t.push({type:1,data:e.alpha},{type:1,data:e.beta})},kt=(e,t)=>{e.activation==="Clip"?t.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"&&t.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"})},Bn=e=>{let t=e?.activation||"";if(t==="HardSigmoid"){let[r,o]=e?.activation_params||[.2,.5];return{activation:t,alpha:r,beta:o}}else if(t==="Clip"){let[r,o]=e?.activation_params||[In,Tn];return{activation:t,clipMax:o,clipMin:r}}return{activation:t}}});var je,Mn,zn=J(()=>{"use strict";je=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},Mn=e=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      `});var Un,Eo=J(()=>{"use strict";Un=e=>`\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));\n}\n`});var Zd,Jd,Hr,Us,Xd,Gr,Qd,Vn,Lr=J(()=>{"use strict";be();Ee();Ie();Gt();zn();Zd=(e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `,Jd=(e,t)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`,Hr=(e,t,r="f32",o,i=!1,u=32,a=!1,p=32)=>{let m=t[1]*e[1],h=t[0]*e[0],d=i?m:u,y=i?u:m,v=d/t[0],S=u/t[1];if(!((i&&v===4&&e[1]===4||!i&&(v===3||v===4))&&d%t[0]===0&&u%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${i} is true, innerElementSize ${v} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${v} must be 3 or 4.\n  tileAWidth ${d} must be divisible by workgroupSize[0]${t[0]}. tileInner ${u} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub: array<array<vec${v}<${r}>, ${d/v}>, ${y}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${r}>, ${h/e[0]}>, ${u}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${v};\nconst tileInner = ${u};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${a?"0":"i32(globalId.z)"};\n  ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n  let globalRowStart = i32(workgroupId.y) * ${m};\n\n  let num_tiles = ${a?`${Math.ceil(p/u)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n  var kStart = ${a?`i32(globalId.z) * ${p}`:"0"};\n\n  var acc: array<vec4<${r}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${S};\n  for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${Zd(i,o)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${S}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${o?", batchIndices":""});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${v===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${Jd(i,v)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`},Us=(e,t)=>e?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${t?", batchIndices":""});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${t?", batchIndices":""});\n            `,Xd=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Gr=(e,t,r="f32",o,i=!1,u=32,a=!1,p=32,m=!1)=>{let h=e[1]*t[1],d=e[0]*t[0],y=i?h:u,v=i?u:h;if(!(v%t[1]===0&&y%t[0]===0&&u%t[1]===0))throw new Error(`tileAHight ${v} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${y} must be divisible by workgroupSize[0]${t[0]}, tileInner ${u} must be divisible by workgroupSize[1]${t[1]}`);let S=v/t[1],w=y/t[0],x=u/t[1],E=m?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${h};\n    let globalColStart = i32(workgroupId.x) * ${d};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${v}; inputRow = inputRow + ${t[1]}) {\n        for (var inputCol = localCol; inputCol < ${y}; inputCol = inputCol + ${t[0]}) {\n          ${Us(i,o)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${u}; inputRow = inputRow + ${t[1]}) {\n            for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${t[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${o?", batchIndices":""});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${r}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${i?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${h};\n\nlet tileRowA = i32(localId.y) * ${S};\nlet tileColA = i32(localId.x) * ${w};\nlet tileRowB = i32(localId.y) * ${x};\n// Loop over shared dimension.\nfor (var t = 0; t < num_tiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${S}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${w}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${Us(i,o)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${x}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${o?", batchIndices":""});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${r}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${Xd(i)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<${r}, ${y}>, ${v}>;\n  var<workgroup> mm_Bsub : array<array<${r}, ${d}>, ${u}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${u};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${a?"0":"i32(globalId.z)"};\n    ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n    let num_tiles = ${a?`${Math.ceil(p/u)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n    var kStart = ${a?`i32(globalId.z) * ${p}`:"0"};\n\n    var acc : array<array<${r}, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${E}\n  }\n`},Qd=(e,t,r,o,i,u=!1)=>{let[a,p,m]=i,[h,d,y,v]=o,S=hr(a,m),w=hr(p,m),x=Ge(o[0].type.tensor),E=()=>{let T=d.rank,O=h.rank,z=`var aIndices: ${d.type.indices};`;for(let M=T-2-1,N=O-1;M>=0;M--,N--)z+=`\naIndices[${M}] = ${O>1?`batchIndices[${N}]`:"batchIndices"};`;return S.forEach(M=>{z+=`\naIndices[${M}] = 0;`}),z+=`\naIndices[${T-2}] = u32(row);\n                   aIndices[${T-1}] = u32(colIn);`,z},C=()=>{let T=y.rank,O=h.rank,z=`var bIndices: ${y.type.indices};`;for(let M=T-2-1,N=O-1;M>=0;M--,N--)z+=`\nbIndices[${M}] = ${O>1?`batchIndices[${N}]`:"batchIndices"};`;return w.forEach(M=>{z+=`\nbIndices[${M}] = 0;`}),z+=`\nbIndices[${T-2}] = u32(row);\n                   bIndices[${T-1}] = u32(colIn);`,z};return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${h.type.indices}) -> ${je(e,x)} {\n      var value = ${je(e,x)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)\n      {\n        ${E()}\n        value = ${d.getByIndices("aIndices")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${h.type.indices}) -> ${je(e,x)} {\n      var value = ${je(e,x)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)\n      {\n        ${C()}\n        value = ${y.getByIndices("bIndices")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${je(e,x)}) {\n      let col = colIn * ${e};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${t?`value = value + ${u?"bias[colIn]":`${je(e,x)}(bias[row])`};`:""}\n        ${r}\n        ${v.setByIndices("vec3<u32>(coords)","value")}\n      }\n    }\n    `},Vn=(e,t,r,o,i=!1)=>{let u=e[0].dims,a=e[1].dims,p=u.slice(0,-2),m=a.slice(0,-2),h=o?o.slice(0,-2):r.slice(0,-2),d=W.size(h),y=u[u.length-2],v=u[u.length-1],S=a[a.length-1],w=v%4===0&&S%4===0,x=y<=8?[4,1,1]:[4,4,1],E=[8,8,1],C=[Math.ceil(S/E[0]/x[0]),Math.ceil(y/E[1]/x[1]),Math.ceil(d/E[2]/x[2])],_=w?4:1,T=[...p,y,v/_],O=T.length,z=[...m,v,S/_],M=z.length,N=[d,y,S/_],j=[{type:6,data:y},{type:6,data:S},{type:6,data:v}];Ot(t,j),j.push(...G(h),...G(T),...G(z));let ue=["rank","rank"],k=e.length>2;k&&(j.push(...G(e[2].dims)),ue.push("rank")),j.push(...G(N));let te=Be=>{let Ue=h.length,$e=En("batchDims",e[0].dataType,Ue,1),we=Ge(e[0].dataType),de=V("a",e[0].dataType,O,_),Pe=V("b",e[1].dataType,M,_),xe=K("result",e[0].dataType,N.length,_),oe=[de,Pe];if(k){let Ke=i?_:1;oe.push(V("bias",e[2].dataType,e[2].dims.length,Ke))}let _e=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];kt(t,_e);let Oe=Pt(t,xe.type.value),ke=Qd(_,k,Oe,[$e,de,Pe,xe],[p,m,h],i);return`\n  ${Be.registerUniforms(_e).registerInternalVariables($e).declareVariables(...oe,xe)}\n  ${ke}\n  ${w?Hr(x,E,we,$e):Gr(x,E,we,$e)}\n                   `};return{name:"MatMul",shaderCache:{hint:`${x};${t.activation};${w};${i}`,inputDependencies:ue},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:C[0],y:C[1],z:C[2]},programUniforms:j}),getShaderSource:te}}});var ec,Vs,Ws=J(()=>{"use strict";be();Ht();Ie();Gt();zn();Eo();Lr();ec=(e,t,r,o,i=!1,u,a=4,p=4,m=4,h="f32")=>{let d=k=>{switch(k){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${h}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${k} is not supported.`)}},y=k=>{switch(k){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${k} is not supported.`)}},v=e?`\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    `:`\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    `,S=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,w=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",x=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",E=e?"row":"col",C=e?"col":"row",_=`\n    let inChannels = i32(uniforms.w_shape[2]);\n    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n    let outRow = ${E} / outWidth;\n    let outCol = ${E} % outWidth;\n\n    let WRow = ${C} / (i32(uniforms.w_shape[1]) * inChannels);\n    let WCol = ${C} / inChannels % i32(uniforms.w_shape[1]);\n    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];\n    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];\n    let xCh = ${C} % inChannels;\n    var resData = ${je(a,h)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the \'same\' padding type.\n    if (xRow >= 0 && xRow < ${w} && xCol >= 0 && xCol < ${x}) {\n      ${v}\n      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));\n      ${d(a)}\n    }\n    return resData;`,T=e?t&&o?`\n    let col = colIn * ${a};\n    ${_}`:`\n    let col = colIn * ${a};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n      ${_}\n    }\n    return ${je(a,h)}(0.0);`:o&&r?`\n    let col = colIn * ${a};\n    ${_}`:`\n    let col = colIn * ${a};\n    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n      ${_}\n    }\n    return ${je(a,h)}(0.0);`,O=`${y(p)}`,z=je(m,h),M=e?je(a,h):je(p,h),N=e?je(p,h):je(a,h),j=Pt(u,z);return`\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${M} {\n      ${e?T:O}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${N} {\n      ${e?O:T}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${z}) {\n      let col = colIn * ${m};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${S}\n      ${Mn(i)}\n      ${j}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`},Vs=(e,t,r,o,i,u,a,p)=>{let m=t.format==="NHWC",h=m?e[0].dims[3]:e[0].dims[1],d=r[0],y=m?r[2]:r[3],v=m?r[1]:r[2],S=m?r[3]:r[1],w=m&&(h%4===0||h%3===0)&&S%4===0,x=m?S:y*v,E=m?y*v:S,C=[8,8,1],_=o<=8?[4,1,1]:[4,4,1],T=[Math.ceil(x/C[0]/_[0]),Math.ceil(E/C[1]/_[1]),Math.ceil(d/C[2]/_[2])];ze("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${T}`);let O=w?m&&h%4!==0?3:4:1,z=C[1]*_[1],M=C[0]*_[0],N=Math.max(C[0]*O,C[1]),j=o%z===0,ue=i%M===0,k=u%N===0,te=w?[O,4,4]:[1,1,1],Be=[{type:6,data:o},{type:6,data:i},{type:6,data:u},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];Ot(t,Be),Be.push(...G(e[0].dims),...G(e[1].dims));let Ue=["rank","rank"];a&&(Be.push(...G(e[2].dims)),Ue.push("rank")),Be.push(...G(r));let $e=we=>{let de=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];kt(t,de);let Pe=w?4:1,xe=Ge(e[0].dataType),oe=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${w?`vec4<${xe}>`:xe}) {\n        result[flatIndex] = ${w?`vec4<${xe}>`:xe}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${w?`vec4<${xe}>`:xe}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${w?"/ 4":""}, value);\n      }`,_e=V("x",e[0].dataType,e[0].dims.length,O===3?1:O),Oe=V("w",e[1].dataType,e[1].dims.length,Pe),ke=[_e,Oe],Ke=K("result",e[0].dataType,r.length,Pe);if(a){let F=V("bias",e[2].dataType,e[2].dims.length,Pe);ke.push(F),oe+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${w?`vec4<${xe}>`:xe} {\n          return bias[coords.${m?"w":"y"}${w?"/ 4":""}];\n        }`}return`\n        ${Un("uniforms.result_strides")}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${we.registerUniforms(de).declareVariables(...ke,Ke)}\n        ${oe}\n        ${ec(m,j,ue,k,a,t,te[0],te[1],te[2],xe)}\n        ${w?Hr(_,C,xe,void 0,!m,N):Gr(_,C,xe,void 0,!m,N,!1,void 0,p)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${O};${w};${j};${ue};${k};${z};${M};${N}`,inputDependencies:Ue},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:T[0],y:T[1],z:T[2]},programUniforms:Be}),getShaderSource:$e}}});var Po,Ns=J(()=>{"use strict";be();Ee();Ie();ko();Gt();Po=(e,t,r)=>{let o=e.length>2,i=o?"value += b[output_channel];":"",u=e[0].dims,a=e[1].dims,p=a[0]/t.group,m=t.format==="NHWC",h=Oo(u,a,t.dilations,t.pads,t.strides,m),d=W.size(h),y=[{type:12,data:d},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:p}];Ot(t,y),y.push(...G(u),...G(a),...G(h));let v=["rank","rank"];o&&(y.push(...G(e[2].dims)),v.push("rank")),y.push(...G(h));let S=w=>{let x=K("output",e[0].dataType,h.length),E=Pt(t,x.type.value),C=V("x",e[0].dataType,u.length),_=V("w",e[1].dataType,a.length),T=[C,_];o&&T.push(V("b",e[2].dataType,e[2].dims));let O=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];return kt(t,O),`\n  ${w.registerUniforms(O).declareVariables(...T,x)}\n\n  ${w.mainStart()}\n    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let outputIndices = ${x.offsetToIndices("global_idx")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${m?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${m?1:2}], outputIndices[${m?2:3}]) * uniforms.strides - uniforms.pads;\n    let group_id: u32 = output_channel / uniforms.output_channels_per_group;\n\n    var value: ${x.type.value} = ${x.type.value}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {\n      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];\n\n        if (xHeight < 0u || xHeight >= uniforms.x_shape[${m?1:2}]) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];\n          if (xWidth < 0u || xWidth >= uniforms.x_shape[${m?2:3}]) {\n            continue;\n          }\n\n          let xVal = ${m?C.get("batch","xHeight","xWidth","input_channel"):C.get("batch","input_channel","xHeight","xWidth")};\n          let wVal = ${_.get("output_channel","wInChannel","wHeight","wWidth")};\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${i}\n    ${E}\n    ${x.setByOffset("global_idx","value")}\n  }`};return{name:"GroupedConv",shaderCache:{hint:t.cacheKey,inputDependencies:v},getRunData:()=>({outputs:[{dims:r?r(h):h,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:y}),getShaderSource:S}}});var Ro,tc,Hs,Do=J(()=>{"use strict";be();Ee();Lr();Ie();Gt();Ro=(e,t,r,o,i=!1)=>{let u=e[0].dims,a=e[1].dims,p=u[u.length-2],m=a[a.length-1],h=u[u.length-1],d=Le(m),y=Le(h),v=Le(p),S=W.size(r)/d/v,w=e.length>2,x=o?o.slice(0,-2):r.slice(0,-2),C=[W.size(x),p,m],_=[{type:12,data:S},{type:12,data:p},{type:12,data:m},{type:12,data:h}];Ot(t,_),_.push(...G(x),...G(u),...G(a)),w&&_.push(...G(e[2].dims)),_.push(...G(C));let T=O=>{let z=En("batch_dims",e[0].dataType,x.length),M=V("a",e[0].dataType,u.length,y),N=V("b",e[1].dataType,a.length,d),j=K("output",e[0].dataType,C.length,d),ue=Pt(t,j.type.value),k=[M,N],te="";if(w){let oe=i?d:1;k.push(V("bias",e[2].dataType,e[2].dims.length,oe)),te=`${i?`value += bias[col / ${oe}];`:`value += ${j.type.value}(bias[row + i]);`}`}let Be=u.slice(0,-2),Ue=a.slice(0,-2),$e=hr(Be,x),we=hr(Ue,x),de=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];kt(t,de);let Pe=(oe,_e)=>{let Oe=oe.rank,ke=oe.name;if(Oe===2)return`var ${ke}_indices = ${oe.type.indices}(0u, 0u);`;let Ke=z.rank,F=`var ${ke}_indices: ${oe.type.indices};`;for(let ae=Oe-2-1,ge=Ke-1;ae>=0;ae--,ge--)F+=`\n${ke}_indices[${ae}] = ${Ke>1?`batch_indices[${ge}]`:"batch_indices"};`;return _e.forEach(ae=>{F+=`\n${ke}_indices[${ae}] = 0;`}),F+=`${ke}_indices[${Oe-2}] = 0u;\n                     ${ke}_indices[${Oe-1}] = 0u;`,F},xe=()=>{let oe=`var a_data: ${M.type.value};`;for(let _e=0;_e<y;_e++)oe+=`\n              let b_data${_e} = b[(b_offset + (k + ${_e}) * uniforms.N + col) / ${d}];`;for(let _e=0;_e<v;_e++){oe+=`a_data = a[(a_offset + (row + ${_e}) * uniforms.K + k) / ${y}];`;for(let Oe=0;Oe<y;Oe++)oe+=`\n            values[${_e}] = fma(${N.type.value}(a_data${y===1?"":`[${Oe}]`}), b_data${Oe}, values[${_e}]);\n`}return oe};return`\n  ${O.registerUniforms(de).registerInternalVariables(z).declareVariables(...k,j)}\n  ${O.mainStart()}\n    ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let col = (global_idx % (uniforms.N / ${d})) * ${d};\n    var index1 = global_idx / (uniforms.N / ${d});\n    let stride1 = uniforms.M / ${v};\n    let row = (index1 % stride1) * ${v};\n    let batch = index1 / stride1;\n\n    ${r.length===2?"":`let batch_indices = ${z.offsetToIndices("batch")};`}\n    ${Pe(M,$e)}\n    let a_offset = ${M.indicesToOffset("a_indices")};\n    ${Pe(N,we)}\n    let b_offset = ${N.indicesToOffset("b_indices")};\n    var values: array<${j.type.value}, ${v}>;\n    for (var k: u32 = 0u; k < uniforms.K; k = k + ${y}) {\n      ${xe()}\n    }\n    for (var i = 0u; i < ${v}u; i++) {\n      var value = values[i];\n      ${te}\n      ${ue}\n      let cur_indices = ${j.type.indices}(batch, row + i, col);\n      let offset = ${j.indicesToOffset("cur_indices")};\n      ${j.setByOffset(`offset / ${d}`,"value")};\n    }\n  }\n  `};return{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${d};${y};${v};${i}`,inputDependencies:w?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(S/64)},programUniforms:_}),getShaderSource:T}},tc=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},Hs=e=>{tc(e.inputs);let t=xt.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can\'t use matmul on the given tensors");let r=t[t.length-1],o=e.inputs[0].dims[e.inputs[0].dims.length-1];r<8&&o<8?e.compute(Ro(e.inputs,{activation:""},t)):e.compute(Vn(e.inputs,{activation:""},t))}});var Oo,Gs,rc,Ls,Bo,nc,oc,Mo,ko=J(()=>{"use strict";Ee();Ws();Lr();Ns();Gt();Do();gr();Oo=(e,t,r,o,i,u)=>{let a=e[0],p=e.slice(u?1:2,u?3:4),m=p.length,h=t[0],y=t.slice(2).map((w,x)=>w+(w-1)*(r[x]-1)),S=p.map((w,x)=>w+o[x]+o[x+m]).map((w,x)=>Math.floor((w-y[x]+i[x])/i[x]));return S.splice(0,0,a),S.splice(u?3:1,0,h),S},Gs=[2,3,1,0],rc=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[1]*t.group;if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let i=e[0].dims.length-2;if(t.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(t.strides.length!==i)throw new Error(`strides should be ${i}D`);if(t.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},Ls=(e,t)=>{let r=e.kernelShape.slice();for(let u=2;u<t[1].dims.length;++u)r[u-2]===0&&(r[u-2]=t[1].dims[u]);let o=e.pads.slice();tr.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,o,e.format==="NHWC",e.autoPad);let i=Object.assign({},e);return Object.assign(i,{kernelShape:r,pads:o}),i},Bo=e=>{let t=Bn(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],i=e.dilations,u=e.group,a=e.kernel_shape,p=e.pads,m=e.strides,h=e.w_is_const();return{autoPad:o,format:r,dilations:i,group:u,kernelShape:a,pads:p,strides:m,wIsConst:h,...t,cacheKey:`${e.format};${t.activation};`}},nc=(e,t,r)=>{let o=Ls(r,t),i=r.format==="NHWC";if(r.group!==1){e.compute(Po(t,o));return}let u=t.length===3,a=t[0].dims[i?1:2],p=t[0].dims[i?2:3],m=t[0].dims[i?3:1],h=t[1].dims[2],d=t[1].dims[3],y=Oo(t[0].dims,t[1].dims,r.dilations,o.pads,r.strides,i),v=y[i?1:2],S=y[i?2:3],w=y[i?3:1],x=i&&h===a&&d===p&&r.pads[0]===0&&r.pads[1]===0;if(x||h===1&&d===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let M=y[0],N,j,ue,k=[];if(i){let Ue=e.kernelCustomData.wT??e.compute($t(t[1],Gs),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=Ue),x){let $e=a*p*m;N=t[0].reshape([1,M,$e]),j=Ue.reshape([1,$e,w]),ue=[1,M,w]}else N=t[0].reshape([M,a*p,m]),j=Ue.reshape([1,m,w]),ue=[M,v*S,w];k.push(N),k.push(j)}else N=t[0].reshape([M,m,a*p]),j=t[1].reshape([1,w,m]),ue=[M,w,v*S],k.push(j),k.push(N);u&&k.push(t[2]);let te=ue[2],Be=k[0].dims[k[0].dims.length-1];te<8&&Be<8?e.compute(Ro(k,o,y,ue,i),{inputs:k}):e.compute(Vn(k,o,y,ue,i),{inputs:k});return}let E=!0,C=e.kernelCustomData.wT??e.compute($t(t[1],Gs),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=C);let _=[t[0],C];u&&_.push(t[2]);let T=i?v*S:w,O=i?w:v*S,z=h*d*m;e.compute(Vs(_,o,y,T,O,z,u,E),{inputs:_})},oc=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&o.push(e.inputs[2]);let i=[0,t.pads[0],0,t.pads[1]],u=[1].concat(t.strides),a=[1].concat(t.dilations),p=[1].concat(t.kernelShape),m=Ls({...t,pads:i,strides:u,dilations:a,kernelShape:p},o);e.compute(Po(o,m,h=>r?[h[0],h[2],h[3]]:[]))},Mo=(e,t)=>{rc(e.inputs,t),e.inputs[0].dims.length===3?oc(e,t):nc(e,e.inputs,t)}});var ic,Fs,qs=J(()=>{"use strict";be();Ht();Ie();Gt();zn();Eo();Lr();ic=(e,t=!1,r,o=4)=>{let i=je(o,"f32"),u=C=>{switch(C){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];\n            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];\n            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];\n            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];\n            return vec4<f32>(v0, v1, v2, v3);\n            `;default:throw new Error(`innerElementSize ${C} is not supported.`)}},a=e?`\n      let coord = vec4<i32>(batch, iXR, iXC, xCh);\n      `:`\n      let coord = vec4<i32>(batch, xCh, iXR, iXC);\n      `,p=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,m=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",h=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",d=e?"row":"col",y=e?"col":"row",v=`\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      let outRow = ${d} / outWidth;\n      let outCol = ${d} % outWidth;\n\n      let WRow = ${y} / (uniforms.filter_dims[1] * inChannels);\n      let WCol = ${y} / inChannels % uniforms.filter_dims[1];\n      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);\n      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);\n      if (xR < 0.0 || xR >= f32(${m}) || fract(xR) > 0.0) {\n        return ${i}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(${h}) || fract(xC) > 0.0) {\n        return ${i}(0.0);\n      }\n      let iXR = i32(xR);\n      let iXC = i32(xC);\n      let xCh = ${y} % inChannels;\n      ${a}\n      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${o}];`,S=e?`\n      let col = colIn * ${o};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n        ${v}\n      }\n      return ${i}(0.0);`:`\n      let col = colIn * ${o};\n      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n        ${v}\n      }\n      return ${i}(0.0);`,w=`\n      let col = colIn * ${o};\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);\n      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];\n      if (${e?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {\n        let rowInner = row % inChannels;\n        let coord = vec4<i32>(coordX, coordY, col, rowInner);\n        ${u(o)}\n      }\n      return ${i}(0.0);\n      `,x=Pt(r,i);return`\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${i} {\n    ${e?S:w}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${i} {\n    ${e?w:S}\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${i}) {\n    let col = colIn * ${o};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n      var value = valueInput;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${p}\n      ${Mn(t)}\n      ${x}\n      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${o}] = value;\n    }\n  }`},Fs=(e,t,r,o,i,u,a,p)=>{let m=t.format==="NHWC",h=m?e[0].dims[3]:e[0].dims[1],d=r[0],y=m?r[2]:r[3],v=m?r[1]:r[2],S=m?r[3]:r[1],w=m?h%4===0&&S%4===0:y%4===0&&S%4===0,x=m?S:y*v,E=m?y*v:S,C=w?[8,8,1]:[x<=4||E<=4?4:16,x>4&&E<=4?4:16,1],_=w?[4,4,1]:[x<=4?1:4,x>4&&E<=4?1:4,1],T=[Math.ceil(x/C[0]/_[0]),Math.ceil(E/C[1]/_[1]),Math.ceil(d/C[2]/_[2])];ze("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${T}`);let O=w?4:1,z=Math.max(C[0]*O,C[1]),M=w?4:1,N=[t.kernelShape[m?1:2],t.kernelShape[m?2:3]],j=[N[0]+(t.dilations[0]<=1?0:(N[0]-1)*(t.dilations[0]-1)),N[1]+(t.dilations[1]<=1?0:(N[1]-1)*(t.dilations[1]-1))],ue=[j[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),j[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],k=[{type:6,data:o},{type:6,data:i},{type:6,data:u},{type:6,data:t.strides},{type:6,data:t.dilations},{type:6,data:N},{type:6,data:ue}];Ot(t,k),k.push(...G(e[0].dims),...G(e[1].dims));let te=["rank","rank"];a&&(k.push(...G(e[2].dims)),te.push("rank")),k.push(...G(r));let Be=Ue=>{let $e=V("x",e[0].dataType,e[0].dims.length,M),we=V("w",e[1].dataType,e[1].dims.length,1),de=K("result",e[0].dataType,r.length,M),Pe=[$e,we],xe="";if(a){let _e=V("bias",e[2].dataType,e[2].dims.length,M);Pe.push(_e),xe+=`\n          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${w?"vec4<f32>":"f32"} {\n            return bias[coords.${m?"w":"y"}${w?"/ 4":""}];\n          }`}let oe=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:N.length},{name:"pads",type:"i32",length:ue.length}];return kt(t,oe),`\n        ${Un("uniforms.result_strides")}\n        ${Ue.registerUniforms(oe).declareVariables(...Pe,de)};\n        ${xe}\n        ${ic(m,a,t,O)}\n        ${w?Hr(_,C,"f32",void 0,!m,z):Gr(_,C,"f32",void 0,!m,z,!1,void 0,p)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${t.cacheKey};${_};${C};${w}`,inputDependencies:te},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:T[0],y:T[1],z:T[2]},programUniforms:k}),getShaderSource:Be}}});var ac,zo,js=J(()=>{"use strict";be();Ht();Ee();Ie();ac=(e,t,r,o,i,u=!1,a,p,m=!1)=>{let h=m?1:2,d=m?2:3,y=m?3:1,v=u?2:1,S=`\n  fn setOutputAtIndex(flatIndex : u32, value : ${u?`vec4<${a}>`:a}) {\n    result[flatIndex] = ${u?`vec4<${a}>`:a}(value);\n  }`;o&&(S+=`\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${u?`vec4<${a}>`:a} {\n      return bias[coords.${m?"w":"y"}${u?"/ 4":""}];\n    }`);let w=u?4:1,x=V("W",t[1].dataType,t[1].dims.length,w),E=V("Dy",t[0].dataType,t[0].dims.length,w),C=[E,x];o&&C.push(V("bias",t[2].dataType,[r[y]].length,w));let _=K("result",t[0].dataType,r.length,w),T=`{\n        let batch: u32 = ${i?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];\n        let r = ${i?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];\n        let c = ${i?"global_id.y":"workgroup_id.y"} * ${v};\n        let d1: u32 = ${i?"global_id.x":"workgroup_id.x"} * 4;\n\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd: array<vec4<${a}>, ${v}>;\n        for (var i = 0; i < ${v}; i++) {\n          dotProd[i] = vec4<${a}>(0.0);\n        }\n        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {\n          var dyR = (${a}(dyCorner.x) + ${a}(wR)) / ${a}(uniforms.strides.x);\n          let wRPerm = uniforms.filter_dims[0] - 1 - wR;\n          if (dyR < 0.0 || dyR >= ${a}(uniforms.Dy_shape[1]) ||\n              fract(dyR) > 0.0 || wRPerm < 0) {\n            continue;\n          }\n          let idyR: u32 = u32(dyR);\n\n          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {\n            let dyC = (${a}(dyCorner.y) + ${a}(wC)) / ${a}(uniforms.strides.y);\n            let dyC2 = (${a}(dyCorner.y) + 1.0 + ${a}(wC)) / ${a}(uniforms.strides.y);\n            let wCPerm = uniforms.filter_dims[1] - 1 - wC;\n            if (wCPerm < 0) {\n              continue;\n            }\n            var bDyCVal = true;\n            var bDyCVal2 = true;\n            if (dyC < 0.0 || dyC >= ${a}(uniforms.Dy_shape[2]) ||\n                fract(dyC) > 0.0) {\n              bDyCVal = false;\n            }\n            if (dyC2 < 0.0 || dyC2 >= ${a}(uniforms.Dy_shape[2]) ||\n                fract(dyC2) > 0.0) {\n              bDyCVal2 = false;\n            }\n\n            let idyC: u32 = u32(dyC);\n            let idyC2: u32 = u32(dyC2);\n            if (bDyCVal && bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${E.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${a}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n\n                xValue =  ${E.get("batch","idyR","idyC2","d2")};\n\n                dotProd[1] = dotProd[1] + vec4<${a}>(dot(xValue, wValue0),\n                                                    dot(xValue, wValue1),\n                                                    dot(xValue, wValue2),\n                                                    dot(xValue, wValue3));\n              }\n            } else if (bDyCVal) {\n              let d2Length = uniforms.Dy_shape[${y}];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${E.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${a}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n              }\n            } else if (bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${E.get("batch","idyR","idyC2","d2")};\n                let tmpval = vec4<${a}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[1] = dotProd[1] + tmpval;\n              }\n            }\n          }\n        }\n\n        for (var i: u32 = 0; i < ${v}; i = i + 1) {\n          let value = dotProd[i] + ${o?"bias[c+i]":`vec4<${a}>(0.0)`};\n          ${_.set("batch","r","c + i","d1","value")};\n        }\n      }`,O=`\n          let outputIndices = ${_.offsetToIndices("global_idx")};\n          let batch = ${_.indicesGet("outputIndices",0)};\n          let d1 = ${_.indicesGet("outputIndices",y)};\n          let r = ${_.indicesGet("outputIndices",h)};\n          let c = ${_.indicesGet("outputIndices",d)};\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;\n          let dyRCorner = dyCorner.x;\n          let dyCCorner = dyCorner.y;\n          let groupId = d1 / uniforms.output_channels_per_group;\n          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n          // ? = to be determined. : = across all values in that axis.\n          var dotProd = ${a}(0.0);\n          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {\n            if (wR % uniforms.dilations.x != 0) {\n              continue;\n            }\n            let dyR = (${a}(dyRCorner) + ${a}(wR)) / ${a}(uniforms.strides[0]);\n            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;\n            if (dyR < 0.0 || dyR >= ${a}(uniforms.Dy_shape[${h}]) || fract(dyR) > 0.0 ||\n                wRPerm < 0) {\n              continue;\n            }\n            let idyR: u32 = u32(dyR);\n\n            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {\n              if (wC % uniforms.dilations.y != 0) {\n                continue;\n              }\n              let dyC = (${a}(dyCCorner) + ${a}(wC)) / ${a}(uniforms.strides.y);\n              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;\n              if (dyC < 0.0 || dyC >= ${a}(uniforms.Dy_shape[${d}]) ||\n                  fract(dyC) > 0.0 || wCPerm < 0) {\n                continue;\n              }\n              let idyC: u32 = u32(dyC);\n              var inputChannel = groupId * uniforms.input_channels_per_group;\n              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {\n                let xValue = ${m?E.get("batch","idyR","idyC","inputChannel"):E.get("batch","inputChannel","idyR","idyC")};\n                let wValue = ${x.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};\n                dotProd = dotProd + xValue * wValue;\n                inputChannel = inputChannel + 1;\n              }\n            }\n          }\n          let value = dotProd + ${o?"bias[d1]":`${a}(0.0)`};\n          ${_.setByOffset("global_idx","value")};\n        `;return`\n  ${e.registerUniforms(p).declareVariables(...C,_)}\n  ${S}\n\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};\n  ${u?T:O}}`},zo=(e,t,r)=>{let o=e.length>2,i=t.outputShape,u=W.size(i),a=[Math.ceil(u/64),1,1];ze("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${a}`);let p=t.format==="NHWC",m=["rank","rank"],h=[t.strides[0],t.strides[1]],d=[t.kernelShape[p?1:2],t.kernelShape[p?2:3]],y=[t.dilations[0],t.dilations[1]],v=[d[0]+(t.dilations[0]<=1?0:(t.kernelShape[p?1:2]-1)*(t.dilations[0]-1)),d[1]+(t.dilations[1]<=1?0:(t.kernelShape[p?2:3]-1)*(t.dilations[1]-1))],S=[v[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),v[1]-1-Math.floor(t.pads[1]+t.pads[3])/2],w=!1,x=t.group,E=e[1].dims,C=E[0]/x,_=E[1],T=[{type:6,data:u},{type:12,data:h},{type:12,data:d},{type:12,data:y},{type:12,data:v},{type:6,data:S},{type:12,data:C},{type:12,data:_},...G(e[0].dims),...G(e[1].dims)];o&&(T.push(...G(e[2].dims)),m.push("rank")),T.push(...G(i));let O=a[1]===1&&a[2]===1,z=M=>{let N=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:h.length},{name:"filter_dims",type:"u32",length:d.length},{name:"dilations",type:"u32",length:d.length},{name:"effective_filter_dims",type:"u32",length:v.length},{name:"pads",type:"i32",length:S.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],j=Ge(e[0].dataType);return`${ac(M,e,i,o,O,w,j,N,p)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};`,inputDependencies:m},getRunData:()=>({dispatchGroup:{x:a[0],y:a[1],z:a[2]},outputs:[{dims:r?r(i):i,dataType:e[0].dataType}],programUniforms:T}),getShaderSource:z}}});var sc,uc,lc,Ks,Ys,dc,cc,pc,mc,Zs,Js=J(()=>{"use strict";qs();js();Gt();gr();sc=(e,t,r,o,i,u)=>(e-1)*t+r+(o-1)*i+1-u,uc=(e,t,r,o,i)=>{let u=Math.floor(e/2);t==="SAME_UPPER"?(r[o]=u,r[i]=e-u):t==="SAME_LOWER"&&(r[o]=e-u,r[i]=u)},lc=(e,t,r,o,i,u,a,p,m,h)=>{let d=e.length-2,y=h.length===0;if(m.length===0)for(let w=0;w<d;++w)m.push(0);let v=e[0],S=t[p?3:1]*i;for(let w=0,x=e.length-d-(p?1:0);w<d;++w,++x){let E=e[x],C=y?E*a[w]:h[w],_=sc(E,a[w],u[w],t[x],r[w],C);uc(_,o,u,w,w+d),y&&h.push(a[w]*(E-1)+m[w]+(t[x]-1)*r[w]+1-u[w]-u[w+d])}h.splice(0,0,v),h.splice(p?3:1,0,S)},Ks=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((y,v)=>y*v,1)===0){r.length=0;for(let y=2;y<t[1].dims.length;++y)r.push(t[1].dims[y])}let o=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(o?3:1,0,t[1].dims[1]);let i=e.pads.slice(),u=e.outputShape.slice(),a=e.outputPadding.slice(),p=t[0].dims,m=e.dilations.slice();if(m.reduce((y,v)=>y+v,0)===0){let y=t[0].dims.length-2;m=new Array(y).fill(1)}let h=e.strides.slice();if(h.reduce((y,v)=>y+v,0)===0){let y=t[0].dims.length-2;h=new Array(y).fill(1)}lc(p,r,m,e.autoPad,e.group,i,h,o,a,u);let d=Object.assign({},e);return Object.assign(d,{kernelShape:r,pads:i,outputPadding:a,outputShape:u,dilations:m,strides:h}),d},Ys=e=>{let t=Bn(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],i=e.dilations,u=e.group,a=e.kernelShape,p=e.pads,m=e.strides,h=e.wIsConst(),d=e.outputPadding,y=e.outputShape;return{autoPad:o,format:r,dilations:i,group:u,kernelShape:a,outputPadding:d,outputShape:y,pads:p,strides:m,wIsConst:h,...t,cacheKey:`${e.format};${t.activation};`}},dc=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[0];if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let i=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==i))throw new Error("invalid bias");let u=e[0].dims.length-2;if(t.dilations.reduce((d,y)=>d+y,0)>0&&t.dilations.length!==u)throw new Error(`dilations should be ${u}D`);if(t.strides.reduce((d,y)=>d+y,0)>0&&t.strides.length!==u)throw new Error(`strides should be ${u}D`);if(t.pads.reduce((d,y)=>d+y,0)>0&&t.pads.length!==u*2)throw new Error(`pads should be ${u*2}D`);if(t.outputPadding.length!==u&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${u}D`);if(t.kernelShape.reduce((d,y)=>d+y,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},cc=[2,3,1,0],pc=(e,t,r)=>{let o=Ks(r,t),i=r.format==="NHWC",u=o.outputShape,a=u[i?3:1],p=t[0].dims[i?3:1];if(o.group!==1||a===1&&p===1){e.compute(zo(t,o));return}let m=u[i?1:2],h=u[i?2:3],d=t[1].dims[2],y=t[1].dims[3],v=i?m*h:a,S=i?a:m*h,w=d*y*p,x=!0,E=e.kernelCustomData.wT??e.compute($t(t[1],cc),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=E);let C=[t[0],E],_=t.length===3;_&&(!i&&t[2].dims.length===1?C.push(t[2].reshape([t[2].dims[0],1,1])):C.push(t[2])),e.compute(Fs(C,o,u,v,S,w,_,x),{inputs:C})},mc=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];o.length===3&&o.push(e.inputs[2]);let i=t.kernelShape;(i.length===0||i[0]===0)&&(i=[e.inputs[1].dims[2]]);let u=t.dilations;(u.length===0||u[0]===0)&&(u=[1]);let a=t.strides;(a.length===0||a[0]===0)&&(a=[1]);let p=t.pads;p.length===0&&(p=[0,0]),p=[0,p[0],0,p[1]],a=[1].concat(a),u=[1].concat(u),i=[1].concat(i);let m=Ks({...t,pads:p,strides:a,dilations:u,kernelShape:i},o);e.compute(zo(o,m,h=>r?[h[0],h[2],h[3]]:[h[0],h[1],h[3]]))},Zs=(e,t)=>{dc(e.inputs,t),e.inputs[0].dims.length===3?mc(e,t):pc(e,e.inputs,t)}});var fc,Xs,Qs,eu=J(()=>{"use strict";be();Ee();Qe();Ie();fc=(e,t,r,o)=>{let i=W.size(t),u=t.length,a=V("input",e,u),p=K("output",e,u),m=r.dataType===6?r.getInt32Array()[0]:Number(r.getBigInt64Array()[0]),h=W.normalizeAxis(m,u),d=y=>{let v=` i32(${a.indicesGet("inputIndices","uniforms.axis")}) `,S=pe("uniforms.input_shape","uniforms.axis",u),w=o.reverse?v+(o.exclusive?" + 1":""):"0",x=o.reverse?S:v+(o.exclusive?"":" + 1");return`\n                ${y.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(a,p)}\n                ${y.mainStart()}\n                  ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n                  var inputIndices = ${p.offsetToIndices("global_idx")};\n                  var sum = ${p.type.value}(0);\n                  let first : i32 = ${w};\n                  let last : i32 = ${x};\n                  for (var i : i32 = first; i < last; i++) {\n                    ${a.indicesSet("inputIndices","uniforms.axis","u32(i)")};\n                    sum = sum + ${a.getByIndices("inputIndices")};\n                  }\n                  ${p.setByOffset("global_idx","sum")};\n                }`};return{name:"CumSum",shaderCache:{hint:o.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},{type:6,data:h},...G(t),...G(t)]}),getShaderSource:d}},Xs=(e,t)=>{let r=e.inputs[0].dims,o=e.inputs[0].dataType,i=e.inputs[1];e.compute(fc(o,r,i,t),{inputs:[0]})},Qs=e=>{let t=e.exclusive===1,r=e.reverse===1;return Te({exclusive:t,reverse:r})}});var Uo,Wn,tu,hc,gc,Vo,Wo,ru,yc,nu,ou,iu=J(()=>{"use strict";be();Ee();Qe();Ie();Uo="[a-zA-Z]|\\\\.\\\\.\\\\.",Wn="("+Uo+")+",tu="^"+Wn+"$",hc="("+Wn+",)*"+Wn,gc="^"+hc+"$",Vo=class{constructor(t=-1){this.symbolToIndices=new Map,this.inputIndex=t}addSymbol(t,r){let o=this.symbolToIndices.get(t);o===void 0?o=[r]:o.push(r),this.symbolToIndices.set(t,o)}},Wo=class{constructor(t,r){this.equation=r;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[o,i]=r.includes("->")?r.split("->",2):[r,""];if(!o.match(RegExp(gc)))throw new Error("Invalid LHS term");if(o.split(",").forEach((p,m)=>{let h=t[m].dims.slice();if(!p.match(RegExp(tu)))throw new Error("Invalid LHS term");let d=this.processTerm(p,!0,h,m);this.lhs.push(d)}),i==="")i+=[...this.symbolToInfo.entries()].filter(([p,m])=>m.count===1||p==="...").map(([p])=>p).join("");else if(!i.match(RegExp(Wn)))throw new Error("Invalid RHS");i.match(RegExp(Uo,"g"))?.forEach(p=>{if(p==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let m=this.symbolToInfo.get(p);if(m===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(m.dimValue)}}),this.rhs=this.processTerm(i,!1,this.outputDims)}addSymbol(t,r,o){let i=this.symbolToInfo.get(t);if(i!==void 0){if(i.dimValue!==r&&i.count!==1)throw new Error("Dimension mismatch");i.count++,i.inputIndices.push(o)}else i={count:1,dimValue:r,inputIndices:[o]};this.symbolToInfo.set(t,i)}processTerm(t,r,o,i=-1){let u=o.length,a=!1,p=[],m=0;if(!t.match(RegExp(tu))&&!r&&t!=="")throw new Error("Invalid LHS term");let h=t.match(RegExp(Uo,"g")),d=new Vo(i);return h?.forEach((y,v)=>{if(y==="..."){if(a)throw new Error("Only one ellipsis is allowed per input term");a=!0;let S=u-h.length+1;if(S<0)throw new Error("Ellipsis out of bounds");if(p=o.slice(m,m+S),this.hasEllipsis){if(this.ellipsisDims.length!==p.length||this.ellipsisDims.toString()!==p.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=p;else throw new Error("Ellipsis must be specified in the LHS");for(let w=0;w<p.length;w++){let x=String.fromCharCode("0".charCodeAt(0)+w);d.addSymbol(x,v+w),this.addSymbol(x,o[m++],i)}}else d.addSymbol(y,v+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(y,o[m++],i)}),d}},ru=e=>e+"_max",yc=(e,t,r,o)=>{let u=e.map(d=>d.length).map((d,y)=>V(`input${y}`,t,d)),a=W.size(o),p=K("output",t,o.length),m=[...r.symbolToInfo.keys()].filter(d=>!r.rhs.symbolToIndices.has(d)),h=d=>{let y=[],v="var prod = 1.0;",S="var sum = 0.0;",w="sum += prod;",x=[],E=[],C=[],_=[],T=r.symbolToInfo.size===r.rhs.symbolToIndices.size;r.symbolToInfo.forEach((z,M)=>{if(r.rhs.symbolToIndices.has(M)){let N=r.rhs.symbolToIndices.get(M)?.[0];N!==void 0&&r.lhs.forEach((j,ue)=>{if(z.inputIndices.includes(ue)){let k=j.symbolToIndices.get(M);if(k===void 0)throw new Error("Invalid symbol error");k.forEach(te=>{y.push(`${u[ue].indicesSet(`input${ue}Indices`,te,p.indicesGet("outputIndices",N))}`)})}})}else r.lhs.forEach((N,j)=>{if(z.inputIndices.includes(j)){let ue=N.symbolToIndices.get(M);if(ue===void 0)throw new Error("Invalid symbol error");ue.forEach(k=>{x.push(`${u[j].indicesSet(`input${j}Indices`,k,`${M}`)}`)}),_.push(`prod *= ${u[j].getByIndices(`input${j}Indices`)};`)}}),E.push(`for(var ${M}: u32 = 0; ${M} < uniforms.${ru(M)}; ${M}++) {`),C.push("}")});let O=T?[...y,`let sum = ${u.map((z,M)=>z.getByIndices(`input${M}Indices`)).join(" * ")};`]:[...y,S,...E,...x,v,..._,w,...C];return`\n            ${d.registerUniforms(m.map(z=>({name:`${ru(z)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...u,p)}\n\n            ${d.mainStart()}\n            ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n            var outputIndices = ${p.offsetToIndices("global_idx")};\n            ${u.map((z,M)=>`var input${M}Indices: ${u[M].type.indices};`).join(`\n`)}\n            ${O.join(`\n`)};\n            ${p.setByOffset("global_idx","sum")};\n          }`};return{name:"Einsum",shaderCache:{hint:r.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let d=m.filter(v=>r.symbolToInfo.has(v)).map(v=>({type:12,data:r.symbolToInfo.get(v)?.dimValue||0}));d.push({type:12,data:a});let y=e.map((v,S)=>[...G(v)]).reduce((v,S)=>v.concat(S),d);return y.push(...G(o)),{outputs:[{dims:o,dataType:t}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:y}},getShaderSource:h}},nu=(e,t)=>{let r=new Wo(e.inputs,t.equation),o=r.outputDims,i=e.inputs.map((u,a)=>u.dims);e.compute(yc(i,e.inputs[0].dataType,r,o))},ou=e=>{let t=e.equation.replace(/\\s+/g,"");return Te({equation:t})}});var bc,au,wc,vc,su,uu=J(()=>{"use strict";be();Ee();Ie();bc=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=r.length<t.length?0:r.length-t.length,i=t.length<r.length?0:t.length-r.length;for(;o<r.length&&i<t.length;++o,++i)if(r[o]!==t[i]&&r[o]!==1&&t[i]!==1)throw new Error("Expand requires shape to be broadcastable to input")},au=(e,t)=>{let r=e.length-t.length,o=[];for(let i=0;i<r;++i)o.push(e[i]);for(let i=0;i<t.length;++i)o.push(t[i]===1?e[i+r]:t[i]);return o},wc=(e,t)=>e.length>t.length?au(e,t):au(t,e),vc=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=wc(t,r),i=e[0].dataType,u=i===9?4:1,a=Math.ceil(W.size(o)/u),p=h=>{let d=V("input",i,t.length,u),y=K("output",i,o.length,u),v;if(i===9){let S=(w,x,E="")=>`\n          let outputIndices${x} = ${y.offsetToIndices(`outputOffset + ${x}u`)};\n          let offset${x} = ${d.broadcastedIndicesToOffset(`outputIndices${x}`,y)};\n          let index${x} = offset${x} / 4u;\n          let component${x} = offset${x} % 4u;\n          ${w}[${x}] = ${E}(${d.getByOffset(`index${x}`)}[component${x}]);\n        `;v=`\n        let outputOffset = global_idx * ${u};\n        var data = vec4<u32>(0);\n        ${S("data",0,"u32")}\n        ${S("data",1,"u32")}\n        ${S("data",2,"u32")}\n        ${S("data",3,"u32")}\n        ${y.setByOffset("global_idx","data")}\n      }`}else v=`\n        let outputIndices = ${y.offsetToIndices("global_idx")};\n        let inputOffset = ${d.broadcastedIndicesToOffset("outputIndices",y)};\n        ${y.setByOffset("global_idx",d.getByOffset("inputOffset"))}\n      }`;return`\n    ${h.registerUniform("vec_size","u32").declareVariables(d,y)}\n    ${h.mainStart()}\n    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n    ${v}`},m=[{type:12,data:a},...G(t),...G(o)];return{name:"Expand",shaderCache:{hint:`${o.length}`,inputDependencies:["rank"]},getShaderSource:p,getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:m})}},su=e=>{bc(e.inputs),e.compute(vc(e.inputs),{inputs:[0]})}});var $c,_c,lu,du,cu=J(()=>{"use strict";be();Ee();Qe();Ie();$c=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},_c=(e,t)=>{let r=e[0].dims,o=e[1].dims,i=r.length,u=W.normalizeAxis(t.axis,i),a=r.slice(0);a.splice(u,1,...o);let p=r[u],m=e[0].dataType===9?4:1,h=Math.ceil(W.size(a)/m),d=[{type:12,data:h},{type:6,data:p},{type:12,data:u},...G(e[0].dims),...G(e[1].dims),...G(a)],y=v=>{let S=V("data",e[0].dataType,e[0].dims.length,m),w=V("inputIndices",e[1].dataType,e[1].dims.length),x=K("output",e[0].dataType,a.length,m),E=_=>{let T=o.length,O=`var indicesIndices${_}  = ${w.type.indices}(0);`;for(let z=0;z<T;z++)O+=`${T>1?`indicesIndices${_}[${z}]`:`indicesIndices${_}`} = ${a.length>1?`outputIndices${_}[uniforms.axis + ${z}]`:`outputIndices${_}`};`;O+=`\n          var idx${_} = ${w.getByIndices(`indicesIndices${_}`)};\n          if (idx${_} < 0) {\n            idx${_} = idx${_} + uniforms.axisDimLimit;\n          }\n          var dataIndices${_} = ${S.type.indices}(0);\n        `;for(let z=0,M=0;z<i;z++)z===u?(O+=`${i>1?`dataIndices${_}[${z}]`:`dataIndices${_}`} = u32(idx${_});`,M+=T):(O+=`${i>1?`dataIndices${_}[${z}]`:`dataIndices${_}`} = ${a.length>1?`outputIndices${_}[${M}]`:`outputIndices${_}`};`,M++);return O},C;if(e[0].dataType===9){let _=(T,O,z="")=>`\n          let outputIndices${O} = ${x.offsetToIndices(`outputOffset + ${O}u`)};\n          ${E(O)};\n          let offset${O} = ${S.indicesToOffset(`dataIndices${O}`)};\n          let index${O} = offset${O} / 4u;\n          let component${O} = offset${O} % 4u;\n          ${T}[${O}] = ${z}(${S.getByOffset(`index${O}`)}[component${O}]);\n        `;C=`\n        let outputOffset = global_idx * ${m};\n        var value = vec4<u32>(0);\n        ${_("value",0,"u32")}\n        ${_("value",1,"u32")}\n        ${_("value",2,"u32")}\n        ${_("value",3,"u32")}\n        ${x.setByOffset("global_idx","value")}\n      `}else C=`\n      let outputIndices = ${x.offsetToIndices("global_idx")};\n      ${E("")};\n      let value = ${S.getByIndices("dataIndices")};\n      ${x.setByOffset("global_idx","value")};\n      `;return`\n      ${v.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(S,w,x)}\n      ${v.mainStart()}\n        ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        ${C}\n      }`};return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:d}),getShaderSource:y}},lu=e=>Te({axis:e.axis}),du=(e,t)=>{let r=e.inputs;$c(r),e.compute(_c(e.inputs,t))}});var Sc,xc,pu,mu,fu=J(()=>{"use strict";be();Ee();Qe();Ie();Sc=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and\n                     indices input tensors be of same rank.`)},xc=(e,t)=>{let r=e[0].dims,o=e[0].dataType,i=r.length,u=e[1].dims,a=e[1].dataType,p=W.normalizeAxis(t.axis,i),m=r[p],h=u.slice(0),d=W.size(h),y=V("input",o,i),v=V("indicesInput",a,u.length),S=K("output",o,h.length),w=[{type:12,data:d},{type:6,data:m},{type:12,data:p}];return w.push(...G(r)),w.push(...G(u)),w.push(...G(h)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:h,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:w}),getShaderSource:C=>`\n      ${C.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(y,v,S)}\n      ${C.mainStart()}\n      ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n      let outputIndices = ${S.offsetToIndices("global_idx")};\n\n      var idx = ${v.getByOffset("global_idx")};\n      if (idx < 0) {\n        idx = idx + uniforms.axisDimLimit;\n      }\n      var inputIndices = ${y.type.indices}(outputIndices);\n      ${y.indicesSet("inputIndices","uniforms.axis","u32(idx)")};\n      let value = ${y.getByIndices("inputIndices")};\n\n      ${S.setByOffset("global_idx","value")};\n  }`}},pu=e=>Te({axis:e.axis}),mu=(e,t)=>{let r=e.inputs;Sc(r),e.compute(xc(e.inputs,t))}});var Cc,Ac,hu,gu,yu=J(()=>{"use strict";be();Ee();Ie();Cc=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},Ac=(e,t)=>{let r=e[0].dims.slice(),o=e[1].dims.slice(),[i,u,a]=An.getShapeOfGemmResult(r,t.transA,o,t.transB,e.length===3?e[2].dims:void 0),p=[i,u];if(!p)throw new Error("Can\'t use gemm on the given tensors");let m=W.size(p),h=[{type:12,data:m},{type:12,data:i},{type:12,data:u},{type:12,data:a},{type:1,data:t.alpha},{type:1,data:t.beta}],d=["type","type"];e.length===3&&(h.push(...G(e[2].dims)),d.push("rank")),h.push(...G(p));let y=v=>{let S="";t.transA&&t.transB?S="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":t.transA&&!t.transB?S="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!t.transA&&t.transB?S="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!t.transA&&!t.transB&&(S="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let w=t.alpha===1?"":"value *= uniforms.alpha;",x=V("a",e[0].dataType,e[0].dims),E=V("b",e[1].dataType,e[1].dims),C=x.type.value,_=null,T=[x,E];e.length===3&&(_=V("c",e[2].dataType,e[2].dims.length),T.push(_));let O=K("output",e[0].dataType,p.length);T.push(O);let z=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`\n  ${v.registerUniforms(z).declareVariables(...T)}\n\n  ${v.mainStart()}\n    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let m = global_idx / uniforms.N;\n    let n = global_idx % uniforms.N;\n\n    var value = ${C}(0);\n    for (var k: u32 = 0u; k < uniforms.K; k++) {\n      ${S}\n    }\n\n    ${w}\n    ${(()=>_!=null?`let cOffset = ${_.broadcastedIndicesToOffset("vec2(m, n)",O)}; value += ${C}(uniforms.beta) * ${_.getByOffset("cOffset")};`:"")()}\n    output[global_idx] = value;\n  }`};return{name:"Gemm",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:p,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:h}),getShaderSource:y}},hu=e=>{let t=e.transA,r=e.transB,o=e.alpha,i=e.beta;return{transA:t,transB:r,alpha:o,beta:i,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},gu=(e,t)=>{Cc(e.inputs),e.compute(Ac(e.inputs,t))}});var Ic,Tc,Ec,bu,wu=J(()=>{"use strict";be();Ee();Ie();Ic=(e,t)=>{let r=e[0].dims,o=r,i=2,u=W.sizeToDimension(r,i),a=W.sizeFromDimension(r,i),p=Le(a),m=a/p,h=[r[0],r[1],m],d=["rank","type","type"],y=[{type:12,data:a},{type:12,data:m}];y.push(...G(h),...G(h));let v=S=>{let w=V("x",e[0].dataType,h.length,p),x=V("scale",e[1].dataType,e[1].dims),E=V("bias",e[2].dataType,e[2].dims),C=K("output",e[0].dataType,h.length,p),_=[w,x,E,C],T=w.type.value,O=p===1?"f32":`vec${p}<f32>`,z=64,M=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`\n  var<workgroup> meanShared : f32;\n  var<workgroup> squaredNormShared : f32;\n  var<workgroup> workgroupShared : array<${O}, ${z}>;\n  const workgroupSize = ${z}u;\n  ${S.registerUniforms(M).declareVariables(..._)}\n  ${S.mainStart(z)}\n    let norm = global_idx / workgroupSize;\n    let batch = norm / uniforms.x_shape[1];\n    let channel = norm % uniforms.x_shape[1];\n    let localIndex = local_id.x;\n\n    // initialize workgroup memory\n    var initial = ${O}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      initial = initial + ${O}(${w.get("batch","channel","h")});\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the mean of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      meanShared = ${dt("workgroupShared[0]",p)} / f32(uniforms.normSize);\n    }\n    workgroupBarrier();\n\n    // reinitialize workgroup memory.\n    initial = ${O}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let deviation =  ${O}(${w.get("batch","channel","h")}) - ${O}(meanShared);\n      initial = initial + deviation * deviation;\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the sum of square of deviation of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      squaredNormShared = ${dt("workgroupShared[0]",p)};\n    }\n    workgroupBarrier();\n\n    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${t.epsilon}));\n    let channelScale = invStdDev * f32(${x.getByOffset("channel")});\n    let channelShift = f32(${E.getByOffset("channel")}) - meanShared * channelScale;\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let value = ${w.get("batch","channel","h")} * ${T}(${O}(channelScale)) + ${T}(${O}(channelShift));\n      ${C.set("batch","channel","h","value")};\n    }\n  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${t.epsilon};${p}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:u},programUniforms:y}),getShaderSource:v}},Tc=(e,t,r,o,i,u,a,p)=>{let m=Le(a),h=64,d=m===1?"vec2f":`mat2x${m}f`,y=m===1?"f32":`vec${m}f`,v=(M,N)=>`${d}(${M}, ${N})`,S=i*a/m,w=Math.ceil(u/h),x=["type"],E=[{type:12,data:w},{type:12,data:u},{type:12,data:Math.floor(a/m)},{type:12,data:Math.floor(u*a/m)}],C=M=>{let N=V("input",t.dataType,t.dims,m);return`\n  ${M.declareVariables(N)}\n  @group(0) @binding(1) var<storage, read_write> output : array<${d}>;\n  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};\n  @group(0) @binding(2) var<uniform> uniforms: Uniforms;\n\n  ${M.mainStart(h)}\n    let currentImageNumber = global_idx / ${h} / uniforms.C;\n    let currentChannelNumber = (global_idx / ${h}) % uniforms.C;\n    let wgId = global_idx % ${h};\n    let wgOffset = wgId * uniforms.wg_size;\n    if (wgOffset >= uniforms.H) {\n        return;\n    }\n    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);\n\n    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;\n    var sum = ${et("f32",m)};\n    var squaredSum = ${et("f32",m)};\n    for (var i: u32 = wgOffset; i < wgMax; i++) {\n        let value = ${y}(input[offset + i * uniforms.C]);\n        sum += value;\n        squaredSum += value * value;\n    }\n    output[global_idx] = ${v("sum","squaredSum")};\n  }`},_=e.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${m}`,inputDependencies:x},getRunData:()=>({outputs:[{dims:[i,a,h,2],dataType:1}],dispatchGroup:{x:i*a/m},programUniforms:E}),getShaderSource:C},{inputs:[t],outputs:[-1]})[0],T=[{type:12,data:S},{type:12,data:u},{type:12,data:Math.floor(a/m)},{type:12,data:Math.floor(h*a/m)}],O=["type","type","type"],z=M=>{let N=V("scale",r.dataType,r.dims,m),j=V("bias",o.dataType,o.dims,m);return`\n  @group(0) @binding(0) var<storage, read> input : array<${d}>;\n  @group(0) @binding(1) var<storage, read> scale : array<${N.type.storage}>;\n  @group(0) @binding(2) var<storage, read> bias : array<${j.type.storage}>;\n  @group(0) @binding(3) var<storage, read_write> output : array<${d}>;\n  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};\n  @group(0) @binding(4) var<uniform> uniforms: Uniforms;\n\n  ${M.mainStart()}\n    ${M.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}\n    let currentImageNumber = global_idx / uniforms.C;\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let offset = currentImageNumber * uniforms.image_size;\n    var sum = ${et("f32",m)};\n    var squaredSum = ${et("f32",m)};\n    for (var i: u32 = 0; i < ${h}; i++) {\n        let value = input[offset + i + currentChannelNumber * ${h}];\n        sum += value[0];\n        squaredSum += value[1];\n    }\n    sum = sum / f32(uniforms.H);\n    squaredSum = squaredSum / f32(uniforms.H);\n    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${p}));\n    let channelScale = invStdDev * ${y}(scale[currentChannelNumber]);\n    let channelShift = ${y}(bias[currentChannelNumber]) - sum * channelScale;\n\n    output[global_idx] = ${v("channelScale","channelShift")};\n  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${m};${p}`,inputDependencies:O},getRunData:()=>({outputs:[{dims:[i,a,2],dataType:1}],dispatchGroup:{x:Math.ceil(S/64)},programUniforms:T}),getShaderSource:z},{inputs:[_,r,o],outputs:[-1]})[0]},Ec=(e,t,r)=>{let o=t[0].dims,i=o,u=o[0],a=o[o.length-1],p=W.sizeFromDimension(o,1)/a,m=Le(a),h=W.size(i)/m,d=[{type:12,data:p},{type:12,data:Math.floor(a/m)}],y=["type","type"],v=Tc(e,t[0],t[1],t[2],u,p,a,r.epsilon),S=w=>{let x=Ge(t[0].dataType),E=m===1?"vec2f":`mat2x${m}f`,C=m===1?x:`vec${m}<${x}>`,_=V("input",t[0].dataType,t[0].dims,m),T=K("output",t[0].dataType,i,m);return`\n  @group(0) @binding(0) var<storage, read> input : array<${_.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scaleInput : array<${E}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${T.type.storage}>;\n  struct Uniforms {H: u32, C : u32};\n  @group(0) @binding(3) var<uniform> uniforms: Uniforms;\n\n  ${w.mainStart()}\n    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;\n    let scale = scaleInput[scaleOffset];\n    output[global_idx] = fma(input[global_idx], ${C}(scale[0]), ${C}(scale[1]));\n  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${m}`,inputDependencies:y},getRunData:()=>({outputs:[{dims:i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:d}),getShaderSource:S},{inputs:[t[0],v]})},bu=(e,t)=>{t.format==="NHWC"?Ec(e,e.inputs,t):e.compute(Ic(e.inputs,t))}});var Pc,Oc,vu,$u=J(()=>{"use strict";be();Ee();Ie();Pc=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Oc=(e,t,r)=>{let o=e[0].dims,i=e[1],u=e[2],a=o,p=W.normalizeAxis(t.axis,o.length),m=W.sizeToDimension(o,p),h=W.sizeFromDimension(o,p),d=W.size(i.dims),y=u?W.size(u.dims):0;if(d!==h||u&&y!==h)throw new Error(`Size of X.shape()[axis:] == ${h}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${d} and bias size of ${y}`);let v=[];for(let O=0;O<o.length;++O)O<p?v.push(o[O]):v.push(1);let S=Le(h),w=["type","type"],x=[{type:12,data:m},{type:1,data:h},{type:12,data:Math.floor(h/S)},{type:1,data:t.epsilon}];u&&w.push("type");let E=r>1,C=r>2,_=O=>{let z=Ge(e[0].dataType),M=[V("x",e[0].dataType,e[0].dims,S),V("scale",i.dataType,i.dims,S)];u&&M.push(V("bias",u.dataType,u.dims,S)),M.push(K("output",e[0].dataType,a,S)),E&&M.push(K("mean_data_output",1,v)),C&&M.push(K("inv_std_output",1,v));let N=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`\n  ${O.registerUniforms(N).declareVariables(...M)}\n  ${O.mainStart()}\n    ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}\n    let offset = global_idx * uniforms.norm_size_vectorized;\n    var meanVector = ${et("f32",S)};\n    var meanSquareVector = ${et("f32",S)};\n\n    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {\n      let value = ${vt(z,S,"x[h + offset]")};\n      meanVector += value;\n      meanSquareVector += value * value;\n    }\n    let mean = ${dt("meanVector",S)} / uniforms.norm_size;\n    let invStdDev =\n        inverseSqrt(${dt("meanSquareVector",S)} / uniforms.norm_size - mean * mean + uniforms.epsilon);\n\n    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {\n      let f32input = ${vt(z,S,"x[j + offset]")};\n      let f32scale = ${vt(z,S,"scale[j]")};\n      output[j + offset] = ${M[0].type.value}((f32input - mean) * invStdDev * f32scale\n        ${u?`+ ${vt(z,S,"bias[j]")}`:""}\n      );\n    }\n\n    ${E?"mean_data_output[global_idx] = mean":""};\n    ${C?"inv_std_output[global_idx] = invStdDev":""};\n  }`},T=[{dims:a,dataType:e[0].dataType}];return E&&T.push({dims:v,dataType:1}),C&&T.push({dims:v,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${S};${r}`,inputDependencies:w},getRunData:()=>({outputs:T,dispatchGroup:{x:Math.ceil(m/64)},programUniforms:x}),getShaderSource:_}},vu=(e,t)=>{Pc(e.inputs),e.compute(Oc(e.inputs,t,e.outputCount))}});var kc,Su,_u,Rc,No,xu,Cu=J(()=>{"use strict";be();Ee();Qe();xn();Io();Ie();gr();kc=(e,t)=>{let r=e[0],o=e[1],i=e[2],u=e[3],a=e[4],p=e[5],m=e[6],h=e[7];if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let d=!1,y=r.dims[0],v=r.dims[1],S=r.dims.length===3?d?r.dims[2]/3:r.dims[2]:t.numHeads*r.dims[4],w=v,x=0,E=0,C=Math.floor(S/t.numHeads);if(m&&h){if(m.dims.length!==4)throw new Error(\'Input "past_key" is expected to have 4 dimensions\');if(h.dims.length!==4)throw new Error(\'Input "past_value" is expected to have 4 dimensions\');x=m.dims[2],E=m.dims[2]}else if(m||h)throw new Error(\'Input "past_key" and "past_value" shall be both present or both absent\');let _;if(o){if(r.dims.length!==3)throw new Error(\'Input "query" is expected to have 3 dimensions when key is given\');if(o.dims.length<3||o.dims.length>5)throw new Error(\'Input "key" is expected to have 3, 4, or 5 dimensions\');if(r.dims[0]!==o.dims[0])throw new Error(\'Input "query" and "key" shall have same dim 0 (batch size)\');if(o.dims.length===3){if(o.dims[2]!==r.dims[2])throw new Error(\'Input "query" and "key" shall have same dim 2 (hidden_size)\');_=2,w=o.dims[1]}else if(o.dims.length===5){if(o.dims[2]!==t.numHeads||o.dims[3]!==2||o.dims[4]!==C)throw new Error(\'Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv\');if(i)throw new Error(\'Expect "value" be none when "key" has packed kv format.\');_=5,w=o.dims[1]}else{if(o.dims[1]!==t.numHeads||o.dims[3]!==C)throw new Error(\'Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key\');_=0,w=o.dims[2]}}else{if(r.dims.length!==3&&r.dims.length!==5)throw new Error(\'Input "query" is expected to have 3 or 5 dimensions when key is empty\');if(r.dims.length===5&&(r.dims[2]!==t.numHeads||r.dims[3]!==3))throw new Error(\'Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv\');_=3}if(u){if(u.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimension\');if(i&&r.dims.length===5&&r.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let T=0;if(a){T=8;let j=a.dims;throw j.length===1?j[0]===y?T=1:j[0]===3*y+2&&(T=3):j.length===2&&j[0]===y&&j[1]===w&&(T=5),T===8?new Error(\'Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)\'):new Error("Mask not supported")}let O=!1,z=S;if(i){if(i.dims.length!==3&&i.dims.length!==4)throw new Error(\'Input "value" is expected to have 3 or 4 dimensions\');if(r.dims[0]!==i.dims[0])throw new Error(\'Input "query" and "value" shall have same dim 0 (batch_size)\');if(i.dims.length===3){if(w!==i.dims[1])throw new Error(\'Input "key" and "value" shall have the same dim 1 (kv_sequence_length)\');z=i.dims[2]}else{if(w!==i.dims[2])throw new Error(\'Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)\');z=i.dims[1]*i.dims[3],O=!0}}let M=x+w,N=!1;if(a)throw new Error("Key padding mask is not supported");if(p)throw new Error("extraAddQk is not supported");if(m)throw new Error("pastKey is not supported");if(h)throw new Error("pastValue is not supported");return{batchSize:y,sequenceLength:v,pastSequenceLength:x,kvSequenceLength:w,totalSequenceLength:M,maxSequenceLength:E,inputHiddenSize:0,hiddenSize:S,vHiddenSize:z,headSize:C,vHeadSize:Math.floor(z/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:T,scale:t.scale,broadcastResPosBias:N,passPastInKv:O,qkvFormat:_}},Su=e=>Te({...e}),_u=Te({perm:[0,2,1,3]}),Rc=(e,t,r,o,i,u,a)=>{let p=[o,i,u],m=W.size(p),h=[{type:12,data:m},{type:12,data:a},{type:12,data:u}],d=y=>{let v=K("qkv_with_bias",t.dataType,p),S=V("qkv",t.dataType,p),w=V("bias",r.dataType,p),x=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`\n  ${y.registerUniforms(x).declareVariables(S,w,v)}\n  ${y.mainStart()}\n    ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;\n\n    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];\n  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:p,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:h}),getShaderSource:d},{inputs:[t,r],outputs:[-1]})[0]},No=(e,t,r,o,i,u,a,p)=>{let m=u;if(a){if(o===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return m=Rc(e,u,a,t,o,r*i,p),m=m.reshape([t,o,r,i]),e.compute($t(m,_u.perm),{inputs:[m],outputs:[-1]})[0]}else return u.dims.length===3&&(m=u.reshape([t,o,r,i])),e.compute($t(m,_u.perm),{inputs:[m],outputs:[-1]})[0]},xu=(e,t)=>{let r=kc(e.inputs,t);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(e.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let o=e.inputs[1]&&e.inputs[2]&&e.inputs[1].dims.length===4&&e.inputs[2].dims.length===4,i=No(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,e.inputs[0],e.inputs[3],0);if(o)return kn(e,i,e.inputs[1],e.inputs[2],e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t);let u=No(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.headSize,e.inputs[1],e.inputs[3],r.hiddenSize),a=No(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.vHeadSize,e.inputs[2],e.inputs[3],2*r.hiddenSize);kn(e,i,u,a,e.inputs[4],void 0,e.inputs[6],e.inputs[7],e.inputs[5],r,t)}});var Dc,Bc,Mc,zc,Uc,Vc,Wc,Nc,Au,Iu=J(()=>{"use strict";be();Ee();Ie();Dc=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},Bc=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n            k = i32(${e.indicesGet("indices",i)}) - ${pe("uniforms.pads",i,r)};\n            if (k < 0) {\n              break;\n            }\n            if (k >= i32(${pe("uniforms.x_shape",i,t)})) {\n              break;\n            }\n            offset += k * i32(${pe("uniforms.x_strides",i,t)});\n        `;return`\n          value = ${e.type.value}(uniforms.constant_value);\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${o}\n            value = x[offset];\n          }\n      `},Mc=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${pe("uniforms.pads",i,r)};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = 2 * (i32(${pe("uniforms.x_shape",i,t)}) - 1);\n                  k = k % _2n_1;\n                  if(k >= i32(${pe("uniforms.x_shape",i,t)})) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * i32(${pe("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},zc=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${pe("uniforms.pads",i,r)};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= i32(${pe("uniforms.x_shape",i,t)})) {\n                  k = i32(${pe("uniforms.x_shape",i,t)}) - 1;\n                }\n                offset += k * i32(${pe("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},Uc=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${pe("uniforms.pads",i,r)};\n                if (k < 0)  {\n                  k += i32(${pe("uniforms.x_shape",i,t)}]);\n                }\n                if (k >= i32(${pe("uniforms.x_shape",i,t)})) {\n                  k -= i32(${pe("uniforms.x_shape",i,t)});\n                }\n                offset += k * i32(${pe("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},Vc=(e,t,r)=>{switch(r.mode){case 0:return Bc(e,t,r.pads.length);case 1:return Mc(e,t,r.pads.length);case 2:return zc(e,t,r.pads.length);case 3:return Uc(e,t,r.pads.length);default:throw new Error("Invalid mode")}},Wc=(e,t)=>{let r=W.padShape(e[0].dims.slice(),t.pads),o=e[0].dims,i=W.size(r),u=[{type:12,data:i},{type:12,data:t.pads}];t.mode===0&&u.push({type:e[0].dataType,data:t.value}),u.push(...G(e[0].dims),...G(r));let a=["rank"],p=m=>{let h=K("output",e[0].dataType,r.length),d=V("x",e[0].dataType,o.length),y=d.type.value,v=Vc(h,o.length,t),S=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return t.mode===0&&S.push({name:"constant_value",type:y}),`\n            ${m.registerUniforms(S).declareVariables(d,h)}\n            ${m.mainStart()}\n            ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n            let indices = ${h.offsetToIndices("global_idx")};\n\n            var value = ${y}(0);\n            ${v}\n            output[global_idx] = value;\n        }`};return{name:"Pad",shaderCache:{hint:`${t.mode}`,inputDependencies:a},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(W.size(r)/64)},programUniforms:u}),getShaderSource:p}},Nc=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),o=e.length>=3&&e[2].data?e[2].getFloat32Array()[0]:0,i=e[0].dims.length,u=new Int32Array(2*i).fill(0);if(e.length>=4){let p=e[3].getBigInt64Array();for(let m=0;m<p.length;m++)u[Number(p[m])]=Number(r[m]),u[Number(p[m])+i]=Number(r[m+p.length])}else r.forEach((p,m)=>u[Number(m)]=Number(p));let a=[];return u.forEach(p=>a.push(p)),{mode:t.mode,value:o,pads:a}}else return t},Au=(e,t)=>{Dc(e.inputs);let r=Nc(e.inputs,t);e.compute(Wc(e.inputs,r),{inputs:[0]})}});var Nn,Tu,Eu,Pu,Ou,Hc,Gc,ku,Ru,Du,Bu,Mu,zu,Uu,Vu,Wu,Nu,Hu,Gu,Lu=J(()=>{"use strict";fr();be();Ee();Ie();Nn=e=>{if(mr.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},Tu=(e,t,r)=>{let o=t.format==="NHWC",i=e.dims.slice();o&&i.splice(1,0,i.pop());let u=Object.hasOwnProperty.call(t,"dilations"),a=t.kernelShape.slice(),p=t.strides.slice(),m=u?t.dilations.slice():[],h=t.pads.slice();tr.adjustPoolAttributes(r,i,a,p,m,h);let d=tr.computePoolOutputShape(r,i,p,m,a,h,t.autoPad),y=Object.assign({},t);u?Object.assign(y,{kernelShape:a,strides:p,pads:h,dilations:m,cacheKey:t.cacheKey}):Object.assign(y,{kernelShape:a,strides:p,pads:h,cacheKey:t.cacheKey});let v=d.slice();return v.push(v.splice(1,1)[0]),[y,o?v:d]},Eu=(e,t)=>{let r=t.format==="NHWC",o=W.size(e),i=W.size(t.kernelShape),u=[{type:12,data:o},{type:12,data:i}],a=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let p=t.kernelShape[t.kernelShape.length-1],m=t.strides[t.strides.length-1],h=t.pads[t.pads.length/2-1],d=t.pads[t.pads.length-1],y=!!(h+d);u.push({type:12,data:p},{type:12,data:m},{type:12,data:h},{type:12,data:d}),a.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let v=!1;if(t.kernelShape.length===2){let S=t.kernelShape[t.kernelShape.length-2],w=t.strides[t.strides.length-2],x=t.pads[t.pads.length/2-2],E=t.pads[t.pads.length-2];v=!!(x+E),u.push({type:12,data:S},{type:12,data:w},{type:12,data:x},{type:12,data:E}),a.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[u,a,!0,y,v]}else{if(r)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let p=W.computeStrides(t.kernelShape);u.push({type:12,data:p},{type:12,data:t.pads},{type:12,data:t.strides}),a.push({name:"kernelStrides",type:"u32",length:p.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length});let m=t.pads.reduce((h,d)=>h+d);return[u,a,!!m,!1,!1]}},Pu=(e,t,r,o,i,u,a,p,m,h,d,y)=>{let v=i.format==="NHWC",S=t.type.value,w=K("output",t.type.tensor,o);if(i.kernelShape.length<=2){let x="",E="",C="",_=r-(v?2:1);if(d?x=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${_}] = indices[${_}] * uniforms.sw - uniforms.pwStart + i;\n                  if (xIndices[${_}] < 0 || xIndices[${_}]\n                      >= uniforms.x_shape[${_}]) {\n                    pad++;\n                    continue;\n                  }\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${u}\n                }`:x=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${_}] = indices[${_}] * uniforms.sw - uniforms.pwStart + i;\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${u}\n                }`,i.kernelShape.length===2){let O=r-(v?3:2);y?E=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${O}] = indices[${O}] * uniforms.sh - uniforms.phStart + j;\n                  if (xIndices[${O}] < 0 || xIndices[${O}] >= uniforms.x_shape[${O}]) {\n                    pad += i32(uniforms.kw);\n                    continue;\n                  }\n              `:E=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${O}] = indices[${O}] * uniforms.sh - uniforms.phStart + j;\n                `,C=`\n              }\n            `}return`\n            ${e.registerUniforms(m).declareVariables(t,w)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n              let indices = ${w.offsetToIndices("global_idx")};\n              var xIndices = ${w.offsetToIndices("global_idx")};\n\n              var value = ${S}(${p});\n              var pad = 0;\n              ${E}\n              ${x}\n              ${C}\n              ${a}\n\n              output[global_idx] = value;\n            }`}else{if(v)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let x=i.kernelShape.length,E=i.pads.length,C="";return h?C=`\n                if (xIndices[j] >= uniforms.x_shape[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${t.indicesToOffset("xIndices")}];\n                ${u}\n              }`:C=`\n              }\n              let x_val = x[${t.indicesToOffset("xIndices")}];\n              ${u}\n            `,`\n            ${e.registerUniforms(m).declareVariables(t,w)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n              let indices = ${w.offsetToIndices("global_idx")};\n              var xIndices = ${w.offsetToIndices("global_idx")};\n\n              var offsets: array<u32, ${x}>;\n\n              var value = ${S}(${p});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${x-1}u; j++) {\n                  offsets[j] = offset / ${pe("uniforms.kernelStrides","j",x)};\n                  offset -= offsets[j] * ${pe("uniforms.kernelStrides","j",x)};\n                }\n                offsets[${x-1}] = offset;\n\n                isPad = false;\n                for (var j = ${r-x}u; j < ${r}u; j++) {\n                  xIndices[j] = indices[j] * ${pe("uniforms.strides",`j - ${r-x}u`,x)}\n                    + offsets[j - ${r-x}u] - ${pe("uniforms.pads","j - 2u",E)};\n                  ${C}\n              }\n              ${a}\n\n              output[global_idx] = value;\n            }`}},Ou=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,Hc=e=>`${Ou(e)};${e.countIncludePad}`,Gc=e=>`${Ou(e)};${e.storageOrder};${e.dilations}`,ku=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),Ru=(e,t,r,o)=>{let[i,u]=Tu(t,o,r),a=V("x",t.dataType,t.dims.length),p=a.type.value,m="value += x_val;",h="";i.countIncludePad?h+=`value /= ${p}(uniforms.kernelSize);`:h+=`value /= ${p}(i32(uniforms.kernelSize) - pad);`;let[d,y,v,S,w]=Eu(u,i);d.push(...G(t.dims),...G(u));let x=["rank"];return{name:e,shaderCache:{hint:`${o.cacheKey};${v};${S};${w}`,inputDependencies:x},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(W.size(u)/64)},programUniforms:d}),getShaderSource:E=>Pu(E,a,t.dims.length,u.length,i,m,h,0,y,v,S,w)}},Du=e=>{let t=e.count_include_pad!==0,r=ku(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let o={countIncludePad:t,...r,cacheKey:""};return{...o,cacheKey:Hc(o)}},Bu=(e,t)=>{Nn(e.inputs),e.compute(Ru("AveragePool",e.inputs[0],!1,t))},Mu={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},zu=e=>{let t=e.format;return{format:t,...Mu,cacheKey:t}},Uu=(e,t)=>{Nn(e.inputs),e.compute(Ru("GlobalAveragePool",e.inputs[0],!0,t))},Vu=(e,t,r,o)=>{let[i,u]=Tu(t,o,r),a=`\n      value = max(x_val, value);\n    `,p="",m=V("x",t.dataType,t.dims.length),h=["rank"],[d,y,v,S,w]=Eu(u,i);return d.push(...G(t.dims),...G(u)),{name:e,shaderCache:{hint:`${o.cacheKey};${v};${S};${w}`,inputDependencies:h},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(W.size(u)/64)},programUniforms:d}),getShaderSource:x=>Pu(x,m,t.dims.length,u.length,i,a,p,-1e5,y,v,S,w)}},Wu=(e,t)=>{Nn(e.inputs),e.compute(Vu("MaxPool",e.inputs[0],!1,t))},Nu=e=>{let t=e.storage_order,r=e.dilations,o=ku(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(o.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let i={storageOrder:t,dilations:r,...o,cacheKey:""};return{...i,cacheKey:Gc(i)}},Hu=e=>{let t=e.format;return{format:t,...Mu,cacheKey:t}},Gu=(e,t)=>{Nn(e.inputs),e.compute(Vu("GlobalMaxPool",e.inputs[0],!0,t))}});var Fc,qc,Fu,qu=J(()=>{"use strict";fr();be();Ie();Fc=(e,t,r)=>{let o=e===t,i=e<t&&r<0,u=e>t&&r>0;if(o||i||u)throw new Error("Range these inputs\' contents are invalid.")},qc=(e,t,r,o)=>{let i=Math.abs(Math.ceil((t-e)/r)),u=[i],a=i,p=[{type:12,data:a},{type:o,data:e},{type:o,data:r},...G(u)],m=h=>{let d=K("output",o,u.length),y=d.type.value,v=[{name:"outputSize",type:"u32"},{name:"start",type:y},{name:"delta",type:y}];return`\n        ${h.registerUniforms(v).declareVariables(d)}\n        ${h.mainStart()}\n        ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        output[global_idx] = uniforms.start + ${y}(global_idx) * uniforms.delta;\n      }`};return{name:"Range",shaderCache:{hint:`${o}`},getShaderSource:m,getRunData:()=>({outputs:[{dims:u,dataType:o}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:p})}},Fu=e=>{let t=0,r=0,o=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],o=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],o=e.inputs[2].getFloat32Array()[0]),mr.webgpu.validateInputContent&&Fc(t,r,o),e.compute(qc(t,r,o,e.inputs[0].dataType),{inputs:[]})}});var jc,Kc,Yc,Zc,Jc,Xc,Qc,ep,tp,rp,np,ju,op,ip,ap,sp,up,Ku,Yu,Zu=J(()=>{"use strict";be();Ee();Qe();Ie();jc=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and\n            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},Kc=(e,t,r)=>{t.every(i=>i>=0&&i<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let o=new Array(r).fill(1);return t.forEach((i,u)=>o[i]=e[u]),o},Yc=(e,t,r,o,i,u)=>{let[a,p,m]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],h=e[0].dims.length;if(a>0&&e.length>a&&e[a].dims.length>0)e[a].getFloat32Array().forEach(d=>u.push(d));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(p>0&&e.length>p&&e[p].dims.length>0){if(e[p].getFloat32Array().forEach(d=>o.push(d)),o.length!==0&&o.length!==h&&r>=18&&o.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");jc(o,t),t.axes.length>0&&Kc(o,t.axes,h).forEach((d,y)=>o[y]=d)}if(m>0&&e.length>m&&(e[m].getBigInt64Array().forEach(d=>i.push(Number(d))),i.length!==h||r>=18&&i.length===t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(o.length!==t.axes.length)throw new Error(\'Resize requires "scales" input size to be of axes rank when axes attributes is specified\');if(i.length!==t.axes.length)throw new Error(\'Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified\')}if(typeof o<"u"&&typeof i<"u"&&o.length>0&&i.length>h)throw new Error("Resize requires only of scales or sizes to be specified")},Zc=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,\n     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`return ${t}(xResized) / ${t}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {\n                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;\n                  } else {\n                    return 0.0;\n                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {\n                    return 0.0;\n                  } else {\n                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating\n                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an\n                    // offset-by-one error later in floor().\n                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));\n                    let fract =\n                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);\n                    return whole + fract;\n                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {\n                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +\n                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /\n                        ${t}(lengthResized - 1);\n                  } else {\n                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);\n                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);\n                  const adjustment = ${t}(lengthResized) / outputWidth;\n                  const center = ${t}(lengthOriginal) / 2;\n                  const offset = center * (1 - adjustment);\n                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",Jc=(e,t,r)=>`fn getNearestPixelFromOriginal(xOriginal: ${r}, isDownSample: bool) -> ${r} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Xc=(e,t,r)=>{let o=new Array(r).fill(0).concat(new Array(r).fill(1)),i=e.length===0?o:e.slice();return t.length>0?(t.forEach((u,a)=>{o[u]=i[a],o[a+r]=i[t.length+a]}),o):i},Qc=(e,t,r,o)=>{let i=[];if(r.length>0)if(o.length>0){if(e.forEach(u=>i.push(u)),Math.max(...o)>e.length)throw new Error("axes is out of bound");o.forEach((u,a)=>i[u]=r[a])}else r.forEach(u=>i.push(u));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");i=e.map((u,a)=>Math.round(u*t[a]))}return i},ep=(e,t,r)=>{let o=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map(u=>t[u]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map(u=>t[u]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let i=e.slice();return r.axes.length>0?(r.axes.forEach(u=>t[u]=o),r.axes.forEach(u=>i[u]=Math.round(e[u]*t[u]))):(t.fill(o,0,t.length),i.forEach((u,a)=>i[a]=Math.round(u*t[a]))),i},tp=(e,t,r,o,i)=>`\n    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${r.length}> {\n      var original_indices: array<${e.type.value}, ${r.length}>;\n      for (var i:u32 = 0; i < ${r.length}; i++) {\n        var output_index = ${e.indicesGet("output_indices","i")};\n        var scale = ${pe("uniforms.scales","i",o)};\n        var roi_low = ${pe("uniforms.roi","i",i)};\n        var roi_hi = ${pe("uniforms.roi",`i + ${t.length}`,i)};\n        if (scale == 1.0) {\n          original_indices[i] = ${e.type.value}(output_index);\n        } else {\n          var input_shape_i = ${pe("uniforms.input_shape","i",t.length)};\n          var output_shape_i = ${pe("uniforms.output_shape","i",r.length)};\n          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                           input_shape_i, roi_low, roi_hi);\n        }\n      }\n      return original_indices;\n    }`,rp=(e,t,r,o,i,u,a)=>`\n    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n      var input_indices: ${e.type.indices};\n      for (var i:u32 = 0; i < ${o.length}; i++) {\n        var output_index = ${t.indicesGet("output_indices","i")};\n        var input_index: u32;\n        var scale = ${pe("uniforms.scales","i",i)};\n        if (scale == 1.0) {\n          input_index = output_index;\n        } else {\n          var roi_low = ${pe("uniforms.roi","i",u)};\n          var roi_hi = ${pe("uniforms.roi",`i + ${r.length}`,u)};\n          var input_shape_i = ${pe("uniforms.input_shape","i",r.length)};\n          var output_shape_i = ${pe("uniforms.output_shape","i",o.length)};\n          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                        input_shape_i, roi_low, roi_hi);\n          if (!${a} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {\n            if (original_idx < 0) {\n              input_index = 0;\n            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {\n              input_index = input_shape_i - 1;\n            } else {\n              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));\n            }\n          } else {\n            input_index = u32(original_idx);\n          }\n        }\n        ${e.indicesSet("input_indices","i"," input_index")}\n      }\n      return input_indices;\n    }`,np=(e,t)=>`\n    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var input_index = ${e.indicesGet("input_indices","i")};\n        if (input_index < 0 || input_index >= ${pe("uniforms.input_shape","i",t.length)}) {\n          return false;\n        }\n      }\n      return true;\n    }`,ju=(e,t,r,o)=>e.rank>o?`\n    ${e.indicesSet("input_indices",t,"channel")};\n    ${e.indicesSet("input_indices",r,"batch")};\n`:"",op=(e,t,r,o,i)=>{let[a,p,m,h]=r.length===2?[-1,0,1,-1]:[0,2,3,1],d=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${d} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",p,`max(0, min(row, ${r[p]} - 1))`)};\n      ${e.indicesSet("input_indices",m,`max(0, min(col, ${r[m]} - 1))`)};\n      ${ju(e,h,a,2)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${d} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var row:${d} = originalIndices[${p}];\n      var col:${d} = originalIndices[${m}];\n      ${o?`if (row < 0 || row > (${r[p]} - 1) || col < 0 || col > (${r[m]} - 1)) {\n        return ${i};\n      }`:""};\n      row = max(0, min(row, ${r[p]} - 1));\n      col = max(0, min(col, ${r[m]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = ${r.length>2?`u32(originalIndices[${h}])`:"0"};\n      var batch: u32 =  ${r.length>2?`u32(originalIndices[${a}])`:"0"};\n      var x11: ${d} = getInputValue(batch, channel, row1, col1);\n      var x12: ${d} = getInputValue(batch, channel, row1, col2);\n      var x21: ${d} = getInputValue(batch, channel, row2, col1);\n      var x22: ${d} = getInputValue(batch, channel, row2, col2);\n      var dx1: ${d} = abs(row - ${d}(row1));\n      var dx2: ${d} = abs(${d}(row2) - row);\n      var dy1: ${d} = abs(col - ${d}(col1));\n      var dy2: ${d} = abs(${d}(col2) - col);\n      if (row1 == row2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (col1 == col2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`},ip=(e,t,r,o,i,u,a,p,m,h)=>{let d=r.length===2,y=!0,[v,S]=d?[0,1]:y?[2,3]:[1,2],w=e.type.value,x=E=>{let C=E===v?"row":"col";return`\n      fn ${C}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${w} {\n        var output_index = ${t.indicesGet("output_indices",E)};\n        var originalIdx: ${w} = getOriginalCoordinateFromResizedCoordinate(output_index, ${i[E]},\n        ${o[E]}, ${r[E]}, ${u[E]}, ${u[E]} + ${r.length});\n        var fractOriginalIdx: ${w} = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${p} && (originalIdx < 0 || originalIdx > (${r[E]} - 1))) {\n          return ${m};\n        }\n        var data: array<${w}, 4> = array<${w}, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${C}: ${w} = originalIdx + ${w}(i);\n          if (${C} < 0 || ${C} >= ${r[E]}) {\n            ${(()=>h?`coefs[i + 1] = 0.0;\n                        continue;`:p?`return ${m};`:`${C} = max(0, min(${C}, ${r[E]} - 1));`)()};\n          }\n        var input_indices_copy: ${e.type.indices} = input_indices;\n          ${e.indicesSet("input_indices_copy",E,`u32(${C})`)};\n          data[i + 1] = ${E===v?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${x(v)};\n    ${x(S)};\n  fn getCubicInterpolationCoefs(s: ${w}) -> array<${w}, 4> {\n    var absS = abs(s);\n    var coeffs: array<${w}, 4> = array<${w}, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: ${w} = 1.0 - absS;\n    var twoMinusAbsS: ${w} = 2.0 - absS;\n    var onePlusAbsS: ${w} = 1.0 + absS;\n    coeffs[0] = ((${a} * onePlusAbsS - 5 * ${a}) * onePlusAbsS + 8 * ${a}) * onePlusAbsS - 4 * ${a};\n    coeffs[1] = ((${a} + 2) * absS - (${a} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${a} + 2) * oneMinusAbsS - (${a} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${a} * twoMinusAbsS - 5 * ${a}) * twoMinusAbsS + 8 * ${a}) * twoMinusAbsS - 4 * ${a};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<${w}, 4>, coefs: array<${w}, 4>) -> ${w} {\n    var coefsSum: ${w} = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${w} {\n    var input_indices: ${e.type.indices} = output_indices;\n    return colCubicInterpolation(input_indices, output_indices);\n  }\n    `},ap=(e,t,r,o,i)=>{let[a,p,m,h,d]=r.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],y=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${y} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",p,`max(0, min(depth, ${r[p]} - 1))`)};\n      ${e.indicesSet("input_indices",m,`max(0, min(height, ${r[m]} - 1))`)};\n      ${e.indicesSet("input_indices",h,`max(0, min(width, ${r[h]} - 1))`)};\n      ${ju(e,d,a,3)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${y} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var depth:${y} = originalIndices[${p}];\n      var height:${y} = originalIndices[${m}];\n      var width:${y} = originalIndices[${h}];\n      ${o?`if (depth < 0 || depth > (${r[p]} - 1) || height < 0 || height > (${r[m]} - 1) || width < 0 || (width > ${r[h]} - 1)) {\n      return ${i};\n        }`:""};\n\n    depth = max(0, min(depth, ${r[p]} - 1));\n      height = max(0, min(height, ${r[m]} - 1));\n      width = max(0, min(width, ${r[h]} - 1));\n      var depth1: u32 = u32(depth);\n      var height1: u32 = u32(height);\n      var width1: u32 = u32(width);\n      var depth2: u32 = u32(depth + 1);\n      var height2: u32 = u32(height + 1);\n      var width2: u32 = u32(width + 1);\n      var channel: u32 = ${r.length>3?`u32(originalIndices[${d}])`:"0"};\n      var batch: u32 =  ${r.length>3?`u32(originalIndices[${a}])`:"0"};\n\n      var x111: ${y} = getInputValue(batch, channel, depth1, height1, width1);\n      var x112: ${y} = getInputValue(batch, channel, depth1, height1, width2);\n      var x121: ${y} = getInputValue(batch, channel, depth1, height2, width1);\n      var x122: ${y} = getInputValue(batch, channel, depth1, height2, width2);\n      var x211: ${y} = getInputValue(batch, channel, depth2, height1, width1);\n      var x212: ${y} = getInputValue(batch, channel, depth2, height1, width2);\n      var x221: ${y} = getInputValue(batch, channel, depth2, height2, width1);\n      var x222: ${y} = getInputValue(batch, channel, depth2, height2, width2);\n      var dx1: ${y} = abs(depth - ${y}(depth1));\n      var dx2: ${y} = abs(${y}(depth2) - depth);\n      var dy1: ${y} = abs(height - ${y}(height1));\n      var dy2: ${y} = abs(${y}(height2) - height);\n      var dz1: ${y} = abs(width - ${y}(width1));\n      var dz2: ${y} = abs(${y}(width2) - width);\n      if (depth1 == depth2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (height1 == height2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      if (width1 == width2) {\n        dz1 = 0.5;\n        dz2 = 0.5;\n      }\n      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +\n              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);\n    }`},sp=(e,t,r,o,i,u)=>{let a=e.dims,p=Xc(u,t.axes,a.length),m=Qc(a,o,i,t.axes),h=o.slice();o.length===0&&(h=a.map((_,T)=>_===0?1:m[T]/_),t.keepAspectRatioPolicy!=="stretch"&&(m=ep(a,h,t)));let d=K("output",e.dataType,m.length),y=V("input",e.dataType,a.length),v=W.size(m),S=a.length===m.length&&a.every((_,T)=>_===m[T]),w=t.coordinateTransformMode==="tf_crop_and_resize",x=t.extrapolationValue,E=y.type.value,C=_=>`\n      ${S?"":`\n      ${Zc(t.coordinateTransformMode,E)};\n      ${(()=>{switch(t.mode){case"nearest":return`\n              ${np(y,a)};\n              ${Jc(t.nearestMode,r,E)};\n              ${rp(y,d,a,m,h.length,p.length,w)};\n              `;case"linear":return`\n              ${tp(d,a,m,h.length,p.length)};\n              ${(()=>{if(a.length===2||a.length===4)return`${op(y,d,a,w,x)}`;if(a.length===3||a.length===5)return`${ap(y,d,a,w,x)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};\n            `;case"cubic":return`\n            ${(()=>{if(a.length===2||a.length===4)return`${ip(y,d,a,m,h,p,t.cubicCoeffA,w,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};\n            `;default:throw Error("Invalid resize mode")}})()};\n      `}\n      ${_.registerUniform("output_size","u32").registerUniform("scales","f32",h.length).registerUniform("roi","f32",p.length).declareVariables(y,d)}\n      ${_.mainStart()}\n        ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n        ${S?"output[global_idx] = input[global_idx];":`\n        let output_indices = ${d.offsetToIndices("global_idx")};\n        var input_indices: ${y.type.indices};\n        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);\n                if (checkInputIndices(input_indices)) {\n                  output[global_idx] = ${y.getByIndices("input_indices")};\n                } else {\n                  output[global_idx] = ${t.extrapolationValue};\n                }`;case"linear":return`output[global_idx] = ${a.length===2||a.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};\n`}\n      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${h.length>0?h:""}|${i.length>0?i:""}|${p.length>0?p:""}|${S}|${a}`,inputDependencies:["rank"]},getShaderSource:C,getRunData:()=>({outputs:[{dims:m,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(v/64)},programUniforms:[{type:12,data:v},{type:1,data:h},{type:1,data:p},...G(a),...G(m)]})}},up=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},Ku=(e,t)=>{let r=[],o=[],i=[],u=up(e);if(t.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");Yc(e.inputs,t,u,r,o,i),e.compute(sp(e.inputs[0],t,u,r,o,i),{inputs:[0]})},Yu=e=>{let t=e.antialias,r=e.axes,o=e.coordinateTransformMode,i=e.cubicCoeffA,u=e.excludeOutside!==0,a=e.extrapolationValue,p=e.keepAspectRatioPolicy,m=e.mode,h=e.nearestMode===""?"simple":e.nearestMode;return Te({antialias:t,axes:r,coordinateTransformMode:o,cubicCoeffA:i,excludeOutside:u,extrapolationValue:a,keepAspectRatioPolicy:p,mode:m,nearestMode:h})}});var lp,dp,Ju,Xu=J(()=>{"use strict";be();Ee();Ie();lp=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],o=e[2];if(t.dataType!==r.dataType||t.dataType!==o.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let i=t.dims[t.dims.length-1],u=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==i)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==u)throw new Error("Skip must have the same sequence length as input");if(o.dims.length!==1)throw new Error("Gamma must be 1D");if(o.dims[o.dims.length-1]!==i)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let a=e[3];if(a.dims.length!==1)throw new Error("Beta must be 1D");if(a.dims[a.dims.length-1]!==i)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let a=e[4];if(a.dims.length!==1)throw new Error("Bias must be 1D");if(a.dims[a.dims.length-1]!==i)throw new Error("Bias must have the same hidden size as input")}},dp=(e,t,r,o)=>{let i=e[0].dims,u=W.size(i),a=i,p=u,m=i.slice(-1)[0],h=o?i.slice(0,-1).concat(1):[],d=e.length>3,y=e.length>4,v=o&&r>1,S=o&&r>2,w=r>3,x=Le(m),E=[{type:12,data:p},{type:12,data:x},{type:12,data:m},{type:1,data:t.epsilon}],C=T=>{let O=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],z=[V("x",e[0].dataType,e[0].dims,x),V("skip",e[1].dataType,e[1].dims,x),V("gamma",e[2].dataType,e[2].dims,x)];d&&z.push(V("beta",e[3].dataType,e[3].dims,x)),y&&z.push(V("bias",e[4].dataType,e[4].dims,x)),z.push(K("output",e[0].dataType,a,x)),v&&z.push(K("mean_output",1,h)),S&&z.push(K("inv_std_output",1,h)),w&&z.push(K("input_skip_bias_sum",e[0].dataType,a,x));let M=Ge(e[0].dataType);return`\n\n      ${T.registerUniforms(O).declareVariables(...z)}\n\n      ${T.mainStart()}\n        ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size / uniforms.hidden_size")}\n        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;\n        let offset = global_idx * hidden_size_vectorized;\n        var sum = ${et("f32",x)};\n        var squareSum = ${et("f32",x)};\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          let skip_value = skip[offset + i];\n          let bias_value = ${y?"bias[i]":"0.0"};\n          let input_value = x[offset + i];\n          let value = input_value + skip_value + bias_value;\n          ${w?"input_skip_bias_sum[offset + i] = value;":""}\n          output[offset + i] = value;\n          let f32_value = ${vt(M,x,"value")};\n          sum += f32_value;\n          squareSum += f32_value * f32_value;\n        }\n        let mean = ${dt("sum",x)} / f32(uniforms.hidden_size);\n        let inv_std_dev = inverseSqrt(${dt("squareSum",x)} / f32(uniforms.hidden_size) - mean * mean + uniforms.epsilon);\n        ${v?"mean_output[global_idx] = mean;":""}\n        ${S?"inv_std_output[global_idx] = inv_std_dev;":""}\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          output[offset + i] = (output[offset + i] - ${M}(mean)) * ${M}(inv_std_dev) * gamma[i] + ${d?"beta[i]":"0.0"};\n        }\n      }`},_=[{dims:a,dataType:e[0].dataType}];return r>1&&_.push({dims:h,dataType:1}),r>2&&_.push({dims:h,dataType:1}),r>3&&_.push({dims:i,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${x};${v};${S};${w}`,inputDependencies:e.map((T,O)=>"type")},getShaderSource:C,getRunData:()=>({outputs:_,dispatchGroup:{x:Math.ceil(p/m/64)},programUniforms:E})}},Ju=(e,t)=>{lp(e.inputs);let o=[0];e.outputCount>1&&o.push(-3),e.outputCount>2&&o.push(-3),e.outputCount>3&&o.push(3),e.compute(dp(e.inputs,t,e.outputCount,!1),{outputs:o})}});var cp,Hn,pp,Qu,mp,fp,el,tl,rl=J(()=>{"use strict";be();Ee();Qe();Ie();cp=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,o)=>{if(e[o+1].dataType!==6&&e[o+1].dataType!==7)throw new Error(`Input ${o} must be an array of int32 or int64`)})},Hn=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(o=>r.push(Number(o)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(o=>r.push(Number(o)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},pp=(e,t)=>{if(e.length>1){let r=Hn(e,1),o=Hn(e,2),i=Hn(e,3);return i.length===0&&(i=[...Array(e[0].dims.length).keys()]),Te({starts:r,ends:o,axes:i})}else return t},Qu=(e,t,r,o,i)=>{let u=e;return e<0&&(u+=r[o[t]]),i[t]<0?Math.max(0,Math.min(u,r[o[t]]-1)):Math.max(0,Math.min(u,r[o[t]]))},mp=(e,t,r)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n          var input_indices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${r.length}; i >= 0; i--) {\n            let input_shape_i = ${pe("uniforms.input_shape","i",r.length)};\n            let steps_i = ${pe("uniforms.steps","i",r.length)};\n            let signs_i = ${pe("uniforms.signs","i",r.length)};\n            let starts_i = ${pe("uniforms.starts","i",r.length)};\n            var output_index = ${t.indicesGet("output_indices","i")};\n            var input_index = output_index * steps_i + starts_i + carry;\n            carry = input_index / input_shape_i;\n            input_index = input_index % input_shape_i;\n            if (signs_i < 0) {\n              input_index = input_shape_i - input_index - 1u + starts_i;\n            }\n            ${e.indicesSet("input_indices","i","input_index")};\n          }\n          return input_indices;\n      }`,fp=(e,t)=>{let r=e[0].dims,o=W.size(r),i=t.axes.length>0?W.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],u=Hn(e,4);u.forEach(C=>C!==0||(()=>{throw new Error("step cannot be 0")})),u.length===0&&(u=Array(i.length).fill(1));let a=t.starts.map((C,_)=>Qu(C,_,r,i,u)),p=t.ends.map((C,_)=>Qu(C,_,r,i,u));if(i.length!==a.length||i.length!==p.length)throw new Error("start, ends and axes should have the same number of elements");if(i.length!==r.length)for(let C=0;C<r.length;++C)i.includes(C)||(a.splice(C,0,0),p.splice(C,0,r[C]),u.splice(C,0,1));let m=u.map(C=>Math.sign(C));u.forEach((C,_,T)=>{if(C<0){let O=(p[_]-a[_])/C,z=a[_],M=z+O*u[_];a[_]=M,p[_]=z,T[_]=-C}});let h=r.slice(0);i.forEach((C,_)=>{h[C]=Math.ceil((p[C]-a[C])/u[C])});let d={dims:h,dataType:e[0].dataType},y=K("output",e[0].dataType,h.length),v=V("input",e[0].dataType,e[0].dims.length),S=W.size(h),w=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:a.length},{name:"signs",type:"i32",length:m.length},{name:"steps",type:"u32",length:u.length}],x=[{type:12,data:S},{type:12,data:a},{type:6,data:m},{type:12,data:u},...G(e[0].dims),...G(h)],E=C=>`\n      ${C.registerUniforms(w).declareVariables(v,y)}\n        ${mp(v,y,r)}\n        ${C.mainStart()}\n          ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n          let output_indices = ${y.offsetToIndices("global_idx")};\n          let input_indices = calculateInputIndices(output_indices);\n          ${y.setByOffset("global_idx",v.getByIndices("input_indices"))}\n      }`;return{name:"Slice",shaderCache:{hint:`${m.length}_${a.length}_${u.length}`,inputDependencies:["rank"]},getShaderSource:E,getRunData:()=>({outputs:[d],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:x})}},el=(e,t)=>{cp(e.inputs,t);let r=pp(e.inputs,t);e.compute(fp(e.inputs,r),{inputs:[0]})},tl=e=>{let t=e.starts,r=e.ends,o=e.axes;return Te({starts:t,ends:r,axes:o})}});var hp,gp,nl,ol,il=J(()=>{"use strict";be();Ee();Qe();Ie();hp=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},gp=(e,t)=>{let r=e.dims,o=W.size(r),i=64,u=t.axis;if(u<0&&(u=r.length+u),u<r.length-1)throw new Error("softmax only supports last axis for now.");let a=r[u],p=o/a,m=Le(a),h=a/m,d=(E,C)=>C===4?`max(max(${E}.x, ${E}.y), max(${E}.z, ${E}.w))`:C===2?`max(${E}.x, ${E}.y)`:C===3?`max(max(${E}.x, ${E}.y), ${E}.z)`:E,y=V("x",e.dataType,e.dims,m),v=K("result",e.dataType,e.dims,m),S=y.type.value,w=Ge(e.dataType)==="f32"?`var threadMax = ${S}(-3.402823e+38f);`:`var threadMax = ${S}(-65504.0h);`,x=E=>`\n      var<workgroup> rowMaxShared : ${S};\n      var<workgroup> rowSumShared : ${S};\n      var<workgroup> threadShared : array<${S}, ${i}>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${S} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${S}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n      ${E.registerUniform("packedCols","i32").declareVariables(y,v)}\n      ${E.mainStart()}\n        let gindex = i32(global_idx);\n        let lindex = i32(local_idx);\n        const wg = ${i};\n        let row = gindex / wg;\n        let cols = uniforms.packedCols;\n        let row_stride : i32 = uniforms.packedCols;\n\n        // find the rows max\n        ${w}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = ${S}(${d("threadShared[0]",m)});\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = ${S}(0.0);\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = ${S}(${dt("threadShared[0]",m)});\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`;return{name:"Softmax",shaderCache:{hint:`${m}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.dataType}],dispatchGroup:{x:p},programUniforms:[{type:12,data:h}]}),getShaderSource:x}},nl=(e,t)=>{hp(e.inputs),e.compute(gp(e.inputs[0],t))},ol=e=>Te({axis:e.axis})});var yp,bp,wp,vp,$p,al,sl,ul=J(()=>{"use strict";be();Ee();Qe();Ie();yp=e=>{if(!e||e.length<1)throw new Error("too few inputs")},bp=(e,t)=>{let r=[],o=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(i=>r.push(Number(i))),o=r.length),Te({numOutputs:o,axis:t.axis,splitSizes:r})},wp=e=>`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n    if (index < ${pe("uniforms.size_in_split_axis","i",e)}) {\n        return i;\n    }\n    }\n    return ${e}u;\n}`,vp=e=>{let t=e.length,r=[];for(let o=0;o<t;++o){let i=e[o].setByIndices("indices","input[global_idx]");t===1?r.push(i):o===0?r.push(`if (output_number == ${o}u) { ${i} }`):o===t-1?r.push(`else { ${i} }`):r.push(`else if (output_number == ${o}) { ${i} }`)}return`\n      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${r.join(`\n`)}\n      }`},$p=(e,t)=>{let r=e[0].dims,o=W.size(r),i=e[0].dataType,u=W.normalizeAxis(t.axis,r.length),a=new Array(t.numOutputs),p=V("input",i,r),m=new Array(t.numOutputs),h=[],d=[],y=0,v=[{type:12,data:o}];for(let w=0;w<t.numOutputs;w++){y+=t.splitSizes[w],m[w]=y;let x=r.slice();x[t.axis]=t.splitSizes[w],d.push(x),a[w]=K(`output${w}`,i,x),h.push({dims:d[w],dataType:e[0].dataType})}v.push({type:12,data:m}),v.push(...G(r)),d.forEach(w=>v.push(...G(w)));let S=w=>`\n  ${w.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",m.length).declareVariables(p,...a)}\n  ${wp(m.length)}\n  ${vp(a)}\n\n  ${w.mainStart()}\n    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}\n\n    var indices = ${p.offsetToIndices("global_idx")};\n    var index = ${p.indicesGet("indices",u)};\n    let output_number = calculateOutputIndex(index);\n    if (output_number != 0) {\n      index -= ${pe("uniforms.size_in_split_axis","output_number - 1u",m.length)};\n      ${p.indicesSet("indices",u,"index")};\n    }\n    writeBufferData(output_number, indices, global_idx);\n  }`;return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:S,getRunData:()=>({outputs:h,dispatchGroup:{x:Math.ceil(o/64)},programUniforms:v})}},al=(e,t)=>{yp(e.inputs);let r=e.inputs.length===1?t:bp(e.inputs,t);e.compute($p(e.inputs,r),{inputs:[0]})},sl=e=>{let t=e.axis,r=e.splitSizes,o=e.numOutputs<0?r.length:e.numOutputs;if(o!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return Te({axis:t,numOutputs:o,splitSizes:r})}});var ll,_p,Sp,xp,dl,cl=J(()=>{"use strict";be();Ee();Ie();ll=e=>Array.from(e.getBigInt64Array(),Number),_p=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(ll(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},Sp=(e,t)=>{let r=[];for(let o=0;o<e.length;++o)r.push(e[o]*t[o]);return r},xp=e=>{let t=e[0].dims,r=ll(e[1]),o=Sp(t,r),i=W.size(o),u=e[0].dataType,a=V("input",u,t.length),p=K("output",u,o.length),m=h=>`\n      const inputShape = ${a.indices(...t)};\n      ${h.registerUniform("output_size","u32").declareVariables(a,p)}\n      ${h.mainStart()}\n      ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let output_indices = ${p.offsetToIndices("global_idx")};\n      var input_indices: ${a.type.indices};\n      for (var i = 0; i < ${t.length}; i++) {\n        let input_dim_i = ${a.indicesGet("uniforms.input_shape","i")};\n        let input_dim_value = ${p.indicesGet("output_indices","i")}  % input_dim_i;\n\n        ${a.indicesSet("input_indices","i","input_dim_value")}\n      }\n      ${p.setByOffset("global_idx",a.getByIndices("input_indices"))}\n    }`;return{name:"Tile",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},...G(e[0].dims),...G(o)]}),getShaderSource:m}},dl=e=>{_p(e.inputs),e.compute(xp(e.inputs),{inputs:[0]})}});var Cp,Ap,pl,ml=J(()=>{"use strict";be();Ee();Ie();Cp=(e,t,r,o,i)=>{let u=K("output_data",i,r.length,4),a=V("a_data",t[1].dataType,t[1].dims.length,4),p=V("b_data",t[2].dataType,t[2].dims.length,4),m=V("c_data",t[0].dataType,t[0].dims.length,4),h,d=(y,v,S)=>`select(${v}, ${y}, ${S})`;if(!o)h=u.setByOffset("global_idx",d(a.getByOffset("global_idx"),p.getByOffset("global_idx"),m.getByOffset("global_idx")));else{let y=(v,S,w="")=>{let x=`a_data[index_a${S}][component_a${S}]`,E=`b_data[index_b${S}][component_b${S}]`,C=`bool(c_data[index_c${S}] & ${4278190080>>>(3-S)*8}u)`;return`\n            let output_indices${S} = ${u.offsetToIndices(`global_idx * 4u + ${S}u`)};\n            let offset_a${S} = ${a.broadcastedIndicesToOffset(`output_indices${S}`,u)};\n            let offset_b${S} = ${p.broadcastedIndicesToOffset(`output_indices${S}`,u)};\n            let offset_c${S} = ${m.broadcastedIndicesToOffset(`output_indices${S}`,u)};\n            let index_a${S} = offset_a${S} / 4u;\n            let index_b${S} = offset_b${S} / 4u;\n            let index_c${S} = offset_c${S} / 4u;\n            let component_a${S} = offset_a${S} % 4u;\n            let component_b${S} = offset_b${S} % 4u;\n            ${v}[${S}] = ${w}(${d(x,E,C)});\n          `};i===9?h=`\n            var data = vec4<u32>(0);\n            ${y("data",0,"u32")}\n            ${y("data",1,"u32")}\n            ${y("data",2,"u32")}\n            ${y("data",3,"u32")}\n            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:h=`\n            ${y("output_data[global_idx]",0)}\n            ${y("output_data[global_idx]",1)}\n            ${y("output_data[global_idx]",2)}\n            ${y("output_data[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(m,a,p,u)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${h}\n      }`},Ap=e=>{let t=e[1].dims,r=e[2].dims,o=e[0].dims,i=e[1].dataType,u=!(W.areEqual(t,r)&&W.areEqual(r,o)),a=t,p=W.size(t);if(u){let h=xt.calcShape(xt.calcShape(t,r,!1),o,!1);if(!h)throw new Error("Can\'t perform where op on the given tensors");a=h,p=W.size(a)}let m=Math.ceil(p/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:h=>Cp(h,e,a,u,i),getRunData:()=>({outputs:[{dims:a,dataType:i}],dispatchGroup:{x:Math.ceil(p/64/4)},programUniforms:[{type:12,data:m},...G(o),...G(t),...G(r),...G(a)]})}},pl=e=>{e.compute(Ap(e.inputs))}});var fl,hl=J(()=>{"use strict";za();Io();Wa();Ha();Ss();Ds();zs();ko();Js();eu();iu();uu();cu();fu();yu();wu();$u();Do();Cu();Iu();Lu();qu();Pn();Zu();Xu();rl();il();ul();cl();gr();To();ml();fl=new Map([["Abs",[Ga]],["Acos",[La]],["Acosh",[Fa]],["Add",[xs]],["ArgMax",[Ma,Ao]],["ArgMin",[Ba,Ao]],["Asin",[qa]],["Asinh",[ja]],["Atan",[Ka]],["Atanh",[Ya]],["Attention",[Ua]],["AveragePool",[Bu,Du]],["BatchNormalization",[Va]],["BiasAdd",[Na]],["BiasSplitGelu",[_s]],["Cast",[Ja,Za]],["Ceil",[Qa]],["Clip",[Xa]],["Concat",[Bs,Ms]],["Conv",[Mo,Bo]],["ConvTranspose",[Zs,Ys]],["Cos",[es]],["Cosh",[ts]],["CumSum",[Xs,Qs]],["Div",[Cs]],["Einsum",[nu,ou]],["Elu",[rs,Rn]],["Equal",[As]],["Erf",[ns]],["Exp",[os]],["Expand",[su]],["Floor",[is]],["FusedConv",[Mo,Bo]],["Gather",[du,lu]],["GatherElements",[mu,pu]],["Gelu",[as]],["Gemm",[gu,hu]],["GlobalAveragePool",[Uu,zu]],["GlobalMaxPool",[Gu,Hu]],["Greater",[Ps]],["GreaterOrEqual",[ks]],["HardSigmoid",[fs,ms]],["InstanceNormalization",[bu]],["LayerNormalization",[vu]],["LeakyRelu",[ss,Rn]],["Less",[Os]],["LessOrEqual",[Rs]],["Log",[$s]],["MatMul",[Hs]],["MaxPool",[Wu,Nu]],["Mul",[Is]],["MultiHeadAttention",[xu,Su]],["Neg",[ls]],["Not",[us]],["Pad",[Au]],["Pow",[Ts]],["Range",[Fu]],["Reciprocal",[ds]],["ReduceMin",[Ea]],["ReduceMean",[xa]],["ReduceMax",[Ta]],["ReduceSum",[Oa]],["ReduceProd",[Pa]],["ReduceL1",[Ca]],["ReduceL2",[Aa]],["ReduceLogSum",[Ra]],["ReduceLogSumExp",[Ia]],["ReduceSumSquare",[ka]],["Relu",[cs]],["Resize",[Ku,Yu]],["Sigmoid",[ps]],["Sin",[hs]],["Sinh",[gs]],["Slice",[el,tl]],["SkipLayerNormalization",[Ju]],["Split",[al,sl]],["Sqrt",[ys]],["Softmax",[nl,ol]],["Sub",[Es]],["Tan",[bs]],["Tanh",[ws]],["ThresholdedRelu",[vs,Rn]],["Tile",[dl]],["Transpose",[ca,pa]],["Where",[pl]]])});var Gn,gl=J(()=>{"use strict";fr();Ht();Ie();Gn=class{constructor(t){this.backend=t;this.repo=new Map,this.attributesBound=!1}getArtifact(t){return this.repo.get(t)}setArtifact(t,r){this.repo.set(t,r)}run(t,r,o,i,u){Qt(t.programInfo.name);let a=this.backend.device,p=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let m=[];for(let d of r)m.push({binding:m.length,resource:{buffer:d.buffer}});for(let d of o)m.push({binding:m.length,resource:{buffer:d.buffer}});u&&m.push({binding:m.length,resource:u});let h=a.createBindGroup({layout:t.computePipeline.getBindGroupLayout(0),entries:m,label:t.programInfo.name});if(this.backend.sessionStatus==="capturing"){let d={kernelId:this.backend.currentKernelId,computePipeline:t.computePipeline,bindGroup:h,dispatchGroup:i};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(d)}p.setPipeline(t.computePipeline),p.setBindGroup(0,h),p.dispatchWorkgroups(...i),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),er(t.programInfo.name)}dispose(){}build(t,r){Qt(t.name);let o=this.backend.device,i=[];o.features.has("shader-f16")&&i.push("enable f16;");let u=la(r),a=t.getShaderSource(u),p=`${i.join(`\n`)}\n${u.additionalImplementations}\n${a}`,m=o.createShaderModule({code:p,label:t.name});ze("verbose",()=>`[WebGPU] ${t.name} shader code: ${p}`);let h=o.createComputePipeline({compute:{module:m,entryPoint:"main"},layout:"auto",label:t.name});return er(t.name),{programInfo:t,computePipeline:h}}normalizeDispatchGroupSize(t){let r=typeof t=="number"?t:t.x,o=typeof t=="number"?1:t.y||1,i=typeof t=="number"?1:t.z||1,u=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=u&&o<=u&&i<=u)return[r,o,i];let a=r*o*i,p=Math.ceil(Math.sqrt(a));if(p>u){if(p=Math.ceil(Math.cbrt(a)),p>u)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[p,p,p]}else return[p,p,1]}}});var Ip,Tp,Ln,yl=J(()=>{"use strict";fr();be();Ht();oa();ua();hl();gl();Ip=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let o=0;o<e.length;++o){let i=e[o].dataType;switch(t[o]){case"none":{r.push("");break}case"type":{r.push(`${i}`);break}case"rank":{let u=e[o].dims.length;r.push(`${i};${u}`);break}case"dims":{let u=e[o].dims.join(",");r.push(`${i};${u}`);break}default:throw new Error(`unsupported input dependency: ${t[o]}`)}}return r.join("|")},Tp=(e,t,r)=>{let o=e.name;return e.shaderCache?.hint&&(o+="["+e.shaderCache.hint+"]"),o+=":"+r+`:${Ip(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,o},Ln=class{constructor(){this.currentSessionId=null;this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.maxDispatchNumber=16;this.pendingDispatchNumber=0;this.pendingKernels=[];this.pendingQueries=new Map;this.sessionStatus="default";this.capturedCommandList=new Map;this.capturedPendingKernels=new Map;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let t=this.kernelCustomData.get(this.currentKernelId);return t||(t={},this.kernelCustomData.set(this.currentKernelId,t)),t}async initialize(t,r){this.env=t;let o=[],i={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:o};r.features.has("chromium-experimental-timestamp-query-inside-passes")?o.push("chromium-experimental-timestamp-query-inside-passes"):r.features.has("timestamp-query")&&o.push("timestamp-query"),r.features.has("shader-f16")&&o.push("shader-f16"),this.device=await r.requestDevice(i),this.gpuDataManager=sa(this),this.programManager=new Gn(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,ra(t.logLevel,!!t.debug),this.device.onuncapturederror=u=>{u.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${u.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let t=this.getCommandEncoder(),r={};this.queryType==="at-passes"&&(r.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=t.beginComputePass(r)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;Qt(),this.endComputePass();let t;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),t=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(t,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,t,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&t.mapAsync(GPUMapMode.READ).then(()=>{let r=new BigUint64Array(t.getMappedRange()),o=this.pendingQueries.get(t);for(let i=0;i<r.length/2;i++){let u=o[i],a=u.kernelId,p=this.kernels.get(a),m=p.kernelType,h=p.kernelName,d=u.programName,y=u.inputTensorViews,v=u.outputTensorViews,S=r[i*2],w=r[i*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=S);let x=Number(S-this.queryTimeBase),E=Number(w-this.queryTimeBase);if(!Number.isSafeInteger(x)||!Number.isSafeInteger(E))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:y.map(C=>({dims:C.dims,dataType:Nt(C.dataType)})),outputsMetadata:v.map(C=>({dims:C.dims,dataType:Nt(C.dataType)})),kernelId:a,kernelType:m,kernelName:h,programName:d,startTime:x,endTime:E});else{let C="";y.forEach((T,O)=>{C+=`input[${O}]: [${T.dims}] | ${Nt(T.dataType)}, `});let _="";v.forEach((T,O)=>{_+=`output[${O}]: [${T.dims}] | ${Nt(T.dataType)}, `}),console.log(`[profiling] kernel "${a}|${m}|${h}|${d}" ${C}${_}execution time: ${E-x} ns`)}go("GPU",`${d}::${S}::${w}`)}t.unmap(),this.pendingQueries.delete(t)}),er()}run(t,r,o,i,u){Qt(t.name);let a=[];for(let _=0;_<r.length;++_){let T=this.gpuDataManager.get(r[_].data);if(!T)throw new Error(`no GPU data for input: ${r[_].data}`);a[_]=T}let{outputs:p,dispatchGroup:m,programUniforms:h}=t.getRunData(r),d=o.length===0?p.map((_,T)=>T):o;if(d.length!==p.length)throw new Error(`Output size ${d.length} must be equal to ${p.length}.`);let y=[],v=[];for(let _=0;_<p.length;++_){if(!Number.isInteger(d[_])||d[_]<-3||d[_]>=p.length)throw new Error(`Invalid output index: ${d[_]}`);if(d[_]===-3)continue;let T=d[_]===-1,O=d[_]===-2,z=T||O?u(p[_].dataType,p[_].dims):i(d[_],p[_].dataType,p[_].dims),M=this.gpuDataManager.get(z.data);if(!M)throw new Error(`no GPU data for output: ${z.data}`);if(T&&this.temporaryData.push(M),O){let N=this.kernelPersistentData.get(this.currentKernelId);N||(N=[],this.kernelPersistentData.set(this.currentKernelId,N)),N.push(M)}y.push(z),v.push(M)}let S;if(h){let _=0,T=[];h.forEach(N=>{let j=typeof N.data=="number"?[N.data]:N.data;if(j.length===0)return;let ue=N.type===10?2:4,k,te;N.type===10?(te=j.length>4?16:j.length>2?8:j.length*ue,k=j.length>4?16:ue*j.length):(te=j.length<=2?j.length*ue:16,k=16),_=Math.ceil(_/te)*te,T.push(_);let Be=N.type===10?8:4;_+=j.length>4?Math.ceil(j.length/Be)*k:j.length*ue});let O=16;_=Math.ceil(_/O)*O;let z=new ArrayBuffer(_);h.forEach((N,j)=>{let ue=T[j],k=typeof N.data=="number"?[N.data]:N.data;if(N.type===6)new Int32Array(z,ue,k.length).set(k);else if(N.type===12)new Uint32Array(z,ue,k.length).set(k);else if(N.type===10)new Uint16Array(z,ue,k.length).set(k);else if(N.type===1)new Float32Array(z,ue,k.length).set(k);else throw new Error(`Unsupported uniform type: ${Nt(N.type)}`)});let M=this.gpuDataManager.create(_,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(M.buffer,0,z,0,_),this.gpuDataManager.release(M.id),S={offset:0,size:_,buffer:M.buffer}}let w=this.programManager.normalizeDispatchGroupSize(m),x=w[1]===1&&w[2]===1,E=Tp(t,r,x),C=this.programManager.getArtifact(E);if(C||(C=this.programManager.build(t,w),this.programManager.setArtifact(E,C),ze("info",()=>`[artifact] key: ${E}, programName: ${t.name}`)),ze("info",()=>`[ProgramManager] run "${t.name}" (key=${E}) with ${w[0]}x${w[1]}x${w[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let _={kernelId:this.currentKernelId,programName:C.programInfo.name,inputTensorViews:r,outputTensorViews:y};this.pendingKernels.push(_),this.capturedPendingKernels.get(this.currentSessionId).push(_)}return this.programManager.run(C,a,v,w,S),er(t.name),y}upload(t,r){this.gpuDataManager.upload(t,r)}memcpy(t,r){this.gpuDataManager.memcpy(t,r)}async download(t,r){await this.gpuDataManager.download(t,r)}alloc(t){return this.gpuDataManager.create(t).id}free(t){return this.gpuDataManager.release(t)}createKernel(t,r,o,i){let u=fl.get(t);if(!u)throw new Error(`kernel not implemented: ${t}`);let a={kernelType:t,kernelName:i,kernelEntry:u[0],attributes:[u[1],o]};this.kernels.set(r,a)}releaseKernel(t){let r=this.kernelPersistentData.get(t);if(r){for(let o of r)this.gpuDataManager.release(o.id);this.kernelPersistentData.delete(t)}this.kernelCustomData.delete(t),this.kernels.delete(t)}computeKernel(t,r,o){let i=this.kernels.get(t);if(!i)throw new Error(`kernel not created: ${t}`);let u=i.kernelType,a=i.kernelName,p=i.kernelEntry,m=i.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${u}] ${a}" is not allowed to be called recursively`);this.currentKernelId=t,m[0]&&(m[1]=m[0](m[1]),m[0]=void 0),ze("info",()=>`[WebGPU] Start to run kernel "[${u}] ${a}"...`);let h=this.env.debug;this.temporaryData=[];try{return h&&this.device.pushErrorScope("validation"),p(r,m[1]),0}catch(d){return o.push(Promise.resolve(`[WebGPU] Kernel "[${u}] ${a}" failed. ${d}`)),1}finally{h&&o.push(this.device.popErrorScope().then(d=>d?`GPU validation error for kernel "[${u}] ${a}": ${d.message}`:null));for(let d of this.temporaryData)this.gpuDataManager.release(d.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(t,r,o,i){let u=this.sessionExternalDataMapping.get(t);u||(u=new Map,this.sessionExternalDataMapping.set(t,u));let a=u.get(r),p=this.gpuDataManager.registerExternalBuffer(o,i,a?.[1]);return u.set(r,[p,o]),p}unregisterBuffers(t){let r=this.sessionExternalDataMapping.get(t);r&&(r.forEach(o=>this.gpuDataManager.unregisterExternalBuffer(o[1])),this.sessionExternalDataMapping.delete(t))}getBuffer(t){let r=this.gpuDataManager.get(t);if(!r)throw new Error(`no GPU data for buffer: ${t}`);return r.buffer}createDownloader(t,r,o){return async()=>{let i=await wo(this,t,r);return na(i.buffer,o)}}writeTimestamp(t){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,t)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||this.env.wasm.trace)&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){ze("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){ze("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){ze("info","replay"),this.sessionStatus="replaying";let t=this.capturedCommandList.get(this.currentSessionId),r=this.capturedPendingKernels.get(this.currentSessionId),o=t.length;this.pendingKernels=[];for(let i=0;i<o;i++){let u=this.getComputePassEncoder(),a=t[i];this.writeTimestamp(this.pendingDispatchNumber*2),u.setPipeline(a.computePipeline),u.setBindGroup(0,a.bindGroup),u.dispatchWorkgroups(...a.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(r[i]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onReleaseSession(t){this.unregisterBuffers(t),this.capturedCommandList.has(t)&&this.capturedCommandList.delete(t),this.capturedPendingKernels.has(t)&&this.capturedPendingKernels.delete(t),this.gpuDataManager.onReleaseSession(t)}onRunStart(t){this.currentSessionId=t,this.setQueryType()}}});var bl={};bn(bl,{init:()=>Ep});var Fr,Ho,Ep,wl=J(()=>{"use strict";be();yl();Ht();Ee();Fr=class e{constructor(t,r,o,i){this.module=t;this.dataType=r;this.data=o;this.dims=i}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=W.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=W.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=W.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(W.size(t)!==W.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,t)}},Ho=class{constructor(t,r,o){this.module=t;this.backend=r;this.customDataOffset=0;this.customDataSize=0;let i=t.HEAPU32,u=o>>>2;this.opKernelContext=i[u++];let a=i[u++];this.outputCount=i[u++],this.customDataOffset=i[u++],this.customDataSize=i[u++];let p=[];for(let m=0;m<a;m++){let h=i[u++],d=i[u++],y=i[u++],v=[];for(let S=0;S<y;S++)v.push(i[u++]);p.push(new Fr(t,h,d,v))}this.inputs=p}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(t,r){let o=r?.inputs?.map(p=>typeof p=="number"?this.inputs[p]:p)??this.inputs,i=r?.outputs??[],u=(p,m,h)=>new Fr(this.module,m,this.output(p,h),h),a=(p,m)=>{let h=Wr(p);if(!h)throw new Error(`Unsupported data type: ${p}`);let d=h*W.size(m);return new Fr(this.module,p,this.backend.gpuDataManager.create(d).id,m)};return this.backend.run(t,o,i,u,a)}output(t,r){let o=this.module.stackSave();try{let i=this.module.stackAlloc((1+r.length)*4),u=i>>2;this.module.HEAPU32[u++]=r.length;for(let a=0;a<r.length;a++)this.module.HEAPU32[u++]=r[a];return this.module._JsepOutput(this.opKernelContext,t,i)}catch(i){throw new Error(`Failed to generate kernel\'s output[${t}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${i}`)}finally{this.module.stackRestore(o)}}},Ep=async(e,t,r)=>{let o=e.jsepInit;if(!o)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");let i=new Ln;await i.initialize(t,r),o(i,u=>i.alloc(u),u=>i.free(u),(u,a,p,m=!1)=>{if(m)ze("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${u}, dst=${a}, size=${p}`),i.memcpy(u,a);else{ze("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${u}, gpuDataId=${a}, size=${p}`);let h=e.HEAPU8.subarray(u>>>0,(u>>>0)+p);i.upload(a,h)}},async(u,a,p)=>{ze("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${u}, dataOffset=${a}, size=${p}`),await i.download(u,()=>e.HEAPU8.subarray(a>>>0,(a>>>0)+p))},(u,a,p)=>i.createKernel(u,a,p,e.UTF8ToString(e._JsepGetNodeName(a))),u=>i.releaseKernel(u),(u,a,p,m)=>{ze("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${p}, kernel=${u}, contextDataOffset=${a}`);let h=new Ho(e,i,a);return i.computeKernel(u,h,m)},()=>i.captureBegin(),()=>i.captureEnd(),()=>i.replay())}});var ki;ki=_i();var Gl=Ei(),co,po=!1,wn=!1,Oi=!1,Ll=e=>{if(e===1)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+e+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+e+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},Fl=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},ql=(e,t)=>e?t?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":t?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Ri=async e=>{if(po)return Promise.resolve();if(wn)throw new Error("multiple calls to \'initializeWebAssembly()\' detected.");if(Oi)throw new Error("previous call to \'initializeWebAssembly()\' failed.");wn=!0;let t=e.initTimeout,r=e.numThreads,o=e.simd,i=Ll(r),u=o&&Fl(),a=e.wasmPaths,p=typeof a=="string"?a:void 0,m=ql(u,i),h=typeof a=="object"?a[m]:void 0,d=!1,y=[];if(t>0&&y.push(new Promise(v=>{setTimeout(()=>{d=!0,v()},t)})),y.push(new Promise((v,S)=>{let w=i?Gl:ki,x={locateFile:(E,C)=>{if(i&&E.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([Pi()],{type:"text/javascript"}));if(E.endsWith(".wasm")){if(h)return h;let _=p??C;return m==="ort-wasm-simd.wasm"?_+"ort-wasm-simd.jsep.wasm":m==="ort-wasm-simd-threaded.wasm"?_+"ort-wasm-simd-threaded.jsep.wasm":_+m}return C+E}};if(i)if(x.numThreads=r,typeof Blob>"u")x.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let E=`var ortWasmThreaded=${w.toString()};`;x.mainScriptUrlOrBlob=new Blob([E],{type:"text/javascript"})}w(x).then(E=>{wn=!1,po=!0,co=E,v()},E=>{wn=!1,Oi=!0,S(E)})})),await Promise.race(y),d)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},We=()=>{if(po&&co)return co;throw new Error("WebAssembly is not initialized yet.")};var Ve=(e,t)=>{let r=We(),o=r.lengthBytesUTF8(e)+1,i=r._malloc(o);return r.stringToUTF8(e,i,o),t.push(i),i},Vr=(e,t,r,o)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([i,u])=>{let a=t?t+i:i;if(typeof u=="object")Vr(u,a+".",r,o);else if(typeof u=="string"||typeof u=="number")o(a,u.toString());else if(typeof u=="boolean")o(a,u?"1":"0");else throw new Error(`Can\'t handle extra config type: ${typeof u}`)})},Me=e=>{let t=We(),r=t.stackSave();try{let o=t.stackAlloc(8);t._OrtGetLastError(o,o+4);let i=t.HEAP32[o/4],u=t.HEAPU32[o/4+1],a=u?t.UTF8ToString(u):"";throw new Error(`${e} ERROR_CODE: ${i}, ERROR_MESSAGE: ${a}`)}finally{t.stackRestore(r)}};var Di=e=>{let t=We(),r=0,o=[],i=e||{};try{if(e?.logSeverityLevel===void 0)i.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)i.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(i.terminate=!1);let u=0;return e?.tag!==void 0&&(u=Ve(e.tag,o)),r=t._OrtCreateRunOptions(i.logSeverityLevel,i.logVerbosityLevel,!!i.terminate,u),r===0&&Me("Can\'t create run options."),e?.extra!==void 0&&Vr(e.extra,"",new WeakSet,(a,p)=>{let m=Ve(a,o),h=Ve(p,o);t._OrtAddRunConfigEntry(r,m,h)!==0&&Me(`Can\'t set a run config entry: ${a} - ${p}.`)}),[r,o]}catch(u){throw r!==0&&t._OrtReleaseRunOptions(r),o.forEach(a=>t._free(a)),u}};var jl=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},Kl=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Yl=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},Zl=(e,t,r)=>{for(let o of t){let i=typeof o=="string"?o:o.name;switch(i){case"webnn":if(i="WEBNN",typeof o!="string"){let a=o;if(a?.deviceType){let p=Ve("deviceType",r),m=Ve(a.deviceType,r);We()._OrtAddSessionConfigEntry(e,p,m)!==0&&Me(`Can\'t set a session config entry: \'deviceType\' - ${a.deviceType}.`)}if(a?.numThreads){let p=a.numThreads;(typeof p!="number"||!Number.isInteger(p)||p<0)&&(p=0);let m=Ve("numThreads",r),h=Ve(p.toString(),r);We()._OrtAddSessionConfigEntry(e,m,h)!==0&&Me(`Can\'t set a session config entry: \'numThreads\' - ${a.numThreads}.`)}if(a?.powerPreference){let p=Ve("powerPreference",r),m=Ve(a.powerPreference,r);We()._OrtAddSessionConfigEntry(e,p,m)!==0&&Me(`Can\'t set a session config entry: \'powerPreference\' - ${a.powerPreference}.`)}}break;case"webgpu":if(i="JS",typeof o!="string"){let a=o;if(a?.preferredLayout){if(a.preferredLayout!=="NCHW"&&a.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either \'NCHW\' or \'NHWC\': ${a.preferredLayout}`);let p=Ve("preferredLayout",r),m=Ve(a.preferredLayout,r);We()._OrtAddSessionConfigEntry(e,p,m)!==0&&Me(`Can\'t set a session config entry: \'preferredLayout\' - ${a.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${i}`)}let u=Ve(i,r);We()._OrtAppendExecutionProvider(e,u)!==0&&Me(`Can\'t append execution provider: ${i}.`)}},Bi=e=>{let t=We(),r=0,o=[],i=e||{};Yl(i);try{let u=jl(i.graphOptimizationLevel??"all"),a=Kl(i.executionMode??"sequential"),p=typeof i.logId=="string"?Ve(i.logId,o):0,m=i.logSeverityLevel??2;if(!Number.isInteger(m)||m<0||m>4)throw new Error(`log serverity level is not valid: ${m}`);let h=i.logVerbosityLevel??0;if(!Number.isInteger(h)||h<0||h>4)throw new Error(`log verbosity level is not valid: ${h}`);let d=typeof i.optimizedModelFilePath=="string"?Ve(i.optimizedModelFilePath,o):0;if(r=t._OrtCreateSessionOptions(u,!!i.enableCpuMemArena,!!i.enableMemPattern,a,!!i.enableProfiling,0,p,m,h,d),r===0&&Me("Can\'t create session options."),i.executionProviders&&Zl(r,i.executionProviders,o),i.enableGraphCapture!==void 0){if(typeof i.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${i.enableGraphCapture}`);let y=Ve("enableGraphCapture",o),v=Ve(i.enableGraphCapture.toString(),o);t._OrtAddSessionConfigEntry(r,y,v)!==0&&Me(`Can\'t set a session config entry: \'enableGraphCapture\' - ${i.enableGraphCapture}.`)}if(i.freeDimensionOverrides)for(let[y,v]of Object.entries(i.freeDimensionOverrides)){if(typeof y!="string")throw new Error(`free dimension override name must be a string: ${y}`);if(typeof v!="number"||!Number.isInteger(v)||v<0)throw new Error(`free dimension override value must be a non-negative integer: ${v}`);let S=Ve(y,o);t._OrtAddFreeDimensionOverride(r,S,v)!==0&&Me(`Can\'t set a free dimension override: ${y} - ${v}.`)}return i.extra!==void 0&&Vr(i.extra,"",new WeakSet,(y,v)=>{let S=Ve(y,o),w=Ve(v,o);t._OrtAddSessionConfigEntry(r,S,w)!==0&&Me(`Can\'t set a session config entry: ${y} - ${v}.`)}),[r,o]}catch(u){throw r!==0&&t._OrtReleaseSessionOptions(r),o.forEach(a=>t._free(a)),u}};be();var zi=async e=>{if(typeof e=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(e))}catch(t){if(t.code==="ERR_FS_FILE_TOO_LARGE"){let r=(void 0)(e),o=[];for await(let i of r)o.push(i);return new Uint8Array(Buffer.concat(o))}throw t}else{let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let r=t.headers.get("Content-Length"),o=r?parseInt(r,10):0;if(o<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let i=t.body.getReader(),u;try{u=new ArrayBuffer(o)}catch(p){if(p instanceof RangeError){let m=Math.ceil(o/65536);u=new WebAssembly.Memory({initial:m,maximum:m}).buffer}else throw p}let a=0;for(;;){let{done:p,value:m}=await i.read();if(p)break;let h=m.byteLength;new Uint8Array(u,a,h).set(m),a+=h}return new Uint8Array(u,0,o)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)};var Pp=(e,t)=>{We()._OrtInit(e,t)!==0&&Me("Can\'t initialize onnxruntime.")},$l=async e=>{Pp(e.wasm.numThreads,Nr(e.logLevel))},_l=async(e,t)=>{if(t==="webgpu"||t==="webnn"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let r=await navigator.gpu.requestAdapter();if(!r)throw new Error(\'Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.\');if(!e.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");let o=(wl(),pr(bl)).init;await o(We(),e,r)}},rr=new Map,Op=e=>{let t=We(),r=t.stackSave();try{let o=t.stackAlloc(8);return t._OrtGetInputOutputCount(e,o,o+4)!==0&&Me("Can\'t get session input/output count."),[t.HEAP32[o/4],t.HEAP32[o/4+1]]}finally{t.stackRestore(r)}},Go=e=>{let t=We(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can\'t create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},Sl=async(e,t)=>{let r,o,i=We();Array.isArray(e)?[r,o]=e:e.buffer===i.HEAPU8.buffer?[r,o]=[e.byteOffset,e.byteLength]:[r,o]=Go(e);let u=0,a=0,p=0,m=[],h=[],d=[];try{if([a,m]=Bi(t),t?.externalData&&i.mountExternalData){let _=[];for(let T of t.externalData){let O=typeof T=="string"?T:T.path;_.push(zi(typeof T=="string"?T:T.data).then(z=>{i.mountExternalData(O,z)}))}await Promise.all(_)}u=await i._OrtCreateSession(r,o,a),u===0&&Me("Can\'t create a session.");let[y,v]=Op(u),S=!!t?.enableGraphCapture,w=[],x=[],E=[];for(let _=0;_<y;_++){let T=i._OrtGetInputName(u,_);T===0&&Me("Can\'t get an input name."),h.push(T),w.push(i.UTF8ToString(T))}for(let _=0;_<v;_++){let T=i._OrtGetOutputName(u,_);T===0&&Me("Can\'t get an output name."),d.push(T);let O=i.UTF8ToString(T);x.push(O);{if(S&&t?.preferredOutputLocation===void 0){E.push("gpu-buffer");continue}let z=typeof t?.preferredOutputLocation=="string"?t.preferredOutputLocation:t?.preferredOutputLocation?.[O]??"cpu";if(z!=="cpu"&&z!=="cpu-pinned"&&z!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${z}.`);if(S&&z!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${z}. Only \'gpu-buffer\' location is supported when enableGraphCapture is true.`);E.push(z)}}let C=null;return E.some(_=>_==="gpu-buffer")&&(p=i._OrtCreateBinding(u),p===0&&Me("Can\'t create IO binding."),C={handle:p,outputPreferredLocations:E,outputPreferredLocationsEncoded:E.map(_=>fo(_))}),rr.set(u,[u,h,d,C,S,!1]),[u,w,x]}catch(y){throw h.forEach(v=>i._OrtFree(v)),d.forEach(v=>i._OrtFree(v)),p!==0&&i._OrtReleaseBinding(p),u!==0&&i._OrtReleaseSession(u),y}finally{i._free(r),a!==0&&i._OrtReleaseSessionOptions(a),m.forEach(y=>i._free(y)),i.unmountExternalData?.()}},xl=e=>{let t=We(),r=rr.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[o,i,u,a,p]=r;a&&(p&&t._OrtClearBoundOutputs(a.handle),t._OrtReleaseBinding(a.handle)),t.jsepOnReleaseSession?.(e),i.forEach(m=>t._OrtFree(m)),u.forEach(m=>t._OrtFree(m)),t._OrtReleaseSession(o),rr.delete(e)},vl=(e,t,r,o,i,u=!1)=>{if(!e){t.push(0);return}let a=We(),p=e[0],m=e[1],h=e[3],d,y;if(p==="string"&&h==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(u&&h!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${i} when enableGraphCapture is true.`);if(h==="gpu-buffer"){let w=e[2].gpuBuffer,x=Wr(mo(p));y=m.reduce((E,C)=>E*C,1)*x,d=a.jsepRegisterBuffer(o,i,w,y)}else{let w=e[2];if(Array.isArray(w)){y=4*w.length,d=a._malloc(y),r.push(d);let x=d/4;for(let E=0;E<w.length;E++){if(typeof w[E]!="string")throw new TypeError(`tensor data at index ${E} is not a string`);a.HEAPU32[x++]=Ve(w[E],r)}}else y=w.byteLength,d=a._malloc(y),r.push(d),a.HEAPU8.set(new Uint8Array(w.buffer,w.byteOffset,y),d)}let v=a.stackSave(),S=a.stackAlloc(4*m.length);try{let w=S/4;m.forEach(E=>a.HEAP32[w++]=E);let x=a._OrtCreateTensor(mo(p),d,y,S,m.length,fo(h));x===0&&Me(`Can\'t create tensor for input/output. session=${o}, index=${i}.`),t.push(x)}finally{a.stackRestore(v)}},Cl=async(e,t,r,o,i,u)=>{let a=We(),p=rr.get(e);if(!p)throw new Error(`cannot run inference. invalid session id: ${e}`);let m=p[0],h=p[1],d=p[2],y=p[3],v=p[4],S=p[5],w=t.length,x=o.length,E=0,C=[],_=[],T=[],O=[],z=a.stackSave(),M=a.stackAlloc(w*4),N=a.stackAlloc(w*4),j=a.stackAlloc(x*4),ue=a.stackAlloc(x*4);try{[E,C]=Di(u);for(let de=0;de<w;de++)vl(r[de],_,O,e,t[de],v);for(let de=0;de<x;de++)vl(i[de],T,O,e,w+o[de],v);let k=M/4,te=N/4,Be=j/4,Ue=ue/4;for(let de=0;de<w;de++)a.HEAPU32[k++]=_[de],a.HEAPU32[te++]=h[t[de]];for(let de=0;de<x;de++)a.HEAPU32[Be++]=T[de],a.HEAPU32[Ue++]=d[o[de]];if(y&&!S){let{handle:de,outputPreferredLocations:Pe,outputPreferredLocationsEncoded:xe}=y;if(h.length!==w)throw new Error(`input count from feeds (${w}) is expected to be always equal to model\'s input count (${h.length}).`);for(let oe=0;oe<w;oe++){let _e=t[oe];await a._OrtBindInput(de,h[_e],_[oe])!==0&&Me(`Can\'t bind input[${oe}] for session=${e}.`)}for(let oe=0;oe<x;oe++){let _e=o[oe];i[oe]?.[3]?a._OrtBindOutput(de,d[_e],T[oe],0)!==0&&Me(`Can\'t bind pre-allocated output[${oe}] for session=${e}.`):a._OrtBindOutput(de,d[_e],0,xe[_e])!==0&&Me(`Can\'t bind output[${oe}] to ${Pe[oe]} for session=${e}.`)}rr.set(e,[m,h,d,y,v,!0])}a.jsepOnRunStart?.(m);let $e;y?$e=await a._OrtRunWithBinding(m,y.handle,x,j,E):$e=await a._OrtRun(m,N,M,w,ue,x,j,E),$e!==0&&Me("failed to call OrtRun().");let we=[];for(let de=0;de<x;de++){let Pe=a.HEAPU32[j/4+de];if(Pe===T[de]){we.push(i[de]);continue}let xe=a.stackSave(),oe=a.stackAlloc(4*4),_e=!1,Oe,ke=0;try{a._OrtGetTensorData(Pe,oe,oe+4,oe+8,oe+12)!==0&&Me(`Can\'t access output tensor data on index ${de}.`);let F=oe/4,ae=a.HEAPU32[F++];ke=a.HEAPU32[F++];let ge=a.HEAPU32[F++],ht=a.HEAPU32[F++],Ye=[];for(let Fe=0;Fe<ht;Fe++)Ye.push(a.HEAPU32[ge/4+Fe]);a._OrtFree(ge);let Ne=Ye.reduce((Fe,He)=>Fe*He,1);Oe=Nt(ae);let Mt=y?.outputPreferredLocations[o[de]];if(Oe==="string"){if(Mt==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let Fe=[],He=ke/4;for(let Rt=0;Rt<Ne;Rt++){let gt=a.HEAPU32[He++],zt=Rt===Ne-1?void 0:a.HEAPU32[He]-gt;Fe.push(a.UTF8ToString(gt,zt))}we.push([Oe,Ye,Fe,"cpu"])}else if(Mt==="gpu-buffer"&&Ne>0){let Fe=a.jsepGetBuffer(ke),He=Wr(ae);if(He===void 0||!Mi(Oe))throw new Error(`Unsupported data type: ${Oe}`);_e=!0,we.push([Oe,Ye,{gpuBuffer:Fe,download:a.jsepCreateDownloader(Fe,Ne*He,Oe),dispose:()=>{a._OrtReleaseTensor(Pe)}},"gpu-buffer"])}else{let Fe=vn(Oe),He=new Fe(Ne);new Uint8Array(He.buffer,He.byteOffset,He.byteLength).set(a.HEAPU8.subarray(ke,ke+He.byteLength)),we.push([Oe,Ye,He,"cpu"])}}finally{a.stackRestore(xe),Oe==="string"&&ke&&a._free(ke),_e||a._OrtReleaseTensor(Pe)}}return y&&!v&&(a._OrtClearBoundOutputs(y.handle),rr.set(e,[m,h,d,y,v,!1])),we}finally{a.stackRestore(z),_.forEach(k=>a._OrtReleaseTensor(k)),T.forEach(k=>a._OrtReleaseTensor(k)),O.forEach(k=>a._free(k)),E!==0&&a._OrtReleaseRunOptions(E),C.forEach(k=>a._free(k))}},Al=e=>{let t=We(),r=rr.get(e);if(!r)throw new Error("invalid session id");let o=r[0],i=t._OrtEndProfiling(o);i===0&&Me("Can\'t get an profile file name."),t._OrtFree(i)},Il=e=>{let t=[];for(let r of e){let o=r[2];!Array.isArray(o)&&"buffer"in o&&t.push(o.buffer)}return t};self.onmessage=e=>{let{type:t,in:r}=e.data;try{switch(t){case"init-wasm":Ri(r.wasm).then(()=>{$l(r).then(()=>{postMessage({type:t})},o=>{postMessage({type:t,err:o})})},o=>{postMessage({type:t,err:o})});break;case"init-ep":{let{epName:o,env:i}=r;_l(i,o).then(()=>{postMessage({type:t})},u=>{postMessage({type:t,err:u})});break}case"copy-from":{let{buffer:o}=r,i=Go(o);postMessage({type:t,out:i});break}case"create":{let{model:o,options:i}=r;Sl(o,i).then(u=>{postMessage({type:t,out:u})},u=>{postMessage({type:t,err:u})});break}case"release":xl(r),postMessage({type:t});break;case"run":{let{sessionId:o,inputIndices:i,inputs:u,outputIndices:a,options:p}=r;Cl(o,i,u,a,new Array(a.length).fill(null),p).then(m=>{m.some(h=>h[3]!=="cpu")?postMessage({type:t,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:t,out:m},Il(m))},m=>{postMessage({type:t,err:m})});break}case"end-profiling":Al(r),postMessage({type:t});break;default:}}catch(o){postMessage({type:t,err:o})}};})();\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n'});var pr,$t,on,pa,fa,gi,yi,Ir,Ar,Mf,ca,bd,vd,wd,$d,_d,Sd,xd,bi=j(()=>{"use strict";wt();gd();Sr();pr=()=>!!Pe.wasm.proxy&&typeof document<"u",on=!1,pa=!1,fa=!1,yi=new Map,Ir=(e,t)=>{let r=yi.get(e);r?r.push(t):yi.set(e,[t])},Ar=()=>{if(on||!pa||fa||!$t)throw new Error("worker not ready")},Mf=e=>{switch(e.data.type){case"init-wasm":on=!1,e.data.err?(fa=!0,gi[1](e.data.err)):(pa=!0,gi[0]());break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let t=yi.get(e.data.type);e.data.err?t.shift()[1](e.data.err):t.shift()[0](e.data.out);break}default:}},ca=typeof document<"u"?document?.currentScript?.src:void 0,bd=async()=>{if(!pa){if(on)throw new Error("multiple calls to 'initWasm()' detected.");if(fa)throw new Error("previous call to 'initWasm()' failed.");if(on=!0,pr())return Pe.wasm.wasmPaths===void 0&&ca&&ca.indexOf("blob:")!==0&&(Pe.wasm.wasmPaths=ca.substr(0,+ca.lastIndexOf("/")+1)),new Promise((e,t)=>{$t?.terminate();let r=URL.createObjectURL(new Blob([yd()],{type:"text/javascript"}));$t=new Worker(r,{name:"ort-wasm-proxy-worker"}),$t.onerror=i=>t(i),$t.onmessage=Mf,URL.revokeObjectURL(r),gi=[e,t];let n={type:"init-wasm",in:Pe};$t.postMessage(n)});try{await zo(Pe.wasm),await ld(Pe),pa=!0}catch(e){throw fa=!0,e}finally{on=!1}}},vd=async e=>{if(pr())return Ar(),new Promise((t,r)=>{Ir("init-ep",[t,r]);let n={type:"init-ep",in:{epName:e,env:Pe}};$t.postMessage(n)});await dd(Pe,e)},wd=async e=>pr()?(Ar(),new Promise((t,r)=>{Ir("copy-from",[t,r]);let n={type:"copy-from",in:{buffer:e}};$t.postMessage(n,[e.buffer])})):hi(e),$d=async(e,t)=>{if(pr()){if(t?.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return Ar(),new Promise((r,n)=>{Ir("create",[r,n]);let i={type:"create",in:{model:e,options:t}},u=[];e instanceof Uint8Array&&u.push(e.buffer),$t.postMessage(i,u)})}else return cd(e,t)},_d=async e=>{if(pr())return Ar(),new Promise((t,r)=>{Ir("release",[t,r]);let n={type:"release",in:e};$t.postMessage(n)});pd(e)},Sd=async(e,t,r,n,i,u)=>{if(pr()){if(r.some(o=>o[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(i.some(o=>o))throw new Error("pre-allocated output tensor is not supported for proxy.");return Ar(),new Promise((o,c)=>{Ir("run",[o,c]);let p=r,m={type:"run",in:{sessionId:e,inputIndices:t,inputs:p,outputIndices:n,options:u}};$t.postMessage(m,hd(p))})}else return fd(e,t,r,n,i,u)},xd=async e=>{if(pr())return Ar(),new Promise((t,r)=>{Ir("end-profiling",[t,r]);let n={type:"end-profiling",in:e};$t.postMessage(n)});md(e)}});var Cd,zf,ma,Id=j(()=>{"use strict";wt();bi();ge();La();Cd=(e,t)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];default:throw new Error(`invalid data location: ${e.location} for ${t()}`)}},zf=e=>{switch(e[3]){case"cpu":return new et(e[0],e[2],e[1]);case"gpu-buffer":{let t=e[0];if(!Ln(t))throw new Error(`not supported data type: ${t} for deserializing GPU tensor`);let{gpuBuffer:r,download:n,dispose:i}=e[2];return et.fromGpuBuffer(r,{dataType:t,dims:e[1],download:n,dispose:i})}default:throw new Error(`invalid data location: ${e[3]}`)}},ma=class{async fetchModelAndCopyToWasmMemory(t){return wd(await en(t))}async loadModel(t,r){ft();let n;typeof t=="string"?typeof process<"u"&&process.versions&&process.versions.node?n=await en(t):n=await this.fetchModelAndCopyToWasmMemory(t):n=t,[this.sessionId,this.inputNames,this.outputNames]=await $d(n,r),mt()}async dispose(){return _d(this.sessionId)}async run(t,r,n){ft();let i=[],u=[];Object.entries(t).forEach(b=>{let $=b[0],v=b[1],x=this.inputNames.indexOf($);if(x===-1)throw new Error(`invalid input '${$}'`);i.push(v),u.push(x)});let o=[],c=[];Object.entries(r).forEach(b=>{let $=b[0],v=b[1],x=this.outputNames.indexOf($);if(x===-1)throw new Error(`invalid output '${$}'`);o.push(v),c.push(x)});let p=i.map((b,$)=>Cd(b,()=>`input "${this.inputNames[u[$]]}"`)),m=o.map((b,$)=>b?Cd(b,()=>`output "${this.outputNames[c[$]]}"`):null),l=await Sd(this.sessionId,u,p,c,m,n),g={};for(let b=0;b<l.length;b++)g[this.outputNames[c[b]]]=o[b]??zf(l[b]);return mt(),g}startProfiling(){}endProfiling(){xd(this.sessionId)}}});var Uf,ha,Ad=j(()=>{"use strict";wt();bi();Id();Uf=()=>{if((typeof Pe.wasm.initTimeout!="number"||Pe.wasm.initTimeout<0)&&(Pe.wasm.initTimeout=0),typeof Pe.wasm.simd!="boolean"&&(Pe.wasm.simd=!0),typeof Pe.wasm.proxy!="boolean"&&(Pe.wasm.proxy=!1),typeof Pe.wasm.trace!="boolean"&&(Pe.wasm.trace=!1),typeof Pe.wasm.numThreads!="number"||!Number.isInteger(Pe.wasm.numThreads)||Pe.wasm.numThreads<=0){(typeof self<"u"&&!self.crossOriginIsolated||typeof process<"u"&&process.versions&&process.versions.node)&&(Pe.wasm.numThreads=1);let e=typeof navigator>"u"?(void 0)().length:navigator.hardwareConcurrency;Pe.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},ha=class{async init(t){Uf(),await bd(),await vd(t)}async createInferenceSessionHandler(t,r){let n=new ma;return await n.loadModel(t,r),Promise.resolve(n)}}});var Td={};sr(Td,{wasmBackend:()=>Wf});var Wf,Ed=j(()=>{"use strict";Ad();Wf=new ha});var Vf={};sr(Vf,{InferenceSession:()=>go,TRACE:()=>Zr,TRACE_FUNC_BEGIN:()=>ft,TRACE_FUNC_END:()=>mt,Tensor:()=>et,TrainingSession:()=>wo,default:()=>Nf,env:()=>Pe,registerBackend:()=>Yt});module.exports=Kt(Vf);wt();wt();wt();var _o="1.18.0";var Nf=Pa;{let e=(Ed(),Kt(Td)).wasmBackend;Yt("webgpu",e,5),Yt("webnn",e,5),Yt("cpu",e,10),Yt("wasm",e,10)}Object.defineProperty(Pe.versions,"web",{value:_o,enumerable:!0});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
//# sourceMappingURL=ort.webgpu.min.js.map
