/*!
 * ONNX Runtime Web v1.18.0
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
"use strict";var ort=(()=>{var k0=Object.create;var Ei=Object.defineProperty;var D0=Object.getOwnPropertyDescriptor;var B0=Object.getOwnPropertyNames;var R0=Object.getPrototypeOf,z0=Object.prototype.hasOwnProperty;var R=(r,e)=>()=>(r&&(e=r(r=0)),e);var it=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),tn=(r,e)=>{for(var n in e)Ei(r,n,{get:e[n],enumerable:!0})},Ll=(r,e,n,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of B0(e))!z0.call(r,o)&&o!==n&&Ei(r,o,{get:()=>e[o],enumerable:!(t=D0(e,o))||t.enumerable});return r};var qn=(r,e,n)=>(n=r!=null?k0(R0(r)):{},Ll(e||!r||!r.__esModule?Ei(n,"default",{value:r,enumerable:!0}):n,r)),Hr=r=>Ll(Ei({},"__esModule",{value:!0}),r);var Ci,wn,qr,Pi,ki=R(()=>{Ci=new Map,wn=[],qr=(r,e,n)=>{if(e&&typeof e.init=="function"&&typeof e.createInferenceSessionHandler=="function"){let t=Ci.get(r);if(t===void 0)Ci.set(r,{backend:e,priority:n});else{if(t.priority>n)return;if(t.priority===n&&t.backend!==e)throw new Error(`cannot register backend "${r}" using priority ${n}`)}if(n>=0){let o=wn.indexOf(r);o!==-1&&wn.splice(o,1);for(let i=0;i<wn.length;i++)if(Ci.get(wn[i]).priority<=n){wn.splice(i,0,r);return}wn.push(r)}return}throw new TypeError("not a valid backend")},Pi=async r=>{let e=r.length===0?wn:r,n=[];for(let t of e){let o=Ci.get(t);if(o){if(o.initialized)return o.backend;if(o.aborted)continue;let i=!!o.initPromise;try{return i||(o.initPromise=o.backend.init(t)),await o.initPromise,o.initialized=!0,o.backend}catch(s){i||n.push({name:t,err:s}),o.aborted=!0}finally{delete o.initPromise}}}throw new Error(`no available backend found. ERR: ${n.map(t=>`[${t.name}] ${t.err}`).join(", ")}`)}});var Fl=R(()=>{ki()});var Ul,Vl=R(()=>{Ul="1.18.0"});var Gl,xn,ms=R(()=>{Vl();Gl="warning",xn={wasm:{},webgl:{},webgpu:{},versions:{common:Ul},set logLevel(r){if(r!==void 0){if(typeof r!="string"||["verbose","info","warning","error","fatal"].indexOf(r)===-1)throw new Error(`Unsupported logging level: ${r}`);Gl=r}},get logLevel(){return Gl}};Object.defineProperty(xn,"logLevel",{enumerable:!0})});var ve,Wl=R(()=>{ms();ve=xn});var Hl,ql,jl=R(()=>{Hl=(r,e)=>{let n=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);n.width=r.dims[3],n.height=r.dims[2];let t=n.getContext("2d");if(t!=null){let o,i;e?.tensorLayout!==void 0&&e.tensorLayout==="NHWC"?(o=r.dims[2],i=r.dims[3]):(o=r.dims[3],i=r.dims[2]);let s=e?.format!==void 0?e.format:"RGB",a=e?.norm,u,l;a===void 0||a.mean===void 0?u=[255,255,255,255]:typeof a.mean=="number"?u=[a.mean,a.mean,a.mean,a.mean]:(u=[a.mean[0],a.mean[1],a.mean[2],0],a.mean[3]!==void 0&&(u[3]=a.mean[3])),a===void 0||a.bias===void 0?l=[0,0,0,0]:typeof a.bias=="number"?l=[a.bias,a.bias,a.bias,a.bias]:(l=[a.bias[0],a.bias[1],a.bias[2],0],a.bias[3]!==void 0&&(l[3]=a.bias[3]));let d=i*o,p=0,m=d,y=d*2,b=-1;s==="RGBA"?(p=0,m=d,y=d*2,b=d*3):s==="RGB"?(p=0,m=d,y=d*2):s==="RBG"&&(p=0,y=d,m=d*2);for(let w=0;w<i;w++)for(let A=0;A<o;A++){let $=(r.data[p++]-l[0])*u[0],_=(r.data[m++]-l[1])*u[1],O=(r.data[y++]-l[2])*u[2],P=b===-1?255:(r.data[b++]-l[3])*u[3];t.fillStyle="rgba("+$+","+_+","+O+","+P+")",t.fillRect(A,w,1,1)}if("toDataURL"in n)return n.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},ql=(r,e)=>{let n=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),t;if(n!=null){let o,i,s;e?.tensorLayout!==void 0&&e.tensorLayout==="NHWC"?(o=r.dims[2],i=r.dims[1],s=r.dims[3]):(o=r.dims[3],i=r.dims[2],s=r.dims[1]);let a=e!==void 0&&e.format!==void 0?e.format:"RGB",u=e?.norm,l,d;u===void 0||u.mean===void 0?l=[255,255,255,255]:typeof u.mean=="number"?l=[u.mean,u.mean,u.mean,u.mean]:(l=[u.mean[0],u.mean[1],u.mean[2],255],u.mean[3]!==void 0&&(l[3]=u.mean[3])),u===void 0||u.bias===void 0?d=[0,0,0,0]:typeof u.bias=="number"?d=[u.bias,u.bias,u.bias,u.bias]:(d=[u.bias[0],u.bias[1],u.bias[2],0],u.bias[3]!==void 0&&(d[3]=u.bias[3]));let p=i*o;if(e!==void 0&&(e.format!==void 0&&s===4&&e.format!=="RGBA"||s===3&&e.format!=="RGB"&&e.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let m=4,y=0,b=1,w=2,A=3,$=0,_=p,O=p*2,P=-1;a==="RGBA"?($=0,_=p,O=p*2,P=p*3):a==="RGB"?($=0,_=p,O=p*2):a==="RBG"&&($=0,O=p,_=p*2),t=n.createImageData(o,i);for(let N=0;N<i*o;y+=m,b+=m,w+=m,A+=m,N++)t.data[y]=(r.data[$++]-d[0])*l[0],t.data[b]=(r.data[_++]-d[1])*l[1],t.data[w]=(r.data[O++]-d[2])*l[2],t.data[A]=P===-1?255:(r.data[P++]-d[3])*l[3]}else throw new Error("Can not access image data");return t}});var gs,Kl,Yl,Xl,Zl,Jl=R(()=>{Di();gs=(r,e)=>{if(r===void 0)throw new Error("Image buffer must be defined");if(e.height===void 0||e.width===void 0)throw new Error("Image height and width must be defined");if(e.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:n,width:t}=e,o=e.norm??{mean:255,bias:0},i,s;typeof o.mean=="number"?i=[o.mean,o.mean,o.mean,o.mean]:i=[o.mean[0],o.mean[1],o.mean[2],o.mean[3]??255],typeof o.bias=="number"?s=[o.bias,o.bias,o.bias,o.bias]:s=[o.bias[0],o.bias[1],o.bias[2],o.bias[3]??0];let a=e.format!==void 0?e.format:"RGBA",u=e.tensorFormat!==void 0&&e.tensorFormat!==void 0?e.tensorFormat:"RGB",l=n*t,d=u==="RGBA"?new Float32Array(l*4):new Float32Array(l*3),p=4,m=0,y=1,b=2,w=3,A=0,$=l,_=l*2,O=-1;a==="RGB"&&(p=3,m=0,y=1,b=2,w=-1),u==="RGBA"?O=l*3:u==="RBG"?(A=0,_=l,$=l*2):u==="BGR"&&(_=0,$=l,A=l*2);for(let N=0;N<l;N++,m+=p,b+=p,y+=p,w+=p)d[A++]=(r[m]+s[0])/i[0],d[$++]=(r[y]+s[1])/i[1],d[_++]=(r[b]+s[2])/i[2],O!==-1&&w!==-1&&(d[O++]=(r[w]+s[3])/i[3]);return u==="RGBA"?new Ut("float32",d,[1,4,n,t]):new Ut("float32",d,[1,3,n,t])},Kl=async(r,e)=>{let n=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,t=typeof ImageData<"u"&&r instanceof ImageData,o=typeof ImageBitmap<"u"&&r instanceof ImageBitmap,i=typeof r=="string",s,a=e??{},u=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},l=d=>d instanceof HTMLCanvasElement||d instanceof OffscreenCanvas?d.getContext("2d"):null;if(n){let d=u();d.width=r.width,d.height=r.height;let p=l(d);if(p!=null){let m=r.height,y=r.width;if(e!==void 0&&e.resizedHeight!==void 0&&e.resizedWidth!==void 0&&(m=e.resizedHeight,y=e.resizedWidth),e!==void 0){if(a=e,e.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");a.tensorFormat="RGBA",a.height=m,a.width=y}else a.tensorFormat="RGBA",a.height=m,a.width=y;p.drawImage(r,0,0),s=p.getImageData(0,0,y,m).data}else throw new Error("Can not access image data")}else if(t){let d,p;if(e!==void 0&&e.resizedWidth!==void 0&&e.resizedHeight!==void 0?(d=e.resizedHeight,p=e.resizedWidth):(d=r.height,p=r.width),e!==void 0&&(a=e),a.format="RGBA",a.height=d,a.width=p,e!==void 0){let m=u();m.width=p,m.height=d;let y=l(m);if(y!=null)y.putImageData(r,0,0),s=y.getImageData(0,0,p,d).data;else throw new Error("Can not access image data")}else s=r.data}else if(o){if(e===void 0)throw new Error("Please provide image config with format for Imagebitmap");let d=u();d.width=r.width,d.height=r.height;let p=l(d);if(p!=null){let m=r.height,y=r.width;return p.drawImage(r,0,0,y,m),s=p.getImageData(0,0,y,m).data,a.height=m,a.width=y,gs(s,a)}else throw new Error("Can not access image data")}else{if(i)return new Promise((d,p)=>{let m=u(),y=l(m);if(!r||!y)return p();let b=new Image;b.crossOrigin="Anonymous",b.src=r,b.onload=()=>{m.width=b.width,m.height=b.height,y.drawImage(b,0,0,m.width,m.height);let w=y.getImageData(0,0,m.width,m.height);a.height=m.height,a.width=m.width,d(gs(w.data,a))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(s!==void 0)return gs(s,a);throw new Error("Input data provided is not supported - aborted tensor creation")},Yl=(r,e)=>{let{width:n,height:t,download:o,dispose:i}=e,s=[1,t,n,4];return new Ut({location:"texture",type:"float32",texture:r,dims:s,download:o,dispose:i})},Xl=(r,e)=>{let{dataType:n,dims:t,download:o,dispose:i}=e;return new Ut({location:"gpu-buffer",type:n??"float32",gpuBuffer:r,dims:t,download:o,dispose:i})},Zl=(r,e,n)=>new Ut({location:"cpu-pinned",type:r,data:e,dims:n??[e.length]})});var ko,Bi,Ql,ed,td=R(()=>{ko=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["float16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),Bi=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),Ql=!1,ed=()=>{if(!Ql){Ql=!0;let r=typeof BigInt64Array<"u"&&typeof BigInt64Array.from=="function",e=typeof BigUint64Array<"u"&&typeof BigUint64Array.from=="function";r&&(ko.set("int64",BigInt64Array),Bi.set(BigInt64Array,"int64")),e&&(ko.set("uint64",BigUint64Array),Bi.set(BigUint64Array,"uint64"))}}});var rd,nd,od=R(()=>{Di();rd=r=>{let e=1;for(let n=0;n<r.length;n++){let t=r[n];if(typeof t!="number"||!Number.isSafeInteger(t))throw new TypeError(`dims[${n}] must be an integer, got: ${t}`);if(t<0)throw new RangeError(`dims[${n}] must be a non-negative integer, got: ${t}`);e*=t}return e},nd=(r,e)=>{switch(r.location){case"cpu":return new Ut(r.type,r.data,e);case"cpu-pinned":return new Ut({location:"cpu-pinned",data:r.data,type:r.type,dims:e});case"texture":return new Ut({location:"texture",texture:r.texture,type:r.type,dims:e});case"gpu-buffer":return new Ut({location:"gpu-buffer",gpuBuffer:r.gpuBuffer,type:r.type,dims:e});default:throw new Error(`tensorReshape: tensor location ${r.location} is not supported`)}}});var Ut,Di=R(()=>{jl();Jl();td();od();Ut=class{constructor(e,n,t){ed();let o,i;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,o=e.type,i=e.dims,e.location){case"cpu-pinned":{let a=ko.get(o);if(!a)throw new TypeError(`unsupported type "${o}" to create tensor from pinned buffer`);if(!(e.data instanceof a))throw new TypeError(`buffer should be of type ${a.name}`);this.cpuData=e.data;break}case"texture":{if(o!=="float32")throw new TypeError(`unsupported type "${o}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(o!=="float32"&&o!=="float16"&&o!=="int32"&&o!=="int64"&&o!=="uint32"&&o!=="bool")throw new TypeError(`unsupported type "${o}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let a,u;if(typeof e=="string")if(o=e,u=t,e==="string"){if(!Array.isArray(n))throw new TypeError("A string tensor's data must be a string array.");a=n}else{let l=ko.get(e);if(l===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(n)){if(e==="float16")throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");e==="uint64"||e==="int64"?a=l.from(n,BigInt):a=l.from(n)}else if(n instanceof l)a=n;else throw new TypeError(`A ${o} tensor's data must be type of ${l}`)}else if(u=n,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let l=typeof e[0];if(l==="string")o="string",a=e;else if(l==="boolean")o="bool",a=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${l}.`)}else{let l=Bi.get(e.constructor);if(l===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);o=l,a=e}if(u===void 0)u=[a.length];else if(!Array.isArray(u))throw new TypeError("A tensor's dims must be a number array");i=u,this.cpuData=a,this.dataLocation="cpu"}let s=rd(i);if(this.cpuData&&s!==this.cpuData.length)throw new Error(`Tensor's size(${s}) does not match data length(${this.cpuData.length}).`);this.type=o,this.dims=i,this.size=s}static async fromImage(e,n){return Kl(e,n)}static fromTexture(e,n){return Yl(e,n)}static fromGpuBuffer(e,n){return Xl(e,n)}static fromPinnedBuffer(e,n,t){return Zl(e,n,t)}toDataURL(e){return Hl(this,e)}toImageData(e){return ql(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let n=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=n,e&&this.disposer&&(this.disposer(),this.disposer=void 0),n}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return nd(this,e)}}});var _t,Ri=R(()=>{Di();_t=Ut});var Do,id,Kt,Yt,bs=R(()=>{ms();Do=(r,e)=>{xn.wasm.trace&&console.timeStamp(`${r}::ORT::${e}`)},id=(r,e)=>{let n=new Error().stack?.split(/\r\n|\r|\n/g)||[],t=!1;for(let o=0;o<n.length;o++){if(t&&!n[o].includes("TRACE_FUNC")){let i=`FUNC_${r}::${n[o].trim().split(" ")[1]}`;e&&(i+=`::${e}`),Do("CPU",i);return}n[o].includes("TRACE_FUNC")&&(t=!0)}},Kt=r=>{xn.wasm.trace&&id("BEGIN",r)},Yt=r=>{xn.wasm.trace&&id("END",r)}});var zi,ad=R(()=>{ki();Ri();bs();zi=class r{constructor(e){this.handler=e}async run(e,n,t){Kt();let o={},i={};if(typeof e!="object"||e===null||e instanceof _t||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let s=!0;if(typeof n=="object"){if(n===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(n instanceof _t)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(n)){if(n.length===0)throw new TypeError("'fetches' cannot be an empty array.");s=!1;for(let l of n){if(typeof l!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(l)===-1)throw new RangeError(`'fetches' contains invalid output name: ${l}.`);o[l]=null}if(typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else{let l=!1,d=Object.getOwnPropertyNames(n);for(let p of this.outputNames)if(d.indexOf(p)!==-1){let m=n[p];(m===null||m instanceof _t)&&(l=!0,s=!1,o[p]=m)}if(l){if(typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else i=n}}else if(typeof n<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let l of this.inputNames)if(typeof e[l]>"u")throw new Error(`input '${l}' is missing in 'feeds'.`);if(s)for(let l of this.outputNames)o[l]=null;let a=await this.handler.run(e,o,i),u={};for(let l in a)if(Object.hasOwnProperty.call(a,l)){let d=a[l];d instanceof _t?u[l]=d:u[l]=new _t(d.type,d.data,d.dims)}return Yt(),u}async release(){return this.handler.dispose()}static async create(e,n,t,o){Kt();let i,s={};if(typeof e=="string"){if(i=e,typeof n=="object"&&n!==null)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof Uint8Array){if(i=e,typeof n=="object"&&n!==null)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&e instanceof SharedArrayBuffer){let p=e,m=0,y=e.byteLength;if(typeof n=="object"&&n!==null)s=n;else if(typeof n=="number"){if(m=n,!Number.isSafeInteger(m))throw new RangeError("'byteOffset' must be an integer.");if(m<0||m>=p.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${p.byteLength}).`);if(y=e.byteLength-m,typeof t=="number"){if(y=t,!Number.isSafeInteger(y))throw new RangeError("'byteLength' must be an integer.");if(y<=0||m+y>p.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${p.byteLength-m}].`);if(typeof o=="object"&&o!==null)s=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else if(typeof t<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof n<"u")throw new TypeError("'options' must be an object.");i=new Uint8Array(p,m,y)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let u=(s.executionProviders||[]).map(p=>typeof p=="string"?p:p.name),d=await(await Pi(u)).createInferenceSessionHandler(i,s);return Yt(),new r(d)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}});var sd,ud=R(()=>{ad();sd=zi});var ld=R(()=>{});var N0,Ni,dd=R(()=>{ki();Ri();N0="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.",Ni=class r{constructor(e,n,t){this.handler=e,this.hasOptimizerModel=n,this.hasEvalModel=t}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(e,n){let t=e.evalModel||"",o=e.optimizerModel||"",i=n||{},a=(i.executionProviders||[]).map(l=>typeof l=="string"?l:l.name),u=await Pi(a);if(u.createTrainingSessionHandler){let l=await u.createTrainingSessionHandler(e.checkpointState,e.trainModel,t,o,i);return new r(l,!!e.optimizerModel,!!e.evalModel)}else throw new Error(N0)}typeNarrowingForRunStep(e,n,t,o,i){let s={},a={};if(typeof t!="object"||t===null||t instanceof _t||Array.isArray(t))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let u=!0;if(typeof o=="object"){if(o===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(o instanceof _t)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(o)){if(o.length===0)throw new TypeError("'fetches' cannot be an empty array.");u=!1;for(let l of o){if(typeof l!="string")throw new TypeError("'fetches' must be a string array or an object.");if(n.indexOf(l)===-1)throw new RangeError(`'fetches' contains invalid output name: ${l}.`);s[l]=null}if(typeof i=="object"&&i!==null)a=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else{let l=!1,d=Object.getOwnPropertyNames(o);for(let p of n)if(d.indexOf(p)!==-1){let m=o[p];(m===null||m instanceof _t)&&(l=!0,u=!1,s[p]=m)}if(l){if(typeof i=="object"&&i!==null)a=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else a=o}}else if(typeof o<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let l of e)if(typeof t[l]>"u")throw new Error(`input '${l}' is missing in 'feeds'.`);if(u)for(let l of n)s[l]=null;return[s,a]}convertHandlerReturnTypeToMapOfTensors(e){let n={};for(let t in e)if(Object.hasOwnProperty.call(e,t)){let o=e[t];o instanceof _t?n[t]=o:n[t]=new _t(o.type,o.data,o.dims)}return n}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(e,n,t){let[o,i]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,e,n,t),s=await this.handler.runTrainStep(e,o,i);return this.convertHandlerReturnTypeToMapOfTensors(s)}async runOptimizerStep(e){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(e||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(e,n,t){if(this.hasEvalModel){let[o,i]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,e,n,t),s=await this.handler.runEvalStep(e,o,i);return this.convertHandlerReturnTypeToMapOfTensors(s)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(e=!0){return this.handler.getParametersSize(e)}async loadParametersBuffer(e,n=!0){let t=await this.getParametersSize(n);if(e.length!==4*t)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(e,n)}async getContiguousParameters(e=!0){return this.handler.getContiguousParameters(e)}async release(){return this.handler.dispose()}}});var cd,fd=R(()=>{dd();cd=Ni});var ys={};tn(ys,{InferenceSession:()=>sd,TRACE:()=>Do,TRACE_FUNC_BEGIN:()=>Kt,TRACE_FUNC_END:()=>Yt,Tensor:()=>_t,TrainingSession:()=>cd,env:()=>ve,registerBackend:()=>qr});var kt=R(()=>{Fl();Wl();ud();Ri();bs();ld();fd()});function rn(r,e,n,t){if(e===void 0)return L0(r);if(n===void 0)Mi(r,e,1);else if(typeof n=="number"&&t===void 0)Mi(r,e,n);else if(typeof n=="string"&&t===void 0)Mi(r,n,1,e);else if(typeof n=="string"&&typeof t=="number")Mi(r,n,t,e);else throw new TypeError("input is valid")}function L0(r){return{verbose:rn.verbose.bind(null,r),info:rn.info.bind(null,r),warning:rn.warning.bind(null,r),error:rn.error.bind(null,r),fatal:rn.fatal.bind(null,r)}}function Mi(r,e,n,t){let o=Bo[t||""]||Bo[""];hd[r]<hd[o.minimalSeverity]||(o.logDateTime&&(e=`${new Date().toISOString()}|${e}`),o.logSourceLocation,M0[o.provider].log(r,e,t))}var vs,ws,hd,M0,md,Bo,Je,Fi,Ui,Vi,Li,or=R(()=>{"use strict";vs=class{log(e,n,t){}},ws=class{log(e,n,t){console.log(`${this.color(e)} ${t?"\x1B[35m"+t+"\x1B[0m ":""}${n}`)}color(e){switch(e){case"verbose":return"\x1B[34;40mv\x1B[0m";case"info":return"\x1B[32mi\x1B[0m";case"warning":return"\x1B[30;43mw\x1B[0m";case"error":return"\x1B[31;40me\x1B[0m";case"fatal":return"\x1B[101mf\x1B[0m";default:throw new Error(`unsupported severity: ${e}`)}}},hd={verbose:1e3,info:2e3,warning:4e3,error:5e3,fatal:6e3},M0={none:new vs,console:new ws},md={provider:"console",minimalSeverity:"warning",logDateTime:!0,logSourceLocation:!1},Bo={"":md};(u=>{function r(l,d){u("verbose",l,d)}u.verbose=r;function e(l,d){u("info",l,d)}u.info=e;function n(l,d){u("warning",l,d)}u.warning=n;function t(l,d){u("error",l,d)}u.error=t;function o(l,d){u("fatal",l,d)}u.fatal=o;function i(l){Bo={},s("",l||{})}u.reset=i;function s(l,d){if(l==="*")i(d);else{let p=Bo[l]||md;Bo[l]={provider:d.provider||p.provider,minimalSeverity:d.minimalSeverity||p.minimalSeverity,logDateTime:d.logDateTime===void 0?p.logDateTime:d.logDateTime,logSourceLocation:d.logSourceLocation===void 0?p.logSourceLocation:d.logSourceLocation}}}u.set=s;function a(l){let d={};l.logLevel&&(d.minimalSeverity=l.logLevel),s("",d)}u.setWithEnv=a})(rn||={});Je=rn,Fi=class{constructor(e,n,t,o,i,s){this.category=e;this.name=n;this.startTime=t;this.endCallback=o;this.timer=i;this.ctx=s}async end(){return this.endCallback(this)}async checkTimer(){if(this.ctx===void 0||this.timer===void 0)throw new Error("No webgl timer found");return this.ctx.endTimer(),this.ctx.waitForQueryAndGetTime(this.timer)}},Ui=class{constructor(e,n,t,o){this.category=e;this.name=n;this.startTime=t;this.endTime=o}},Vi=class{constructor(e,n,t){this._started=!1;this._flushPointer=0;this._started=!1,this._maxNumberEvents=e===void 0?1e4:e,this._flushBatchSize=n===void 0?10:n,this._flushIntervalInMilliseconds=t===void 0?5e3:t}static create(e){return e===void 0?new this:new this(e.maxNumberEvents,e.flushBatchSize,e.flushIntervalInMilliseconds)}start(){this._started=!0,this._timingEvents=[],this._flushTime=Li(),this._flushPointer=0}stop(){for(this._started=!1;this._flushPointer<this._timingEvents.length;this._flushPointer++)this.logOneEvent(this._timingEvents[this._flushPointer])}event(e,n,t,o){let i=this._started?this.begin(e,n,o):void 0,s=!1,a=t();if(a&&typeof a.then=="function")return s=!0,new Promise((u,l)=>{a.then(async d=>{i&&await i.end(),u(d)},async d=>{i&&await i.end(),l(d)})});if(!s&&i){let u=i.end();if(u&&typeof u.then=="function")return new Promise((l,d)=>{u.then(()=>{l(a)},p=>{d(p)})})}return a}begin(e,n,t){if(!this._started)throw new Error("profiler is not started yet");if(t===void 0){let o=Li();return this.flush(o),new Fi(e,n,o,i=>this.endSync(i))}else{let o=t.beginTimer();return new Fi(e,n,0,async i=>this.end(i),o,t)}}async end(e){let n=await e.checkTimer();this._timingEvents.length<this._maxNumberEvents&&(this._timingEvents.push(new Ui(e.category,e.name,e.startTime,n)),this.flush(n))}endSync(e){let n=Li();this._timingEvents.length<this._maxNumberEvents&&(this._timingEvents.push(new Ui(e.category,e.name,e.startTime,n)),this.flush(n))}logOneEvent(e){Je.verbose(`Profiler.${e.category}`,`${(e.endTime-e.startTime).toFixed(2)}ms on event '${e.name}' at ${e.endTime.toFixed(2)}`)}flush(e){if(this._timingEvents.length-this._flushPointer>=this._flushBatchSize||e-this._flushTime>=this._flushIntervalInMilliseconds){for(let n=this._flushPointer;this._flushPointer<n+this._flushBatchSize&&this._flushPointer<this._timingEvents.length;this._flushPointer++)this.logOneEvent(this._timingEvents[this._flushPointer]);this._flushTime=Li()}}get started(){return this._started}},Li=typeof performance<"u"&&performance.now?()=>performance.now():Date.now});function gd(r,e,n){for(let t of n){let o=t[0],i=t[1],s=t[2],a=t[3],u=t[4];if(r.opType===o){for(let l of e)if((l.domain===i||l.domain==="ai.onnx"&&i==="")&&F0(l.version,s))return{opImpl:a,opInit:u}}}throw new TypeError(`cannot resolve operator '${r.opType}' with opsets: ${e.map(t=>`${t.domain||"ai.onnx"} v${t.version}`).join(", ")}`)}function F0(r,e){if(e.endsWith("+")){let n=Number.parseInt(e.substring(0,e.length-1),10);return!isNaN(n)&&n<=r}else if(e.split("-").length===2){let n=e.split("-"),t=Number.parseInt(n[0],10),o=Number.parseInt(n[1],10);return!isNaN(t)&&!isNaN(o)&&t<=r&&r<=o}else return Number.parseInt(e,10)===r}var bd=R(()=>{"use strict"});var yd=it(xs=>{"use strict";xs.__esModule=!0;var U0=function(){function r(e){if(!e)throw new TypeError("Invalid argument; `value` has no value.");this.value=r.EMPTY,e&&r.isGuid(e)&&(this.value=e)}return r.isGuid=function(e){var n=e.toString();return e&&(e instanceof r||r.validator.test(n))},r.create=function(){return new r([r.gen(2),r.gen(1),r.gen(1),r.gen(1),r.gen(3)].join("-"))},r.createEmpty=function(){return new r("emptyguid")},r.parse=function(e){return new r(e)},r.raw=function(){return[r.gen(2),r.gen(1),r.gen(1),r.gen(1),r.gen(3)].join("-")},r.gen=function(e){for(var n="",t=0;t<e;t++)n+=((1+Math.random())*65536|0).toString(16).substring(1);return n},r.prototype.equals=function(e){return r.isGuid(e)&&this.value===e.toString()},r.prototype.isEmpty=function(){return this.value===r.EMPTY},r.prototype.toString=function(){return this.value},r.prototype.toJSON=function(){return{value:this.value}},r.validator=new RegExp("^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$","i"),r.EMPTY="00000000-0000-0000-0000-000000000000",r}();xs.Guid=U0});function at(r,e,n){this.low=r|0,this.high=e|0,this.unsigned=!!n}function Dt(r){return(r&&r.__isLong__)===!0}function vd(r){var e=Math.clz32(r&-r);return r?31-e:e}function _n(r,e){var n,t,o;return e?(r>>>=0,(o=0<=r&&r<256)&&(t=xd[r],t)?t:(n=Ye(r,0,!0),o&&(xd[r]=n),n)):(r|=0,(o=-128<=r&&r<128)&&(t=wd[r],t)?t:(n=Ye(r,r<0?-1:0,!1),o&&(wd[r]=n),n))}function ar(r,e){if(isNaN(r))return e?jr:br;if(e){if(r<0)return jr;if(r>=Sd)return Od}else{if(r<=-Td)return Xt;if(r+1>=Td)return Ad}return r<0?ar(-r,e).neg():Ye(r%Kn|0,r/Kn|0,e)}function Ye(r,e,n){return new at(r,e,n)}function Ts(r,e,n){if(r.length===0)throw Error("empty string");if(typeof e=="number"?(n=e,e=!1):e=!!e,r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return e?jr:br;if(n=n||10,n<2||36<n)throw RangeError("radix");var t;if((t=r.indexOf("-"))>0)throw Error("interior hyphen");if(t===0)return Ts(r.substring(1),e,n).neg();for(var o=ar(Gi(n,8)),i=br,s=0;s<r.length;s+=8){var a=Math.min(8,r.length-s),u=parseInt(r.substring(s,s+a),n);if(a<8){var l=ar(Gi(n,a));i=i.mul(l).add(ar(u))}else i=i.mul(o),i=i.add(ar(u))}return i.unsigned=e,i}function yr(r,e){return typeof r=="number"?ar(r,e):typeof r=="string"?Ts(r,e):Ye(r.low,r.high,typeof e=="boolean"?e:r.unsigned)}var ir,wd,xd,Gi,_d,V0,Kn,Sd,Td,$d,br,jr,jn,Id,_s,Ad,Od,Xt,Z,Kr,$s=R(()=>{ir=null;try{ir=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}at.prototype.__isLong__;Object.defineProperty(at.prototype,"__isLong__",{value:!0});at.isLong=Dt;wd={},xd={};at.fromInt=_n;at.fromNumber=ar;at.fromBits=Ye;Gi=Math.pow;at.fromString=Ts;at.fromValue=yr;_d=65536,V0=1<<24,Kn=_d*_d,Sd=Kn*Kn,Td=Sd/2,$d=_n(V0),br=_n(0);at.ZERO=br;jr=_n(0,!0);at.UZERO=jr;jn=_n(1);at.ONE=jn;Id=_n(1,!0);at.UONE=Id;_s=_n(-1);at.NEG_ONE=_s;Ad=Ye(-1,2147483647,!1);at.MAX_VALUE=Ad;Od=Ye(-1,-1,!0);at.MAX_UNSIGNED_VALUE=Od;Xt=Ye(0,-2147483648,!1);at.MIN_VALUE=Xt;Z=at.prototype;Z.toInt=function(){return this.unsigned?this.low>>>0:this.low};Z.toNumber=function(){return this.unsigned?(this.high>>>0)*Kn+(this.low>>>0):this.high*Kn+(this.low>>>0)};Z.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Xt)){var n=ar(e),t=this.div(n),o=t.mul(n).sub(this);return t.toString(e)+o.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var i=ar(Gi(e,6),this.unsigned),s=this,a="";;){var u=s.div(i),l=s.sub(u.mul(i)).toInt()>>>0,d=l.toString(e);if(s=u,s.isZero())return d+a;for(;d.length<6;)d="0"+d;a=""+d+a}};Z.getHighBits=function(){return this.high};Z.getHighBitsUnsigned=function(){return this.high>>>0};Z.getLowBits=function(){return this.low};Z.getLowBitsUnsigned=function(){return this.low>>>0};Z.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Xt)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,n=31;n>0&&!(e&1<<n);n--);return this.high!=0?n+33:n+1};Z.isZero=function(){return this.high===0&&this.low===0};Z.eqz=Z.isZero;Z.isNegative=function(){return!this.unsigned&&this.high<0};Z.isPositive=function(){return this.unsigned||this.high>=0};Z.isOdd=function(){return(this.low&1)===1};Z.isEven=function(){return(this.low&1)===0};Z.equals=function(e){return Dt(e)||(e=yr(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};Z.eq=Z.equals;Z.notEquals=function(e){return!this.eq(e)};Z.neq=Z.notEquals;Z.ne=Z.notEquals;Z.lessThan=function(e){return this.comp(e)<0};Z.lt=Z.lessThan;Z.lessThanOrEqual=function(e){return this.comp(e)<=0};Z.lte=Z.lessThanOrEqual;Z.le=Z.lessThanOrEqual;Z.greaterThan=function(e){return this.comp(e)>0};Z.gt=Z.greaterThan;Z.greaterThanOrEqual=function(e){return this.comp(e)>=0};Z.gte=Z.greaterThanOrEqual;Z.ge=Z.greaterThanOrEqual;Z.compare=function(e){if(Dt(e)||(e=yr(e)),this.eq(e))return 0;var n=this.isNegative(),t=e.isNegative();return n&&!t?-1:!n&&t?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};Z.comp=Z.compare;Z.negate=function(){return!this.unsigned&&this.eq(Xt)?Xt:this.not().add(jn)};Z.neg=Z.negate;Z.add=function(e){Dt(e)||(e=yr(e));var n=this.high>>>16,t=this.high&65535,o=this.low>>>16,i=this.low&65535,s=e.high>>>16,a=e.high&65535,u=e.low>>>16,l=e.low&65535,d=0,p=0,m=0,y=0;return y+=i+l,m+=y>>>16,y&=65535,m+=o+u,p+=m>>>16,m&=65535,p+=t+a,d+=p>>>16,p&=65535,d+=n+s,d&=65535,Ye(m<<16|y,d<<16|p,this.unsigned)};Z.subtract=function(e){return Dt(e)||(e=yr(e)),this.add(e.neg())};Z.sub=Z.subtract;Z.multiply=function(e){if(this.isZero())return this;if(Dt(e)||(e=yr(e)),ir){var n=ir.mul(this.low,this.high,e.low,e.high);return Ye(n,ir.get_high(),this.unsigned)}if(e.isZero())return this.unsigned?jr:br;if(this.eq(Xt))return e.isOdd()?Xt:br;if(e.eq(Xt))return this.isOdd()?Xt:br;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt($d)&&e.lt($d))return ar(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,o=this.high&65535,i=this.low>>>16,s=this.low&65535,a=e.high>>>16,u=e.high&65535,l=e.low>>>16,d=e.low&65535,p=0,m=0,y=0,b=0;return b+=s*d,y+=b>>>16,b&=65535,y+=i*d,m+=y>>>16,y&=65535,y+=s*l,m+=y>>>16,y&=65535,m+=o*d,p+=m>>>16,m&=65535,m+=i*l,p+=m>>>16,m&=65535,m+=s*u,p+=m>>>16,m&=65535,p+=t*d+o*l+i*u+s*a,p&=65535,Ye(y<<16|b,p<<16|m,this.unsigned)};Z.mul=Z.multiply;Z.divide=function(e){if(Dt(e)||(e=yr(e)),e.isZero())throw Error("division by zero");if(ir){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var n=(this.unsigned?ir.div_u:ir.div_s)(this.low,this.high,e.low,e.high);return Ye(n,ir.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?jr:br;var t,o,i;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return jr;if(e.gt(this.shru(1)))return Id;i=jr}else{if(this.eq(Xt)){if(e.eq(jn)||e.eq(_s))return Xt;if(e.eq(Xt))return jn;var s=this.shr(1);return t=s.div(e).shl(1),t.eq(br)?e.isNegative()?jn:_s:(o=this.sub(e.mul(t)),i=t.add(o.div(e)),i)}else if(e.eq(Xt))return this.unsigned?jr:br;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();i=br}for(o=this;o.gte(e);){t=Math.max(1,Math.floor(o.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(t)/Math.LN2),u=a<=48?1:Gi(2,a-48),l=ar(t),d=l.mul(e);d.isNegative()||d.gt(o);)t-=u,l=ar(t,this.unsigned),d=l.mul(e);l.isZero()&&(l=jn),i=i.add(l),o=o.sub(d)}return i};Z.div=Z.divide;Z.modulo=function(e){if(Dt(e)||(e=yr(e)),ir){var n=(this.unsigned?ir.rem_u:ir.rem_s)(this.low,this.high,e.low,e.high);return Ye(n,ir.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};Z.mod=Z.modulo;Z.rem=Z.modulo;Z.not=function(){return Ye(~this.low,~this.high,this.unsigned)};Z.countLeadingZeros=function(){return this.high?Math.clz32(this.high):Math.clz32(this.low)+32};Z.clz=Z.countLeadingZeros;Z.countTrailingZeros=function(){return this.low?vd(this.low):vd(this.high)+32};Z.ctz=Z.countTrailingZeros;Z.and=function(e){return Dt(e)||(e=yr(e)),Ye(this.low&e.low,this.high&e.high,this.unsigned)};Z.or=function(e){return Dt(e)||(e=yr(e)),Ye(this.low|e.low,this.high|e.high,this.unsigned)};Z.xor=function(e){return Dt(e)||(e=yr(e)),Ye(this.low^e.low,this.high^e.high,this.unsigned)};Z.shiftLeft=function(e){return Dt(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Ye(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):Ye(0,this.low<<e-32,this.unsigned)};Z.shl=Z.shiftLeft;Z.shiftRight=function(e){return Dt(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Ye(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):Ye(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};Z.shr=Z.shiftRight;Z.shiftRightUnsigned=function(e){return Dt(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Ye(this.low>>>e|this.high<<32-e,this.high>>>e,this.unsigned):e===32?Ye(this.high,0,this.unsigned):Ye(this.high>>>e-32,0,this.unsigned)};Z.shru=Z.shiftRightUnsigned;Z.shr_u=Z.shiftRightUnsigned;Z.rotateLeft=function(e){var n;return Dt(e)&&(e=e.toInt()),(e&=63)===0?this:e===32?Ye(this.high,this.low,this.unsigned):e<32?(n=32-e,Ye(this.low<<e|this.high>>>n,this.high<<e|this.low>>>n,this.unsigned)):(e-=32,n=32-e,Ye(this.high<<e|this.low>>>n,this.low<<e|this.high>>>n,this.unsigned))};Z.rotl=Z.rotateLeft;Z.rotateRight=function(e){var n;return Dt(e)&&(e=e.toInt()),(e&=63)===0?this:e===32?Ye(this.high,this.low,this.unsigned):e<32?(n=32-e,Ye(this.high<<n|this.low>>>e,this.low<<n|this.high>>>e,this.unsigned)):(e-=32,n=32-e,Ye(this.low<<n|this.high>>>e,this.high<<n|this.low>>>e,this.unsigned))};Z.rotr=Z.rotateRight;Z.toSigned=function(){return this.unsigned?Ye(this.low,this.high,!1):this};Z.toUnsigned=function(){return this.unsigned?this:Ye(this.low,this.high,!0)};Z.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};Z.toBytesLE=function(){var e=this.high,n=this.low;return[n&255,n>>>8&255,n>>>16&255,n>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};Z.toBytesBE=function(){var e=this.high,n=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,n>>>24,n>>>16&255,n>>>8&255,n&255]};at.fromBytes=function(e,n,t){return t?at.fromBytesLE(e,n):at.fromBytesBE(e,n)};at.fromBytesLE=function(e,n){return new at(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,n)};at.fromBytesBE=function(e,n){return new at(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],n)};Kr=at});var B,Wi=R(()=>{B={};B.Offset;B.Table;B.SIZEOF_SHORT=2;B.SIZEOF_INT=4;B.FILE_IDENTIFIER_LENGTH=4;B.SIZE_PREFIX_LENGTH=4;B.Encoding={UTF8_BYTES:1,UTF16_STRING:2};B.int32=new Int32Array(2);B.float32=new Float32Array(B.int32.buffer);B.float64=new Float64Array(B.int32.buffer);B.isLittleEndian=new Uint16Array(new Uint8Array([1,0]).buffer)[0]===1;B.Long=function(r,e){this.low=r|0,this.high=e|0};B.Long.create=function(r,e){return r==0&&e==0?B.Long.ZERO:new B.Long(r,e)};B.Long.prototype.toFloat64=function(){return(this.low>>>0)+this.high*4294967296};B.Long.prototype.equals=function(r){return this.low==r.low&&this.high==r.high};B.Long.ZERO=new B.Long(0,0);B.Builder=function(r){if(r)var e=r;else var e=1024;this.bb=B.ByteBuffer.allocate(e),this.space=e,this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1};B.Builder.prototype.clear=function(){this.bb.clear(),this.space=this.bb.capacity(),this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1};B.Builder.prototype.forceDefaults=function(r){this.force_defaults=r};B.Builder.prototype.dataBuffer=function(){return this.bb};B.Builder.prototype.asUint8Array=function(){return this.bb.bytes().subarray(this.bb.position(),this.bb.position()+this.offset())};B.Builder.prototype.prep=function(r,e){r>this.minalign&&(this.minalign=r);for(var n=~(this.bb.capacity()-this.space+e)+1&r-1;this.space<n+r+e;){var t=this.bb.capacity();this.bb=B.Builder.growByteBuffer(this.bb),this.space+=this.bb.capacity()-t}this.pad(n)};B.Builder.prototype.pad=function(r){for(var e=0;e<r;e++)this.bb.writeInt8(--this.space,0)};B.Builder.prototype.writeInt8=function(r){this.bb.writeInt8(this.space-=1,r)};B.Builder.prototype.writeInt16=function(r){this.bb.writeInt16(this.space-=2,r)};B.Builder.prototype.writeInt32=function(r){this.bb.writeInt32(this.space-=4,r)};B.Builder.prototype.writeInt64=function(r){this.bb.writeInt64(this.space-=8,r)};B.Builder.prototype.writeFloat32=function(r){this.bb.writeFloat32(this.space-=4,r)};B.Builder.prototype.writeFloat64=function(r){this.bb.writeFloat64(this.space-=8,r)};B.Builder.prototype.addInt8=function(r){this.prep(1,0),this.writeInt8(r)};B.Builder.prototype.addInt16=function(r){this.prep(2,0),this.writeInt16(r)};B.Builder.prototype.addInt32=function(r){this.prep(4,0),this.writeInt32(r)};B.Builder.prototype.addInt64=function(r){this.prep(8,0),this.writeInt64(r)};B.Builder.prototype.addFloat32=function(r){this.prep(4,0),this.writeFloat32(r)};B.Builder.prototype.addFloat64=function(r){this.prep(8,0),this.writeFloat64(r)};B.Builder.prototype.addFieldInt8=function(r,e,n){(this.force_defaults||e!=n)&&(this.addInt8(e),this.slot(r))};B.Builder.prototype.addFieldInt16=function(r,e,n){(this.force_defaults||e!=n)&&(this.addInt16(e),this.slot(r))};B.Builder.prototype.addFieldInt32=function(r,e,n){(this.force_defaults||e!=n)&&(this.addInt32(e),this.slot(r))};B.Builder.prototype.addFieldInt64=function(r,e,n){(this.force_defaults||!e.equals(n))&&(this.addInt64(e),this.slot(r))};B.Builder.prototype.addFieldFloat32=function(r,e,n){(this.force_defaults||e!=n)&&(this.addFloat32(e),this.slot(r))};B.Builder.prototype.addFieldFloat64=function(r,e,n){(this.force_defaults||e!=n)&&(this.addFloat64(e),this.slot(r))};B.Builder.prototype.addFieldOffset=function(r,e,n){(this.force_defaults||e!=n)&&(this.addOffset(e),this.slot(r))};B.Builder.prototype.addFieldStruct=function(r,e,n){e!=n&&(this.nested(e),this.slot(r))};B.Builder.prototype.nested=function(r){if(r!=this.offset())throw new Error("FlatBuffers: struct must be serialized inline.")};B.Builder.prototype.notNested=function(){if(this.isNested)throw new Error("FlatBuffers: object serialization must not be nested.")};B.Builder.prototype.slot=function(r){this.vtable[r]=this.offset()};B.Builder.prototype.offset=function(){return this.bb.capacity()-this.space};B.Builder.growByteBuffer=function(r){var e=r.capacity();if(e&3221225472)throw new Error("FlatBuffers: cannot grow buffer beyond 2 gigabytes.");var n=e<<1,t=B.ByteBuffer.allocate(n);return t.setPosition(n-e),t.bytes().set(r.bytes(),n-e),t};B.Builder.prototype.addOffset=function(r){this.prep(B.SIZEOF_INT,0),this.writeInt32(this.offset()-r+B.SIZEOF_INT)};B.Builder.prototype.startObject=function(r){this.notNested(),this.vtable==null&&(this.vtable=[]),this.vtable_in_use=r;for(var e=0;e<r;e++)this.vtable[e]=0;this.isNested=!0,this.object_start=this.offset()};B.Builder.prototype.endObject=function(){if(this.vtable==null||!this.isNested)throw new Error("FlatBuffers: endObject called without startObject");this.addInt32(0);for(var r=this.offset(),e=this.vtable_in_use-1;e>=0&&this.vtable[e]==0;e--);for(var n=e+1;e>=0;e--)this.addInt16(this.vtable[e]!=0?r-this.vtable[e]:0);var t=2;this.addInt16(r-this.object_start);var o=(n+t)*B.SIZEOF_SHORT;this.addInt16(o);var i=0,s=this.space;e:for(e=0;e<this.vtables.length;e++){var a=this.bb.capacity()-this.vtables[e];if(o==this.bb.readInt16(a)){for(var u=B.SIZEOF_SHORT;u<o;u+=B.SIZEOF_SHORT)if(this.bb.readInt16(s+u)!=this.bb.readInt16(a+u))continue e;i=this.vtables[e];break}}return i?(this.space=this.bb.capacity()-r,this.bb.writeInt32(this.space,i-r)):(this.vtables.push(this.offset()),this.bb.writeInt32(this.bb.capacity()-r,this.offset()-r)),this.isNested=!1,r};B.Builder.prototype.finish=function(r,e,n){var t=n?B.SIZE_PREFIX_LENGTH:0;if(e){var o=e;if(this.prep(this.minalign,B.SIZEOF_INT+B.FILE_IDENTIFIER_LENGTH+t),o.length!=B.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+B.FILE_IDENTIFIER_LENGTH);for(var i=B.FILE_IDENTIFIER_LENGTH-1;i>=0;i--)this.writeInt8(o.charCodeAt(i))}this.prep(this.minalign,B.SIZEOF_INT+t),this.addOffset(r),t&&this.addInt32(this.bb.capacity()-this.space),this.bb.setPosition(this.space)};B.Builder.prototype.finishSizePrefixed=function(r,e){this.finish(r,e,!0)};B.Builder.prototype.requiredField=function(r,e){var n=this.bb.capacity()-r,t=n-this.bb.readInt32(n),o=this.bb.readInt16(t+e)!=0;if(!o)throw new Error("FlatBuffers: field "+e+" must be set")};B.Builder.prototype.startVector=function(r,e,n){this.notNested(),this.vector_num_elems=e,this.prep(B.SIZEOF_INT,r*e),this.prep(n,r*e)};B.Builder.prototype.endVector=function(){return this.writeInt32(this.vector_num_elems),this.offset()};B.Builder.prototype.createString=function(r){if(r instanceof Uint8Array)var e=r;else for(var e=[],n=0;n<r.length;){var t,o=r.charCodeAt(n++);if(o<55296||o>=56320)t=o;else{var i=r.charCodeAt(n++);t=(o<<10)+i+(65536-56623104-56320)}t<128?e.push(t):(t<2048?e.push(t>>6&31|192):(t<65536?e.push(t>>12&15|224):e.push(t>>18&7|240,t>>12&63|128),e.push(t>>6&63|128)),e.push(t&63|128))}this.addInt8(0),this.startVector(1,e.length,1),this.bb.setPosition(this.space-=e.length);for(var n=0,s=this.space,a=this.bb.bytes();n<e.length;n++)a[s++]=e[n];return this.endVector()};B.Builder.prototype.createLong=function(r,e){return B.Long.create(r,e)};B.ByteBuffer=function(r){this.bytes_=r,this.position_=0};B.ByteBuffer.allocate=function(r){return new B.ByteBuffer(new Uint8Array(r))};B.ByteBuffer.prototype.clear=function(){this.position_=0};B.ByteBuffer.prototype.bytes=function(){return this.bytes_};B.ByteBuffer.prototype.position=function(){return this.position_};B.ByteBuffer.prototype.setPosition=function(r){this.position_=r};B.ByteBuffer.prototype.capacity=function(){return this.bytes_.length};B.ByteBuffer.prototype.readInt8=function(r){return this.readUint8(r)<<24>>24};B.ByteBuffer.prototype.readUint8=function(r){return this.bytes_[r]};B.ByteBuffer.prototype.readInt16=function(r){return this.readUint16(r)<<16>>16};B.ByteBuffer.prototype.readUint16=function(r){return this.bytes_[r]|this.bytes_[r+1]<<8};B.ByteBuffer.prototype.readInt32=function(r){return this.bytes_[r]|this.bytes_[r+1]<<8|this.bytes_[r+2]<<16|this.bytes_[r+3]<<24};B.ByteBuffer.prototype.readUint32=function(r){return this.readInt32(r)>>>0};B.ByteBuffer.prototype.readInt64=function(r){return new B.Long(this.readInt32(r),this.readInt32(r+4))};B.ByteBuffer.prototype.readUint64=function(r){return new B.Long(this.readUint32(r),this.readUint32(r+4))};B.ByteBuffer.prototype.readFloat32=function(r){return B.int32[0]=this.readInt32(r),B.float32[0]};B.ByteBuffer.prototype.readFloat64=function(r){return B.int32[B.isLittleEndian?0:1]=this.readInt32(r),B.int32[B.isLittleEndian?1:0]=this.readInt32(r+4),B.float64[0]};B.ByteBuffer.prototype.writeInt8=function(r,e){this.bytes_[r]=e};B.ByteBuffer.prototype.writeUint8=function(r,e){this.bytes_[r]=e};B.ByteBuffer.prototype.writeInt16=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8};B.ByteBuffer.prototype.writeUint16=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8};B.ByteBuffer.prototype.writeInt32=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8,this.bytes_[r+2]=e>>16,this.bytes_[r+3]=e>>24};B.ByteBuffer.prototype.writeUint32=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8,this.bytes_[r+2]=e>>16,this.bytes_[r+3]=e>>24};B.ByteBuffer.prototype.writeInt64=function(r,e){this.writeInt32(r,e.low),this.writeInt32(r+4,e.high)};B.ByteBuffer.prototype.writeUint64=function(r,e){this.writeUint32(r,e.low),this.writeUint32(r+4,e.high)};B.ByteBuffer.prototype.writeFloat32=function(r,e){B.float32[0]=e,this.writeInt32(r,B.int32[0])};B.ByteBuffer.prototype.writeFloat64=function(r,e){B.float64[0]=e,this.writeInt32(r,B.int32[B.isLittleEndian?0:1]),this.writeInt32(r+4,B.int32[B.isLittleEndian?1:0])};B.ByteBuffer.prototype.getBufferIdentifier=function(){if(this.bytes_.length<this.position_+B.SIZEOF_INT+B.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: ByteBuffer is too short to contain an identifier.");for(var r="",e=0;e<B.FILE_IDENTIFIER_LENGTH;e++)r+=String.fromCharCode(this.readInt8(this.position_+B.SIZEOF_INT+e));return r};B.ByteBuffer.prototype.__offset=function(r,e){var n=r-this.readInt32(r);return e<this.readInt16(n)?this.readInt16(n+e):0};B.ByteBuffer.prototype.__union=function(r,e){return r.bb_pos=e+this.readInt32(e),r.bb=this,r};B.ByteBuffer.prototype.__string=function(r,e){r+=this.readInt32(r);var n=this.readInt32(r),t="",o=0;if(r+=B.SIZEOF_INT,e===B.Encoding.UTF8_BYTES)return this.bytes_.subarray(r,r+n);for(;o<n;){var i,s=this.readUint8(r+o++);if(s<192)i=s;else{var a=this.readUint8(r+o++);if(s<224)i=(s&31)<<6|a&63;else{var u=this.readUint8(r+o++);if(s<240)i=(s&15)<<12|(a&63)<<6|u&63;else{var l=this.readUint8(r+o++);i=(s&7)<<18|(a&63)<<12|(u&63)<<6|l&63}}}i<65536?t+=String.fromCharCode(i):(i-=65536,t+=String.fromCharCode((i>>10)+55296,(i&1024-1)+56320))}return t};B.ByteBuffer.prototype.__indirect=function(r){return r+this.readInt32(r)};B.ByteBuffer.prototype.__vector=function(r){return r+this.readInt32(r)+B.SIZEOF_INT};B.ByteBuffer.prototype.__vector_len=function(r){return this.readInt32(r+this.readInt32(r))};B.ByteBuffer.prototype.__has_identifier=function(r){if(r.length!=B.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+B.FILE_IDENTIFIER_LENGTH);for(var e=0;e<B.FILE_IDENTIFIER_LENGTH;e++)if(r.charCodeAt(e)!=this.readInt8(this.position_+B.SIZEOF_INT+e))return!1;return!0};B.ByteBuffer.prototype.createLong=function(r,e){return B.Long.create(r,e)}});var fe,Ro=R(()=>{"use strict";Wi();(e=>{let r;(t=>{let n;(i=>{let o;(O=>(O[O.UNDEFINED=0]="UNDEFINED",O[O.FLOAT=1]="FLOAT",O[O.INT=2]="INT",O[O.STRING=3]="STRING",O[O.TENSOR=4]="TENSOR",O[O.GRAPH=5]="GRAPH",O[O.FLOATS=6]="FLOATS",O[O.INTS=7]="INTS",O[O.STRINGS=8]="STRINGS",O[O.TENSORS=9]="TENSORS",O[O.GRAPHS=10]="GRAPHS",O[O.SPARSE_TENSOR=11]="SPARSE_TENSOR",O[O.SPARSE_TENSORS=12]="SPARSE_TENSORS"))(o=i.AttributeType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{let o;(l=>(l[l.UNKNOWN=0]="UNKNOWN",l[l.VALUE=1]="VALUE",l[l.PARAM=2]="PARAM"))(o=i.DimensionValueType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{let o;(q=>(q[q.UNDEFINED=0]="UNDEFINED",q[q.FLOAT=1]="FLOAT",q[q.UINT8=2]="UINT8",q[q.INT8=3]="INT8",q[q.UINT16=4]="UINT16",q[q.INT16=5]="INT16",q[q.INT32=6]="INT32",q[q.INT64=7]="INT64",q[q.STRING=8]="STRING",q[q.BOOL=9]="BOOL",q[q.FLOAT16=10]="FLOAT16",q[q.DOUBLE=11]="DOUBLE",q[q.UINT32=12]="UINT32",q[q.UINT64=13]="UINT64",q[q.COMPLEX64=14]="COMPLEX64",q[q.COMPLEX128=15]="COMPLEX128",q[q.BFLOAT16=16]="BFLOAT16",q[q.FLOAT8E4M3FN=17]="FLOAT8E4M3FN",q[q.FLOAT8E4M3FNUZ=18]="FLOAT8E4M3FNUZ",q[q.FLOAT8E5M2=19]="FLOAT8E5M2",q[q.FLOAT8E5M2FNUZ=20]="FLOAT8E5M2FNUZ"))(o=i.TensorDataType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{let o;(u=>(u[u.Primitive=0]="Primitive",u[u.Fused=1]="Fused"))(o=i.NodeType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{let o;(d=>(d[d.NONE=0]="NONE",d[d.tensor_type=1]="tensor_type",d[d.sequence_type=2]="sequence_type",d[d.map_type=3]="map_type"))(o=i.TypeInfoValue||={})})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsShape(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsShape(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}dim(a,u){let l=this.bb.__offset(this.bb_pos,4);return l?(u||new e.experimental.fbs.Dimension).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}dimLength(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.__vector_len(this.bb_pos+a):0}static startShape(a){a.startObject(1)}static addDim(a,u){a.addFieldOffset(0,u,0)}static createDimVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startDimVector(a,u){a.startVector(4,u,4)}static endShape(a){return a.endObject()}static createShape(a,u){return o.startShape(a),o.addDim(a,u),o.endShape(a)}}i.Shape=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsDimension(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsDimension(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}value(a){let u=this.bb.__offset(this.bb_pos,4);return u?(a||new e.experimental.fbs.DimensionValue).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}denotation(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}static startDimension(a){a.startObject(2)}static addValue(a,u){a.addFieldOffset(0,u,0)}static addDenotation(a,u){a.addFieldOffset(1,u,0)}static endDimension(a){return a.endObject()}static createDimension(a,u,l){return o.startDimension(a),o.addValue(a,u),o.addDenotation(a,l),o.endDimension(a)}}i.Dimension=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsDimensionValue(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsDimensionValue(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}dimType(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt8(this.bb_pos+a):0}dimValue(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}dimParam(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.__string(this.bb_pos+u,a):null}static startDimensionValue(a){a.startObject(3)}static addDimType(a,u){a.addFieldInt8(0,u,0)}static addDimValue(a,u){a.addFieldInt64(1,u,a.createLong(0,0))}static addDimParam(a,u){a.addFieldOffset(2,u,0)}static endDimensionValue(a){return a.endObject()}static createDimensionValue(a,u,l,d){return o.startDimensionValue(a),o.addDimType(a,u),o.addDimValue(a,l),o.addDimParam(a,d),o.endDimensionValue(a)}}i.DimensionValue=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsTensorTypeAndShape(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsTensorTypeAndShape(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}elemType(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt32(this.bb_pos+a):0}shape(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.Shape).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startTensorTypeAndShape(a){a.startObject(2)}static addElemType(a,u){a.addFieldInt32(0,u,0)}static addShape(a,u){a.addFieldOffset(1,u,0)}static endTensorTypeAndShape(a){return a.endObject()}static createTensorTypeAndShape(a,u,l){return o.startTensorTypeAndShape(a),o.addElemType(a,u),o.addShape(a,l),o.endTensorTypeAndShape(a)}}i.TensorTypeAndShape=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsMapType(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsMapType(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}keyType(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt32(this.bb_pos+a):0}valueType(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startMapType(a){a.startObject(2)}static addKeyType(a,u){a.addFieldInt32(0,u,0)}static addValueType(a,u){a.addFieldOffset(1,u,0)}static endMapType(a){return a.endObject()}static createMapType(a,u,l){return o.startMapType(a),o.addKeyType(a,u),o.addValueType(a,l),o.endMapType(a)}}i.MapType=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsSequenceType(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSequenceType(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}elemType(a){let u=this.bb.__offset(this.bb_pos,4);return u?(a||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startSequenceType(a){a.startObject(1)}static addElemType(a,u){a.addFieldOffset(0,u,0)}static endSequenceType(a){return a.endObject()}static createSequenceType(a,u){return o.startSequenceType(a),o.addElemType(a,u),o.endSequenceType(a)}}i.SequenceType=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}nodeIndex(){return this.bb.readUint32(this.bb_pos)}srcArgIndex(){return this.bb.readInt32(this.bb_pos+4)}dstArgIndex(){return this.bb.readInt32(this.bb_pos+8)}static createEdgeEnd(a,u,l,d){return a.prep(4,12),a.writeInt32(d),a.writeInt32(l),a.writeInt32(u),a.offset()}}i.EdgeEnd=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsNodeEdge(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsNodeEdge(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}nodeIndex(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readUint32(this.bb_pos+a):0}inputEdges(a,u){let l=this.bb.__offset(this.bb_pos,6);return l?(u||new e.experimental.fbs.EdgeEnd).__init(this.bb.__vector(this.bb_pos+l)+a*12,this.bb):null}inputEdgesLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}outputEdges(a,u){let l=this.bb.__offset(this.bb_pos,8);return l?(u||new e.experimental.fbs.EdgeEnd).__init(this.bb.__vector(this.bb_pos+l)+a*12,this.bb):null}outputEdgesLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}static startNodeEdge(a){a.startObject(3)}static addNodeIndex(a,u){a.addFieldInt32(0,u,0)}static addInputEdges(a,u){a.addFieldOffset(1,u,0)}static startInputEdgesVector(a,u){a.startVector(12,u,4)}static addOutputEdges(a,u){a.addFieldOffset(2,u,0)}static startOutputEdgesVector(a,u){a.startVector(12,u,4)}static endNodeEdge(a){return a.endObject()}static createNodeEdge(a,u,l,d){return o.startNodeEdge(a),o.addNodeIndex(a,u),o.addInputEdges(a,l),o.addOutputEdges(a,d),o.endNodeEdge(a)}}i.NodeEdge=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsNode(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsNode(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}docString(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}domain(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.__string(this.bb_pos+u,a):null}sinceVersion(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readInt32(this.bb_pos+a):0}index(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.readUint32(this.bb_pos+a):0}opType(a){let u=this.bb.__offset(this.bb_pos,14);return u?this.bb.__string(this.bb_pos+u,a):null}type(){let a=this.bb.__offset(this.bb_pos,16);return a?this.bb.readInt32(this.bb_pos+a):0}executionProviderType(a){let u=this.bb.__offset(this.bb_pos,18);return u?this.bb.__string(this.bb_pos+u,a):null}inputs(a,u){let l=this.bb.__offset(this.bb_pos,20);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}inputsLength(){let a=this.bb.__offset(this.bb_pos,20);return a?this.bb.__vector_len(this.bb_pos+a):0}outputs(a,u){let l=this.bb.__offset(this.bb_pos,22);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}outputsLength(){let a=this.bb.__offset(this.bb_pos,22);return a?this.bb.__vector_len(this.bb_pos+a):0}attributes(a,u){let l=this.bb.__offset(this.bb_pos,24);return l?(u||new e.experimental.fbs.Attribute).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}attributesLength(){let a=this.bb.__offset(this.bb_pos,24);return a?this.bb.__vector_len(this.bb_pos+a):0}inputArgCounts(a){let u=this.bb.__offset(this.bb_pos,26);return u?this.bb.readInt32(this.bb.__vector(this.bb_pos+u)+a*4):0}inputArgCountsLength(){let a=this.bb.__offset(this.bb_pos,26);return a?this.bb.__vector_len(this.bb_pos+a):0}inputArgCountsArray(){let a=this.bb.__offset(this.bb_pos,26);return a?new Int32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}implicitInputs(a,u){let l=this.bb.__offset(this.bb_pos,28);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}implicitInputsLength(){let a=this.bb.__offset(this.bb_pos,28);return a?this.bb.__vector_len(this.bb_pos+a):0}static startNode(a){a.startObject(13)}static addName(a,u){a.addFieldOffset(0,u,0)}static addDocString(a,u){a.addFieldOffset(1,u,0)}static addDomain(a,u){a.addFieldOffset(2,u,0)}static addSinceVersion(a,u){a.addFieldInt32(3,u,0)}static addIndex(a,u){a.addFieldInt32(4,u,0)}static addOpType(a,u){a.addFieldOffset(5,u,0)}static addType(a,u){a.addFieldInt32(6,u,0)}static addExecutionProviderType(a,u){a.addFieldOffset(7,u,0)}static addInputs(a,u){a.addFieldOffset(8,u,0)}static createInputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startInputsVector(a,u){a.startVector(4,u,4)}static addOutputs(a,u){a.addFieldOffset(9,u,0)}static createOutputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startOutputsVector(a,u){a.startVector(4,u,4)}static addAttributes(a,u){a.addFieldOffset(10,u,0)}static createAttributesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startAttributesVector(a,u){a.startVector(4,u,4)}static addInputArgCounts(a,u){a.addFieldOffset(11,u,0)}static createInputArgCountsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addInt32(u[l]);return a.endVector()}static startInputArgCountsVector(a,u){a.startVector(4,u,4)}static addImplicitInputs(a,u){a.addFieldOffset(12,u,0)}static createImplicitInputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startImplicitInputsVector(a,u){a.startVector(4,u,4)}static endNode(a){return a.endObject()}static createNode(a,u,l,d,p,m,y,b,w,A,$,_,O,P){return o.startNode(a),o.addName(a,u),o.addDocString(a,l),o.addDomain(a,d),o.addSinceVersion(a,p),o.addIndex(a,m),o.addOpType(a,y),o.addType(a,b),o.addExecutionProviderType(a,w),o.addInputs(a,A),o.addOutputs(a,$),o.addAttributes(a,_),o.addInputArgCounts(a,O),o.addImplicitInputs(a,P),o.endNode(a)}}i.Node=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsValueInfo(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsValueInfo(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}docString(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}type(a){let u=this.bb.__offset(this.bb_pos,8);return u?(a||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startValueInfo(a){a.startObject(3)}static addName(a,u){a.addFieldOffset(0,u,0)}static addDocString(a,u){a.addFieldOffset(1,u,0)}static addType(a,u){a.addFieldOffset(2,u,0)}static endValueInfo(a){return a.endObject()}static createValueInfo(a,u,l,d){return o.startValueInfo(a),o.addName(a,u),o.addDocString(a,l),o.addType(a,d),o.endValueInfo(a)}}i.ValueInfo=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsTypeInfo(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsTypeInfo(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}denotation(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}valueType(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.readUint8(this.bb_pos+a):0}value(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.__union(a,this.bb_pos+u):null}static startTypeInfo(a){a.startObject(3)}static addDenotation(a,u){a.addFieldOffset(0,u,0)}static addValueType(a,u){a.addFieldInt8(1,u,0)}static addValue(a,u){a.addFieldOffset(2,u,0)}static endTypeInfo(a){return a.endObject()}static createTypeInfo(a,u,l,d){return o.startTypeInfo(a),o.addDenotation(a,u),o.addValueType(a,l),o.addValue(a,d),o.endTypeInfo(a)}}i.TypeInfo=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsOperatorSetId(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsOperatorSetId(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}domain(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}version(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}static startOperatorSetId(a){a.startObject(2)}static addDomain(a,u){a.addFieldOffset(0,u,0)}static addVersion(a,u){a.addFieldInt64(1,u,a.createLong(0,0))}static endOperatorSetId(a){return a.endObject()}static createOperatorSetId(a,u,l){return o.startOperatorSetId(a),o.addDomain(a,u),o.addVersion(a,l),o.endOperatorSetId(a)}}i.OperatorSetId=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsTensor(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsTensor(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}docString(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}dims(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.readInt64(this.bb.__vector(this.bb_pos+u)+a*8):this.bb.createLong(0,0)}dimsLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}dataType(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readInt32(this.bb_pos+a):0}rawData(a){let u=this.bb.__offset(this.bb_pos,12);return u?this.bb.readUint8(this.bb.__vector(this.bb_pos+u)+a):0}rawDataLength(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.__vector_len(this.bb_pos+a):0}rawDataArray(){let a=this.bb.__offset(this.bb_pos,12);return a?new Uint8Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}stringData(a,u){let l=this.bb.__offset(this.bb_pos,14);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}stringDataLength(){let a=this.bb.__offset(this.bb_pos,14);return a?this.bb.__vector_len(this.bb_pos+a):0}static startTensor(a){a.startObject(6)}static addName(a,u){a.addFieldOffset(0,u,0)}static addDocString(a,u){a.addFieldOffset(1,u,0)}static addDims(a,u){a.addFieldOffset(2,u,0)}static createDimsVector(a,u){a.startVector(8,u.length,8);for(let l=u.length-1;l>=0;l--)a.addInt64(u[l]);return a.endVector()}static startDimsVector(a,u){a.startVector(8,u,8)}static addDataType(a,u){a.addFieldInt32(3,u,0)}static addRawData(a,u){a.addFieldOffset(4,u,0)}static createRawDataVector(a,u){a.startVector(1,u.length,1);for(let l=u.length-1;l>=0;l--)a.addInt8(u[l]);return a.endVector()}static startRawDataVector(a,u){a.startVector(1,u,1)}static addStringData(a,u){a.addFieldOffset(5,u,0)}static createStringDataVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startStringDataVector(a,u){a.startVector(4,u,4)}static endTensor(a){return a.endObject()}static createTensor(a,u,l,d,p,m,y){return o.startTensor(a),o.addName(a,u),o.addDocString(a,l),o.addDims(a,d),o.addDataType(a,p),o.addRawData(a,m),o.addStringData(a,y),o.endTensor(a)}}i.Tensor=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsSparseTensor(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSparseTensor(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}values(a){let u=this.bb.__offset(this.bb_pos,4);return u?(a||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}indices(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}dims(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.readInt64(this.bb.__vector(this.bb_pos+u)+a*8):this.bb.createLong(0,0)}dimsLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}static startSparseTensor(a){a.startObject(3)}static addValues(a,u){a.addFieldOffset(0,u,0)}static addIndices(a,u){a.addFieldOffset(1,u,0)}static addDims(a,u){a.addFieldOffset(2,u,0)}static createDimsVector(a,u){a.startVector(8,u.length,8);for(let l=u.length-1;l>=0;l--)a.addInt64(u[l]);return a.endVector()}static startDimsVector(a,u){a.startVector(8,u,8)}static endSparseTensor(a){return a.endObject()}static createSparseTensor(a,u,l,d){return o.startSparseTensor(a),o.addValues(a,u),o.addIndices(a,l),o.addDims(a,d),o.endSparseTensor(a)}}i.SparseTensor=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsAttribute(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsAttribute(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}docString(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}type(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.readInt32(this.bb_pos+a):0}f(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readFloat32(this.bb_pos+a):0}i(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}s(a){let u=this.bb.__offset(this.bb_pos,14);return u?this.bb.__string(this.bb_pos+u,a):null}t(a){let u=this.bb.__offset(this.bb_pos,16);return u?(a||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}g(a){let u=this.bb.__offset(this.bb_pos,18);return u?(a||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}floats(a){let u=this.bb.__offset(this.bb_pos,20);return u?this.bb.readFloat32(this.bb.__vector(this.bb_pos+u)+a*4):0}floatsLength(){let a=this.bb.__offset(this.bb_pos,20);return a?this.bb.__vector_len(this.bb_pos+a):0}floatsArray(){let a=this.bb.__offset(this.bb_pos,20);return a?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}ints(a){let u=this.bb.__offset(this.bb_pos,22);return u?this.bb.readInt64(this.bb.__vector(this.bb_pos+u)+a*8):this.bb.createLong(0,0)}intsLength(){let a=this.bb.__offset(this.bb_pos,22);return a?this.bb.__vector_len(this.bb_pos+a):0}strings(a,u){let l=this.bb.__offset(this.bb_pos,24);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}stringsLength(){let a=this.bb.__offset(this.bb_pos,24);return a?this.bb.__vector_len(this.bb_pos+a):0}tensors(a,u){let l=this.bb.__offset(this.bb_pos,26);return l?(u||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}tensorsLength(){let a=this.bb.__offset(this.bb_pos,26);return a?this.bb.__vector_len(this.bb_pos+a):0}graphs(a,u){let l=this.bb.__offset(this.bb_pos,28);return l?(u||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}graphsLength(){let a=this.bb.__offset(this.bb_pos,28);return a?this.bb.__vector_len(this.bb_pos+a):0}static startAttribute(a){a.startObject(13)}static addName(a,u){a.addFieldOffset(0,u,0)}static addDocString(a,u){a.addFieldOffset(1,u,0)}static addType(a,u){a.addFieldInt32(2,u,0)}static addF(a,u){a.addFieldFloat32(3,u,0)}static addI(a,u){a.addFieldInt64(4,u,a.createLong(0,0))}static addS(a,u){a.addFieldOffset(5,u,0)}static addT(a,u){a.addFieldOffset(6,u,0)}static addG(a,u){a.addFieldOffset(7,u,0)}static addFloats(a,u){a.addFieldOffset(8,u,0)}static createFloatsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addFloat32(u[l]);return a.endVector()}static startFloatsVector(a,u){a.startVector(4,u,4)}static addInts(a,u){a.addFieldOffset(9,u,0)}static createIntsVector(a,u){a.startVector(8,u.length,8);for(let l=u.length-1;l>=0;l--)a.addInt64(u[l]);return a.endVector()}static startIntsVector(a,u){a.startVector(8,u,8)}static addStrings(a,u){a.addFieldOffset(10,u,0)}static createStringsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startStringsVector(a,u){a.startVector(4,u,4)}static addTensors(a,u){a.addFieldOffset(11,u,0)}static createTensorsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startTensorsVector(a,u){a.startVector(4,u,4)}static addGraphs(a,u){a.addFieldOffset(12,u,0)}static createGraphsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startGraphsVector(a,u){a.startVector(4,u,4)}static endAttribute(a){return a.endObject()}static createAttribute(a,u,l,d,p,m,y,b,w,A,$,_,O,P){return o.startAttribute(a),o.addName(a,u),o.addDocString(a,l),o.addType(a,d),o.addF(a,p),o.addI(a,m),o.addS(a,y),o.addT(a,b),o.addG(a,w),o.addFloats(a,A),o.addInts(a,$),o.addStrings(a,_),o.addTensors(a,O),o.addGraphs(a,P),o.endAttribute(a)}}i.Attribute=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsGraph(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsGraph(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}initializers(a,u){let l=this.bb.__offset(this.bb_pos,4);return l?(u||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}initializersLength(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.__vector_len(this.bb_pos+a):0}nodeArgs(a,u){let l=this.bb.__offset(this.bb_pos,6);return l?(u||new e.experimental.fbs.ValueInfo).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}nodeArgsLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}nodes(a,u){let l=this.bb.__offset(this.bb_pos,8);return l?(u||new e.experimental.fbs.Node).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}nodesLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}maxNodeIndex(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readUint32(this.bb_pos+a):0}nodeEdges(a,u){let l=this.bb.__offset(this.bb_pos,12);return l?(u||new e.experimental.fbs.NodeEdge).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}nodeEdgesLength(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.__vector_len(this.bb_pos+a):0}inputs(a,u){let l=this.bb.__offset(this.bb_pos,14);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}inputsLength(){let a=this.bb.__offset(this.bb_pos,14);return a?this.bb.__vector_len(this.bb_pos+a):0}outputs(a,u){let l=this.bb.__offset(this.bb_pos,16);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}outputsLength(){let a=this.bb.__offset(this.bb_pos,16);return a?this.bb.__vector_len(this.bb_pos+a):0}sparseInitializers(a,u){let l=this.bb.__offset(this.bb_pos,18);return l?(u||new e.experimental.fbs.SparseTensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}sparseInitializersLength(){let a=this.bb.__offset(this.bb_pos,18);return a?this.bb.__vector_len(this.bb_pos+a):0}static startGraph(a){a.startObject(8)}static addInitializers(a,u){a.addFieldOffset(0,u,0)}static createInitializersVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startInitializersVector(a,u){a.startVector(4,u,4)}static addNodeArgs(a,u){a.addFieldOffset(1,u,0)}static createNodeArgsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startNodeArgsVector(a,u){a.startVector(4,u,4)}static addNodes(a,u){a.addFieldOffset(2,u,0)}static createNodesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startNodesVector(a,u){a.startVector(4,u,4)}static addMaxNodeIndex(a,u){a.addFieldInt32(3,u,0)}static addNodeEdges(a,u){a.addFieldOffset(4,u,0)}static createNodeEdgesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startNodeEdgesVector(a,u){a.startVector(4,u,4)}static addInputs(a,u){a.addFieldOffset(5,u,0)}static createInputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startInputsVector(a,u){a.startVector(4,u,4)}static addOutputs(a,u){a.addFieldOffset(6,u,0)}static createOutputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startOutputsVector(a,u){a.startVector(4,u,4)}static addSparseInitializers(a,u){a.addFieldOffset(7,u,0)}static createSparseInitializersVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startSparseInitializersVector(a,u){a.startVector(4,u,4)}static endGraph(a){return a.endObject()}static createGraph(a,u,l,d,p,m,y,b,w){return o.startGraph(a),o.addInitializers(a,u),o.addNodeArgs(a,l),o.addNodes(a,d),o.addMaxNodeIndex(a,p),o.addNodeEdges(a,m),o.addInputs(a,y),o.addOutputs(a,b),o.addSparseInitializers(a,w),o.endGraph(a)}}i.Graph=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsModel(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsModel(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}irVersion(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}opsetImport(a,u){let l=this.bb.__offset(this.bb_pos,6);return l?(u||new e.experimental.fbs.OperatorSetId).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}opsetImportLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}producerName(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.__string(this.bb_pos+u,a):null}producerVersion(a){let u=this.bb.__offset(this.bb_pos,10);return u?this.bb.__string(this.bb_pos+u,a):null}domain(a){let u=this.bb.__offset(this.bb_pos,12);return u?this.bb.__string(this.bb_pos+u,a):null}modelVersion(){let a=this.bb.__offset(this.bb_pos,14);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}docString(a){let u=this.bb.__offset(this.bb_pos,16);return u?this.bb.__string(this.bb_pos+u,a):null}graph(a){let u=this.bb.__offset(this.bb_pos,18);return u?(a||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}graphDocString(a){let u=this.bb.__offset(this.bb_pos,20);return u?this.bb.__string(this.bb_pos+u,a):null}static startModel(a){a.startObject(9)}static addIrVersion(a,u){a.addFieldInt64(0,u,a.createLong(0,0))}static addOpsetImport(a,u){a.addFieldOffset(1,u,0)}static createOpsetImportVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startOpsetImportVector(a,u){a.startVector(4,u,4)}static addProducerName(a,u){a.addFieldOffset(2,u,0)}static addProducerVersion(a,u){a.addFieldOffset(3,u,0)}static addDomain(a,u){a.addFieldOffset(4,u,0)}static addModelVersion(a,u){a.addFieldInt64(5,u,a.createLong(0,0))}static addDocString(a,u){a.addFieldOffset(6,u,0)}static addGraph(a,u){a.addFieldOffset(7,u,0)}static addGraphDocString(a,u){a.addFieldOffset(8,u,0)}static endModel(a){return a.endObject()}static createModel(a,u,l,d,p,m,y,b,w,A){return o.startModel(a),o.addIrVersion(a,u),o.addOpsetImport(a,l),o.addProducerName(a,d),o.addProducerVersion(a,p),o.addDomain(a,m),o.addModelVersion(a,y),o.addDocString(a,b),o.addGraph(a,w),o.addGraphDocString(a,A),o.endModel(a)}}i.Model=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsKernelCreateInfos(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsKernelCreateInfos(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}nodeIndices(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.readUint32(this.bb.__vector(this.bb_pos+u)+a*4):0}nodeIndicesLength(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.__vector_len(this.bb_pos+a):0}nodeIndicesArray(){let a=this.bb.__offset(this.bb_pos,4);return a?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}kernelDefHashes(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.readUint64(this.bb.__vector(this.bb_pos+u)+a*8):this.bb.createLong(0,0)}kernelDefHashesLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}static startKernelCreateInfos(a){a.startObject(2)}static addNodeIndices(a,u){a.addFieldOffset(0,u,0)}static createNodeIndicesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addInt32(u[l]);return a.endVector()}static startNodeIndicesVector(a,u){a.startVector(4,u,4)}static addKernelDefHashes(a,u){a.addFieldOffset(1,u,0)}static createKernelDefHashesVector(a,u){a.startVector(8,u.length,8);for(let l=u.length-1;l>=0;l--)a.addInt64(u[l]);return a.endVector()}static startKernelDefHashesVector(a,u){a.startVector(8,u,8)}static endKernelCreateInfos(a){return a.endObject()}static createKernelCreateInfos(a,u,l){return o.startKernelCreateInfos(a),o.addNodeIndices(a,u),o.addKernelDefHashes(a,l),o.endKernelCreateInfos(a)}}i.KernelCreateInfos=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsSubGraphSessionState(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSubGraphSessionState(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}graphId(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}sessionState(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.SessionState).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startSubGraphSessionState(a){a.startObject(2)}static addGraphId(a,u){a.addFieldOffset(0,u,0)}static addSessionState(a,u){a.addFieldOffset(1,u,0)}static endSubGraphSessionState(a){let u=a.endObject();return a.requiredField(u,4),u}static createSubGraphSessionState(a,u,l){return o.startSubGraphSessionState(a),o.addGraphId(a,u),o.addSessionState(a,l),o.endSubGraphSessionState(a)}}i.SubGraphSessionState=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsSessionState(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSessionState(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}kernels(a){let u=this.bb.__offset(this.bb_pos,4);return u?(a||new e.experimental.fbs.KernelCreateInfos).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}subGraphSessionStates(a,u){let l=this.bb.__offset(this.bb_pos,6);return l?(u||new e.experimental.fbs.SubGraphSessionState).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}subGraphSessionStatesLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}static startSessionState(a){a.startObject(2)}static addKernels(a,u){a.addFieldOffset(0,u,0)}static addSubGraphSessionStates(a,u){a.addFieldOffset(1,u,0)}static createSubGraphSessionStatesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startSubGraphSessionStatesVector(a,u){a.startVector(4,u,4)}static endSessionState(a){return a.endObject()}static createSessionState(a,u,l){return o.startSessionState(a),o.addKernels(a,u),o.addSubGraphSessionStates(a,l),o.endSessionState(a)}}i.SessionState=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsInferenceSession(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsInferenceSession(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static bufferHasIdentifier(a){return a.__has_identifier("ORTM")}ortVersion(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}model(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.Model).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}sessionState(a){let u=this.bb.__offset(this.bb_pos,8);return u?(a||new e.experimental.fbs.SessionState).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startInferenceSession(a){a.startObject(3)}static addOrtVersion(a,u){a.addFieldOffset(0,u,0)}static addModel(a,u){a.addFieldOffset(1,u,0)}static addSessionState(a,u){a.addFieldOffset(2,u,0)}static endInferenceSession(a){return a.endObject()}static finishInferenceSessionBuffer(a,u){a.finish(u,"ORTM")}static finishSizePrefixedInferenceSessionBuffer(a,u){a.finish(u,"ORTM",!0)}static createInferenceSession(a,u,l,d){return o.startInferenceSession(a),o.addOrtVersion(a,u),o.addModel(a,l),o.addSessionState(a,d),o.endInferenceSession(a)}}i.InferenceSession=o})(n=t.fbs||={})})(r=e.experimental||={})})(fe||={})});var Cd=it((i$,Ed)=>{"use strict";Ed.exports=G0;function G0(r,e){for(var n=new Array(arguments.length-1),t=0,o=2,i=!0;o<arguments.length;)n[t++]=arguments[o++];return new Promise(function(a,u){n[t]=function(d){if(i)if(i=!1,d)u(d);else{for(var p=new Array(arguments.length-1),m=0;m<p.length;)p[m++]=arguments[m];a.apply(null,p)}};try{r.apply(e||null,n)}catch(l){i&&(i=!1,u(l))}})}});var Bd=it(Dd=>{"use strict";var Hi=Dd;Hi.length=function(e){var n=e.length;if(!n)return 0;for(var t=0;--n%4>1&&e.charAt(n)==="=";)++t;return Math.ceil(e.length*3)/4-t};var Yn=new Array(64),kd=new Array(123);for(vr=0;vr<64;)kd[Yn[vr]=vr<26?vr+65:vr<52?vr+71:vr<62?vr-4:vr-59|43]=vr++;var vr;Hi.encode=function(e,n,t){for(var o=null,i=[],s=0,a=0,u;n<t;){var l=e[n++];switch(a){case 0:i[s++]=Yn[l>>2],u=(l&3)<<4,a=1;break;case 1:i[s++]=Yn[u|l>>4],u=(l&15)<<2,a=2;break;case 2:i[s++]=Yn[u|l>>6],i[s++]=Yn[l&63],a=0;break}s>8191&&((o||(o=[])).push(String.fromCharCode.apply(String,i)),s=0)}return a&&(i[s++]=Yn[u],i[s++]=61,a===1&&(i[s++]=61)),o?(s&&o.push(String.fromCharCode.apply(String,i.slice(0,s))),o.join("")):String.fromCharCode.apply(String,i.slice(0,s))};var Pd="invalid encoding";Hi.decode=function(e,n,t){for(var o=t,i=0,s,a=0;a<e.length;){var u=e.charCodeAt(a++);if(u===61&&i>1)break;if((u=kd[u])===void 0)throw Error(Pd);switch(i){case 0:s=u,i=1;break;case 1:n[t++]=s<<2|(u&48)>>4,s=u,i=2;break;case 2:n[t++]=(s&15)<<4|(u&60)>>2,s=u,i=3;break;case 3:n[t++]=(s&3)<<6|u,i=0;break}}if(i===1)throw Error(Pd);return t-o};Hi.test=function(e){return/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e)}});var zd=it((s$,Rd)=>{"use strict";Rd.exports=qi;function qi(){this._listeners={}}qi.prototype.on=function(e,n,t){return(this._listeners[e]||(this._listeners[e]=[])).push({fn:n,ctx:t||this}),this};qi.prototype.off=function(e,n){if(e===void 0)this._listeners={};else if(n===void 0)this._listeners[e]=[];else for(var t=this._listeners[e],o=0;o<t.length;)t[o].fn===n?t.splice(o,1):++o;return this};qi.prototype.emit=function(e){var n=this._listeners[e];if(n){for(var t=[],o=1;o<arguments.length;)t.push(arguments[o++]);for(o=0;o<n.length;)n[o].fn.apply(n[o++].ctx,t)}return this}});var Gd=it((u$,Vd)=>{"use strict";Vd.exports=Nd(Nd);function Nd(r){return typeof Float32Array<"u"?function(){var e=new Float32Array([-0]),n=new Uint8Array(e.buffer),t=n[3]===128;function o(u,l,d){e[0]=u,l[d]=n[0],l[d+1]=n[1],l[d+2]=n[2],l[d+3]=n[3]}function i(u,l,d){e[0]=u,l[d]=n[3],l[d+1]=n[2],l[d+2]=n[1],l[d+3]=n[0]}r.writeFloatLE=t?o:i,r.writeFloatBE=t?i:o;function s(u,l){return n[0]=u[l],n[1]=u[l+1],n[2]=u[l+2],n[3]=u[l+3],e[0]}function a(u,l){return n[3]=u[l],n[2]=u[l+1],n[1]=u[l+2],n[0]=u[l+3],e[0]}r.readFloatLE=t?s:a,r.readFloatBE=t?a:s}():function(){function e(t,o,i,s){var a=o<0?1:0;if(a&&(o=-o),o===0)t(1/o>0?0:2147483648,i,s);else if(isNaN(o))t(2143289344,i,s);else if(o>34028234663852886e22)t((a<<31|2139095040)>>>0,i,s);else if(o<11754943508222875e-54)t((a<<31|Math.round(o/1401298464324817e-60))>>>0,i,s);else{var u=Math.floor(Math.log(o)/Math.LN2),l=Math.round(o*Math.pow(2,-u)*8388608)&8388607;t((a<<31|u+127<<23|l)>>>0,i,s)}}r.writeFloatLE=e.bind(null,Md),r.writeFloatBE=e.bind(null,Ld);function n(t,o,i){var s=t(o,i),a=(s>>31)*2+1,u=s>>>23&255,l=s&8388607;return u===255?l?NaN:a*(1/0):u===0?a*1401298464324817e-60*l:a*Math.pow(2,u-150)*(l+8388608)}r.readFloatLE=n.bind(null,Fd),r.readFloatBE=n.bind(null,Ud)}(),typeof Float64Array<"u"?function(){var e=new Float64Array([-0]),n=new Uint8Array(e.buffer),t=n[7]===128;function o(u,l,d){e[0]=u,l[d]=n[0],l[d+1]=n[1],l[d+2]=n[2],l[d+3]=n[3],l[d+4]=n[4],l[d+5]=n[5],l[d+6]=n[6],l[d+7]=n[7]}function i(u,l,d){e[0]=u,l[d]=n[7],l[d+1]=n[6],l[d+2]=n[5],l[d+3]=n[4],l[d+4]=n[3],l[d+5]=n[2],l[d+6]=n[1],l[d+7]=n[0]}r.writeDoubleLE=t?o:i,r.writeDoubleBE=t?i:o;function s(u,l){return n[0]=u[l],n[1]=u[l+1],n[2]=u[l+2],n[3]=u[l+3],n[4]=u[l+4],n[5]=u[l+5],n[6]=u[l+6],n[7]=u[l+7],e[0]}function a(u,l){return n[7]=u[l],n[6]=u[l+1],n[5]=u[l+2],n[4]=u[l+3],n[3]=u[l+4],n[2]=u[l+5],n[1]=u[l+6],n[0]=u[l+7],e[0]}r.readDoubleLE=t?s:a,r.readDoubleBE=t?a:s}():function(){function e(t,o,i,s,a,u){var l=s<0?1:0;if(l&&(s=-s),s===0)t(0,a,u+o),t(1/s>0?0:2147483648,a,u+i);else if(isNaN(s))t(0,a,u+o),t(2146959360,a,u+i);else if(s>17976931348623157e292)t(0,a,u+o),t((l<<31|2146435072)>>>0,a,u+i);else{var d;if(s<22250738585072014e-324)d=s/5e-324,t(d>>>0,a,u+o),t((l<<31|d/4294967296)>>>0,a,u+i);else{var p=Math.floor(Math.log(s)/Math.LN2);p===1024&&(p=1023),d=s*Math.pow(2,-p),t(d*4503599627370496>>>0,a,u+o),t((l<<31|p+1023<<20|d*1048576&1048575)>>>0,a,u+i)}}}r.writeDoubleLE=e.bind(null,Md,0,4),r.writeDoubleBE=e.bind(null,Ld,4,0);function n(t,o,i,s,a){var u=t(s,a+o),l=t(s,a+i),d=(l>>31)*2+1,p=l>>>20&2047,m=4294967296*(l&1048575)+u;return p===2047?m?NaN:d*(1/0):p===0?d*5e-324*m:d*Math.pow(2,p-1075)*(m+4503599627370496)}r.readDoubleLE=n.bind(null,Fd,0,4),r.readDoubleBE=n.bind(null,Ud,4,0)}(),r}function Md(r,e,n){e[n]=r&255,e[n+1]=r>>>8&255,e[n+2]=r>>>16&255,e[n+3]=r>>>24}function Ld(r,e,n){e[n]=r>>>24,e[n+1]=r>>>16&255,e[n+2]=r>>>8&255,e[n+3]=r&255}function Fd(r,e){return(r[e]|r[e+1]<<8|r[e+2]<<16|r[e+3]<<24)>>>0}function Ud(r,e){return(r[e]<<24|r[e+1]<<16|r[e+2]<<8|r[e+3])>>>0}});var Wd=it((exports,module)=>{"use strict";module.exports=inquire;function inquire(moduleName){try{var mod=eval("quire".replace(/^/,"re"))(moduleName);if(mod&&(mod.length||Object.keys(mod).length))return mod}catch(r){}return null}});var qd=it(Hd=>{"use strict";var Ss=Hd;Ss.length=function(e){for(var n=0,t=0,o=0;o<e.length;++o)t=e.charCodeAt(o),t<128?n+=1:t<2048?n+=2:(t&64512)===55296&&(e.charCodeAt(o+1)&64512)===56320?(++o,n+=4):n+=3;return n};Ss.read=function(e,n,t){var o=t-n;if(o<1)return"";for(var i=null,s=[],a=0,u;n<t;)u=e[n++],u<128?s[a++]=u:u>191&&u<224?s[a++]=(u&31)<<6|e[n++]&63:u>239&&u<365?(u=((u&7)<<18|(e[n++]&63)<<12|(e[n++]&63)<<6|e[n++]&63)-65536,s[a++]=55296+(u>>10),s[a++]=56320+(u&1023)):s[a++]=(u&15)<<12|(e[n++]&63)<<6|e[n++]&63,a>8191&&((i||(i=[])).push(String.fromCharCode.apply(String,s)),a=0);return i?(a&&i.push(String.fromCharCode.apply(String,s.slice(0,a))),i.join("")):String.fromCharCode.apply(String,s.slice(0,a))};Ss.write=function(e,n,t){for(var o=t,i,s,a=0;a<e.length;++a)i=e.charCodeAt(a),i<128?n[t++]=i:i<2048?(n[t++]=i>>6|192,n[t++]=i&63|128):(i&64512)===55296&&((s=e.charCodeAt(a+1))&64512)===56320?(i=65536+((i&1023)<<10)+(s&1023),++a,n[t++]=i>>18|240,n[t++]=i>>12&63|128,n[t++]=i>>6&63|128,n[t++]=i&63|128):(n[t++]=i>>12|224,n[t++]=i>>6&63|128,n[t++]=i&63|128);return t-o}});var Kd=it((d$,jd)=>{"use strict";jd.exports=W0;function W0(r,e,n){var t=n||8192,o=t>>>1,i=null,s=t;return function(u){if(u<1||u>o)return r(u);s+u>t&&(i=r(t),s=0);var l=e.call(i,s,s+=u);return s&7&&(s=(s|7)+1),l}}});var Xd=it((c$,Yd)=>{"use strict";Yd.exports=Tt;var zo=on();function Tt(r,e){this.lo=r>>>0,this.hi=e>>>0}var Tn=Tt.zero=new Tt(0,0);Tn.toNumber=function(){return 0};Tn.zzEncode=Tn.zzDecode=function(){return this};Tn.length=function(){return 1};var H0=Tt.zeroHash="\0\0\0\0\0\0\0\0";Tt.fromNumber=function(e){if(e===0)return Tn;var n=e<0;n&&(e=-e);var t=e>>>0,o=(e-t)/4294967296>>>0;return n&&(o=~o>>>0,t=~t>>>0,++t>4294967295&&(t=0,++o>4294967295&&(o=0))),new Tt(t,o)};Tt.from=function(e){if(typeof e=="number")return Tt.fromNumber(e);if(zo.isString(e))if(zo.Long)e=zo.Long.fromString(e);else return Tt.fromNumber(parseInt(e,10));return e.low||e.high?new Tt(e.low>>>0,e.high>>>0):Tn};Tt.prototype.toNumber=function(e){if(!e&&this.hi>>>31){var n=~this.lo+1>>>0,t=~this.hi>>>0;return n||(t=t+1>>>0),-(n+t*4294967296)}return this.lo+this.hi*4294967296};Tt.prototype.toLong=function(e){return zo.Long?new zo.Long(this.lo|0,this.hi|0,!!e):{low:this.lo|0,high:this.hi|0,unsigned:!!e}};var nn=String.prototype.charCodeAt;Tt.fromHash=function(e){return e===H0?Tn:new Tt((nn.call(e,0)|nn.call(e,1)<<8|nn.call(e,2)<<16|nn.call(e,3)<<24)>>>0,(nn.call(e,4)|nn.call(e,5)<<8|nn.call(e,6)<<16|nn.call(e,7)<<24)>>>0)};Tt.prototype.toHash=function(){return String.fromCharCode(this.lo&255,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,this.hi&255,this.hi>>>8&255,this.hi>>>16&255,this.hi>>>24)};Tt.prototype.zzEncode=function(){var e=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^e)>>>0,this.lo=(this.lo<<1^e)>>>0,this};Tt.prototype.zzDecode=function(){var e=-(this.lo&1);return this.lo=((this.lo>>>1|this.hi<<31)^e)>>>0,this.hi=(this.hi>>>1^e)>>>0,this};Tt.prototype.length=function(){var e=this.lo,n=(this.lo>>>28|this.hi<<4)>>>0,t=this.hi>>>24;return t===0?n===0?e<16384?e<128?1:2:e<2097152?3:4:n<16384?n<128?5:6:n<2097152?7:8:t<128?9:10}});var on=it(Is=>{"use strict";var he=Is;he.asPromise=Cd();he.base64=Bd();he.EventEmitter=zd();he.float=Gd();he.inquire=Wd();he.utf8=qd();he.pool=Kd();he.LongBits=Xd();he.isNode=!!(typeof global<"u"&&global&&global.process&&global.process.versions&&global.process.versions.node);he.global=he.isNode&&global||typeof window<"u"&&window||typeof self<"u"&&self||Is;he.emptyArray=Object.freeze?Object.freeze([]):[];he.emptyObject=Object.freeze?Object.freeze({}):{};he.isInteger=Number.isInteger||function(e){return typeof e=="number"&&isFinite(e)&&Math.floor(e)===e};he.isString=function(e){return typeof e=="string"||e instanceof String};he.isObject=function(e){return e&&typeof e=="object"};he.isset=he.isSet=function(e,n){var t=e[n];return t!=null&&e.hasOwnProperty(n)?typeof t!="object"||(Array.isArray(t)?t.length:Object.keys(t).length)>0:!1};he.Buffer=function(){try{var r=he.inquire("buffer").Buffer;return r.prototype.utf8Write?r:null}catch{return null}}();he._Buffer_from=null;he._Buffer_allocUnsafe=null;he.newBuffer=function(e){return typeof e=="number"?he.Buffer?he._Buffer_allocUnsafe(e):new he.Array(e):he.Buffer?he._Buffer_from(e):typeof Uint8Array>"u"?e:new Uint8Array(e)};he.Array=typeof Uint8Array<"u"?Uint8Array:Array;he.Long=he.global.dcodeIO&&he.global.dcodeIO.Long||he.global.Long||he.inquire("long");he.key2Re=/^true|false|0|1$/;he.key32Re=/^-?(?:0|[1-9][0-9]*)$/;he.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;he.longToHash=function(e){return e?he.LongBits.from(e).toHash():he.LongBits.zeroHash};he.longFromHash=function(e,n){var t=he.LongBits.fromHash(e);return he.Long?he.Long.fromBits(t.lo,t.hi,n):t.toNumber(!!n)};function Zd(r,e,n){for(var t=Object.keys(e),o=0;o<t.length;++o)(r[t[o]]===void 0||!n)&&(r[t[o]]=e[t[o]]);return r}he.merge=Zd;he.lcFirst=function(e){return e.charAt(0).toLowerCase()+e.substring(1)};function Jd(r){function e(n,t){if(!(this instanceof e))return new e(n,t);Object.defineProperty(this,"message",{get:function(){return n}}),Error.captureStackTrace?Error.captureStackTrace(this,e):Object.defineProperty(this,"stack",{value:new Error().stack||""}),t&&Zd(this,t)}return e.prototype=Object.create(Error.prototype,{constructor:{value:e,writable:!0,enumerable:!1,configurable:!0},name:{get:function(){return r},set:void 0,enumerable:!1,configurable:!0},toString:{value:function(){return this.name+": "+this.message},writable:!0,enumerable:!1,configurable:!0}}),e}he.newError=Jd;he.ProtocolError=Jd("ProtocolError");he.oneOfGetter=function(e){for(var n={},t=0;t<e.length;++t)n[e[t]]=1;return function(){for(var o=Object.keys(this),i=o.length-1;i>-1;--i)if(n[o[i]]===1&&this[o[i]]!==void 0&&this[o[i]]!==null)return o[i]}};he.oneOfSetter=function(e){return function(n){for(var t=0;t<e.length;++t)e[t]!==n&&delete this[e[t]]}};he.toJSONOptions={longs:String,enums:String,bytes:String,json:!0};he._configure=function(){var r=he.Buffer;if(!r){he._Buffer_from=he._Buffer_allocUnsafe=null;return}he._Buffer_from=r.from!==Uint8Array.from&&r.from||function(n,t){return new r(n,t)},he._Buffer_allocUnsafe=r.allocUnsafe||function(n){return new r(n)}}});var Ds=it((p$,rc)=>{"use strict";rc.exports=je;var sr=on(),As,ji=sr.LongBits,Qd=sr.base64,ec=sr.utf8;function No(r,e,n){this.fn=r,this.len=e,this.next=void 0,this.val=n}function Es(){}function q0(r){this.head=r.head,this.tail=r.tail,this.len=r.len,this.next=r.states}function je(){this.len=0,this.head=new No(Es,0,0),this.tail=this.head,this.states=null}var tc=function(){return sr.Buffer?function(){return(je.create=function(){return new As})()}:function(){return new je}};je.create=tc();je.alloc=function(e){return new sr.Array(e)};sr.Array!==Array&&(je.alloc=sr.pool(je.alloc,sr.Array.prototype.subarray));je.prototype._push=function(e,n,t){return this.tail=this.tail.next=new No(e,n,t),this.len+=n,this};function Cs(r,e,n){e[n]=r&255}function j0(r,e,n){for(;r>127;)e[n++]=r&127|128,r>>>=7;e[n]=r}function Ps(r,e){this.len=r,this.next=void 0,this.val=e}Ps.prototype=Object.create(No.prototype);Ps.prototype.fn=j0;je.prototype.uint32=function(e){return this.len+=(this.tail=this.tail.next=new Ps((e=e>>>0)<128?1:e<16384?2:e<2097152?3:e<268435456?4:5,e)).len,this};je.prototype.int32=function(e){return e<0?this._push(ks,10,ji.fromNumber(e)):this.uint32(e)};je.prototype.sint32=function(e){return this.uint32((e<<1^e>>31)>>>0)};function ks(r,e,n){for(;r.hi;)e[n++]=r.lo&127|128,r.lo=(r.lo>>>7|r.hi<<25)>>>0,r.hi>>>=7;for(;r.lo>127;)e[n++]=r.lo&127|128,r.lo=r.lo>>>7;e[n++]=r.lo}je.prototype.uint64=function(e){var n=ji.from(e);return this._push(ks,n.length(),n)};je.prototype.int64=je.prototype.uint64;je.prototype.sint64=function(e){var n=ji.from(e).zzEncode();return this._push(ks,n.length(),n)};je.prototype.bool=function(e){return this._push(Cs,1,e?1:0)};function Os(r,e,n){e[n]=r&255,e[n+1]=r>>>8&255,e[n+2]=r>>>16&255,e[n+3]=r>>>24}je.prototype.fixed32=function(e){return this._push(Os,4,e>>>0)};je.prototype.sfixed32=je.prototype.fixed32;je.prototype.fixed64=function(e){var n=ji.from(e);return this._push(Os,4,n.lo)._push(Os,4,n.hi)};je.prototype.sfixed64=je.prototype.fixed64;je.prototype.float=function(e){return this._push(sr.float.writeFloatLE,4,e)};je.prototype.double=function(e){return this._push(sr.float.writeDoubleLE,8,e)};var K0=sr.Array.prototype.set?function(e,n,t){n.set(e,t)}:function(e,n,t){for(var o=0;o<e.length;++o)n[t+o]=e[o]};je.prototype.bytes=function(e){var n=e.length>>>0;if(!n)return this._push(Cs,1,0);if(sr.isString(e)){var t=je.alloc(n=Qd.length(e));Qd.decode(e,t,0),e=t}return this.uint32(n)._push(K0,n,e)};je.prototype.string=function(e){var n=ec.length(e);return n?this.uint32(n)._push(ec.write,n,e):this._push(Cs,1,0)};je.prototype.fork=function(){return this.states=new q0(this),this.head=this.tail=new No(Es,0,0),this.len=0,this};je.prototype.reset=function(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new No(Es,0,0),this.len=0),this};je.prototype.ldelim=function(){var e=this.head,n=this.tail,t=this.len;return this.reset().uint32(t),t&&(this.tail.next=e.next,this.tail=n,this.len+=t),this};je.prototype.finish=function(){for(var e=this.head.next,n=this.constructor.alloc(this.len),t=0;e;)e.fn(e.val,n,t),t+=e.len,e=e.next;return n};je._configure=function(r){As=r,je.create=tc(),As._configure()}});var ic=it((h$,oc)=>{"use strict";oc.exports=Ar;var nc=Ds();(Ar.prototype=Object.create(nc.prototype)).constructor=Ar;var an=on();function Ar(){nc.call(this)}Ar._configure=function(){Ar.alloc=an._Buffer_allocUnsafe,Ar.writeBytesBuffer=an.Buffer&&an.Buffer.prototype instanceof Uint8Array&&an.Buffer.prototype.set.name==="set"?function(e,n,t){n.set(e,t)}:function(e,n,t){if(e.copy)e.copy(n,t,0,e.length);else for(var o=0;o<e.length;)n[t++]=e[o++]}};Ar.prototype.bytes=function(e){an.isString(e)&&(e=an._Buffer_from(e,"base64"));var n=e.length>>>0;return this.uint32(n),n&&this._push(Ar.writeBytesBuffer,n,e),this};function Y0(r,e,n){r.length<40?an.utf8.write(r,e,n):e.utf8Write?e.utf8Write(r,n):e.write(r,n)}Ar.prototype.string=function(e){var n=an.Buffer.byteLength(e);return this.uint32(n),n&&this._push(Y0,n,e),this};Ar._configure()});var zs=it((m$,dc)=>{"use strict";dc.exports=ft;var Or=on(),Rs,uc=Or.LongBits,X0=Or.utf8;function wr(r,e){return RangeError("index out of range: "+r.pos+" + "+(e||1)+" > "+r.len)}function ft(r){this.buf=r,this.pos=0,this.len=r.length}var ac=typeof Uint8Array<"u"?function(e){if(e instanceof Uint8Array||Array.isArray(e))return new ft(e);throw Error("illegal buffer")}:function(e){if(Array.isArray(e))return new ft(e);throw Error("illegal buffer")},lc=function(){return Or.Buffer?function(n){return(ft.create=function(o){return Or.Buffer.isBuffer(o)?new Rs(o):ac(o)})(n)}:ac};ft.create=lc();ft.prototype._slice=Or.Array.prototype.subarray||Or.Array.prototype.slice;ft.prototype.uint32=function(){var e=4294967295;return function(){if(e=(this.buf[this.pos]&127)>>>0,this.buf[this.pos++]<128||(e=(e|(this.buf[this.pos]&127)<<7)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<14)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<21)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&15)<<28)>>>0,this.buf[this.pos++]<128))return e;if((this.pos+=5)>this.len)throw this.pos=this.len,wr(this,10);return e}}();ft.prototype.int32=function(){return this.uint32()|0};ft.prototype.sint32=function(){var e=this.uint32();return e>>>1^-(e&1)|0};function Bs(){var r=new uc(0,0),e=0;if(this.len-this.pos>4){for(;e<4;++e)if(r.lo=(r.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return r;if(r.lo=(r.lo|(this.buf[this.pos]&127)<<28)>>>0,r.hi=(r.hi|(this.buf[this.pos]&127)>>4)>>>0,this.buf[this.pos++]<128)return r;e=0}else{for(;e<3;++e){if(this.pos>=this.len)throw wr(this);if(r.lo=(r.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return r}return r.lo=(r.lo|(this.buf[this.pos++]&127)<<e*7)>>>0,r}if(this.len-this.pos>4){for(;e<5;++e)if(r.hi=(r.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return r}else for(;e<5;++e){if(this.pos>=this.len)throw wr(this);if(r.hi=(r.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return r}throw Error("invalid varint encoding")}ft.prototype.bool=function(){return this.uint32()!==0};function Ki(r,e){return(r[e-4]|r[e-3]<<8|r[e-2]<<16|r[e-1]<<24)>>>0}ft.prototype.fixed32=function(){if(this.pos+4>this.len)throw wr(this,4);return Ki(this.buf,this.pos+=4)};ft.prototype.sfixed32=function(){if(this.pos+4>this.len)throw wr(this,4);return Ki(this.buf,this.pos+=4)|0};function sc(){if(this.pos+8>this.len)throw wr(this,8);return new uc(Ki(this.buf,this.pos+=4),Ki(this.buf,this.pos+=4))}ft.prototype.float=function(){if(this.pos+4>this.len)throw wr(this,4);var e=Or.float.readFloatLE(this.buf,this.pos);return this.pos+=4,e};ft.prototype.double=function(){if(this.pos+8>this.len)throw wr(this,4);var e=Or.float.readDoubleLE(this.buf,this.pos);return this.pos+=8,e};ft.prototype.bytes=function(){var e=this.uint32(),n=this.pos,t=this.pos+e;if(t>this.len)throw wr(this,e);return this.pos+=e,Array.isArray(this.buf)?this.buf.slice(n,t):n===t?new this.buf.constructor(0):this._slice.call(this.buf,n,t)};ft.prototype.string=function(){var e=this.bytes();return X0.read(e,0,e.length)};ft.prototype.skip=function(e){if(typeof e=="number"){if(this.pos+e>this.len)throw wr(this,e);this.pos+=e}else do if(this.pos>=this.len)throw wr(this);while(this.buf[this.pos++]&128);return this};ft.prototype.skipType=function(r){switch(r){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;(r=this.uint32()&7)!==4;)this.skipType(r);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+r+" at offset "+this.pos)}return this};ft._configure=function(r){Rs=r,ft.create=lc(),Rs._configure();var e=Or.Long?"toLong":"toNumber";Or.merge(ft.prototype,{int64:function(){return Bs.call(this)[e](!1)},uint64:function(){return Bs.call(this)[e](!0)},sint64:function(){return Bs.call(this).zzDecode()[e](!1)},fixed64:function(){return sc.call(this)[e](!0)},sfixed64:function(){return sc.call(this)[e](!1)}})}});var hc=it((g$,pc)=>{"use strict";pc.exports=$n;var fc=zs();($n.prototype=Object.create(fc.prototype)).constructor=$n;var cc=on();function $n(r){fc.call(this,r)}$n._configure=function(){cc.Buffer&&($n.prototype._slice=cc.Buffer.prototype.slice)};$n.prototype.string=function(){var e=this.uint32();return this.buf.utf8Slice?this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+e,this.len)):this.buf.toString("utf-8",this.pos,this.pos=Math.min(this.pos+e,this.len))};$n._configure()});var gc=it((b$,mc)=>{"use strict";mc.exports=Mo;var Ns=on();(Mo.prototype=Object.create(Ns.EventEmitter.prototype)).constructor=Mo;function Mo(r,e,n){if(typeof r!="function")throw TypeError("rpcImpl must be a function");Ns.EventEmitter.call(this),this.rpcImpl=r,this.requestDelimited=!!e,this.responseDelimited=!!n}Mo.prototype.rpcCall=function r(e,n,t,o,i){if(!o)throw TypeError("request must be specified");var s=this;if(!i)return Ns.asPromise(r,s,e,n,t,o);if(!s.rpcImpl){setTimeout(function(){i(Error("already ended"))},0);return}try{return s.rpcImpl(e,n[s.requestDelimited?"encodeDelimited":"encode"](o).finish(),function(u,l){if(u)return s.emit("error",u,e),i(u);if(l===null){s.end(!0);return}if(!(l instanceof t))try{l=t[s.responseDelimited?"decodeDelimited":"decode"](l)}catch(d){return s.emit("error",d,e),i(d)}return s.emit("data",l,e),i(null,l)})}catch(a){s.emit("error",a,e),setTimeout(function(){i(a)},0);return}};Mo.prototype.end=function(e){return this.rpcImpl&&(e||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this}});var yc=it(bc=>{"use strict";var Z0=bc;Z0.Service=gc()});var wc=it((v$,vc)=>{"use strict";vc.exports={}});var Tc=it(_c=>{"use strict";var Zt=_c;Zt.build="minimal";Zt.Writer=Ds();Zt.BufferWriter=ic();Zt.Reader=zs();Zt.BufferReader=hc();Zt.util=on();Zt.rpc=yc();Zt.roots=wc();Zt.configure=xc;function xc(){Zt.util._configure(),Zt.Writer._configure(Zt.BufferWriter),Zt.Reader._configure(Zt.BufferReader)}xc()});var Sc=it((x$,$c)=>{"use strict";$c.exports=Tc()});var Xn=it((_$,Ic)=>{"use strict";var st=Sc(),ee=st.Reader,pt=st.Writer,C=st.util,I=st.roots.default||(st.roots.default={});I.onnx=function(){var r={};return r.Version=function(){var e={},n=Object.create(e);return n[e[0]="_START_VERSION"]=0,n[e[1]="IR_VERSION_2017_10_10"]=1,n[e[2]="IR_VERSION_2017_10_30"]=2,n[e[3]="IR_VERSION_2017_11_3"]=3,n[e[4]="IR_VERSION_2019_1_22"]=4,n[e[5]="IR_VERSION_2019_3_18"]=5,n[e[6]="IR_VERSION_2019_9_19"]=6,n[e[7]="IR_VERSION_2020_5_8"]=7,n[e[8]="IR_VERSION_2021_7_30"]=8,n[e[9]="IR_VERSION"]=9,n}(),r.AttributeProto=function(){function e(n){if(this.floats=[],this.ints=[],this.strings=[],this.tensors=[],this.graphs=[],this.sparseTensors=[],this.typeProtos=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.name="",e.prototype.refAttrName="",e.prototype.docString="",e.prototype.type=0,e.prototype.f=0,e.prototype.i=C.Long?C.Long.fromBits(0,0,!1):0,e.prototype.s=C.newBuffer([]),e.prototype.t=null,e.prototype.g=null,e.prototype.sparseTensor=null,e.prototype.tp=null,e.prototype.floats=C.emptyArray,e.prototype.ints=C.emptyArray,e.prototype.strings=C.emptyArray,e.prototype.tensors=C.emptyArray,e.prototype.graphs=C.emptyArray,e.prototype.sparseTensors=C.emptyArray,e.prototype.typeProtos=C.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=pt.create()),t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(10).string(t.name),t.f!=null&&Object.hasOwnProperty.call(t,"f")&&o.uint32(21).float(t.f),t.i!=null&&Object.hasOwnProperty.call(t,"i")&&o.uint32(24).int64(t.i),t.s!=null&&Object.hasOwnProperty.call(t,"s")&&o.uint32(34).bytes(t.s),t.t!=null&&Object.hasOwnProperty.call(t,"t")&&I.onnx.TensorProto.encode(t.t,o.uint32(42).fork()).ldelim(),t.g!=null&&Object.hasOwnProperty.call(t,"g")&&I.onnx.GraphProto.encode(t.g,o.uint32(50).fork()).ldelim(),t.floats!=null&&t.floats.length){o.uint32(58).fork();for(var i=0;i<t.floats.length;++i)o.float(t.floats[i]);o.ldelim()}if(t.ints!=null&&t.ints.length){o.uint32(66).fork();for(var i=0;i<t.ints.length;++i)o.int64(t.ints[i]);o.ldelim()}if(t.strings!=null&&t.strings.length)for(var i=0;i<t.strings.length;++i)o.uint32(74).bytes(t.strings[i]);if(t.tensors!=null&&t.tensors.length)for(var i=0;i<t.tensors.length;++i)I.onnx.TensorProto.encode(t.tensors[i],o.uint32(82).fork()).ldelim();if(t.graphs!=null&&t.graphs.length)for(var i=0;i<t.graphs.length;++i)I.onnx.GraphProto.encode(t.graphs[i],o.uint32(90).fork()).ldelim();if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(106).string(t.docString),t.tp!=null&&Object.hasOwnProperty.call(t,"tp")&&I.onnx.TypeProto.encode(t.tp,o.uint32(114).fork()).ldelim(),t.typeProtos!=null&&t.typeProtos.length)for(var i=0;i<t.typeProtos.length;++i)I.onnx.TypeProto.encode(t.typeProtos[i],o.uint32(122).fork()).ldelim();if(t.type!=null&&Object.hasOwnProperty.call(t,"type")&&o.uint32(160).int32(t.type),t.refAttrName!=null&&Object.hasOwnProperty.call(t,"refAttrName")&&o.uint32(170).string(t.refAttrName),t.sparseTensor!=null&&Object.hasOwnProperty.call(t,"sparseTensor")&&I.onnx.SparseTensorProto.encode(t.sparseTensor,o.uint32(178).fork()).ldelim(),t.sparseTensors!=null&&t.sparseTensors.length)for(var i=0;i<t.sparseTensors.length;++i)I.onnx.SparseTensorProto.encode(t.sparseTensors[i],o.uint32(186).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ee||(t=ee.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.AttributeProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.name=t.string();break}case 21:{s.refAttrName=t.string();break}case 13:{s.docString=t.string();break}case 20:{s.type=t.int32();break}case 2:{s.f=t.float();break}case 3:{s.i=t.int64();break}case 4:{s.s=t.bytes();break}case 5:{s.t=I.onnx.TensorProto.decode(t,t.uint32());break}case 6:{s.g=I.onnx.GraphProto.decode(t,t.uint32());break}case 22:{s.sparseTensor=I.onnx.SparseTensorProto.decode(t,t.uint32());break}case 14:{s.tp=I.onnx.TypeProto.decode(t,t.uint32());break}case 7:{if(s.floats&&s.floats.length||(s.floats=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.floats.push(t.float());else s.floats.push(t.float());break}case 8:{if(s.ints&&s.ints.length||(s.ints=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.ints.push(t.int64());else s.ints.push(t.int64());break}case 9:{s.strings&&s.strings.length||(s.strings=[]),s.strings.push(t.bytes());break}case 10:{s.tensors&&s.tensors.length||(s.tensors=[]),s.tensors.push(I.onnx.TensorProto.decode(t,t.uint32()));break}case 11:{s.graphs&&s.graphs.length||(s.graphs=[]),s.graphs.push(I.onnx.GraphProto.decode(t,t.uint32()));break}case 23:{s.sparseTensors&&s.sparseTensors.length||(s.sparseTensors=[]),s.sparseTensors.push(I.onnx.SparseTensorProto.decode(t,t.uint32()));break}case 15:{s.typeProtos&&s.typeProtos.length||(s.typeProtos=[]),s.typeProtos.push(I.onnx.TypeProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ee||(t=new ee(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!C.isString(t.name))return"name: string expected";if(t.refAttrName!=null&&t.hasOwnProperty("refAttrName")&&!C.isString(t.refAttrName))return"refAttrName: string expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!C.isString(t.docString))return"docString: string expected";if(t.type!=null&&t.hasOwnProperty("type"))switch(t.type){default:return"type: enum value expected";case 0:case 1:case 2:case 3:case 4:case 5:case 11:case 13:case 6:case 7:case 8:case 9:case 10:case 12:case 14:break}if(t.f!=null&&t.hasOwnProperty("f")&&typeof t.f!="number")return"f: number expected";if(t.i!=null&&t.hasOwnProperty("i")&&!C.isInteger(t.i)&&!(t.i&&C.isInteger(t.i.low)&&C.isInteger(t.i.high)))return"i: integer|Long expected";if(t.s!=null&&t.hasOwnProperty("s")&&!(t.s&&typeof t.s.length=="number"||C.isString(t.s)))return"s: buffer expected";if(t.t!=null&&t.hasOwnProperty("t")){var o=I.onnx.TensorProto.verify(t.t);if(o)return"t."+o}if(t.g!=null&&t.hasOwnProperty("g")){var o=I.onnx.GraphProto.verify(t.g);if(o)return"g."+o}if(t.sparseTensor!=null&&t.hasOwnProperty("sparseTensor")){var o=I.onnx.SparseTensorProto.verify(t.sparseTensor);if(o)return"sparseTensor."+o}if(t.tp!=null&&t.hasOwnProperty("tp")){var o=I.onnx.TypeProto.verify(t.tp);if(o)return"tp."+o}if(t.floats!=null&&t.hasOwnProperty("floats")){if(!Array.isArray(t.floats))return"floats: array expected";for(var i=0;i<t.floats.length;++i)if(typeof t.floats[i]!="number")return"floats: number[] expected"}if(t.ints!=null&&t.hasOwnProperty("ints")){if(!Array.isArray(t.ints))return"ints: array expected";for(var i=0;i<t.ints.length;++i)if(!C.isInteger(t.ints[i])&&!(t.ints[i]&&C.isInteger(t.ints[i].low)&&C.isInteger(t.ints[i].high)))return"ints: integer|Long[] expected"}if(t.strings!=null&&t.hasOwnProperty("strings")){if(!Array.isArray(t.strings))return"strings: array expected";for(var i=0;i<t.strings.length;++i)if(!(t.strings[i]&&typeof t.strings[i].length=="number"||C.isString(t.strings[i])))return"strings: buffer[] expected"}if(t.tensors!=null&&t.hasOwnProperty("tensors")){if(!Array.isArray(t.tensors))return"tensors: array expected";for(var i=0;i<t.tensors.length;++i){var o=I.onnx.TensorProto.verify(t.tensors[i]);if(o)return"tensors."+o}}if(t.graphs!=null&&t.hasOwnProperty("graphs")){if(!Array.isArray(t.graphs))return"graphs: array expected";for(var i=0;i<t.graphs.length;++i){var o=I.onnx.GraphProto.verify(t.graphs[i]);if(o)return"graphs."+o}}if(t.sparseTensors!=null&&t.hasOwnProperty("sparseTensors")){if(!Array.isArray(t.sparseTensors))return"sparseTensors: array expected";for(var i=0;i<t.sparseTensors.length;++i){var o=I.onnx.SparseTensorProto.verify(t.sparseTensors[i]);if(o)return"sparseTensors."+o}}if(t.typeProtos!=null&&t.hasOwnProperty("typeProtos")){if(!Array.isArray(t.typeProtos))return"typeProtos: array expected";for(var i=0;i<t.typeProtos.length;++i){var o=I.onnx.TypeProto.verify(t.typeProtos[i]);if(o)return"typeProtos."+o}}return null},e.fromObject=function(t){if(t instanceof I.onnx.AttributeProto)return t;var o=new I.onnx.AttributeProto;switch(t.name!=null&&(o.name=String(t.name)),t.refAttrName!=null&&(o.refAttrName=String(t.refAttrName)),t.docString!=null&&(o.docString=String(t.docString)),t.type){default:if(typeof t.type=="number"){o.type=t.type;break}break;case"UNDEFINED":case 0:o.type=0;break;case"FLOAT":case 1:o.type=1;break;case"INT":case 2:o.type=2;break;case"STRING":case 3:o.type=3;break;case"TENSOR":case 4:o.type=4;break;case"GRAPH":case 5:o.type=5;break;case"SPARSE_TENSOR":case 11:o.type=11;break;case"TYPE_PROTO":case 13:o.type=13;break;case"FLOATS":case 6:o.type=6;break;case"INTS":case 7:o.type=7;break;case"STRINGS":case 8:o.type=8;break;case"TENSORS":case 9:o.type=9;break;case"GRAPHS":case 10:o.type=10;break;case"SPARSE_TENSORS":case 12:o.type=12;break;case"TYPE_PROTOS":case 14:o.type=14;break}if(t.f!=null&&(o.f=Number(t.f)),t.i!=null&&(C.Long?(o.i=C.Long.fromValue(t.i)).unsigned=!1:typeof t.i=="string"?o.i=parseInt(t.i,10):typeof t.i=="number"?o.i=t.i:typeof t.i=="object"&&(o.i=new C.LongBits(t.i.low>>>0,t.i.high>>>0).toNumber())),t.s!=null&&(typeof t.s=="string"?C.base64.decode(t.s,o.s=C.newBuffer(C.base64.length(t.s)),0):t.s.length>=0&&(o.s=t.s)),t.t!=null){if(typeof t.t!="object")throw TypeError(".onnx.AttributeProto.t: object expected");o.t=I.onnx.TensorProto.fromObject(t.t)}if(t.g!=null){if(typeof t.g!="object")throw TypeError(".onnx.AttributeProto.g: object expected");o.g=I.onnx.GraphProto.fromObject(t.g)}if(t.sparseTensor!=null){if(typeof t.sparseTensor!="object")throw TypeError(".onnx.AttributeProto.sparseTensor: object expected");o.sparseTensor=I.onnx.SparseTensorProto.fromObject(t.sparseTensor)}if(t.tp!=null){if(typeof t.tp!="object")throw TypeError(".onnx.AttributeProto.tp: object expected");o.tp=I.onnx.TypeProto.fromObject(t.tp)}if(t.floats){if(!Array.isArray(t.floats))throw TypeError(".onnx.AttributeProto.floats: array expected");o.floats=[];for(var i=0;i<t.floats.length;++i)o.floats[i]=Number(t.floats[i])}if(t.ints){if(!Array.isArray(t.ints))throw TypeError(".onnx.AttributeProto.ints: array expected");o.ints=[];for(var i=0;i<t.ints.length;++i)C.Long?(o.ints[i]=C.Long.fromValue(t.ints[i])).unsigned=!1:typeof t.ints[i]=="string"?o.ints[i]=parseInt(t.ints[i],10):typeof t.ints[i]=="number"?o.ints[i]=t.ints[i]:typeof t.ints[i]=="object"&&(o.ints[i]=new C.LongBits(t.ints[i].low>>>0,t.ints[i].high>>>0).toNumber())}if(t.strings){if(!Array.isArray(t.strings))throw TypeError(".onnx.AttributeProto.strings: array expected");o.strings=[];for(var i=0;i<t.strings.length;++i)typeof t.strings[i]=="string"?C.base64.decode(t.strings[i],o.strings[i]=C.newBuffer(C.base64.length(t.strings[i])),0):t.strings[i].length>=0&&(o.strings[i]=t.strings[i])}if(t.tensors){if(!Array.isArray(t.tensors))throw TypeError(".onnx.AttributeProto.tensors: array expected");o.tensors=[];for(var i=0;i<t.tensors.length;++i){if(typeof t.tensors[i]!="object")throw TypeError(".onnx.AttributeProto.tensors: object expected");o.tensors[i]=I.onnx.TensorProto.fromObject(t.tensors[i])}}if(t.graphs){if(!Array.isArray(t.graphs))throw TypeError(".onnx.AttributeProto.graphs: array expected");o.graphs=[];for(var i=0;i<t.graphs.length;++i){if(typeof t.graphs[i]!="object")throw TypeError(".onnx.AttributeProto.graphs: object expected");o.graphs[i]=I.onnx.GraphProto.fromObject(t.graphs[i])}}if(t.sparseTensors){if(!Array.isArray(t.sparseTensors))throw TypeError(".onnx.AttributeProto.sparseTensors: array expected");o.sparseTensors=[];for(var i=0;i<t.sparseTensors.length;++i){if(typeof t.sparseTensors[i]!="object")throw TypeError(".onnx.AttributeProto.sparseTensors: object expected");o.sparseTensors[i]=I.onnx.SparseTensorProto.fromObject(t.sparseTensors[i])}}if(t.typeProtos){if(!Array.isArray(t.typeProtos))throw TypeError(".onnx.AttributeProto.typeProtos: array expected");o.typeProtos=[];for(var i=0;i<t.typeProtos.length;++i){if(typeof t.typeProtos[i]!="object")throw TypeError(".onnx.AttributeProto.typeProtos: object expected");o.typeProtos[i]=I.onnx.TypeProto.fromObject(t.typeProtos[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.floats=[],i.ints=[],i.strings=[],i.tensors=[],i.graphs=[],i.typeProtos=[],i.sparseTensors=[]),o.defaults){if(i.name="",i.f=0,C.Long){var s=new C.Long(0,0,!1);i.i=o.longs===String?s.toString():o.longs===Number?s.toNumber():s}else i.i=o.longs===String?"0":0;o.bytes===String?i.s="":(i.s=[],o.bytes!==Array&&(i.s=C.newBuffer(i.s))),i.t=null,i.g=null,i.docString="",i.tp=null,i.type=o.enums===String?"UNDEFINED":0,i.refAttrName="",i.sparseTensor=null}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.f!=null&&t.hasOwnProperty("f")&&(i.f=o.json&&!isFinite(t.f)?String(t.f):t.f),t.i!=null&&t.hasOwnProperty("i")&&(typeof t.i=="number"?i.i=o.longs===String?String(t.i):t.i:i.i=o.longs===String?C.Long.prototype.toString.call(t.i):o.longs===Number?new C.LongBits(t.i.low>>>0,t.i.high>>>0).toNumber():t.i),t.s!=null&&t.hasOwnProperty("s")&&(i.s=o.bytes===String?C.base64.encode(t.s,0,t.s.length):o.bytes===Array?Array.prototype.slice.call(t.s):t.s),t.t!=null&&t.hasOwnProperty("t")&&(i.t=I.onnx.TensorProto.toObject(t.t,o)),t.g!=null&&t.hasOwnProperty("g")&&(i.g=I.onnx.GraphProto.toObject(t.g,o)),t.floats&&t.floats.length){i.floats=[];for(var a=0;a<t.floats.length;++a)i.floats[a]=o.json&&!isFinite(t.floats[a])?String(t.floats[a]):t.floats[a]}if(t.ints&&t.ints.length){i.ints=[];for(var a=0;a<t.ints.length;++a)typeof t.ints[a]=="number"?i.ints[a]=o.longs===String?String(t.ints[a]):t.ints[a]:i.ints[a]=o.longs===String?C.Long.prototype.toString.call(t.ints[a]):o.longs===Number?new C.LongBits(t.ints[a].low>>>0,t.ints[a].high>>>0).toNumber():t.ints[a]}if(t.strings&&t.strings.length){i.strings=[];for(var a=0;a<t.strings.length;++a)i.strings[a]=o.bytes===String?C.base64.encode(t.strings[a],0,t.strings[a].length):o.bytes===Array?Array.prototype.slice.call(t.strings[a]):t.strings[a]}if(t.tensors&&t.tensors.length){i.tensors=[];for(var a=0;a<t.tensors.length;++a)i.tensors[a]=I.onnx.TensorProto.toObject(t.tensors[a],o)}if(t.graphs&&t.graphs.length){i.graphs=[];for(var a=0;a<t.graphs.length;++a)i.graphs[a]=I.onnx.GraphProto.toObject(t.graphs[a],o)}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.tp!=null&&t.hasOwnProperty("tp")&&(i.tp=I.onnx.TypeProto.toObject(t.tp,o)),t.typeProtos&&t.typeProtos.length){i.typeProtos=[];for(var a=0;a<t.typeProtos.length;++a)i.typeProtos[a]=I.onnx.TypeProto.toObject(t.typeProtos[a],o)}if(t.type!=null&&t.hasOwnProperty("type")&&(i.type=o.enums===String?I.onnx.AttributeProto.AttributeType[t.type]===void 0?t.type:I.onnx.AttributeProto.AttributeType[t.type]:t.type),t.refAttrName!=null&&t.hasOwnProperty("refAttrName")&&(i.refAttrName=t.refAttrName),t.sparseTensor!=null&&t.hasOwnProperty("sparseTensor")&&(i.sparseTensor=I.onnx.SparseTensorProto.toObject(t.sparseTensor,o)),t.sparseTensors&&t.sparseTensors.length){i.sparseTensors=[];for(var a=0;a<t.sparseTensors.length;++a)i.sparseTensors[a]=I.onnx.SparseTensorProto.toObject(t.sparseTensors[a],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.AttributeProto"},e.AttributeType=function(){var n={},t=Object.create(n);return t[n[0]="UNDEFINED"]=0,t[n[1]="FLOAT"]=1,t[n[2]="INT"]=2,t[n[3]="STRING"]=3,t[n[4]="TENSOR"]=4,t[n[5]="GRAPH"]=5,t[n[11]="SPARSE_TENSOR"]=11,t[n[13]="TYPE_PROTO"]=13,t[n[6]="FLOATS"]=6,t[n[7]="INTS"]=7,t[n[8]="STRINGS"]=8,t[n[9]="TENSORS"]=9,t[n[10]="GRAPHS"]=10,t[n[12]="SPARSE_TENSORS"]=12,t[n[14]="TYPE_PROTOS"]=14,t}(),e}(),r.ValueInfoProto=function(){function e(n){if(n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.name="",e.prototype.type=null,e.prototype.docString="",e.create=function(t){return new e(t)},e.encode=function(t,o){return o||(o=pt.create()),t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(10).string(t.name),t.type!=null&&Object.hasOwnProperty.call(t,"type")&&I.onnx.TypeProto.encode(t.type,o.uint32(18).fork()).ldelim(),t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(26).string(t.docString),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ee||(t=ee.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.ValueInfoProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.name=t.string();break}case 2:{s.type=I.onnx.TypeProto.decode(t,t.uint32());break}case 3:{s.docString=t.string();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ee||(t=new ee(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!C.isString(t.name))return"name: string expected";if(t.type!=null&&t.hasOwnProperty("type")){var o=I.onnx.TypeProto.verify(t.type);if(o)return"type."+o}return t.docString!=null&&t.hasOwnProperty("docString")&&!C.isString(t.docString)?"docString: string expected":null},e.fromObject=function(t){if(t instanceof I.onnx.ValueInfoProto)return t;var o=new I.onnx.ValueInfoProto;if(t.name!=null&&(o.name=String(t.name)),t.type!=null){if(typeof t.type!="object")throw TypeError(".onnx.ValueInfoProto.type: object expected");o.type=I.onnx.TypeProto.fromObject(t.type)}return t.docString!=null&&(o.docString=String(t.docString)),o},e.toObject=function(t,o){o||(o={});var i={};return o.defaults&&(i.name="",i.type=null,i.docString=""),t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.type!=null&&t.hasOwnProperty("type")&&(i.type=I.onnx.TypeProto.toObject(t.type,o)),t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.ValueInfoProto"},e}(),r.NodeProto=function(){function e(n){if(this.input=[],this.output=[],this.attribute=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.input=C.emptyArray,e.prototype.output=C.emptyArray,e.prototype.name="",e.prototype.opType="",e.prototype.domain="",e.prototype.attribute=C.emptyArray,e.prototype.docString="",e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=pt.create()),t.input!=null&&t.input.length)for(var i=0;i<t.input.length;++i)o.uint32(10).string(t.input[i]);if(t.output!=null&&t.output.length)for(var i=0;i<t.output.length;++i)o.uint32(18).string(t.output[i]);if(t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(26).string(t.name),t.opType!=null&&Object.hasOwnProperty.call(t,"opType")&&o.uint32(34).string(t.opType),t.attribute!=null&&t.attribute.length)for(var i=0;i<t.attribute.length;++i)I.onnx.AttributeProto.encode(t.attribute[i],o.uint32(42).fork()).ldelim();return t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(50).string(t.docString),t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(58).string(t.domain),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ee||(t=ee.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.NodeProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.input&&s.input.length||(s.input=[]),s.input.push(t.string());break}case 2:{s.output&&s.output.length||(s.output=[]),s.output.push(t.string());break}case 3:{s.name=t.string();break}case 4:{s.opType=t.string();break}case 7:{s.domain=t.string();break}case 5:{s.attribute&&s.attribute.length||(s.attribute=[]),s.attribute.push(I.onnx.AttributeProto.decode(t,t.uint32()));break}case 6:{s.docString=t.string();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ee||(t=new ee(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var o=0;o<t.input.length;++o)if(!C.isString(t.input[o]))return"input: string[] expected"}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(var o=0;o<t.output.length;++o)if(!C.isString(t.output[o]))return"output: string[] expected"}if(t.name!=null&&t.hasOwnProperty("name")&&!C.isString(t.name))return"name: string expected";if(t.opType!=null&&t.hasOwnProperty("opType")&&!C.isString(t.opType))return"opType: string expected";if(t.domain!=null&&t.hasOwnProperty("domain")&&!C.isString(t.domain))return"domain: string expected";if(t.attribute!=null&&t.hasOwnProperty("attribute")){if(!Array.isArray(t.attribute))return"attribute: array expected";for(var o=0;o<t.attribute.length;++o){var i=I.onnx.AttributeProto.verify(t.attribute[o]);if(i)return"attribute."+i}}return t.docString!=null&&t.hasOwnProperty("docString")&&!C.isString(t.docString)?"docString: string expected":null},e.fromObject=function(t){if(t instanceof I.onnx.NodeProto)return t;var o=new I.onnx.NodeProto;if(t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.NodeProto.input: array expected");o.input=[];for(var i=0;i<t.input.length;++i)o.input[i]=String(t.input[i])}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.NodeProto.output: array expected");o.output=[];for(var i=0;i<t.output.length;++i)o.output[i]=String(t.output[i])}if(t.name!=null&&(o.name=String(t.name)),t.opType!=null&&(o.opType=String(t.opType)),t.domain!=null&&(o.domain=String(t.domain)),t.attribute){if(!Array.isArray(t.attribute))throw TypeError(".onnx.NodeProto.attribute: array expected");o.attribute=[];for(var i=0;i<t.attribute.length;++i){if(typeof t.attribute[i]!="object")throw TypeError(".onnx.NodeProto.attribute: object expected");o.attribute[i]=I.onnx.AttributeProto.fromObject(t.attribute[i])}}return t.docString!=null&&(o.docString=String(t.docString)),o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.input=[],i.output=[],i.attribute=[]),o.defaults&&(i.name="",i.opType="",i.docString="",i.domain=""),t.input&&t.input.length){i.input=[];for(var s=0;s<t.input.length;++s)i.input[s]=t.input[s]}if(t.output&&t.output.length){i.output=[];for(var s=0;s<t.output.length;++s)i.output[s]=t.output[s]}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.opType!=null&&t.hasOwnProperty("opType")&&(i.opType=t.opType),t.attribute&&t.attribute.length){i.attribute=[];for(var s=0;s<t.attribute.length;++s)i.attribute[s]=I.onnx.AttributeProto.toObject(t.attribute[s],o)}return t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.NodeProto"},e}(),r.TrainingInfoProto=function(){function e(n){if(this.initializationBinding=[],this.updateBinding=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.initialization=null,e.prototype.algorithm=null,e.prototype.initializationBinding=C.emptyArray,e.prototype.updateBinding=C.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=pt.create()),t.initialization!=null&&Object.hasOwnProperty.call(t,"initialization")&&I.onnx.GraphProto.encode(t.initialization,o.uint32(10).fork()).ldelim(),t.algorithm!=null&&Object.hasOwnProperty.call(t,"algorithm")&&I.onnx.GraphProto.encode(t.algorithm,o.uint32(18).fork()).ldelim(),t.initializationBinding!=null&&t.initializationBinding.length)for(var i=0;i<t.initializationBinding.length;++i)I.onnx.StringStringEntryProto.encode(t.initializationBinding[i],o.uint32(26).fork()).ldelim();if(t.updateBinding!=null&&t.updateBinding.length)for(var i=0;i<t.updateBinding.length;++i)I.onnx.StringStringEntryProto.encode(t.updateBinding[i],o.uint32(34).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ee||(t=ee.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.TrainingInfoProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.initialization=I.onnx.GraphProto.decode(t,t.uint32());break}case 2:{s.algorithm=I.onnx.GraphProto.decode(t,t.uint32());break}case 3:{s.initializationBinding&&s.initializationBinding.length||(s.initializationBinding=[]),s.initializationBinding.push(I.onnx.StringStringEntryProto.decode(t,t.uint32()));break}case 4:{s.updateBinding&&s.updateBinding.length||(s.updateBinding=[]),s.updateBinding.push(I.onnx.StringStringEntryProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ee||(t=new ee(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.initialization!=null&&t.hasOwnProperty("initialization")){var o=I.onnx.GraphProto.verify(t.initialization);if(o)return"initialization."+o}if(t.algorithm!=null&&t.hasOwnProperty("algorithm")){var o=I.onnx.GraphProto.verify(t.algorithm);if(o)return"algorithm."+o}if(t.initializationBinding!=null&&t.hasOwnProperty("initializationBinding")){if(!Array.isArray(t.initializationBinding))return"initializationBinding: array expected";for(var i=0;i<t.initializationBinding.length;++i){var o=I.onnx.StringStringEntryProto.verify(t.initializationBinding[i]);if(o)return"initializationBinding."+o}}if(t.updateBinding!=null&&t.hasOwnProperty("updateBinding")){if(!Array.isArray(t.updateBinding))return"updateBinding: array expected";for(var i=0;i<t.updateBinding.length;++i){var o=I.onnx.StringStringEntryProto.verify(t.updateBinding[i]);if(o)return"updateBinding."+o}}return null},e.fromObject=function(t){if(t instanceof I.onnx.TrainingInfoProto)return t;var o=new I.onnx.TrainingInfoProto;if(t.initialization!=null){if(typeof t.initialization!="object")throw TypeError(".onnx.TrainingInfoProto.initialization: object expected");o.initialization=I.onnx.GraphProto.fromObject(t.initialization)}if(t.algorithm!=null){if(typeof t.algorithm!="object")throw TypeError(".onnx.TrainingInfoProto.algorithm: object expected");o.algorithm=I.onnx.GraphProto.fromObject(t.algorithm)}if(t.initializationBinding){if(!Array.isArray(t.initializationBinding))throw TypeError(".onnx.TrainingInfoProto.initializationBinding: array expected");o.initializationBinding=[];for(var i=0;i<t.initializationBinding.length;++i){if(typeof t.initializationBinding[i]!="object")throw TypeError(".onnx.TrainingInfoProto.initializationBinding: object expected");o.initializationBinding[i]=I.onnx.StringStringEntryProto.fromObject(t.initializationBinding[i])}}if(t.updateBinding){if(!Array.isArray(t.updateBinding))throw TypeError(".onnx.TrainingInfoProto.updateBinding: array expected");o.updateBinding=[];for(var i=0;i<t.updateBinding.length;++i){if(typeof t.updateBinding[i]!="object")throw TypeError(".onnx.TrainingInfoProto.updateBinding: object expected");o.updateBinding[i]=I.onnx.StringStringEntryProto.fromObject(t.updateBinding[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.initializationBinding=[],i.updateBinding=[]),o.defaults&&(i.initialization=null,i.algorithm=null),t.initialization!=null&&t.hasOwnProperty("initialization")&&(i.initialization=I.onnx.GraphProto.toObject(t.initialization,o)),t.algorithm!=null&&t.hasOwnProperty("algorithm")&&(i.algorithm=I.onnx.GraphProto.toObject(t.algorithm,o)),t.initializationBinding&&t.initializationBinding.length){i.initializationBinding=[];for(var s=0;s<t.initializationBinding.length;++s)i.initializationBinding[s]=I.onnx.StringStringEntryProto.toObject(t.initializationBinding[s],o)}if(t.updateBinding&&t.updateBinding.length){i.updateBinding=[];for(var s=0;s<t.updateBinding.length;++s)i.updateBinding[s]=I.onnx.StringStringEntryProto.toObject(t.updateBinding[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TrainingInfoProto"},e}(),r.ModelProto=function(){function e(n){if(this.opsetImport=[],this.metadataProps=[],this.trainingInfo=[],this.functions=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.irVersion=C.Long?C.Long.fromBits(0,0,!1):0,e.prototype.opsetImport=C.emptyArray,e.prototype.producerName="",e.prototype.producerVersion="",e.prototype.domain="",e.prototype.modelVersion=C.Long?C.Long.fromBits(0,0,!1):0,e.prototype.docString="",e.prototype.graph=null,e.prototype.metadataProps=C.emptyArray,e.prototype.trainingInfo=C.emptyArray,e.prototype.functions=C.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=pt.create()),t.irVersion!=null&&Object.hasOwnProperty.call(t,"irVersion")&&o.uint32(8).int64(t.irVersion),t.producerName!=null&&Object.hasOwnProperty.call(t,"producerName")&&o.uint32(18).string(t.producerName),t.producerVersion!=null&&Object.hasOwnProperty.call(t,"producerVersion")&&o.uint32(26).string(t.producerVersion),t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(34).string(t.domain),t.modelVersion!=null&&Object.hasOwnProperty.call(t,"modelVersion")&&o.uint32(40).int64(t.modelVersion),t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(50).string(t.docString),t.graph!=null&&Object.hasOwnProperty.call(t,"graph")&&I.onnx.GraphProto.encode(t.graph,o.uint32(58).fork()).ldelim(),t.opsetImport!=null&&t.opsetImport.length)for(var i=0;i<t.opsetImport.length;++i)I.onnx.OperatorSetIdProto.encode(t.opsetImport[i],o.uint32(66).fork()).ldelim();if(t.metadataProps!=null&&t.metadataProps.length)for(var i=0;i<t.metadataProps.length;++i)I.onnx.StringStringEntryProto.encode(t.metadataProps[i],o.uint32(114).fork()).ldelim();if(t.trainingInfo!=null&&t.trainingInfo.length)for(var i=0;i<t.trainingInfo.length;++i)I.onnx.TrainingInfoProto.encode(t.trainingInfo[i],o.uint32(162).fork()).ldelim();if(t.functions!=null&&t.functions.length)for(var i=0;i<t.functions.length;++i)I.onnx.FunctionProto.encode(t.functions[i],o.uint32(202).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ee||(t=ee.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.ModelProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.irVersion=t.int64();break}case 8:{s.opsetImport&&s.opsetImport.length||(s.opsetImport=[]),s.opsetImport.push(I.onnx.OperatorSetIdProto.decode(t,t.uint32()));break}case 2:{s.producerName=t.string();break}case 3:{s.producerVersion=t.string();break}case 4:{s.domain=t.string();break}case 5:{s.modelVersion=t.int64();break}case 6:{s.docString=t.string();break}case 7:{s.graph=I.onnx.GraphProto.decode(t,t.uint32());break}case 14:{s.metadataProps&&s.metadataProps.length||(s.metadataProps=[]),s.metadataProps.push(I.onnx.StringStringEntryProto.decode(t,t.uint32()));break}case 20:{s.trainingInfo&&s.trainingInfo.length||(s.trainingInfo=[]),s.trainingInfo.push(I.onnx.TrainingInfoProto.decode(t,t.uint32()));break}case 25:{s.functions&&s.functions.length||(s.functions=[]),s.functions.push(I.onnx.FunctionProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ee||(t=new ee(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.irVersion!=null&&t.hasOwnProperty("irVersion")&&!C.isInteger(t.irVersion)&&!(t.irVersion&&C.isInteger(t.irVersion.low)&&C.isInteger(t.irVersion.high)))return"irVersion: integer|Long expected";if(t.opsetImport!=null&&t.hasOwnProperty("opsetImport")){if(!Array.isArray(t.opsetImport))return"opsetImport: array expected";for(var o=0;o<t.opsetImport.length;++o){var i=I.onnx.OperatorSetIdProto.verify(t.opsetImport[o]);if(i)return"opsetImport."+i}}if(t.producerName!=null&&t.hasOwnProperty("producerName")&&!C.isString(t.producerName))return"producerName: string expected";if(t.producerVersion!=null&&t.hasOwnProperty("producerVersion")&&!C.isString(t.producerVersion))return"producerVersion: string expected";if(t.domain!=null&&t.hasOwnProperty("domain")&&!C.isString(t.domain))return"domain: string expected";if(t.modelVersion!=null&&t.hasOwnProperty("modelVersion")&&!C.isInteger(t.modelVersion)&&!(t.modelVersion&&C.isInteger(t.modelVersion.low)&&C.isInteger(t.modelVersion.high)))return"modelVersion: integer|Long expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!C.isString(t.docString))return"docString: string expected";if(t.graph!=null&&t.hasOwnProperty("graph")){var i=I.onnx.GraphProto.verify(t.graph);if(i)return"graph."+i}if(t.metadataProps!=null&&t.hasOwnProperty("metadataProps")){if(!Array.isArray(t.metadataProps))return"metadataProps: array expected";for(var o=0;o<t.metadataProps.length;++o){var i=I.onnx.StringStringEntryProto.verify(t.metadataProps[o]);if(i)return"metadataProps."+i}}if(t.trainingInfo!=null&&t.hasOwnProperty("trainingInfo")){if(!Array.isArray(t.trainingInfo))return"trainingInfo: array expected";for(var o=0;o<t.trainingInfo.length;++o){var i=I.onnx.TrainingInfoProto.verify(t.trainingInfo[o]);if(i)return"trainingInfo."+i}}if(t.functions!=null&&t.hasOwnProperty("functions")){if(!Array.isArray(t.functions))return"functions: array expected";for(var o=0;o<t.functions.length;++o){var i=I.onnx.FunctionProto.verify(t.functions[o]);if(i)return"functions."+i}}return null},e.fromObject=function(t){if(t instanceof I.onnx.ModelProto)return t;var o=new I.onnx.ModelProto;if(t.irVersion!=null&&(C.Long?(o.irVersion=C.Long.fromValue(t.irVersion)).unsigned=!1:typeof t.irVersion=="string"?o.irVersion=parseInt(t.irVersion,10):typeof t.irVersion=="number"?o.irVersion=t.irVersion:typeof t.irVersion=="object"&&(o.irVersion=new C.LongBits(t.irVersion.low>>>0,t.irVersion.high>>>0).toNumber())),t.opsetImport){if(!Array.isArray(t.opsetImport))throw TypeError(".onnx.ModelProto.opsetImport: array expected");o.opsetImport=[];for(var i=0;i<t.opsetImport.length;++i){if(typeof t.opsetImport[i]!="object")throw TypeError(".onnx.ModelProto.opsetImport: object expected");o.opsetImport[i]=I.onnx.OperatorSetIdProto.fromObject(t.opsetImport[i])}}if(t.producerName!=null&&(o.producerName=String(t.producerName)),t.producerVersion!=null&&(o.producerVersion=String(t.producerVersion)),t.domain!=null&&(o.domain=String(t.domain)),t.modelVersion!=null&&(C.Long?(o.modelVersion=C.Long.fromValue(t.modelVersion)).unsigned=!1:typeof t.modelVersion=="string"?o.modelVersion=parseInt(t.modelVersion,10):typeof t.modelVersion=="number"?o.modelVersion=t.modelVersion:typeof t.modelVersion=="object"&&(o.modelVersion=new C.LongBits(t.modelVersion.low>>>0,t.modelVersion.high>>>0).toNumber())),t.docString!=null&&(o.docString=String(t.docString)),t.graph!=null){if(typeof t.graph!="object")throw TypeError(".onnx.ModelProto.graph: object expected");o.graph=I.onnx.GraphProto.fromObject(t.graph)}if(t.metadataProps){if(!Array.isArray(t.metadataProps))throw TypeError(".onnx.ModelProto.metadataProps: array expected");o.metadataProps=[];for(var i=0;i<t.metadataProps.length;++i){if(typeof t.metadataProps[i]!="object")throw TypeError(".onnx.ModelProto.metadataProps: object expected");o.metadataProps[i]=I.onnx.StringStringEntryProto.fromObject(t.metadataProps[i])}}if(t.trainingInfo){if(!Array.isArray(t.trainingInfo))throw TypeError(".onnx.ModelProto.trainingInfo: array expected");o.trainingInfo=[];for(var i=0;i<t.trainingInfo.length;++i){if(typeof t.trainingInfo[i]!="object")throw TypeError(".onnx.ModelProto.trainingInfo: object expected");o.trainingInfo[i]=I.onnx.TrainingInfoProto.fromObject(t.trainingInfo[i])}}if(t.functions){if(!Array.isArray(t.functions))throw TypeError(".onnx.ModelProto.functions: array expected");o.functions=[];for(var i=0;i<t.functions.length;++i){if(typeof t.functions[i]!="object")throw TypeError(".onnx.ModelProto.functions: object expected");o.functions[i]=I.onnx.FunctionProto.fromObject(t.functions[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.opsetImport=[],i.metadataProps=[],i.trainingInfo=[],i.functions=[]),o.defaults){if(C.Long){var s=new C.Long(0,0,!1);i.irVersion=o.longs===String?s.toString():o.longs===Number?s.toNumber():s}else i.irVersion=o.longs===String?"0":0;if(i.producerName="",i.producerVersion="",i.domain="",C.Long){var s=new C.Long(0,0,!1);i.modelVersion=o.longs===String?s.toString():o.longs===Number?s.toNumber():s}else i.modelVersion=o.longs===String?"0":0;i.docString="",i.graph=null}if(t.irVersion!=null&&t.hasOwnProperty("irVersion")&&(typeof t.irVersion=="number"?i.irVersion=o.longs===String?String(t.irVersion):t.irVersion:i.irVersion=o.longs===String?C.Long.prototype.toString.call(t.irVersion):o.longs===Number?new C.LongBits(t.irVersion.low>>>0,t.irVersion.high>>>0).toNumber():t.irVersion),t.producerName!=null&&t.hasOwnProperty("producerName")&&(i.producerName=t.producerName),t.producerVersion!=null&&t.hasOwnProperty("producerVersion")&&(i.producerVersion=t.producerVersion),t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),t.modelVersion!=null&&t.hasOwnProperty("modelVersion")&&(typeof t.modelVersion=="number"?i.modelVersion=o.longs===String?String(t.modelVersion):t.modelVersion:i.modelVersion=o.longs===String?C.Long.prototype.toString.call(t.modelVersion):o.longs===Number?new C.LongBits(t.modelVersion.low>>>0,t.modelVersion.high>>>0).toNumber():t.modelVersion),t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.graph!=null&&t.hasOwnProperty("graph")&&(i.graph=I.onnx.GraphProto.toObject(t.graph,o)),t.opsetImport&&t.opsetImport.length){i.opsetImport=[];for(var a=0;a<t.opsetImport.length;++a)i.opsetImport[a]=I.onnx.OperatorSetIdProto.toObject(t.opsetImport[a],o)}if(t.metadataProps&&t.metadataProps.length){i.metadataProps=[];for(var a=0;a<t.metadataProps.length;++a)i.metadataProps[a]=I.onnx.StringStringEntryProto.toObject(t.metadataProps[a],o)}if(t.trainingInfo&&t.trainingInfo.length){i.trainingInfo=[];for(var a=0;a<t.trainingInfo.length;++a)i.trainingInfo[a]=I.onnx.TrainingInfoProto.toObject(t.trainingInfo[a],o)}if(t.functions&&t.functions.length){i.functions=[];for(var a=0;a<t.functions.length;++a)i.functions[a]=I.onnx.FunctionProto.toObject(t.functions[a],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.ModelProto"},e}(),r.StringStringEntryProto=function(){function e(n){if(n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.key="",e.prototype.value="",e.create=function(t){return new e(t)},e.encode=function(t,o){return o||(o=pt.create()),t.key!=null&&Object.hasOwnProperty.call(t,"key")&&o.uint32(10).string(t.key),t.value!=null&&Object.hasOwnProperty.call(t,"value")&&o.uint32(18).string(t.value),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ee||(t=ee.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.StringStringEntryProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.key=t.string();break}case 2:{s.value=t.string();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ee||(t=new ee(t)),this.decode(t,t.uint32())},e.verify=function(t){return typeof t!="object"||t===null?"object expected":t.key!=null&&t.hasOwnProperty("key")&&!C.isString(t.key)?"key: string expected":t.value!=null&&t.hasOwnProperty("value")&&!C.isString(t.value)?"value: string expected":null},e.fromObject=function(t){if(t instanceof I.onnx.StringStringEntryProto)return t;var o=new I.onnx.StringStringEntryProto;return t.key!=null&&(o.key=String(t.key)),t.value!=null&&(o.value=String(t.value)),o},e.toObject=function(t,o){o||(o={});var i={};return o.defaults&&(i.key="",i.value=""),t.key!=null&&t.hasOwnProperty("key")&&(i.key=t.key),t.value!=null&&t.hasOwnProperty("value")&&(i.value=t.value),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.StringStringEntryProto"},e}(),r.TensorAnnotation=function(){function e(n){if(this.quantParameterTensorNames=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.tensorName="",e.prototype.quantParameterTensorNames=C.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=pt.create()),t.tensorName!=null&&Object.hasOwnProperty.call(t,"tensorName")&&o.uint32(10).string(t.tensorName),t.quantParameterTensorNames!=null&&t.quantParameterTensorNames.length)for(var i=0;i<t.quantParameterTensorNames.length;++i)I.onnx.StringStringEntryProto.encode(t.quantParameterTensorNames[i],o.uint32(18).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ee||(t=ee.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.TensorAnnotation;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.tensorName=t.string();break}case 2:{s.quantParameterTensorNames&&s.quantParameterTensorNames.length||(s.quantParameterTensorNames=[]),s.quantParameterTensorNames.push(I.onnx.StringStringEntryProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ee||(t=new ee(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.tensorName!=null&&t.hasOwnProperty("tensorName")&&!C.isString(t.tensorName))return"tensorName: string expected";if(t.quantParameterTensorNames!=null&&t.hasOwnProperty("quantParameterTensorNames")){if(!Array.isArray(t.quantParameterTensorNames))return"quantParameterTensorNames: array expected";for(var o=0;o<t.quantParameterTensorNames.length;++o){var i=I.onnx.StringStringEntryProto.verify(t.quantParameterTensorNames[o]);if(i)return"quantParameterTensorNames."+i}}return null},e.fromObject=function(t){if(t instanceof I.onnx.TensorAnnotation)return t;var o=new I.onnx.TensorAnnotation;if(t.tensorName!=null&&(o.tensorName=String(t.tensorName)),t.quantParameterTensorNames){if(!Array.isArray(t.quantParameterTensorNames))throw TypeError(".onnx.TensorAnnotation.quantParameterTensorNames: array expected");o.quantParameterTensorNames=[];for(var i=0;i<t.quantParameterTensorNames.length;++i){if(typeof t.quantParameterTensorNames[i]!="object")throw TypeError(".onnx.TensorAnnotation.quantParameterTensorNames: object expected");o.quantParameterTensorNames[i]=I.onnx.StringStringEntryProto.fromObject(t.quantParameterTensorNames[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.quantParameterTensorNames=[]),o.defaults&&(i.tensorName=""),t.tensorName!=null&&t.hasOwnProperty("tensorName")&&(i.tensorName=t.tensorName),t.quantParameterTensorNames&&t.quantParameterTensorNames.length){i.quantParameterTensorNames=[];for(var s=0;s<t.quantParameterTensorNames.length;++s)i.quantParameterTensorNames[s]=I.onnx.StringStringEntryProto.toObject(t.quantParameterTensorNames[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TensorAnnotation"},e}(),r.GraphProto=function(){function e(n){if(this.node=[],this.initializer=[],this.sparseInitializer=[],this.input=[],this.output=[],this.valueInfo=[],this.quantizationAnnotation=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.node=C.emptyArray,e.prototype.name="",e.prototype.initializer=C.emptyArray,e.prototype.sparseInitializer=C.emptyArray,e.prototype.docString="",e.prototype.input=C.emptyArray,e.prototype.output=C.emptyArray,e.prototype.valueInfo=C.emptyArray,e.prototype.quantizationAnnotation=C.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=pt.create()),t.node!=null&&t.node.length)for(var i=0;i<t.node.length;++i)I.onnx.NodeProto.encode(t.node[i],o.uint32(10).fork()).ldelim();if(t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(18).string(t.name),t.initializer!=null&&t.initializer.length)for(var i=0;i<t.initializer.length;++i)I.onnx.TensorProto.encode(t.initializer[i],o.uint32(42).fork()).ldelim();if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(82).string(t.docString),t.input!=null&&t.input.length)for(var i=0;i<t.input.length;++i)I.onnx.ValueInfoProto.encode(t.input[i],o.uint32(90).fork()).ldelim();if(t.output!=null&&t.output.length)for(var i=0;i<t.output.length;++i)I.onnx.ValueInfoProto.encode(t.output[i],o.uint32(98).fork()).ldelim();if(t.valueInfo!=null&&t.valueInfo.length)for(var i=0;i<t.valueInfo.length;++i)I.onnx.ValueInfoProto.encode(t.valueInfo[i],o.uint32(106).fork()).ldelim();if(t.quantizationAnnotation!=null&&t.quantizationAnnotation.length)for(var i=0;i<t.quantizationAnnotation.length;++i)I.onnx.TensorAnnotation.encode(t.quantizationAnnotation[i],o.uint32(114).fork()).ldelim();if(t.sparseInitializer!=null&&t.sparseInitializer.length)for(var i=0;i<t.sparseInitializer.length;++i)I.onnx.SparseTensorProto.encode(t.sparseInitializer[i],o.uint32(122).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ee||(t=ee.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.GraphProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.node&&s.node.length||(s.node=[]),s.node.push(I.onnx.NodeProto.decode(t,t.uint32()));break}case 2:{s.name=t.string();break}case 5:{s.initializer&&s.initializer.length||(s.initializer=[]),s.initializer.push(I.onnx.TensorProto.decode(t,t.uint32()));break}case 15:{s.sparseInitializer&&s.sparseInitializer.length||(s.sparseInitializer=[]),s.sparseInitializer.push(I.onnx.SparseTensorProto.decode(t,t.uint32()));break}case 10:{s.docString=t.string();break}case 11:{s.input&&s.input.length||(s.input=[]),s.input.push(I.onnx.ValueInfoProto.decode(t,t.uint32()));break}case 12:{s.output&&s.output.length||(s.output=[]),s.output.push(I.onnx.ValueInfoProto.decode(t,t.uint32()));break}case 13:{s.valueInfo&&s.valueInfo.length||(s.valueInfo=[]),s.valueInfo.push(I.onnx.ValueInfoProto.decode(t,t.uint32()));break}case 14:{s.quantizationAnnotation&&s.quantizationAnnotation.length||(s.quantizationAnnotation=[]),s.quantizationAnnotation.push(I.onnx.TensorAnnotation.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ee||(t=new ee(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.node!=null&&t.hasOwnProperty("node")){if(!Array.isArray(t.node))return"node: array expected";for(var o=0;o<t.node.length;++o){var i=I.onnx.NodeProto.verify(t.node[o]);if(i)return"node."+i}}if(t.name!=null&&t.hasOwnProperty("name")&&!C.isString(t.name))return"name: string expected";if(t.initializer!=null&&t.hasOwnProperty("initializer")){if(!Array.isArray(t.initializer))return"initializer: array expected";for(var o=0;o<t.initializer.length;++o){var i=I.onnx.TensorProto.verify(t.initializer[o]);if(i)return"initializer."+i}}if(t.sparseInitializer!=null&&t.hasOwnProperty("sparseInitializer")){if(!Array.isArray(t.sparseInitializer))return"sparseInitializer: array expected";for(var o=0;o<t.sparseInitializer.length;++o){var i=I.onnx.SparseTensorProto.verify(t.sparseInitializer[o]);if(i)return"sparseInitializer."+i}}if(t.docString!=null&&t.hasOwnProperty("docString")&&!C.isString(t.docString))return"docString: string expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var o=0;o<t.input.length;++o){var i=I.onnx.ValueInfoProto.verify(t.input[o]);if(i)return"input."+i}}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(var o=0;o<t.output.length;++o){var i=I.onnx.ValueInfoProto.verify(t.output[o]);if(i)return"output."+i}}if(t.valueInfo!=null&&t.hasOwnProperty("valueInfo")){if(!Array.isArray(t.valueInfo))return"valueInfo: array expected";for(var o=0;o<t.valueInfo.length;++o){var i=I.onnx.ValueInfoProto.verify(t.valueInfo[o]);if(i)return"valueInfo."+i}}if(t.quantizationAnnotation!=null&&t.hasOwnProperty("quantizationAnnotation")){if(!Array.isArray(t.quantizationAnnotation))return"quantizationAnnotation: array expected";for(var o=0;o<t.quantizationAnnotation.length;++o){var i=I.onnx.TensorAnnotation.verify(t.quantizationAnnotation[o]);if(i)return"quantizationAnnotation."+i}}return null},e.fromObject=function(t){if(t instanceof I.onnx.GraphProto)return t;var o=new I.onnx.GraphProto;if(t.node){if(!Array.isArray(t.node))throw TypeError(".onnx.GraphProto.node: array expected");o.node=[];for(var i=0;i<t.node.length;++i){if(typeof t.node[i]!="object")throw TypeError(".onnx.GraphProto.node: object expected");o.node[i]=I.onnx.NodeProto.fromObject(t.node[i])}}if(t.name!=null&&(o.name=String(t.name)),t.initializer){if(!Array.isArray(t.initializer))throw TypeError(".onnx.GraphProto.initializer: array expected");o.initializer=[];for(var i=0;i<t.initializer.length;++i){if(typeof t.initializer[i]!="object")throw TypeError(".onnx.GraphProto.initializer: object expected");o.initializer[i]=I.onnx.TensorProto.fromObject(t.initializer[i])}}if(t.sparseInitializer){if(!Array.isArray(t.sparseInitializer))throw TypeError(".onnx.GraphProto.sparseInitializer: array expected");o.sparseInitializer=[];for(var i=0;i<t.sparseInitializer.length;++i){if(typeof t.sparseInitializer[i]!="object")throw TypeError(".onnx.GraphProto.sparseInitializer: object expected");o.sparseInitializer[i]=I.onnx.SparseTensorProto.fromObject(t.sparseInitializer[i])}}if(t.docString!=null&&(o.docString=String(t.docString)),t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.GraphProto.input: array expected");o.input=[];for(var i=0;i<t.input.length;++i){if(typeof t.input[i]!="object")throw TypeError(".onnx.GraphProto.input: object expected");o.input[i]=I.onnx.ValueInfoProto.fromObject(t.input[i])}}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.GraphProto.output: array expected");o.output=[];for(var i=0;i<t.output.length;++i){if(typeof t.output[i]!="object")throw TypeError(".onnx.GraphProto.output: object expected");o.output[i]=I.onnx.ValueInfoProto.fromObject(t.output[i])}}if(t.valueInfo){if(!Array.isArray(t.valueInfo))throw TypeError(".onnx.GraphProto.valueInfo: array expected");o.valueInfo=[];for(var i=0;i<t.valueInfo.length;++i){if(typeof t.valueInfo[i]!="object")throw TypeError(".onnx.GraphProto.valueInfo: object expected");o.valueInfo[i]=I.onnx.ValueInfoProto.fromObject(t.valueInfo[i])}}if(t.quantizationAnnotation){if(!Array.isArray(t.quantizationAnnotation))throw TypeError(".onnx.GraphProto.quantizationAnnotation: array expected");o.quantizationAnnotation=[];for(var i=0;i<t.quantizationAnnotation.length;++i){if(typeof t.quantizationAnnotation[i]!="object")throw TypeError(".onnx.GraphProto.quantizationAnnotation: object expected");o.quantizationAnnotation[i]=I.onnx.TensorAnnotation.fromObject(t.quantizationAnnotation[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.node=[],i.initializer=[],i.input=[],i.output=[],i.valueInfo=[],i.quantizationAnnotation=[],i.sparseInitializer=[]),o.defaults&&(i.name="",i.docString=""),t.node&&t.node.length){i.node=[];for(var s=0;s<t.node.length;++s)i.node[s]=I.onnx.NodeProto.toObject(t.node[s],o)}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.initializer&&t.initializer.length){i.initializer=[];for(var s=0;s<t.initializer.length;++s)i.initializer[s]=I.onnx.TensorProto.toObject(t.initializer[s],o)}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.input&&t.input.length){i.input=[];for(var s=0;s<t.input.length;++s)i.input[s]=I.onnx.ValueInfoProto.toObject(t.input[s],o)}if(t.output&&t.output.length){i.output=[];for(var s=0;s<t.output.length;++s)i.output[s]=I.onnx.ValueInfoProto.toObject(t.output[s],o)}if(t.valueInfo&&t.valueInfo.length){i.valueInfo=[];for(var s=0;s<t.valueInfo.length;++s)i.valueInfo[s]=I.onnx.ValueInfoProto.toObject(t.valueInfo[s],o)}if(t.quantizationAnnotation&&t.quantizationAnnotation.length){i.quantizationAnnotation=[];for(var s=0;s<t.quantizationAnnotation.length;++s)i.quantizationAnnotation[s]=I.onnx.TensorAnnotation.toObject(t.quantizationAnnotation[s],o)}if(t.sparseInitializer&&t.sparseInitializer.length){i.sparseInitializer=[];for(var s=0;s<t.sparseInitializer.length;++s)i.sparseInitializer[s]=I.onnx.SparseTensorProto.toObject(t.sparseInitializer[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.GraphProto"},e}(),r.TensorProto=function(){function e(n){if(this.dims=[],this.floatData=[],this.int32Data=[],this.stringData=[],this.int64Data=[],this.externalData=[],this.doubleData=[],this.uint64Data=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.dims=C.emptyArray,e.prototype.dataType=0,e.prototype.segment=null,e.prototype.floatData=C.emptyArray,e.prototype.int32Data=C.emptyArray,e.prototype.stringData=C.emptyArray,e.prototype.int64Data=C.emptyArray,e.prototype.name="",e.prototype.docString="",e.prototype.rawData=C.newBuffer([]),e.prototype.externalData=C.emptyArray,e.prototype.dataLocation=0,e.prototype.doubleData=C.emptyArray,e.prototype.uint64Data=C.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=pt.create()),t.dims!=null&&t.dims.length){o.uint32(10).fork();for(var i=0;i<t.dims.length;++i)o.int64(t.dims[i]);o.ldelim()}if(t.dataType!=null&&Object.hasOwnProperty.call(t,"dataType")&&o.uint32(16).int32(t.dataType),t.segment!=null&&Object.hasOwnProperty.call(t,"segment")&&I.onnx.TensorProto.Segment.encode(t.segment,o.uint32(26).fork()).ldelim(),t.floatData!=null&&t.floatData.length){o.uint32(34).fork();for(var i=0;i<t.floatData.length;++i)o.float(t.floatData[i]);o.ldelim()}if(t.int32Data!=null&&t.int32Data.length){o.uint32(42).fork();for(var i=0;i<t.int32Data.length;++i)o.int32(t.int32Data[i]);o.ldelim()}if(t.stringData!=null&&t.stringData.length)for(var i=0;i<t.stringData.length;++i)o.uint32(50).bytes(t.stringData[i]);if(t.int64Data!=null&&t.int64Data.length){o.uint32(58).fork();for(var i=0;i<t.int64Data.length;++i)o.int64(t.int64Data[i]);o.ldelim()}if(t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(66).string(t.name),t.rawData!=null&&Object.hasOwnProperty.call(t,"rawData")&&o.uint32(74).bytes(t.rawData),t.doubleData!=null&&t.doubleData.length){o.uint32(82).fork();for(var i=0;i<t.doubleData.length;++i)o.double(t.doubleData[i]);o.ldelim()}if(t.uint64Data!=null&&t.uint64Data.length){o.uint32(90).fork();for(var i=0;i<t.uint64Data.length;++i)o.uint64(t.uint64Data[i]);o.ldelim()}if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(98).string(t.docString),t.externalData!=null&&t.externalData.length)for(var i=0;i<t.externalData.length;++i)I.onnx.StringStringEntryProto.encode(t.externalData[i],o.uint32(106).fork()).ldelim();return t.dataLocation!=null&&Object.hasOwnProperty.call(t,"dataLocation")&&o.uint32(112).int32(t.dataLocation),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ee||(t=ee.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.TensorProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{if(s.dims&&s.dims.length||(s.dims=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.dims.push(t.int64());else s.dims.push(t.int64());break}case 2:{s.dataType=t.int32();break}case 3:{s.segment=I.onnx.TensorProto.Segment.decode(t,t.uint32());break}case 4:{if(s.floatData&&s.floatData.length||(s.floatData=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.floatData.push(t.float());else s.floatData.push(t.float());break}case 5:{if(s.int32Data&&s.int32Data.length||(s.int32Data=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.int32Data.push(t.int32());else s.int32Data.push(t.int32());break}case 6:{s.stringData&&s.stringData.length||(s.stringData=[]),s.stringData.push(t.bytes());break}case 7:{if(s.int64Data&&s.int64Data.length||(s.int64Data=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.int64Data.push(t.int64());else s.int64Data.push(t.int64());break}case 8:{s.name=t.string();break}case 12:{s.docString=t.string();break}case 9:{s.rawData=t.bytes();break}case 13:{s.externalData&&s.externalData.length||(s.externalData=[]),s.externalData.push(I.onnx.StringStringEntryProto.decode(t,t.uint32()));break}case 14:{s.dataLocation=t.int32();break}case 10:{if(s.doubleData&&s.doubleData.length||(s.doubleData=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.doubleData.push(t.double());else s.doubleData.push(t.double());break}case 11:{if(s.uint64Data&&s.uint64Data.length||(s.uint64Data=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.uint64Data.push(t.uint64());else s.uint64Data.push(t.uint64());break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ee||(t=new ee(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.dims!=null&&t.hasOwnProperty("dims")){if(!Array.isArray(t.dims))return"dims: array expected";for(var o=0;o<t.dims.length;++o)if(!C.isInteger(t.dims[o])&&!(t.dims[o]&&C.isInteger(t.dims[o].low)&&C.isInteger(t.dims[o].high)))return"dims: integer|Long[] expected"}if(t.dataType!=null&&t.hasOwnProperty("dataType")&&!C.isInteger(t.dataType))return"dataType: integer expected";if(t.segment!=null&&t.hasOwnProperty("segment")){var i=I.onnx.TensorProto.Segment.verify(t.segment);if(i)return"segment."+i}if(t.floatData!=null&&t.hasOwnProperty("floatData")){if(!Array.isArray(t.floatData))return"floatData: array expected";for(var o=0;o<t.floatData.length;++o)if(typeof t.floatData[o]!="number")return"floatData: number[] expected"}if(t.int32Data!=null&&t.hasOwnProperty("int32Data")){if(!Array.isArray(t.int32Data))return"int32Data: array expected";for(var o=0;o<t.int32Data.length;++o)if(!C.isInteger(t.int32Data[o]))return"int32Data: integer[] expected"}if(t.stringData!=null&&t.hasOwnProperty("stringData")){if(!Array.isArray(t.stringData))return"stringData: array expected";for(var o=0;o<t.stringData.length;++o)if(!(t.stringData[o]&&typeof t.stringData[o].length=="number"||C.isString(t.stringData[o])))return"stringData: buffer[] expected"}if(t.int64Data!=null&&t.hasOwnProperty("int64Data")){if(!Array.isArray(t.int64Data))return"int64Data: array expected";for(var o=0;o<t.int64Data.length;++o)if(!C.isInteger(t.int64Data[o])&&!(t.int64Data[o]&&C.isInteger(t.int64Data[o].low)&&C.isInteger(t.int64Data[o].high)))return"int64Data: integer|Long[] expected"}if(t.name!=null&&t.hasOwnProperty("name")&&!C.isString(t.name))return"name: string expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!C.isString(t.docString))return"docString: string expected";if(t.rawData!=null&&t.hasOwnProperty("rawData")&&!(t.rawData&&typeof t.rawData.length=="number"||C.isString(t.rawData)))return"rawData: buffer expected";if(t.externalData!=null&&t.hasOwnProperty("externalData")){if(!Array.isArray(t.externalData))return"externalData: array expected";for(var o=0;o<t.externalData.length;++o){var i=I.onnx.StringStringEntryProto.verify(t.externalData[o]);if(i)return"externalData."+i}}if(t.dataLocation!=null&&t.hasOwnProperty("dataLocation"))switch(t.dataLocation){default:return"dataLocation: enum value expected";case 0:case 1:break}if(t.doubleData!=null&&t.hasOwnProperty("doubleData")){if(!Array.isArray(t.doubleData))return"doubleData: array expected";for(var o=0;o<t.doubleData.length;++o)if(typeof t.doubleData[o]!="number")return"doubleData: number[] expected"}if(t.uint64Data!=null&&t.hasOwnProperty("uint64Data")){if(!Array.isArray(t.uint64Data))return"uint64Data: array expected";for(var o=0;o<t.uint64Data.length;++o)if(!C.isInteger(t.uint64Data[o])&&!(t.uint64Data[o]&&C.isInteger(t.uint64Data[o].low)&&C.isInteger(t.uint64Data[o].high)))return"uint64Data: integer|Long[] expected"}return null},e.fromObject=function(t){if(t instanceof I.onnx.TensorProto)return t;var o=new I.onnx.TensorProto;if(t.dims){if(!Array.isArray(t.dims))throw TypeError(".onnx.TensorProto.dims: array expected");o.dims=[];for(var i=0;i<t.dims.length;++i)C.Long?(o.dims[i]=C.Long.fromValue(t.dims[i])).unsigned=!1:typeof t.dims[i]=="string"?o.dims[i]=parseInt(t.dims[i],10):typeof t.dims[i]=="number"?o.dims[i]=t.dims[i]:typeof t.dims[i]=="object"&&(o.dims[i]=new C.LongBits(t.dims[i].low>>>0,t.dims[i].high>>>0).toNumber())}if(t.dataType!=null&&(o.dataType=t.dataType|0),t.segment!=null){if(typeof t.segment!="object")throw TypeError(".onnx.TensorProto.segment: object expected");o.segment=I.onnx.TensorProto.Segment.fromObject(t.segment)}if(t.floatData){if(!Array.isArray(t.floatData))throw TypeError(".onnx.TensorProto.floatData: array expected");o.floatData=[];for(var i=0;i<t.floatData.length;++i)o.floatData[i]=Number(t.floatData[i])}if(t.int32Data){if(!Array.isArray(t.int32Data))throw TypeError(".onnx.TensorProto.int32Data: array expected");o.int32Data=[];for(var i=0;i<t.int32Data.length;++i)o.int32Data[i]=t.int32Data[i]|0}if(t.stringData){if(!Array.isArray(t.stringData))throw TypeError(".onnx.TensorProto.stringData: array expected");o.stringData=[];for(var i=0;i<t.stringData.length;++i)typeof t.stringData[i]=="string"?C.base64.decode(t.stringData[i],o.stringData[i]=C.newBuffer(C.base64.length(t.stringData[i])),0):t.stringData[i].length>=0&&(o.stringData[i]=t.stringData[i])}if(t.int64Data){if(!Array.isArray(t.int64Data))throw TypeError(".onnx.TensorProto.int64Data: array expected");o.int64Data=[];for(var i=0;i<t.int64Data.length;++i)C.Long?(o.int64Data[i]=C.Long.fromValue(t.int64Data[i])).unsigned=!1:typeof t.int64Data[i]=="string"?o.int64Data[i]=parseInt(t.int64Data[i],10):typeof t.int64Data[i]=="number"?o.int64Data[i]=t.int64Data[i]:typeof t.int64Data[i]=="object"&&(o.int64Data[i]=new C.LongBits(t.int64Data[i].low>>>0,t.int64Data[i].high>>>0).toNumber())}if(t.name!=null&&(o.name=String(t.name)),t.docString!=null&&(o.docString=String(t.docString)),t.rawData!=null&&(typeof t.rawData=="string"?C.base64.decode(t.rawData,o.rawData=C.newBuffer(C.base64.length(t.rawData)),0):t.rawData.length>=0&&(o.rawData=t.rawData)),t.externalData){if(!Array.isArray(t.externalData))throw TypeError(".onnx.TensorProto.externalData: array expected");o.externalData=[];for(var i=0;i<t.externalData.length;++i){if(typeof t.externalData[i]!="object")throw TypeError(".onnx.TensorProto.externalData: object expected");o.externalData[i]=I.onnx.StringStringEntryProto.fromObject(t.externalData[i])}}switch(t.dataLocation){default:if(typeof t.dataLocation=="number"){o.dataLocation=t.dataLocation;break}break;case"DEFAULT":case 0:o.dataLocation=0;break;case"EXTERNAL":case 1:o.dataLocation=1;break}if(t.doubleData){if(!Array.isArray(t.doubleData))throw TypeError(".onnx.TensorProto.doubleData: array expected");o.doubleData=[];for(var i=0;i<t.doubleData.length;++i)o.doubleData[i]=Number(t.doubleData[i])}if(t.uint64Data){if(!Array.isArray(t.uint64Data))throw TypeError(".onnx.TensorProto.uint64Data: array expected");o.uint64Data=[];for(var i=0;i<t.uint64Data.length;++i)C.Long?(o.uint64Data[i]=C.Long.fromValue(t.uint64Data[i])).unsigned=!0:typeof t.uint64Data[i]=="string"?o.uint64Data[i]=parseInt(t.uint64Data[i],10):typeof t.uint64Data[i]=="number"?o.uint64Data[i]=t.uint64Data[i]:typeof t.uint64Data[i]=="object"&&(o.uint64Data[i]=new C.LongBits(t.uint64Data[i].low>>>0,t.uint64Data[i].high>>>0).toNumber(!0))}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.dims=[],i.floatData=[],i.int32Data=[],i.stringData=[],i.int64Data=[],i.doubleData=[],i.uint64Data=[],i.externalData=[]),o.defaults&&(i.dataType=0,i.segment=null,i.name="",o.bytes===String?i.rawData="":(i.rawData=[],o.bytes!==Array&&(i.rawData=C.newBuffer(i.rawData))),i.docString="",i.dataLocation=o.enums===String?"DEFAULT":0),t.dims&&t.dims.length){i.dims=[];for(var s=0;s<t.dims.length;++s)typeof t.dims[s]=="number"?i.dims[s]=o.longs===String?String(t.dims[s]):t.dims[s]:i.dims[s]=o.longs===String?C.Long.prototype.toString.call(t.dims[s]):o.longs===Number?new C.LongBits(t.dims[s].low>>>0,t.dims[s].high>>>0).toNumber():t.dims[s]}if(t.dataType!=null&&t.hasOwnProperty("dataType")&&(i.dataType=t.dataType),t.segment!=null&&t.hasOwnProperty("segment")&&(i.segment=I.onnx.TensorProto.Segment.toObject(t.segment,o)),t.floatData&&t.floatData.length){i.floatData=[];for(var s=0;s<t.floatData.length;++s)i.floatData[s]=o.json&&!isFinite(t.floatData[s])?String(t.floatData[s]):t.floatData[s]}if(t.int32Data&&t.int32Data.length){i.int32Data=[];for(var s=0;s<t.int32Data.length;++s)i.int32Data[s]=t.int32Data[s]}if(t.stringData&&t.stringData.length){i.stringData=[];for(var s=0;s<t.stringData.length;++s)i.stringData[s]=o.bytes===String?C.base64.encode(t.stringData[s],0,t.stringData[s].length):o.bytes===Array?Array.prototype.slice.call(t.stringData[s]):t.stringData[s]}if(t.int64Data&&t.int64Data.length){i.int64Data=[];for(var s=0;s<t.int64Data.length;++s)typeof t.int64Data[s]=="number"?i.int64Data[s]=o.longs===String?String(t.int64Data[s]):t.int64Data[s]:i.int64Data[s]=o.longs===String?C.Long.prototype.toString.call(t.int64Data[s]):o.longs===Number?new C.LongBits(t.int64Data[s].low>>>0,t.int64Data[s].high>>>0).toNumber():t.int64Data[s]}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.rawData!=null&&t.hasOwnProperty("rawData")&&(i.rawData=o.bytes===String?C.base64.encode(t.rawData,0,t.rawData.length):o.bytes===Array?Array.prototype.slice.call(t.rawData):t.rawData),t.doubleData&&t.doubleData.length){i.doubleData=[];for(var s=0;s<t.doubleData.length;++s)i.doubleData[s]=o.json&&!isFinite(t.doubleData[s])?String(t.doubleData[s]):t.doubleData[s]}if(t.uint64Data&&t.uint64Data.length){i.uint64Data=[];for(var s=0;s<t.uint64Data.length;++s)typeof t.uint64Data[s]=="number"?i.uint64Data[s]=o.longs===String?String(t.uint64Data[s]):t.uint64Data[s]:i.uint64Data[s]=o.longs===String?C.Long.prototype.toString.call(t.uint64Data[s]):o.longs===Number?new C.LongBits(t.uint64Data[s].low>>>0,t.uint64Data[s].high>>>0).toNumber(!0):t.uint64Data[s]}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.externalData&&t.externalData.length){i.externalData=[];for(var s=0;s<t.externalData.length;++s)i.externalData[s]=I.onnx.StringStringEntryProto.toObject(t.externalData[s],o)}return t.dataLocation!=null&&t.hasOwnProperty("dataLocation")&&(i.dataLocation=o.enums===String?I.onnx.TensorProto.DataLocation[t.dataLocation]===void 0?t.dataLocation:I.onnx.TensorProto.DataLocation[t.dataLocation]:t.dataLocation),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TensorProto"},e.DataType=function(){var n={},t=Object.create(n);return t[n[0]="UNDEFINED"]=0,t[n[1]="FLOAT"]=1,t[n[2]="UINT8"]=2,t[n[3]="INT8"]=3,t[n[4]="UINT16"]=4,t[n[5]="INT16"]=5,t[n[6]="INT32"]=6,t[n[7]="INT64"]=7,t[n[8]="STRING"]=8,t[n[9]="BOOL"]=9,t[n[10]="FLOAT16"]=10,t[n[11]="DOUBLE"]=11,t[n[12]="UINT32"]=12,t[n[13]="UINT64"]=13,t[n[14]="COMPLEX64"]=14,t[n[15]="COMPLEX128"]=15,t[n[16]="BFLOAT16"]=16,t[n[17]="FLOAT8E4M3FN"]=17,t[n[18]="FLOAT8E4M3FNUZ"]=18,t[n[19]="FLOAT8E5M2"]=19,t[n[20]="FLOAT8E5M2FNUZ"]=20,t}(),e.Segment=function(){function n(t){if(t)for(var o=Object.keys(t),i=0;i<o.length;++i)t[o[i]]!=null&&(this[o[i]]=t[o[i]])}return n.prototype.begin=C.Long?C.Long.fromBits(0,0,!1):0,n.prototype.end=C.Long?C.Long.fromBits(0,0,!1):0,n.create=function(o){return new n(o)},n.encode=function(o,i){return i||(i=pt.create()),o.begin!=null&&Object.hasOwnProperty.call(o,"begin")&&i.uint32(8).int64(o.begin),o.end!=null&&Object.hasOwnProperty.call(o,"end")&&i.uint32(16).int64(o.end),i},n.encodeDelimited=function(o,i){return this.encode(o,i).ldelim()},n.decode=function(o,i){o instanceof ee||(o=ee.create(o));for(var s=i===void 0?o.len:o.pos+i,a=new I.onnx.TensorProto.Segment;o.pos<s;){var u=o.uint32();switch(u>>>3){case 1:{a.begin=o.int64();break}case 2:{a.end=o.int64();break}default:o.skipType(u&7);break}}return a},n.decodeDelimited=function(o){return o instanceof ee||(o=new ee(o)),this.decode(o,o.uint32())},n.verify=function(o){return typeof o!="object"||o===null?"object expected":o.begin!=null&&o.hasOwnProperty("begin")&&!C.isInteger(o.begin)&&!(o.begin&&C.isInteger(o.begin.low)&&C.isInteger(o.begin.high))?"begin: integer|Long expected":o.end!=null&&o.hasOwnProperty("end")&&!C.isInteger(o.end)&&!(o.end&&C.isInteger(o.end.low)&&C.isInteger(o.end.high))?"end: integer|Long expected":null},n.fromObject=function(o){if(o instanceof I.onnx.TensorProto.Segment)return o;var i=new I.onnx.TensorProto.Segment;return o.begin!=null&&(C.Long?(i.begin=C.Long.fromValue(o.begin)).unsigned=!1:typeof o.begin=="string"?i.begin=parseInt(o.begin,10):typeof o.begin=="number"?i.begin=o.begin:typeof o.begin=="object"&&(i.begin=new C.LongBits(o.begin.low>>>0,o.begin.high>>>0).toNumber())),o.end!=null&&(C.Long?(i.end=C.Long.fromValue(o.end)).unsigned=!1:typeof o.end=="string"?i.end=parseInt(o.end,10):typeof o.end=="number"?i.end=o.end:typeof o.end=="object"&&(i.end=new C.LongBits(o.end.low>>>0,o.end.high>>>0).toNumber())),i},n.toObject=function(o,i){i||(i={});var s={};if(i.defaults){if(C.Long){var a=new C.Long(0,0,!1);s.begin=i.longs===String?a.toString():i.longs===Number?a.toNumber():a}else s.begin=i.longs===String?"0":0;if(C.Long){var a=new C.Long(0,0,!1);s.end=i.longs===String?a.toString():i.longs===Number?a.toNumber():a}else s.end=i.longs===String?"0":0}return o.begin!=null&&o.hasOwnProperty("begin")&&(typeof o.begin=="number"?s.begin=i.longs===String?String(o.begin):o.begin:s.begin=i.longs===String?C.Long.prototype.toString.call(o.begin):i.longs===Number?new C.LongBits(o.begin.low>>>0,o.begin.high>>>0).toNumber():o.begin),o.end!=null&&o.hasOwnProperty("end")&&(typeof o.end=="number"?s.end=i.longs===String?String(o.end):o.end:s.end=i.longs===String?C.Long.prototype.toString.call(o.end):i.longs===Number?new C.LongBits(o.end.low>>>0,o.end.high>>>0).toNumber():o.end),s},n.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},n.getTypeUrl=function(o){return o===void 0&&(o="type.googleapis.com"),o+"/onnx.TensorProto.Segment"},n}(),e.DataLocation=function(){var n={},t=Object.create(n);return t[n[0]="DEFAULT"]=0,t[n[1]="EXTERNAL"]=1,t}(),e}(),r.SparseTensorProto=function(){function e(n){if(this.dims=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.values=null,e.prototype.indices=null,e.prototype.dims=C.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=pt.create()),t.values!=null&&Object.hasOwnProperty.call(t,"values")&&I.onnx.TensorProto.encode(t.values,o.uint32(10).fork()).ldelim(),t.indices!=null&&Object.hasOwnProperty.call(t,"indices")&&I.onnx.TensorProto.encode(t.indices,o.uint32(18).fork()).ldelim(),t.dims!=null&&t.dims.length){o.uint32(26).fork();for(var i=0;i<t.dims.length;++i)o.int64(t.dims[i]);o.ldelim()}return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ee||(t=ee.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.SparseTensorProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.values=I.onnx.TensorProto.decode(t,t.uint32());break}case 2:{s.indices=I.onnx.TensorProto.decode(t,t.uint32());break}case 3:{if(s.dims&&s.dims.length||(s.dims=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.dims.push(t.int64());else s.dims.push(t.int64());break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ee||(t=new ee(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.values!=null&&t.hasOwnProperty("values")){var o=I.onnx.TensorProto.verify(t.values);if(o)return"values."+o}if(t.indices!=null&&t.hasOwnProperty("indices")){var o=I.onnx.TensorProto.verify(t.indices);if(o)return"indices."+o}if(t.dims!=null&&t.hasOwnProperty("dims")){if(!Array.isArray(t.dims))return"dims: array expected";for(var i=0;i<t.dims.length;++i)if(!C.isInteger(t.dims[i])&&!(t.dims[i]&&C.isInteger(t.dims[i].low)&&C.isInteger(t.dims[i].high)))return"dims: integer|Long[] expected"}return null},e.fromObject=function(t){if(t instanceof I.onnx.SparseTensorProto)return t;var o=new I.onnx.SparseTensorProto;if(t.values!=null){if(typeof t.values!="object")throw TypeError(".onnx.SparseTensorProto.values: object expected");o.values=I.onnx.TensorProto.fromObject(t.values)}if(t.indices!=null){if(typeof t.indices!="object")throw TypeError(".onnx.SparseTensorProto.indices: object expected");o.indices=I.onnx.TensorProto.fromObject(t.indices)}if(t.dims){if(!Array.isArray(t.dims))throw TypeError(".onnx.SparseTensorProto.dims: array expected");o.dims=[];for(var i=0;i<t.dims.length;++i)C.Long?(o.dims[i]=C.Long.fromValue(t.dims[i])).unsigned=!1:typeof t.dims[i]=="string"?o.dims[i]=parseInt(t.dims[i],10):typeof t.dims[i]=="number"?o.dims[i]=t.dims[i]:typeof t.dims[i]=="object"&&(o.dims[i]=new C.LongBits(t.dims[i].low>>>0,t.dims[i].high>>>0).toNumber())}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.dims=[]),o.defaults&&(i.values=null,i.indices=null),t.values!=null&&t.hasOwnProperty("values")&&(i.values=I.onnx.TensorProto.toObject(t.values,o)),t.indices!=null&&t.hasOwnProperty("indices")&&(i.indices=I.onnx.TensorProto.toObject(t.indices,o)),t.dims&&t.dims.length){i.dims=[];for(var s=0;s<t.dims.length;++s)typeof t.dims[s]=="number"?i.dims[s]=o.longs===String?String(t.dims[s]):t.dims[s]:i.dims[s]=o.longs===String?C.Long.prototype.toString.call(t.dims[s]):o.longs===Number?new C.LongBits(t.dims[s].low>>>0,t.dims[s].high>>>0).toNumber():t.dims[s]}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.SparseTensorProto"},e}(),r.TensorShapeProto=function(){function e(n){if(this.dim=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.dim=C.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=pt.create()),t.dim!=null&&t.dim.length)for(var i=0;i<t.dim.length;++i)I.onnx.TensorShapeProto.Dimension.encode(t.dim[i],o.uint32(10).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ee||(t=ee.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.TensorShapeProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.dim&&s.dim.length||(s.dim=[]),s.dim.push(I.onnx.TensorShapeProto.Dimension.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ee||(t=new ee(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.dim!=null&&t.hasOwnProperty("dim")){if(!Array.isArray(t.dim))return"dim: array expected";for(var o=0;o<t.dim.length;++o){var i=I.onnx.TensorShapeProto.Dimension.verify(t.dim[o]);if(i)return"dim."+i}}return null},e.fromObject=function(t){if(t instanceof I.onnx.TensorShapeProto)return t;var o=new I.onnx.TensorShapeProto;if(t.dim){if(!Array.isArray(t.dim))throw TypeError(".onnx.TensorShapeProto.dim: array expected");o.dim=[];for(var i=0;i<t.dim.length;++i){if(typeof t.dim[i]!="object")throw TypeError(".onnx.TensorShapeProto.dim: object expected");o.dim[i]=I.onnx.TensorShapeProto.Dimension.fromObject(t.dim[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.dim=[]),t.dim&&t.dim.length){i.dim=[];for(var s=0;s<t.dim.length;++s)i.dim[s]=I.onnx.TensorShapeProto.Dimension.toObject(t.dim[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TensorShapeProto"},e.Dimension=function(){function n(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}n.prototype.dimValue=null,n.prototype.dimParam=null,n.prototype.denotation="";var t;return Object.defineProperty(n.prototype,"value",{get:C.oneOfGetter(t=["dimValue","dimParam"]),set:C.oneOfSetter(t)}),n.create=function(i){return new n(i)},n.encode=function(i,s){return s||(s=pt.create()),i.dimValue!=null&&Object.hasOwnProperty.call(i,"dimValue")&&s.uint32(8).int64(i.dimValue),i.dimParam!=null&&Object.hasOwnProperty.call(i,"dimParam")&&s.uint32(18).string(i.dimParam),i.denotation!=null&&Object.hasOwnProperty.call(i,"denotation")&&s.uint32(26).string(i.denotation),s},n.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},n.decode=function(i,s){i instanceof ee||(i=ee.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new I.onnx.TensorShapeProto.Dimension;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.dimValue=i.int64();break}case 2:{u.dimParam=i.string();break}case 3:{u.denotation=i.string();break}default:i.skipType(l&7);break}}return u},n.decodeDelimited=function(i){return i instanceof ee||(i=new ee(i)),this.decode(i,i.uint32())},n.verify=function(i){if(typeof i!="object"||i===null)return"object expected";var s={};if(i.dimValue!=null&&i.hasOwnProperty("dimValue")&&(s.value=1,!C.isInteger(i.dimValue)&&!(i.dimValue&&C.isInteger(i.dimValue.low)&&C.isInteger(i.dimValue.high))))return"dimValue: integer|Long expected";if(i.dimParam!=null&&i.hasOwnProperty("dimParam")){if(s.value===1)return"value: multiple values";if(s.value=1,!C.isString(i.dimParam))return"dimParam: string expected"}return i.denotation!=null&&i.hasOwnProperty("denotation")&&!C.isString(i.denotation)?"denotation: string expected":null},n.fromObject=function(i){if(i instanceof I.onnx.TensorShapeProto.Dimension)return i;var s=new I.onnx.TensorShapeProto.Dimension;return i.dimValue!=null&&(C.Long?(s.dimValue=C.Long.fromValue(i.dimValue)).unsigned=!1:typeof i.dimValue=="string"?s.dimValue=parseInt(i.dimValue,10):typeof i.dimValue=="number"?s.dimValue=i.dimValue:typeof i.dimValue=="object"&&(s.dimValue=new C.LongBits(i.dimValue.low>>>0,i.dimValue.high>>>0).toNumber())),i.dimParam!=null&&(s.dimParam=String(i.dimParam)),i.denotation!=null&&(s.denotation=String(i.denotation)),s},n.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.denotation=""),i.dimValue!=null&&i.hasOwnProperty("dimValue")&&(typeof i.dimValue=="number"?a.dimValue=s.longs===String?String(i.dimValue):i.dimValue:a.dimValue=s.longs===String?C.Long.prototype.toString.call(i.dimValue):s.longs===Number?new C.LongBits(i.dimValue.low>>>0,i.dimValue.high>>>0).toNumber():i.dimValue,s.oneofs&&(a.value="dimValue")),i.dimParam!=null&&i.hasOwnProperty("dimParam")&&(a.dimParam=i.dimParam,s.oneofs&&(a.value="dimParam")),i.denotation!=null&&i.hasOwnProperty("denotation")&&(a.denotation=i.denotation),a},n.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},n.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TensorShapeProto.Dimension"},n}(),e}(),r.TypeProto=function(){function e(t){if(t)for(var o=Object.keys(t),i=0;i<o.length;++i)t[o[i]]!=null&&(this[o[i]]=t[o[i]])}e.prototype.tensorType=null,e.prototype.sequenceType=null,e.prototype.mapType=null,e.prototype.optionalType=null,e.prototype.sparseTensorType=null,e.prototype.denotation="";var n;return Object.defineProperty(e.prototype,"value",{get:C.oneOfGetter(n=["tensorType","sequenceType","mapType","optionalType","sparseTensorType"]),set:C.oneOfSetter(n)}),e.create=function(o){return new e(o)},e.encode=function(o,i){return i||(i=pt.create()),o.tensorType!=null&&Object.hasOwnProperty.call(o,"tensorType")&&I.onnx.TypeProto.Tensor.encode(o.tensorType,i.uint32(10).fork()).ldelim(),o.sequenceType!=null&&Object.hasOwnProperty.call(o,"sequenceType")&&I.onnx.TypeProto.Sequence.encode(o.sequenceType,i.uint32(34).fork()).ldelim(),o.mapType!=null&&Object.hasOwnProperty.call(o,"mapType")&&I.onnx.TypeProto.Map.encode(o.mapType,i.uint32(42).fork()).ldelim(),o.denotation!=null&&Object.hasOwnProperty.call(o,"denotation")&&i.uint32(50).string(o.denotation),o.sparseTensorType!=null&&Object.hasOwnProperty.call(o,"sparseTensorType")&&I.onnx.TypeProto.SparseTensor.encode(o.sparseTensorType,i.uint32(66).fork()).ldelim(),o.optionalType!=null&&Object.hasOwnProperty.call(o,"optionalType")&&I.onnx.TypeProto.Optional.encode(o.optionalType,i.uint32(74).fork()).ldelim(),i},e.encodeDelimited=function(o,i){return this.encode(o,i).ldelim()},e.decode=function(o,i){o instanceof ee||(o=ee.create(o));for(var s=i===void 0?o.len:o.pos+i,a=new I.onnx.TypeProto;o.pos<s;){var u=o.uint32();switch(u>>>3){case 1:{a.tensorType=I.onnx.TypeProto.Tensor.decode(o,o.uint32());break}case 4:{a.sequenceType=I.onnx.TypeProto.Sequence.decode(o,o.uint32());break}case 5:{a.mapType=I.onnx.TypeProto.Map.decode(o,o.uint32());break}case 9:{a.optionalType=I.onnx.TypeProto.Optional.decode(o,o.uint32());break}case 8:{a.sparseTensorType=I.onnx.TypeProto.SparseTensor.decode(o,o.uint32());break}case 6:{a.denotation=o.string();break}default:o.skipType(u&7);break}}return a},e.decodeDelimited=function(o){return o instanceof ee||(o=new ee(o)),this.decode(o,o.uint32())},e.verify=function(o){if(typeof o!="object"||o===null)return"object expected";var i={};if(o.tensorType!=null&&o.hasOwnProperty("tensorType")){i.value=1;{var s=I.onnx.TypeProto.Tensor.verify(o.tensorType);if(s)return"tensorType."+s}}if(o.sequenceType!=null&&o.hasOwnProperty("sequenceType")){if(i.value===1)return"value: multiple values";i.value=1;{var s=I.onnx.TypeProto.Sequence.verify(o.sequenceType);if(s)return"sequenceType."+s}}if(o.mapType!=null&&o.hasOwnProperty("mapType")){if(i.value===1)return"value: multiple values";i.value=1;{var s=I.onnx.TypeProto.Map.verify(o.mapType);if(s)return"mapType."+s}}if(o.optionalType!=null&&o.hasOwnProperty("optionalType")){if(i.value===1)return"value: multiple values";i.value=1;{var s=I.onnx.TypeProto.Optional.verify(o.optionalType);if(s)return"optionalType."+s}}if(o.sparseTensorType!=null&&o.hasOwnProperty("sparseTensorType")){if(i.value===1)return"value: multiple values";i.value=1;{var s=I.onnx.TypeProto.SparseTensor.verify(o.sparseTensorType);if(s)return"sparseTensorType."+s}}return o.denotation!=null&&o.hasOwnProperty("denotation")&&!C.isString(o.denotation)?"denotation: string expected":null},e.fromObject=function(o){if(o instanceof I.onnx.TypeProto)return o;var i=new I.onnx.TypeProto;if(o.tensorType!=null){if(typeof o.tensorType!="object")throw TypeError(".onnx.TypeProto.tensorType: object expected");i.tensorType=I.onnx.TypeProto.Tensor.fromObject(o.tensorType)}if(o.sequenceType!=null){if(typeof o.sequenceType!="object")throw TypeError(".onnx.TypeProto.sequenceType: object expected");i.sequenceType=I.onnx.TypeProto.Sequence.fromObject(o.sequenceType)}if(o.mapType!=null){if(typeof o.mapType!="object")throw TypeError(".onnx.TypeProto.mapType: object expected");i.mapType=I.onnx.TypeProto.Map.fromObject(o.mapType)}if(o.optionalType!=null){if(typeof o.optionalType!="object")throw TypeError(".onnx.TypeProto.optionalType: object expected");i.optionalType=I.onnx.TypeProto.Optional.fromObject(o.optionalType)}if(o.sparseTensorType!=null){if(typeof o.sparseTensorType!="object")throw TypeError(".onnx.TypeProto.sparseTensorType: object expected");i.sparseTensorType=I.onnx.TypeProto.SparseTensor.fromObject(o.sparseTensorType)}return o.denotation!=null&&(i.denotation=String(o.denotation)),i},e.toObject=function(o,i){i||(i={});var s={};return i.defaults&&(s.denotation=""),o.tensorType!=null&&o.hasOwnProperty("tensorType")&&(s.tensorType=I.onnx.TypeProto.Tensor.toObject(o.tensorType,i),i.oneofs&&(s.value="tensorType")),o.sequenceType!=null&&o.hasOwnProperty("sequenceType")&&(s.sequenceType=I.onnx.TypeProto.Sequence.toObject(o.sequenceType,i),i.oneofs&&(s.value="sequenceType")),o.mapType!=null&&o.hasOwnProperty("mapType")&&(s.mapType=I.onnx.TypeProto.Map.toObject(o.mapType,i),i.oneofs&&(s.value="mapType")),o.denotation!=null&&o.hasOwnProperty("denotation")&&(s.denotation=o.denotation),o.sparseTensorType!=null&&o.hasOwnProperty("sparseTensorType")&&(s.sparseTensorType=I.onnx.TypeProto.SparseTensor.toObject(o.sparseTensorType,i),i.oneofs&&(s.value="sparseTensorType")),o.optionalType!=null&&o.hasOwnProperty("optionalType")&&(s.optionalType=I.onnx.TypeProto.Optional.toObject(o.optionalType,i),i.oneofs&&(s.value="optionalType")),s},e.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},e.getTypeUrl=function(o){return o===void 0&&(o="type.googleapis.com"),o+"/onnx.TypeProto"},e.Tensor=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.elemType=0,t.prototype.shape=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=pt.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&s.uint32(8).int32(i.elemType),i.shape!=null&&Object.hasOwnProperty.call(i,"shape")&&I.onnx.TensorShapeProto.encode(i.shape,s.uint32(18).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof ee||(i=ee.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new I.onnx.TypeProto.Tensor;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.elemType=i.int32();break}case 2:{u.shape=I.onnx.TensorShapeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof ee||(i=new ee(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")&&!C.isInteger(i.elemType))return"elemType: integer expected";if(i.shape!=null&&i.hasOwnProperty("shape")){var s=I.onnx.TensorShapeProto.verify(i.shape);if(s)return"shape."+s}return null},t.fromObject=function(i){if(i instanceof I.onnx.TypeProto.Tensor)return i;var s=new I.onnx.TypeProto.Tensor;if(i.elemType!=null&&(s.elemType=i.elemType|0),i.shape!=null){if(typeof i.shape!="object")throw TypeError(".onnx.TypeProto.Tensor.shape: object expected");s.shape=I.onnx.TensorShapeProto.fromObject(i.shape)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.elemType=0,a.shape=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=i.elemType),i.shape!=null&&i.hasOwnProperty("shape")&&(a.shape=I.onnx.TensorShapeProto.toObject(i.shape,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Tensor"},t}(),e.Sequence=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.elemType=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=pt.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&I.onnx.TypeProto.encode(i.elemType,s.uint32(10).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof ee||(i=ee.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new I.onnx.TypeProto.Sequence;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.elemType=I.onnx.TypeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof ee||(i=new ee(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")){var s=I.onnx.TypeProto.verify(i.elemType);if(s)return"elemType."+s}return null},t.fromObject=function(i){if(i instanceof I.onnx.TypeProto.Sequence)return i;var s=new I.onnx.TypeProto.Sequence;if(i.elemType!=null){if(typeof i.elemType!="object")throw TypeError(".onnx.TypeProto.Sequence.elemType: object expected");s.elemType=I.onnx.TypeProto.fromObject(i.elemType)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.elemType=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=I.onnx.TypeProto.toObject(i.elemType,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Sequence"},t}(),e.Map=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.keyType=0,t.prototype.valueType=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=pt.create()),i.keyType!=null&&Object.hasOwnProperty.call(i,"keyType")&&s.uint32(8).int32(i.keyType),i.valueType!=null&&Object.hasOwnProperty.call(i,"valueType")&&I.onnx.TypeProto.encode(i.valueType,s.uint32(18).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof ee||(i=ee.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new I.onnx.TypeProto.Map;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.keyType=i.int32();break}case 2:{u.valueType=I.onnx.TypeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof ee||(i=new ee(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.keyType!=null&&i.hasOwnProperty("keyType")&&!C.isInteger(i.keyType))return"keyType: integer expected";if(i.valueType!=null&&i.hasOwnProperty("valueType")){var s=I.onnx.TypeProto.verify(i.valueType);if(s)return"valueType."+s}return null},t.fromObject=function(i){if(i instanceof I.onnx.TypeProto.Map)return i;var s=new I.onnx.TypeProto.Map;if(i.keyType!=null&&(s.keyType=i.keyType|0),i.valueType!=null){if(typeof i.valueType!="object")throw TypeError(".onnx.TypeProto.Map.valueType: object expected");s.valueType=I.onnx.TypeProto.fromObject(i.valueType)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.keyType=0,a.valueType=null),i.keyType!=null&&i.hasOwnProperty("keyType")&&(a.keyType=i.keyType),i.valueType!=null&&i.hasOwnProperty("valueType")&&(a.valueType=I.onnx.TypeProto.toObject(i.valueType,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Map"},t}(),e.Optional=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.elemType=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=pt.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&I.onnx.TypeProto.encode(i.elemType,s.uint32(10).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof ee||(i=ee.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new I.onnx.TypeProto.Optional;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.elemType=I.onnx.TypeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof ee||(i=new ee(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")){var s=I.onnx.TypeProto.verify(i.elemType);if(s)return"elemType."+s}return null},t.fromObject=function(i){if(i instanceof I.onnx.TypeProto.Optional)return i;var s=new I.onnx.TypeProto.Optional;if(i.elemType!=null){if(typeof i.elemType!="object")throw TypeError(".onnx.TypeProto.Optional.elemType: object expected");s.elemType=I.onnx.TypeProto.fromObject(i.elemType)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.elemType=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=I.onnx.TypeProto.toObject(i.elemType,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Optional"},t}(),e.SparseTensor=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.elemType=0,t.prototype.shape=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=pt.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&s.uint32(8).int32(i.elemType),i.shape!=null&&Object.hasOwnProperty.call(i,"shape")&&I.onnx.TensorShapeProto.encode(i.shape,s.uint32(18).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof ee||(i=ee.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new I.onnx.TypeProto.SparseTensor;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.elemType=i.int32();break}case 2:{u.shape=I.onnx.TensorShapeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof ee||(i=new ee(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")&&!C.isInteger(i.elemType))return"elemType: integer expected";if(i.shape!=null&&i.hasOwnProperty("shape")){var s=I.onnx.TensorShapeProto.verify(i.shape);if(s)return"shape."+s}return null},t.fromObject=function(i){if(i instanceof I.onnx.TypeProto.SparseTensor)return i;var s=new I.onnx.TypeProto.SparseTensor;if(i.elemType!=null&&(s.elemType=i.elemType|0),i.shape!=null){if(typeof i.shape!="object")throw TypeError(".onnx.TypeProto.SparseTensor.shape: object expected");s.shape=I.onnx.TensorShapeProto.fromObject(i.shape)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.elemType=0,a.shape=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=i.elemType),i.shape!=null&&i.hasOwnProperty("shape")&&(a.shape=I.onnx.TensorShapeProto.toObject(i.shape,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.SparseTensor"},t}(),e}(),r.OperatorSetIdProto=function(){function e(n){if(n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.domain="",e.prototype.version=C.Long?C.Long.fromBits(0,0,!1):0,e.create=function(t){return new e(t)},e.encode=function(t,o){return o||(o=pt.create()),t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(10).string(t.domain),t.version!=null&&Object.hasOwnProperty.call(t,"version")&&o.uint32(16).int64(t.version),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ee||(t=ee.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.OperatorSetIdProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.domain=t.string();break}case 2:{s.version=t.int64();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ee||(t=new ee(t)),this.decode(t,t.uint32())},e.verify=function(t){return typeof t!="object"||t===null?"object expected":t.domain!=null&&t.hasOwnProperty("domain")&&!C.isString(t.domain)?"domain: string expected":t.version!=null&&t.hasOwnProperty("version")&&!C.isInteger(t.version)&&!(t.version&&C.isInteger(t.version.low)&&C.isInteger(t.version.high))?"version: integer|Long expected":null},e.fromObject=function(t){if(t instanceof I.onnx.OperatorSetIdProto)return t;var o=new I.onnx.OperatorSetIdProto;return t.domain!=null&&(o.domain=String(t.domain)),t.version!=null&&(C.Long?(o.version=C.Long.fromValue(t.version)).unsigned=!1:typeof t.version=="string"?o.version=parseInt(t.version,10):typeof t.version=="number"?o.version=t.version:typeof t.version=="object"&&(o.version=new C.LongBits(t.version.low>>>0,t.version.high>>>0).toNumber())),o},e.toObject=function(t,o){o||(o={});var i={};if(o.defaults)if(i.domain="",C.Long){var s=new C.Long(0,0,!1);i.version=o.longs===String?s.toString():o.longs===Number?s.toNumber():s}else i.version=o.longs===String?"0":0;return t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),t.version!=null&&t.hasOwnProperty("version")&&(typeof t.version=="number"?i.version=o.longs===String?String(t.version):t.version:i.version=o.longs===String?C.Long.prototype.toString.call(t.version):o.longs===Number?new C.LongBits(t.version.low>>>0,t.version.high>>>0).toNumber():t.version),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.OperatorSetIdProto"},e}(),r.OperatorStatus=function(){var e={},n=Object.create(e);return n[e[0]="EXPERIMENTAL"]=0,n[e[1]="STABLE"]=1,n}(),r.FunctionProto=function(){function e(n){if(this.input=[],this.output=[],this.attribute=[],this.attributeProto=[],this.node=[],this.opsetImport=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.name="",e.prototype.input=C.emptyArray,e.prototype.output=C.emptyArray,e.prototype.attribute=C.emptyArray,e.prototype.attributeProto=C.emptyArray,e.prototype.node=C.emptyArray,e.prototype.docString="",e.prototype.opsetImport=C.emptyArray,e.prototype.domain="",e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=pt.create()),t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(10).string(t.name),t.input!=null&&t.input.length)for(var i=0;i<t.input.length;++i)o.uint32(34).string(t.input[i]);if(t.output!=null&&t.output.length)for(var i=0;i<t.output.length;++i)o.uint32(42).string(t.output[i]);if(t.attribute!=null&&t.attribute.length)for(var i=0;i<t.attribute.length;++i)o.uint32(50).string(t.attribute[i]);if(t.node!=null&&t.node.length)for(var i=0;i<t.node.length;++i)I.onnx.NodeProto.encode(t.node[i],o.uint32(58).fork()).ldelim();if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(66).string(t.docString),t.opsetImport!=null&&t.opsetImport.length)for(var i=0;i<t.opsetImport.length;++i)I.onnx.OperatorSetIdProto.encode(t.opsetImport[i],o.uint32(74).fork()).ldelim();if(t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(82).string(t.domain),t.attributeProto!=null&&t.attributeProto.length)for(var i=0;i<t.attributeProto.length;++i)I.onnx.AttributeProto.encode(t.attributeProto[i],o.uint32(90).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ee||(t=ee.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.FunctionProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.name=t.string();break}case 4:{s.input&&s.input.length||(s.input=[]),s.input.push(t.string());break}case 5:{s.output&&s.output.length||(s.output=[]),s.output.push(t.string());break}case 6:{s.attribute&&s.attribute.length||(s.attribute=[]),s.attribute.push(t.string());break}case 11:{s.attributeProto&&s.attributeProto.length||(s.attributeProto=[]),s.attributeProto.push(I.onnx.AttributeProto.decode(t,t.uint32()));break}case 7:{s.node&&s.node.length||(s.node=[]),s.node.push(I.onnx.NodeProto.decode(t,t.uint32()));break}case 8:{s.docString=t.string();break}case 9:{s.opsetImport&&s.opsetImport.length||(s.opsetImport=[]),s.opsetImport.push(I.onnx.OperatorSetIdProto.decode(t,t.uint32()));break}case 10:{s.domain=t.string();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ee||(t=new ee(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!C.isString(t.name))return"name: string expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var o=0;o<t.input.length;++o)if(!C.isString(t.input[o]))return"input: string[] expected"}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(var o=0;o<t.output.length;++o)if(!C.isString(t.output[o]))return"output: string[] expected"}if(t.attribute!=null&&t.hasOwnProperty("attribute")){if(!Array.isArray(t.attribute))return"attribute: array expected";for(var o=0;o<t.attribute.length;++o)if(!C.isString(t.attribute[o]))return"attribute: string[] expected"}if(t.attributeProto!=null&&t.hasOwnProperty("attributeProto")){if(!Array.isArray(t.attributeProto))return"attributeProto: array expected";for(var o=0;o<t.attributeProto.length;++o){var i=I.onnx.AttributeProto.verify(t.attributeProto[o]);if(i)return"attributeProto."+i}}if(t.node!=null&&t.hasOwnProperty("node")){if(!Array.isArray(t.node))return"node: array expected";for(var o=0;o<t.node.length;++o){var i=I.onnx.NodeProto.verify(t.node[o]);if(i)return"node."+i}}if(t.docString!=null&&t.hasOwnProperty("docString")&&!C.isString(t.docString))return"docString: string expected";if(t.opsetImport!=null&&t.hasOwnProperty("opsetImport")){if(!Array.isArray(t.opsetImport))return"opsetImport: array expected";for(var o=0;o<t.opsetImport.length;++o){var i=I.onnx.OperatorSetIdProto.verify(t.opsetImport[o]);if(i)return"opsetImport."+i}}return t.domain!=null&&t.hasOwnProperty("domain")&&!C.isString(t.domain)?"domain: string expected":null},e.fromObject=function(t){if(t instanceof I.onnx.FunctionProto)return t;var o=new I.onnx.FunctionProto;if(t.name!=null&&(o.name=String(t.name)),t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.FunctionProto.input: array expected");o.input=[];for(var i=0;i<t.input.length;++i)o.input[i]=String(t.input[i])}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.FunctionProto.output: array expected");o.output=[];for(var i=0;i<t.output.length;++i)o.output[i]=String(t.output[i])}if(t.attribute){if(!Array.isArray(t.attribute))throw TypeError(".onnx.FunctionProto.attribute: array expected");o.attribute=[];for(var i=0;i<t.attribute.length;++i)o.attribute[i]=String(t.attribute[i])}if(t.attributeProto){if(!Array.isArray(t.attributeProto))throw TypeError(".onnx.FunctionProto.attributeProto: array expected");o.attributeProto=[];for(var i=0;i<t.attributeProto.length;++i){if(typeof t.attributeProto[i]!="object")throw TypeError(".onnx.FunctionProto.attributeProto: object expected");o.attributeProto[i]=I.onnx.AttributeProto.fromObject(t.attributeProto[i])}}if(t.node){if(!Array.isArray(t.node))throw TypeError(".onnx.FunctionProto.node: array expected");o.node=[];for(var i=0;i<t.node.length;++i){if(typeof t.node[i]!="object")throw TypeError(".onnx.FunctionProto.node: object expected");o.node[i]=I.onnx.NodeProto.fromObject(t.node[i])}}if(t.docString!=null&&(o.docString=String(t.docString)),t.opsetImport){if(!Array.isArray(t.opsetImport))throw TypeError(".onnx.FunctionProto.opsetImport: array expected");o.opsetImport=[];for(var i=0;i<t.opsetImport.length;++i){if(typeof t.opsetImport[i]!="object")throw TypeError(".onnx.FunctionProto.opsetImport: object expected");o.opsetImport[i]=I.onnx.OperatorSetIdProto.fromObject(t.opsetImport[i])}}return t.domain!=null&&(o.domain=String(t.domain)),o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.input=[],i.output=[],i.attribute=[],i.node=[],i.opsetImport=[],i.attributeProto=[]),o.defaults&&(i.name="",i.docString="",i.domain=""),t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.input&&t.input.length){i.input=[];for(var s=0;s<t.input.length;++s)i.input[s]=t.input[s]}if(t.output&&t.output.length){i.output=[];for(var s=0;s<t.output.length;++s)i.output[s]=t.output[s]}if(t.attribute&&t.attribute.length){i.attribute=[];for(var s=0;s<t.attribute.length;++s)i.attribute[s]=t.attribute[s]}if(t.node&&t.node.length){i.node=[];for(var s=0;s<t.node.length;++s)i.node[s]=I.onnx.NodeProto.toObject(t.node[s],o)}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.opsetImport&&t.opsetImport.length){i.opsetImport=[];for(var s=0;s<t.opsetImport.length;++s)i.opsetImport[s]=I.onnx.OperatorSetIdProto.toObject(t.opsetImport[s],o)}if(t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),t.attributeProto&&t.attributeProto.length){i.attributeProto=[];for(var s=0;s<t.attributeProto.length;++s)i.attributeProto[s]=I.onnx.AttributeProto.toObject(t.attributeProto[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.FunctionProto"},e}(),r}();Ic.exports=I});function Zn(r,e){if(!r)throw new Error(typeof e=="string"?e:e())}function Fo(r){return new TextDecoder().decode(r)}var ut,Sn,Ms,Vt,Yi,Pt,Jt,se,Lo,In,An,On,Xe=R(()=>{"use strict";Wi();$s();ut=qn(Xn());En();Sn=class{static arraysEqual(e,n){if(e.length!==n.length)return!1;for(let t=0;t<e.length;t++)if(e[t]!==n[t])return!1;return!0}},Ms=class{static preprocessInputShapes(e,n){let t=e.length===1?[1,e[0]]:e,o=n.length===1?[n[0],1]:n;return[t,o]}static postprocessOutputShape(e,n,t){n===1&&e.splice(e.length-2,1),t===1&&e.pop()}static calcMatMulShape(e,n){return e[1]!==n[0]?void 0:[e[0],n[1]]}},Vt=class r{static calcShape(e,n,t=!1){let o=e.length,i=n.length;if(o===0)return n;if(i===0)return e;let s=Math.max(e.length,n.length),a=new Array(s);if(t){if(o<2||i<2)return;let u=Ms.calcMatMulShape([e[o-2],e[o-1]],[n[i-2],n[i-1]]);if(u===void 0)return;[a[s-2],a[s-1]]=u}for(let u=t?3:1;u<=s;u++){let l=o-u<0?1:e[o-u],d=i-u<0?1:n[i-u];if(l!==d&&l>1&&d>1)return;a[s-u]=Math.max(l,d)}return a}static index(e,n){let t=new Array(n.length);return r.fillIndex(e,n,t),t}static fillIndex(e,n,t){let o=e.length-n.length;for(let i=0;i<n.length;i++)t[i]=e[o+i]%n[i]}static calc(e,n,t,o,i){let s=r.calcShape(e.dims,n.dims);if(s){if(o&&!se.areEqual(s,e.dims))return;let a=se.size(s),u=o?e:new bt(s,i||e.type);if(s.length===0)u.set([],t(e.get([]),n.get([])));else{let l=new Array(s.length),d=new Array(e.dims.length),p=new Array(n.dims.length),m=0,y=0,b=!1,w=!1;e.dims.length===0&&(m=e.get([]),b=!0),n.dims.length===0&&(y=n.get([]),w=!0);let A;for(let $=0;$<a;$++){A=$;for(let _=s.length-1;_>=0;_--)l[_]=A%s[_],A=Math.floor(A/s[_]);b||(r.fillIndex(l,e.dims,d),m=e.get(d)),w||(r.fillIndex(l,n.dims,p),y=n.get(p)),u.set(l,t(m,y))}}return u}}static isValidBroadcast(e,n){let t=e.length,o=n.length;if(t>o)return!1;for(let i=1;i<=t;i++)if(e[t-i]!==1&&e[t-i]!==n[o-i])return!1;return!0}static getBroadcastDims(e,n){let t=e.length,o=[];for(let i=0;i<t;i++){let s=t-1-i,a=e[s]||1;(n[n.length-1-i]||1)>1&&a===1&&o.unshift(s)}return o}},Yi=class{static getShapeOfGemmResult(e,n,t,o,i){if(e.length!==2||t.length!==2)throw new Error("shape need to be of size 2");let s,a,u;n?(s=e[1],a=e[0]):(s=e[0],a=e[1]);let l=-1;if(o?(u=t[0],l=1):(u=t[1],l=0),t[l]!==a)throw new Error("dimension mismatch");if(s<=0||u<=0||a<=0)throw new Error("invalid shape specified");if(i&&!Vt.isValidBroadcast(i,[s,u]))throw new Error("gemm: invalid bias shape for broadcast");return[s,u,a]}},Pt=class r{static tensorDataTypeFromProto(e){switch(e){case ut.onnx.TensorProto.DataType.INT8:return"int8";case ut.onnx.TensorProto.DataType.UINT8:return"uint8";case ut.onnx.TensorProto.DataType.BOOL:return"bool";case ut.onnx.TensorProto.DataType.INT16:return"int16";case ut.onnx.TensorProto.DataType.UINT16:return"uint16";case ut.onnx.TensorProto.DataType.INT32:return"int32";case ut.onnx.TensorProto.DataType.UINT32:return"uint32";case ut.onnx.TensorProto.DataType.FLOAT:return"float32";case ut.onnx.TensorProto.DataType.DOUBLE:return"float64";case ut.onnx.TensorProto.DataType.STRING:return"string";case ut.onnx.TensorProto.DataType.INT64:return"int32";case ut.onnx.TensorProto.DataType.UINT64:return"uint32";default:throw new Error(`unsupported data type: ${ut.onnx.TensorProto.DataType[e]}`)}}static tensorDataTypeStringToEnum(e){switch(e){case"int8":return ut.onnx.TensorProto.DataType.INT8;case"uint8":return ut.onnx.TensorProto.DataType.UINT8;case"bool":return ut.onnx.TensorProto.DataType.BOOL;case"int16":return ut.onnx.TensorProto.DataType.INT16;case"uint16":return ut.onnx.TensorProto.DataType.UINT16;case"int32":return ut.onnx.TensorProto.DataType.INT32;case"uint32":return ut.onnx.TensorProto.DataType.UINT32;case"float32":return ut.onnx.TensorProto.DataType.FLOAT;case"float64":return ut.onnx.TensorProto.DataType.DOUBLE;case"string":return ut.onnx.TensorProto.DataType.STRING;case"int64":return ut.onnx.TensorProto.DataType.INT64;case"uint64":return ut.onnx.TensorProto.DataType.UINT64;default:throw new Error(`unsupported data type: ${e}`)}}static tensorDimsFromProto(e){return e.map(n=>Kr.isLong(n)?n.toNumber():n)}static tensorValueTypeFromProto(e){return{tensorType:r.tensorDataTypeFromProto(e.elemType),shape:{dims:r.tensorDimsFromProto(e.shape.dim.map(n=>n.dimValue))}}}static tensorDimsFromORTFormat(e){let n=[];for(let t=0;t<e.dimsLength();t++)n.push(Jt.longToNumber(e.dims(t)));return n}static tensorAttributesFromORTFormat(e){let n=[];for(let t=0;t<e.attributesLength();t++)n.push(e.attributes(t));return n}},Jt=class{static longToNumber(e,n){return Kr.isLong(e)?e.toNumber():e instanceof B.Long?Kr.fromValue({low:e.low,high:e.high,unsigned:n??!1}).toNumber():e}static isLong(e){return Kr.isLong(e)||e instanceof B.Long}},se=class r{static size(e){return r.getSizeFromDimensionRange(e,0,e.length)}static sizeFromDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,n,e.length)}static sizeToDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeToDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,0,n)}static getSizeFromDimensionRange(e,n,t){let o=1;for(let i=n;i<t;i++){if(e[i]<=0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.");o*=e[i]}return o}static computeStrides(e){let n=e.length;if(n===0)return[];if(n===1)return[1];let t=new Array(n);t[n-1]=1,t[n-2]=e[n-1];for(let o=n-3;o>=0;--o)t[o]=t[o+1]*e[o+1];return t}static transpose(e){return e.slice().reverse()}static indicesToOffset(e,n,t){t===void 0&&(t=e.length);let o=0;for(let i=0;i<t;++i)o+=n[i]*e[i];return o}static offsetToIndices(e,n){let t=n.length;if(t===0)return[];if(t===1)return[e*n[0]];let o=new Array(n.length);for(let i=0;i<o.length-1;++i)o[i]=Math.floor(e/n[i]),e-=o[i]*n[i];return o[o.length-1]=e,o}static normalizeAxis(e,n){if(e<-n&&e>=n)throw new Error("unsupported axis for this operation.");return e<0?e+n:e}static normalizeAxes(e,n){return e.map(t=>this.normalizeAxis(t,n))}static incrementIndex(e,n,t){if(n.length===0||e.length===0)throw new Error("Index incrementing unsupported for scalar Tensor");if(t===void 0)t=n.length;else if(t<=0||t>n.length)throw new Error("Incorrect axis to increment on");for(let o=t-1;o>=0&&(e[o]++,!(e[o]<n[o]));--o)e[o]=0}static calculateReshapedDims(e,n){if(n.length===0){if(e.length===0||r.size(e)===1)return[];throw new Error("cannot reshape to a scalar Tensor")}let t=n.length,o=new Array(t),i=-1,s=1;for(let u=0;u<t;u++){if(n[u]<-1)throw new Error("a dimension in shape hints cannot be less than -1");if(n[u]===-1){if(i!==-1)throw new Error("at most one dimension in shape hints can be -1");i=u}else{if(n[u]===0){if(u>=e.length)throw new Error("the dimension with value zero exceeds the dimension size of the input tensor");o[u]=e[u]}else o[u]=n[u];s*=o[u]}}let a=r.size(e);if(i!==-1){if(a%s!==0)throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${e}] Output shape: [${n}]`);o[i]=a/s}else if(s!==a)throw new Error("reshapedDims and originalDims don't have matching sizes");return o}static sortBasedOnPerm(e,n){return n?n.map(t=>e[t]):e.slice().reverse()}static padShape(e,n){let t=e.length;return e.map((o,i)=>o+n[i]+n[i+t])}static areEqual(e,n){return e.length!==n.length?!1:e.every((t,o)=>t===n[o])}static validateDimsAndCalcSize(e){if(e.length>6)throw new TypeError("Only rank 0 to 6 is supported for tensor shape.");let n=1;for(let t of e){if(!Number.isInteger(t))throw new TypeError(`Invalid shape: ${t} is not an integer`);if(t<0||t>2147483647)throw new TypeError(`Invalid shape: length ${t} is not allowed`);n*=t}return n}static flattenShape(e,n){n<0&&(n+=e.length);let t=e.reduce((s,a)=>s*a,1),o=e.slice(n).reduce((s,a)=>s*a,1);return[t/o,o]}static squeezeShape(e,n){let t=new Array;n=r.normalizeAxes(n,e.length);for(let o=0;o<e.length;o++){let i=n.indexOf(o)>=0;if(i&&e[o]!==1)throw new Error("squeeze an axis of size different than 1");(n.length===0&&e[o]>1||n.length>0&&!i)&&t.push(e[o])}return t}static unsqueezeShape(e,n){let t=new Array(e.length+n.length);t.fill(0);for(let i=0;i<n.length;i++){let s=r.normalizeAxis(n[i],t.length);if(s>=t.length)throw new Error("'axes' has an out of range axis");if(t[s]!==0)throw new Error("'axes' has a duplicate axis");t[s]=1}let o=0;for(let i=0;i<t.length;i++)t[i]===0&&(t[i]=e[o++]);if(o!==e.length)throw new Error("the unsqueezed dimension could not be established");return t}},Lo=class r{static splitShape(e,n,t,o){if(t.length===0){if(!o)throw new Error("need to know number of outputs when the 'split' attribute is not specified");r.determineSplit(e[n],o,t)}let i=[],s=[0];for(let a=0;a<t.length;++a){a!==0&&s.push(s[a-1]+t[a-1]);let u=e.slice();u[n]=t[a],i.push(u)}return[i,s]}static determineSplit(e,n,t){if(e%n!==0)throw new Error("cannot split tensor to equal sized parts");for(let o=0;o<n;++o)t.push(e/n)}},In=class r{static adjustPoolAttributes(e,n,t,o,i,s){if(!e&&t.length!==n.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let a=0;a<n.length-2;a++)a>=t.length?t.push(n[a+2]):t[a]=n[a+2];for(let a=0;a<t.length;a++)if(a<o.length){if(o[a]<0)throw new Error("strides should be greater than or equal to 1")}else o.push(1);for(let a=0;a<t.length;a++)if(a<i.length){if(i[a]<0)throw new Error("dilations should be greater than or equal to 1")}else i.push(1);for(let a=0;a<t.length*2;a++)if(a<s.length){if(s[a]<0)throw new Error("pad should be greater than or equal to 1")}else s.push(0);for(let a=0;a<t.length;a++){if(t[a]<=0)throw new Error("kernel shapes need to be greater than 0");if(s[a]>=t[a]||s[a+t.length]>=t[a])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(e,n,t,o,i,s){if(s){if(i.length!==2*(e.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(n.length!==e.length-2)throw new Error("length of strides should be the length of data dimensions");if(o.length!==e.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let a=0;a<e.length-2;a++)r.adjustPadAndReturnShape(e[a+2],n[a],t[a],o[a],i,a,a+e.length-2,s)}}static computePoolOutputShape(e,n,t,o,i,s,a){if(n.length<=0)throw new Error("input shape must be of size greater than 0");let u=[n[0],n[1]];return r.computeShapeHelper(e,n,u,t,o,i,s,a),u}static computeConvOutputShape(e,n,t,o,i,s,a){if(e.length<=0||n.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let u=[e[0],n[0]];return r.computeShapeHelper(!1,e,u,t,o,i,s,a),u}static computeShapeHelper(e,n,t,o,i,s,a,u){if(e)for(let l=0;l<n.length-2;l++)t.push(1);else for(let l=0;l<n.length-2;l++)t.push(r.adjustPadAndReturnShape(n[l+2],o[l],i[l],s[l],a,l,l+n.length-2,u))}static adjustPadAndReturnShape(e,n,t,o,i,s,a,u){let l=t*(o-1)+1;if(u&&u!=="NOTSET")switch(u){case"VALID":return i[s]=0,i[a]=0,Math.floor((e-l)/n+1);case"SAME_LOWER":case"SAME_UPPER":if(t!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let p=((e+n-1)/n-1)*n+o-e;return i[s]=Math.floor(u==="SAME_LOWER"?(p+1)/2:p/2),i[a]=p-i[s],Math.floor((e+p-o)/n+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((e+i[s]+i[a]-l)/n+1)}},An=-34028234663852886e22,On=34028234663852886e22});function J0(r){switch(r){case"bool":case"int8":case"uint8":return 1;case"int16":case"uint16":return 2;case"int32":case"uint32":case"float32":return 4;case"float64":return 8;default:throw new Error(`cannot calculate sizeof() on type ${r}`)}}function Ac(r){switch(r){case De.onnx.TensorProto.DataType.UINT8:case De.onnx.TensorProto.DataType.INT8:case De.onnx.TensorProto.DataType.BOOL:return 1;case De.onnx.TensorProto.DataType.UINT16:case De.onnx.TensorProto.DataType.INT16:return 2;case De.onnx.TensorProto.DataType.FLOAT:case De.onnx.TensorProto.DataType.INT32:case De.onnx.TensorProto.DataType.UINT32:return 4;case De.onnx.TensorProto.DataType.INT64:case De.onnx.TensorProto.DataType.DOUBLE:case De.onnx.TensorProto.DataType.UINT64:return 8;default:throw new Error(`cannot calculate sizeof() on type ${De.onnx.TensorProto.DataType[r]}`)}}function Q0(r,e){return new(Cc(e))(r)}function Cc(r){switch(r){case"bool":case"uint8":return Uint8Array;case"int8":return Int8Array;case"int16":return Int16Array;case"uint16":return Uint16Array;case"int32":return Int32Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"float32":return Float32Array;case"float64":return Float64Array;default:throw new Error("unspecified error")}}function Fs(r,e){if(e===De.onnx.TensorProto.DataType.INT64||e===Ls.TensorDataType.INT64){if(r.greaterThanOrEqual(2147483648)||r.lessThan(-2147483648))throw new TypeError("int64 is not supported")}else if(e===De.onnx.TensorProto.DataType.UINT32||e===Ls.TensorDataType.UINT32||e===De.onnx.TensorProto.DataType.UINT64||e===Ls.TensorDataType.UINT64){if(r.greaterThanOrEqual(4294967296)||r.lessThan(0))throw new TypeError("uint64 is not supported")}else throw new TypeError(`not a LONG type: ${De.onnx.TensorProto.DataType[e]}`);return r.toNumber()}function Oc(r,e,n){switch(e){case De.onnx.TensorProto.DataType.BOOL:case De.onnx.TensorProto.DataType.UINT8:return r.getUint8(n);case De.onnx.TensorProto.DataType.INT8:return r.getInt8(n);case De.onnx.TensorProto.DataType.UINT16:return r.getUint16(n,!0);case De.onnx.TensorProto.DataType.INT16:return r.getInt16(n,!0);case De.onnx.TensorProto.DataType.FLOAT:return r.getFloat32(n,!0);case De.onnx.TensorProto.DataType.INT32:return r.getInt32(n,!0);case De.onnx.TensorProto.DataType.UINT32:return r.getUint32(n,!0);case De.onnx.TensorProto.DataType.INT64:return Fs(Kr.fromBits(r.getUint32(n,!0),r.getUint32(n+4,!0),!1),e);case De.onnx.TensorProto.DataType.DOUBLE:return r.getFloat64(n,!0);case De.onnx.TensorProto.DataType.UINT64:return Fs(Kr.fromBits(r.getUint32(n,!0),r.getUint32(n+4,!0),!0),e);default:throw new Error(`cannot read from DataView for type ${De.onnx.TensorProto.DataType[e]}`)}}var Ec,De,Ls,bt,En=R(()=>{"use strict";Ec=qn(yd());$s();Ro();De=qn(Xn());Xe();Ls=fe.experimental.fbs,bt=class r{constructor(e,n,t,o,i,s=Ec.Guid.create()){this.dims=e;this.type=n;this.dataProvider=t;this.asyncDataProvider=o;this.cache=i;this.dataId=s;this.size=se.validateDimsAndCalcSize(e);let a=this.size,u=t===void 0&&o===void 0&&i===void 0;if(i!==void 0&&i.length!==a)throw new RangeError("Input dims doesn't match data length.");if(n==="string"){if(i!==void 0&&(!Array.isArray(i)||!i.every(l=>typeof l=="string")))throw new TypeError("cache should be a string array");u&&(this.cache=new Array(a))}else{if(i!==void 0){let l=Cc(n);if(!(i instanceof l))throw new TypeError(`cache should be type ${l.name}`)}if(u){let l=new ArrayBuffer(a*J0(n));this.cache=Q0(l,n)}}}get data(){if(this.cache===void 0){let e=this.dataProvider(this.dataId);if(e.length!==this.size)throw new Error("Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.");this.cache=e}return this.cache}get stringData(){if(this.type!=="string")throw new TypeError("data type is not string");return this.data}get integerData(){switch(this.type){case"uint8":case"int8":case"uint16":case"int16":case"int32":case"uint32":case"bool":return this.data;default:throw new TypeError("data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)")}}get floatData(){switch(this.type){case"float32":case"float64":return this.data;default:throw new TypeError("data type is not float (float32, float64)")}}get numberData(){if(this.type!=="string")return this.data;throw new TypeError("type cannot be non-number (string)")}get(e){return this.data[se.indicesToOffset(e,this.strides)]}set(e,n){this.data[se.indicesToOffset(e,this.strides)]=n}async getData(){return this.cache===void 0&&(this.cache=await this.asyncDataProvider(this.dataId)),this.cache}get strides(){return this._strides||(this._strides=se.computeStrides(this.dims)),this._strides}static fromProto(e){if(!e)throw new Error("cannot construct Value from an empty tensor");let n=Pt.tensorDataTypeFromProto(e.dataType),t=Pt.tensorDimsFromProto(e.dims),o=new r(t,n);if(n==="string")e.stringData.forEach((i,s)=>{o.data[s]=Fo(i)});else if(e.rawData&&typeof e.rawData.byteLength=="number"&&e.rawData.byteLength>0){let i=o.data,s=new DataView(e.rawData.buffer,e.rawData.byteOffset,e.rawData.byteLength),a=Ac(e.dataType),u=e.rawData.byteLength/a;if(e.rawData.byteLength%a!==0)throw new Error("invalid buffer length");if(i.length!==u)throw new Error("buffer length mismatch");for(let l=0;l<u;l++){let d=Oc(s,e.dataType,l*a);i[l]=d}}else{let i;switch(e.dataType){case De.onnx.TensorProto.DataType.FLOAT:i=e.floatData;break;case De.onnx.TensorProto.DataType.INT32:case De.onnx.TensorProto.DataType.INT16:case De.onnx.TensorProto.DataType.UINT16:case De.onnx.TensorProto.DataType.INT8:case De.onnx.TensorProto.DataType.UINT8:case De.onnx.TensorProto.DataType.BOOL:i=e.int32Data;break;case De.onnx.TensorProto.DataType.INT64:i=e.int64Data;break;case De.onnx.TensorProto.DataType.DOUBLE:i=e.doubleData;break;case De.onnx.TensorProto.DataType.UINT32:case De.onnx.TensorProto.DataType.UINT64:i=e.uint64Data;break;default:throw new Error("unspecific error")}if(i==null)throw new Error("failed to populate data from a tensorproto value");let s=o.data;if(s.length!==i.length)throw new Error("array length mismatch");for(let a=0;a<i.length;a++){let u=i[a];Kr.isLong(u)?s[a]=Fs(u,e.dataType):s[a]=u}}return o}static fromData(e,n,t){return new r(n,t,void 0,void 0,e)}static fromOrtTensor(e){if(!e)throw new Error("cannot construct Value from an empty tensor");let n=Pt.tensorDimsFromORTFormat(e),t=Pt.tensorDataTypeFromProto(e.dataType()),o=new r(n,t);if(t==="string")for(let i=0;i<e.stringDataLength();i++)o.data[i]=e.stringData(i);else if(e.rawDataArray()&&typeof e.rawDataLength()=="number"&&e.rawDataLength()>0){let i=o.data,s=new DataView(e.rawDataArray().buffer,e.rawDataArray().byteOffset,e.rawDataLength()),a=Ac(e.dataType()),u=e.rawDataLength()/a;if(e.rawDataLength()%a!==0)throw new Error("invalid buffer length");if(i.length!==u)throw new Error("buffer length mismatch");for(let l=0;l<u;l++){let d=Oc(s,e.dataType(),l*a);i[l]=d}}return o}}});function ge(r){return r===1?ev:tv}function Pc(r){let e=ge(r);return`${e.version}
      precision highp float;
      ${e.attribute} vec3 position;
      ${e.attribute} vec2 textureCoord;

      ${e.varyingVertex} vec2 TexCoords;

      void main()
      {
          gl_Position = vec4(position, 1.0);
          TexCoords = textureCoord;
      }`}function kc(r){let e=ge(r);return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFrag} vec2 TexCoords;
    ${e.outputDeclaration}
    const vec2 halfCR = vec2(0.5, 0.5);

    // Custom vector types to handle higher dimenalities.
    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    `}function Dc(r,e){let n=ge(r);return`
  void main() {
    int indices[${e}];
    toVec(TexCoords, indices);
    vec4 result = vec4(process(indices));
    ${n.output} = result;
  }
  `}var ev,tv,lt=R(()=>{"use strict";ev={version:"",attribute:"attribute",varyingVertex:"varying",varyingFrag:"varying",texture2D:"texture2D",output:"gl_FragColor",outputDeclaration:""},tv={version:"#version 300 es",attribute:"in",varyingVertex:"out",varyingFrag:"in",texture2D:"texture",output:"outputColor",outputDeclaration:"out vec4 outputColor;"}});var We=R(()=>{"use strict"});async function Us(r,e=t=>0,n){return new Promise((t,o)=>{let i=0,s=()=>{if(r()){t();return}i++;let a=e(i);if(n!=null&&i>=n){o();return}setTimeout(s,a)};s()})}function Xi(r){return Zn(typeof r<"u"&&r.length!==0,()=>"empty string found for sampler name"),"get"+r.charAt(0).toUpperCase()+r.slice(1)}function Bc(r){return Zn(typeof r<"u"&&r.length!==0,()=>"empty string found for sampler name"),"get"+r.charAt(0).toUpperCase()+r.slice(1)+"AtOutCoords"}function Jn(r,e){let n=JSON.parse(JSON.stringify(r));return n=e,n}function Qn(r,e){return e.map(n=>r[n]).join(", ")}function Gt(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function xr(r=6){return["x","y","z","w","u","v"].slice(0,r)}var Er=R(()=>{"use strict";Xe()});function rv(r,e){return xr(e).map(n=>`${r}.${n}`)}function eo(r,e){return e===1?[r]:rv(r,e)}function Cr(){return`
    float getChannel(vec4 frag, int dim) {
      int modCoord = imod(dim, 2);
      return modCoord == 0 ? frag.r : frag.g;
    }

    float getChannel(vec4 frag, vec2 innerDims) {
      vec2 modCoord = mod(innerDims, 2.);
      return modCoord.x == 0. ?
        (modCoord.y == 0. ? frag.r : frag.g) :
        (modCoord.y == 0. ? frag.b : frag.a);
    }
  `}var Cn=R(()=>{"use strict";Er()});function ov(r,e,n){if(r===0)return"false";if(r===1)return`rc > ${e[0]}`;let t="";for(let o=r-2;o<r;o++)t+=`${n[o]} >= ${e[o-r+2]}`,o<r-1&&(t+="||");return t}function iv(r,e){let n=r.length;if(n===0)return"getA(), 0, 0, 0";if(n===1)return`getA(rc),
            rc + 1 >= ${r[0]} ? 0. : getA(rc + 1),
            0, 0`;let t="r, c",o="r, cp1",i="rp1, c",s="rp1, cp1",a="";if(n>2)for(let u=0;u<n-2;++u)a=a+`${e[u]},`;return`getA(${a}${t}),
          rEdge ? 0. : getA(${a}${i}),
          cEdge ? 0. : getA(${a}${o}),
          rEdge || cEdge ? 0. : getA(${a}${s})`}function av(r,e,n,t){return r===0||r===1?"":`
    int r = ${e[r-2]};
    int c = ${e[r-1]};
    int rp1 = ${e[r-2]} + 1;
    int cp1 = ${e[r-1]} + 1;
    bool rEdge = rp1 >= ${t};
    bool cEdge = cp1 >= ${n};
    `}var Rc,nv,zc,Nc=R(()=>{"use strict";lt();We();Er();Cn();Rc={name:"pack",inputNames:["A"],inputTypes:[1]},nv=(r,e)=>{let n=ge(r.session.backend.glContext.version),t=e.dims,o=t.length,i=e.dims.length,s=Gt(i),a=eo("rc",i),u=av(i,a,t[t.length-2],t[t.length-1]),l;o===0?l=[1,1]:o===1?l=[t[0],1]:l=[t[i-1],t[i-2]];let d=ov(i,l,a),p=iv(t,a),m=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${d}) {
            ${n.output} = vec4(0);
          } else {
            ${u}

            ${n.output} = vec4(${p});
          }
        }
      `;return{...Rc,hasMain:!0,output:{dims:e.dims,type:e.type,textureType:2},shaderSource:m}},zc=(r,e)=>({...Rc,get:()=>nv(r,e)})});function Vs(r){if(r.length===0)return[1,1,1];let e=1;for(let n=0;n<r.length-2;++n)e*=r[n];return[e,r.length>1?r[r.length-2]:1,r[r.length-1]]}function Lc(r,e){let n=!1;return r.length===0||e.length===0?n=!0:r.length<2||e.length<2?n=r[r.length-1]===e[e.length-1]:n=r[r.length-1]===e[e.length-1]&&r[r.length-2]===e[e.length-2],n}function lv(r){let e=se.computeStrides(r),n=["b","r","c"],t="index";return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e.map((i,s)=>{let a=`int ${n[s]} = ${t} / ${i}`,u=s===e.length-1?`int ${n[s+1]} = ${t} - ${n[s]} * ${i}`:`index -= ${n[s]} * ${i}`;return`${a}; ${u};`}).join("")}
      return ivec3(b, r, c);
    }
  `}function dv(r){let e=se.computeStrides(r);return`
  int getFlattenedIndex(ivec3 coords) {
    // reverse y, z order
    return coords.x * ${e[0]} + coords.z * ${e[1]} + coords.y;
  }
`}var sv,uv,Mc,Fc=R(()=>{"use strict";Xe();lt();We();Cn();sv=r=>({name:"Reshape (packed)",inputTypes:[2],inputNames:["A"],cacheHint:`${r}`}),uv=(r,e,n,t)=>{let o=e.dims,i=t,s="";for(let l=0;l<4;l++){let d="";switch(l){case 0:d="outputCoords = rc;";break;case 1:d="outputCoords = ivec3(rc.x, rc.y+1, rc.z);";break;case 2:d="outputCoords = ivec3(rc.x, rc.y, rc.z+1);";break;case 3:d="outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);";break;default:throw new Error}s+=`
        ${d}
        ${l>0?"if(outputCoords.y < rows && outputCoords.z < cols){":""}
          int flattenedIndex = getFlattenedIndex(outputCoords);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);
          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${l}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);

        ${l>0?"}":""}
      `}let a=ge(r.session.backend.glContext.version),u=`
      ${lv(o)}
      ${dv(i)}
      ${Cr()}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.0);

        ivec3 outputCoords;
        int rows = ${i[2]};
        int cols = ${i[1]};

        ${s}
        ${a.output} = result;
      }
    `;return{...n,output:{dims:i,type:e.type,textureType:2},shaderSource:u,hasMain:!0}},Mc=(r,e,n)=>{let t=sv(n);return{...t,get:()=>uv(r,e,t,n)}}});var Gs,Uc=R(()=>{"use strict";lt();We();Gs=(r,e)=>{let n=e.shape,t=ge(r.session.backend.glContext.version),o=`
    const float FLOAT_MAX = 1.70141184e38;
    const float FLOAT_MIN = 1.17549435e-38;

    bool isNaN(float val) {
      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;
    }

    highp vec4 encodeAsUint8(highp float v) {
      if (isNaN(v)) {
        return vec4(255, 255, 255, 255);
      }

      highp float av = abs(v);

      if(av < FLOAT_MIN) {
        return vec4(0.0, 0.0, 0.0, 0.0);
      } else if(v > FLOAT_MAX) {
        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
      } else if(v < -FLOAT_MAX) {
        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
      }

      highp vec4 c = vec4(0,0,0,0);

      highp float e = floor(log2(av));
      highp float m = exp2(fract(log2(av))) - 1.0;

      c[2] = floor(128.0 * m);
      m -= c[2] / 128.0;
      c[1] = floor(32768.0 * m);
      m -= c[1] / 32768.0;
      c[0] = floor(8388608.0 * m);

      highp float ebias = e + 127.0;
      c[3] = floor(ebias / 2.0);
      ebias -= c[3] * 2.0;
      c[2] += floor(ebias) * 128.0;

      c[3] += 128.0 * step(0.0, -v);

      return c / 255.0;
    }

    void main() {
      float value = ${t.texture2D}(X,TexCoords).r;
      ${t.output} = encodeAsUint8(value);
    }`,i={name:"Uint8Encode",inputTypes:[0],inputNames:["X"],output:{dims:n,type:e.tensor.type,textureType:3},shaderSource:o,hasMain:!0};return r.executeProgram(i,[e.tensor])}});function fv(r,e){if(r===1)return"rc";let n="";for(let t=0;t<r;t++)n+=e[t],t<r-1&&(n+=",");return n}var Vc,cv,Gc,Wc=R(()=>{"use strict";lt();We();Er();Cn();Vc={name:"unpack",inputNames:["A"],inputTypes:[2]},cv=(r,e)=>{let n=e.dims.length,t=eo("rc",n),o=t.slice(-2),i=Gt(n),s=Cr(),u=e.dims.length===0?"":fv(n,t),l=n<=1?"rc":`vec2(${o.join(",")})`,d=ge(r.session.backend.glContext.version),p=`
    ${s}
    void main() {
      ${i} rc = getOutputCoords();

       // Sample the texture with the coords to get the rgba channel value.
       vec4 packedInput = getA(${u});

       ${d.output} = vec4(getChannel(packedInput, ${l}), 0, 0, 0);
     }
   `;return{...Vc,hasMain:!0,output:{dims:e.dims,type:e.type,textureType:0},shaderSource:p}},Gc=(r,e)=>({...Vc,get:()=>cv(r,e)})});var Zi,Uo,Ji,Vo=R(()=>{"use strict";or();Zi=class{constructor(e,n=1){if(n===1)this.internalFormat=e.R32F,this.format=e.RED,this.textureType=e.FLOAT,this.channelSize=n;else if(n===4)this.internalFormat=e.RGBA32F,this.format=e.RGBA,this.textureType=e.FLOAT,this.channelSize=n;else throw new Error(`Invalid number of channels: ${n}`)}encode(e,n){let t,o;return e.constructor!==Float32Array&&(Je.warning("Encoder","data was not of type Float32; creating new Float32Array"),o=new Float32Array(e)),n*this.channelSize>e.length?(Je.warning("Encoder","Source data too small. Allocating larger array"),o=e,t=this.allocate(n*this.channelSize),o.forEach((i,s)=>t[s]=i)):(o=e,t=o),t}allocate(e){return new Float32Array(e*4)}decode(e,n){return this.channelSize===1?e.filter((o,i)=>i%4===0).subarray(0,n):e.subarray(0,n)}},Uo=class{constructor(e,n=1,t){if(n!==1&&n!==4)throw new Error(`Invalid number of channels: ${n}`);this.internalFormat=e.RGBA,this.format=e.RGBA,this.channelSize=n,this.textureType=t||e.FLOAT}encode(e,n){let t=e;return this.channelSize===1&&(Je.verbose("Encoder","Exploding into a larger array"),t=this.allocate(n),e.forEach((o,i)=>t[i*4]=o)),t}allocate(e){return new Float32Array(e*4)}decode(e,n){return this.channelSize===1?e.filter((o,i)=>i%4===0).subarray(0,n):e.subarray(0,n)}},Ji=class{constructor(e,n=1){this.channelSize=4;if(n===1)this.internalFormat=e.ALPHA,this.format=e.ALPHA,this.textureType=e.UNSIGNED_BYTE,this.channelSize=n;else if(n===4)this.internalFormat=e.RGBA,this.format=e.RGBA,this.textureType=e.UNSIGNED_BYTE,this.channelSize=n;else throw new Error(`Invalid number of channels: ${n}`)}encode(e,n){return new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}allocate(e){return new Uint8Array(e*this.channelSize)}decode(e,n){if(e instanceof Uint8Array)return e.subarray(0,n);throw new Error(`Invalid array type: ${e.constructor}`)}}});var Go,Hc,Ws,qc=R(()=>{"use strict";Xe();We();Go=(r,e,n)=>{let t=n===0||n===1?1:4,o=n===2,i=n===1||n===2,s=n===4?e.length-1:void 0,a=n===4?e.map((u,l)=>l===e.length-1?u*4:u):void 0;return Ws(r,e,t,a,{isPacked:o,reverseWH:i,breakAxis:s})},Hc=(r,e,n)=>{let t=Go(r,e,n);return[t.width,t.height]},Ws=(r,e,n=1,t,o)=>{let i=!!(o&&o.isPacked),[s,a]=r.computeTextureWH(i&&t||e,o),u=e.length,l=e.slice(0);if(u===0&&(l=[1]),n===1)t=e;else if(i){if(n!==4)throw new Error("a packed texture must be 4-channel");t=e,u>0&&(l[u-1]=Math.ceil(l[u-1]/2)),u>1&&(l[u-2]=Math.ceil(l[u-2]/2))}else if(!t)throw new Error("Unpacked shape is needed when using channels > 1");return{width:s,height:a,channels:n,isPacked:i,shape:l,strides:se.computeStrides(l),unpackedShape:t,reversedWH:o&&o.reverseWH}}});var hv,Qi,Kc=R(()=>{"use strict";or();En();Xe();Nc();Fc();Uc();Wc();Vo();qc();We();hv=(r,e)=>{let n=e.map(o=>`${o.unpackedShape.join(",")};${o.width}x${o.height}`).join("_"),t=r.name;return r.cacheHint&&(t+="["+r.cacheHint+"]"),t+=":"+n,t},Qi=class{constructor(e){this.session=e;this.packedTextureDataCache=new Map,this.unpackedTextureDataCache=new Map}calculateTextureWidthAndHeight(e,n){return Hc(this.session.layoutStrategy,e,n)}executeProgram(e,n){if(n.length<e.inputNames.length)throw new Error(`Input size mustn't be less than ${e.inputNames.length}.`);if(e.inputNames.length!==e.inputTypes.length)throw new Error("input names size does not match input types");let t=[];for(let l=0;l<e.inputNames.length;++l)t[l]=this.getOrCreateTextureData(n[l],e.inputTypes[l]);let o=hv(e,t),i=this.session.programManager.getArtifact(o),s=i?i.programInfo:typeof e.get=="function"?e.get():e,a=Go(this.session.layoutStrategy,s.output.dims,s.output.textureType),u=this.createTextureData(a,s.output.type);return i||(i=this.session.programManager.build(s,t,u),this.session.programManager.setArtifact(o,i)),this.runProgram(i,t,u),u}run(e,n){return this.executeProgram(e,n).tensor}runProgram(e,n,t){for(let o=0;o<n.length;++o)if(!!n[o].isPacked!=(e.programInfo.inputTypes[o]===2))throw new Error(`input[${o}] property packed inconsistent`);if(!!t.isPacked!=(e.programInfo.output.textureType===2))throw new Error("output property packed inconsistent");this.session.programManager.run(e,n,t)}getOrCreateTextureData(e,n){let t=this.getTextureData(e.dataId,n===2);if(!t&&(t=this.getTextureData(e.dataId,n!==2),t))return n===2?this.pack(t):this.unpack(t);if(!t){let o=Go(this.session.layoutStrategy,e.dims,n);if(n===4){let a=e.dims;if(a.length===4){let u=[a[0],Math.ceil(a[1]*a[2]*a[3]/4)],l=Go(this.session.layoutStrategy,u,n),d=e.numberData;if(a[1]*a[2]*a[3]%4!==0){let p=a[0],m=a[1]*a[2]*a[3],y=Math.ceil(m*1/4)*4,b=p*y;d=new Float32Array(b);for(let w=0;w<p;++w){let A=w*m,$=w*y+w%1*m;d.set(e.numberData.subarray(A,A+m),$)}}return this.createTextureData(l,e.type,d,e,1)}}if(n===2){let i=Ws(this.session.layoutStrategy,e.dims,1,[],{reverseWH:!0}),s=this.createTextureData(i,e.type,e.numberData,e,1);t=this.pack(s)}else t=this.createTextureData(o,e.type,e.numberData,e,1)}return t}createTextureDataFromLayoutBindTensor(e,n,t,o){return this.createTextureData(e,n,t,o,1)}createTextureData(e,n,t,o,i){Je.verbose("InferenceHandler",`Creating TextureData: layout:[${JSON.stringify(e)}]`);let s=this.session.textureManager.createTextureFromLayout(n,e,t,i);return this.createTextureDataFromTexture(e,n,s,o)}reshapeUnpacked(e,n){let t=this.getOrCreateTextureData(e,0),o={channels:t.channels,height:t.height,width:t.width,shape:n.length!==0?n:[1],strides:se.computeStrides(n),unpackedShape:n};return this.createTextureDataFromTexture(o,e.type,t.texture).tensor}reshapePacked(e,n){let t=this.getOrCreateTextureData(e,2);if(Lc(e.dims,n)){let l={channels:t.channels,height:t.height,width:t.width,shape:n.length!==0?n:[1],strides:se.computeStrides(n),unpackedShape:n,isPacked:!0};return this.createTextureDataFromTexture(l,e.type,t.texture).tensor}let o=Vs(e.dims),i=Vs(n),s=this.reshapePacked(e,o),a=this.run(Mc(this,s,i),[s]);return this.reshapePacked(a,n)}cast(e,n){let t=this.getOrCreateTextureData(e,0);return this.createTextureDataFromTexture(t,n,t.texture).tensor}createTextureDataFromTexture(e,n,t,o,i){let s={...e,tensor:o||new bt(e.unpackedShape,n,a=>this.readTexture(s),async a=>this.readTextureAsync(s),void 0,i),texture:t};return this.setTextureData(s.tensor.dataId,s,e.isPacked),s}getTextureData(e,n=!1){return this.session.isInitializer(e)?this.session.getTextureData(e,n):n?this.packedTextureDataCache.get(e):this.unpackedTextureDataCache.get(e)}setTextureData(e,n,t=!1){this.session.isInitializer(e)?this.session.setTextureData(e,n,t):(t?this.packedTextureDataCache:this.unpackedTextureDataCache).set(e,n)}isTextureLayoutCached(e,n=!1){return!!this.getTextureData(e.dataId,n)}dispose(){this.session.textureManager.clearActiveTextures(),this.packedTextureDataCache.forEach(e=>this.session.textureManager.releaseTexture(e)),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache.forEach(e=>this.session.textureManager.releaseTexture(e)),this.unpackedTextureDataCache=new Map}readTexture(e){return e.isPacked?this.readTexture(this.unpack(e)):this.session.backend.glContext.isFloat32DownloadSupported?this.session.textureManager.readTexture(e,e.tensor.type,e.channels):this.session.textureManager.readUint8TextureAsFloat(Gs(this,e))}async readTextureAsync(e){return e.isPacked?this.readTextureAsync(this.unpack(e)):this.session.backend.glContext.isFloat32DownloadSupported?this.session.textureManager.readTextureAsync(e,e.tensor.type,e.channels):this.session.textureManager.readUint8TextureAsFloat(Gs(this,e))}pack(e){return this.executeProgram(zc(this,e.tensor),[e.tensor])}unpack(e){return this.executeProgram(Gc(this,e.tensor),[e.tensor])}}});var Hs,Ce,$t=R(()=>{"use strict";Hs=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},Ce=r=>new Hs(r)});var Yc,Xc,Zc,mv,gv,Jc=R(()=>{"use strict";$t();lt();We();Yc={name:"BatchNormalization",inputNames:["A","Scale","B","Mean","Variance"],inputTypes:[0,0,0,0,0]},Xc=(r,e,n)=>(gv(e),[r.run({...Yc,cacheHint:n.cacheKey,get:()=>mv(r,e,n)},e)]),Zc=r=>{let e=r.attributes.getFloat("epsilon",1e-5),n=r.attributes.getFloat("momentum",.9),t=r.attributes.getInt("spatial",1);return Ce({epsilon:e,momentum:n,spatial:t})},mv=(r,e,n)=>{let t=ge(r.session.backend.glContext.version),o=e[0].dims.length,[i,s]=r.calculateTextureWidthAndHeight(e[1].dims,0),a=`
  float process(int[${o}] indices) {
    vec2 position = offsetToCoords(indices[1], ${i}, ${s});
    float scale = getColorAsFloat(${t.texture2D}(Scale, position));
    float mean = getColorAsFloat(${t.texture2D}(Mean, position));
    float variance = getColorAsFloat(${t.texture2D}(Variance, position));
    float b = getColorAsFloat(${t.texture2D}(B, position));

    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${n.epsilon})) ) + b;
  }`;return{...Yc,output:{dims:e[0].dims,type:e[0].type,textureType:0},shaderSource:a}},gv=r=>{if(!r||r.length!==5)throw new Error("BatchNormalization requires 5 inputs.");let e=r[0],n=r[1],t=r[2],o=r[3],i=r[4];if(e.dims.length<3||n.dims.length!==1||t.dims.length!==1||o.dims.length!==1||i.dims.length!==1)throw new Error("invalid input shape.");if(n.dims[0]!==e.dims[1]||t.dims[0]!==e.dims[1]||o.dims[0]!==e.dims[1]||i.dims[0]!==e.dims[1])throw new Error("invalid input shape.");if(e.type!=="float32"&&e.type!=="float64"||n.type!=="float32"&&n.type!=="float64"||t.type!=="float32"&&t.type!=="float64"||o.type!=="float32"&&o.type!=="float64"||i.type!=="float32"&&i.type!=="float64")throw new Error("invalid input tensor types.")}});var ea,ur,oe,Wo,ta,Yr=R(()=>{"use strict";ea=class{constructor(e,n,t,o){this.glContext=e;this.programInfo=n;this.inputTextureLayouts=t;this.outputTextureLayout=o}},ur=class{constructor(e){this.context=e}},oe=class{constructor(e,n){this.routineBody=e;this.dependencies=n}},Wo=class{constructor(e,n,t){this.name=e;t?this.dependencies=t:this.dependencies=[],n&&(this.routineBody=n)}addDependency(e){e&&this.dependencies.push(e)}},ta=class{static returnOrderedNodes(e){if(!e||e.length===0)return[];if(e.length===1)return e;let n=new Set,t=new Set,o=new Array;return this.createOrderedNodes(e,n,t,o),o}static createOrderedNodes(e,n,t,o){for(let i=0;i<e.length;++i)this.dfsTraverse(e[i],n,t,o)}static dfsTraverse(e,n,t,o){if(!e||t.has(e.name))return;if(n.has(e.name))throw new Error("Cyclic dependency detected. Can't topologically sort routines needed for shader.");n.add(e.name);let i=e.dependencies;if(i&&i.length>0)for(let s=0;s<i.length;++s)this.dfsTraverse(i[s],n,t,o);o.push(e),t.add(e.name),n.delete(e.name)}}});function yv(){let r="add_";return{body:`
  float ${r}(float a, float b) {
    return a + b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 + v2;
  }
  `,name:r,type:0}}function vv(){let r="div_";return{body:`
  float ${r}(float a, float b) {
    return a / b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 / v2;
  }
  `,name:r,type:0}}function wv(){let r="mul_";return{body:`
  float ${r}(float a, float b) {
    return a * b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 * v2;
  }
  `,name:r,type:0}}function xv(){let r="sub_";return{body:`
  float ${r}(float a, float b) {
    return a - b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 - v2;
  }
  `,name:r,type:0}}function _v(){let r="equal_";return{body:`
  float ${r}(float a, float b) {
    return float(a == b);
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4(equal(v1, v2));
  }
  `,name:r,type:0}}function Tv(){let r="greater_";return{body:`
  float ${r}(float a, float b) {
    return float(a > b);
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4( v1.r > v2.r ,
      v1.g > v2.g,
      v1.b > v2.b,
      v1.a > v2.a );
  }
  `,name:r,type:0}}function $v(){let r="less_";return{body:`
  float ${r}(float a, float b) {
    return float(a < b);
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4( v1.r < v2.r ,
                v1.g < v2.g,
                v1.b < v2.b,
                v1.a < v2.a );
  }
  `,name:r,type:0}}function Sv(){let r="and_";return{body:`
  float ${r}(float a, float b) {
    return float( bool(a) && bool(b) );
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r && b2.r ,
                b1.g && b2.g,
                b1.b && b2.b,
                b1.a && b2.a );
  }
  `,name:r,type:0}}function Iv(){let r="or_";return{body:`
  float ${r}(float a, float b) {
    return float( bool(a) || bool(b) );
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r || b2.r ,
                b1.g || b2.g,
                b1.b || b2.b,
                b1.a || b2.a );
  }
  `,name:r,type:0}}function Av(){let r="xor_";return{body:`
  float ${r}(float a, float b) {
    return float( bool(a) ^^ bool(b) );
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r ^^ b2.r ,
                b1.g ^^ b2.g,
                b1.b ^^ b2.b,
                b1.a ^^ b2.a );
  }
  `,name:r,type:0}}function Ov(){return Cv("pow")}function Ev(){let r="prelu_";return{body:`
  float ${r}(float a, float b) {
    return a < 0.0 ? a * b: a;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4(
      v1.r < 0.0 ? v1.r * v2.r: v1.r,
      v1.g < 0.0 ? v1.g * v2.g: v1.g,
      v1.b < 0.0 ? v1.b * v2.b: v1.b,
      v1.a < 0.0 ? v1.a * v2.a: v1.a
      );
  }
  `,name:r,type:0}}function Cv(r){let e=`${r}_`;return{body:`
  float ${e}(float a, float b) {
    return ${r}(a, b);
  }
  vec4 ${e}(vec4 v1, vec4 v2) {
    return ${r}(v1, v2);
  }
  `,name:e,type:0}}var lr,Pv,Qc,ef,tf,rf,nf,of,af,sf,uf,lf,df,cf,ff=R(()=>{"use strict";Xe();Yr();lt();We();lr=(r,e,n,t=e[0].type,o)=>{let i=r.session.pack?2:0;return{name:n.name,inputNames:["A","B"],inputTypes:[i,i],cacheHint:o,get:()=>Pv(r,e,n,t)}},Pv=(r,e,n,t=e[0].type)=>{let o=r.session.pack?2:0,i=!se.areEqual(e[0].dims,e[1].dims),s=e[0].dims,a=r.session.pack;if(i){let d=Vt.calcShape(e[0].dims,e[1].dims,!1);if(!d)throw new Error("Can't perform binary op on the given tensors");s=d;let p=s.length,m=e[0].dims.length!==0?e[0].dims.length:1,y=e[1].dims.length!==0?e[1].dims.length:1,b=e[0].dims.length!==0?"bcastIndices_A(indices, aindices);":"aindices[0] = 0;",w=e[1].dims.length!==0?"bcastIndices_B(indices, bindices);":"bindices[0] = 0;",A=ge(r.session.backend.glContext.version),$=a?`
      ${n.body}
      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();
        vec4 result = ${n.name}(a, b);
        ${A.output} = result;
      }`:`
      ${n.body}
      float process(int indices[${p}]) {
        int aindices[${m}];
        int bindices[${y}];
        ${b}
        ${w}
        return ${n.name}(_A(aindices), _B(bindices));
      }`;return{name:n.name,inputNames:["A","B"],inputTypes:[o,o],output:{dims:s,type:t,textureType:o},shaderSource:$,hasMain:a}}let u=ge(r.session.backend.glContext.version),l=`
    ${n.body}
    void main() {
      vec4 v1 = ${u.texture2D}(A, TexCoords);
      vec4 v2 = ${u.texture2D}(B, TexCoords);
      vec4 result = ${n.name}(v1, v2);
      ${u.output} = result;
    }
    `;return{name:n.name,inputNames:["A","B"],inputTypes:[o,o],output:{dims:e[0].dims,type:t,textureType:o},shaderSource:l,hasMain:!0}},Qc=(r,e)=>[r.run(lr(r,e,yv()),e)],ef=(r,e)=>[r.run(lr(r,e,Sv(),"bool"),e)],tf=(r,e)=>[r.run(lr(r,e,vv()),e)],rf=(r,e)=>[r.run(lr(r,e,_v(),"bool"),e)],nf=(r,e)=>[r.run(lr(r,e,Tv(),"bool"),e)],of=(r,e)=>[r.run(lr(r,e,$v(),"bool"),e)],af=(r,e)=>[r.run(lr(r,e,wv()),e)],sf=(r,e)=>[r.run(lr(r,e,Iv(),"bool"),e)],uf=(r,e)=>[r.run(lr(r,e,Ov()),e)],lf=(r,e)=>[r.run(lr(r,e,Ev()),e)],df=(r,e)=>[r.run(lr(r,e,xv()),e)],cf=(r,e)=>[r.run(lr(r,e,Av(),"bool"),e)]});var pf,hf,Dv,mf=R(()=>{"use strict";Xe();pf=(r,e,n)=>(Dv(e),[r.cast(e[0],n)]),hf=r=>Pt.tensorDataTypeFromProto(r.attributes.getInt("to")),Dv=r=>{if(!r||r.length!==1)throw new Error("Cast requires 1 input.");if(r[0].type==="string")throw new Error("Invalid input type.")}});var Bv,Rv,gf,ra,bf=R(()=>{"use strict";lt();We();Er();Cn();Bv=(r,e)=>({name:"Concat (packed)",inputNames:Array.from({length:r},(n,t)=>`X${t}`),inputTypes:Array(r).fill(2),cacheHint:e}),Rv=(r,e,n,t)=>{let o=n[0].dims.slice();if(t>=o.length||t<-1*o.length)throw new Error("axis specified for concat doesn't match input dimensionality");t<0&&(t=o.length+t);let i=o.slice(0);for(let N=1;N<n.length;N++){let F=n[N].dims.slice();for(let G=0;G<o.length;G++)if(G===t)i[t]+=F[G];else if(o[G]!==F[G])throw new Error("non concat dimensions must match")}let s=i.length,a=eo("coords",s),u=Gt(s),l=Cr(),d=n.map(N=>N.dims),p=xr(s),m=new Array(d.length-1);m[0]=d[0][t];for(let N=1;N<m.length;N++)m[N]=m[N-1]+d[N][t];let y=p[t],b=p.slice(-2),w=p.join(),A=`if (${y} < ${m[0]}) {
        return getChannel(
            getX0(${w}), vec2(${b.join()}));
        }`;for(let N=1;N<m.length;N++){let F=m[N-1];A+=`
            if (${y} < ${m[N]}  && ${y} >= ${m[N-1]}) {
              return getChannel(
                getX${N}(${ra(p,y,F)}),
                vec2(${ra(b,y,F)}));
            }`}let $=m.length,_=m[m.length-1];A+=`
            return getChannel(
              getX${$}(${ra(p,y,_)}),
              vec2(${ra(b,y,_)}));`;let O=ge(r.session.backend.glContext.version),P=`
          ${l}
          float getValue(${p.map(N=>"int "+N)}) {
            ${A}
          }

          void main() {
            ${u} coords = getOutputCoords();
            int lastDim = coords.${p[s-1]};
            coords.${p[s-1]} = coords.${p[s-2]};
            coords.${p[s-2]} = lastDim;

            vec4 result = vec4(getValue(${a}), 0., 0., 0.);

            ${a[s-1]} = ${a[s-1]} + 1;
            if (${a[s-1]} < ${i[s-1]}) {
              result.g = getValue(${a});
            }

            ${a[s-2]} = ${a[s-2]} + 1;
            if (${a[s-2]} < ${i[s-2]}) {
              result.a = getValue(${a});
            }

            ${a[s-1]} = ${a[s-1]} - 1;
            if (${a[s-2]} < ${i[s-2]} &&
                ${a[s-1]} < ${i[s-1]}) {
              result.b = getValue(${a});
            }
            ${O.output} = result;
          }
        `;return{...e,output:{dims:i,type:n[0].type,textureType:2},shaderSource:P,hasMain:!0}},gf=(r,e,n)=>{let t=Bv(e.length,n.cacheKey);return{...t,get:()=>Rv(r,t,e,n.axis)}},ra=(r,e,n)=>{let t=r.indexOf(e);return r.map((i,s)=>s===t?`${i} - ${n}`:i).join()}});var yf,zv,Nv,Mv,vf,Lv,Fv,Uv,wf,Vv,xf=R(()=>{"use strict";$t();We();bf();yf=(r,e,n)=>(Vv(e),r.session.pack&&e[0].dims.length>1?[r.run(gf(r,e,n),e)]:[r.run(Mv(r,e,n),e)]),zv=(r,e)=>({name:"Concat",inputNames:Array.from({length:r},(n,t)=>`X${t}`),inputTypes:Array(r).fill(0),cacheHint:e}),Nv=(r,e,n,t)=>{let o=n[0].dims.slice();if(t>=o.length||t<-1*o.length)throw new Error("axis specified for concat doesn't match input dimensionality");t<0&&(t=o.length+t);let i=o.slice(0);for(let y=1;y<n.length;y++){let b=n[y].dims.slice();for(let w=0;w<o.length;w++)if(w===t)i[t]+=b[w];else if(o[w]!==b[w])throw new Error("non concat dimensions must match")}let s=i.length,a=new Array(n.length),u=0;for(let y=0;y<a.length;++y)u+=n[y].dims[t],a[y]=u;let l="";n.length<5?l=vf(a):l=Lv(a);let d=Fv(n.length,s),p=Uv(a),m=`
        ${d}
        ${p}
        ${l}
        float process(int indices[${s}]) {
          int textureIndex = getTextureWhereDataResides (indices[${t}]);

          if(textureIndex != 0) {
            indices[${t}] = indices[${t}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));
          }

          return fetchDataFromCorrectTexture(textureIndex, indices);
        }`;return{...e,output:{dims:i,type:n[0].type,textureType:0},shaderSource:m}},Mv=(r,e,n)=>{let t=zv(e.length,n.cacheKey);return{...t,get:()=>Nv(r,t,e,n.axis)}},vf=r=>`int getTextureWhereDataResides(int index) {
      ${r.map((n,t)=>`if(index<${n}) {return ${t};}
`).join("")}
    }`,Lv=r=>vf(r),Fv=(r,e)=>{let n=[`float fetchDataFromCorrectTexture(int textureIndex, int indices[${e}]) {`];for(let t=0;t<r;++t)t===0?n.push(`	if (textureIndex == ${t}) { return _X${t}(indices); }`):t===r-1?n.push(`	else { return _X${t}(indices); }`):n.push(`	else if (textureIndex == ${t}) { return _X${t}(indices); }`);return n.push("	}"),n.join(`
`)},Uv=r=>{let e=["int getSizeInConcatAxisValueFromIndex(int index) {"];for(let n=0;n<r.length;++n)n===0?e.push(`	if (index == ${n}) { return ${r[n]}; }`):n===r.length-1?e.push(`	else { return ${r[n]}; }`):e.push(`	else if (index == ${n}) { return ${r[n]}; }`);return e.push("	}"),e.join(`
`)},wf=r=>Ce({axis:r.attributes.getInt("axis")}),Vv=r=>{if(!r||r.length<1)throw new Error("too few inputs");let e=r[0].type,n=r[0].dims.length;if(e==="string")throw new Error("string tensor is not supported yet");for(let t of r){if(t.type!==e)throw new Error("input tensors should be one type");if(t.dims.length!==n)throw new Error("input tensors should have the same shape")}}});function Gv(){return dr("abs")}function Wv(){return dr("acos")}function Hv(){return dr("asin")}function qv(){return dr("atan")}function jv(){return dr("ceil")}function Kv(){return dr("cos")}function Yv(r){let e="elu";return{body:`
  const float alpha = float(${r});

  float ${e}_(float a) {
    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;
  }
  vec4 ${e}_(vec4 v) {
    return vec4(${e}_(v.x), ${e}_(v.y), ${e}_(v.z), ${e}_(v.w));
  }
  `,name:e,type:0}}function Xv(){return dr("exp")}function Zv(){return dr("floor")}function qs(r,e){let n="clip";return{body:`
  const float min = float(${r});
  const float max = float(${e});

  float ${n}_(float a) {
    return clamp(a, min, max);
  }
  vec4 ${n}_(vec4 v) {
    return clamp(v, min, max);
  }
  `,name:n,type:0}}function Jv(){let r="indentity";return{body:`
  float ${r}_(float a) {
    return a;
  }
  vec4 ${r}_(vec4 v) {
    return v;
  }
  `,name:r,type:0}}function Qv(r){let e="leakyRelu";return{body:`
  const float alpha = float(${r});

  float ${e}_(float a) {
    return a < 0.0 ? a * alpha : a;
  }
  vec4 ${e}_(vec4 v) {
    return vec4(${e}_(v.x), ${e}_(v.y), ${e}_(v.z), ${e}_(v.w));
  }
  `,name:e,type:0}}function ew(){return dr("log")}function tw(){let r="neg";return{body:`
  float ${r}_(float a) {
    return -a;
  }
  vec4 ${r}_(vec4 v) {
    return -v;
  }
  `,name:r,type:0}}function rw(){let r="not";return{body:`
  float ${r}_(float a) {
    return float( ! bool(a) );
  }
  bool ${r}_(bool a) {
    return !a;
  }
  vec4 ${r}_(vec4 v) {
    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));
  }
  bvec4 ${r}_(bvec4 v) {
    return bvec4(!v.x, !v.y, !v.z, !v.w);
  }
  `,name:r,type:0}}function nw(){return dr("sin")}function js(){let r="relu";return{body:`
  float ${r}_(float a) {
    return max( a, 0.0 );
  }
  vec4 ${r}_(vec4 v) {
    return max( v, 0.0 );
  }
  `,name:r,type:0}}function Ks(){let r="sigmoid";return{body:`
  float ${r}_(float a) {
    return 1.0 / (1.0 + exp(-a));
  }
  vec4 ${r}_(vec4 v) {
    return 1.0 / (1.0 + exp(-v));
  }
  `,name:r,type:0}}function ow(){return dr("sqrt")}function iw(){return dr("tan")}function aw(){let r="tanh";return{body:`
  float ${r}_(float a) {
    a = clamp(a, -10., 10.);
    a = exp(2.*a);
    return (a - 1.) / (a + 1.);
  }
  vec4 ${r}_(vec4 v) {
    v = clamp(v, -10., 10.);
    v = exp(2.*v);
    return (v - 1.) / (v + 1.);
  }
  `,name:r,type:0}}function dr(r){return{body:`
  float ${r}_(float a) {
    return ${r}(a);
  }
  vec4 ${r}_(vec4 v) {
    return ${r}(v);
  }
  `,name:r,type:0}}var sw,ht,_f,Tf,$f,Sf,Ys,If,Af,uw,Of,Ef,Cf,Pf,kf,Df,Xs,Bf,Rf,zf,Nf,Mf,Lf,Ff,Uf,Vf,Gf,Wf,Zs=R(()=>{"use strict";$t();Xe();Yr();lt();We();sw=(r,e,n,t)=>{let o=r.session.pack?2:0,i=ge(r.session.backend.glContext.version);return{...e,output:{dims:n.dims,type:n.type,textureType:o},shaderSource:`
     ${t.body}
     void main() {
       vec4 v = ${i.texture2D}(A, TexCoords);
       v = ${t.name}_(v);
       ${i.output} = v;
     }
     `,hasMain:!0}},ht=(r,e,n,t)=>{let o=r.session.pack?2:0,i={name:n.name,inputTypes:[o],inputNames:["A"],cacheHint:t};return{...i,get:()=>sw(r,i,e,n)}},_f=(r,e)=>[r.run(ht(r,e[0],Gv()),e)],Tf=(r,e)=>[r.run(ht(r,e[0],Wv()),e)],$f=(r,e)=>[r.run(ht(r,e[0],Hv()),e)],Sf=(r,e)=>[r.run(ht(r,e[0],qv()),e)],Ys=(r,e,n)=>[r.run(ht(r,e[0],qs(n.min,n.max),n.cacheKey),e)],If=r=>Ce({min:r.attributes.getFloat("min",An),max:r.attributes.getFloat("max",On)}),Af=(r,e)=>{let n=uw(r,e);return Ys(r,[e[0]],n)},uw=(r,e)=>{if(e.length>=3&&(!r.session.isInitializer(e[1].dataId)||!r.session.isInitializer(e[2].dataId)))throw new Error("dynamic clip attributes are not allowed");let n=e.length>=3?e[1].numberData[0]:An,t=e.length>=3?e[2].numberData[0]:On;return Ce({min:n,max:t})},Of=(r,e)=>[r.run(ht(r,e[0],jv()),e)],Ef=(r,e)=>[r.run(ht(r,e[0],Kv()),e)],Cf=(r,e,n)=>[r.run(ht(r,e[0],Yv(n.alpha),n.cacheKey),e)],Pf=r=>Ce({alpha:r.attributes.getFloat("alpha",1)}),kf=(r,e)=>[r.run(ht(r,e[0],Xv()),e)],Df=(r,e)=>[r.run(ht(r,e[0],Zv()),e)],Xs=(r,e)=>[r.run(ht(r,e[0],Jv()),e)],Bf=(r,e,n)=>[r.run(ht(r,e[0],Qv(n.alpha),n.cacheKey),e)],Rf=r=>Ce({alpha:r.attributes.getFloat("alpha",.01)}),zf=(r,e)=>[r.run(ht(r,e[0],ew()),e)],Nf=(r,e)=>[r.run(ht(r,e[0],tw()),e)],Mf=(r,e)=>[r.run(ht(r,e[0],rw()),e)],Lf=(r,e)=>[r.run(ht(r,e[0],js()),e)],Ff=(r,e)=>[r.run(ht(r,e[0],Ks()),e)],Uf=(r,e)=>[r.run(ht(r,e[0],nw()),e)],Vf=(r,e)=>[r.run(ht(r,e[0],ow()),e)],Gf=(r,e)=>[r.run(ht(r,e[0],iw()),e)],Wf=(r,e)=>[r.run(ht(r,e[0],aw()),e)]});function Pr(r){let e;switch(r.activation){case"Relu":e=js();break;case"Sigmoid":e=Ks();break;case"Clip":e=qs(r.clipMin,r.clipMax);break;default:return{activationFunction:"",applyActivation:""}}let n=e.name,t=e.body,o=`value = ${n}_(value);`;return{activationFunction:t,applyActivation:o}}var to,Pn=R(()=>{"use strict";Xe();Zs();to=r=>{let e=r.getString("activation","");if(e==="Clip"){let[n,t]=r.getFloats("activation_params",[An,On]);return{activation:e,clipMax:t,clipMin:n,activationCacheKey:`${e}:${n},${t}`}}return{activation:e,activationCacheKey:e}}});var dw,cw,Hf,qf=R(()=>{"use strict";or();lt();We();na();Pn();dw=(r,e)=>({name:"GroupedConv",inputNames:r?["X","W","Bias"]:["X","W"],inputTypes:r?[0,0,0]:[0,0],cacheHint:e}),cw=(r,e,n,t)=>{let i=e.length>2?"value += getBias(output_channel);":"",s=e[0].dims.slice(),a=e[1].dims.slice(),u=a[0]/t.group;Je.verbose("GroupedConv",`autpPad:${t.autoPad}, dilations:${t.dilations}, group:${t.group}, kernelShape:${t.kernelShape}, pads:${t.pads}, strides:${t.strides}`);let l=ro(s,a,t.dilations,t.pads,t.strides),d=ge(r.session.backend.glContext.version),{activationFunction:p,applyActivation:m}=Pr(t),y=`
  const ivec2 strides = ivec2(${t.strides[0]}, ${t.strides[1]});
  const ivec2 pads = ivec2(${t.pads[0]}, ${t.pads[1]});
  ${p}
  void main() {
    ivec4 coords = getOutputCoords();
    int batch = coords.x;
    int output_channel = coords.y;
    ivec2 xRCCorner = coords.zw * strides - pads;
    int group_id = output_channel / ${u};

    float value = 0.0;
    for (int wInChannel = 0; wInChannel < ${a[1]}; wInChannel++) {
      int input_channel = group_id * ${a[1]} + wInChannel;
      for (int wHeight = 0; wHeight < ${a[2]}; wHeight++) {
        int xHeight = xRCCorner.x + wHeight * ${t.dilations[0]};

        if (xHeight < 0 || xHeight >= ${s[2]}) {
          continue;
        }

        for (int wWidth = 0; wWidth < ${a[3]}; wWidth++) {
          int xWidth = xRCCorner.y + wWidth * ${t.dilations[1]};
          if (xWidth < 0 || xWidth >= ${s[3]}) {
            continue;
          }

          float xVal = getX(batch, input_channel, xWidth, xHeight);
          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);
          value += xVal*wVal;
        }
      }
    }
    ${i}
    ${m}
    ${d.output} = vec4(value, .0, .0, .0);
  }
`;return{...n,output:{dims:l,type:e[0].type,textureType:0},shaderSource:y,hasMain:!0}},Hf=(r,e,n)=>{let t=dw(e.length>2,n.cacheKey);return{...t,get:()=>cw(r,e,t,n)}}});var fw,pw,jf,Kf=R(()=>{"use strict";lt();We();Cn();fw=r=>({name:"Im2Col (packed)",inputNames:["A"],inputTypes:[2],cacheHint:r}),pw=(r,e,n,t,o,i)=>{let s=n.dims,a=t.dims,u=2,l=3,d=o.length,p=[a[1]*a[2]*a[3],o[2]*o[3]],m=a[2]*a[3],y=Cr(),b=ge(r.session.backend.glContext.version),w="";for(let $=0;$<=1;$++)for(let _=0;_<=1;_++)w+=`
            blockIndex = rc.x + ${_};
            pos = rc.y + ${$};

            if(blockIndex < ${p[1]} && pos < ${p[0]}) {
              offsetY = int(blockIndex / (${o[d-1]})) * ${i.strides[0]} -
                ${i.pads[0]};
              d0 = offsetY + ${i.dilations[0]} * (imod(pos, ${m}) / ${a[2]});

              if(d0 < ${s[u]} && d0 >= 0) {
                offsetX = imod(blockIndex, ${o[d-1]}) * ${i.strides[1]} -
                  ${i.pads[1]};
                d1 = offsetX + ${i.dilations[1]} * imod(imod(pos, ${m}), ${a[2]});

                if(d1 < ${s[l]} && d1 >= 0) {

                  ch = int(float(pos)/ ${m}.);
                    innerDims = vec2(d0, d1);
                    result[${$*2+_}] = getChannel(
                      getA(0, ch, int(innerDims.x),
                      int(innerDims.y)), innerDims);
                }
              }
            }

          `;let A=`
      ${y}

      void main() {
        ivec2 rc = getOutputCoords();
          vec4 result = vec4(0.0);
          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
          vec2 innerDims;
          ${w}
          ${b.output} = result;
      }
            `;return{...e,output:{dims:p,type:n.type,textureType:2},shaderSource:A,hasMain:!0}},jf=(r,e,n,t,o)=>{let i=fw(o.cacheKey);return{...i,get:()=>pw(r,i,e,n,t,o)}}});function mw(r,e,n){let t=e[0].dims,o=e[1].dims,i=Vt.calcShape(t,o,!0);if(!i)throw new Error("Can't use matmul on the given tensors");let s=Gt(i.length),a=xr(),{activationFunction:u,applyActivation:l}=Pr(n),d=e.length>2,p=d?"value += getBiasForMatmul();":"",m=d?`${Qs(s,a,e[2].dims,i,!1)}`:"",y=i.length,b=t.length,w=o.length,A=t[t.length-1],$=`
    ${u}
    ${m}
    float process(int indices[${y}]) {
        int a[${b}];
        int b[${w}];
        bcastMatmulIndices_A(indices, a);
        bcastMatmulIndices_B(indices, b);

        float value;
        for (int k=0; k<${A}; ++k) {
            a[${b-1}] = k;
            b[${w-2}] = k;
            value += _A(a) * _B(b);
        }
        ${p}
        ${l}
        return value;
    }`;return{...r,output:{dims:i,type:e[0].type,textureType:0},shaderSource:$}}function Js(r,e){let n=hw(r.length>2,e.activationCacheKey);return{...n,get:()=>mw(n,r,e)}}function Qs(r,e,n,t,o){let i="",s=n.length,a=t.length,u=a-s;a<2&&s>0?i="coords":i=n.map((w,A)=>`coords.${e[A+u]}`).join(", ");let d=Vt.getBroadcastDims(n,t).map(w=>`coords.${e[w+u]} = 0;`).join(`
`),m=se.size(n)===1,y="vec4(outputValue.xx, outputValue.yy)";return m&&(y="vec4(outputValue.x)"),o?`
vec4 getBiasForMatmul() {
  ${r} coords = getOutputCoords();
  ${d}
  vec4 outputValue = getBias(${i});
  return ${y};
}`:`
float getBiasForMatmul() {
  ${r} coords = getOutputCoords();
  ${d}
  return getBias(coords.x);
}`}var Yf,Xf,hw,gw,oa=R(()=>{"use strict";Xe();We();Er();Pn();eu();Yf=(r,e,n)=>(gw(e),r.session.pack?[r.run(ia(r,e,n),e)]:[r.run(Js(e,n),e)]),Xf=r=>to(r.attributes),hw=(r,e)=>({name:"MatMul",inputNames:r?["A","B","Bias"]:["A","B"],inputTypes:r?[0,0,0]:[0,0],cacheHint:e});gw=r=>{if(!r||r.length!==2)throw new Error("MatMul requires 2 inputs.");if(r[0].dims[r[0].dims.length-1]!==r[1].dims[r[1].dims.length-2])throw new Error("shared dimension does not match.");if(r[0].type!=="float32"&&r[0].type!=="float64"||r[1].type!=="float32"&&r[1].type!=="float64")throw new Error("inputs should be float type");if(r[0].type!==r[1].type)throw new Error("inputs types should match")}});function vw(r,e,n,t){let o=[],i=[],s=n[0].dims,a=n[1].dims,u=s.length,l=a.length,d=t.length,p=d-u,m=d-l;o=s.map((O,P)=>`coords.${e[P+p]}`),o[u-1]="i*2",o.join(", "),i=a.map((O,P)=>`coords.${e[P+m]}`),i[l-2]="i*2",i.join(", ");let y=Vt.getBroadcastDims(s,t),b=Vt.getBroadcastDims(a,t),w=y.map(O=>`coords.${e[O+p]} = 0;`).join(`
`),A=b.map(O=>`coords.${e[O+m]} = 0;`).join(`
`),$=`int lastDim = coords.${e[d-1]};
  coords.${e[d-1]} = coords.${e[d-2]};
  coords.${e[d-2]} = lastDim;`;return`
vec4 getAAtOutCoordsMatmul(int i) {
  ${r} coords = getOutputCoords();
  ${$}
  ${w}
  vec4 outputValue = getA(${o});
  return outputValue;
}

vec4 getBAtOutCoordsMatmul(int i) {
  ${r} coords = getOutputCoords();
  ${$}
  ${A}
  vec4 outputValue = getB(${i});
  return outputValue;
}`}function ww(r,e){let n="";for(let t=0;t<e-2;t++)n+=`rc.${r[t]}, `;return n+=`rc.${r[e-2]}, i*2`,n}function xw(r,e){let n="";for(let t=0;t<e-2;t++)n+=`rc.${r[t]}, `;return n+=`i*2, rc.${r[e-1]}`,n}var bw,yw,ia,eu=R(()=>{"use strict";Xe();lt();We();Er();Pn();oa();bw=(r,e)=>({name:"MatMul (packed)",inputNames:r?["A","B","Bias"]:["A","B"],inputTypes:r?[2,2,2]:[2,2],cacheHint:e}),yw=(r,e,n,t)=>{let o=n.length>2,i=o?"value += getBiasForMatmul();":"",s=n[0].dims,a=n[1].dims,u=Vt.calcShape(s,a,!0),l=!se.areEqual(n[0].dims,n[1].dims);if(!u)throw new Error("Can't use matmul on the given tensors");let d=s[s.length-1],p=Math.ceil(d/2),m=s.length,y=a.length,b=ge(r.session.backend.glContext.version),w=Gt(u.length),A=u.length,$=xr(),{activationFunction:_,applyActivation:O}=Pr(t),P=o?`${Qs(w,$,n[2].dims,u,!0)}`:"",N=l?`${vw(w,$,n,u)}`:"",F=l?"getAAtOutCoordsMatmul(i)":`getA(${ww($,m)})`,G=l?"getBAtOutCoordsMatmul(i)":`getB(${xw($,y)})`,J=l?"":`${w} rc =
          getOutputCoords(); int lastDim = rc.${$[A-1]}; rc.${$[A-1]} =
          rc.${$[A-2]}; rc.${$[A-2]} = lastDim;
      `,le=`
            ${N}
            ${P}
            ${_}
            void main() {
              ${J}

              vec4 value = vec4(0);
              for (int i = 0; i < ${p}; i++) {
                vec4 a = ${F};
                vec4 b = ${G};

                value += (a.rrbb * b.rgrg);
                value += (a.ggaa * b.baba);
              }
              ${i}
              ${O}
              ${b.output} = value;
            }`;return{...e,output:{dims:u,type:n[0].type,textureType:2},shaderSource:le,hasMain:!0}},ia=(r,e,n)=>{let t=bw(e.length>2,n.activationCacheKey);return{...t,get:()=>yw(r,t,e,n)}}});var Zf,Jf=R(()=>{"use strict";na();Kf();eu();Zf=(r,e,n)=>{let t=e[0].dims,o=e[1].dims,i=ro(t,o,n.dilations,n.pads,n.strides),s=r.run(jf(r,e[0],e[1],i,n),[e[0]]),a=r.reshapePacked(e[1],[o[0],o[1]*o[2]*o[3]]),u=e.length===3?[a,s,e[2]]:[a,s],l=r.run(ia(r,u,n),u);return r.reshapePacked(l,i)}});var _w,Tw,Qf,tu,ru=R(()=>{"use strict";We();_w=r=>({name:"Im2Col",inputNames:["X"],inputTypes:[0],cacheHint:r}),Tw=(r,e,n,t,o,i)=>{let s=n.dims,a=t.dims,u=o.length,l=tu(s,a,o,4),d=`
        const int XC = ${s[1]};
        const int XH = ${s[2]};
        const int XW = ${s[3]};
        const int KH = ${i.kernelShape[0]};
        const int KW = ${i.kernelShape[1]};
        const int dilationH = ${i.dilations[0]};
        const int dilationW = ${i.dilations[1]};
        const int strideH = ${i.strides[0]};
        const int strideW = ${i.strides[1]};
        const int padH = ${i.pads[0]};
        const int padW = ${i.pads[1]};
        const int KHKW = KH*KW;
        const int XCKHKW = XC * KHKW;
        const int outputChannels = 4;
        vec4 process(int indices[${u}]) {
          int b  = indices[0]; // batch size
          int oh = indices[1] * strideH - padH; //output height
          int ow = indices[2] * strideW - padW; //output width
          int p = indices[3] * outputChannels; //patch
          vec4 value = vec4(0.0);
          for(int i=0; i < outputChannels; ++i) {
            if(p < XCKHKW) {
              int patchC = p / KHKW;
              int patchH = (p - patchC*KHKW) / KW;
              int patchW = (p - patchC*KHKW) - patchH * KW;
              int xh2 = oh + patchH * dilationH;
              int xw2 = ow + patchW * dilationW;
              int x[${s.length}];
              x[0] = b;
              x[1] = patchC;
              x[2] = xh2;
              x[3] = xw2;
              if(xh2 >= 0 &&
                  xh2 < XH &&
                  xw2 >= 0 &&
                  xw2 < XW) {
                value[i] = _X(x);
              }
            }
            ++p;
          }
          return value;
        }
        `;return{...e,output:{dims:l,type:n.type,textureType:4},shaderSource:d}},Qf=(r,e,n,t,o)=>{let i=_w(o.cacheKey);return{...i,get:()=>Tw(r,i,e,n,t,o)}},tu=(r,e,n,t=4)=>[n[0],n[2],n[3],Math.ceil(r[1]*e[2]*e[3]/t)]});var $w,Sw,ep,tp=R(()=>{"use strict";Xe();lt();We();Pn();ru();$w=(r,e)=>({name:"ConvDotProduct",inputNames:r?["Im2Col","K","B"]:["Im2Col","K"],inputTypes:r?[0,4,0]:[0,4],cacheKey:e.activationCacheKey}),Sw=(r,e,n,t,o)=>{let i=n[0].dims,s=n[1].dims,a=[s[0],Math.ceil(i[1]*s[2]*s[3]/4)],u=tu(i,s,t),[l,d]=r.calculateTextureWidthAndHeight(a,4),p=se.computeStrides(u),[m,y]=r.calculateTextureWidthAndHeight(u,4),b=t.length,w=n.length<3?"0.0":"_B(b)",A=Math.ceil(i[1]*s[2]*s[3]/4),{activationFunction:$,applyActivation:_}=Pr(o),O=ge(r.session.backend.glContext.version),P=`
${$}
float process(int indices[${b}]) {
  int b[1];
  b[0] = indices[1];
  int im2col[4];
  im2col[0] = indices[0];
  im2col[1] = indices[2];
  im2col[2] = indices[3];
  int im2colOffset = im2col[0] * ${p[0]} + im2col[1] * ${p[1]} + im2col[2] * ${p[2]};
  int kernelOffset = indices[1] * ${a[1]};
  float value = ${w};
  for (int i = 0; i < ${A}; ++i) {
    vec2 im2colCoords = offsetToCoords(im2colOffset, ${m}, ${y});
    vec2 kernelCoords = offsetToCoords(kernelOffset, ${l}, ${d});
    value += dot(${O.texture2D}(Im2Col, im2colCoords), ${O.texture2D}(K, kernelCoords));
    ++im2colOffset;
    ++kernelOffset;
  }
  ${_}
  return value;
}`;return{...e,output:{dims:t,type:n[0].type,textureType:0},shaderSource:P}},ep=(r,e,n,t)=>{let o=$w(e.length>2,t);return{...o,get:()=>Sw(r,o,e,n,t)}}});var ro,nu,Iw,Aw,Ow,Ew,ou,Cw,na=R(()=>{"use strict";$t();Xe();qf();Jf();tp();Pn();ru();oa();ro=(r,e,n,t,o)=>{let i=r[0],s=r.slice(2),a=s.length,u=e[0],d=e.slice(2).map((b,w)=>b+(b-1)*(n[w]-1)),m=s.map((b,w)=>b+t[w]+t[w+a]).map((b,w)=>Math.floor((b-d[w]+o[w])/o[w]));return[i,u].concat(...m)},nu=(r,e,n)=>(Cw(e,n),Iw(r,e,n)),Iw=(r,e,n)=>{let t=Ew(n,e),o=r.session.pack,i=t.kernelShape[0]===1&&t.kernelShape[1]===1;return t.group>1?[r.run(Hf(r,e,t),e)]:i&&o?[Aw(r,e,t)]:o&&e[0].dims.length===4&&e[0].dims[0]===1&&!i?[Zf(r,e,t)]:[Ow(r,e,t)]},Aw=(r,e,n)=>{let t=e[0].dims,o=e[1].dims,i=ro(t,o,n.dilations,n.pads,n.strides),s=r.reshapeUnpacked(e[0],[t[1],t[2]*t[3]]),a=r.reshapeUnpacked(e[1],[o[0],o[1]]),u=e.length>2?[a,s,e[2]]:[a,s],l=r.run(Js(u,n),u);return r.reshapeUnpacked(l,i)},Ow=(r,e,n)=>{let t=e[0].dims,o=e[1].dims,i=ro(t,o,n.dilations,n.pads,n.strides),s=r.run(Qf(r,e[0],e[1],i,n),[e[0]]),a=e.length===3?[s,e[1],e[2]]:[s,e[1]];return r.run(ep(r,e,i,n),a)},Ew=(r,e)=>{let n=r.kernelShape.slice();if(r.kernelShape.length===0)for(let i=2;i<e[1].dims.length;++i)n.push(e[1].dims[i]);let t=r.pads.slice();In.adjustPadsBasedOnAutoPad(e[0].dims,r.strides,r.dilations,n,t,r.autoPad);let o=Object.assign({},r);return Object.assign(o,{kernelShape:n,pads:t,cacheKey:r.cacheKey}),o},ou=r=>{let e=r.attributes,n=to(e),t=e.getString("auto_pad","NOTSET"),o=e.getInts("dilations",[1,1]),i=e.getInt("group",1),s=e.getInts("kernel_shape",[]),a=e.getInts("pads",[0,0,0,0]),u=e.getInts("strides",[1,1]);return Ce({autoPad:t,dilations:o,group:i,kernelShape:s,pads:a,strides:u,...n})},Cw=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4||r[1].dims.length!==4)throw new Error("currently only support 2-dimensional conv");let n=r[0].dims[1],t=r[1].dims[1]*e.group;if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(r.length===3&&(r[2].dims.length!==1||r[1].dims[0]!==r[2].dims[0]))throw new Error("invalid bias");let o=r[0].dims.length-2;if(e.dilations.length!==o)throw new Error(`dilations should be ${o}D`);if(e.strides.length!==o)throw new Error(`strides should be ${o}D`);if(e.pads.length!==o*2)throw new Error(`pads should be ${o*2}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape");if(r[0].type!=="float32"||r[1].type!=="float32")throw new Error("Conv input(X,W) should be float tensor");if(r.length===3&&r[2].type!=="float32")throw new Error("Conv input(bias) should be float tensor")}});var Pw,kw,Dw,rp,Bw,Rw,zw,Nw,Mw,Lw,np,Fw,op=R(()=>{"use strict";$t();lt();We();Pn();Pw=(r,e,n,t,o,i)=>(r-1)*e+n+(t-1)*o+1-i,kw=(r,e,n,t,o)=>{let i=Math.floor(r/2);e==="SAME_UPPER"?(n[t]=i,n[o]=r-i):e==="SAME_LOWER"&&(n[t]=r-i,n[o]=i)},Dw=(r,e,n,t,o,i,s,a)=>{let u=r.length-2,l=a.length===0;for(let d=0;d<u;++d){let p=l?r[d+2]*i[d]:a[d],m=Pw(r[d+2],i[d],o[d],e[d],n[d],p);kw(m,t,o,d,d+u),l&&a.push(i[d]*(r[d+2]-1)+s[d]+(e[d]-1)*n[d]+1-o[d]-o[d+u])}},rp=(r,e,n)=>(Fw(e,n),Bw(r,e,n)),Bw=(r,e,n)=>{let t=Lw(n,e);return[Mw(r,e,t)]},Rw=(r,e)=>({name:"ConvTranspose",inputNames:r?["X","W","B"]:["X","W"],inputTypes:r?[0,0,0]:[0,0],cacheHint:e}),zw=(r,e,n,t)=>{let i=e.length>2?"getB(output_channel)":"0.0",s=e[0].dims,a=e[1].dims,u=a[1],l=a[0]/t.group,d=[e[0].dims[0],e[1].dims[1]*t.group,...t.outputShape],p=ge(r.session.backend.glContext.version),{activationFunction:m,applyActivation:y}=Pr(t),b=`
  const ivec2 strides = ivec2(${t.strides[0]}, ${t.strides[1]});
  const ivec2 pads = ivec2(${t.pads[0]}, ${t.pads[1]});
  ${m}
  void main() {
    ivec4 coords = getOutputCoords();
    int batch = coords.x;
    int output_channel = coords.y;

    ivec2 loc = coords.zw + pads;

    int group_id = output_channel / ${u};
    int wOutChannel = output_channel - group_id * ${u};

    float value = ${i};
    for (int inChannelOffset = 0; inChannelOffset < ${l}; inChannelOffset++) {
      int input_channel = group_id * ${l} + inChannelOffset;
      for (int wWOff = 0; wWOff < ${a[2]}; wWOff++) {
        for (int wHOff = 0; wHOff < ${a[3]}; wHOff++) {
          ivec2 wOff = ivec2(wWOff * ${t.dilations[0]}, wHOff * ${t.dilations[1]});
          ivec2 wLoc = loc - wOff;
          ivec2 wLocIn = wLoc / strides;
          if (
            wLocIn * strides == wLoc &&
            wLocIn.x >= 0 && wLocIn.x < ${s[2]} &&
            wLocIn.y >= 0 && wLocIn.y < ${s[3]}
          ) {
            float xVal = getX(batch, input_channel, wLocIn.y, wLocIn.x);
            float wVal = getW(input_channel, wOutChannel, wHOff, wWOff);
            value += xVal * wVal;
          }
        }
      }
    }
    ${y}
    ${p.output} = vec4(value, .0, .0, .0);
  }
`;return{...n,output:{dims:d,type:e[0].type,textureType:0},shaderSource:b,hasMain:!0}},Nw=(r,e,n)=>{let t=Rw(e.length>2,n.cacheKey);return{...t,get:()=>zw(r,e,t,n)}},Mw=(r,e,n)=>r.run(Nw(r,e,n),e),Lw=(r,e)=>{let n=r.kernelShape.slice();if(r.kernelShape.length===0)for(let a=2;a<e[1].dims.length;++a)n.push(e[1].dims[a]);let t=r.pads.slice(),o=r.outputShape.slice(),i=e[0].dims;Dw(i,n,r.dilations,r.autoPad,t,r.strides,r.outputPadding,o);let s=Object.assign({},r);return Object.assign(s,{kernelShape:n,pads:t,outputShape:o,cacheKey:r.cacheKey}),s},np=r=>{let e=r.attributes,n=to(e),t=e.getString("auto_pad","NOTSET"),o=e.getInts("dilations",[1,1]),i=e.getInt("group",1),s=e.getInts("kernel_shape",[]),a=e.getInts("output_padding",[0,0]),u=e.getInts("output_shape",[]),l=e.getInts("pads",[0,0,0,0]),d=e.getInts("strides",[1,1]);return Ce({autoPad:t,dilations:o,group:i,kernelShape:s,outputPadding:a,outputShape:u,pads:l,strides:d,...n})},Fw=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4||r[1].dims.length!==4)throw new Error("currently only support 2-dimensional conv");let n=r[0].dims[1],t=r[1].dims[0];if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let o=r[1].dims[1]*e.group;if(r.length===3&&(r[2].dims.length!==1||r[2].dims[0]!==o))throw new Error("invalid bias");let i=r[0].dims.length-2;if(e.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(e.strides.length!==i)throw new Error(`strides should be ${i}D`);if(e.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(e.outputPadding.length!==i)throw new Error(`output_padding should be ${i}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape");if(e.outputShape.length!==0&&e.outputShape.length!==r[0].dims.length-2)throw new Error("invalid output shape");if(r[0].type!=="float32"||r[1].type!=="float32")throw new Error("ConvTranspose input(X,W) should be float tensor");if(r.length===3&&r[2].type!=="float32")throw new Error("ConvTranspose input(bias) should be float tensor")}});var ip,kn,ap,Uw,sp,Vw,Gw,Ww,aa=R(()=>{"use strict";$t();Xe();We();ip={name:"Transpose",inputNames:["A"],inputTypes:[0]},kn=(r,e,n)=>(Ww(e),[r.run({...ip,cacheHint:n.cacheKey,get:()=>Uw(r,e[0],n.perm)},e)]),ap=r=>Ce({perm:r.attributes.getInts("perm",[])}),Uw=(r,e,n)=>{let t=e.dims;n=sp(t,n);let o=Vw(t,n),i=t.length,s=`
      ${Gw("perm",n,i)}
      float process(int indices[${i}]) {
        int a[${i}];
        perm(a, indices);
        return _A(a);
      }`;return{...ip,output:{dims:o,type:e.type,textureType:0},shaderSource:s}},sp=(r,e)=>(e&&e.length!==r.length&&(e=[...r.keys()].reverse()),e),Vw=(r,e)=>(e=sp(r,e),se.sortBasedOnPerm(r,e)),Gw=(r,e,n)=>{let t=[];t.push(`void ${r}(out int a[${n}], int src[${n}]) {`);for(let o=0;o<n;++o)t.push(`	a[${e[o]}]=src[${o}];`);return t.push("	}"),t.join(`
`)},Ww=r=>{if(!r||r.length!==1)throw new Error("Transpose requires 1 input.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("input should be float tensor")}});var up,lp,Hw,dp=R(()=>{"use strict";aa();up=(r,e,n)=>{Hw(e);let t=n.blocksize,o=t*t,i=n.mode==="DCR"?[0,3,4,1,5,2]:[0,1,4,2,5,3],s=n.mode==="DCR"?[e[0].dims[0],t,t,e[0].dims[1]/o,e[0].dims[2],e[0].dims[3]]:[e[0].dims[0],e[0].dims[1]/o,t,t,e[0].dims[2],e[0].dims[3]],a=r.reshapeUnpacked(e[0],s),u={perm:i,cacheKey:`${i}`},[l]=kn(r,[a],u),d=[e[0].dims[0],e[0].dims[1]/o,e[0].dims[2]*t,e[0].dims[3]*t];return[r.reshapeUnpacked(l,d)]},lp=r=>{let e=r.attributes.getInt("blocksize");if(e<1)throw new Error(`blocksize must be >= 1, but got : ${e} for DepthToSpace`);let n=r.attributes.getString("mode","DCR");if(n!=="DCR"&&n!=="CRD")throw new Error(`unrecognized mode: ${n} for DepthToSpace`);return{mode:n,blocksize:e}},Hw=r=>{if(r.length!==1)throw new Error(`DepthToSpace expect 1 inputs, but got ${r.length}`);if(r[0].type==="string"||r[0].dims.length!==4)throw new TypeError("DepthToSpace input should be a 4-D numeric tensor")}});var cp,fp,qw,pp=R(()=>{"use strict";Xe();cp=(r,e,n)=>{qw(e,n);let t=se.flattenShape(e[0].dims,n);return[r.reshapeUnpacked(e[0],t)]},fp=r=>r.attributes.getInt("axis",1),qw=(r,e)=>{if(!r||r.length!==1)throw new Error("Flatten requires 1 input.");let n=r[0].dims.length;if(n===0)throw new Error("scalar tensor is not supported.");if(e<-n||e>n)throw new Error("Invalid axis");if(r[0].type==="string")throw new Error("string tensor is not supported.")}});var sn,Ho=R(()=>{"use strict";sn=["float32","float64","int32","int16","int8","uint16","uint32","uint8"]});var hp,mp,jw,Kw,Yw,Xw,gp=R(()=>{"use strict";$t();Ho();Xe();We();hp=(r,e,n)=>(Xw(e,n.axis),[r.run(Yw(r,e,n),e)]),mp=r=>Ce({axis:r.attributes.getInt("axis",0)}),jw={name:"Gather",inputNames:["A","B"],inputTypes:[0,0]},Kw=(r,e,n,t)=>{let o=n[0].dims.slice(),i=n[1].dims.slice(),s=new Array(o.length+i.length-1);t=se.normalizeAxis(t,o.length);let a=[];for(let m=0;m<s.length;m++)m<t?(s[m]=o[m],a.push(`inputIdx[${m}] = outputIdx[${m}];`)):m<t+i.length?(s[m]=i[m-t],a.push(`indexDataIdx[${m-t}] = outputIdx[${m}];`)):(s[m]=o[m-i.length+1],a.push(`inputIdx[${m-i.length+1}] = outputIdx[${m}];`));let u=s.length||1,l=o.length,d=i.length||1,p=`
      float process(int outputIdx[${u}]) {
        int inputIdx[${l}];
        int indexDataIdx[${d}];
        indexDataIdx[0] = 0;
        ${a.join(`
        `)}
        int idx = int(_B(indexDataIdx));
        inputIdx[${t}] = idx < 0 ? idx + ${o[t]} : idx;
        return _A(inputIdx);
      }`;return{...e,output:{dims:s,type:n[0].type,textureType:0},shaderSource:p}},Yw=(r,e,n)=>{let t={...jw,cacheHint:n.cacheKey};return{...t,get:()=>Kw(r,t,e,n.axis)}},Xw=(r,e)=>{if(!r||r.length!==2)throw new Error("Gather requires 2 inputs.");let n=r[0].dims.length;if(n<1)throw new Error("Invalid input shape.");if(e<-n||e>n-1)throw new Error("Invalid axis.");if(sn.indexOf(r[0].type)===-1)throw new Error("Invaid input type.");if(r[1].type!=="int32"&&r[1].type!=="int16")throw new Error("Invaid input type.")}});var iu,bp,yp,vp,Zw,Jw,Qw,wp=R(()=>{"use strict";$t();Xe();We();iu=(r,e,n)=>(Qw(e,n),[r.run(Zw(e,n),e)]),bp=(r,e)=>{let n=r.attributes.getInt("transA",0)!==0,t=r.attributes.getInt("transB",0)!==0,o=r.attributes.getFloat("alpha",1),i=r.attributes.getFloat("beta",1);return Ce({transA:n,transB:t,alpha:o,beta:i,isOptionalC:e})},yp=r=>bp(r,!1),vp=r=>bp(r,!0),Zw=(r,e)=>{let n={name:"Gemm",inputNames:r.length===3?["A","B","C"]:["A","B"],inputTypes:r.length===3?[0,0,0]:[0,0],key:e.cacheKey};return{...n,get:()=>Jw(n,r,e)}},Jw=(r,e,n)=>{let t=e[0].dims.slice(),o=e[1].dims.slice(),[i,s]=Yi.getShapeOfGemmResult(t,n.transA,o,n.transB,e.length===3?e[2].dims:void 0),a=[i,s];if(!a)throw new Error("Can't use gemm on the given tensors");let u=t[t.length-1],l="";n.transA&&(u=t[0]),n.transA&&n.transB?l="value += _A_T(a) * _B_T(b);":n.transA&&!n.transB?l="value += _A_T(a) * _B(b);":!n.transA&&n.transB?l="value += _A(a) * _B_T(b);":!n.transA&&!n.transB&&(l="value += _A(a) * _B(b);");let d=a.length,p=e.length===3?`int c[${e[2].dims.length}];`:"",m=e.length===3?"bcastIndices_C(indices, c);":"",y=e.length===3?"value += beta * _C(c);":"",b=`
      float process(int indices[${d}]) {
          int a[${d}];
          int b[${d}];
          ${p}

          copyVec(indices, a);
          copyVec(indices, b);
          ${m}

          float value = 0.0;
          for (int k=0; k<${u}; ++k) {
              a[${d-1}] = k;
              b[${d-2}] = k;
              ${l}
          }

          value = value * alpha;
          ${y}
          return value;
      }`;return{...r,output:{dims:a,type:e[0].type,textureType:0},variables:[{name:"alpha",type:"float",data:n.alpha},{name:"beta",type:"float",data:n.beta}],shaderSource:b}},Qw=(r,e)=>{if(!r)throw new Error("Input is missing");if(e.isOptionalC&&(r.length<2||r.length>3))throw new Error("Invaid input shape.");if(!e.isOptionalC&&r.length!==3)throw new Error("Gemm requires 3 inputs");if(r.length===3&&r[2].dims.length!==1&&r[2].dims.length!==2)throw new Error("Invalid input shape of C");if(r[0].type!=="float32"&&r[0].type!=="float64"||r[1].type!=="float32"&&r[1].type!=="float64"||r.length===3&&r[2].type!=="float32"&&r[2].type!=="float64")throw new Error("Invalid input type.");if(r[0].type!==r[1].type||r.length===3&&r[0].type!==r[2].type)throw new Error("Input types are mismatched")}});var xp,_p,ex,tx,rx,nx,ox,Tp=R(()=>{"use strict";$t();We();xp=(r,e,n)=>(ox(e),[r.run(rx(r,e,n),e)]),_p=r=>{let e=r.attributes.getFloat("scale"),n=r.attributes.getFloats("bias");return Ce({scale:e,bias:n})},ex={name:"ImageScaler",inputNames:["X"],inputTypes:[0]},tx=(r,e,n,t)=>{let o=n[0].dims.slice(),i=o.length,a=`
      ${nx(t.bias.length)}
      float process(int indices[${i}]) {
        return _X(indices) * scale + getBias(bias, indices[1]);
      }`;return{...e,output:{dims:o,type:n[0].type,textureType:0},variables:[{name:"bias",type:"float",arrayLength:t.bias.length,data:t.bias},{name:"scale",type:"float",data:t.scale}],shaderSource:a}},rx=(r,e,n)=>{let t={...ex,cacheHint:n.cacheKey};return{...t,get:()=>tx(r,t,e,n)}},nx=r=>{let e=[`float getBias(float bias[${r}], int channel) {`];for(let n=0;n<r;++n)n===0?e.push(`	if (channel == ${n}) { return bias[${n}]; }`):n===r-1?e.push(`	else { return bias[${n}]; }`):e.push(`	else if (channel == ${n}) { return bias[${n}]; }`);return e.push("	}"),e.join(`
`)},ox=r=>{if(!r||r.length!==1)throw new Error("ImageScaler requires 1 input.");if(r[0].dims.length!==4)throw new Error("Invalid input shape.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.")}});var Sp,Ip,$p,ix,ax,sx,ux,lx,dx,Ap=R(()=>{"use strict";lt();We();Sp=(r,e,n)=>{dx(e);let t=r.run(ax(e[0]),e);return[r.run(lx(r,e[0],n,t.dims),[e[0],t,e[1],e[2]])]},Ip=r=>r.attributes.getFloat("epsilon",1e-5),$p={name:"InstanceNormalization_MeanAndVariance",inputNames:["X"],inputTypes:[0]},ix=(r,e)=>{let n=e.dims.slice(),t=n[1],o=n[2]*n[3],i=[n[0],t],s=`
      vec4 process(int[2] indices) {
        vec4 v = vec4(0.0);
        int a[4];
        a[0] = indices[0];
        a[1] = indices[1];
        float temp = 0.0;
        for(int a2=0; a2<${n[2]}; a2++) {
          a[2] = a2;
          for(int a3=0; a3<${n[3]}; a3++) {
            a[3] = a3;
            float x = _X(a);
            temp += x;
          }
        }
        float mean = temp / float(${o});
        temp = 0.0;
        for(int a2=0; a2<${n[2]}; a2++) {
          a[2] = a2;
          for(int a3=0; a3<${n[3]}; a3++) {
            a[3] = a3;
            float x = _X(a);
            temp += (x - mean) * (x - mean);
          }
        }
        v.r = mean;
        v.g = temp / float(${o});

        return v;
      }`;return{...r,output:{dims:i,type:e.type,textureType:4},shaderSource:s}},ax=r=>({...$p,get:()=>ix($p,r)}),sx={name:"InstanceNormalization_ComputeOutput",inputNames:["X","MeanAndVariance","Scale","B"],inputTypes:[0,4,0,0]},ux=(r,e,n,t,o)=>{let i=ge(r.session.backend.glContext.version),[s,a]=r.calculateTextureWidthAndHeight(o,4),[u,l]=[s/4,a],d=`
      vec4 get_MeanAndVariance(int[2] mv) {
        int offset = indicesToOffset_MeanAndVariance(mv);
        vec2 coords = offsetToCoords(offset, ${u}, ${l});
        return ${i.texture2D}(MeanAndVariance, coords);
      }

      float process(int[4] indices) {
        int mv[2];
        mv[0] = indices[0];
        mv[1] = indices[1];
        vec4 mean_and_variance = get_MeanAndVariance(mv);
        float mean = mean_and_variance.r;
        float variance = mean_and_variance.g;

        int sb[1];
        sb[0] = indices[1];
        float scale = _Scale(sb);
        float b = _B(sb);

        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;
      }`;return{...e,output:{dims:n.dims,type:n.type,textureType:0},variables:[{name:"epsilon",type:"float",data:t}],shaderSource:d}},lx=(r,e,n,t)=>{let o={...sx,cacheHint:`${n}`};return{...o,get:()=>ux(r,o,e,n,t)}},dx=r=>{if(!r||r.length!==3)throw new Error("InstanceNormalization requires 3 inputs.");let e=r[0],n=r[1],t=r[2];if(e.dims.length<3||n.dims.length!==1||t.dims.length!==1)throw new Error("Invalid input shape.");if(n.dims[0]!==e.dims[1]||t.dims[0]!==e.dims[1])throw new Error("Input shapes are mismatched.");if(e.type!=="float32"&&e.type!=="float64"||n.type!=="float32"&&n.type!=="float64"||t.type!=="float32"&&t.type!=="float64")throw new Error("Invalid input type.");if(r[0].dims.length!==4)throw new Error("Only support 4-D input shape.")}});function cx(r,e){let n=r[0].dims[1],t=r[0].dims.length,o=-Math.floor((e.size-1)/2),i=Math.ceil((e.size-1)/2),s=`float(${e.alpha}) / float(${e.size})`,a=`float(${e.bias})`,u=`float(${e.beta})`,l=`
    float process(int indices[${t}]) {
        int c = indices[1];
        float x = _X(indices);
        float square_sum = 0.0;

        for (int i = ${o}; i <= ${i}; i++) {
          int idx = c + i;
          if (c >= 0 && c < ${n}) {
            indices[1] = idx;
            float j = _X(indices);
            square_sum += j * j;
          }
        }
        return x / pow(${a} + ${s} * square_sum, ${u});
    }`;return{...Cp,cacheHint:e.cacheKey,output:{dims:r[0].dims,type:r[0].type,textureType:0},shaderSource:l}}function fx(r,e){return{...Cp,cacheHint:e.cacheKey,get:()=>cx(r,e)}}var Op,Ep,Cp,px,Pp=R(()=>{"use strict";$t();We();Op=(r,e,n)=>(px(e),[r.run(fx(e,n),e)]),Ep=r=>{let e=r.attributes.getFloat("alpha",1e-4),n=r.attributes.getFloat("beta",.75),t=r.attributes.getFloat("bias",1),o=r.attributes.getInt("size");return Ce({alpha:e,beta:n,bias:t,size:o})},Cp={name:"LRN",inputNames:["X"],inputTypes:[0]};px=r=>{if(!r||r.length!==1)throw new Error("LRN requires 1 input.");if(r[0].dims.length!==4)throw new Error('currently only support LRN for input with "NCHW" format');if(r[0].type!=="float32")throw new Error("input should be float type")}});var hx,au,kp,Dp,Bp,mx,gx,bx,yx,vx,wx,xx,_x,Rp=R(()=>{"use strict";$t();Xe();lt();We();hx={name:"Pad",inputNames:["A"],inputTypes:[0]},au=(r,e,n)=>(bx(e),[r.run({...hx,cacheHint:n.cacheKey,get:()=>gx(r,e[0],n)},e)]),kp=r=>{let e=r.attributes.getString("mode","constant"),n=r.attributes.getFloat("value",0),t=r.attributes.getInts("pads");return Ce({mode:e,value:n,pads:t})},Dp=(r,e,n)=>{yx(e);let t=mx(r,e,n);return au(r,[e[0]],t)},Bp=r=>r.attributes.getString("mode","constant"),mx=(r,e,n)=>{if(!r.session.isInitializer(e[1].dataId)||e.length>=3&&!r.session.isInitializer(e[2].dataId))throw new Error("dynamic pad attributes are not allowed");let t=Array.from(e[1].integerData),o=e.length>=3?e[2].floatData[0]:0;return Ce({mode:n,pads:t,value:o})},gx=(r,e,n)=>{let t=se.padShape(e.dims.slice(),n.pads),o=t.length,s=`
      ${vx(r,e,n)}
      float process(int[${o}] indices) {
          return padA(indices);
      }`;return{name:"Pad",inputNames:["A"],inputTypes:[0],output:{dims:t,type:e.type,textureType:0},shaderSource:s}},bx=r=>{if(!r||r.length!==1)throw new Error("Pad requires 1 input");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.")},yx=r=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Pad requires 2 or 3 inputs");if(r[1].type!=="int32")throw new Error("Invalid input type.");if(r.length>=3&&r[2].type==="string")throw new Error("Invalid input type.")},vx=(r,e,n)=>{let t=ge(r.session.backend.glContext.version),[o,i]=r.calculateTextureWidthAndHeight(e.dims,0),s=se.computeStrides(e.dims);switch(n.mode){case"constant":return wx(t,e.dims,s,o,i,n.pads,n.value);case"reflect":return xx(t,e.dims,s,o,i,n.pads);case"edge":return _x(t,e.dims,s,o,i,n.pads);default:throw new Error("Invalid mode")}},wx=(r,e,n,t,o,i,s)=>{let a=e.length,u="";for(let l=a-1;l>=0;--l)u+=`
        k = m[${l}] - ${i[l]};
        if (k < 0)  return constant;
        if (k >= ${e[l]}) return constant;
        offset += k * ${n[l]};
        `;return`
      float padA(int m[${a}]) {
        const float constant = float(${s});
        int offset = 0;
        int k = 0;
        ${u}
        vec2 coords = offsetToCoords(offset, ${t}, ${o});
        float value = getColorAsFloat(${r.texture2D}(A, coords));
        return value;
      }
      `},xx=(r,e,n,t,o,i)=>{let s=e.length,a="";for(let u=s-1;u>=0;--u)a+=`
        k = m[${u}] - ${i[u]};
        if (k < 0) { k = -k; }
        {
          const int _2n_1 = ${2*(e[u]-1)};
          k = int( mod( float(k), float(_2n_1) ) ) ;
          if(k >= ${e[u]}) { k = _2n_1 - k; }
        }
        offset += k * ${n[u]};
        `;return`
      float padA(int m[${s}]) {
        int offset = 0;
        int k = 0;
        ${a}
        vec2 coords = offsetToCoords(offset, ${t}, ${o});
        float value = getColorAsFloat(${r.texture2D}(A, coords));
        return value;
      }
      `},_x=(r,e,n,t,o,i)=>{let s=e.length,a="";for(let u=s-1;u>=0;--u)a+=`
        k = m[${u}] - ${i[u]};
        if (k < 0)  k = 0;
        if (k >= ${e[u]}) k = ${e[u]-1};
        offset += k * ${n[u]};
      `;return`
      float padA(int m[${s}]) {
        int offset = 0;
        int k = 0;
        ${a}
        vec2 coords = offsetToCoords(offset, ${t}, ${o});
        float value = getColorAsFloat(${r.texture2D}(A, coords));
        return value;
      }
      `}});var Np,Mp,Lp,Fp,Up,Vp,Gp,Wp,Hp,Tx,zp,qp,ua,jp,sa,$x,Kp=R(()=>{"use strict";$t();Xe();We();Np=(r,e,n)=>{ua(e);let t={name:"AveragePool",inputNames:["X"],inputTypes:[0],cacheHint:n.cacheKey};return[r.run({...t,get:()=>Lp(e,t,!1,n)},e)]},Mp=r=>{let e=r.attributes.getString("auto_pad","NOTSET"),n=r.attributes.getInt("ceil_mode",0),t=r.attributes.getInt("count_include_pad",0)!==0,o=r.attributes.getInts("kernel_shape"),i=r.attributes.getInts("strides",[]),s=r.attributes.getInts("pads",[]);if(n!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");return Ce({autoPad:e,ceilMode:n,countIncludePad:t,kernelShape:o,strides:i,pads:s})},Lp=(r,e,n,t)=>{let[o,i]=Hp(r,t,n),s=se.size(o.kernelShape),a="value += _X(x);",u="";o.countIncludePad?u+=`value /= float(${s});`:u+=`value /= float(${s} - pad);`;let d=`
        ${jp(r[0].dims,o,a,u,"0.0")}
      `;return{...e,output:{dims:i,type:r[0].type,textureType:0},shaderSource:d}},Fp=(r,e,n)=>{ua(e);let t={name:"GlobalAveragePool",inputNames:["X"],inputTypes:[0],cacheHint:`${n.countIncludePad}`};return[r.run({...t,get:()=>Lp(e,t,!0,n)},e)]},Up=r=>{let e=r.attributes.getInt("count_include_pad",0)!==0;return Ce({autoPad:"",ceilMode:0,countIncludePad:e,kernelShape:[],strides:[],pads:[]})},Vp=(r,e,n)=>{ua(e);let t={name:"MaxPool",inputNames:["X"],inputTypes:[0],cacheHint:n.cacheKey};return[r.run({...t,get:()=>Wp(e,t,!1,n)},e)]},Gp=r=>{let e=r.attributes.getString("auto_pad","NOTSET"),n=r.attributes.getInt("ceil_mode",0),t=r.attributes.getInts("kernel_shape"),o=r.attributes.getInts("strides",[]),i=r.attributes.getInts("pads",[]),s=r.attributes.getInt("storage_order",0),a=r.attributes.getInts("dilations",[]);if(s!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(n!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");return Ce({autoPad:e,ceilMode:n,countIncludePad:!1,kernelShape:t,strides:o,pads:i,storageOrder:s,dilations:a})},Wp=(r,e,n,t)=>{let[o,i]=Hp(r,t,n),s=`
      value = max(_X(x), value);
    `,a="",l=`
      ${jp(r[0].dims,o,s,a,"-1e5")}
    `;return{...e,output:{dims:i,type:r[0].type,textureType:0},shaderSource:l}},Hp=(r,e,n)=>{let t=r[0].dims.slice(),o=Object.hasOwnProperty.call(e,"dilations"),i=e.kernelShape.slice(),s=e.strides.slice(),a=o?e.dilations.slice():[],u=e.pads.slice();In.adjustPoolAttributes(n,t,i,s,a,u);let l=In.computePoolOutputShape(n,t,s,a,i,u,e.autoPad),d=Object.assign({},e);return o?Object.assign(d,{kernelShape:i,strides:s,pads:u,dilations:a,cacheKey:e.cacheKey}):Object.assign(d,{kernelShape:i,strides:s,pads:u,cacheKey:e.cacheKey}),[d,l]},Tx={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:""},zp={name:"GlobalMaxPool",inputNames:["X"],inputTypes:[0]},qp=(r,e)=>(ua(e),[r.run({...zp,get:()=>Wp(e,zp,!0,Tx)},e)]),ua=r=>{if(!r||r.length!==1)throw new Error("Pool ops requires 1 input.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.")},jp=(r,e,n,t,o)=>{let i=r.length;if(e.kernelShape.length<=2){let s=e.kernelShape[e.kernelShape.length-1],a=e.strides[e.strides.length-1],u=e.pads[e.pads.length/2-1],l=e.pads[e.pads.length-1],d=r[i-1],p="",m="",y="";if(u+l!==0?p=`
          for (int i = 0; i < ${s}; i++) {
            x[${i} - 1] = indices[${i} - 1] * ${a} - ${u} + i;
            if (x[${i} - 1] < 0 || x[${i} - 1] >= ${d}) {
              pad++;
              continue;
            }
            ${n}
          }`:p=`
          for (int i = 0; i < ${s}; i++) {
            x[${i} - 1] = indices[${i} - 1] * ${a} - ${u} + i;
            ${n}
          }`,e.kernelShape.length===2){let w=e.kernelShape[e.kernelShape.length-2],A=e.strides[e.strides.length-2],$=e.pads[e.pads.length/2-2],_=e.pads[e.pads.length-2],O=r[i-2];$+_!==0?m=`
            for (int j = 0; j < ${w}; j++) {
              x[${i} - 2] = indices[${i} - 2] * ${A} - ${$} + j;
              if (x[${i} - 2] < 0 || x[${i} - 2] >= ${O}) {
                pad+= ${s};
                continue;
              }
          `:m=`
            for (int j = 0; j < ${w}; j++) {
              x[${i} - 2] = indices[${i} - 2] * ${A} - ${$} + j;
            `,y=`
          }
        `}return`
        float process(int indices[${i}]) {
          int x[${i}];
          copyVec(indices, x);

          float value = ${o};
          int pad = 0;
          ${m}
          ${p}
          ${y}
          ${t}
          return value;
        }
      `}else{let s=se.size(e.kernelShape),a=se.computeStrides(e.kernelShape),u=a.length,l=e.pads.length,d=$x(u),p=sa(r,"inputDims"),m=sa(e.pads,"pads"),y=sa(a,"kernelStrides"),b=sa(e.strides,"strides"),w=e.pads.reduce((_,O)=>_+O),A="";return w?A=`
            if (x[j] >= inputDims[j] || x[j] < 0) {
              pad++;
              isPad = true;
              break;
            }
          }
          if (!isPad) {
            ${n}
          }`:A=`
          }
          ${n}
        `,`
        ${d}
        float process(int indices[${i}]) {
          int x[${i}];
          copyVec(indices, x);
          int offset[${u}];
          int pads[${l}];
          int inputDims[${i}];
          int kernelStrides[${u}];
          int strides[${u}];
          ${m}
          ${p}
          ${b}
          ${y}

          float value = ${o};
          int pad = 0;
          bool isPad = false;
          for (int i = 0; i < ${s}; i++) {
            offsetToIndices(i, kernelStrides, offset);
            isPad = false;
            for (int j = ${i} - ${u}; j < ${i}; j++) {
              x[j] = indices[j] * strides[j - ${i} + ${u}]
                + offset[j - ${i} + ${u}] - pads[j - 2];
              ${A}
          }
          ${t}

          return value;
        }
      `}},sa=(r,e)=>{let n="";for(let t=0;t<r.length;t++)n+=`
      ${e}[${t}] = ${r[t]};
    `;return n},$x=r=>`
  void offsetToIndices(int offset, int[${r}] strides, out int[${r}] indices) {
    if (${r} == 0) {
      return;
    }
    for (int i = 0; i < ${r} - 1; ++i) {
      indices[i] = offset / strides[i];
      offset -= indices[i] * strides[i];
    }
    indices[${r} - 1] = offset;
  }`});var Dn,un,Sx,Ix,Yp,Xp,Zp,Jp,Qp,eh,th,rh=R(()=>{"use strict";$t();Ho();Xe();We();Dn=(r,e,n,t,o)=>{Ix(e);let i={name:t,inputNames:["A"],inputTypes:[0]};return[r.run({...i,cacheHint:n.cacheKey,get:()=>Sx(r,e,n,t,o,i)},e)]},un=r=>{let e=r.attributes.getInts("axes",[]),n=r.attributes.getInt("keepdims",1)===1;return Ce({axes:e,keepDims:n})},Sx=(r,e,n,t,o,i)=>{let s=[],a=e[0].dims.length||1,u=[],l=se.normalizeAxes(n.axes,e[0].dims.length),d=o(e,l),p=d[1];for(let b=0;b<e[0].dims.length;b++)l.indexOf(b)>=0||l.length===0?(n.keepDims&&s.push(1),p=`
          for(int j${b} = 0; j${b} < ${e[0].dims[b]}; j${b}++) {
            inputIdx[${b}] = j${b};
            ${p}
          }`):(u.push(`inputIdx[${b}] = outputIdx[${s.length}];`),s.push(e[0].dims[b]));let y=`
      float process(int outputIdx[${s.length||1}]) {
        float value;                 // final result
        int inputIdx[${a}];      // addressing input data
        ${u.join(`
`)}
        ${d[0]}       // init ops for reduce max/min
        ${p}
        ${d[2]}       // final computation for reduce mean
        return value;
      }`;return{...i,output:{dims:s,type:e[0].type,textureType:0},shaderSource:y}},Ix=r=>{if(!r||r.length!==1)throw new Error("Reduce op requires 1 input.");if(sn.indexOf(r[0].type)===-1)throw new Error("Invalid input type.")},Yp=(r,e,n)=>Dn(r,e,n,"ReduceSum",()=>["value = 0.0;","value += _A(inputIdx);",""]),Xp=(r,e,n)=>Dn(r,e,n,"ReduceMean",(o,i)=>{let s=1;for(let a=0;a<o[0].dims.length;a++)(i.indexOf(a)>=0||i.length===0)&&(s*=o[0].dims[a]);return["value = 0.0;","value += _A(inputIdx);",`value /= ${s}.;`]}),Zp=(r,e,n)=>Dn(r,e,n,"ReduceMax",(o,i)=>{let s=[];for(let a=0;a<o[0].dims.length;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`inputIdx[${a}] = 0;`);return[`${s.join(`
`)}
value = _A(inputIdx);`,"value = max(value, _A(inputIdx));",""]}),Jp=(r,e,n)=>Dn(r,e,n,"ReduceMin",(o,i)=>{let s=[];for(let a=0;a<o[0].dims.length;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`inputIdx[${a}] = 0;`);return[`${s.join(`
`)}
value = _A(inputIdx);`,"value = min(value, _A(inputIdx));",""]}),Qp=(r,e,n)=>Dn(r,e,n,"ReduceProd",()=>["value = 1.0;","value *= _A(inputIdx);",""]),eh=(r,e,n)=>Dn(r,e,n,"ReduceLogSum",()=>["value = 0.0;","value += _A(inputIdx);","value = log(value);"]),th=(r,e,n)=>Dn(r,e,n,"ReduceLogSumSquare",()=>["float t; value = 0.0;","t = _A(inputIdx); value += t * t;",""])});var nh,oh=R(()=>{"use strict";Xe();nh=(r,e)=>{let n=se.calculateReshapedDims(e[0].dims,e[1].integerData);return r.session.pack?[r.reshapePacked(e[0],n)]:[r.reshapeUnpacked(e[0],n)]}});var ih,su,ah,sh,qo,Ax,uu,la,lu=R(()=>{"use strict";$t();lt();We();ih={name:"Upsample",inputNames:["X"],inputTypes:[0]},su=(r,e,n)=>(uu(e,n),[r.run({...ih,cacheHint:n.cacheKey,get:()=>Ax(r,e,n)},e)]),ah=r=>qo(r,7),sh=r=>qo(r,9),qo=(r,e)=>{let n=e>=10,t=r.attributes.getString("mode","nearest");if(t!=="nearest"&&t!=="linear"&&(e<11||t!=="cubic"))throw new Error(`unrecognized mode: ${t}`);let o=[];e<9&&(o=r.attributes.getFloats("scales"),la(o,t,n));let i=r.attributes.getFloat("extrapolation_value",0),s=e>10?r.attributes.getString("coordinate_transformation_mode","half_pixel"):"asymmetric";if(["asymmetric","pytorch_half_pixel","tf_half_pixel_for_nn","align_corners","tf_crop_and_resize","half_pixel"].indexOf(s)===-1)throw new Error(`coordinate_transform_mode '${s}' is not supported`);let a=s==="tf_crop_and_resize",u=a,l=t==="nearest"&&e>=11?r.attributes.getString("nearest_mode","round_prefer_floor"):"";if(["round_prefer_floor","round_prefer_ceil","floor","ceil",""].indexOf(l)===-1)throw new Error(`nearest_mode '${l}' is not supported`);let d=r.attributes.getFloat("cubic_coeff_a",-.75),p=r.attributes.getInt("exclude_outside",0)!==0;if(p&&t!=="cubic")throw new Error("exclude_outside can be set to 1 only when mode is CUBIC.");let m=e<11?!0:t==="nearest"&&s==="asymmetric"&&l==="floor",y=0,b=0,w=0;return e>10?r.inputs.length>2?(y=1,b=2,w=3):(b=1,w=2):e===9&&(b=1),Ce({opset:e,isResize:n,mode:t,scales:o,extrapolationValue:i,coordinateTransformMode:s,useExtrapolation:u,needRoiInput:a,nearestMode:l,cubicCoefficientA:d,excludeOutside:p,useNearest2xOptimization:m,roiInputIdx:y,scalesInputIdx:b,sizesInputIdx:w})},Ax=(r,e,n)=>{let t=ge(r.session.backend.glContext.version),[o,i]=r.calculateTextureWidthAndHeight(e[0].dims,0),s=e[0].dims.map((w,A)=>Math.floor(w*n.scales[A])),[a,u]=r.calculateTextureWidthAndHeight(s,0),l=s.length,d=new Array(l),p=new Array(l),m=`
      int output_pitches[${l}];
      int input_pitches[${l}];
      `;for(let w=l-1;w>=0;w--)d[w]=w===l-1?1:d[w+1]*s[w+1],p[w]=w===l-1?1:p[w+1]*e[0].dims[w+1],m+=`
        output_pitches[${w}] = ${d[w]};
        input_pitches[${w}] = ${p[w]};
        `;let y=`
      float getInputFloat(int index) {
        vec2 coords = offsetToCoords(index, ${o}, ${i});
        float value = getColorAsFloat(${t.texture2D}(X, coords));
        return value;
      }
      `,b=n.mode==="nearest"?`
    ${y}
    float process(int indices[${l}]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${a}, ${u});

      ${m}

      int d, m;
      for (int dim = 0; dim < ${l}; ++dim) {
        d = output_index / output_pitches[dim];
        m = output_index - d * output_pitches[dim];
        output_index = m;

        if (scales[dim] != 1 && d > 0) {
          int d2 = d / scales[dim];
          m = d - d2 * scales[dim];
          d = d2;
        }
        input_index += input_pitches[dim] * d;
      }

      return getInputFloat(input_index);
    }`:l===4?`
    ${y}
    float process(int indices[4]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${a}, ${u});

      ${m}

      int m;
      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;
      index_of_dim0 = output_index / output_pitches[0];
      m = output_index - index_of_dim0 * output_pitches[0];
      index_of_dim1 = m / output_pitches[1];
      m = m - index_of_dim1 * output_pitches[1];
      index_of_dim2 = m / output_pitches[2];
      m = m - index_of_dim2 * output_pitches[2];
      index_of_dim3 = m;

      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;
      index_of_input_dim2 = index_of_dim2 / scales[2];
      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];
      index_of_input_dim3 = index_of_dim3 / scales[3];
      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];

      input_index = index_of_dim0 * input_pitches[0] +
            index_of_dim1 * input_pitches[1] +
            index_of_input_dim2 * input_pitches[2] +
            index_of_input_dim3;

      float x00 = getInputFloat(input_index);
      float x10, x01, x11;

      bool end_of_dim2 = false;
      if (index_of_input_dim2 == (${e[0].dims[2]} - 1)) {
        // It's the end in dimension 2
        x01 = x00;
        end_of_dim2 = true;
      } else {
        x01 = getInputFloat(input_index + input_pitches[2]);
      }

      if (index_of_input_dim3 == (input_pitches[2] - 1)) {
        // It's the end in dimension 3
        x10 = x00;
        x11 = x01;
      }
      else {
        x10 = getInputFloat(input_index + 1);
        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);
      }

      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);
      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);
      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);
    }`:`
    ${y}
    float process(int indices[2]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${a}, ${u});

      ${m}

      int m;
      int index_of_dim0, index_of_dim1;
      index_of_dim0 = output_index / output_pitches[0];
      m = output_index - index_of_dim0 * output_pitches[0];
      index_of_dim1 = m;

      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;
      index_of_input_dim0 = index_of_dim0 / scales[0];
      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];
      index_of_input_dim1 = index_of_dim1 / scales[1];
      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];

      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;

      float x00 = getInputFloat(input_index);
      float x10, x01, x11;

      bool end_of_dim0 = false;
      if (index_of_input_dim0 == (${e[0].dims[0]} - 1)) {
        // It's the end in dimension 0
        x01 = x00;
        end_of_dim0 = true;
      } else {
        x01 = getInputFloat(input_index + input_pitches[0]);
      }

      if (index_of_input_dim1 == (input_pitches[0] - 1)) {
        // It's the end in dimension 1
        x10 = x00;
        x11 = x01;
      }
      else {
        x10 = getInputFloat(input_index + 1);
        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);
      }

      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);
      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);
      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);
    }`;return{...ih,output:{dims:s,type:e[0].type,textureType:0},shaderSource:b,variables:[{name:"scales",type:"int",arrayLength:n.scales.length,data:n.scales.map(w=>Math.ceil(w))}]}},uu=(r,e)=>{if(!r||e.opset<9&&r.length!==1||e.opset>=9&&e.opset<11&&r.length!==2||e.opset>=11&&r.length<2)throw new Error("invalid inputs.");if(e.scales.length>0&&r[0].dims.length!==e.scales.length)throw new Error("Invalid input shape.");if(r[0].type==="string")throw new Error("Invalid input tensor types.")},la=(r,e,n)=>{if(n){for(let t of r)if(t<=0)throw new Error("Scale value should be greater than 0.")}else for(let t of r)if(t<1)throw new Error("Scale value should be greater than or equal to 1.");if((e==="linear"||e==="cubic")&&r.length!==2&&(r.length!==4||r[0]!==1||r[1]!==1))throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic')         or 4-D inputs with the corresponding outermost 2 scale values being 1         in the ${n?"Resize":"Upsample"} opeartor.`)}});var du,cu,uh,lh,Ox,Ex,Cx,Px,dh=R(()=>{"use strict";lt();We();Er();Cn();lu();du={name:"Resize",inputNames:["A"],inputTypes:[2]},cu=(r,e,n)=>(uu(e,n),[r.run({...du,cacheHint:n.cacheKey,get:()=>Ox(r,e,n)},e)]),uh=r=>qo(r,10),lh=r=>qo(r,11),Ox=(r,e,n)=>{let t=ge(r.session.backend.glContext.version),[o,i]=Ex(e,n);if(o.every(O=>O===1)&&n.coordinateTransformMode!=="tf_crop_and_resize")return{...du,output:{dims:i,type:e[0].type,textureType:2},hasMain:!0,shaderSource:`void main() {
                    vec4 v = ${t.texture2D}(X, TexCoords);
                    ${t.output} = v;
                }`};let a=i.length;if(a<2)throw new Error(`output dimension should be at least 2, but got ${a}`);let u=i[a-2],l=i[a-1],d=e[0].dims;if(a!==d.length)throw new Error(`output dimension should match input ${d.length}, but got ${a}`);let p=d[a-2],m=d[a-1],y=o[a-2],b=o[a-1],w="";if(n.mode!=="linear")throw new Error(`resize (packed) does not support mode: '${n.mode}'`);switch(n.coordinateTransformMode){case"asymmetric":w=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        return vec4(coords) / scaleWHWH;
                    }
                `;break;case"half_pixel":w=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;
                    }
                `;break;case"pytorch_half_pixel":w=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        vec4 fcoords = vec4(coords);
                        return vec4(
                            ${l}.0 > 1.0 ? (fcoords.x + 0.5) / scaleWHWH.x - 0.5 : 0.0,
                            ${u}.0 > 1.0 ? (fcoords.y + 0.5) / scaleWHWH.y - 0.5 : 0.0,
                            ${l}.0 > 1.0 ? (fcoords.z + 0.5) / scaleWHWH.z - 0.5 : 0.0,
                            ${u}.0 > 1.0 ? (fcoords.w + 0.5) / scaleWHWH.w - 0.5 : 0.0
                          );
                    }
                `;break;case"align_corners":w=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        vec4 resized = vec4(${l}.0 - 1.0, ${u}.0 - 1.0, ${l}.0 - 1.0,
                            ${u}.0 - 1.0);
                        vec4 original = vec4(${m}.0 - 1.0, ${p}.0 - 1.0, ${m}.0 - 1.0,
                            ${p}.0 - 1.0);
                        vec4 new_scale = original / resized;
                        return vec4(coords) * new_scale;
                    }
                `;break;default:throw new Error(`resize (packed) does not support coordinateTransformMode:                                 '${n.coordinateTransformMode}'`)}let A=Gt(a),$=Cr(),_=`
            const vec2 inputWH = vec2(${p}.0, ${m}.0);
            const vec4 scaleWHWH = vec4(float(${y}), float(${b}), float(${y}), float(${b}));
            ${$}
            ${w}
            float getAValue(int x10, int r, int c, int d) {
                return getChannel(getA(x10, r, c, d), vec2(c, d));
            }
            void main() {
                ${A} rc = getOutputCoords();

                int batch = rc[0];
                int depth = rc[1];

                // retrieve the 4 coordinates that is used in the 4 packed output values.
                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);

                // calculate the source index in fraction
                vec4 sourceFrac = getSourceFracIndex(coords);

                // get the lower and upper bound of the 4 values that will be packed into one texel.
                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));
                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));
                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));
                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));

                bool hasNextRow = rc.w < ${u-1};
                bool hasNextCol = rc.z < ${l-1};

                // pack x00, x01, x10, x11's top-left corner into one vec4 structure
                vec4 topLeft = vec4(
                    getAValue(batch, depth, x00.x, x00.y),
                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);

                // pack x00, x01, x10, x11's top-right corner into one vec4 structure
                vec4 topRight = vec4(
                    getAValue(batch, depth, x00.x, x00.w),
                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);

                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure
                vec4 bottomLeft = vec4(
                    getAValue(batch, depth, x00.z, x00.y),
                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);

                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure
                vec4 bottomRight = vec4(
                    getAValue(batch, depth, x00.z, x00.w),
                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);

                // calculate the interpolation fraction on u and v direction
                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);
                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));

                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);
                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);
                vec4 newValue = mix(top, bottom, clampFrac.xxzz);

                ${t.output} = vec4(newValue);
            }
        `;return{...du,output:{dims:i,type:e[0].type,textureType:2},hasMain:!0,shaderSource:_}},Ex=(r,e)=>{let t=r[0].dims,o=e.scales,i;if(o.length===0){let a=r[e.scalesInputIdx];if(a&&a.size!==0){if(r[e.sizesInputIdx])throw new Error("Only one of scales or sizes must be provided as input.");o=Cx(a,e.mode,e.isResize)}else{let u=r[e.sizesInputIdx];if(!u||u.size===0)throw new Error("Either scales or sizes MUST be provided as input.");i=Array.from(u.integerData),o=Px(i,t,e.mode,e.isResize)}}else if(r[e.sizesInputIdx])throw new Error("Only one of scales or sizes must be provided as input.");let s=i||t.map((a,u)=>Math.floor(a*o[u]));return[o,s]},Cx=(r,e,n)=>{let t=Array.from(r.floatData);return la(t,e,n),t},Px=(r,e,n,t)=>{let o=e.length,i=new Array(o);for(let s=0,a=o;s<a;s++)if(e[s]===0){if(r[s]!==0)throw new Error("Input dim is zero but required output dim is non-zero.");i[s]=1}else i[s]=r[s]/e[s];return la(i,n,t),i}});var ch,kx,fh=R(()=>{"use strict";En();ch=(r,e)=>(kx(e),[new bt([e[0].dims.length],"int32",void 0,void 0,new Int32Array(e[0].dims))]),kx=r=>{if(!r||r.length!==1)throw new Error("Shape requires 1 input.")}});var fu,ph,hh,mh,Dx,gh,Bx,Rx,bh=R(()=>{"use strict";$t();Ho();Xe();We();fu={name:"Slice",inputNames:["A"],inputTypes:[0]},ph=(r,e,n)=>(Dx(e),[r.run({...fu,cacheHint:n.cacheKey,get:()=>mh(r,e[0],n)},e)]),hh=r=>{let e=r.attributes.getInts("starts"),n=r.attributes.getInts("ends"),t=r.attributes.getInts("axes",[]);return Ce({starts:e,ends:n,axes:t})},mh=(r,e,n)=>{let t=n.axes.length===0?e.dims.slice(0).map((p,m)=>m):n.axes,o=se.normalizeAxes(t,e.dims.length),i=n.starts.map((p,m)=>p>e.dims[o[m]]-1?e.dims[o[m]]:se.normalizeAxis(p,e.dims[o[m]])),s=n.ends.map((p,m)=>p>e.dims[o[m]]-1?e.dims[o[m]]:se.normalizeAxis(p,e.dims[o[m]])),a=e.dims.slice(),u=[];for(let p=0;p<o.length;p++)a[o[p]]=s[p]-i[p],i[p]>0&&u.push(`outputIdx[${o[p]}] += ${i[p]};`);let d=`
      float process(int outputIdx[${a.length}]) {
        ${u.join(`
      `)}
        return _A(outputIdx);
      }`;return{...fu,output:{dims:a,type:e.type,textureType:0},shaderSource:d}},Dx=r=>{if(!r||r.length!==1)throw new Error("Slice requires 1 input.");if(sn.indexOf(r[0].type)===-1)throw new Error("Invalid input type.")},gh=(r,e)=>{Rx(e);let n=Bx(r,e);return[r.run({...fu,cacheHint:n.cacheKey,get:()=>mh(r,e[0],n)},[e[0]])]},Bx=(r,e)=>{if(!r.session.isInitializer(e[1].dataId)||!r.session.isInitializer(e[2].dataId)||e.length>=4&&!r.session.isInitializer(e[3].dataId)||e.length>=5&&!r.session.isInitializer(e[4].dataId))throw new Error("dynamic slice attributes are not allowed");if(e.length>=5&&e[4].integerData.some(s=>s!==1))throw new Error("currently non-1 steps is not supported for Slice");let n=Array.from(e[1].integerData),t=Array.from(e[2].integerData),o=e.length>=4?Array.from(e[3].integerData):[],i=`${o};${n};${t}`;return{starts:n,ends:t,axes:o,cacheKey:i}},Rx=r=>{if(!r||r.length<3||r.length>5)throw new Error("Invalid input number.");if(r[1].type!=="int32"||r[1].dims.length!==1)throw new Error("Invalid input type.");if(r[2].type!=="int32"||r[2].dims.length!==1)throw new Error("Invalid input type.");if(r.length>=4&&(r[3].type!=="int32"||r[3].dims.length!==1))throw new Error("Invalid input type.");if(r.length>=5&&(r[4].type!=="int32"||r[4].dims.length!==1))throw new Error("Invalid input type.")}});var yh,vh,wh,xh,_h,Th,$h,Sh,zx,Nx,Mx,Ih,Ah=R(()=>{"use strict";$t();Xe();lt();We();aa();yh={name:"SoftmaxComputeMax",inputNames:["A"],inputTypes:[0]},vh={name:"SoftmaxComputeScale",inputNames:["A","Max"],inputTypes:[0,0]},wh={name:"SoftMax",inputNames:["A","Max","Norm"],inputTypes:[0,0,0]},xh=(r,e,n)=>{Ih(e);let t=e[0].dims.slice(),o=se.normalizeAxis(n.axis,t.length),i=se.sizeToDimension(t,o),s=se.sizeFromDimension(t,o);return Sh(r,e,n,i,s)},_h=r=>Ce({axis:r.attributes.getInt("axis",1)}),Th=r=>Ce({axis:r.attributes.getInt("axis",-1)}),$h=(r,e,n)=>{Ih(e);let t=e[0].dims.slice(),o=se.normalizeAxis(n.axis,t.length),i=t.length,s=o!==i-1,a=[],u=[],l=[],d;s&&(u=Array.from({length:i}).map((b,w)=>w),u[o]=i-1,u[i-1]=o,u.map(b=>a.push(t[b])),d=Ce({perm:u}),l=kn(r,e,d));let p=s?se.sizeToDimension(a,i-1):se.sizeToDimension(t,i-1),m=s?se.sizeFromDimension(a,i-1):se.sizeFromDimension(t,i-1),y=Sh(r,s?l:e,n,p,m);return s?kn(r,y,d):y},Sh=(r,e,n,t,o)=>{let i=zx(r,e[0],t,o,[t]),s=r.run({...yh,cacheHint:n.cacheKey,get:()=>i},e),a=Nx(r,e[0],t,o,i.output.dims,[t]),u=r.run({...vh,cacheHint:n.cacheKey,get:()=>a},[e[0],s]),l=Mx(r,e[0],t,o,i.output.dims,a.output.dims);return[r.run({...wh,cacheHint:n.cacheKey,get:()=>l},[e[0],s,u])]},zx=(r,e,n,t,o)=>{let[i,s]=r.calculateTextureWidthAndHeight(e.dims,0),a=o.length;if(n<1||t<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(o.length!==1)throw new Error("Dimensionality of the output should be 1");if(o[0]!==n)throw new Error("Shape of the output should be equal to logical row count");let u=ge(r.session.backend.glContext.version),l=`
      float process(int[${a}] indices) {
        int logical_row_start_offset = indices[0] * ${t};

        float max = getColorAsFloat(${u.texture2D}(A, offsetToCoords(logical_row_start_offset, ${i},
        ${s} )));
        for(int i=1; i<${t}; ++i)
        {
          float current = getColorAsFloat(${u.texture2D}(A, offsetToCoords(logical_row_start_offset + i,
            ${i}, ${s})));
          if(current > max)
          max = current;
        }

        return max;
      }`;return{...yh,output:{dims:o,type:e.type,textureType:0},shaderSource:l}},Nx=(r,e,n,t,o,i)=>{let[s,a]=r.calculateTextureWidthAndHeight(e.dims,0),u=i.length;if(n<1||t<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(i.length!==1)throw new Error("Dimensionality of the output should be 1");if(i[0]!==n)throw new Error("Shape of the output should be equal to logical row count");if(o.length!==1)throw new Error("Dimensionality of the intermediate results should be 1");if(o[0]!==n)throw new Error("Shape of the intermediate results should be equal to logical row count");let l=ge(r.session.backend.glContext.version),d=`
      float process(int[${u}] indices) {
        int logical_row_start_offset = indices[0] * ${t};

        float norm_factor = 0.0;
        float max = _Max(indices);
        for(int i=0; i<${t}; ++i)
        {
          norm_factor += exp(getColorAsFloat(${l.texture2D}(A, offsetToCoords(logical_row_start_offset + i,
            ${s}, ${a}))) - max);
        }

        return norm_factor;
      }`;return{...vh,output:{dims:i,type:e.type,textureType:0},shaderSource:d}},Mx=(r,e,n,t,o,i)=>{let[s,a]=r.calculateTextureWidthAndHeight(e.dims,0),u=e.dims.length;if(n<1||t<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(o.length!==1||i.length!==1)throw new Error("Dimensionality of the intermediate results should be 1");if(o[0]!==n||i[0]!==n)throw new Error("Shape of the intermediate results should be equal to logical row count");let l=`
      float process(int[${u}] indices) {

      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)
      int offset = coordsToOffset(TexCoords, ${s}, ${a});

      //determine the logical row for this index
      int logical_row_index[1];
      logical_row_index[0] = offset / ${t};

      float norm_factor = _Norm(logical_row_index);

      // avoid possible division by 0
      // if norm_facor is 0, all elements are zero
      // if so, return 0
      if(norm_factor == 0.0)
        return 0.0;

      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;
    }`;return{...wh,output:{dims:e.dims,type:e.type,textureType:0},shaderSource:l}},Ih=r=>{if(!r||r.length!==1)throw new Error("Softmax requires 1 input.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type")}});var Oh,Eh,Ch,Lx,Fx,Ux,Ph=R(()=>{"use strict";$t();Xe();We();Oh={name:"Split",inputNames:["A"],inputTypes:[0]},Eh=(r,e,n)=>{Ux(e);let t=se.normalizeAxis(n.axis,e[0].dims.length),o=Lx(r,e,t,n),i=[];for(let s=0;s<o;++s)i.push(r.run({...Oh,cacheHint:`${n.cacheKey};${s}`,get:()=>Fx(r,e[0],n,t,s)},e));return i},Ch=r=>{let e=r.attributes.getInt("axis",0),n=r.attributes.getInts("split",[]),t=r.outputs.length;return Ce({axis:e,split:n,numOutputs:t})},Lx=(r,e,n,t)=>{let[,o]=Lo.splitShape(e[0].dims,n,t.split,t.numOutputs);return o.length},Fx=(r,e,n,t,o)=>{let[i,s]=Lo.splitShape(e.dims,t,n.split,n.numOutputs),a=s[o],u=i[o],d=`
      float process(int indices[${u.length}]) {
        indices[${t}] += ${a};
        return _A(indices);
      }
    `;return{...Oh,cacheHint:`${n.cacheKey}:${o}`,output:{dims:u,type:e.type,textureType:0},shaderSource:d}},Ux=r=>{if(!r||r.length!==1)throw new Error("Split requires one input.");if(r[0].type!=="int8"&&r[0].type!=="uint8"&&r[0].type!=="int16"&&r[0].type!=="uint16"&&r[0].type!=="int32"&&r[0].type!=="uint32"&&r[0].type!=="float32"&&r[0].type!=="float64"&&r[0].type!=="bool")throw new Error("Invalid input type.")}});var pu,kh,Dh,Vx,Gx,Bh=R(()=>{"use strict";Xe();pu=(r,e,n)=>{Vx(e);let t=se.squeezeShape(e[0].dims,n);return[r.reshapeUnpacked(e[0],t)]},kh=(r,e)=>(Gx(e),pu(r,[e[0]],Array.from(e[1].integerData))),Dh=r=>r.attributes.getInts("axes"),Vx=r=>{if(!r||r.length!==1)throw new Error("Squeeze requires 1 input.");if(r[0].type==="string")throw new Error("invalid input tensor types.")},Gx=r=>{if(!r||r.length!==2)throw new Error("Squeeze requires 2 inputs.");if(r[1].type!=="int32")throw new Error("Invalid input type.")}});var Rh,Wx,Hx,zh=R(()=>{"use strict";lt();We();Rh=(r,e)=>{Hx(e);let n={name:"Sum",inputNames:e.map((o,i)=>`X${i}`),inputTypes:new Array(e.length).fill(0)};return[r.run({...n,get:()=>Wx(r,e,n)},e)]},Wx=(r,e,n)=>{let t=ge(r.session.backend.glContext.version),o=e[0].dims.slice(),s=`
      void main() {
        vec4 result = ${e.map((a,u)=>`${t.texture2D}(X${u},TexCoords)`).join(" + ")};
        ${t.output} = result;
      }
    `;return{...n,output:{dims:o,type:e[0].type,textureType:0},hasMain:!0,shaderSource:s}},Hx=r=>{if(!r||r.length===0)throw new Error("Sum requires inputs.");let e=r[0].dims.length;for(let n=1;n<r.length;n++){if(e!==r[n].dims.length)throw new Error("Input shapes are mismatched.");for(let t=0;t<e;t++)if(r[0].dims[t]!==r[n].dims[t])throw new Error("Input shapes are not matched.")}if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.");for(let n=1;n<r.length;n++)if(r[0].type!==r[n].type)throw new Error("Input types are not matched.")}});var Nh,qx,jx,Mh=R(()=>{"use strict";Ho();We();Nh=(r,e)=>{jx(e);let n={name:"Tile",inputNames:["A"],inputTypes:[0]};return[r.run({...n,get:()=>qx(r,e,n)},e)]},qx=(r,e,n)=>{let t=e[0].dims.slice(),o=new Array(t.length),i=[];for(let u=0;u<t.length;u++)o[u]=t[u]*e[1].numberData[u],i.push(`inputIdx[${u}] = int(mod(float(outputIdx[${u}]), ${t[u]}.));`);let s=o.length,a=`
      float process(int outputIdx[${s}]) {
        int inputIdx[${s}];
        ${i.join(`
`)}
        return _A(inputIdx);
      }
    `;return{...n,output:{dims:o,type:e[0].type,textureType:0},shaderSource:a}},jx=r=>{if(!r||r.length!==2)throw new Error("Tile requires 2 input.");if(r[1].dims.length!==1)throw new Error("The second input shape must 1 dimension.");if(r[1].dims[0]!==r[0].dims.length)throw new Error("Invalid input shape.");if(sn.indexOf(r[0].type)===-1)throw new Error("Invalid input type.");if(r[1].type!=="int32"&&r[1].type!=="int16")throw new Error("Invalid repeat type.")}});var hu,Lh,Fh,Kx,Yx,Uh=R(()=>{"use strict";Xe();hu=(r,e,n)=>{Kx(e);let t=se.unsqueezeShape(e[0].dims,n);return[r.reshapeUnpacked(e[0],t)]},Lh=(r,e)=>(Yx(e),hu(r,[e[0]],Array.from(e[1].integerData))),Fh=r=>r.attributes.getInts("axes"),Kx=r=>{if(!r||r.length!==1)throw new Error("Unsqueeze requires 1 input.");if(r[0].type==="string")throw new Error("invalid input tensor types.")},Yx=r=>{if(!r||r.length!==2)throw new Error("Unsqueeze requires 2 inputs.");if(r[1].type!=="int32")throw new Error("Invalid input type.")}});var Vh,Gh=R(()=>{"use strict";Jc();ff();mf();xf();na();op();dp();pp();gp();wp();Tp();Ap();Pp();oa();Rp();Kp();rh();oh();dh();fh();bh();Ah();Ph();Bh();zh();Mh();aa();Zs();Uh();lu();Vh=[["Abs","","6+",_f],["Acos","","7+",Tf],["Add","","7+",Qc],["And","","7+",ef],["Asin","","7+",$f],["Atan","","7+",Sf],["AveragePool","","7+",Np,Mp],["BatchNormalization","","7+",Xc,Zc],["Cast","","6+",pf,hf],["Ceil","","6+",Of],["Clip","","6-10",Ys,If],["Clip","","11+",Af],["Concat","","4+",yf,wf],["Conv","","1+",nu,ou],["ConvTranspose","","1+",rp,np],["Cos","","7+",Ef],["Div","","7+",tf],["Dropout","","7+",Xs],["DepthToSpace","","1+",up,lp],["Equal","","7+",rf],["Elu","","6+",Cf,Pf],["Exp","","6+",kf],["Flatten","","1+",cp,fp],["Floor","","6+",Df],["FusedConv","com.microsoft","1+",nu,ou],["Gather","","1+",hp,mp],["Gemm","","7-10",iu,yp],["Gemm","","11+",iu,vp],["GlobalAveragePool","","1+",Fp,Up],["GlobalMaxPool","","1+",qp],["Greater","","7+",nf],["Identity","","1+",Xs],["ImageScaler","","1+",xp,_p],["InstanceNormalization","","6+",Sp,Ip],["LeakyRelu","","6+",Bf,Rf],["Less","","7+",of],["LRN","","1+",Op,Ep],["Log","","6+",zf],["MatMul","","1+",Yf,Xf],["MaxPool","","1+",Vp,Gp],["Mul","","7+",af],["Neg","","6+",Nf],["Not","","1+",Mf],["Or","","7+",sf],["Pad","","2-10",au,kp],["Pad","","11+",Dp,Bp],["Pow","","7+",uf],["PRelu","","7+",lf],["ReduceLogSum","","1+",eh,un],["ReduceMax","","1+",Zp,un],["ReduceMean","","1+",Xp,un],["ReduceMin","","1+",Jp,un],["ReduceProd","","1+",Qp,un],["ReduceSum","","1-12",Yp,un],["ReduceSumSquare","","1+",th,un],["Relu","","6+",Lf],["Reshape","","5+",nh],["Resize","","10",cu,uh],["Resize","","11+",cu,lh],["Shape","","1+",ch],["Sigmoid","","6+",Ff],["Sin","","7+",Uf],["Slice","","10+",gh],["Slice","","1-9",ph,hh],["Softmax","","1-12",xh,_h],["Softmax","","13+",$h,Th],["Split","","2-12",Eh,Ch],["Sqrt","","6+",Vf],["Squeeze","","1-12",pu,Dh],["Squeeze","","13+",kh],["Sub","","7+",df],["Sum","","6+",Rh],["Tan","","7+",Gf],["Tanh","","6+",Wf],["Tile","","6+",Nh],["Transpose","","1+",kn,ap],["Upsample","","7-8",su,ah],["Upsample","","9",su,sh],["Unsqueeze","","1-12",hu,Fh],["Unsqueeze","","13+",Lh],["Xor","","7+",cf]]});function Hh(r){let e={},n;for(;(n=Wh.exec(r))!==null;){let t=n[3].split(",").map(o=>{let i=o.trim().split(" ");return i&&i.length===2?{type:i[0],name:i[1]}:null}).filter(o=>o!==null);e[n[2]]={params:t,body:n[4]}}for(let t in e){let o=Xx.replace("__FUNC__",t),i=new RegExp(o,"gm");for(;(n=i.exec(r))!==null;){let s=n[1],a=n[2],u=n[3].split(","),l=s?`${s} ${a};`:"",d=e[t].body,p="";e[t].params.forEach((y,b)=>{y&&(p+=`${y.type} ${y.name} = ${u[b]};
`)}),d=`${p}
 ${d}`,d=d.replace("return",`${a} = `);let m=`
      ${l}
      {
        ${d}
      }
      `;r=r.replace(n[0],m)}}return r=r.replace(Wh,""),r}var Wh,Xx,qh=R(()=>{"use strict";Wh=/@inline[\s\n\r]+(\w+)[\s\n\r]+([0-9a-zA-Z_]+)\s*\(([^)]*)\)\s*{(([^}]|[\n\r])*)}/gm,Xx="(\\w+)?\\s+([_0-9a-zA-Z]+)\\s+=\\s+__FUNC__\\((.*)\\)\\s*;"});function no(r,e){let n=[],t=[],o=e!=null&&Array.isArray(e)&&e.length===0,i=e==null||o?null:Zx(e,r).sort(),s=0;for(let a=0;a<r.length;++a){if(i!=null){if(i[s]===a&&r[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${r[a]}' is not 1`);(i[s]==null||i[s]>a)&&r[a]===1&&(n.push(r[a]),t.push(a)),i[s]<=a&&s++}r[a]!==1&&(n.push(r[a]),t.push(a))}return{newShape:n,keptDims:t}}function Zx(r,e){let n=e.length;return r=r==null?e.map((t,o)=>o):[].concat(r),Zn(r.every(t=>t>=-n&&t<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${r}`),Zn(r.every(Jx),()=>`All values in axis param must be integers but got axis ${r}`),r.map(t=>t<0?n+t:t)}function Jx(r){return r%1===0}function Qx(r){if(r.length===0)return 1;let e=r[0];for(let n=1;n<r.length;n++)e*=r[n];return e}function jh(r){let e=Math.ceil(Math.sqrt(r));return[e,Math.ceil(r/e)]}var da,mu=R(()=>{"use strict";or();Xe();da=class{constructor(e){this.maxTextureSize=e}computeTextureWH(e,n){let t=this.computeTexture(e,n);return n&&n.isPacked&&(t[0]/=2,t[1]/=2),n&&n.reverseWH?[t[1],t[0]]:t}computeTexture(e,n){let t=n&&n.isPacked;if(e.length===0)return t?[2,2]:[1,1];let o=this.maxTextureSize;if(n&&n.breakAxis!==void 0){let a=n.breakAxis>=e.length?1:e.slice(n.breakAxis).reduce((l,d)=>l*d),u=n.breakAxis<=0?1:e.slice(0,n.breakAxis).reduce((l,d)=>l*d);if(a>o||u>o)Je.verbose("TextureLayout",`Given width/height preferences were unattainable: shape:${e}, breakAxis:${n.breakAxis}`);else return[a,u]}let i=e.slice(0);t&&(o=o*2,i=i.map((a,u)=>u>=i.length-2?i[u]%2===0?i[u]:i[u]+1:i[u]),i.length===1&&(i=[2,i[0]])),i.length!==2&&(i=no(i).newShape);let s=Qx(i);return i.length<=1&&s<=o?[1,s]:i.length===2&&i[0]<=o&&i[1]<=o?i:i.length===3&&i[0]*i[1]<=o&&i[2]<=o?[i[0]*i[1],i[2]]:i.length===3&&i[0]<=o&&i[1]*i[2]<=o?[i[0],i[1]*i[2]]:i.length===4&&i[0]*i[1]*i[2]<=o&&i[3]<=o?[i[0]*i[1]*i[2],i[3]]:i.length===4&&i[0]<=o&&i[1]*i[2]*i[3]<=o?[i[0],i[1]*i[2]*i[3]]:t?jh(s/4).map(a=>a*2):jh(s)}}});var ca,Kh=R(()=>{"use strict";Xe();Yr();lt();mu();Er();ca=class extends ur{constructor(n){super(n)}getFunctions(){return{...this.offsetToCoords(),...this.coordsToOffset(),...this.toVec(),...this.valueFrom(),...this.getCommonUtilFuncs(),...this.getInputsSamplingSnippets(),...this.getOutputSamplingSnippet()}}getCustomTypes(){return{}}offsetToCoords(){let n="offsetToCoords";return{offsetToCoords:new oe(`
      vec2 ${n}(int offset, int width, int height) {
        int t = offset / width;
        int s = offset - t*width;
        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);
        return coords;
      }
      `)}}coordsToOffset(){let n="coordsToOffset";return{coordsToOffset:new oe(`
      int ${n}(vec2 coords, int width, int height) {
        float s = coords.s * float(width);
        float t = coords.t * float(height);
        int offset = int(t) * width + int(s);
        return offset;
      }
      `)}}getOutputSamplingSnippet(){let n=this.context.outputTextureLayout;return n.isPacked?this.getPackedOutputSamplingSnippet(n):this.getUnpackedOutputSamplingSnippet(n)}getPackedOutputSamplingSnippet(n){let t=n.unpackedShape,o=[n.width,n.height],i={},s="getOutputCoords";switch(t.length){case 0:i[s]=this.getOutputScalarCoords();break;case 1:i[s]=this.getOutputPacked1DCoords(t,o);break;case 2:i[s]=this.getOutputPacked2DCoords(t,o);break;case 3:i[s]=this.getOutputPacked3DCoords(t,o);break;default:i[s]=this.getOutputPackedNDCoords(t,o)}let u=`
      void setOutput(vec4 val) {
        ${ge(this.context.glContext.version).output} = val;
      }
    `,l="floatTextureSetRGBA";return i[l]=new oe(u),i}getUnpackedOutputSamplingSnippet(n){let t=n.unpackedShape,o=[n.width,n.height],i={},s="getOutputCoords";switch(t.length){case 0:i[s]=this.getOutputScalarCoords();break;case 1:i[s]=this.getOutputUnpacked1DCoords(t,o);break;case 2:i[s]=this.getOutputUnpacked2DCoords(t,o);break;case 3:i[s]=this.getOutputUnpacked3DCoords(t,o);break;case 4:i[s]=this.getOutputUnpacked4DCoords(t,o);break;case 5:i[s]=this.getOutputUnpacked5DCoords(t,o);break;case 6:i[s]=this.getOutputUnpacked6DCoords(t,o);break;default:throw new Error(`Unsupported output dimensionality: ${t.length}`)}let u=`
        void setOutput(float val) {
          ${ge(this.context.glContext.version).output} = vec4(val, 0, 0, 0);
        }
    `,l="floatTextureSetR";return i[l]=new oe(u),i}getOutputScalarCoords(){return new oe(`
      int getOutputCoords() {
        return 0;
      }
    `)}getOutputPacked1DCoords(n,t){let o=t,i="";return o[0]===1?(i=`
          int getOutputCoords() {
            return 2 * int(TexCoords.y * ${o[1]}.0);
          }
        `,new oe(i)):o[1]===1?(i=`
          int getOutputCoords() {
            return 2 * int(TexCoords.x * ${o[0]}.0);
          }
        `,new oe(i)):(i=`
        int getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                 vec2(${o[0]}, ${o[1]}));
          return 2 * (resTexRC.y * ${o[0]} + resTexRC.x);
        }
      `,new oe(i))}getOutputPacked2DCoords(n,t){let o="";if(Sn.arraysEqual(n,t))return o=`
        ivec2 getOutputCoords() {
          return 2 * ivec2(TexCoords.xy * vec2(${t[0]}, ${t[1]}));
        }
      `,new oe(o);let i=t,s=Math.ceil(n[1]/2);return o=`
        ivec2 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${i[0]}, ${i[1]}));

          int index = resTexRC.y * ${i[0]} + resTexRC.x;

          // reverse r and c order for packed texture
          int r = imod(index, ${s}) * 2;
          int c = 2 * (index / ${s});

          return ivec2(r, c);
        }
      `,new oe(o)}getOutputPacked3DCoords(n,t){let o=[t[0],t[1]],i=Math.ceil(n[2]/2),s=i*Math.ceil(n[1]/2),a=`
        ivec3 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${o[0]}, ${o[1]}));
          int index = resTexRC.y * ${o[0]} + resTexRC.x;

          int b = index / ${s};
          index -= b * ${s};

          // reverse r and c order for packed texture
          int r = imod(index, ${i}) * 2;
          int c = 2 * (index / ${i});

          return ivec3(b, r, c);
        }
      `;return new oe(a)}getOutputPackedNDCoords(n,t){let o=[t[0],t[1]],i=Math.ceil(n[n.length-1]/2),s=i*Math.ceil(n[n.length-2]/2),a=s,u="",l="b, r, c";for(let p=2;p<n.length-1;p++)a*=n[n.length-p-1],u=`
      int b${p} = index / ${a};
      index -= b${p} * ${a};
    `+u,l=`b${p}, `+l;let d=`
      ivec${n.length} getOutputCoords() {
        ivec2 resTexRC = ivec2(TexCoords.xy *
                              vec2(${o[0]}, ${o[1]}));
        int index = resTexRC.y * ${o[0]} + resTexRC.x;

        ${u}

        int b = index / ${s};
        index -= b * ${s};

        // reverse r and c order for packed texture
        int r = imod(index, ${i}) * 2;
        int c = 2 * (index / ${i});

        return ivec${n.length}(${l});
      }
    `;return new oe(d)}getOutputUnpacked1DCoords(n,t){let o=`
        int getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          return resTexRC.y * ${t[0]} + resTexRC.x;
        }
      `;return new oe(o)}getOutputUnpacked2DCoords(n,t){let o=`
        ivec2 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          int r = index / ${n[1]};
          int c = index - r * ${n[1]};
          return ivec2(r, c);
        }
      `;return new oe(o)}getOutputUnpacked3DCoords(n,t){let o="",i=n.length,s=null;i<2&&(s=[]),s=new Array(i-1),s[i-2]=n[i-1];for(let l=i-3;l>=0;--l)s[l]=s[l+1]*n[l+1];let a=["r","c","d"],u=s.map((l,d)=>{let p=`int ${a[d]} = index / ${l}`,m=d===s.length-1?`int ${a[d+1]} = index - ${a[d]} * ${l}`:`index -= ${a[d]} * ${l}`;return`${p}; ${m};`}).join("");return o=`
        ivec3 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          ${u}
          return ivec3(r, c, d);
        }
      `,new oe(o)}getOutputUnpacked4DCoords(n,t){let o="",i=n.length,s=null;i<2&&(s=[]),s=new Array(i-1),s[i-2]=n[i-1];for(let l=i-3;l>=0;--l)s[l]=s[l+1]*n[l+1];let a=["r","c","d","d2"],u=s.map((l,d)=>{let p=`int ${a[d]} = index / ${l}`,m=d===s.length-1?`int ${a[d+1]} = index - ${a[d]} * ${l}`:`index -= ${a[d]} * ${l}`;return`${p}; ${m};`}).join("");return o=`
      ivec4 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          ${u}
          return ivec4(r, c, d, d2);
        }
      `,new oe(o)}getOutputUnpacked5DCoords(n,t){let o="",i=n.length,s=null;i<2&&(s=[]),s=new Array(i-1),s[i-2]=n[i-1];for(let l=i-3;l>=0;--l)s[l]=s[l+1]*n[l+1];let a=["r","c","d","d2","d3"],u=s.map((l,d)=>{let p=`int ${a[d]} = index / ${l}`,m=d===s.length-1?`int ${a[d+1]} = index - ${a[d]} * ${l}`:`index -= ${a[d]} * ${l}`;return`${p}; ${m};`}).join("");return o=`
      ivec5 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          ${u}
          return ivec5(r, c, d, d2, d3);
        }
      `,new oe(o)}getOutputUnpacked6DCoords(n,t){let o="",i=n.length,s=null;i<2&&(s=[]),s=new Array(i-1),s[i-2]=n[i-1];for(let l=i-3;l>=0;--l)s[l]=s[l+1]*n[l+1];let a=["r","c","d","d2","d3","d4"],u=s.map((l,d)=>{let p=`int ${a[d]} = index / ${l}`,m=d===s.length-1?`int ${a[d+1]} = index - ${a[d]} * ${l}`:`index -= ${a[d]} * ${l}`;return`${p}; ${m};`}).join("");return o=`
     ivec6 getOutputCoords() {
         ivec2 resTexRC = ivec2(TexCoords.xy *
                               vec2(${t[0]}, ${t[1]}));
         int index = resTexRC.y * ${t[0]} + resTexRC.x;
         ${u}
         return ivec6(r, c, d, d2, d3, d4);
       }
     `,new oe(o)}getCommonUtilFuncs(){let n={},t="uvFromFlat";n[t]=new oe(`
    vec2 uvFromFlat(int texNumR, int texNumC, int index) {
      int texC = index / texNumR;
      int texR = index - texC * texNumR;
      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to
      //       v.
      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);
    }
    `),t="packedUVfrom1D",n[t]=new oe(`
      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
        int texelIndex = index / 2;
        int texR = texelIndex / texNumC;
        int texC = texelIndex - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),t="packedUVfrom2D",n[t]=new oe(`
      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {
        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
        int texR = texelIndex / texNumC;
        int texC = texelIndex - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),t="packedUVfrom3D",n[t]=new oe(`
      vec2 packedUVfrom3D(int texNumR, int texNumC,
          int texelsInBatch, int texelsInLogicalRow, int b,
          int row, int col) {
        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
        int texR = index / texNumC;
        int texC = index - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),t="sampleTexture";let o=ge(this.context.glContext.version);return n[t]=new oe(`
        float sampleTexture(sampler2D textureSampler, vec2 uv) {
            return ${o.texture2D}(textureSampler, uv).r;
        }`),n}getInputsSamplingSnippets(){let n={},t=this.context.outputTextureLayout;return this.context.programInfo.inputNames.forEach((o,i)=>{let s=this.context.inputTextureLayouts[i],a=Xi(o);s.isPacked?n[a]=this.getPackedSamplerFromInput(a,o,s):n[a]=this.getUnpackedSamplerFromInput(a,o,s);let u=Bc(o);s.unpackedShape.length<=t.unpackedShape.length&&(s.isPacked?n[u]=this.getPackedSamplerAtOutputCoords(u,s,t,o):n[u]=this.getUnpackedSamplerAtOutputCoords(u,s,t,o))}),n}getPackedSamplerAtOutputCoords(n,t,o,i){let s=t.unpackedShape,a=o.unpackedShape,l=Xi(i),d=s.length,p=a.length,m=Vt.getBroadcastDims(s,a),y=Gt(p),b=p-d,w,A=xr();d===0?w="":p<2&&m.length>=1?w="coords = 0;":w=m.map(le=>`coords.${A[le+b]} = 0;`).join(`
`);let $="";p<2&&d>0?$="coords":$=s.map((le,z)=>`coords.${A[z+b]}`).join(", ");let _="return outputValue;",P=se.size(s)===1,F=se.size(a)===1;if(d===1&&!P&&!F)_=`
        return vec4(outputValue.xy, outputValue.xy);
      `;else if(P&&!F)p===1?_=`
          return vec4(outputValue.x, outputValue.x, 0., 0.);
        `:_=`
          return vec4(outputValue.x);
        `;else if(m.length){let le=d-2,z=d-1;m.indexOf(le)>-1&&m.indexOf(z)>-1?_="return vec4(outputValue.x);":m.indexOf(le)>-1?_="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":m.indexOf(z)>-1&&(_="return vec4(outputValue.xx, outputValue.zz);")}let G=`
        int lastDim = coords.${A[p-1]};
        coords.${A[p-1]} = coords.${A[p-2]};
        coords.${A[p-2]} = lastDim;
      `,J=`
      vec4 ${n}() {
        ${y} coords = getOutputCoords();
        ${G}
        ${w}
        vec4 outputValue = ${l}(${$});
        ${_}
      }
    `;return new oe(J,["coordinates.getOutputCoords"])}getUnpackedSamplerAtOutputCoords(n,t,o,i){let s=[o.width,o.height],a=[t.width,t.height],u=t.unpackedShape.length,l=o.unpackedShape.length,d=t.unpackedShape,p=o.unpackedShape,m=Xi(i);if(u===l&&Sn.arraysEqual(a,s)){let P=`
          float ${n}() {
            return sampleTexture(${i}, TexCoords);
          }
        `;return new oe(P,["coordinates.sampleTexture"])}let y=Gt(l),b=Vt.getBroadcastDims(d,p),w=l-u,A,$=xr();u===0?A="":l<2&&b.length>=1?A="coords = 0;":A=b.map(P=>`coords.${$[P+w]} = 0;`).join(`
`);let _="";l<2&&u>0?_="coords":_=t.unpackedShape.map((P,N)=>`coords.${$[N+w]}`).join(", ");let O=`
        float ${n}() {
          ${y} coords = getOutputCoords();
          ${A}
          return ${m}(${_});
        }
      `;return new oe(O,["coordinates.getOutputCoords"])}getPackedSamplerFromInput(n,t,o){switch(o.unpackedShape.length){case 0:return this.getPackedSamplerScalar(n,t);case 1:return this.getPackedSampler1D(n,t,o);case 2:return this.getPackedSampler2D(n,t,o);case 3:return this.getPackedSampler3D(n,t,o);default:return this.getPackedSamplerND(n,t,o)}}getUnpackedSamplerFromInput(n,t,o){let i=o.unpackedShape;switch(i.length){case 0:return this.getUnpackedSamplerScalar(n,t,o);case 1:return this.getUnpackedSampler1D(n,t,o);case 2:return this.getUnpackedSampler2D(n,t,o);case 3:return this.getUnpackedSampler3D(n,t,o);case 4:return this.getUnpackedSampler4D(n,t,o);case 5:return this.getUnpackedSampler5D(n,t,o);case 6:return this.getUnpackedSampler6D(n,t,o);default:throw new Error(`Unsupported dimension ${i.length}-D`)}}getPackedSamplerScalar(n,t){let o=ge(this.context.glContext.version),i=`
          vec4 ${n}() {
            return ${o.texture2D}(${t}, halfCR);
          }
        `;return new oe(i)}getPackedSampler1D(n,t,o){let i=[o.width,o.height],s=[i[1],i[0]],a=ge(this.context.glContext.version),l=`vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
      ${s[0]}, ${s[1]}, index);
      return ${a.texture2D}(${t}, uv);
    }`;return new oe(l,["coordinates.packedUVfrom1D"])}getPackedSampler2D(n,t,o){let i=o.unpackedShape,s=[o.width,o.height],a=ge(this.context.glContext.version),u=s[0],l=s[1];if(s!=null&&Sn.arraysEqual(i,s)){let b=`vec4 ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${l}.0, ${u}.0);
        return ${a.texture2D}(${t}, uv);
      }`;return new oe(b)}let d=s,p=Math.ceil(i[1]/2),y=`vec4 ${n}(int row, int col) {
      vec2 uv = packedUVfrom2D(${d[1]}, ${d[0]}, ${p}, row, col);
      return ${a.texture2D}(${t}, uv);
    }`;return new oe(y,["coordinates.packedUVfrom2D"])}getPackedSampler3D(n,t,o){let i=o.unpackedShape,s=[o.width,o.height],a=[s[0],s[1]],u=ge(this.context.glContext.version);if(i[0]===1){let w=i.slice(1),A=[1,2],$=Jn(i,w),_=["b","row","col"],O=JSON.parse(JSON.stringify(o));O.unpackedShape=$;let P=this.getPackedSamplerFromInput(n,t,O),F=`${P.routineBody}
      vec4 ${n}(int b, int row, int col) {
        return ${n}(${Qn(_,A)});
      } `;return new oe(F,P.dependencies)}let l=a[0],d=a[1],p=Math.ceil(i[2]/2),m=p*Math.ceil(i[1]/2),b=`vec4 ${n}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${d}, ${l}, ${m}, ${p}, b, row, col);
      return ${u.texture2D}(${t}, uv);}`;return new oe(b,["coordinates.packedUVfrom3D"])}getPackedSamplerND(n,t,o){let i=o.unpackedShape,s=i.length,a=[o.width,o.height],u=ge(this.context.glContext.version),l=[a[0],a[1]],d=l[1],p=l[0],m=Math.ceil(i[s-1]/2),y=m*Math.ceil(i[s-2]/2),b="int b, int row, int col",w=`b * ${y} + (row / 2) * ${m} + (col / 2)`;for(let _=2;_<s-1;_++)b=`int b${_}, `+b,y*=i[s-_-1],w=`b${_} * ${y} + `+w;let $=`vec4 ${n}(${b}) {
      int index = ${w};
      int texR = index / ${p};
      int texC = index - texR * ${p};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}, ${d});
      return ${u.texture2D}(${t}, uv);
    }`;return new oe($)}getUnpackedSamplerScalar(n,t,o){let[i,s]=[o.width,o.height];if(i===1&&s===1){let u=`
          float ${n}() {
            return sampleTexture(${t}, halfCR);
          }
        `;return new oe(u,["coordinates.sampleTexture"])}let a=`
        float ${n}() {
          int offset_${t} = coordsToOffset(TexCoords, ${i}, ${s});
          vec2 uv = uvFromFlat(${i}, ${s}, offset_${t});
          return sampleTexture(${t}, uv);
        }
      `;return new oe(a,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler1D(n,t,o){let i=o.width,s=o.height;if(s===1&&i===1){let u=`
        float ${n}(int index) {
          return sampleTexture(${t}, halfCR);
        }
      `;return new oe(u,["coordinates.sampleTexture"])}if(s===1){let u=`
          float ${n}(int index) {
            vec2 uv = vec2((float(index) + 0.5) / ${i}.0, 0.5);
            return sampleTexture(${t}, uv);
          }
        `;return new oe(u,["coordinates.sampleTexture"])}if(i===1){let u=`
          float ${n}(int index) {
            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${s}.0);
            return sampleTexture(${t}, uv);
          }
        `;return new oe(u,["coordinates.sampleTexture"])}let a=`
        float ${n}(int index) {
          vec2 uv = uvFromFlat(${i}, ${s}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new oe(a,["coordinates.uvFromFlat","coordinates.sampleTexture"])}getUnpackedSampler2D(n,t,o){let i=o.unpackedShape,s=[o.height,o.width];if(s!=null&&Sn.arraysEqual(i,s)){let y=s[1],b=s[0],w=`
          float ${n}(int row, int col) {
            vec2 uv = (vec2(row, col) + halfCR) / vec2(${y}.0, ${b}.0);
            return sampleTexture(${t}, uv);
          }
        `;return new oe(w,["coordinates.sampleTexture"])}let{newShape:a,keptDims:u}=no(i),l=a;if(l.length<i.length){let y=Jn(i,l),b=JSON.parse(JSON.stringify(o));b.unpackedShape=y;let w=["col","row"],A=`
          ${this.getUnpackedSamplerFromInput(n,t,b).routineBody}
          float ${n}(int row, int col) {
            return ${n}(${Qn(w,u)});
          }
        `;return new oe(A,["coordinates.sampleTexture"])}let d=s[1],p=s[0];if(p===1){let y=`
          float ${n}(int row, int col) {
            int offset_${t} = coordsToOffset(TexCoords, ${d}, ${p});
            float index = dot(vec3(row, col, offset_${t}), vec3(${i[1]}, 1, 1));
            vec2 uv = vec2(0.5, (index + 0.5) / ${d}.0);
            return sampleTexture(${t}, uv);
          }
        `;return new oe(y,["coordinates.sampleTexture","coordinates.coordsToOffset"])}if(d===1){let y=`
          float ${n}(int row, int col) {
            int offset_${t} = coordsToOffset(TexCoords, ${d}, ${p});
            float index = dot(vec3(row, col, offset_${t}), vec3(${i[1]}, 1, 1));
            vec2 uv = vec2((index + 0.5) / ${p}.0, 0.5);
            return sampleTexture(${t}, uv);
          }
        `;return new oe(y,["coordinates.sampleTexture","coordinates.coordsToOffset"])}let m=`
        float ${n}(int row, int col) {
          int index = col * ${i[1]} + row;
          vec2 uv = uvFromFlat(${d}, ${p}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new oe(m,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler3D(n,t,o){let i=o.unpackedShape,s=i[1]*i[2],a=i[2],{newShape:u,keptDims:l}=no(i),d=u;if(d.length<i.length){let b=Jn(i,d),w=["batch","col","row"],A=JSON.parse(JSON.stringify(o));A.unpackedShape=b;let $=this.getUnpackedSamplerFromInput(n,t,A),_=l.reverse(),O=`
          ${$.routineBody}
          float ${n}(int batch, int row, int col) {
            return ${n}(${Qn(w,_)});
          }
        `;return new oe(O,$.dependencies)}let p=o.width,m=o.height,y=`
          float ${n}(int depth, int row, int col) {
            // Explicitly use integer operations as dot() only works on floats.
            int index = depth * ${s} + col * ${a} + row;
            vec2 uv = uvFromFlat(${p}, ${m}, index);
            return sampleTexture(${t}, uv);
          }
      `;return new oe(y,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler4D(n,t,o){let i=o.unpackedShape,s=i[3],a=i[2]*s,u=i[1]*a,l=o.width,d=o.height,p=`
        float ${n}(int row, int col, int depth, int depth2) {
          int index = row * ${u} + col * ${a} +
              depth2 * ${s} + depth;
          vec2 uv = uvFromFlat(${l}, ${d}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new oe(p,["coordinates.uvFromFlat","coordinates.sampleTexture"])}getUnpackedSampler5D(n,t,o){let i=o.unpackedShape,s=i[4],a=i[3]*s,u=i[2]*a,l=i[1]*u,{newShape:d,keptDims:p}=no(i);if(d.length<i.length){let w=Jn(i,d),A=["row","col","depth","depth2","depth3"],$=JSON.parse(JSON.stringify(o));$.unpackedShape=w;let _=`
          ${this.getUnpackedSamplerFromInput(n,t,$).routineBody}
          float ${n}(int row, int col, int depth, int depth2, int depth3) {
            return ${n}(${Qn(A,p)});
          }
        `;return new oe(_,["coordinates.sampleTexture","coordinates.uvFromFlat"])}let m=o.width,y=o.height,b=`
        float ${n}(int row, int col, int depth, int depth2, int depth3) {
          int index = row * ${l} + col * ${u} + depth * ${a} +
          depth3 * ${s} + depth2;
          vec2 uv = uvFromFlat(${m}, ${y}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new oe(b,["coordinates.sampleTexture","coordinates.uvFromFlat"])}getUnpackedSampler6D(n,t,o){let i=o.unpackedShape,s=i[5],a=i[4]*s,u=i[3]*a,l=i[2]*u,d=i[1]*l,{newShape:p,keptDims:m}=no(i);if(p.length<i.length){let A=Jn(i,p),$=["row","col","depth","depth2","depth3","depth4"],_=JSON.parse(JSON.stringify(o));_.unpackedShape=A;let O=`
            ${this.getUnpackedSamplerFromInput(n,t,_).routineBody}
            float ${n}(int row, int col, int depth,
              int depth2, int depth3, int depth4) {
              return ${n}(${Qn($,m)});
            }
          `;return new oe(O,["coordinates.sampleTexture","coordinates.uvFromFlat"])}let y=o.width,b=o.height,w=`
          float ${n}(int row, int col, int depth,
            int depth2, int depth3, int depth4) {
            int index = row * ${d} + col * ${l} + depth * ${u} +
            depth2 * ${a} + depth3 * ${s} + depth4;
            vec2 uv = uvFromFlat(${y}, ${b}, index);
            return sampleTexture(${t}, uv);
          }
        `;return new oe(w,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}toVec(){let n=this.context.outputTextureLayout,t=n.shape.length,o=n.strides,i=n.width,s=n.height,a=[];for(let l=0;l<t-1;++l)a.push(`
        c[${l}] = offset / ${o[l]};`),a.push(`
        offset -= c[${l}] * ${o[l]};`);a.push(`
        c[${t-1}] = offset;`);let u=`
      void toVec(vec2 texCoords, out int c[${t}]) {
        int offset = coordsToOffset(texCoords, ${i}, ${s});
        ${a.join("")}
      }
      void toVec(int offset, out int c[${t}]) {
        ${a.join("")}
      }
    `;return{toVec:new oe(u,["coordinates.coordsToOffset"])}}valueFrom(){let n={};return this.context.programInfo.inputNames.forEach((t,o)=>{let i=this.context.inputTextureLayouts[o],a=(i.unpackedShape.length>0?i.unpackedShape:i.shape).length,u=`_${t}`;n[u]=new oe(this.getValueFromSingle(t,a,i.width,i.height,!1),[`shapeUtils.indicesToOffset${u}`,"coordinates.offsetToCoords","fragcolor.getColorAsFloat"]),u=u+"_T",n[u]=new oe(this.getValueFromSingle(t,a,i.width,i.height,!0),[`shapeUtils.indicesToOffset${u}`,"coordinates.offsetToCoords","fragcolor.getColorAsFloat"])}),n}getValueFromSingle(n,t,o,i,s){let a=`_${n}`;s&&(a=a+"_T");let u=ge(this.context.glContext.version);return`
        float ${a}(int m[${t}]) {
          int offset = indicesToOffset${a}(m);
          vec2 coords = offsetToCoords(offset, ${o}, ${i});
          float value = getColorAsFloat(${u.texture2D}(${n}, coords));
          return value;
        }
        `}getPackedValueFrom(n,t,o,i,s){let a=`_${n}_Pack`;s&&(a=a+"_T");let u=ge(this.context.glContext.version);return`
        vec4 ${a}(int m[${t}]) {
          int offset = indicesToOffset_${n}(m);
          vec2 coords = offsetToCoords(offset, ${o}, ${i});
          return ${u.texture2D}(${n}, coords);
        }
        `}}});var fa,Yh=R(()=>{"use strict";Yr();fa=class r extends ur{constructor(e){super(e)}getFunctions(){return{...this.encodeFloat32(),...this.decodeFloat32()}}getCustomTypes(){return{}}encodeFloat32(){return{encode:new oe(`highp vec4 encode(highp float f) {
        return vec4(f, 0.0, 0.0, 0.0);
      }
        `)}}decodeFloat32(){return{decode:new oe(`highp float decode(highp vec4 rgba) {
        return rgba.r;
      }
        `)}}encodeUint8(){let e=r.isLittleEndian()?"rgba.rgba=rgba.abgr;":"";return{encode:new oe(`
      highp vec4 encode(highp float f) {
        highp float F = abs(f);
        highp float Sign = step(0.0,-f);
        highp float Exponent = floor(log2(F));
        highp float Mantissa = (exp2(- Exponent) * F);
        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));
        highp vec4 rgba;
        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));
        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);
        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));
        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));
        ${e}
        rgba = rgba / 255.0; // values need to be normalized to [0,1]
        return rgba;
    }
        `)}}decodeUint8(){let e=r.isLittleEndian()?"rgba.rgba=rgba.abgr;":"";return{decode:new oe(`
        highp float decode(highp vec4 rgba) {
          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]
          ${e}
          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;
          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;
          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);
          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));
          return Result;
      }
        `)}}static isLittleEndian(){let e=new ArrayBuffer(4),n=new Uint32Array(e),t=new Uint8Array(e);if(n[0]=3735928559,t[0]===239)return!0;if(t[0]===222)return!1;throw new Error("unknown endianness")}}});var pa,Xh=R(()=>{"use strict";Yr();lt();pa=class extends ur{constructor(e){super(e)}getFunctions(){return{...this.setFragColor(),...this.getColorAsFloat()}}getCustomTypes(){return{}}setFragColor(){let e=ge(this.context.glContext.version);return{setFragColor:new oe(`
        void setFragColor(float value) {
            ${e.output} = encode(value);
        }
        `,["encoding.encode"])}}getColorAsFloat(){return{getColorAsFloat:new oe(`
        float getColorAsFloat(vec4 color) {
            return decode(color);
        }
        `,["encoding.decode"])}}}});var ha,Zh=R(()=>{"use strict";Yr();ha=class r extends ur{constructor(e){super(e)}getFunctions(){return{...this.bcastIndex(),...this.bcastMatmulIndex(),...this.offsetToIndices(),...this.indicesToOffset(),...this.incrementIndices()}}getCustomTypes(){return{}}bcastIndex(){let e=this.context.outputTextureLayout.shape.length,n={};return this.context.programInfo.inputNames.forEach((t,o)=>{let i=this.context.inputTextureLayouts[o].unpackedShape;if(i.length<=e){let s=i.length,a=e-s,u=`bcastIndices_${t}`,l="";for(let p=0;p<s;++p)l+=`
          realIndices[${p}] = int( mod(float(bcastedIndices[${a+p}]), ${i[p]}.0) );
          `;let d=`
        void ${u} (int bcastedIndices[${e}], out int realIndices[${s}]) {
          ${l}
        }
        `;n[u]=new oe(d)}}),n}bcastMatmulIndex(){let e=this.context.outputTextureLayout.shape.length,n={};return this.context.programInfo.inputNames.forEach((t,o)=>{let i=this.context.inputTextureLayouts[o].shape;if(!(i.length<2||i.length>e)){let s=i.length,a=e-s,u=`bcastMatmulIndices_${t}`,l="";for(let p=0;p<s-2;++p)l+=`
          realIndices[${p}] = int( mod(float(bcastedIndices[${a+p}]), ${i[p]}.0) );
          `;let d=`
        void ${u}(int bcastedIndices[${e}], out int realIndices[${s}]) {
          ${l}
          realIndices[${s-1}] = bcastedIndices[${e-1}];
          realIndices[${s-2}] = bcastedIndices[${e-2}];
        }
        `;n[u]=new oe(d)}}),n}indicesToOffset(){let e={};return this.context.programInfo.inputNames.forEach((n,t)=>{let o=this.context.inputTextureLayouts[t].shape,i=this.context.inputTextureLayouts[t].strides,s=o.length,a=`indicesToOffset_${n}`;e[a]=new oe(r.indexToOffsetSingle(a,s,i)),a=`indicesToOffset_${n}_T`,e[a]=new oe(r.indexToOffsetSingle(a,s,i.slice().reverse()))}),e}static indexToOffsetSingle(e,n,t){let o="";for(let i=n-1;i>=0;--i)o+=`
        offset += indices[${i}] * ${t[i]};
        `;return`
      int ${e}(int indices[${n}]) {
        int offset = 0;
        ${o}
        return offset;
      }
      `}offsetToIndices(){let e={};return this.context.programInfo.inputNames.forEach((n,t)=>{let o=this.context.inputTextureLayouts[t].shape,i=this.context.inputTextureLayouts[t].strides,s=o.length,a=`offsetToIndices_${n}`;e[a]=new oe(r.offsetToIndicesSingle(a,s,i)),a=`offsetToIndices_${n}_T`,e[a]=new oe(r.offsetToIndicesSingle(a,s,i.slice().reverse()))}),e}static offsetToIndicesSingle(e,n,t){let o=[];for(let i=0;i<n-1;++i)o.push(`
      indices[${i}] = offset / ${t[i]};`),o.push(`
        offset -= indices[${i}] * ${t[i]};`);return o.push(`
      indices[${n-1}] = offset;`),`
      void ${e}(int offset, out int indices[${n}]) {
        ${o.join("")}
      }
      `}incrementIndices(){let e={};return this.context.programInfo.inputNames.forEach((n,t)=>{let o=this.context.inputTextureLayouts[t].shape,i=o.length,s=`incrementIndices_${n}`,a="";for(let l=0;l<i;++l)a+=`
        shape[${l}] = ${o[l]};`;let u=`
        void ${s}(int axis, out int indices[${i}]) {
          int shape[${i}];
          ${a};
          for(int i = ${i} -1 ; i >= 0; --i) {
            if(i > axis) continue;
            indices[i] += 1;
            if(indices[i] < shape[i]) {
              break;
            }
            indices[i] = 0;
          }
        }
        `;e[s]=new oe(u)}),e}}});var ma,Jh=R(()=>{"use strict";Yr();ma=class extends ur{constructor(e){super(e)}getCustomTypes(){return{}}getFunctions(){return{...this.binaryVecFunctions(),...this.copyVec(),...this.setVecItem(),...this.getVecItem()}}binaryVecFunctions(){let n=this.context.outputTextureLayout.shape.length,t={add:"+=",sub:"-=",mul:"*=",div:"/="},o={};for(let i in t){let s=`${i}Vec`,a="";for(let l=0;l<n;++l)a+=`
          dest[${l}] ${t[i]} src[${l}];
          `;let u=`
        void ${s}(int src[${n}], out int dest[${n}]) {
          ${a}
        }
        `;o[s]=new oe(u)}return o}copyVec(){let n=this.context.outputTextureLayout.shape.length,t="";for(let i=0;i<n;++i)t+=`
        dest[${i}] = src[${i}];
        `;let o=`
      void copyVec(int src[${n}], out int dest[${n}]) {
        ${t}
      }
      `;return{copyVec:new oe(o)}}setVecItem(){let n=this.context.outputTextureLayout.shape.length,t=`
        if(index < 0)
            index =${n} + index;
        if (index == 0)
            m[0] = value;
        `;for(let i=1;i<n-1;++i)t+=`
        else if (index == ${i})
            m[${i}] = value;
            `;t+=`
        else
            m[${n-1}] = value;
        `;let o=`
      void setVecItem(out int m[${n}], int index, int value) {
        ${t}
      }
        `;return{setVecItem:new oe(o)}}getVecItem(){let n=this.context.outputTextureLayout.shape.length,t=`
        if(index < 0)
            index = ${n} + index;
        if (index == 0)
            return m[0];
      `;for(let i=1;i<n-1;++i)t+=`
        else if (index == ${i})
            return m[${i}];
      `;t+=`
        else
            return m[${n-1}];
        `;let o=`
      int getVecItem(int m[${n}], int index) {
        ${t}
      }
    `;return{getVecItem:new oe(o)}}}});var gu,Qh=R(()=>{"use strict";Kh();Yh();Xh();Zh();Jh();gu={encoding:fa,fragcolor:pa,vec:ma,shapeUtils:ha,coordinates:ca}});var ga,em=R(()=>{"use strict";Yr();qh();Qh();lt();ga=class{constructor(e,n,t,o){this.libs={};this.glslLibRoutineDependencyGraph={};this.context=new ea(e,n,t,o),Object.keys(gu).forEach(s=>{let a=new gu[s](this.context);this.libs[s]=a});let i=this.glslLibRoutineDependencyGraph;for(let s in this.libs){let u=this.libs[s].getFunctions();for(let l in u){let d=s+"."+l,p;i[d]?(p=i[d],p.routineBody=u[l].routineBody):(p=new Wo(d,u[l].routineBody),i[d]=p);let m=u[l].dependencies;if(m)for(let y=0;y<m.length;++y)if(i[m[y]])p.addDependency(i[m[y]]);else{let b=new Wo(m[y]);i[m[y]]=b,p.addDependency(b)}}}}preprocess(){let e=this.context.programInfo,n=e.shaderSource;return this.context.programInfo.hasMain||(n=`${n}
      ${Dc(this.context.glContext.version,this.context.outputTextureLayout.shape.length)}`),n=Hh(n),`${kc(this.context.glContext.version)}
    ${this.getUniforms(e.inputNames,e.variables)}
    ${this.getImports(n)}
    ${n}`}getImports(e){let n=this.selectGlslLibRoutinesToBeIncluded(e);if(n.length===0)return"";let t="";for(let o=0;o<n.length;++o)if(n[o].routineBody)t+=n[o].routineBody+`
`;else throw new Error(`Missing body for the Glsl Library routine: ${n[o].name}`);return t}selectGlslLibRoutinesToBeIncluded(e){let n=[];return Object.keys(this.glslLibRoutineDependencyGraph).forEach(t=>{let o=t.split(".")[1];e.indexOf(o)!==-1&&n.push(this.glslLibRoutineDependencyGraph[t])}),ta.returnOrderedNodes(n)}getUniforms(e,n){let t=[];if(e)for(let o of e)t.push(`uniform sampler2D ${o};`);if(n)for(let o of n)t.push(`uniform ${o.type} ${o.name}${o.arrayLength?`[${o.arrayLength}]`:""};`);return t.join(`
`)}}});var ba,tm=R(()=>{"use strict";kt();or();em();lt();ba=class{constructor(e,n,t){this.profiler=e;this.glContext=n;this.textureLayoutStrategy=t;this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,n){this.repo.set(e,n)}run(e,n,t){this.profiler.event("op",`ProgramManager.run ${e.programInfo.name??"unknown kernel"}`,()=>{let o=this.glContext.gl,i=e.program;o.useProgram(i);try{this.bindOutput(t),this.attributesBound||this.bindAttributes(e.attribLocations),this.bindUniforms(e.uniformLocations,e.programInfo.variables??[],n)}catch(s){throw Je.error("ProgramManager",e.programInfo.shaderSource),s}this.profiler.event("backend","GlContext.draw()",()=>{this.glContext.draw()})},this.glContext)}dispose(){this.vertexShader&&this.glContext.deleteShader(this.vertexShader),this.repo.forEach(e=>this.glContext.deleteProgram(e.program))}build(e,n,t){return this.profiler.event("backend","ProgramManager.build",()=>{let o=new ga(this.glContext,e,n,t),i=o.preprocess(),s=this.compile(i);return{programInfo:e,program:s,uniformLocations:this.getUniformLocations(s,o.context.programInfo.inputNames,o.context.programInfo.variables),attribLocations:this.getAttribLocations(s)}})}compile(e){if(!this.vertexShader){Je.verbose("ProrgramManager","Compiling and caching Vertex shader for the first time");let o=Pc(this.glContext.version);this.vertexShader=this.glContext.compileShader(o,this.glContext.gl.VERTEX_SHADER)}ve.debug&&Je.verbose("ProrgramManager",`FragShader:
${e}
`);let n=this.glContext.compileShader(e,this.glContext.gl.FRAGMENT_SHADER),t=this.glContext.createProgram(this.vertexShader,n);return this.glContext.deleteShader(n),t}bindOutput(e){let n=e.width,t=e.height;Je.verbose("ProrgramManager",`Binding output texture to Framebuffer: w/h=${n}/${t}, shape=${e.shape}, type=${e.tensor.type}`),this.glContext.attachFramebuffer(e.texture,n,t)}bindAttributes(e){let n=e.position,t=e.textureCoord;this.glContext.setVertexAttributes(n,t),this.attributesBound=!0}bindUniforms(e,n,t){let o=this.glContext.gl,i=0;for(let{name:s,type:a,location:u,arrayLength:l}of e){let d=n.find(p=>p.name===s)?.data;if(a!=="sampler2D"&&!d)throw new Error(`variable '${s}' does not have data defined in program info`);switch(a){case"sampler2D":this.bindTexture(t[i],u,i),i++;break;case"float":l?o.uniform1fv(u,d):o.uniform1f(u,d);break;case"int":l?o.uniform1iv(u,d):o.uniform1i(u,d);break;default:throw new Error(`Uniform not implemented: ${a}`)}}}bindTexture(e,n,t){this.glContext.bindTextureToUniform(e.texture,t,n)}getAttribLocations(e){return{position:this.getAttribLocation(e,"position"),textureCoord:this.getAttribLocation(e,"textureCoord")}}getUniformLocations(e,n,t){let o=[];if(n)for(let i of n)o.push({name:i,type:"sampler2D",location:this.getUniformLocation(e,i)});if(t)for(let i of t)o.push({...i,location:this.getUniformLocation(e,i.name)});return o}getUniformLocation(e,n){let o=this.glContext.gl.getUniformLocation(e,n);if(o===null)throw new Error(`Uniform ${n} not found.`);return o}getAttribLocation(e,n){return this.glContext.gl.getAttribLocation(e,n)}}});var ya,rm=R(()=>{"use strict";or();Vo();ya=class{constructor(e,n,t,o){this.glContext=e;this.layoutStrategy=n;this.profiler=t;this.config=o;this.pendingRead=new Map;o.reuseTextures&&(this.inUseTextures=new Map,this.idleTextures=new Map,this.textureLookup=new Map)}createTextureFromLayout(e,n,t,o){let i=this.toEncoderType(e),s=this.glContext.getEncoder(i,n.channels||1,o);if(n.isPacked&&o===1)throw new Error("not implemented");let a=n.width,u=n.height,l,d;if(this.config.reuseTextures){l=`${a}x${u}_${s.format}_${s.internalFormat}_${s.textureType}`,d=this.inUseTextures.get(l),d||(d=[],this.inUseTextures.set(l,d));let m=this.idleTextures.get(l);if(m&&m.length>0){let y=m.pop();return d.push(y),o===1&&this.glContext.updateTexture(y,a,u,s,this.toTextureData(e,t)),y}}Je.verbose("TextureManager",`Creating new texture of size ${n.width}x${n.height}`);let p=this.glContext.allocateTexture(a,u,s,this.toTextureData(e,t));return this.config.reuseTextures&&(d.push(p),this.textureLookup.set(p,l)),p}readTexture(e,n,t){return t||(t=1),this.profiler.event("backend","TextureManager.readTexture",()=>{let o=e.shape.reduce((s,a)=>s*a)*t,i=this.glContext.readTexture(e.texture,e.width,e.height,o,this.toEncoderType(n),t);return this.toTensorData(n,i)})}async readTextureAsync(e,n,t){let o=e.tensor.dataId;if(t||(t=1),this.pendingRead.has(o)){let i=this.pendingRead.get(o);return new Promise(s=>i?.push(s))}return this.profiler.event("backend","TextureManager.readTextureAsync",async()=>{this.pendingRead.set(o,[]);let i=e.shape.reduce((l,d)=>l*d)*t;await this.glContext.createAndWaitForFence();let s=this.glContext.readTexture(e.texture,e.width,e.height,i,this.toEncoderType(n),t),a=this.toTensorData(n,s),u=this.pendingRead.get(o);return this.pendingRead.delete(o),u?.forEach(l=>l(a)),a})}readUint8TextureAsFloat(e){return this.profiler.event("backend","TextureManager.readUint8TextureAsFloat",()=>{let n=e.shape.reduce((o,i)=>o*i),t=this.glContext.readTexture(e.texture,e.width,e.height,n*4,"byte",4);return new Float32Array(t.buffer,t.byteOffset,n)})}releaseTexture(e,n){let t;if(this.config.reuseTextures&&(t=this.textureLookup.get(e.texture),t)){n&&this.textureLookup.delete(t);let o=this.inUseTextures.get(t);if(o){let i=o.indexOf(e.texture);if(i!==-1){o.splice(i,1);let s=this.idleTextures.get(t);s||(s=[],this.idleTextures.set(t,s)),s.push(e.texture)}}}(!t||n)&&(Je.verbose("TextureManager",`Deleting texture of size ${e.width}x${e.height}`),this.glContext.deleteTexture(e.texture))}toTensorData(e,n){switch(e){case"int16":return n instanceof Int16Array?n:Int16Array.from(n);case"int32":return n instanceof Int32Array?n:Int32Array.from(n);case"int8":return n instanceof Int8Array?n:Int8Array.from(n);case"uint16":return n instanceof Uint16Array?n:Uint16Array.from(n);case"uint32":return n instanceof Uint32Array?n:Uint32Array.from(n);case"uint8":case"bool":return n instanceof Uint8Array?n:Uint8Array.from(n);case"float32":return n instanceof Float32Array?n:Float32Array.from(n);case"float64":return n instanceof Float64Array?n:Float64Array.from(n);default:throw new Error(`TensorData type ${e} is not supported`)}}toTextureData(e,n){if(n)return n instanceof Float32Array?n:new Float32Array(n)}toEncoderType(e){return"float"}clearActiveTextures(){this.glContext.clearActiveTextures()}}});var va,nm=R(()=>{"use strict";or();bd();Kc();Gh();tm();mu();rm();va=class{constructor(e,n){this.backend=e;this.context=n;this.layoutStrategy=new da(e.glContext.maxTextureSize),this.programManager=new ba(this.context.profiler,e.glContext,this.layoutStrategy),this.textureManager=new ya(e.glContext,this.layoutStrategy,this.context.profiler,{reuseTextures:e.textureCacheMode==="full"}),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache=new Map,this.pack=e.pack,this.pack2unpackMap=new Map,this.unpack2packMap=new Map}createInferenceHandler(){return new Qi(this)}onGraphInitialized(e){let n=e.getValues().filter(t=>t.from===-1&&t.tensor).map(t=>t.tensor.dataId);this.initializers=new Set(n)}isInitializer(e){return this.initializers?this.initializers.has(e):!1}addInitializer(e){this.initializers.add(e)}getTextureData(e,n){return n?this.packedTextureDataCache.get(e):this.unpackedTextureDataCache.get(e)}setTextureData(e,n,t=!1){Je.verbose("WebGLSessionHandler","Storing Texture data in cache"),t?this.packedTextureDataCache.set(e,n):this.unpackedTextureDataCache.set(e,n)}dispose(){this.programManager.dispose(),this.textureManager.clearActiveTextures(),this.packedTextureDataCache.forEach(e=>this.textureManager.releaseTexture(e,!0)),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache.forEach(e=>this.textureManager.releaseTexture(e,!0)),this.unpackedTextureDataCache=new Map}resolve(e,n,t){let o=gd(e,n,Vh);return{impl:o.opImpl,context:o.opInit?o.opInit(e,t):e}}}});function e2(r){let e=0;for(;e<r.length&&r[e]();++e);return e-1}var jo,om=R(()=>{"use strict";kt();Vo();Vo();Er();jo=class{constructor(e,n){this.frameBufferBound=!1;this.itemsToPoll=[];this.gl=e,this.version=n,this.getExtensions(),this.vertexbuffer=this.createVertexbuffer(),this.framebuffer=this.createFramebuffer(),this.queryVitalParameters()}allocateTexture(e,n,t,o){let i=this.gl,s=i.createTexture();i.bindTexture(i.TEXTURE_2D,s),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE);let a=o?t.encode(o,e*n):null;return i.texImage2D(i.TEXTURE_2D,0,t.internalFormat,e,n,0,t.format,t.textureType,a),this.checkError(),s}updateTexture(e,n,t,o,i){let s=this.gl;s.bindTexture(s.TEXTURE_2D,e);let a=o.encode(i,n*t);s.texSubImage2D(s.TEXTURE_2D,0,0,0,n,t,o.format,o.textureType,a),this.checkError()}attachFramebuffer(e,n,t){let o=this.gl;o.bindTexture(o.TEXTURE_2D,e),o.bindFramebuffer(o.FRAMEBUFFER,this.framebuffer),o.framebufferTexture2D(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,e,0),this.checkError(),o.viewport(0,0,n,t),o.scissor(0,0,n,t)}readTexture(e,n,t,o,i,s){let a=this.gl;s||(s=1),this.frameBufferBound||this.attachFramebuffer(e,n,t);let u=this.getEncoder(i,s),l=u.allocate(n*t);return a.bindTexture(a.TEXTURE_2D,e),a.framebufferTexture2D(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,e,0),a.readPixels(0,0,n,t,a.RGBA,u.textureType,l),this.checkError(),u.decode(l,o)}isFramebufferReady(){return!0}getActiveTexture(){let e=this.gl;return`TEXTURE${e.getParameter(this.gl.ACTIVE_TEXTURE)-e.TEXTURE0}`}getTextureBinding(){return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D)}getFramebufferBinding(){return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING)}setVertexAttributes(e,n){let t=this.gl;t.vertexAttribPointer(e,3,t.FLOAT,!1,20,0),t.enableVertexAttribArray(e),n!==-1&&(t.vertexAttribPointer(n,2,t.FLOAT,!1,20,12),t.enableVertexAttribArray(n)),this.checkError()}createProgram(e,n){let t=this.gl,o=t.createProgram();return t.attachShader(o,e),t.attachShader(o,n),t.linkProgram(o),o}compileShader(e,n){let t=this.gl,o=t.createShader(n);if(!o)throw new Error(`createShader() returned null with type ${n}`);if(t.shaderSource(o,e),t.compileShader(o),t.getShaderParameter(o,t.COMPILE_STATUS)===!1)throw new Error(`Failed to compile shader: ${t.getShaderInfoLog(o)}
Shader source:
${e}`);return o}deleteShader(e){this.gl.deleteShader(e)}bindTextureToUniform(e,n,t){let o=this.gl;o.activeTexture(o.TEXTURE0+n),this.checkError(),o.bindTexture(o.TEXTURE_2D,e),this.checkError(),o.uniform1i(t,n),this.checkError()}draw(){this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4),this.checkError()}checkError(){if(ve.debug){let e=this.gl,n=e.getError(),t="";switch(n){case e.NO_ERROR:return;case e.INVALID_ENUM:t="INVALID_ENUM";break;case e.INVALID_VALUE:t="INVALID_VALUE";break;case e.INVALID_OPERATION:t="INVALID_OPERATION";break;case e.INVALID_FRAMEBUFFER_OPERATION:t="INVALID_FRAMEBUFFER_OPERATION";break;case e.OUT_OF_MEMORY:t="OUT_OF_MEMORY";break;case e.CONTEXT_LOST_WEBGL:t="CONTEXT_LOST_WEBGL";break;default:t=`Unknown WebGL Error: ${n.toString(16)}`}throw new Error(t)}}deleteTexture(e){this.gl.deleteTexture(e)}deleteProgram(e){this.gl.deleteProgram(e)}getEncoder(e,n,t=0){if(this.version===2)return new Zi(this.gl,n);switch(e){case"float":return t===1||this.isRenderFloat32Supported?new Uo(this.gl,n):new Uo(this.gl,n,this.textureHalfFloatExtension.HALF_FLOAT_OES);case"int":throw new Error("not implemented");case"byte":return new Ji(this.gl,n);default:throw new Error(`Invalid dataType: ${e}`)}}clearActiveTextures(){let e=this.gl;for(let n=0;n<this.maxTextureImageUnits;++n)e.activeTexture(e.TEXTURE0+n),e.bindTexture(e.TEXTURE_2D,null)}dispose(){if(this.disposed)return;let e=this.gl;e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteFramebuffer(this.framebuffer),e.bindBuffer(e.ARRAY_BUFFER,null),e.deleteBuffer(this.vertexbuffer),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null),e.finish(),this.disposed=!0}createDefaultGeometry(){return new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0])}createVertexbuffer(){let e=this.gl,n=e.createBuffer();if(!n)throw new Error("createBuffer() returned null");let t=this.createDefaultGeometry();return e.bindBuffer(e.ARRAY_BUFFER,n),e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW),this.checkError(),n}createFramebuffer(){let e=this.gl.createFramebuffer();if(!e)throw new Error("createFramebuffer returned null");return e}queryVitalParameters(){let e=this.gl;if(this.isFloatTextureAttachableToFrameBuffer=this.checkFloatTextureAttachableToFrameBuffer(),this.isRenderFloat32Supported=this.checkRenderFloat32(),this.isFloat32DownloadSupported=this.checkFloat32Download(),this.version===1&&!this.textureHalfFloatExtension&&!this.isRenderFloat32Supported)throw new Error("both float32 and float16 TextureType are not supported");this.isBlendSupported=!this.isRenderFloat32Supported||this.checkFloat32Blend(),this.maxTextureSize=e.getParameter(e.MAX_TEXTURE_SIZE),this.maxTextureImageUnits=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),this.version}getExtensions(){this.version===2?(this.colorBufferFloatExtension=this.gl.getExtension("EXT_color_buffer_float"),this.disjointTimerQueryWebgl2Extension=this.gl.getExtension("EXT_disjoint_timer_query_webgl2")):(this.textureFloatExtension=this.gl.getExtension("OES_texture_float"),this.textureHalfFloatExtension=this.gl.getExtension("OES_texture_half_float"))}checkFloatTextureAttachableToFrameBuffer(){let e=this.gl,n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let t=this.version===2?e.RGBA32F:e.RGBA;e.texImage2D(e.TEXTURE_2D,0,t,1,1,0,e.RGBA,e.FLOAT,null);let o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(o),i}checkRenderFloat32(){if(this.version===2){if(!this.colorBufferFloatExtension)return!1}else if(!this.textureFloatExtension)return!1;return this.isFloatTextureAttachableToFrameBuffer}checkFloat32Download(){if(this.version===2){if(!this.colorBufferFloatExtension)return!1}else if(!this.textureFloatExtension||!this.gl.getExtension("WEBGL_color_buffer_float"))return!1;return this.isFloatTextureAttachableToFrameBuffer}checkFloat32Blend(){let e=this.gl,n,t,o,i,s;try{n=e.createTexture(),t=e.createFramebuffer(),e.bindTexture(e.TEXTURE_2D,n);let a=this.version===2?e.RGBA32F:e.RGBA;return e.texImage2D(e.TEXTURE_2D,0,a,1,1,0,e.RGBA,e.FLOAT,null),e.bindFramebuffer(e.FRAMEBUFFER,t),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0),e.enable(e.BLEND),o=e.createShader(e.VERTEX_SHADER),!o||(e.shaderSource(o,"void main(){}"),e.compileShader(o),i=e.createShader(e.FRAGMENT_SHADER),!i)||(e.shaderSource(i,"precision highp float;void main(){gl_FragColor=vec4(0.5);}"),e.compileShader(i),s=e.createProgram(),!s)?!1:(e.attachShader(s,o),e.attachShader(s,i),e.linkProgram(s),e.useProgram(s),e.drawArrays(e.POINTS,0,1),e.getError()===e.NO_ERROR)}finally{e.disable(e.BLEND),s&&e.deleteProgram(s),o&&e.deleteShader(o),i&&e.deleteShader(i),t&&(e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteFramebuffer(t)),n&&(e.bindTexture(e.TEXTURE_2D,null),e.deleteTexture(n))}}beginTimer(){if(this.version===2&&this.disjointTimerQueryWebgl2Extension){let e=this.gl,n=this.disjointTimerQueryWebgl2Extension,t=e.createQuery();return e.beginQuery(n.TIME_ELAPSED_EXT,t),t}else throw new Error("WebGL1 profiling currently not supported.")}endTimer(){if(this.version===2&&this.disjointTimerQueryWebgl2Extension){let e=this.gl,n=this.disjointTimerQueryWebgl2Extension;e.endQuery(n.TIME_ELAPSED_EXT);return}else throw new Error("WebGL1 profiling currently not supported")}isTimerResultAvailable(e){let n=!1,t=!1;if(this.version===2&&this.disjointTimerQueryWebgl2Extension){let o=this.gl,i=this.disjointTimerQueryWebgl2Extension;n=o.getQueryParameter(e,o.QUERY_RESULT_AVAILABLE),t=o.getParameter(i.GPU_DISJOINT_EXT)}else throw new Error("WebGL1 profiling currently not supported");return n&&!t}getTimerResult(e){let n=0;if(this.version===2){let t=this.gl;n=t.getQueryParameter(e,t.QUERY_RESULT),t.deleteQuery(e)}else throw new Error("WebGL1 profiling currently not supported");return n/1e6}async waitForQueryAndGetTime(e){return await Us(()=>this.isTimerResultAvailable(e)),this.getTimerResult(e)}async createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let n,t=e,o=t.fenceSync(t.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),o===null?n=()=>!0:n=()=>{let i=t.clientWaitSync(o,0,0);return i===t.ALREADY_SIGNALED||i===t.CONDITION_SATISFIED},{query:o,isFencePassed:n}}async pollFence(e){return new Promise(n=>{this.addItemToPoll(()=>e.isFencePassed(),()=>n())})}pollItems(){let e=e2(this.itemsToPoll.map(n=>n.isDoneFn));for(let n=0;n<=e;++n){let{resolveFn:t}=this.itemsToPoll[n];t()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}async addItemToPoll(e,n){this.itemsToPoll.push({isDoneFn:e,resolveFn:n}),!(this.itemsToPoll.length>1)&&await Us(()=>(this.pollItems(),this.itemsToPoll.length===0))}}});function bu(r){let e;if((!r||r==="webgl2")&&"webgl2"in oo?e=oo.webgl2:(!r||r==="webgl")&&"webgl"in oo&&(e=oo.webgl),!e)try{let t=r2();e=im(t,r)}catch{let o=t2();e=im(o,r)}r=r||e.version===1?"webgl":"webgl2";let n=e.gl;return oo[r]=e,n.isContextLost()?(delete oo[r],bu(r)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),e)}function im(r,e){let n={alpha:!1,depth:!1,antialias:!1,stencil:!1,preserveDrawingBuffer:!1,premultipliedAlpha:!1,failIfMajorPerformanceCaveat:!1},t,o=n;if((!e||e==="webgl2")&&(t=r.getContext("webgl2",o),t))try{return new jo(t,2)}catch(i){Je.warning("GlContextFactory",`failed to create WebGLContext using contextId 'webgl2'. Error: ${i}`)}if((!e||e==="webgl")&&(t=r.getContext("webgl",o)||r.getContext("experimental-webgl",o),t))try{return new jo(t,1)}catch(i){Je.warning("GlContextFactory",`failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${i}`)}throw new Error("WebGL is not supported")}function t2(){if(typeof document>"u")throw new TypeError("failed to create canvas: document is not supported");let r=document.createElement("canvas");return r.width=1,r.height=1,r}function r2(){if(typeof OffscreenCanvas>"u")throw new TypeError("failed to create offscreen canvas: OffscreenCanvas is not supported");return new OffscreenCanvas(1,1)}var oo,am=R(()=>{"use strict";or();om();oo={}});var wa,sm=R(()=>{"use strict";kt();or();nm();am();wa=class{get contextId(){return ve.webgl.contextId}set contextId(e){ve.webgl.contextId=e}get matmulMaxBatchSize(){return ve.webgl.matmulMaxBatchSize}set matmulMaxBatchSize(e){ve.webgl.matmulMaxBatchSize=e}get textureCacheMode(){return ve.webgl.textureCacheMode}set textureCacheMode(e){ve.webgl.textureCacheMode=e}get pack(){return ve.webgl.pack}set pack(e){ve.webgl.pack=e}get async(){return ve.webgl.async}set async(e){ve.webgl.async=e}initialize(){try{return this.glContext=bu(this.contextId),typeof this.matmulMaxBatchSize!="number"&&(this.matmulMaxBatchSize=16),typeof this.textureCacheMode!="string"&&(this.textureCacheMode="full"),typeof this.pack!="boolean"&&(this.pack=!1),typeof this.async!="boolean"&&(this.async=!1),Je.setWithEnv(ve),ve.webgl.context||Object.defineProperty(ve.webgl,"context",{value:this.glContext.gl}),Je.verbose("WebGLBackend",`Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${this.async}.`),!0}catch(e){return Je.warning("WebGLBackend",`Unable to initialize WebGLBackend. ${e}`),!1}}createSessionHandler(e){return new va(this,e)}dispose(){this.glContext.dispose()}}});async function yu(r){if(r){let e=typeof r=="string"?[r]:r;for(let n of e){let t=um.get(n);if(t)return t;let o=await o2(n);if(o)return o}}else return yu(["webgl"]);throw new Error("no available backend to use")}async function o2(r){let e=n2;if(typeof e[r]<"u"&&i2(e[r])){let n=e[r],t=n.initialize();if(typeof t=="object"&&"then"in t&&(t=await t),t)return um.set(r,n),n}}function i2(r){let e=r;return"initialize"in e&&typeof e.initialize=="function"&&"createSessionHandler"in e&&typeof e.createSessionHandler=="function"&&"dispose"in e&&typeof e.dispose=="function"}var um,n2,lm=R(()=>{"use strict";sm();um=new Map,n2={webgl:new wa}});var vu,xa,dm=R(()=>{"use strict";or();vu=class{constructor(e,n){this.op=e;this.node=n}},xa=class{constructor(e,n,t){this.graph=e;this.profiler=t;this.initialize(n)}initialize(e){this.profiler.event("session","ExecutionPlan.initialize",()=>{let n=this.graph.getNodes();if(n.length!==e.length)throw new Error("The size of nodes and OPs do not match.");this._ops=e.map((t,o)=>new vu(t,n[o])),this.reset(),this._starter=[],this._ops.forEach((t,o)=>{let i=!0;for(let s of t.node.inputs)if(!this._values[s]&&this.graph.getInputIndices().indexOf(s)===-1){i=!1;break}i&&this._starter.push(o)})})}reset(){this._values=this.graph.getValues().map(e=>e.tensor)}async execute(e,n){return this.profiler.event("session","ExecutionPlan.execute",async()=>{this.reset();let t=e.createInferenceHandler(),o=this.graph.getInputIndices();if(n.length!==o.length)throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${n.length} expected: ${o.length}`);n.forEach((d,p)=>{let m=o[p];this._values[m]=d});let i=this._starter.slice(0),s=this.graph.getValues(),a=this.graph.getNodes(),u=0;for(;u<i.length;){let d=i[u++],p=this._ops[d],m=p.node.inputs.map(A=>this._values[A]);if(m.indexOf(void 0)!==-1)throw new Error(`unresolved input detected: op: ${p.node}`);let y=m;Je.verbose("ExecPlan",`Runing op:${p.node.name} (${y.map((A,$)=>`'${p.node.inputs[$]}': ${A.type}[${A.dims.join(",")}]`).join(", ")})`);let b=await this.profiler.event("node",p.node.name,async()=>p.op.impl(t,y,p.op.context));if(b.length!==p.node.outputs.length)throw new Error("the size of output does not match model definition.");b.forEach((A,$)=>{let _=p.node.outputs[$];if(this._values[_])throw new Error(`output [${_}] already has value: op:${p.node.name}`);this._values[_]=A});let w=new Set;b.forEach((A,$)=>{let _=p.node.outputs[$];for(let O of s[_].to){let P=a[O],N=!0;for(let F of P.inputs)if(!this._values[F]){N=!1;break}N&&w.add(O)}}),i.push(...w)}let l=[];for(let d=0;d<this.graph.getOutputIndices().length;d++){let p=this.graph.getOutputIndices()[d],m=this._values[p];if(m===void 0)throw new Error(`required output [${p}] does not have value`);p===0?await m.getData():m.data,l.push(m)}return Je.verbose("ExecPlan","disposing of inferenceHandler"),t.dispose(),l})}}});var Le,cr,Ko,cm=R(()=>{"use strict";Ro();Le=qn(Xn());En();Xe();cr=fe.experimental.fbs,Ko=class r{constructor(e){if(this._attributes=new Map,e!=null){for(let n of e)n instanceof Le.onnx.AttributeProto?this._attributes.set(n.name,[r.getValue(n),r.getType(n)]):n instanceof cr.Attribute&&this._attributes.set(n.name(),[r.getValue(n),r.getType(n)]);if(this._attributes.size<e.length)throw new Error("duplicated attribute names")}}set(e,n,t){this._attributes.set(e,[t,n])}delete(e){this._attributes.delete(e)}getFloat(e,n){return this.get(e,"float",n)}getInt(e,n){return this.get(e,"int",n)}getString(e,n){return this.get(e,"string",n)}getTensor(e,n){return this.get(e,"tensor",n)}getFloats(e,n){return this.get(e,"floats",n)}getInts(e,n){return this.get(e,"ints",n)}getStrings(e,n){return this.get(e,"strings",n)}getTensors(e,n){return this.get(e,"tensors",n)}get(e,n,t){let o=this._attributes.get(e);if(o===void 0){if(t!==void 0)return t;throw new Error(`required attribute not found: ${e}`)}if(o[1]!==n)throw new Error(`type mismatch: expected ${n} but got ${o[1]}`);return o[0]}static getType(e){let n=e instanceof Le.onnx.AttributeProto?e.type:e.type();switch(n){case Le.onnx.AttributeProto.AttributeType.FLOAT:return"float";case Le.onnx.AttributeProto.AttributeType.INT:return"int";case Le.onnx.AttributeProto.AttributeType.STRING:return"string";case Le.onnx.AttributeProto.AttributeType.TENSOR:return"tensor";case Le.onnx.AttributeProto.AttributeType.FLOATS:return"floats";case Le.onnx.AttributeProto.AttributeType.INTS:return"ints";case Le.onnx.AttributeProto.AttributeType.STRINGS:return"strings";case Le.onnx.AttributeProto.AttributeType.TENSORS:return"tensors";default:throw new Error(`attribute type is not supported yet: ${Le.onnx.AttributeProto.AttributeType[n]}`)}}static getValue(e){let n=e instanceof Le.onnx.AttributeProto?e.type:e.type();if(n===Le.onnx.AttributeProto.AttributeType.GRAPH||n===Le.onnx.AttributeProto.AttributeType.GRAPHS)throw new Error("graph attribute is not supported yet");let t=this.getValueNoCheck(e);if(n===Le.onnx.AttributeProto.AttributeType.INT&&Jt.isLong(t))return Jt.longToNumber(t);if(n===Le.onnx.AttributeProto.AttributeType.INTS){let o=t,i=new Array(o.length);for(let s=0;s<o.length;s++){let a=o[s];i[s]=Jt.longToNumber(a)}return i}if(n===Le.onnx.AttributeProto.AttributeType.TENSOR)return e instanceof Le.onnx.AttributeProto?bt.fromProto(t):bt.fromOrtTensor(t);if(n===Le.onnx.AttributeProto.AttributeType.TENSORS){if(e instanceof Le.onnx.AttributeProto)return t.map(i=>bt.fromProto(i));if(e instanceof cr.Attribute)return t.map(i=>bt.fromOrtTensor(i))}return n===Le.onnx.AttributeProto.AttributeType.STRING&&e instanceof Le.onnx.AttributeProto?Fo(t):n===Le.onnx.AttributeProto.AttributeType.STRINGS&&e instanceof Le.onnx.AttributeProto?t.map(Fo):t}static getValueNoCheck(e){return e instanceof Le.onnx.AttributeProto?this.getValueNoCheckFromOnnxFormat(e):this.getValueNoCheckFromOrtFormat(e)}static getValueNoCheckFromOnnxFormat(e){switch(e.type){case Le.onnx.AttributeProto.AttributeType.FLOAT:return e.f;case Le.onnx.AttributeProto.AttributeType.INT:return e.i;case Le.onnx.AttributeProto.AttributeType.STRING:return e.s;case Le.onnx.AttributeProto.AttributeType.TENSOR:return e.t;case Le.onnx.AttributeProto.AttributeType.GRAPH:return e.g;case Le.onnx.AttributeProto.AttributeType.FLOATS:return e.floats;case Le.onnx.AttributeProto.AttributeType.INTS:return e.ints;case Le.onnx.AttributeProto.AttributeType.STRINGS:return e.strings;case Le.onnx.AttributeProto.AttributeType.TENSORS:return e.tensors;case Le.onnx.AttributeProto.AttributeType.GRAPHS:return e.graphs;default:throw new Error(`unsupported attribute type: ${Le.onnx.AttributeProto.AttributeType[e.type]}`)}}static getValueNoCheckFromOrtFormat(e){switch(e.type()){case cr.AttributeType.FLOAT:return e.f();case cr.AttributeType.INT:return e.i();case cr.AttributeType.STRING:return e.s();case cr.AttributeType.TENSOR:return e.t();case cr.AttributeType.GRAPH:return e.g();case cr.AttributeType.FLOATS:return e.floatsArray();case cr.AttributeType.INTS:{let n=[];for(let t=0;t<e.intsLength();t++)n.push(e.ints(t));return n}case cr.AttributeType.STRINGS:{let n=[];for(let t=0;t<e.stringsLength();t++)n.push(e.strings(t));return n}case cr.AttributeType.TENSORS:{let n=[];for(let t=0;t<e.tensorsLength();t++)n.push(e.tensors(t));return n}default:throw new Error(`unsupported attribute type: ${cr.AttributeType[e.type()]}`)}}}});var xu,_a,_u,kr,Ta,wu,fm=R(()=>{"use strict";cm();Ro();xu=qn(Xn());En();Xe();_a=fe.experimental.fbs,_u={from:(r,e)=>new wu(r,e)},kr=class{constructor(e){this._from=void 0,this._to=[],this.tensor=void 0,this.type=void 0,e&&(this.type=Pt.tensorValueTypeFromProto(e.type.tensorType))}get from(){return this._from}get to(){return this._to}},Ta=class{constructor(e,n){e instanceof xu.onnx.NodeProto?(this.name=e.name,this.opType=e.opType,this.attributes=new Ko(e.attribute)):e instanceof _a.Node&&(this.name=n??e.name(),this.opType=e.opType(),this.attributes=new Ko(Pt.tensorAttributesFromORTFormat(e))),this.inputs=[],this.outputs=[],this.executeNode=!0}},wu=class{constructor(e,n){if(!e)throw new TypeError("graph is empty");this.buildGraph(e),this.transformGraph(n),this.checkIsAcyclic()}getInputIndices(){return this._allInputIndices}getInputNames(){return this._allInputNames}getOutputIndices(){return this._allOutputIndices}getOutputNames(){return this._allOutputNames}getValues(){return this._allData}getNodes(){return this._nodes}buildGraph(e){if(e instanceof xu.onnx.GraphProto)this.buildGraphFromOnnxFormat(e);else if(e instanceof _a.Graph)this.buildGraphFromOrtFormat(e);else throw new TypeError("Graph type is not supported.")}buildGraphFromOnnxFormat(e){let n=new Map;this._allData=[],this._allInputIndices=[],this._allInputNames=[],this._allOutputIndices=[],this._allOutputNames=[],this._nodes=[];let t=new Map;if(!e.input)throw new Error("missing information in graph: input");let o=[];for(let i of e.input){if(n.has(i.name))throw new Error(`duplicated input name: ${i.name}`);let s=this._allData.push(new kr(i))-1;n.set(i.name,s),o.push(i.name)}if(!e.initializer)throw new Error("missing information in graph: initializer");for(let i of e.initializer){let s=n.get(i.name);if(s===void 0){let a=new kr;a.type={shape:{dims:Pt.tensorDimsFromProto(i.dims)},tensorType:Pt.tensorDataTypeFromProto(i.dataType)},s=this._allData.push(a)-1,n.set(i.name,s)}this._allData[s]._from=-1,this._allData[s].tensor=bt.fromProto(i)}for(let i=0;i<this._allData.length;i++)this._allData[i].tensor||(this._allInputIndices.push(i),this._allInputNames.push(o[i]));if(!e.output)throw new Error("missing information in graph: output");for(let i of e.output){if(n.has(i.name))throw new Error(`duplicated output name: ${i.name}`);let s=this._allData.push(new kr(i))-1;n.set(i.name,s),this._allOutputIndices.push(s),this._allOutputNames.push(i.name)}if(!e.node)throw new Error("missing information in graph: node");for(let i of e.node){if(!i.name)for(let a=0;;a++){let u=`unnamed_${i.opType}_${a}`;if(!t.has(u)){i.name=u;break}}if(t.has(i.name))throw new Error(`duplicated node name: ${i.name}`);let s=this._nodes.push(new Ta(i))-1;t.set(i.name,s)}for(let i=0;i<this._nodes.length;i++){let s=this._nodes[i],a=e.node[i];if(!a.output)throw new Error(`missing output for node: ${a.name}`);for(let u of a.output){let l=n.get(u);if(typeof l>"u"&&(l=this._allData.push(new kr)-1,n.set(u,l)),s.outputs.push(l),this._allData[l]._from!==void 0)throw new Error(`multiple nodes output to one data value: ${l}`);if(this._allData[l]._from=i,a.opType==="Constant"){if(!a.attribute||a.attribute.length!==1||!a.attribute[0].t)throw new Error("missing attributes or missing tensor value in attributes for this Constant operator");if(!a.output||a.output.length!==1)throw new Error("missing output or incorrect number of outputs for this Constant operator");s.outputs.pop(),s.executeNode=!1,this._allData[l]._from=-1,this._allData[l].tensor=bt.fromProto(a.attribute[0].t)}}}for(let i=0;i<this._nodes.length;i++){let s=this._nodes[i],a=e.node[i];if(!a.input)throw new Error(`missing input for node: ${a.name}`);for(let u of a.input){let l=n.get(u);if(typeof l>"u"){if(u===""&&(a.input.length===3||a.input.length===4)&&a.opType==="Resize")continue;throw new Error(`unrecognized input '${u}' for node: ${a.name}`)}s.inputs.push(l),this._allData[l]._to.push(i)}}return!0}buildGraphFromOrtFormat(e){let n=new Map;this._allData=[],this._allInputIndices=[],this._allInputNames=[],this._allOutputIndices=[],this._allOutputNames=[],this._nodes=[];let t=new Map,o=[];for(let i=0;i<e.inputsLength();i++){let s=e.inputs(i);if(n.has(s))throw new Error(`duplicated input name: ${s}`);for(let a=0;a<e.nodeArgsLength();a++)if(e.nodeArgs(a)?.name()===s){let u=new kr;if(e.nodeArgs(a)?.type()?.valueType()!==_a.TypeInfoValue.tensor_type)throw new Error("Unexpected value type for the nodeArg.");let d=e.nodeArgs(a).type().value(new _a.TensorTypeAndShape),p=Pt.tensorDataTypeFromProto(d.elemType()),m=d.shape(),y=[];for(let w=0;w<m.dimLength();w++)y.push(Jt.longToNumber(m.dim(w).value().dimValue()));u.type={shape:{dims:y},tensorType:p};let b=this._allData.push(u)-1;n.set(s,b),o.push(s)}}for(let i=0;i<e.initializersLength();i++){let s=e.initializers(i),a=n.get(s.name());if(a===void 0){let u=new kr,l=Pt.tensorDimsFromORTFormat(s),d=Pt.tensorDataTypeFromProto(s.dataType());u.type={shape:{dims:l},tensorType:d},a=this._allData.push(u)-1,n.set(s.name(),a)}this._allData[a]._from=-1,this._allData[a].tensor=bt.fromOrtTensor(s)}for(let i=0;i<this._allData.length;i++)this._allData[i].tensor||(this._allInputIndices.push(i),this._allInputNames.push(o[i]));for(let i=0;i<e.outputsLength();i++){let s=e.outputs(i);if(n.has(s))throw new Error(`duplicated output name: ${s}`);let a=this._allData.push(new kr)-1;n.set(s,a),this._allOutputIndices.push(a),this._allOutputNames.push(s)}if(!e.nodes)throw new Error("missing information in graph: node");for(let i=0;i<e.nodesLength();i++){let s=e.nodes(i),a=s.name();if(!a)for(let l=0;a=`unnamed_${s.opType()}_${l}`,!!t.has(a);l++);if(t.has(a))throw new Error(`duplicated node name: ${a}`);let u=this._nodes.push(new Ta(s,a))-1;t.set(a,u)}for(let i=0;i<this._nodes.length;i++){let s=this._nodes[i],a=e.nodes(i);if(a==null)throw new Error(`No node exists at index ${i}`);if(a?.outputsLength()===0)throw new Error(`missing output for node: ${a.name}`);for(let u=0;u<a?.outputsLength();u++){let l=a?.outputs(u),d=n.get(l);if(typeof d>"u"&&(d=this._allData.push(new kr)-1,n.set(l,d)),s.outputs.push(d),this._allData[d]._from!==void 0)throw new Error(`multiple nodes output to one data value: ${d}`);if(this._allData[d]._from=i,a.opType()==="Constant"){if(a.attributesLength()!==1||!a.attributes(0).t())throw new Error("missing attributes or missing tensor value in attributes for this Constant operator");if(a.outputsLength()!==1)throw new Error("missing output or incorrect number of outputs for this Constant operator");s.outputs.pop(),s.executeNode=!1,this._allData[d]._from=-1,this._allData[d].tensor=bt.fromOrtTensor(a.attributes(0).t())}}}for(let i=0;i<this._nodes.length;i++){let s=this._nodes[i],a=e.nodes(i);if(a.inputsLength()===0)throw new Error(`missing input for node: ${a.name}`);for(let u=0;u<a.inputsLength();u++){let l=a.inputs(u),d=n.get(l);if(typeof d>"u")throw new Error(`unrecognized input '${l}' for node: ${a.name()}`);s.inputs.push(d),this._allData[d]._to.push(i)}}}checkIsAcyclic(){let e=new Set;this._allInputIndices.forEach(o=>{this._allData[o]._to.forEach(s=>{e.add(s)})});let n=Array.from(e),t=new Array(this._nodes.length).fill("white");for(;n.length>0;){let o=n.pop();t[o]==="gray"?t[o]="black":(n.push(o),t[o]="gray",this._nodes[o].outputs.forEach(i=>{let s=this._allData[i];if(typeof s.tensor<"u")throw new Error("node outputs should not be initialized");if(s._from!==o)throw new Error("from property of the Value object doesn't match index of Node being processed");s._to.forEach(a=>{if(t[a]==="gray")throw new Error("model graph is cyclic");t[a]==="white"&&n.push(a)})}))}}transformGraph(e){this.removeAllIdentityNodes(),this.removeAllDropoutNodes(),this.fuseConvActivationNodes(),e&&e.transformGraph(this),this.finalizeGraph()}finalizeGraph(){let e=0,n=new Array(this._nodes.length,0),t=0;for(let o=0;o<this._nodes.length;o++)n[o]=t,this._nodes[o].executeNode?(t!==o&&(this._nodes[t]=this._nodes[o]),t++):this._nodes[o].outputs.forEach(i=>{this._allData[i]._from=-2});this._nodes.splice(t,this._nodes.length-t);for(let o=0;o<this._allData.length;o++){let i=this._allData[o];i._from!==void 0&&i._from!==-1&&i._from!==-2&&(i._from=n[i._from]);for(let s=0;s<i._to.length;s++)if(i._to[s]>=0)i._to[s]=n[i._to[s]];else throw new Error("Trying to update a removed node")}e=0;for(let o=0;o<this._allData.length;o++){if(this._allData[o].from===-2&&this._allOutputIndices.indexOf(o+e)===-1){e++,this._allData.splice(o,1),o--;continue}if(e>0){let i=-1;this._allData[o].from!==void 0&&this._allData[o].from!==-1?(i=this._nodes[this._allData[o].from].outputs.indexOf(o+e),i!==-1&&(this._nodes[this._allData[o].from].outputs[i]=o)):(i=this._allInputIndices.indexOf(o+e),i!==-1&&(this._allInputIndices[i]=o)),this._allData[o].to.forEach(s=>{i=this._nodes[s].inputs.indexOf(o+e),i!==-1&&(this._nodes[s].inputs[i]=o)}),this._allData[o].to.length===0&&(i=this._allOutputIndices.indexOf(o+e),i!==-1&&(this._allOutputIndices[i]=o))}}}deleteNode(e){let n=this._nodes[e];if(n.outputs.length>1){for(let a=1;a<n.outputs.length;a++)if(this._allData[n.outputs[a]].to.length>0)throw new Error("Node deletion with more than one output connected to other nodes is not supported. ")}n.executeNode=!1;let t=n.inputs[0],o=n.outputs[0],i=this._allData[o].to;for(let a=0;a<n.inputs.length;a++){let u=this._allData[n.inputs[a]].to.indexOf(e);if(u===-1)throw new Error("The Value object doesn't have the current Node in it's 'to' property ");this._allData[n.inputs[a]].to.splice(u,1)}this._allData[o]._to=[];let s=this._allOutputIndices.indexOf(o);if(s!==-1&&(this._allOutputIndices[s]=t),i&&i.length>0)for(let a of i){let u=this._nodes[a].inputs.indexOf(o);if(u===-1)throw new Error("The Node object doesn't have the output Value in it's 'inputs' property ");this._nodes[a].inputs[u]=t,this._allData[t].to.push(a)}}removeAllDropoutNodes(){let e=0;for(let n of this._nodes){if(n.opType==="Dropout"){if(n.inputs.length!==1)throw new Error("Dropout nodes should only contain one input. ");if(n.outputs.length!==1&&n.outputs.length!==2)throw new Error("Dropout nodes should contain either 1 or 2 output(s)");if(n.outputs.length===2&&this._allData[n.outputs[1]]._to.length!==0)throw new Error("Dropout nodes's second output should not be referenced by other nodes");this.deleteNode(e)}e++}}removeAllIdentityNodes(){let e=0;for(let n of this._nodes)n.opType==="Identity"&&this.deleteNode(e),e++}isActivation(e){switch(e.opType){case"Relu":case"Sigmoid":case"Clip":return!0;default:return!1}}fuseConvActivationNodes(){for(let e of this._nodes)if(e.opType==="Conv"){let n=this._allData[e.outputs[0]]._to;if(n.length===1&&this.isActivation(this._nodes[n[0]])){let t=this._nodes[n[0]];if(t.opType==="Clip")if(t.inputs.length===1)try{e.attributes.set("activation_params","floats",[t.attributes.getFloat("min"),t.attributes.getFloat("max")])}catch{e.attributes.set("activation_params","floats",[An,On])}else if(t.inputs.length>=3&&this._allData[t.inputs[1]].tensor!==void 0&&this._allData[t.inputs[2]].tensor!==void 0)e.attributes.set("activation_params","floats",[this._allData[t.inputs[1]].tensor.floatData[0],this._allData[t.inputs[2]].tensor.floatData[0]]);else continue;e.attributes.set("activation","string",t.opType),this.deleteNode(n[0])}}}}});var pm,a2,$a,hm=R(()=>{"use strict";Wi();fm();Ro();pm=qn(Xn());Xe();a2=fe.experimental.fbs,$a=class{constructor(){}load(e,n,t){if(!t)try{this.loadFromOnnxFormat(e,n);return}catch(o){if(t!==void 0)throw o}this.loadFromOrtFormat(e,n)}loadFromOnnxFormat(e,n){let t=pm.onnx.ModelProto.decode(e);if(Jt.longToNumber(t.irVersion)<3)throw new Error("only support ONNX model with IR_VERSION>=3");this._opsets=t.opsetImport.map(i=>({domain:i.domain,version:Jt.longToNumber(i.version)})),this._graph=_u.from(t.graph,n)}loadFromOrtFormat(e,n){let t=new B.ByteBuffer(e),o=a2.InferenceSession.getRootAsInferenceSession(t).model();if(Jt.longToNumber(o.irVersion())<3)throw new Error("only support ONNX model with IR_VERSION>=3");this._opsets=[];for(let s=0;s<o.opsetImportLength();s++){let a=o.opsetImport(s);this._opsets.push({domain:a?.domain(),version:Jt.longToNumber(a.version())})}this._graph=_u.from(o.graph(),n)}get graph(){return this._graph}get opsets(){return this._opsets}}});var Sa,mm=R(()=>{"use strict";lm();dm();or();hm();Sa=class{constructor(e={}){this._initialized=!1,this.backendHint=e.backendHint,this.profiler=Vi.create(e.profiler),this.context={profiler:this.profiler,graphInputTypes:[],graphInputDims:[]}}get inputNames(){return this._model.graph.getInputNames()}get outputNames(){return this._model.graph.getOutputNames()}startProfiling(){this.profiler.start()}endProfiling(){this.profiler.stop()}async loadModel(e,n,t){await this.profiler.event("session","Session.loadModel",async()=>{let o=await yu(this.backendHint);if(this.sessionHandler=o.createSessionHandler(this.context),this._model=new $a,typeof e=="string"){let i=e.endsWith(".ort");if(typeof process<"u"&&process.versions&&process.versions.node){let s=await(void 0)(e);this.initialize(s,i)}else{let a=await(await fetch(e)).arrayBuffer();this.initialize(new Uint8Array(a),i)}}else if(ArrayBuffer.isView(e))this.initialize(e);else{let i=new Uint8Array(e,n||0,t||e.byteLength);this.initialize(i)}})}initialize(e,n){if(this._initialized)throw new Error("already initialized");this.profiler.event("session","Session.initialize",()=>{let t=this.sessionHandler.transformGraph?this.sessionHandler:void 0;this._model.load(e,t,n),this.sessionHandler.onGraphInitialized&&this.sessionHandler.onGraphInitialized(this._model.graph),this.initializeOps(this._model.graph),this._executionPlan=new xa(this._model.graph,this._ops,this.profiler)}),this._initialized=!0}async run(e){if(!this._initialized)throw new Error("session not initialized yet");return this.profiler.event("session","Session.run",async()=>{let n=this.normalizeAndValidateInputs(e),t=await this._executionPlan.execute(this.sessionHandler,n);return this.createOutput(t)})}normalizeAndValidateInputs(e){let n=this._model.graph.getInputNames();if(Array.isArray(e)){if(e.length!==n.length)throw new Error(`incorrect input array length: expected ${n.length} but got ${e.length}`)}else{if(e.size!==n.length)throw new Error(`incorrect input map size: expected ${n.length} but got ${e.size}`);let t=new Array(e.size),o=0;for(let i=0;i<n.length;++i){let s=e.get(n[i]);if(!s)throw new Error(`missing input tensor for: '${name}'`);t[o++]=s}e=t}if(!this.context.graphInputTypes||this.context.graphInputTypes.length===0||!this.context.graphInputDims||this.context.graphInputDims.length===0){let t=this._model.graph.getInputIndices(),o=this._model.graph.getValues(),i=new Array(t.length);for(let s=0;s<t.length;++s){let a=o[t[s]];i[s]=a.type.shape.dims,this.context.graphInputTypes.push(a.type.tensorType),this.context.graphInputDims.push(e[s].dims)}this.validateInputTensorDims(i,e,!0)}else this.validateInputTensorDims(this.context.graphInputDims,e,!1);return this.validateInputTensorTypes(this.context.graphInputTypes,e),e}validateInputTensorTypes(e,n){for(let t=0;t<n.length;t++){let o=e[t],i=n[t].type;if(o!==i)throw new Error(`input tensor[${t}] check failed: expected type '${o}' but got ${i}`)}}validateInputTensorDims(e,n,t){for(let o=0;o<n.length;o++){let i=e[o],s=n[o].dims;if(!this.compareTensorDims(i,s,t))throw new Error(`input tensor[${o}] check failed: expected shape '[${i.join(",")}]' but got [${s.join(",")}]`)}}compareTensorDims(e,n,t){if(e.length!==n.length)return!1;for(let o=0;o<e.length;++o)if(e[o]!==n[o]&&(!t||e[o]!==0))return!1;return!0}createOutput(e){let n=this._model.graph.getOutputNames();if(e.length!==n.length)throw new Error("expected number of outputs do not match number of generated outputs");let t=new Map;for(let o=0;o<n.length;++o)t.set(n[o],e[o]);return t}initializeOps(e){let n=e.getNodes();this._ops=new Array(n.length);for(let t=0;t<n.length;t++)this._ops[t]=this.sessionHandler.resolve(n[t],this._model.opsets,e)}}});var Ia,gm=R(()=>{"use strict";kt();En();Ia=class{constructor(e){this.session=e;this.inputNames=this.session.inputNames,this.outputNames=this.session.outputNames}async dispose(){}async run(e,n,t){let o=new Map;for(let a in e)if(Object.hasOwnProperty.call(e,a)){let u=e[a];o.set(a,new bt(u.dims,u.type,void 0,void 0,u.data))}let i=await this.session.run(o),s={};return i.forEach((a,u)=>{s[u]=new _t(a.type,a.data,a.dims)}),s}startProfiling(){this.session.startProfiling()}endProfiling(){this.session.endProfiling()}}});var bm={};tn(bm,{onnxjsBackend:()=>u2});var Tu,u2,ym=R(()=>{"use strict";mm();gm();Tu=class{async init(){}async createInferenceSessionHandler(e,n){let t=new Sa(n);return typeof e=="string"?await t.loadModel(e):await t.loadModel(e),new Ia(t)}},u2=new Tu});var $u={};tn($u,{createReadStream:()=>vm,readFile:()=>l2,readFileSync:()=>d2});var l2,d2,vm,Su=R(()=>{l2=void 0,d2=void 0,vm=void 0});var Iu={};tn(Iu,{join:()=>c2});var c2,Au=R(()=>{c2=void 0});var _m=it((xm,Ou)=>{"use strict";var wm=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(e={}){var n=e,t,o;n.ready=new Promise((f,g)=>{t=f,o=g}),n.mountExternalData=(f,g)=>{(n.gb||(n.gb=new Map)).set(f,g)},n.unmountExternalData=()=>{delete n.gb},n.jsepInit=(f,g,x,S,k,U,j,Q,ie,re,_e)=>{n.Ib=f,n.vb=g,n.zb=x,n.ob=S,n.yb=k,n.Sa=U,n.Ab=j,n.Cb=Q,n.wb=ie,n.xb=re,n.Bb=_e,g=(ue,Ie,M)=>(...me)=>{let ke=zt,Ct=Ie?.();me=ue(...me);let jt=Ie?.();return Ct!==jt&&(ue=jt,M(Ct),Ie=M=null),zt!=ke?ci():me},x=ue=>async(...Ie)=>{try{if(n.fb)throw Error("Session already started");let M=n.fb={Db:Ie[0],errors:[]},me=await ue(...Ie);if(n.fb!==M)throw Error("Session mismatch");f.flush();let ke=M.errors;if(0<ke.length){let Ct=await Promise.all(ke);if(Ct=Ct.filter(jt=>jt),0<Ct.length)throw Error(Ct.join(`
`))}return me}finally{n.fb=null}},n._OrtCreateSession=g(n._OrtCreateSession,()=>n._OrtCreateSession,ue=>n._OrtCreateSession=ue),n._OrtRun=x(g(n._OrtRun,()=>n._OrtRun,ue=>n._OrtRun=ue)),n._OrtRunWithBinding=x(g(n._OrtRunWithBinding,()=>n._OrtRunWithBinding,ue=>n._OrtRunWithBinding=ue)),n._OrtBindInput=g(n._OrtBindInput,()=>n._OrtBindInput,ue=>n._OrtBindInput=ue),n.jsepRegisterBuffer=(ue,Ie,M,me)=>f.registerBuffer(ue,Ie,M,me),n.jsepGetBuffer=ue=>f.getBuffer(ue),n.jsepCreateDownloader=(ue,Ie,M)=>f.createDownloader(ue,Ie,M),n.jsepOnReleaseSession=ue=>{f.onReleaseSession(ue)},n.jsepOnRunStart=ue=>f.onRunStart(ue)};var i=Object.assign({},n),s="./this.program",a=(f,g)=>{throw g},u=typeof window=="object",l=typeof importScripts=="function",d=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",p="",m,y,b;if(d){var w=(Su(),Hr($u)),A=(Au(),Hr(Iu));p=l?A.dirname(p)+"/":__dirname+"/",m=(f,g)=>(f=be(f)?new URL(f):A.normalize(f),w.readFileSync(f,g?void 0:"utf8")),b=f=>(f=m(f,!0),f.buffer||(f=new Uint8Array(f)),f),y=(f,g,x,S=!0)=>{f=be(f)?new URL(f):A.normalize(f),w.readFile(f,S?void 0:"utf8",(k,U)=>{k?x(k):g(S?U.buffer:U)})},!n.thisProgram&&1<process.argv.length&&(s=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),a=(f,g)=>{throw process.exitCode=f,g},n.inspect=()=>"[Emscripten Module object]"}else(u||l)&&(l?p=self.location.href:typeof document<"u"&&document.currentScript&&(p=document.currentScript.src),r&&(p=r),p.indexOf("blob:")!==0?p=p.substr(0,p.replace(/[?#].*/,"").lastIndexOf("/")+1):p="",m=f=>{var g=new XMLHttpRequest;return g.open("GET",f,!1),g.send(null),g.responseText},l&&(b=f=>{var g=new XMLHttpRequest;return g.open("GET",f,!1),g.responseType="arraybuffer",g.send(null),new Uint8Array(g.response)}),y=(f,g,x)=>{var S=new XMLHttpRequest;S.open("GET",f,!0),S.responseType="arraybuffer",S.onload=()=>{S.status==200||S.status==0&&S.response?g(S.response):x()},S.onerror=x,S.send(null)});var $=console.log.bind(console),_=console.error.bind(console);Object.assign(n,i),i=null,typeof WebAssembly!="object"&&It("no native wasm support detected");var O,P=!1,N,F,G,J,le,z,q,tt,ot,Be,Pe;function xe(){var f=O.buffer;n.HEAP8=F=new Int8Array(f),n.HEAP16=J=new Int16Array(f),n.HEAPU8=G=new Uint8Array(f),n.HEAPU16=le=new Uint16Array(f),n.HEAP32=z=new Int32Array(f),n.HEAPU32=q=new Uint32Array(f),n.HEAPF32=tt=new Float32Array(f),n.HEAPF64=Pe=new Float64Array(f),n.HEAP64=ot=new BigInt64Array(f),n.HEAPU64=Be=new BigUint64Array(f)}var He=[],Ne=[],pe=[],Re=0,qe=null,Ze=null;function It(f){throw f="Aborted("+f+")",_(f),P=!0,N=1,f=new WebAssembly.RuntimeError(f+". Build with -sASSERTIONS for more info."),o(f),f}var X=f=>f.startsWith("data:application/octet-stream;base64,"),be=f=>f.startsWith("file://"),Oe;if(Oe="ort-wasm-simd.wasm",!X(Oe)){var pr=Oe;Oe=n.locateFile?n.locateFile(pr,p):p+pr}function At(f){if(b)return b(f);throw"both async and sync fetching of the wasm failed"}function mt(f){if(u||l){if(typeof fetch=="function"&&!be(f))return fetch(f,{credentials:"same-origin"}).then(g=>{if(!g.ok)throw"failed to load wasm binary file at '"+f+"'";return g.arrayBuffer()}).catch(()=>At(f));if(y)return new Promise((g,x)=>{y(f,S=>g(new Uint8Array(S)),x)})}return Promise.resolve().then(()=>At(f))}function Xr(f,g,x){return mt(f).then(S=>WebAssembly.instantiate(S,g)).then(S=>S).then(x,S=>{_(`failed to asynchronously prepare wasm: ${S}`),It(S)})}function wt(f,g){var x=Oe;return typeof WebAssembly.instantiateStreaming!="function"||X(x)||be(x)||d||typeof fetch!="function"?Xr(x,f,g):fetch(x,{credentials:"same-origin"}).then(S=>WebAssembly.instantiateStreaming(S,f).then(g,function(k){return _(`wasm streaming compile failed: ${k}`),_("falling back to ArrayBuffer instantiation"),Xr(x,f,g)}))}var gt={945680:(f,g,x,S)=>{if(typeof n>"u"||!n.gb)return 1;if(f=xt(f>>>0),f.startsWith("./")&&(f=f.substring(2)),f=n.gb.get(f),!f)return 2;if(g>>>=0,x>>>=0,g+x>f.byteLength)return 3;try{return G.set(f.subarray(g,g+x),S>>>0>>>0),0}catch{return 4}},946181:()=>{n.wb()},946212:()=>{n.xb()},946241:()=>{n.Bb()},946266:f=>n.vb(f),946299:f=>n.zb(f),946331:(f,g,x)=>{n.ob(f,g,x,!0)},946370:(f,g,x)=>{n.ob(f,g,x)},946403:f=>{n.Sa("Abs",f,void 0)},946454:f=>{n.Sa("Neg",f,void 0)},946505:f=>{n.Sa("Floor",f,void 0)},946558:f=>{n.Sa("Ceil",f,void 0)},946610:f=>{n.Sa("Reciprocal",f,void 0)},946668:f=>{n.Sa("Sqrt",f,void 0)},946720:f=>{n.Sa("Exp",f,void 0)},946771:f=>{n.Sa("Erf",f,void 0)},946822:f=>{n.Sa("Sigmoid",f,void 0)},946877:(f,g,x)=>{n.Sa("HardSigmoid",f,{alpha:g,beta:x})},946956:f=>{n.Sa("Log",f,void 0)},947007:f=>{n.Sa("Sin",f,void 0)},947058:f=>{n.Sa("Cos",f,void 0)},947109:f=>{n.Sa("Tan",f,void 0)},947160:f=>{n.Sa("Asin",f,void 0)},947212:f=>{n.Sa("Acos",f,void 0)},947264:f=>{n.Sa("Atan",f,void 0)},947316:f=>{n.Sa("Sinh",f,void 0)},947368:f=>{n.Sa("Cosh",f,void 0)},947420:f=>{n.Sa("Asinh",f,void 0)},947473:f=>{n.Sa("Acosh",f,void 0)},947526:f=>{n.Sa("Atanh",f,void 0)},947579:f=>{n.Sa("Tanh",f,void 0)},947631:f=>{n.Sa("Not",f,void 0)},947682:(f,g,x)=>{n.Sa("Clip",f,{min:g,max:x})},947751:f=>{n.Sa("Clip",f,void 0)},947803:(f,g)=>{n.Sa("Elu",f,{alpha:g})},947861:f=>{n.Sa("Relu",f,void 0)},947913:(f,g)=>{n.Sa("LeakyRelu",f,{alpha:g})},947977:(f,g)=>{n.Sa("ThresholdedRelu",f,{alpha:g})},948047:(f,g)=>{n.Sa("Cast",f,{to:g})},948105:f=>{n.Sa("Add",f,void 0)},948156:f=>{n.Sa("Sub",f,void 0)},948207:f=>{n.Sa("Mul",f,void 0)},948258:f=>{n.Sa("Div",f,void 0)},948309:f=>{n.Sa("Pow",f,void 0)},948360:f=>{n.Sa("Equal",f,void 0)},948413:f=>{n.Sa("Greater",f,void 0)},948468:f=>{n.Sa("GreaterOrEqual",f,void 0)},948530:f=>{n.Sa("Less",f,void 0)},948582:f=>{n.Sa("LessOrEqual",f,void 0)},948641:(f,g,x,S,k)=>{n.Sa("ReduceMean",f,{keepDims:!!g,noopWithEmptyAxes:!!x,axes:S?Array.from(z.subarray(S>>>0,k>>>0)):[]})},948800:(f,g,x,S,k)=>{n.Sa("ReduceMax",f,{keepDims:!!g,noopWithEmptyAxes:!!x,axes:S?Array.from(z.subarray(S>>>0,k>>>0)):[]})},948958:(f,g,x,S,k)=>{n.Sa("ReduceMin",f,{keepDims:!!g,noopWithEmptyAxes:!!x,axes:S?Array.from(z.subarray(S>>>0,k>>>0)):[]})},949116:(f,g,x,S,k)=>{n.Sa("ReduceProd",f,{keepDims:!!g,noopWithEmptyAxes:!!x,axes:S?Array.from(z.subarray(S>>>0,k>>>0)):[]})},949275:(f,g,x,S,k)=>{n.Sa("ReduceSum",f,{keepDims:!!g,noopWithEmptyAxes:!!x,axes:S?Array.from(z.subarray(S>>>0,k>>>0)):[]})},949433:(f,g,x,S,k)=>{n.Sa("ReduceL1",f,{keepDims:!!g,noopWithEmptyAxes:!!x,axes:S?Array.from(z.subarray(S>>>0,k>>>0)):[]})},949590:(f,g,x,S,k)=>{n.Sa("ReduceL2",f,{keepDims:!!g,noopWithEmptyAxes:!!x,axes:S?Array.from(z.subarray(S>>>0,k>>>0)):[]})},949747:(f,g,x,S,k)=>{n.Sa("ReduceLogSum",f,{keepDims:!!g,noopWithEmptyAxes:!!x,axes:S?Array.from(z.subarray(S>>>0,k>>>0)):[]})},949908:(f,g,x,S,k)=>{n.Sa("ReduceSumSquare",f,{keepDims:!!g,noopWithEmptyAxes:!!x,axes:S?Array.from(z.subarray(S>>>0,k>>>0)):[]})},950072:(f,g,x,S,k)=>{n.Sa("ReduceLogSumExp",f,{keepDims:!!g,noopWithEmptyAxes:!!x,axes:S?Array.from(z.subarray(S>>>0,k>>>0)):[]})},950236:f=>{n.Sa("Where",f,void 0)},950289:(f,g,x)=>{n.Sa("Transpose",f,{perm:g?Array.from(z.subarray(g>>>0,x>>>0)):[]})},950397:(f,g,x,S,k,U,j,Q,ie,re,_e,ue,Ie,M,me)=>{n.Sa("ConvTranspose",f,{format:ie?"NHWC":"NCHW",autoPad:g,dilations:[x],group:S,kernel_shape:[k],pads:[U,j],strides:[Q],wIsConst:()=>!!F[re>>>0],outputPadding:_e?Array.from(z.subarray(_e>>>0,ue>>>0)):[],outputShape:Ie?Array.from(z.subarray(Ie>>>0,M>>>0)):[],activation:xt(me)})},950799:(f,g,x,S,k,U,j,Q,ie,re,_e,ue,Ie,M)=>{n.Sa("ConvTranspose",f,{format:Q?"NHWC":"NCHW",autoPad:g,dilations:Array.from(z.subarray(x>>>0,(x>>>0)+2>>>0)),group:S,kernelShape:Array.from(z.subarray(k>>>0,(k>>>0)+2>>>0)),pads:Array.from(z.subarray(U>>>0,(U>>>0)+4>>>0)),strides:Array.from(z.subarray(j>>>0,(j>>>0)+2>>>0)),wIsConst:()=>!!F[ie>>>0],outputPadding:re?Array.from(z.subarray(re>>>0,_e>>>0)):[],outputShape:ue?Array.from(z.subarray(ue>>>0,Ie>>>0)):[],activation:xt(M)})},951364:(f,g,x,S,k,U,j,Q,ie,re,_e,ue,Ie,M,me)=>{n.Sa("ConvTranspose",f,{format:ie?"NHWC":"NCHW",autoPad:g,dilations:[x],group:S,kernel_shape:[k],pads:[U,j],strides:[Q],wIsConst:()=>!!F[re>>>0],outputPadding:_e?Array.from(z.subarray(_e>>>0,ue>>>0)):[],outputShape:Ie?Array.from(z.subarray(Ie>>>0,M>>>0)):[],activation:xt(me)})},951766:(f,g,x,S,k,U,j,Q,ie,re,_e,ue,Ie,M)=>{n.Sa("ConvTranspose",f,{format:Q?"NHWC":"NCHW",autoPad:g,dilations:Array.from(z.subarray(x>>>0,(x>>>0)+2>>>0)),group:S,kernelShape:Array.from(z.subarray(k>>>0,(k>>>0)+2>>>0)),pads:Array.from(z.subarray(U>>>0,(U>>>0)+4>>>0)),strides:Array.from(z.subarray(j>>>0,(j>>>0)+2>>>0)),wIsConst:()=>!!F[ie>>>0],outputPadding:re?Array.from(z.subarray(re>>>0,_e>>>0)):[],outputShape:ue?Array.from(z.subarray(ue>>>0,Ie>>>0)):[],activation:xt(M)})},952331:(f,g)=>{n.Sa("GlobalAveragePool",f,{format:g?"NHWC":"NCHW"})},952422:(f,g,x,S,k,U,j,Q,ie,re,_e,ue,Ie,M,me,ke)=>{n.Sa("AveragePool",f,{format:ke?"NHWC":"NCHW",auto_pad:g,ceil_mode:x,count_include_pad:S,storage_order:k,dilations:[U,j],kernel_shape:[Q,ie],pads:[re,_e,ue,Ie],strides:[M,me]})},952706:(f,g)=>{n.Sa("GlobalAveragePool",f,{format:g?"NHWC":"NCHW"})},952797:(f,g,x,S,k,U,j,Q,ie,re,_e,ue,Ie,M,me,ke)=>{n.Sa("AveragePool",f,{format:ke?"NHWC":"NCHW",auto_pad:g,ceil_mode:x,count_include_pad:S,storage_order:k,dilations:[U,j],kernel_shape:[Q,ie],pads:[re,_e,ue,Ie],strides:[M,me]})},953081:(f,g)=>{n.Sa("GlobalMaxPool",f,{format:g?"NHWC":"NCHW"})},953168:(f,g,x,S,k,U,j,Q,ie,re,_e,ue,Ie,M,me,ke)=>{n.Sa("MaxPool",f,{format:ke?"NHWC":"NCHW",auto_pad:g,ceil_mode:x,count_include_pad:S,storage_order:k,dilations:[U,j],kernel_shape:[Q,ie],pads:[re,_e,ue,Ie],strides:[M,me]})},953448:(f,g)=>{n.Sa("GlobalMaxPool",f,{format:g?"NHWC":"NCHW"})},953535:(f,g,x,S,k,U,j,Q,ie,re,_e,ue,Ie,M,me,ke)=>{n.Sa("MaxPool",f,{format:ke?"NHWC":"NCHW",auto_pad:g,ceil_mode:x,count_include_pad:S,storage_order:k,dilations:[U,j],kernel_shape:[Q,ie],pads:[re,_e,ue,Ie],strides:[M,me]})},953815:(f,g,x,S,k)=>{n.Sa("Gemm",f,{alpha:g,beta:x,transA:S,transB:k})},953919:f=>{n.Sa("MatMul",f,void 0)},953973:(f,g,x,S)=>{n.Sa("ArgMax",f,{keepDims:!!g,selectLastIndex:!!x,axis:S})},954081:(f,g,x,S)=>{n.Sa("ArgMin",f,{keepDims:!!g,selectLastIndex:!!x,axis:S})},954189:(f,g)=>{n.Sa("Softmax",f,{axis:g})},954252:(f,g)=>{n.Sa("Concat",f,{axis:g})},954312:(f,g,x,S,k)=>{n.Sa("Split",f,{axis:g,numOutputs:x,splitSizes:S?Array.from(z.subarray(S>>>0,k>>>0)):[]})},954452:f=>{n.Sa("Expand",f,void 0)},954506:(f,g)=>{n.Sa("Gather",f,{axis:Number(g)})},954577:(f,g)=>{n.Sa("GatherElements",f,{axis:Number(g)})},954656:(f,g,x,S,k,U,j,Q,ie,re,_e)=>{n.Sa("Resize",f,{antialias:g,axes:x?Array.from(z.subarray(x>>>0,S>>>0)):[],coordinateTransformMode:xt(k),cubicCoeffA:U,excludeOutside:j,extrapolationValue:Q,keepAspectRatioPolicy:xt(ie),mode:xt(re),nearestMode:xt(_e)})},955002:(f,g,x,S,k,U,j)=>{n.Sa("Slice",f,{starts:g?Array.from(z.subarray(g>>>0,x>>>0)):[],ends:S?Array.from(z.subarray(S>>>0,k>>>0)):[],axes:U?Array.from(z.subarray(U>>>0,j>>>0)):[]})},955218:f=>{n.Sa("Tile",f,void 0)},955270:(f,g,x)=>{n.Sa("LayerNormalization",f,{axis:Number(g),epsilon:Number(x)})},955377:(f,g,x)=>{n.Sa("InstanceNormalization",f,{epsilon:g,format:x?"NHWC":"NCHW"})},955491:(f,g,x)=>{n.Sa("InstanceNormalization",f,{epsilon:g,format:x?"NHWC":"NCHW"})},955605:f=>{n.Sa("Range",f,void 0)},955658:(f,g)=>{n.Sa("Einsum",f,{equation:xt(g)})},955739:(f,g,x,S,k)=>{n.Sa("Pad",f,{mode:g,value:x,pads:S?Array.from(z.subarray(S>>>0,k>>>0)):[]})},955866:(f,g,x,S,k,U)=>{n.Sa("BatchNormalization",f,{epsilon:g,momentum:x,spatial:!!k,trainingMode:!!S,format:U?"NHWC":"NCHW"})},956035:(f,g,x,S,k,U)=>{n.Sa("BatchNormalization",f,{epsilon:g,momentum:x,spatial:!!k,trainingMode:!!S,format:U?"NHWC":"NCHW"})},956204:(f,g,x)=>{n.Sa("CumSum",f,{exclusive:Number(g),reverse:Number(x)})},956301:(f,g,x,S,k,U,j,Q,ie)=>{n.Sa("Attention",f,{numHeads:g,isUnidirectional:x,maskFilterValue:S,scale:k,doRotary:U,qkvHiddenSizes:j?Array.from(z.subarray(Number(Q)>>>0,Number(Q)+j>>>0)):[],pastPresentShareBuffer:!!ie})},956573:f=>{n.Sa("Gelu",f,void 0)},956625:(f,g,x,S,k,U)=>{n.Sa("MultiHeadAttention",f,{numHeads:g,isUnidirectional:x,maskFilterValue:S,scale:k,doRotary:U})},956784:f=>{n.Sa("BiasAdd",f,void 0)},956839:f=>{n.Sa("BiasSplitGelu",f,void 0)},956900:(f,g)=>{n.Sa("SkipLayerNormalization",f,{epsilon:g})},956981:(f,g,x,S,k,U,j,Q,ie,re,_e,ue,Ie)=>{n.Sa("Conv",f,{format:ie?"NHWC":"NCHW",auto_pad:g,dilations:[x],group:S,kernel_shape:[k],pads:U?Array.from(z.subarray(U>>>0,j>>>0)):[],strides:[Q],w_is_const:()=>!!F[re>>>0],activation:xt(_e),activation_params:ue?Array.from(tt.subarray(ue>>>0,Ie>>>0)):[]})},957351:(f,g,x,S,k,U,j,Q,ie,re,_e,ue,Ie,M,me,ke)=>{n.Sa("Conv",f,{format:ue?"NHWC":"NCHW",auto_pad:g,dilations:[x,S],group:k,kernel_shape:[U,j],pads:Q?Array.from(z.subarray(Q>>>0,ie>>>0)):[],strides:[re,_e],w_is_const:()=>!!F[Ie>>>0],activation:xt(M),activation_params:me?Array.from(tt.subarray(me>>>0,ke>>>0)):[]})},957742:f=>{n.Ab(f)},957776:(f,g)=>n.Cb(f,g,n.fb.Db,n.fb.errors)};function Vr(f){this.name="ExitStatus",this.message=`Program terminated with exit(${f})`,this.status=f}function hr(f){this.cb=f-24,this.rb=function(g){q[this.cb+4>>>2>>>0]=g},this.qb=function(g){q[this.cb+8>>>2>>>0]=g},this.kb=function(g,x){this.jb(),this.rb(g),this.qb(x)},this.jb=function(){q[this.cb+16>>>2>>>0]=0}}var Zr=0,fn=0,co=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Jr=(f,g,x)=>{g>>>=0;var S=g+x;for(x=g;f[x]&&!(x>=S);)++x;if(16<x-g&&f.buffer&&co)return co.decode(f.subarray(g,x));for(S="";g<x;){var k=f[g++];if(k&128){var U=f[g++]&63;if((k&224)==192)S+=String.fromCharCode((k&31)<<6|U);else{var j=f[g++]&63;k=(k&240)==224?(k&15)<<12|U<<6|j:(k&7)<<18|U<<12|j<<6|f[g++]&63,65536>k?S+=String.fromCharCode(k):(k-=65536,S+=String.fromCharCode(55296|k>>10,56320|k&1023))}}else S+=String.fromCharCode(k)}return S},xt=(f,g)=>(f>>>=0)?Jr(G,f,g):"",Gr=f=>{for(var g=0,x=0;x<f.length;++x){var S=f.charCodeAt(x);127>=S?g++:2047>=S?g+=2:55296<=S&&57343>=S?(g+=4,++x):g+=3}return g},Sr=(f,g,x,S)=>{if(x>>>=0,!(0<S))return 0;var k=x;S=x+S-1;for(var U=0;U<f.length;++U){var j=f.charCodeAt(U);if(55296<=j&&57343>=j){var Q=f.charCodeAt(++U);j=65536+((j&1023)<<10)|Q&1023}if(127>=j){if(x>=S)break;g[x++>>>0]=j}else{if(2047>=j){if(x+1>=S)break;g[x++>>>0]=192|j>>6}else{if(65535>=j){if(x+2>=S)break;g[x++>>>0]=224|j>>12}else{if(x+3>=S)break;g[x++>>>0]=240|j>>18,g[x++>>>0]=128|j>>12&63}g[x++>>>0]=128|j>>6&63}g[x++>>>0]=128|j&63}}return g[x>>>0]=0,x-k},fo=f=>{if(f===null)return"null";var g=typeof f;return g==="object"||g==="array"||g==="function"?f.toString():""+f},oi,Wt=f=>{for(var g="";G[f>>>0];)g+=oi[G[f++>>>0]];return g},po={},pn={},ho={},rr;function ii(f,g,x={}){var S=g.name;if(!f)throw new rr(`type "${S}" must have a positive integer typeid pointer`);if(pn.hasOwnProperty(f)){if(x.tb)return;throw new rr(`Cannot register type '${S}' twice`)}pn[f]=g,delete ho[f],po.hasOwnProperty(f)&&(g=po[f],delete po[f],g.forEach(k=>k()))}function Ot(f,g,x={}){if(!("argPackAdvance"in g))throw new TypeError("registerType registeredInstance requires argPackAdvance");ii(f,g,x)}var mo=(f,g,x)=>{switch(g){case 1:return x?S=>F[S>>>0>>>0]:S=>G[S>>>0>>>0];case 2:return x?S=>J[S>>>1>>>0]:S=>le[S>>>1>>>0];case 4:return x?S=>z[S>>>2>>>0]:S=>q[S>>>2>>>0];case 8:return x?S=>ot[S>>>3]:S=>Be[S>>>3];default:throw new TypeError(`invalid integer width (${g}): ${f}`)}};function go(){this.$a=[void 0],this.nb=[]}var et=new go;function bo(f){f>>>=0,f>=et.cb&&--et.get(f).pb===0&&et.jb(f)}var ze=f=>{if(!f)throw new rr("Cannot use deleted val. handle = "+f);return et.get(f).value},Ht=f=>{switch(f){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return et.kb({pb:1,value:f})}};function Nn(f){return this.fromWireType(z[f>>>2>>>0])}var yo=(f,g)=>{switch(g){case 4:return function(x){return this.fromWireType(tt[x>>>2>>>0])};case 8:return function(x){return this.fromWireType(Pe[x>>>3>>>0])};default:throw new TypeError(`invalid float width (${g}): ${f}`)}};function ns(f){return this.fromWireType(q[f>>>2>>>0])}var vo=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,os=(f,g)=>{for(var x=f>>1,S=x+g/2;!(x>=S)&&le[x>>>0];)++x;if(x<<=1,32<x-f&&vo)return vo.decode(G.subarray(f>>>0,x>>>0));for(x="",S=0;!(S>=g/2);++S){var k=J[f+2*S>>>1>>>0];if(k==0)break;x+=String.fromCharCode(k)}return x},$e=(f,g,x)=>{if(x??=2147483647,2>x)return 0;x-=2;var S=g;x=x<2*f.length?x/2:f.length;for(var k=0;k<x;++k)J[g>>>1>>>0]=f.charCodeAt(k),g+=2;return J[g>>>1>>>0]=0,g-S},Mn=f=>2*f.length,ai=(f,g)=>{for(var x=0,S="";!(x>=g/4);){var k=z[f+4*x>>>2>>>0];if(k==0)break;++x,65536<=k?(k-=65536,S+=String.fromCharCode(55296|k>>10,56320|k&1023)):S+=String.fromCharCode(k)}return S},is=(f,g,x)=>{if(g>>>=0,x??=2147483647,4>x)return 0;var S=g;x=S+x-4;for(var k=0;k<f.length;++k){var U=f.charCodeAt(k);if(55296<=U&&57343>=U){var j=f.charCodeAt(++k);U=65536+((U&1023)<<10)|j&1023}if(z[g>>>2>>>0]=U,g+=4,g+4>x)break}return z[g>>>2>>>0]=0,g-S},si=f=>{for(var g=0,x=0;x<f.length;++x){var S=f.charCodeAt(x);55296<=S&&57343>=S&&++x,g+=4}return g},wo=(f,g)=>{var x=pn[f];if(x===void 0)throw f=bn(f),x=Wt(f),qt(f),new rr(g+" has unknown type "+x);return x},xo=(f,g,x)=>{var S=[];return f=f.toWireType(S,x),S.length&&(q[g>>>2>>>0]=Ht(S)),f},hn=f=>{try{f()}catch(g){It(g)}};function ui(){var f=we,g={};for(let[x,S]of Object.entries(f))g[x]=typeof S=="function"?function(){Qr.push(x);try{return S.apply(null,arguments)}finally{P||(Qr.pop(),zt&&mr===1&&Qr.length===0&&(mr=0,hn(Ti),typeof Fibers<"u"&&Fibers.Kb()))}}:S;return g}var mr=0,zt=null,_o=0,Qr=[],To={},$o={},li=0,Ln=null,di=[];function ci(){return new Promise((f,g)=>{Ln={resolve:f,reject:g}})}function fi(){var f=en(65548),g=f+12;q[f>>>2>>>0]=g,q[f+4>>>2>>>0]=g+65536,g=Qr[0];var x=To[g];return x===void 0&&(x=li++,To[g]=x,$o[x]=g),z[f+8>>>2>>>0]=x,f}function pi(f){if(!P){if(mr===0){var g=!1,x=!1;f((S=0)=>{if(!P&&(_o=S,g=!0,x)){mr=2,hn(()=>gr(zt)),typeof Browser<"u"&&Browser.lb.sb&&Browser.lb.resume(),S=!1;try{var k=(0,we[$o[z[zt+8>>>2>>>0]]])()}catch(Q){k=Q,S=!0}var U=!1;if(!zt){var j=Ln;j&&(Ln=null,(S?j.reject:j.resolve)(k),U=!0)}if(S&&!U)throw k}}),x=!0,g||(mr=1,zt=fi(),typeof Browser<"u"&&Browser.lb.sb&&Browser.lb.pause(),hn(()=>yn(zt)))}else mr===2?(mr=0,hn(tr),qt(zt),zt=null,di.forEach(S=>{if(!P)try{S();try{N=N=S=N,n.onExit?.(S),P=!0,a(S,new Vr(S))}catch(k){k instanceof Vr||k=="unwind"||a(1,k)}}catch(k){k instanceof Vr||k=="unwind"||a(1,k)}})):It(`invalid state: ${mr}`);return _o}}function So(f){return pi(g=>{f().then(g)})}var mn=[],hi={},Fn=f=>{var g=hi[f];return g===void 0?Wt(f):g},Io=()=>typeof globalThis=="object"?globalThis:Function("return this")(),er=f=>{var g=mn.length;return mn.push(f),g},Ao=(f,g)=>{for(var x=Array(f),S=0;S<f;++S)x[S]=wo(q[g+4*S>>>2>>>0],"parameter "+S);return x},Un=(f,g)=>Object.defineProperty(g,"name",{value:f});function as(f){var g=Function;if(!(g instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof g} which is not a function`);var x=Un(g.name||"unknownFunctionName",function(){});return x.prototype=g.prototype,x=new x,f=g.apply(x,f),f instanceof Object?f:x}var Nt=f=>f%4===0&&(f%100!==0||f%400===0),mi=[0,31,60,91,121,152,182,213,244,274,305,335],nr=[0,31,59,90,120,151,181,212,243,273,304,334],Oo=f=>{var g=Gr(f)+1,x=en(g);return x&&Sr(f,G,x,g),x},Vn=[],Mt=(f,g)=>{Vn.length=0;for(var x;x=G[f++>>>0];){var S=x!=105;S&=x!=112,g+=S&&g%8?4:0,Vn.push(x==112?q[g>>>2>>>0]:x==106?ot[g>>>3]:x==105?z[g>>>2>>>0]:Pe[g>>>3>>>0]),g+=S?8:4}return Vn},gn={},Et=()=>{if(!Lt){var f={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:s||"./this.program"},g;for(g in gn)gn[g]===void 0?delete f[g]:f[g]=gn[g];var x=[];for(g in f)x.push(`${g}=${f[g]}`);Lt=x}return Lt},Lt,gi=[null,[],[]],bi=[31,29,31,30,31,30,31,31,30,31,30,31],yi=[31,28,31,30,31,30,31,31,30,31,30,31];function vi(f){var g=Array(Gr(f)+1);return Sr(f,g,0,g.length),g}function wi(f,g,x,S){function k(M,me,ke){for(M=typeof M=="number"?M.toString():M||"";M.length<me;)M=ke[0]+M;return M}function U(M,me){return k(M,me,"0")}function j(M,me){function ke(jt){return 0>jt?-1:0<jt?1:0}var Ct;return(Ct=ke(M.getFullYear()-me.getFullYear()))===0&&(Ct=ke(M.getMonth()-me.getMonth()))===0&&(Ct=ke(M.getDate()-me.getDate())),Ct}function Q(M){switch(M.getDay()){case 0:return new Date(M.getFullYear()-1,11,29);case 1:return M;case 2:return new Date(M.getFullYear(),0,3);case 3:return new Date(M.getFullYear(),0,2);case 4:return new Date(M.getFullYear(),0,1);case 5:return new Date(M.getFullYear()-1,11,31);case 6:return new Date(M.getFullYear()-1,11,30)}}function ie(M){var me=M.ab;for(M=new Date(new Date(M.bb+1900,0,1).getTime());0<me;){var ke=M.getMonth(),Ct=(Nt(M.getFullYear())?bi:yi)[ke];if(me>Ct-M.getDate())me-=Ct-M.getDate()+1,M.setDate(1),11>ke?M.setMonth(ke+1):(M.setMonth(0),M.setFullYear(M.getFullYear()+1));else{M.setDate(M.getDate()+me);break}}return ke=new Date(M.getFullYear()+1,0,4),me=Q(new Date(M.getFullYear(),0,4)),ke=Q(ke),0>=j(me,M)?0>=j(ke,M)?M.getFullYear()+1:M.getFullYear():M.getFullYear()-1}f>>>=0,g>>>=0,x>>>=0,S>>>=0;var re=q[S+40>>>2>>>0];S={Gb:z[S>>>2>>>0],Fb:z[S+4>>>2>>>0],hb:z[S+8>>>2>>>0],mb:z[S+12>>>2>>>0],ib:z[S+16>>>2>>>0],bb:z[S+20>>>2>>>0],Wa:z[S+24>>>2>>>0],ab:z[S+28>>>2>>>0],Jb:z[S+32>>>2>>>0],Eb:z[S+36>>>2>>>0],Hb:re?xt(re):""},x=xt(x),re={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var _e in re)x=x.replace(new RegExp(_e,"g"),re[_e]);var ue="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Ie="January February March April May June July August September October November December".split(" ");re={"%a":M=>ue[M.Wa].substring(0,3),"%A":M=>ue[M.Wa],"%b":M=>Ie[M.ib].substring(0,3),"%B":M=>Ie[M.ib],"%C":M=>U((M.bb+1900)/100|0,2),"%d":M=>U(M.mb,2),"%e":M=>k(M.mb,2," "),"%g":M=>ie(M).toString().substring(2),"%G":M=>ie(M),"%H":M=>U(M.hb,2),"%I":M=>(M=M.hb,M==0?M=12:12<M&&(M-=12),U(M,2)),"%j":M=>{for(var me=0,ke=0;ke<=M.ib-1;me+=(Nt(M.bb+1900)?bi:yi)[ke++]);return U(M.mb+me,3)},"%m":M=>U(M.ib+1,2),"%M":M=>U(M.Fb,2),"%n":()=>`
`,"%p":M=>0<=M.hb&&12>M.hb?"AM":"PM","%S":M=>U(M.Gb,2),"%t":()=>"	","%u":M=>M.Wa||7,"%U":M=>U(Math.floor((M.ab+7-M.Wa)/7),2),"%V":M=>{var me=Math.floor((M.ab+7-(M.Wa+6)%7)/7);if(2>=(M.Wa+371-M.ab-2)%7&&me++,me)me==53&&(ke=(M.Wa+371-M.ab)%7,ke==4||ke==3&&Nt(M.bb)||(me=1));else{me=52;var ke=(M.Wa+7-M.ab-1)%7;(ke==4||ke==5&&Nt(M.bb%400-1))&&me++}return U(me,2)},"%w":M=>M.Wa,"%W":M=>U(Math.floor((M.ab+7-(M.Wa+6)%7)/7),2),"%y":M=>(M.bb+1900).toString().substring(2),"%Y":M=>M.bb+1900,"%z":M=>{M=M.Eb;var me=0<=M;return M=Math.abs(M)/60,(me?"+":"-")+("0000"+(M/60*100+M%60)).slice(-4)},"%Z":M=>M.Hb,"%%":()=>"%"},x=x.replace(/%%/g,"\0\0");for(_e in re)x.includes(_e)&&(x=x.replace(new RegExp(_e,"g"),re[_e](S)));return x=x.replace(/\0\0/g,"%"),_e=vi(x),_e.length>g?0:(F.set(_e,f>>>0),_e.length-1)}for(var xi=Array(256),Gn=0;256>Gn;++Gn)xi[Gn]=String.fromCharCode(Gn);oi=xi,rr=n.BindingError=class extends Error{constructor(f){super(f),this.name="BindingError"}},n.InternalError=class extends Error{constructor(f){super(f),this.name="InternalError"}},Object.assign(go.prototype,{get(f){return this.$a[f]},has(f){return this.$a[f]!==void 0},kb(f){var g=this.nb.pop()||this.$a.length;return this.$a[g]=f,g},jb(f){this.$a[f]=void 0,this.nb.push(f)}}),et.$a.push({value:void 0},{value:null},{value:!0},{value:!1}),et.cb=et.$a.length,n.count_emval_handles=()=>{for(var f=0,g=et.cb;g<et.$a.length;++g)et.$a[g]!==void 0&&++f;return f};var ss={ia:function(f,g,x){return So(async()=>{await n.yb(f,g,x)})},a:function(f,g,x){throw f>>>=0,new hr(f).kb(g>>>0,x>>>0),Zr=f,fn++,Zr},x:function(){return 0},ba:function(){},O:function(){},Q:function(){},ca:function(){return 0},$:function(){},W:function(){},_:function(){},D:function(){},P:function(){},M:function(){},aa:function(){},N:function(){},G:function(f,g,x,S,k){g>>>=0,g=Wt(g);var U=g.indexOf("u")!=-1;U&&(k=(1n<<64n)-1n),Ot(f>>>0,{name:g,fromWireType:j=>j,toWireType:function(j,Q){if(typeof Q!="bigint"&&typeof Q!="number")throw new TypeError(`Cannot convert "${fo(Q)}" to ${this.name}`);if(Q<S||Q>k)throw new TypeError(`Passing a number "${fo(Q)}" from JS side to C/C++ side to an argument of type "${g}", which is outside the valid range [${S}, ${k}]!`);return Q},argPackAdvance:8,readValueFromPointer:mo(g,x>>>0,!U),eb:null})},ga:function(f,g,x,S){g=Wt(g>>>0),Ot(f>>>0,{name:g,fromWireType:function(k){return!!k},toWireType:function(k,U){return U?x:S},argPackAdvance:8,readValueFromPointer:function(k){return this.fromWireType(G[k>>>0])},eb:null})},fa:function(f,g){g=Wt(g>>>0),Ot(f>>>0,{name:g,fromWireType:x=>{var S=ze(x);return bo(x),S},toWireType:(x,S)=>Ht(S),argPackAdvance:8,readValueFromPointer:Nn,eb:null})},F:function(f,g,x){g=Wt(g>>>0),Ot(f>>>0,{name:g,fromWireType:S=>S,toWireType:(S,k)=>k,argPackAdvance:8,readValueFromPointer:yo(g,x>>>0),eb:null})},t:function(f,g,x,S,k){if(f>>>=0,x>>>=0,g=Wt(g>>>0),k===-1&&(k=4294967295),k=Q=>Q,S===0){var U=32-8*x;k=Q=>Q<<U>>>U}var j=g.includes("unsigned")?function(Q,ie){return ie>>>0}:function(Q,ie){return ie};Ot(f,{name:g,fromWireType:k,toWireType:j,argPackAdvance:8,readValueFromPointer:mo(g,x,S!==0),eb:null})},n:function(f,g,x){function S(U){return new k(F.buffer,q[U+4>>>2>>>0],q[U>>>2>>>0])}var k=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][g];x=Wt(x>>>0),Ot(f>>>0,{name:x,fromWireType:S,argPackAdvance:8,readValueFromPointer:S},{tb:!0})},H:function(f,g){g=Wt(g>>>0);var x=g==="std::string";Ot(f>>>0,{name:g,fromWireType:function(S){var k=q[S>>>2>>>0],U=S+4;if(x)for(var j=U,Q=0;Q<=k;++Q){var ie=U+Q;if(Q==k||G[ie>>>0]==0){if(j=xt(j,ie-j),re===void 0)var re=j;else re+=String.fromCharCode(0),re+=j;j=ie+1}}else{for(re=Array(k),Q=0;Q<k;++Q)re[Q]=String.fromCharCode(G[U+Q>>>0]);re=re.join("")}return qt(S),re},toWireType:function(S,k){k instanceof ArrayBuffer&&(k=new Uint8Array(k));var U=typeof k=="string";if(!(U||k instanceof Uint8Array||k instanceof Uint8ClampedArray||k instanceof Int8Array))throw new rr("Cannot pass non-string to std::string");var j=x&&U?Gr(k):k.length,Q=en(4+j+1),ie=Q+4;if(q[Q>>>2>>>0]=j,x&&U)Sr(k,G,ie,j+1);else if(U)for(U=0;U<j;++U){var re=k.charCodeAt(U);if(255<re)throw qt(ie),new rr("String has UTF-16 code units that do not fit in 8 bits");G[ie+U>>>0]=re}else for(U=0;U<j;++U)G[ie+U>>>0]=k[U];return S!==null&&S.push(qt,Q),Q},argPackAdvance:8,readValueFromPointer:ns,eb(S){qt(S)}})},z:function(f,g,x){if(g>>>=0,x>>>=0,x=Wt(x),g===2)var S=os,k=$e,U=Mn,j=()=>le,Q=1;else g===4&&(S=ai,k=is,U=si,j=()=>q,Q=2);Ot(f>>>0,{name:x,fromWireType:ie=>{for(var re=q[ie>>>2>>>0],_e=j(),ue,Ie=ie+4,M=0;M<=re;++M){var me=ie+4+M*g;(M==re||_e[me>>>Q]==0)&&(Ie=S(Ie,me-Ie),ue===void 0?ue=Ie:(ue+=String.fromCharCode(0),ue+=Ie),Ie=me+g)}return qt(ie),ue},toWireType:(ie,re)=>{if(typeof re!="string")throw new rr(`Cannot pass non-string to C++ string type ${x}`);var _e=U(re),ue=en(4+_e+g);return q[ue>>>2]=_e>>Q,k(re,ue+4,_e+g),ie!==null&&ie.push(qt,ue),ue},argPackAdvance:8,readValueFromPointer:Nn,eb(ie){qt(ie)}})},ha:function(f,g){g=Wt(g>>>0),Ot(f>>>0,{ub:!0,name:g,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},da:()=>1,s:function(f,g,x){return g>>>=0,x>>>=0,f=ze(f>>>0),g=wo(g,"emval::as"),xo(g,x,f)},w:function(f){return f>>>=0,So(()=>(f=ze(f),f.then(Ht)))},o:function(f,g,x,S){return x>>>=0,S>>>=0,f=mn[f>>>0],g=ze(g>>>0),f(null,g,x,S)},k:function(f,g,x,S,k){return x>>>=0,S>>>=0,k>>>=0,f=mn[f>>>0],g=ze(g>>>0),x=Fn(x),f(g,g[x],S,k)},b:bo,A:function(f,g){return g>>>=0,f=ze(f>>>0),g=ze(g),f==g},m:function(f){return f>>>=0,f===0?Ht(Io()):(f=Fn(f),Ht(Io()[f]))},i:function(f,g,x){g=Ao(f,g>>>0);var S=g.shift();f--;var k=`return function (obj, func, destructorsRef, args) {
`,U=0,j=[];x===0&&j.push("obj");for(var Q=["retType"],ie=[S],re=0;re<f;++re)j.push("arg"+re),Q.push("argType"+re),ie.push(g[re]),k+=`  var arg${re} = argType${re}.readValueFromPointer(args${U?"+"+U:""});
`,U+=g[re].argPackAdvance;for(k+=`  var rv = ${x===1?"new func":"func.call"}(${j.join(", ")});
`,re=0;re<f;++re)g[re].deleteObject&&(k+=`  argType${re}.deleteObject(arg${re});
`);return S.ub||(Q.push("emval_returnValue"),ie.push(xo),k+=`  return emval_returnValue(retType, destructorsRef, rv);
`),Q.push(k+`};
`),f=as(Q).apply(null,ie),x=`methodCaller<(${g.map(_e=>_e.name).join(", ")}) => ${S.name}>`,er(Un(x,f))},r:function(f,g){return g>>>=0,f=ze(f>>>0),g=ze(g),Ht(f[g])},f:function(f){f>>>=0,4<f&&(et.get(f).pb+=1)},u:function(){return Ht([])},l:function(f){f=ze(f>>>0);for(var g=Array(f.length),x=0;x<f.length;x++)g[x]=f[x];return Ht(g)},e:function(f){return Ht(Fn(f>>>0))},j:function(){return Ht({})},h:function(f){f>>>=0;for(var g=ze(f);g.length;){var x=g.pop();g.pop()(x)}bo(f)},g:function(f,g,x){g>>>=0,x>>>=0,f=ze(f>>>0),g=ze(g),x=ze(x),f[g]=x},c:function(f,g){return g>>>=0,f=wo(f>>>0,"_emval_take_value"),f=f.readValueFromPointer(g),Ht(f)},T:function(f,g){f=-9007199254740992>f||9007199254740992<f?NaN:Number(f),g>>>=0,f=new Date(1e3*f),z[g>>>2>>>0]=f.getUTCSeconds(),z[g+4>>>2>>>0]=f.getUTCMinutes(),z[g+8>>>2>>>0]=f.getUTCHours(),z[g+12>>>2>>>0]=f.getUTCDate(),z[g+16>>>2>>>0]=f.getUTCMonth(),z[g+20>>>2>>>0]=f.getUTCFullYear()-1900,z[g+24>>>2>>>0]=f.getUTCDay(),z[g+28>>>2>>>0]=(f.getTime()-Date.UTC(f.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},U:function(f,g){f=-9007199254740992>f||9007199254740992<f?NaN:Number(f),g>>>=0,f=new Date(1e3*f),z[g>>>2>>>0]=f.getSeconds(),z[g+4>>>2>>>0]=f.getMinutes(),z[g+8>>>2>>>0]=f.getHours(),z[g+12>>>2>>>0]=f.getDate(),z[g+16>>>2>>>0]=f.getMonth(),z[g+20>>>2>>>0]=f.getFullYear()-1900,z[g+24>>>2>>>0]=f.getDay(),z[g+28>>>2>>>0]=(Nt(f.getFullYear())?mi:nr)[f.getMonth()]+f.getDate()-1|0,z[g+36>>>2>>>0]=-(60*f.getTimezoneOffset());var x=new Date(f.getFullYear(),6,1).getTimezoneOffset(),S=new Date(f.getFullYear(),0,1).getTimezoneOffset();z[g+32>>>2>>>0]=(x!=S&&f.getTimezoneOffset()==Math.min(S,x))|0},V:function(f){f>>>=0;var g=new Date(z[f+20>>>2>>>0]+1900,z[f+16>>>2>>>0],z[f+12>>>2>>>0],z[f+8>>>2>>>0],z[f+4>>>2>>>0],z[f>>>2>>>0],0),x=z[f+32>>>2>>>0],S=g.getTimezoneOffset(),k=new Date(g.getFullYear(),6,1).getTimezoneOffset(),U=new Date(g.getFullYear(),0,1).getTimezoneOffset(),j=Math.min(U,k);return 0>x?z[f+32>>>2>>>0]=+(k!=U&&j==S):0<x!=(j==S)&&(k=Math.max(U,k),g.setTime(g.getTime()+6e4*((0<x?j:k)-S))),z[f+24>>>2>>>0]=g.getDay(),z[f+28>>>2>>>0]=(Nt(g.getFullYear())?mi:nr)[g.getMonth()]+g.getDate()-1|0,z[f>>>2>>>0]=g.getSeconds(),z[f+4>>>2>>>0]=g.getMinutes(),z[f+8>>>2>>>0]=g.getHours(),z[f+12>>>2>>>0]=g.getDate(),z[f+16>>>2>>>0]=g.getMonth(),z[f+20>>>2>>>0]=g.getYear(),f=g.getTime(),isNaN(f)?(z[_i()>>>2>>>0]=61,f=-1):f/=1e3,BigInt(f)},R:function(){return-52},S:function(){},K:function(f,g,x){function S(ie){return(ie=ie.toTimeString().match(/\(([A-Za-z ]+)\)$/))?ie[1]:"GMT"}x>>>=0;var k=new Date().getFullYear(),U=new Date(k,0,1),j=new Date(k,6,1);k=U.getTimezoneOffset();var Q=j.getTimezoneOffset();q[f>>>0>>>2>>>0]=60*Math.max(k,Q),z[g>>>0>>>2>>>0]=+(k!=Q),f=S(U),g=S(j),f=Oo(f),g=Oo(g),Q<k?(q[x>>>2>>>0]=f,q[x+4>>>2>>>0]=g):(q[x>>>2>>>0]=g,q[x+4>>>2>>>0]=f)},v:()=>{It("")},d:function(f,g,x){return f>>>=0,g=Mt(g>>>0,x>>>0),gt[f].apply(null,g)},I:function(f,g,x){return f>>>=0,g=Mt(g>>>0,x>>>0),gt[f].apply(null,g)},E:()=>Date.now(),L:function(){return 4294901760},q:()=>performance.now(),J:function(f){f>>>=0;var g=G.length;if(4294901760<f)return!1;for(var x=1;4>=x;x*=2){var S=g*(1+.2/x);S=Math.min(S,f+100663296);var k=Math;S=Math.max(f,S);e:{k=(k.min.call(k,4294901760,S+(65536-S%65536)%65536)-O.buffer.byteLength+65535)/65536;try{O.grow(k),xe();var U=1;break e}catch{}U=void 0}if(U)return!0}return!1},Y:function(f,g){f>>>=0,g>>>=0;var x=0;return Et().forEach((S,k)=>{var U=g+x;for(k=q[f+4*k>>>2>>>0]=U,U=0;U<S.length;++U)F[k++>>>0>>>0]=S.charCodeAt(U);F[k>>>0>>>0]=0,x+=S.length+1}),0},Z:function(f,g){f>>>=0,g>>>=0;var x=Et();q[f>>>2>>>0]=x.length;var S=0;return x.forEach(k=>S+=k.length+1),q[g>>>2>>>0]=S,0},y:()=>52,C:function(){return 52},X:function(){return 70},B:function(f,g,x,S){g>>>=0,x>>>=0,S>>>=0;for(var k=0,U=0;U<x;U++){var j=q[g>>>2>>>0],Q=q[g+4>>>2>>>0];g+=8;for(var ie=0;ie<Q;ie++){var re=G[j+ie>>>0],_e=gi[f];re===0||re===10?((f===1?$:_)(Jr(_e,0)),_e.length=0):_e.push(re)}k+=Q}return q[S>>>2>>>0]=k,0},ea:wi,p:function(f,g,x,S){return wi(f>>>0,g>>>0,x>>>0,S>>>0)}},we=function(){function f(x){return we=x.exports,we=ui(),we=$i(),O=we.ja,xe(),Ne.unshift(we.ka),Re--,Re==0&&(qe!==null&&(clearInterval(qe),qe=null),Ze&&(x=Ze,Ze=null,x())),we}var g={a:ss};if(Re++,n.instantiateWasm)try{return n.instantiateWasm(g,f)}catch(x){_(`Module.instantiateWasm callback failed with error: ${x}`),o(x)}return wt(g,function(x){f(x.instance)}).catch(o),{}}();n._OrtInit=(f,g)=>(n._OrtInit=we.la)(f,g),n._OrtGetLastError=(f,g)=>(n._OrtGetLastError=we.ma)(f,g),n._OrtCreateSessionOptions=(f,g,x,S,k,U,j,Q,ie,re)=>(n._OrtCreateSessionOptions=we.na)(f,g,x,S,k,U,j,Q,ie,re),n._OrtAppendExecutionProvider=(f,g)=>(n._OrtAppendExecutionProvider=we.oa)(f,g),n._OrtAddFreeDimensionOverride=(f,g,x)=>(n._OrtAddFreeDimensionOverride=we.pa)(f,g,x),n._OrtAddSessionConfigEntry=(f,g,x)=>(n._OrtAddSessionConfigEntry=we.qa)(f,g,x),n._OrtReleaseSessionOptions=f=>(n._OrtReleaseSessionOptions=we.ra)(f),n._OrtCreateSession=(f,g,x)=>(n._OrtCreateSession=we.sa)(f,g,x),n._OrtReleaseSession=f=>(n._OrtReleaseSession=we.ta)(f),n._OrtGetInputOutputCount=(f,g,x)=>(n._OrtGetInputOutputCount=we.ua)(f,g,x),n._OrtGetInputName=(f,g)=>(n._OrtGetInputName=we.va)(f,g),n._OrtGetOutputName=(f,g)=>(n._OrtGetOutputName=we.wa)(f,g),n._OrtFree=f=>(n._OrtFree=we.xa)(f),n._OrtCreateTensor=(f,g,x,S,k,U)=>(n._OrtCreateTensor=we.ya)(f,g,x,S,k,U),n._OrtGetTensorData=(f,g,x,S,k)=>(n._OrtGetTensorData=we.za)(f,g,x,S,k),n._OrtReleaseTensor=f=>(n._OrtReleaseTensor=we.Aa)(f),n._OrtCreateRunOptions=(f,g,x,S)=>(n._OrtCreateRunOptions=we.Ba)(f,g,x,S),n._OrtAddRunConfigEntry=(f,g,x)=>(n._OrtAddRunConfigEntry=we.Ca)(f,g,x),n._OrtReleaseRunOptions=f=>(n._OrtReleaseRunOptions=we.Da)(f),n._OrtCreateBinding=f=>(n._OrtCreateBinding=we.Ea)(f),n._OrtBindInput=(f,g,x)=>(n._OrtBindInput=we.Fa)(f,g,x),n._OrtBindOutput=(f,g,x,S)=>(n._OrtBindOutput=we.Ga)(f,g,x,S),n._OrtClearBoundOutputs=f=>(n._OrtClearBoundOutputs=we.Ha)(f),n._OrtReleaseBinding=f=>(n._OrtReleaseBinding=we.Ia)(f),n._OrtRunWithBinding=(f,g,x,S,k)=>(n._OrtRunWithBinding=we.Ja)(f,g,x,S,k),n._OrtRun=(f,g,x,S,k,U,j,Q)=>(n._OrtRun=we.Ka)(f,g,x,S,k,U,j,Q),n._OrtEndProfiling=f=>(n._OrtEndProfiling=we.La)(f),n._JsepOutput=(f,g,x)=>(n._JsepOutput=we.Ma)(f,g,x),n._JsepGetNodeName=f=>(n._JsepGetNodeName=we.Na)(f);var _i=()=>(_i=we.Oa)(),en=n._malloc=f=>(en=n._malloc=we.Pa)(f),qt=n._free=f=>(qt=n._free=we.Qa)(f),bn=f=>(bn=we.Ra)(f),Wn=()=>(Wn=we.Ta)(),Hn=f=>(Hn=we.Ua)(f),Eo=f=>(Eo=we.Va)(f),yn=f=>(yn=we.Xa)(f),Ti=()=>(Ti=we.Ya)(),gr=f=>(gr=we.Za)(f),tr=()=>(tr=we._a)();n.___start_em_js=957888,n.___stop_em_js=958049;function $i(){var f=we;f=Object.assign({},f);var g=S=>()=>S()>>>0,x=S=>k=>S(k)>>>0;return f.Oa=g(f.Oa),f.Pa=x(f.Pa),f.Ra=x(f.Ra),f.Ta=g(f.Ta),f.Va=x(f.Va),f}n.stackAlloc=Eo,n.stackSave=Wn,n.stackRestore=Hn,n.UTF8ToString=xt,n.stringToUTF8=(f,g,x)=>Sr(f,G,g,x),n.lengthBytesUTF8=Gr;var Wr;Ze=function f(){Wr||Co(),Wr||(Ze=f)};function Co(){if(!(0<Re)){if(n.preRun)for(typeof n.preRun=="function"&&(n.preRun=[n.preRun]);n.preRun.length;){var f=n.preRun.shift();He.unshift(f)}for(;0<He.length;)He.shift()(n);if(!(0<Re||Wr||(Wr=!0,n.calledRun=!0,P))){for(;0<Ne.length;)Ne.shift()(n);for(t(n);0<pe.length;)pe.shift()(n)}}}return Co(),e.ready}})();typeof xm=="object"&&typeof Ou=="object"?Ou.exports=wm:typeof define=="function"&&define.amd&&define([],()=>wm)});var Tm=it(()=>{});var $m=it(()=>{});var Sm={};tn(Sm,{cpus:()=>f2});var f2,Im=R(()=>{f2=void 0});var Em=it((Om,Eu)=>{"use strict";var Am=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(e={}){function n(){return Pe.buffer!=pe.buffer&&mt(),pe}function t(){return Pe.buffer!=pe.buffer&&mt(),Re}function o(){return Pe.buffer!=pe.buffer&&mt(),qe}function i(){return Pe.buffer!=pe.buffer&&mt(),Ze}function s(){return Pe.buffer!=pe.buffer&&mt(),It}function a(){return Pe.buffer!=pe.buffer&&mt(),X}function u(){return Pe.buffer!=pe.buffer&&mt(),be}function l(){return Pe.buffer!=pe.buffer&&mt(),At}var d=e,p,m;d.ready=new Promise((c,h)=>{p=c,m=h}),d.mountExternalData=(c,h)=>{(d.Fb||(d.Fb=new Map)).set(c,h)},d.unmountExternalData=()=>{delete d.Fb},d.jsepInit=(c,h,v,T,E,D,V,Y,ae,ne,Se)=>{d.uc=c,d.$b=h,d.dc=v,d.Ob=T,d.cc=E,d.eb=D,d.ec=V,d.hc=Y,d.ac=ae,d.bc=ne,d.fc=Se,h=(ce,Ee,L)=>(...ye)=>{let Me=tr,Ft=Ee?.();ye=ce(...ye);let vn=Ee?.();return Ft!==vn&&(ce=vn,L(Ft),Ee=L=null),tr!=Me?k():ye},v=ce=>async(...Ee)=>{try{if(d.Eb)throw Error("Session already started");let L=d.Eb={jc:Ee[0],errors:[]},ye=await ce(...Ee);if(d.Eb!==L)throw Error("Session mismatch");c.flush();let Me=L.errors;if(0<Me.length){let Ft=await Promise.all(Me);if(Ft=Ft.filter(vn=>vn),0<Ft.length)throw Error(Ft.join(`
`))}return ye}finally{d.Eb=null}},d._OrtCreateSession=h(d._OrtCreateSession,()=>d._OrtCreateSession,ce=>d._OrtCreateSession=ce),d._OrtRun=v(h(d._OrtRun,()=>d._OrtRun,ce=>d._OrtRun=ce)),d._OrtRunWithBinding=v(h(d._OrtRunWithBinding,()=>d._OrtRunWithBinding,ce=>d._OrtRunWithBinding=ce)),d._OrtBindInput=h(d._OrtBindInput,()=>d._OrtBindInput,ce=>d._OrtBindInput=ce),d.jsepRegisterBuffer=(ce,Ee,L,ye)=>c.registerBuffer(ce,Ee,L,ye),d.jsepGetBuffer=ce=>c.getBuffer(ce),d.jsepCreateDownloader=(ce,Ee,L)=>c.createDownloader(ce,Ee,L),d.jsepOnReleaseSession=ce=>{c.onReleaseSession(ce)},d.jsepOnRunStart=ce=>c.onRunStart(ce)};var y=Object.assign({},d),b="./this.program",w=(c,h)=>{throw h},A=typeof window=="object",$=typeof importScripts=="function",_=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",O=d.ENVIRONMENT_IS_PTHREAD||!1,P="";function N(c){return d.locateFile?d.locateFile(c,P):P+c}var F,G,J;if(_){var le=(Su(),Hr($u)),z=(Au(),Hr(Iu));P=$?z.dirname(P)+"/":__dirname+"/",F=(h,v)=>(h=Gr(h)?new URL(h):z.normalize(h),le.readFileSync(h,v?void 0:"utf8")),J=h=>(h=F(h,!0),h.buffer||(h=new Uint8Array(h)),h),G=(h,v,T,E=!0)=>{h=Gr(h)?new URL(h):z.normalize(h),le.readFile(h,E?void 0:"utf8",(D,V)=>{D?T(D):v(E?V.buffer:V)})},!d.thisProgram&&1<process.argv.length&&(b=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),w=(h,v)=>{throw process.exitCode=h,v},d.inspect=()=>"[Emscripten Module object]";let c;try{c=Tm()}catch(h){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),h}global.Worker=c.Worker}else(A||$)&&($?P=self.location.href:typeof document<"u"&&document.currentScript&&(P=document.currentScript.src),typeof r<"u"&&r&&(P=r),P.indexOf("blob:")!==0?P=P.substr(0,P.replace(/[?#].*/,"").lastIndexOf("/")+1):P="",_||(F=c=>{var h=new XMLHttpRequest;return h.open("GET",c,!1),h.send(null),h.responseText},$&&(J=c=>{var h=new XMLHttpRequest;return h.open("GET",c,!1),h.responseType="arraybuffer",h.send(null),new Uint8Array(h.response)}),G=(c,h,v)=>{var T=new XMLHttpRequest;T.open("GET",c,!0),T.responseType="arraybuffer",T.onload=()=>{T.status==200||T.status==0&&T.response?h(T.response):v()},T.onerror=v,T.send(null)}));_&&typeof performance>"u"&&(global.performance=$m().performance);var q=console.log.bind(console),tt=console.error.bind(console);_&&(q=(...c)=>le.writeSync(1,c.join(" ")+`
`),tt=(...c)=>le.writeSync(2,c.join(" ")+`
`));var ot=q,Be=tt;Object.assign(d,y),y=null,typeof WebAssembly!="object"&&Jr("no native wasm support detected");var Pe,xe,He=!1,Ne,pe,Re,qe,Ze,It,X,be,Oe,pr,At;function mt(){var c=Pe.buffer;d.HEAP8=pe=new Int8Array(c),d.HEAP16=qe=new Int16Array(c),d.HEAPU8=Re=new Uint8Array(c),d.HEAPU16=Ze=new Uint16Array(c),d.HEAP32=It=new Int32Array(c),d.HEAPU32=X=new Uint32Array(c),d.HEAPF32=be=new Float32Array(c),d.HEAPF64=At=new Float64Array(c),d.HEAP64=Oe=new BigInt64Array(c),d.HEAPU64=pr=new BigUint64Array(c)}var Xr=16777216;if(O)Pe=d.wasmMemory;else if(d.wasmMemory)Pe=d.wasmMemory;else if(Pe=new WebAssembly.Memory({initial:Xr/65536,maximum:65536,shared:!0}),!(Pe.buffer instanceof SharedArrayBuffer))throw Be("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),_&&Be("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");mt(),Xr=Pe.buffer.byteLength;var wt=[],gt=[],Vr=[],hr=0,Zr=null,fn=null;function co(){if(hr--,hr==0&&(Zr!==null&&(clearInterval(Zr),Zr=null),fn)){var c=fn;fn=null,c()}}function Jr(c){throw c="Aborted("+c+")",Be(c),He=!0,Ne=1,c=new WebAssembly.RuntimeError(c+". Build with -sASSERTIONS for more info."),m(c),c}var xt=c=>c.startsWith("data:application/octet-stream;base64,"),Gr=c=>c.startsWith("file://"),Sr;Sr="ort-wasm-simd-threaded.wasm",xt(Sr)||(Sr=N(Sr));function fo(c){if(J)return J(c);throw"both async and sync fetching of the wasm failed"}function oi(c){if(A||$){if(typeof fetch=="function"&&!Gr(c))return fetch(c,{credentials:"same-origin"}).then(h=>{if(!h.ok)throw"failed to load wasm binary file at '"+c+"'";return h.arrayBuffer()}).catch(()=>fo(c));if(G)return new Promise((h,v)=>{G(c,T=>h(new Uint8Array(T)),v)})}return Promise.resolve().then(()=>fo(c))}function Wt(c,h,v){return oi(c).then(T=>WebAssembly.instantiate(T,h)).then(T=>T).then(v,T=>{Be(`failed to asynchronously prepare wasm: ${T}`),Jr(T)})}function po(c,h){var v=Sr;return typeof WebAssembly.instantiateStreaming!="function"||xt(v)||Gr(v)||_||typeof fetch!="function"?Wt(v,c,h):fetch(v,{credentials:"same-origin"}).then(T=>WebAssembly.instantiateStreaming(T,c).then(h,function(E){return Be(`wasm streaming compile failed: ${E}`),Be("falling back to ArrayBuffer instantiation"),Wt(v,c,h)}))}var pn={1381140:(c,h,v,T)=>{if(typeof d>"u"||!d.Fb)return 1;if(c=et(c>>>0),c.startsWith("./")&&(c=c.substring(2)),c=d.Fb.get(c),!c)return 2;if(h>>>=0,v>>>=0,T>>>=0,h+v>c.byteLength)return 3;try{return t().set(c.subarray(h,h+v),T>>>0),0}catch{return 4}},1381641:()=>{d.ac()},1381672:()=>{d.bc()},1381701:()=>{d.fc()},1381726:c=>d.$b(c),1381759:c=>d.dc(c),1381791:(c,h,v)=>{d.Ob(c,h,v,!0)},1381830:(c,h,v)=>{d.Ob(c,h,v)},1381863:c=>{d.eb("Abs",c,void 0)},1381914:c=>{d.eb("Neg",c,void 0)},1381965:c=>{d.eb("Floor",c,void 0)},1382018:c=>{d.eb("Ceil",c,void 0)},1382070:c=>{d.eb("Reciprocal",c,void 0)},1382128:c=>{d.eb("Sqrt",c,void 0)},1382180:c=>{d.eb("Exp",c,void 0)},1382231:c=>{d.eb("Erf",c,void 0)},1382282:c=>{d.eb("Sigmoid",c,void 0)},1382337:(c,h,v)=>{d.eb("HardSigmoid",c,{alpha:h,beta:v})},1382416:c=>{d.eb("Log",c,void 0)},1382467:c=>{d.eb("Sin",c,void 0)},1382518:c=>{d.eb("Cos",c,void 0)},1382569:c=>{d.eb("Tan",c,void 0)},1382620:c=>{d.eb("Asin",c,void 0)},1382672:c=>{d.eb("Acos",c,void 0)},1382724:c=>{d.eb("Atan",c,void 0)},1382776:c=>{d.eb("Sinh",c,void 0)},1382828:c=>{d.eb("Cosh",c,void 0)},1382880:c=>{d.eb("Asinh",c,void 0)},1382933:c=>{d.eb("Acosh",c,void 0)},1382986:c=>{d.eb("Atanh",c,void 0)},1383039:c=>{d.eb("Tanh",c,void 0)},1383091:c=>{d.eb("Not",c,void 0)},1383142:(c,h,v)=>{d.eb("Clip",c,{min:h,max:v})},1383211:c=>{d.eb("Clip",c,void 0)},1383263:(c,h)=>{d.eb("Elu",c,{alpha:h})},1383321:c=>{d.eb("Relu",c,void 0)},1383373:(c,h)=>{d.eb("LeakyRelu",c,{alpha:h})},1383437:(c,h)=>{d.eb("ThresholdedRelu",c,{alpha:h})},1383507:(c,h)=>{d.eb("Cast",c,{to:h})},1383565:c=>{d.eb("Add",c,void 0)},1383616:c=>{d.eb("Sub",c,void 0)},1383667:c=>{d.eb("Mul",c,void 0)},1383718:c=>{d.eb("Div",c,void 0)},1383769:c=>{d.eb("Pow",c,void 0)},1383820:c=>{d.eb("Equal",c,void 0)},1383873:c=>{d.eb("Greater",c,void 0)},1383928:c=>{d.eb("GreaterOrEqual",c,void 0)},1383990:c=>{d.eb("Less",c,void 0)},1384042:c=>{d.eb("LessOrEqual",c,void 0)},1384101:(c,h,v,T,E)=>{d.eb("ReduceMean",c,{keepDims:!!h,noopWithEmptyAxes:!!v,axes:T?Array.from(s().subarray(T>>>0,E>>>0)):[]})},1384260:(c,h,v,T,E)=>{d.eb("ReduceMax",c,{keepDims:!!h,noopWithEmptyAxes:!!v,axes:T?Array.from(s().subarray(T>>>0,E>>>0)):[]})},1384418:(c,h,v,T,E)=>{d.eb("ReduceMin",c,{keepDims:!!h,noopWithEmptyAxes:!!v,axes:T?Array.from(s().subarray(T>>>0,E>>>0)):[]})},1384576:(c,h,v,T,E)=>{d.eb("ReduceProd",c,{keepDims:!!h,noopWithEmptyAxes:!!v,axes:T?Array.from(s().subarray(T>>>0,E>>>0)):[]})},1384735:(c,h,v,T,E)=>{d.eb("ReduceSum",c,{keepDims:!!h,noopWithEmptyAxes:!!v,axes:T?Array.from(s().subarray(T>>>0,E>>>0)):[]})},1384893:(c,h,v,T,E)=>{d.eb("ReduceL1",c,{keepDims:!!h,noopWithEmptyAxes:!!v,axes:T?Array.from(s().subarray(T>>>0,E>>>0)):[]})},1385050:(c,h,v,T,E)=>{d.eb("ReduceL2",c,{keepDims:!!h,noopWithEmptyAxes:!!v,axes:T?Array.from(s().subarray(T>>>0,E>>>0)):[]})},1385207:(c,h,v,T,E)=>{d.eb("ReduceLogSum",c,{keepDims:!!h,noopWithEmptyAxes:!!v,axes:T?Array.from(s().subarray(T>>>0,E>>>0)):[]})},1385368:(c,h,v,T,E)=>{d.eb("ReduceSumSquare",c,{keepDims:!!h,noopWithEmptyAxes:!!v,axes:T?Array.from(s().subarray(T>>>0,E>>>0)):[]})},1385532:(c,h,v,T,E)=>{d.eb("ReduceLogSumExp",c,{keepDims:!!h,noopWithEmptyAxes:!!v,axes:T?Array.from(s().subarray(T>>>0,E>>>0)):[]})},1385696:c=>{d.eb("Where",c,void 0)},1385749:(c,h,v)=>{d.eb("Transpose",c,{perm:h?Array.from(s().subarray(h>>>0,v>>>0)):[]})},1385857:(c,h,v,T,E,D,V,Y,ae,ne,Se,ce,Ee,L,ye)=>{d.eb("ConvTranspose",c,{format:ae?"NHWC":"NCHW",autoPad:h,dilations:[v],group:T,kernel_shape:[E],pads:[D,V],strides:[Y],wIsConst:()=>!!n()[ne>>>0],outputPadding:Se?Array.from(s().subarray(Se>>>0,ce>>>0)):[],outputShape:Ee?Array.from(s().subarray(Ee>>>0,L>>>0)):[],activation:et(ye)})},1386259:(c,h,v,T,E,D,V,Y,ae,ne,Se,ce,Ee,L)=>{d.eb("ConvTranspose",c,{format:Y?"NHWC":"NCHW",autoPad:h,dilations:Array.from(s().subarray(v>>>0,(v>>>0)+2>>>0)),group:T,kernelShape:Array.from(s().subarray(E>>>0,(E>>>0)+2>>>0)),pads:Array.from(s().subarray(D>>>0,(D>>>0)+4>>>0)),strides:Array.from(s().subarray(V>>>0,(V>>>0)+2>>>0)),wIsConst:()=>!!n()[ae>>>0],outputPadding:ne?Array.from(s().subarray(ne>>>0,Se>>>0)):[],outputShape:ce?Array.from(s().subarray(ce>>>0,Ee>>>0)):[],activation:et(L)})},1386824:(c,h,v,T,E,D,V,Y,ae,ne,Se,ce,Ee,L,ye)=>{d.eb("ConvTranspose",c,{format:ae?"NHWC":"NCHW",autoPad:h,dilations:[v],group:T,kernel_shape:[E],pads:[D,V],strides:[Y],wIsConst:()=>!!n()[ne>>>0],outputPadding:Se?Array.from(s().subarray(Se>>>0,ce>>>0)):[],outputShape:Ee?Array.from(s().subarray(Ee>>>0,L>>>0)):[],activation:et(ye)})},1387226:(c,h,v,T,E,D,V,Y,ae,ne,Se,ce,Ee,L)=>{d.eb("ConvTranspose",c,{format:Y?"NHWC":"NCHW",autoPad:h,dilations:Array.from(s().subarray(v>>>0,(v>>>0)+2>>>0)),group:T,kernelShape:Array.from(s().subarray(E>>>0,(E>>>0)+2>>>0)),pads:Array.from(s().subarray(D>>>0,(D>>>0)+4>>>0)),strides:Array.from(s().subarray(V>>>0,(V>>>0)+2>>>0)),wIsConst:()=>!!n()[ae>>>0],outputPadding:ne?Array.from(s().subarray(ne>>>0,Se>>>0)):[],outputShape:ce?Array.from(s().subarray(ce>>>0,Ee>>>0)):[],activation:et(L)})},1387791:(c,h)=>{d.eb("GlobalAveragePool",c,{format:h?"NHWC":"NCHW"})},1387882:(c,h,v,T,E,D,V,Y,ae,ne,Se,ce,Ee,L,ye,Me)=>{d.eb("AveragePool",c,{format:Me?"NHWC":"NCHW",auto_pad:h,ceil_mode:v,count_include_pad:T,storage_order:E,dilations:[D,V],kernel_shape:[Y,ae],pads:[ne,Se,ce,Ee],strides:[L,ye]})},1388166:(c,h)=>{d.eb("GlobalAveragePool",c,{format:h?"NHWC":"NCHW"})},1388257:(c,h,v,T,E,D,V,Y,ae,ne,Se,ce,Ee,L,ye,Me)=>{d.eb("AveragePool",c,{format:Me?"NHWC":"NCHW",auto_pad:h,ceil_mode:v,count_include_pad:T,storage_order:E,dilations:[D,V],kernel_shape:[Y,ae],pads:[ne,Se,ce,Ee],strides:[L,ye]})},1388541:(c,h)=>{d.eb("GlobalMaxPool",c,{format:h?"NHWC":"NCHW"})},1388628:(c,h,v,T,E,D,V,Y,ae,ne,Se,ce,Ee,L,ye,Me)=>{d.eb("MaxPool",c,{format:Me?"NHWC":"NCHW",auto_pad:h,ceil_mode:v,count_include_pad:T,storage_order:E,dilations:[D,V],kernel_shape:[Y,ae],pads:[ne,Se,ce,Ee],strides:[L,ye]})},1388908:(c,h)=>{d.eb("GlobalMaxPool",c,{format:h?"NHWC":"NCHW"})},1388995:(c,h,v,T,E,D,V,Y,ae,ne,Se,ce,Ee,L,ye,Me)=>{d.eb("MaxPool",c,{format:Me?"NHWC":"NCHW",auto_pad:h,ceil_mode:v,count_include_pad:T,storage_order:E,dilations:[D,V],kernel_shape:[Y,ae],pads:[ne,Se,ce,Ee],strides:[L,ye]})},1389275:(c,h,v,T,E)=>{d.eb("Gemm",c,{alpha:h,beta:v,transA:T,transB:E})},1389379:c=>{d.eb("MatMul",c,void 0)},1389433:(c,h,v,T)=>{d.eb("ArgMax",c,{keepDims:!!h,selectLastIndex:!!v,axis:T})},1389541:(c,h,v,T)=>{d.eb("ArgMin",c,{keepDims:!!h,selectLastIndex:!!v,axis:T})},1389649:(c,h)=>{d.eb("Softmax",c,{axis:h})},1389712:(c,h)=>{d.eb("Concat",c,{axis:h})},1389772:(c,h,v,T,E)=>{d.eb("Split",c,{axis:h,numOutputs:v,splitSizes:T?Array.from(s().subarray(T>>>0,E>>>0)):[]})},1389912:c=>{d.eb("Expand",c,void 0)},1389966:(c,h)=>{d.eb("Gather",c,{axis:Number(h)})},1390037:(c,h)=>{d.eb("GatherElements",c,{axis:Number(h)})},1390116:(c,h,v,T,E,D,V,Y,ae,ne,Se)=>{d.eb("Resize",c,{antialias:h,axes:v?Array.from(s().subarray(v>>>0,T>>>0)):[],coordinateTransformMode:et(E),cubicCoeffA:D,excludeOutside:V,extrapolationValue:Y,keepAspectRatioPolicy:et(ae),mode:et(ne),nearestMode:et(Se)})},1390462:(c,h,v,T,E,D,V)=>{d.eb("Slice",c,{starts:h?Array.from(s().subarray(h>>>0,v>>>0)):[],ends:T?Array.from(s().subarray(T>>>0,E>>>0)):[],axes:D?Array.from(s().subarray(D>>>0,V>>>0)):[]})},1390678:c=>{d.eb("Tile",c,void 0)},1390730:(c,h,v)=>{d.eb("LayerNormalization",c,{axis:Number(h),epsilon:Number(v)})},1390837:(c,h,v)=>{d.eb("InstanceNormalization",c,{epsilon:h,format:v?"NHWC":"NCHW"})},1390951:(c,h,v)=>{d.eb("InstanceNormalization",c,{epsilon:h,format:v?"NHWC":"NCHW"})},1391065:c=>{d.eb("Range",c,void 0)},1391118:(c,h)=>{d.eb("Einsum",c,{equation:et(h)})},1391199:(c,h,v,T,E)=>{d.eb("Pad",c,{mode:h,value:v,pads:T?Array.from(s().subarray(T>>>0,E>>>0)):[]})},1391326:(c,h,v,T,E,D)=>{d.eb("BatchNormalization",c,{epsilon:h,momentum:v,spatial:!!E,trainingMode:!!T,format:D?"NHWC":"NCHW"})},1391495:(c,h,v,T,E,D)=>{d.eb("BatchNormalization",c,{epsilon:h,momentum:v,spatial:!!E,trainingMode:!!T,format:D?"NHWC":"NCHW"})},1391664:(c,h,v)=>{d.eb("CumSum",c,{exclusive:Number(h),reverse:Number(v)})},1391761:(c,h,v,T,E,D,V,Y,ae)=>{d.eb("Attention",c,{numHeads:h,isUnidirectional:v,maskFilterValue:T,scale:E,doRotary:D,qkvHiddenSizes:V?Array.from(s().subarray(Number(Y)>>>0,Number(Y)+V>>>0)):[],pastPresentShareBuffer:!!ae})},1392033:c=>{d.eb("Gelu",c,void 0)},1392085:(c,h,v,T,E,D)=>{d.eb("MultiHeadAttention",c,{numHeads:h,isUnidirectional:v,maskFilterValue:T,scale:E,doRotary:D})},1392244:c=>{d.eb("BiasAdd",c,void 0)},1392299:c=>{d.eb("BiasSplitGelu",c,void 0)},1392360:(c,h)=>{d.eb("SkipLayerNormalization",c,{epsilon:h})},1392441:(c,h,v,T,E,D,V,Y,ae,ne,Se,ce,Ee)=>{d.eb("Conv",c,{format:ae?"NHWC":"NCHW",auto_pad:h,dilations:[v],group:T,kernel_shape:[E],pads:D?Array.from(s().subarray(D>>>0,V>>>0)):[],strides:[Y],w_is_const:()=>!!n()[ne>>>0],activation:et(Se),activation_params:ce?Array.from(u().subarray(ce>>>0,Ee>>>0)):[]})},1392811:(c,h,v,T,E,D,V,Y,ae,ne,Se,ce,Ee,L,ye,Me)=>{d.eb("Conv",c,{format:ce?"NHWC":"NCHW",auto_pad:h,dilations:[v,T],group:E,kernel_shape:[D,V],pads:Y?Array.from(s().subarray(Y>>>0,ae>>>0)):[],strides:[ne,Se],w_is_const:()=>!!n()[Ee>>>0],activation:et(L),activation_params:ye?Array.from(u().subarray(ye>>>0,Me>>>0)):[]})},1393202:c=>{d.ec(c)},1393236:(c,h)=>d.hc(c,h,d.Eb.jc,d.Eb.errors)};function ho(c){this.name="ExitStatus",this.message=`Program terminated with exit(${c})`,this.status=c}var rr=c=>{c.terminate(),c.onmessage=()=>{}},ii=c=>{$e.yb.length==0&&(vo(),$e.Pb($e.yb[0]));var h=$e.yb.pop();if(!h)return 6;$e.zb.push(h),$e.pb[c.xb]=h,h.xb=c.xb;var v={cmd:"run",start_routine:c.kc,arg:c.Vb,pthread_ptr:c.xb};return _&&h.unref(),h.postMessage(v,c.qc),0},Ot=0,mo=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,go=(c,h,v)=>{h>>>=0;var T=h+v;for(v=h;c[v]&&!(v>=T);)++v;if(16<v-h&&c.buffer&&mo)return mo.decode(c.buffer instanceof SharedArrayBuffer?c.slice(h,v):c.subarray(h,v));for(T="";h<v;){var E=c[h++];if(E&128){var D=c[h++]&63;if((E&224)==192)T+=String.fromCharCode((E&31)<<6|D);else{var V=c[h++]&63;E=(E&240)==224?(E&15)<<12|D<<6|V:(E&7)<<18|D<<12|V<<6|c[h++]&63,65536>E?T+=String.fromCharCode(E):(E-=65536,T+=String.fromCharCode(55296|E>>10,56320|E&1023))}}else T+=String.fromCharCode(E)}return T},et=(c,h)=>(c>>>=0)?go(t(),c,h):"",bo=c=>{var h=ps();return c=c(),Ai(h),c};function ze(c,h){var v=arguments.length-2,T=arguments;return bo(()=>{for(var E=2*v,D=hs(8*E),V=D>>>3,Y=0;Y<v;Y++){var ae=T[2+Y];typeof ae=="bigint"?(Oe[V+2*Y]=1n,Oe[V+2*Y+1]=ae):(Oe[V+2*Y]=0n,l()[V+2*Y+1>>>0]=ae)}return Cl(c,E,D,h)})}function Ht(c){if(O)return ze(0,1,c);Ne=c,0<Ot||($e.lc(),d.onExit?.(c),He=!0),w(c,new ho(c))}var Nn=c=>{if(Ne=c,O)throw ai(c),"unwind";Ht(c)},yo=c=>{c instanceof ho||c=="unwind"||w(1,c)};function ns(){for(var c=d.numThreads;c--;)vo();wt.unshift(()=>{hr++,os(()=>co())})}function vo(){var c=N("ort-wasm-simd-threaded.worker.js");c=new Worker(c),$e.yb.push(c)}function os(c){O?c():Promise.all($e.yb.map($e.Pb)).then(c)}var $e={yb:[],zb:[],Ub:[],pb:{},Ib(){O?($e.receiveObjectTransfer=$e.ic,$e.threadInitTLS=$e.Tb,$e.setExitStatus=$e.Sb):ns()},Sb:c=>Ne=c,vc:["$terminateWorker"],lc:()=>{for(var c of $e.zb)rr(c);for(c of $e.yb)rr(c);$e.yb=[],$e.zb=[],$e.pb=[]},Rb:c=>{var h=c.xb;delete $e.pb[h],$e.yb.push(c),$e.zb.splice($e.zb.indexOf(c),1),c.xb=0,cs(h)},ic(){},Tb(){$e.Ub.forEach(c=>c())},Pb:c=>new Promise(h=>{c.onmessage=D=>{D=D.data;var V=D.cmd;if(D.targetThread&&D.targetThread!=Ii()){var Y=$e.pb[D.targetThread];Y?Y.postMessage(D,D.transferList):Be(`Internal error! Worker sent a message "${V}" to target pthread ${D.targetThread}, but that thread no longer exists!`)}else V==="checkMailbox"?bn():V==="spawnThread"?ii(D):V==="cleanupThread"?$e.Rb($e.pb[D.thread]):V==="killThread"?(D=D.thread,V=$e.pb[D],delete $e.pb[D],rr(V),cs(D),$e.zb.splice($e.zb.indexOf(V),1),V.xb=0):V==="cancelThread"?$e.pb[D.thread].postMessage({cmd:"cancel"}):V==="loaded"?(c.loaded=!0,_&&!c.xb&&c.unref(),h(c)):V==="alert"?alert(`Thread ${D.threadId}: ${D.text}`):D.target==="setimmediate"?c.postMessage(D):V==="callHandler"?d[D.handler](...D.args):V&&Be(`worker sent an unknown command ${V}`)},c.onerror=D=>{throw Be(`worker sent an error! ${D.filename}:${D.lineno}: ${D.message}`),D},_&&(c.on("message",D=>c.onmessage({data:D})),c.on("error",D=>c.onerror(D)));var v=[],T=["onExit"],E;for(E of T)d.hasOwnProperty(E)&&v.push(E);c.postMessage({cmd:"load",handlers:v,urlOrBlob:d.mainScriptUrlOrBlob||r,wasmMemory:Pe,wasmModule:xe})})};d.PThread=$e;var Mn=c=>{for(;0<c.length;)c.shift()(d)};d.establishStackSpace=()=>{var c=Ii(),h=a()[c+52>>>2>>>0];c=a()[c+56>>>2>>>0],kl(h,h-c),Ai(h)};function ai(c){if(O)return ze(1,0,c);Nn(c)}d.invokeEntryPoint=(c,h)=>{c=Dl.apply(null,[c,h]),0<Ot?$e.Sb(c):fs(c)};function is(c){this.Db=c-24,this.sc=function(h){a()[this.Db+4>>>2>>>0]=h},this.Mb=function(h){a()[this.Db+8>>>2>>>0]=h},this.Ib=function(h,v){this.Kb(),this.sc(h),this.Mb(v)},this.Kb=function(){a()[this.Db+16>>>2>>>0]=0}}var si=0,wo=0;function xo(c,h,v,T){return O?ze(2,1,c,h,v,T):hn(c,h,v,T)}function hn(c,h,v,T){if(c>>>=0,h>>>=0,v>>>=0,T>>>=0,typeof SharedArrayBuffer>"u")return Be("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var E=[];return O&&E.length===0?xo(c,h,v,T):(c={kc:v,xb:c,Vb:T,qc:E},O?(c.tc="spawnThread",postMessage(c,E),0):ii(c))}function ui(c,h,v){return O?ze(3,1,c,h,v):0}function mr(c,h){if(O)return ze(4,1,c,h)}var zt=c=>{for(var h=0,v=0;v<c.length;++v){var T=c.charCodeAt(v);127>=T?h++:2047>=T?h+=2:55296<=T&&57343>=T?(h+=4,++v):h+=3}return h},_o=(c,h,v,T)=>{if(v>>>=0,!(0<T))return 0;var E=v;T=v+T-1;for(var D=0;D<c.length;++D){var V=c.charCodeAt(D);if(55296<=V&&57343>=V){var Y=c.charCodeAt(++D);V=65536+((V&1023)<<10)|Y&1023}if(127>=V){if(v>=T)break;h[v++>>>0]=V}else{if(2047>=V){if(v+1>=T)break;h[v++>>>0]=192|V>>6}else{if(65535>=V){if(v+2>=T)break;h[v++>>>0]=224|V>>12}else{if(v+3>=T)break;h[v++>>>0]=240|V>>18,h[v++>>>0]=128|V>>12&63}h[v++>>>0]=128|V>>6&63}h[v++>>>0]=128|V&63}}return h[v>>>0]=0,v-E},Qr=(c,h,v)=>_o(c,t(),h,v);function To(c,h){if(O)return ze(5,1,c,h)}function $o(c,h,v){if(O)return ze(6,1,c,h,v)}function li(c,h,v){return O?ze(7,1,c,h,v):0}function Ln(c,h){if(O)return ze(8,1,c,h)}function di(c,h,v){if(O)return ze(9,1,c,h,v)}function ci(c,h,v,T){if(O)return ze(10,1,c,h,v,T)}function fi(c,h,v,T){if(O)return ze(11,1,c,h,v,T)}function pi(c,h,v,T){if(O)return ze(12,1,c,h,v,T)}function So(c){if(O)return ze(13,1,c)}function mn(c,h){if(O)return ze(14,1,c,h)}function hi(c,h,v){if(O)return ze(15,1,c,h,v)}var Fn=c=>{if(c===null)return"null";var h=typeof c;return h==="object"||h==="array"||h==="function"?c.toString():""+c},Io,er=c=>{for(var h="";t()[c>>>0];)h+=Io[t()[c++>>>0]];return h},Ao={},Un={},as={},Nt;function mi(c,h,v={}){var T=h.name;if(!c)throw new Nt(`type "${T}" must have a positive integer typeid pointer`);if(Un.hasOwnProperty(c)){if(v.Yb)return;throw new Nt(`Cannot register type '${T}' twice`)}Un[c]=h,delete as[c],Ao.hasOwnProperty(c)&&(h=Ao[c],delete Ao[c],h.forEach(E=>E()))}function nr(c,h,v={}){if(!("argPackAdvance"in h))throw new TypeError("registerType registeredInstance requires argPackAdvance");mi(c,h,v)}var Oo=(c,h,v)=>{switch(h){case 1:return v?T=>n()[T>>>0>>>0]:T=>t()[T>>>0>>>0];case 2:return v?T=>o()[T>>>1>>>0]:T=>i()[T>>>1>>>0];case 4:return v?T=>s()[T>>>2>>>0]:T=>a()[T>>>2>>>0];case 8:return v?T=>Oe[T>>>3]:T=>pr[T>>>3];default:throw new TypeError(`invalid integer width (${h}): ${c}`)}};function Vn(){this.wb=[void 0],this.Nb=[]}var Mt=new Vn;function gn(c){c>>>=0,c>=Mt.Db&&--Mt.get(c).Qb===0&&Mt.Mb(c)}var Et=c=>{if(!c)throw new Nt("Cannot use deleted val. handle = "+c);return Mt.get(c).value},Lt=c=>{switch(c){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return Mt.Kb({Qb:1,value:c})}};function gi(c){return this.fromWireType(s()[c>>>2>>>0])}var bi=(c,h)=>{switch(h){case 4:return function(v){return this.fromWireType(u()[v>>>2>>>0])};case 8:return function(v){return this.fromWireType(l()[v>>>3>>>0])};default:throw new TypeError(`invalid float width (${h}): ${c}`)}};function yi(c){return this.fromWireType(a()[c>>>2>>>0])}var vi=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,wi=(c,h)=>{for(var v=c>>1,T=v+h/2;!(v>=T)&&i()[v>>>0];)++v;if(v<<=1,32<v-c&&vi)return vi.decode(t().slice(c,v));for(v="",T=0;!(T>=h/2);++T){var E=o()[c+2*T>>>1>>>0];if(E==0)break;v+=String.fromCharCode(E)}return v},xi=(c,h,v)=>{if(v??=2147483647,2>v)return 0;v-=2;var T=h;v=v<2*c.length?v/2:c.length;for(var E=0;E<v;++E){var D=c.charCodeAt(E);o()[h>>>1>>>0]=D,h+=2}return o()[h>>>1>>>0]=0,h-T},Gn=c=>2*c.length,ss=(c,h)=>{for(var v=0,T="";!(v>=h/4);){var E=s()[c+4*v>>>2>>>0];if(E==0)break;++v,65536<=E?(E-=65536,T+=String.fromCharCode(55296|E>>10,56320|E&1023)):T+=String.fromCharCode(E)}return T},we=(c,h,v)=>{if(h>>>=0,v??=2147483647,4>v)return 0;var T=h;v=T+v-4;for(var E=0;E<c.length;++E){var D=c.charCodeAt(E);if(55296<=D&&57343>=D){var V=c.charCodeAt(++E);D=65536+((D&1023)<<10)|V&1023}if(s()[h>>>2>>>0]=D,h+=4,h+4>v)break}return s()[h>>>2>>>0]=0,h-T},_i=c=>{for(var h=0,v=0;v<c.length;++v){var T=c.charCodeAt(v);55296<=T&&57343>=T&&++v,h+=4}return h},en=()=>{if(!(0<Ot))try{O?fs(Ne):Nn(Ne)}catch(c){yo(c)}};function qt(c){c>>>=0,typeof Atomics.rc=="function"&&(Atomics.rc(s(),c>>>2,c).value.then(bn),c+=128,Atomics.store(s(),c>>>2,1))}d.__emscripten_thread_mailbox_await=qt;var bn=()=>{var c=Ii();if(c&&(qt(c),!He))try{Pl(),en()}catch(h){yo(h)}};d.checkMailbox=bn;var Wn=[],Hn=(c,h)=>{var v=Un[c];if(v===void 0)throw c=Ol(c),v=er(c),Ir(c),new Nt(h+" has unknown type "+v);return v},Eo=(c,h,v)=>{var T=[];return c=c.toWireType(T,v),T.length&&(a()[h>>>2>>>0]=Lt(T)),c},yn=c=>{try{c()}catch(h){Jr(h)}};function Ti(){var c=de,h={};for(let[v,T]of Object.entries(c))h[v]=typeof T=="function"?function(){Wr.push(v);try{return T.apply(null,arguments)}finally{He||(Wr.pop(),tr&&gr===1&&Wr.length===0&&(gr=0,Ot+=1,yn(Rl),typeof Fibers<"u"&&Fibers.xc()))}}:T;return h}var gr=0,tr=null,$i=0,Wr=[],Co={},f={},g=0,x=null,S=[];function k(){return new Promise((c,h)=>{x={resolve:c,reject:h}})}function U(){var c=Po(65548),h=c+12;a()[c>>>2>>>0]=h,a()[c+4>>>2>>>0]=h+65536,h=Wr[0];var v=Co[h];return v===void 0&&(v=g++,Co[h]=v,f[v]=h),h=v,s()[c+8>>>2>>>0]=h,c}function j(){var c=s()[tr+8>>>2>>>0];return c=de[f[c]],--Ot,c()}function Q(c){if(!He){if(gr===0){var h=!1,v=!1;c((T=0)=>{if(!He&&($i=T,h=!0,v)){gr=2,yn(()=>zl(tr)),typeof Browser<"u"&&Browser.Jb.Xb&&Browser.Jb.resume(),T=!1;try{var E=j()}catch(Y){E=Y,T=!0}var D=!1;if(!tr){var V=x;V&&(x=null,(T?V.reject:V.resolve)(E),D=!0)}if(T&&!D)throw E}}),v=!0,h||(gr=1,tr=U(),typeof Browser<"u"&&Browser.Jb.Xb&&Browser.Jb.pause(),yn(()=>Bl(tr)))}else gr===2?(gr=0,yn(Nl),Ir(tr),tr=null,S.forEach(T=>{if(!He)try{T(),en()}catch(E){yo(E)}})):Jr(`invalid state: ${gr}`);return $i}}function ie(c){return Q(h=>{c().then(h)})}var re=[],_e={},ue=c=>{var h=_e[c];return h===void 0?er(c):h},Ie=()=>typeof globalThis=="object"?globalThis:Function("return this")(),M=c=>{var h=re.length;return re.push(c),h},me=(c,h)=>{for(var v=Array(c),T=0;T<c;++T)v[T]=Hn(a()[h+4*T>>>2>>>0],"parameter "+T);return v},ke=(c,h)=>Object.defineProperty(h,"name",{value:c});function Ct(c){var h=Function;if(!(h instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof h} which is not a function`);var v=ke(h.name||"unknownFunctionName",function(){});return v.prototype=h.prototype,v=new v,c=h.apply(v,c),c instanceof Object?c:v}var jt=c=>c%4===0&&(c%100!==0||c%400===0),dl=[0,31,60,91,121,152,182,213,244,274,305,335],cl=[0,31,59,90,120,151,181,212,243,273,304,334];function fl(c,h,v,T,E,D,V){return O?ze(16,1,c,h,v,T,E,D,V):-52}function pl(c,h,v,T,E,D){if(O)return ze(17,1,c,h,v,T,E,D)}var hl=c=>{var h=zt(c)+1,v=Po(h);return v&&Qr(c,v,h),v},us=[],ml=(c,h)=>{us.length=0;for(var v;v=t()[c++>>>0];){var T=v!=105;T&=v!=112,h+=T&&h%8?4:0,us.push(v==112?a()[h>>>2>>>0]:v==106?Oe[h>>>3]:v==105?s()[h>>>2>>>0]:l()[h>>>3>>>0]),h+=T?8:4}return us},ls={},gl=()=>{if(!ds){var c={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:b||"./this.program"},h;for(h in ls)ls[h]===void 0?delete c[h]:c[h]=ls[h];var v=[];for(h in c)v.push(`${h}=${c[h]}`);ds=v}return ds},ds;function bl(c,h){if(O)return ze(18,1,c,h);c>>>=0,h>>>=0;var v=0;return gl().forEach((T,E)=>{var D=h+v;for(E=a()[c+4*E>>>2>>>0]=D,D=0;D<T.length;++D)n()[E++>>>0>>>0]=T.charCodeAt(D);n()[E>>>0>>>0]=0,v+=T.length+1}),0}function yl(c,h){if(O)return ze(19,1,c,h);c>>>=0,h>>>=0;var v=gl();a()[c>>>2>>>0]=v.length;var T=0;return v.forEach(E=>T+=E.length+1),a()[h>>>2>>>0]=T,0}function vl(c){return O?ze(20,1,c):52}function wl(c,h,v,T){return O?ze(21,1,c,h,v,T):52}function xl(c,h,v,T){return O?ze(22,1,c,h,v,T):70}var I0=[null,[],[]];function _l(c,h,v,T){if(O)return ze(23,1,c,h,v,T);h>>>=0,v>>>=0,T>>>=0;for(var E=0,D=0;D<v;D++){var V=a()[h>>>2>>>0],Y=a()[h+4>>>2>>>0];h+=8;for(var ae=0;ae<Y;ae++){var ne=t()[V+ae>>>0],Se=I0[c];ne===0||ne===10?((c===1?ot:Be)(go(Se,0)),Se.length=0):Se.push(ne)}E+=Y}return a()[T>>>2>>>0]=E,0}var Tl=[31,29,31,30,31,30,31,31,30,31,30,31],$l=[31,28,31,30,31,30,31,31,30,31,30,31];function A0(c){var h=Array(zt(c)+1);return _o(c,h,0,h.length),h}var O0=(c,h)=>{n().set(c,h>>>0)};function Sl(c,h,v,T){function E(L,ye,Me){for(L=typeof L=="number"?L.toString():L||"";L.length<ye;)L=Me[0]+L;return L}function D(L,ye){return E(L,ye,"0")}function V(L,ye){function Me(vn){return 0>vn?-1:0<vn?1:0}var Ft;return(Ft=Me(L.getFullYear()-ye.getFullYear()))===0&&(Ft=Me(L.getMonth()-ye.getMonth()))===0&&(Ft=Me(L.getDate()-ye.getDate())),Ft}function Y(L){switch(L.getDay()){case 0:return new Date(L.getFullYear()-1,11,29);case 1:return L;case 2:return new Date(L.getFullYear(),0,3);case 3:return new Date(L.getFullYear(),0,2);case 4:return new Date(L.getFullYear(),0,1);case 5:return new Date(L.getFullYear()-1,11,31);case 6:return new Date(L.getFullYear()-1,11,30)}}function ae(L){var ye=L.Ab;for(L=new Date(new Date(L.Bb+1900,0,1).getTime());0<ye;){var Me=L.getMonth(),Ft=(jt(L.getFullYear())?Tl:$l)[Me];if(ye>Ft-L.getDate())ye-=Ft-L.getDate()+1,L.setDate(1),11>Me?L.setMonth(Me+1):(L.setMonth(0),L.setFullYear(L.getFullYear()+1));else{L.setDate(L.getDate()+ye);break}}return Me=new Date(L.getFullYear()+1,0,4),ye=Y(new Date(L.getFullYear(),0,4)),Me=Y(Me),0>=V(ye,L)?0>=V(Me,L)?L.getFullYear()+1:L.getFullYear():L.getFullYear()-1}c>>>=0,h>>>=0,v>>>=0,T>>>=0;var ne=a()[T+40>>>2>>>0];T={oc:s()[T>>>2>>>0],nc:s()[T+4>>>2>>>0],Gb:s()[T+8>>>2>>>0],Lb:s()[T+12>>>2>>>0],Hb:s()[T+16>>>2>>>0],Bb:s()[T+20>>>2>>>0],vb:s()[T+24>>>2>>>0],Ab:s()[T+28>>>2>>>0],wc:s()[T+32>>>2>>>0],mc:s()[T+36>>>2>>>0],pc:ne?et(ne):""},v=et(v),ne={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var Se in ne)v=v.replace(new RegExp(Se,"g"),ne[Se]);var ce="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Ee="January February March April May June July August September October November December".split(" ");ne={"%a":L=>ce[L.vb].substring(0,3),"%A":L=>ce[L.vb],"%b":L=>Ee[L.Hb].substring(0,3),"%B":L=>Ee[L.Hb],"%C":L=>D((L.Bb+1900)/100|0,2),"%d":L=>D(L.Lb,2),"%e":L=>E(L.Lb,2," "),"%g":L=>ae(L).toString().substring(2),"%G":L=>ae(L),"%H":L=>D(L.Gb,2),"%I":L=>(L=L.Gb,L==0?L=12:12<L&&(L-=12),D(L,2)),"%j":L=>{for(var ye=0,Me=0;Me<=L.Hb-1;ye+=(jt(L.Bb+1900)?Tl:$l)[Me++]);return D(L.Lb+ye,3)},"%m":L=>D(L.Hb+1,2),"%M":L=>D(L.nc,2),"%n":()=>`
`,"%p":L=>0<=L.Gb&&12>L.Gb?"AM":"PM","%S":L=>D(L.oc,2),"%t":()=>"	","%u":L=>L.vb||7,"%U":L=>D(Math.floor((L.Ab+7-L.vb)/7),2),"%V":L=>{var ye=Math.floor((L.Ab+7-(L.vb+6)%7)/7);if(2>=(L.vb+371-L.Ab-2)%7&&ye++,ye)ye==53&&(Me=(L.vb+371-L.Ab)%7,Me==4||Me==3&&jt(L.Bb)||(ye=1));else{ye=52;var Me=(L.vb+7-L.Ab-1)%7;(Me==4||Me==5&&jt(L.Bb%400-1))&&ye++}return D(ye,2)},"%w":L=>L.vb,"%W":L=>D(Math.floor((L.Ab+7-(L.vb+6)%7)/7),2),"%y":L=>(L.Bb+1900).toString().substring(2),"%Y":L=>L.Bb+1900,"%z":L=>{L=L.mc;var ye=0<=L;return L=Math.abs(L)/60,(ye?"+":"-")+("0000"+(L/60*100+L%60)).slice(-4)},"%Z":L=>L.pc,"%%":()=>"%"},v=v.replace(/%%/g,"\0\0");for(Se in ne)v.includes(Se)&&(v=v.replace(new RegExp(Se,"g"),ne[Se](T)));return v=v.replace(/\0\0/g,"%"),Se=A0(v),Se.length>h?0:(O0(Se,c),Se.length-1)}$e.Ib();for(var Il=Array(256),Si=0;256>Si;++Si)Il[Si]=String.fromCharCode(Si);Io=Il,Nt=d.BindingError=class extends Error{constructor(c){super(c),this.name="BindingError"}},d.InternalError=class extends Error{constructor(c){super(c),this.name="InternalError"}},Object.assign(Vn.prototype,{get(c){return this.wb[c]},has(c){return this.wb[c]!==void 0},Kb(c){var h=this.Nb.pop()||this.wb.length;return this.wb[h]=c,h},Mb(c){this.wb[c]=void 0,this.Nb.push(c)}}),Mt.wb.push({value:void 0},{value:null},{value:!0},{value:!1}),Mt.Db=Mt.wb.length,d.count_emval_handles=()=>{for(var c=0,h=Mt.Db;h<Mt.wb.length;++h)Mt.wb[h]!==void 0&&++c;return c};var E0=[Ht,ai,xo,ui,mr,To,$o,li,Ln,di,ci,fi,pi,So,mn,hi,fl,pl,bl,yl,vl,wl,xl,_l],C0={ua:function(c,h,v){return ie(async()=>{await d.cc(c,h,v)})},b:function(c,h,v){throw c>>>=0,new is(c).Ib(h>>>0,v>>>0),si=c,wo++,si},ga:function(c){El(c>>>0,!$,1,!A,131072,!1),$e.Tb()},F:function(c){c>>>=0,O?postMessage({cmd:"cleanupThread",thread:c}):$e.Rb($e.pb[c])},Y:hn,z:ui,ma:mr,U:To,W:$o,N:li,ka:Ln,da:di,ja:ci,H:fi,V:pi,S:So,la:mn,T:hi,K:function(c,h,v,T,E){c>>>=0,h>>>=0,v>>>=0,h=er(h);var D=h.indexOf("u")!=-1;D&&(E=(1n<<64n)-1n),nr(c,{name:h,fromWireType:V=>V,toWireType:function(V,Y){if(typeof Y!="bigint"&&typeof Y!="number")throw new TypeError(`Cannot convert "${Fn(Y)}" to ${this.name}`);if(Y<T||Y>E)throw new TypeError(`Passing a number "${Fn(Y)}" from JS side to C/C++ side to an argument of type "${h}", which is outside the valid range [${T}, ${E}]!`);return Y},argPackAdvance:8,readValueFromPointer:Oo(h,v,!D),Cb:null})},sa:function(c,h,v,T){c>>>=0,h=er(h>>>0),nr(c,{name:h,fromWireType:function(E){return!!E},toWireType:function(E,D){return D?v:T},argPackAdvance:8,readValueFromPointer:function(E){return this.fromWireType(t()[E>>>0])},Cb:null})},ra:function(c,h){c>>>=0,h=er(h>>>0),nr(c,{name:h,fromWireType:v=>{var T=Et(v);return gn(v),T},toWireType:(v,T)=>Lt(T),argPackAdvance:8,readValueFromPointer:gi,Cb:null})},J:function(c,h,v){c>>>=0,v>>>=0,h=er(h>>>0),nr(c,{name:h,fromWireType:T=>T,toWireType:(T,E)=>E,argPackAdvance:8,readValueFromPointer:bi(h,v),Cb:null})},v:function(c,h,v,T,E){if(c>>>=0,v>>>=0,h=er(h>>>0),E===-1&&(E=4294967295),E=Y=>Y,T===0){var D=32-8*v;E=Y=>Y<<D>>>D}var V=h.includes("unsigned")?function(Y,ae){return ae>>>0}:function(Y,ae){return ae};nr(c,{name:h,fromWireType:E,toWireType:V,argPackAdvance:8,readValueFromPointer:Oo(h,v,T!==0),Cb:null})},o:function(c,h,v){function T(D){var V=a()[D>>>2>>>0];return D=a()[D+4>>>2>>>0],new E(n().buffer,D,V)}c>>>=0;var E=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][h];v=er(v>>>0),nr(c,{name:v,fromWireType:T,argPackAdvance:8,readValueFromPointer:T},{Yb:!0})},L:function(c,h){c>>>=0,h=er(h>>>0);var v=h==="std::string";nr(c,{name:h,fromWireType:function(T){var E=a()[T>>>2>>>0],D=T+4;if(v)for(var V=D,Y=0;Y<=E;++Y){var ae=D+Y;if(Y==E||t()[ae>>>0]==0){if(V=et(V,ae-V),ne===void 0)var ne=V;else ne+=String.fromCharCode(0),ne+=V;V=ae+1}}else{for(ne=Array(E),Y=0;Y<E;++Y)ne[Y]=String.fromCharCode(t()[D+Y>>>0]);ne=ne.join("")}return Ir(T),ne},toWireType:function(T,E){E instanceof ArrayBuffer&&(E=new Uint8Array(E));var D=typeof E=="string";if(!(D||E instanceof Uint8Array||E instanceof Uint8ClampedArray||E instanceof Int8Array))throw new Nt("Cannot pass non-string to std::string");var V=v&&D?zt(E):E.length,Y=Po(4+V+1),ae=Y+4;if(a()[Y>>>2>>>0]=V,v&&D)Qr(E,ae,V+1);else if(D)for(D=0;D<V;++D){var ne=E.charCodeAt(D);if(255<ne)throw Ir(ae),new Nt("String has UTF-16 code units that do not fit in 8 bits");t()[ae+D>>>0]=ne}else for(D=0;D<V;++D)t()[ae+D>>>0]=E[D];return T!==null&&T.push(Ir,Y),Y},argPackAdvance:8,readValueFromPointer:yi,Cb(T){Ir(T)}})},B:function(c,h,v){if(c>>>=0,h>>>=0,v>>>=0,v=er(v),h===2)var T=wi,E=xi,D=Gn,V=()=>i(),Y=1;else h===4&&(T=ss,E=we,D=_i,V=()=>a(),Y=2);nr(c,{name:v,fromWireType:ae=>{for(var ne=a()[ae>>>2>>>0],Se=V(),ce,Ee=ae+4,L=0;L<=ne;++L){var ye=ae+4+L*h;(L==ne||Se[ye>>>Y]==0)&&(Ee=T(Ee,ye-Ee),ce===void 0?ce=Ee:(ce+=String.fromCharCode(0),ce+=Ee),Ee=ye+h)}return Ir(ae),ce},toWireType:(ae,ne)=>{if(typeof ne!="string")throw new Nt(`Cannot pass non-string to C++ string type ${v}`);var Se=D(ne),ce=Po(4+Se+h);return a()[ce>>>2]=Se>>Y,E(ne,ce+4,Se+h),ae!==null&&ae.push(Ir,ce),ce},argPackAdvance:8,readValueFromPointer:gi,Cb(ae){Ir(ae)}})},ta:function(c,h){c>>>=0,h=er(h>>>0),nr(c,{Zb:!0,name:h,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},qa:()=>1,Q:function(c,h){c>>>=0,c==h>>>0?setTimeout(()=>bn()):O?postMessage({targetThread:c,cmd:"checkMailbox"}):(c=$e.pb[c])&&c.postMessage({cmd:"checkMailbox"})},Z:function(c,h,v,T){h>>>=0,v/=2,Wn.length=v,T=T>>>0>>>3;for(var E=0;E<v;E++)Wn[E]=Oe[T+2*E]?Oe[T+2*E+1]:l()[T+2*E+1>>>0];return c=0>c?pn[-c-1]:E0[c],$e.Wb=h,h=c.apply(null,Wn),$e.Wb=0,h},fa:qt,pa:function(c){_&&$e.pb[c>>>0].ref()},t:function(c,h,v){return h>>>=0,v>>>=0,c=Et(c>>>0),h=Hn(h,"emval::as"),Eo(h,v,c)},y:function(c){return c>>>=0,ie(()=>(c=Et(c),c.then(Lt)))},p:function(c,h,v,T){return v>>>=0,T>>>=0,c=re[c>>>0],h=Et(h>>>0),c(null,h,v,T)},k:function(c,h,v,T,E){return v>>>=0,T>>>=0,E>>>=0,c=re[c>>>0],h=Et(h>>>0),v=ue(v),c(h,h[v],T,E)},c:gn,C:function(c,h){return h>>>=0,c=Et(c>>>0),h=Et(h),c==h},n:function(c){return c>>>=0,c===0?Lt(Ie()):(c=ue(c),Lt(Ie()[c]))},j:function(c,h,v){h=me(c,h>>>0);var T=h.shift();c--;var E=`return function (obj, func, destructorsRef, args) {
`,D=0,V=[];v===0&&V.push("obj");for(var Y=["retType"],ae=[T],ne=0;ne<c;++ne)V.push("arg"+ne),Y.push("argType"+ne),ae.push(h[ne]),E+=`  var arg${ne} = argType${ne}.readValueFromPointer(args${D?"+"+D:""});
`,D+=h[ne].argPackAdvance;for(E+=`  var rv = ${v===1?"new func":"func.call"}(${V.join(", ")});
`,ne=0;ne<c;++ne)h[ne].deleteObject&&(E+=`  argType${ne}.deleteObject(arg${ne});
`);return T.Zb||(Y.push("emval_returnValue"),ae.push(Eo),E+=`  return emval_returnValue(retType, destructorsRef, rv);
`),Y.push(E+`};
`),c=Ct(Y).apply(null,ae),v=`methodCaller<(${h.map(Se=>Se.name).join(", ")}) => ${T.name}>`,M(ke(v,c))},s:function(c,h){return h>>>=0,c=Et(c>>>0),h=Et(h),Lt(c[h])},e:function(c){c>>>=0,4<c&&(Mt.get(c).Qb+=1)},w:function(){return Lt([])},m:function(c){c=Et(c>>>0);for(var h=Array(c.length),v=0;v<c.length;v++)h[v]=c[v];return Lt(h)},g:function(c){return Lt(ue(c>>>0))},l:function(){return Lt({})},i:function(c){c>>>=0;for(var h=Et(c);h.length;){var v=h.pop();h.pop()(v)}gn(c)},h:function(c,h,v){h>>>=0,v>>>=0,c=Et(c>>>0),h=Et(h),v=Et(v),c[h]=v},d:function(c,h){return h>>>=0,c=Hn(c>>>0,"_emval_take_value"),c=c.readValueFromPointer(h),Lt(c)},aa:function(c,h){c=-9007199254740992>c||9007199254740992<c?NaN:Number(c),h>>>=0,c=new Date(1e3*c),s()[h>>>2>>>0]=c.getUTCSeconds(),s()[h+4>>>2>>>0]=c.getUTCMinutes(),s()[h+8>>>2>>>0]=c.getUTCHours(),s()[h+12>>>2>>>0]=c.getUTCDate(),s()[h+16>>>2>>>0]=c.getUTCMonth(),s()[h+20>>>2>>>0]=c.getUTCFullYear()-1900,s()[h+24>>>2>>>0]=c.getUTCDay(),c=(c.getTime()-Date.UTC(c.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,s()[h+28>>>2>>>0]=c},ba:function(c,h){c=-9007199254740992>c||9007199254740992<c?NaN:Number(c),h>>>=0,c=new Date(1e3*c),s()[h>>>2>>>0]=c.getSeconds(),s()[h+4>>>2>>>0]=c.getMinutes(),s()[h+8>>>2>>>0]=c.getHours(),s()[h+12>>>2>>>0]=c.getDate(),s()[h+16>>>2>>>0]=c.getMonth(),s()[h+20>>>2>>>0]=c.getFullYear()-1900,s()[h+24>>>2>>>0]=c.getDay();var v=(jt(c.getFullYear())?dl:cl)[c.getMonth()]+c.getDate()-1|0;s()[h+28>>>2>>>0]=v,s()[h+36>>>2>>>0]=-(60*c.getTimezoneOffset()),v=new Date(c.getFullYear(),6,1).getTimezoneOffset();var T=new Date(c.getFullYear(),0,1).getTimezoneOffset();c=(v!=T&&c.getTimezoneOffset()==Math.min(T,v))|0,s()[h+32>>>2>>>0]=c},ca:function(c){c>>>=0;var h=new Date(s()[c+20>>>2>>>0]+1900,s()[c+16>>>2>>>0],s()[c+12>>>2>>>0],s()[c+8>>>2>>>0],s()[c+4>>>2>>>0],s()[c>>>2>>>0],0),v=s()[c+32>>>2>>>0],T=h.getTimezoneOffset(),E=new Date(h.getFullYear(),6,1).getTimezoneOffset(),D=new Date(h.getFullYear(),0,1).getTimezoneOffset(),V=Math.min(D,E);return 0>v?s()[c+32>>>2>>>0]=+(E!=D&&V==T):0<v!=(V==T)&&(E=Math.max(D,E),h.setTime(h.getTime()+6e4*((0<v?V:E)-T))),s()[c+24>>>2>>>0]=h.getDay(),v=(jt(h.getFullYear())?dl:cl)[h.getMonth()]+h.getDate()-1|0,s()[c+28>>>2>>>0]=v,s()[c>>>2>>>0]=h.getSeconds(),s()[c+4>>>2>>>0]=h.getMinutes(),s()[c+8>>>2>>>0]=h.getHours(),s()[c+12>>>2>>>0]=h.getDate(),s()[c+16>>>2>>>0]=h.getMonth(),s()[c+20>>>2>>>0]=h.getYear(),c=h.getTime(),isNaN(c)?(s()[Al()>>>2>>>0]=61,c=-1):c/=1e3,BigInt(c)},_:fl,$:pl,P:function(c,h,v){function T(ne){return(ne=ne.toTimeString().match(/\(([A-Za-z ]+)\)$/))?ne[1]:"GMT"}c>>>=0,h>>>=0,v>>>=0;var E=new Date().getFullYear(),D=new Date(E,0,1),V=new Date(E,6,1);E=D.getTimezoneOffset();var Y=V.getTimezoneOffset(),ae=Math.max(E,Y);a()[c>>>2>>>0]=60*ae,s()[h>>>2>>>0]=+(E!=Y),c=T(D),h=T(V),c=hl(c),h=hl(h),Y<E?(a()[v>>>2>>>0]=c,a()[v+4>>>2>>>0]=h):(a()[v>>>2>>>0]=h,a()[v+4>>>2>>>0]=c)},q:()=>{Jr("")},f:function(c,h,v){return c>>>=0,h=ml(h>>>0,v>>>0),pn[c].apply(null,h)},M:function(c,h,v){return c>>>=0,h=ml(h>>>0,v>>>0),pn[c].apply(null,h)},G:()=>{},I:()=>Date.now(),oa:()=>{throw Ot+=1,"unwind"},R:function(){return 4294901760},u:()=>performance.timeOrigin+performance.now(),x:()=>_?(Im(),Hr(Sm)).cpus().length:navigator.hardwareConcurrency,O:function(c){c>>>=0;var h=t().length;if(c<=h||4294901760<c)return!1;for(var v=1;4>=v;v*=2){var T=h*(1+.2/v);T=Math.min(T,c+100663296);var E=Math;T=Math.max(c,T);e:{E=(E.min.call(E,4294901760,T+(65536-T%65536)%65536)-Pe.buffer.byteLength+65535)/65536;try{Pe.grow(E),mt();var D=1;break e}catch{}D=void 0}if(D)return!0}return!1},ha:bl,ia:yl,X:Nn,A:vl,E:wl,ea:xl,D:_l,a:Pe||d.wasmMemory,na:Sl,r:function(c,h,v,T){return Sl(c>>>0,h>>>0,v>>>0,T>>>0)}},de=function(){function c(v,T){return de=v.exports,de=Ti(),de=P0(),$e.Ub.push(de.bb),gt.unshift(de.va),xe=T,co(),de}var h={a:C0};if(hr++,d.instantiateWasm)try{return d.instantiateWasm(h,c)}catch(v){Be(`Module.instantiateWasm callback failed with error: ${v}`),m(v)}return po(h,function(v){c(v.instance,v.module)}).catch(m),{}}();d._OrtInit=(c,h)=>(d._OrtInit=de.wa)(c,h),d._OrtGetLastError=(c,h)=>(d._OrtGetLastError=de.xa)(c,h),d._OrtCreateSessionOptions=(c,h,v,T,E,D,V,Y,ae,ne)=>(d._OrtCreateSessionOptions=de.ya)(c,h,v,T,E,D,V,Y,ae,ne),d._OrtAppendExecutionProvider=(c,h)=>(d._OrtAppendExecutionProvider=de.za)(c,h),d._OrtAddFreeDimensionOverride=(c,h,v)=>(d._OrtAddFreeDimensionOverride=de.Aa)(c,h,v),d._OrtAddSessionConfigEntry=(c,h,v)=>(d._OrtAddSessionConfigEntry=de.Ba)(c,h,v),d._OrtReleaseSessionOptions=c=>(d._OrtReleaseSessionOptions=de.Ca)(c),d._OrtCreateSession=(c,h,v)=>(d._OrtCreateSession=de.Da)(c,h,v),d._OrtReleaseSession=c=>(d._OrtReleaseSession=de.Ea)(c),d._OrtGetInputOutputCount=(c,h,v)=>(d._OrtGetInputOutputCount=de.Fa)(c,h,v),d._OrtGetInputName=(c,h)=>(d._OrtGetInputName=de.Ga)(c,h),d._OrtGetOutputName=(c,h)=>(d._OrtGetOutputName=de.Ha)(c,h),d._OrtFree=c=>(d._OrtFree=de.Ia)(c),d._OrtCreateTensor=(c,h,v,T,E,D)=>(d._OrtCreateTensor=de.Ja)(c,h,v,T,E,D),d._OrtGetTensorData=(c,h,v,T,E)=>(d._OrtGetTensorData=de.Ka)(c,h,v,T,E),d._OrtReleaseTensor=c=>(d._OrtReleaseTensor=de.La)(c),d._OrtCreateRunOptions=(c,h,v,T)=>(d._OrtCreateRunOptions=de.Ma)(c,h,v,T),d._OrtAddRunConfigEntry=(c,h,v)=>(d._OrtAddRunConfigEntry=de.Na)(c,h,v),d._OrtReleaseRunOptions=c=>(d._OrtReleaseRunOptions=de.Oa)(c),d._OrtCreateBinding=c=>(d._OrtCreateBinding=de.Pa)(c),d._OrtBindInput=(c,h,v)=>(d._OrtBindInput=de.Qa)(c,h,v),d._OrtBindOutput=(c,h,v,T)=>(d._OrtBindOutput=de.Ra)(c,h,v,T),d._OrtClearBoundOutputs=c=>(d._OrtClearBoundOutputs=de.Sa)(c),d._OrtReleaseBinding=c=>(d._OrtReleaseBinding=de.Ta)(c),d._OrtRunWithBinding=(c,h,v,T,E)=>(d._OrtRunWithBinding=de.Ua)(c,h,v,T,E),d._OrtRun=(c,h,v,T,E,D,V,Y)=>(d._OrtRun=de.Va)(c,h,v,T,E,D,V,Y),d._OrtEndProfiling=c=>(d._OrtEndProfiling=de.Wa)(c),d._JsepOutput=(c,h,v)=>(d._JsepOutput=de.Xa)(c,h,v),d._JsepGetNodeName=c=>(d._JsepGetNodeName=de.Ya)(c);var Al=()=>(Al=de.Za)(),Ii=d._pthread_self=()=>(Ii=d._pthread_self=de._a)(),Po=d._malloc=c=>(Po=d._malloc=de.$a)(c),Ir=d._free=c=>(Ir=d._free=de.ab)(c);d.__emscripten_tls_init=()=>(d.__emscripten_tls_init=de.bb)();var Ol=c=>(Ol=de.cb)(c);d.__embind_initialize_bindings=()=>(d.__embind_initialize_bindings=de.db)();var El=d.__emscripten_thread_init=(c,h,v,T,E,D)=>(El=d.__emscripten_thread_init=de.fb)(c,h,v,T,E,D);d.__emscripten_thread_crashed=()=>(d.__emscripten_thread_crashed=de.gb)();var Cl=(c,h,v,T)=>(Cl=de.hb)(c,h,v,T),cs=c=>(cs=de.ib)(c),fs=d.__emscripten_thread_exit=c=>(fs=d.__emscripten_thread_exit=de.jb)(c),Pl=()=>(Pl=de.kb)(),kl=(c,h)=>(kl=de.lb)(c,h),ps=()=>(ps=de.mb)(),Ai=c=>(Ai=de.nb)(c),hs=c=>(hs=de.ob)(c),Dl=d.dynCall_ii=(c,h)=>(Dl=d.dynCall_ii=de.qb)(c,h),Bl=c=>(Bl=de.rb)(c),Rl=()=>(Rl=de.sb)(),zl=c=>(zl=de.tb)(c),Nl=()=>(Nl=de.ub)();d.___start_em_js=1393348,d.___stop_em_js=1393509;function P0(){var c=de;c=Object.assign({},c);var h=T=>()=>T()>>>0,v=T=>E=>T(E)>>>0;return c.Za=h(c.Za),c._a=h(c._a),c.$a=v(c.$a),c.cb=v(c.cb),c.emscripten_main_runtime_thread_id=h(c.emscripten_main_runtime_thread_id),c.mb=h(c.mb),c.ob=v(c.ob),c}d.wasmMemory=Pe,d.stackAlloc=hs,d.stackSave=ps,d.stackRestore=Ai,d.keepRuntimeAlive=()=>0<Ot,d.UTF8ToString=et,d.stringToUTF8=Qr,d.lengthBytesUTF8=zt,d.ExitStatus=ho,d.PThread=$e;var Oi;fn=function c(){Oi||Ml(),Oi||(fn=c)};function Ml(){if(!(0<hr))if(O)p(d),O||Mn(gt),startWorker(d);else{if(d.preRun)for(typeof d.preRun=="function"&&(d.preRun=[d.preRun]);d.preRun.length;)wt.unshift(d.preRun.shift());Mn(wt),0<hr||Oi||(Oi=!0,d.calledRun=!0,He||(O||Mn(gt),p(d),O||Mn(Vr)))}}return Ml(),e.ready}})();typeof Om=="object"&&typeof Eu=="object"?Eu.exports=Am:typeof define=="function"&&define.amd&&define([],()=>Am)});var Cm=it((jP,p2)=>{p2.exports='"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs"),vm=require("vm");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,"utf8"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed?.(),a}}self.onmessage=handleMessage;\n'});var km,h2,Cu,Pu,Aa,Pm,m2,g2,b2,Dm,ct,io=R(()=>{"use strict";km=_m();h2=Em(),Pu=!1,Aa=!1,Pm=!1,m2=r=>{if(r===1)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+r+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+r+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},g2=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},b2=(r,e)=>r?e?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":e?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Dm=async r=>{if(Pu)return Promise.resolve();if(Aa)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Pm)throw new Error("previous call to 'initializeWebAssembly()' failed.");Aa=!0;let e=r.initTimeout,n=r.numThreads,t=r.simd,o=m2(n),i=t&&g2(),s=r.wasmPaths,a=typeof s=="string"?s:void 0,u=b2(i,o),l=typeof s=="object"?s[u]:void 0,d=!1,p=[];if(e>0&&p.push(new Promise(m=>{setTimeout(()=>{d=!0,m()},e)})),p.push(new Promise((m,y)=>{let b=o?h2:km,w={locateFile:(A,$)=>{if(o&&A.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([Cm()],{type:"text/javascript"}));if(A.endsWith(".wasm")){if(l)return l;let _=a??$;return u==="ort-wasm-simd.wasm"?_+"ort-wasm-simd.jsep.wasm":u==="ort-wasm-simd-threaded.wasm"?_+"ort-wasm-simd-threaded.jsep.wasm":_+u}return $+A}};if(o)if(w.numThreads=n,typeof Blob>"u")w.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let A=`var ortWasmThreaded=${b.toString()};`;w.mainScriptUrlOrBlob=new Blob([A],{type:"text/javascript"})}b(w).then(A=>{Aa=!1,Pu=!0,Cu=A,m()},A=>{Aa=!1,Pm=!0,y(A)})})),await Promise.race(p),d)throw new Error(`WebAssembly backend initializing failed due to timeout: ${e}ms`)},ct=()=>{if(Pu&&Cu)return Cu;throw new Error("WebAssembly is not initialized yet.")}});var dt,Yo,rt,Oa=R(()=>{"use strict";io();dt=(r,e)=>{let n=ct(),t=n.lengthBytesUTF8(r)+1,o=n._malloc(t);return n.stringToUTF8(r,o,t),e.push(o),o},Yo=(r,e,n,t)=>{if(typeof r=="object"&&r!==null){if(n.has(r))throw new Error("Circular reference in options");n.add(r)}Object.entries(r).forEach(([o,i])=>{let s=e?e+o:o;if(typeof i=="object")Yo(i,s+".",n,t);else if(typeof i=="string"||typeof i=="number")t(s,i.toString());else if(typeof i=="boolean")t(s,i?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof i}`)})},rt=r=>{let e=ct(),n=e.stackSave();try{let t=e.stackAlloc(8);e._OrtGetLastError(t,t+4);let o=e.HEAP32[t/4],i=e.HEAPU32[t/4+1],s=i?e.UTF8ToString(i):"";throw new Error(`${r} ERROR_CODE: ${o}, ERROR_MESSAGE: ${s}`)}finally{e.stackRestore(n)}}});var Bm,Rm=R(()=>{"use strict";io();Oa();Bm=r=>{let e=ct(),n=0,t=[],o=r||{};try{if(r?.logSeverityLevel===void 0)o.logSeverityLevel=2;else if(typeof r.logSeverityLevel!="number"||!Number.isInteger(r.logSeverityLevel)||r.logSeverityLevel<0||r.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${r.logSeverityLevel}`);if(r?.logVerbosityLevel===void 0)o.logVerbosityLevel=0;else if(typeof r.logVerbosityLevel!="number"||!Number.isInteger(r.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${r.logVerbosityLevel}`);r?.terminate===void 0&&(o.terminate=!1);let i=0;return r?.tag!==void 0&&(i=dt(r.tag,t)),n=e._OrtCreateRunOptions(o.logSeverityLevel,o.logVerbosityLevel,!!o.terminate,i),n===0&&rt("Can't create run options."),r?.extra!==void 0&&Yo(r.extra,"",new WeakSet,(s,a)=>{let u=dt(s,t),l=dt(a,t);e._OrtAddRunConfigEntry(n,u,l)!==0&&rt(`Can't set a run config entry: ${s} - ${a}.`)}),[n,t]}catch(i){throw n!==0&&e._OrtReleaseRunOptions(n),t.forEach(s=>e._free(s)),i}}});var y2,v2,w2,x2,zm,Nm=R(()=>{"use strict";io();Oa();y2=r=>{switch(r){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${r}`)}},v2=r=>{switch(r){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${r}`)}},w2=r=>{r.extra||(r.extra={}),r.extra.session||(r.extra.session={});let e=r.extra.session;e.use_ort_model_bytes_directly||(e.use_ort_model_bytes_directly="1"),r.executionProviders&&r.executionProviders.some(n=>(typeof n=="string"?n:n.name)==="webgpu")&&(r.enableMemPattern=!1)},x2=(r,e,n)=>{for(let t of e){let o=typeof t=="string"?t:t.name;switch(o){case"webnn":if(o="WEBNN",typeof t!="string"){let s=t;if(s?.deviceType){let a=dt("deviceType",n),u=dt(s.deviceType,n);ct()._OrtAddSessionConfigEntry(r,a,u)!==0&&rt(`Can't set a session config entry: 'deviceType' - ${s.deviceType}.`)}if(s?.numThreads){let a=s.numThreads;(typeof a!="number"||!Number.isInteger(a)||a<0)&&(a=0);let u=dt("numThreads",n),l=dt(a.toString(),n);ct()._OrtAddSessionConfigEntry(r,u,l)!==0&&rt(`Can't set a session config entry: 'numThreads' - ${s.numThreads}.`)}if(s?.powerPreference){let a=dt("powerPreference",n),u=dt(s.powerPreference,n);ct()._OrtAddSessionConfigEntry(r,a,u)!==0&&rt(`Can't set a session config entry: 'powerPreference' - ${s.powerPreference}.`)}}break;case"webgpu":if(o="JS",typeof t!="string"){let s=t;if(s?.preferredLayout){if(s.preferredLayout!=="NCHW"&&s.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${s.preferredLayout}`);let a=dt("preferredLayout",n),u=dt(s.preferredLayout,n);ct()._OrtAddSessionConfigEntry(r,a,u)!==0&&rt(`Can't set a session config entry: 'preferredLayout' - ${s.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${o}`)}let i=dt(o,n);ct()._OrtAppendExecutionProvider(r,i)!==0&&rt(`Can't append execution provider: ${o}.`)}},zm=r=>{let e=ct(),n=0,t=[],o=r||{};w2(o);try{let i=y2(o.graphOptimizationLevel??"all"),s=v2(o.executionMode??"sequential"),a=typeof o.logId=="string"?dt(o.logId,t):0,u=o.logSeverityLevel??2;if(!Number.isInteger(u)||u<0||u>4)throw new Error(`log serverity level is not valid: ${u}`);let l=o.logVerbosityLevel??0;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log verbosity level is not valid: ${l}`);let d=typeof o.optimizedModelFilePath=="string"?dt(o.optimizedModelFilePath,t):0;if(n=e._OrtCreateSessionOptions(i,!!o.enableCpuMemArena,!!o.enableMemPattern,s,!!o.enableProfiling,0,a,u,l,d),n===0&&rt("Can't create session options."),o.executionProviders&&x2(n,o.executionProviders,t),o.enableGraphCapture!==void 0){if(typeof o.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${o.enableGraphCapture}`);let p=dt("enableGraphCapture",t),m=dt(o.enableGraphCapture.toString(),t);e._OrtAddSessionConfigEntry(n,p,m)!==0&&rt(`Can't set a session config entry: 'enableGraphCapture' - ${o.enableGraphCapture}.`)}if(o.freeDimensionOverrides)for(let[p,m]of Object.entries(o.freeDimensionOverrides)){if(typeof p!="string")throw new Error(`free dimension override name must be a string: ${p}`);if(typeof m!="number"||!Number.isInteger(m)||m<0)throw new Error(`free dimension override value must be a non-negative integer: ${m}`);let y=dt(p,t);e._OrtAddFreeDimensionOverride(n,y,m)!==0&&rt(`Can't set a free dimension override: ${p} - ${m}.`)}return o.extra!==void 0&&Yo(o.extra,"",new WeakSet,(p,m)=>{let y=dt(p,t),b=dt(m,t);e._OrtAddSessionConfigEntry(n,y,b)!==0&&rt(`Can't set a session config entry: ${p} - ${m}.`)}),[n,t]}catch(i){throw n!==0&&e._OrtReleaseSessionOptions(n),t.forEach(s=>e._free(s)),i}}});var ku,ln,Xo,Ea,Zo,Ca,Du,Ae=R(()=>{"use strict";ku=r=>{switch(r){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${r}`)}},ln=r=>{switch(r){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${r}`)}},Xo=r=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][r],Ea=r=>{switch(r){case"float16":return Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${r}`)}},Zo=r=>{switch(r){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${r}`)}},Ca=r=>r==="float32"||r==="int32"||r==="int64"||r==="bool"||r==="float16"||r==="uint32",Du=r=>{switch(r){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${r}`)}}});var Jo,Bu=R(()=>{"use strict";Jo=async r=>{if(typeof r=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(r))}catch(e){if(e.code==="ERR_FS_FILE_TOO_LARGE"){let n=(void 0)(r),t=[];for await(let o of n)t.push(o);return new Uint8Array(Buffer.concat(t))}throw e}else{let e=await fetch(r);if(!e.ok)throw new Error(`failed to load external data file: ${r}`);let n=e.headers.get("Content-Length"),t=n?parseInt(n,10):0;if(t<1073741824)return new Uint8Array(await e.arrayBuffer());{if(!e.body)throw new Error(`failed to load external data file: ${r}, no response body.`);let o=e.body.getReader(),i;try{i=new ArrayBuffer(t)}catch(a){if(a instanceof RangeError){let u=Math.ceil(t/65536);i=new WebAssembly.Memory({initial:u,maximum:u}).buffer}else throw a}let s=0;for(;;){let{done:a,value:u}=await o.read();if(a)break;let l=u.byteLength;new Uint8Array(i,s,l).set(u),s+=l}return new Uint8Array(i,0,t)}}else return r instanceof Blob?new Uint8Array(await r.arrayBuffer()):r instanceof Uint8Array?r:new Uint8Array(r)}});var _2,T2,Mm,Lm,Fm,$2,nt,dn=R(()=>{"use strict";Ae();_2=["V","I","W","E","F"],T2=(r,e)=>{console.log(`[${_2[r]},${new Date().toISOString()}]${e}`)},Fm=(r,e)=>{Mm=r,Lm=e},$2=(r,e)=>{let n=Zo(r),t=Zo(Mm);n>=t&&T2(n,typeof e=="function"?e():e)},nt=(...r)=>{Lm&&$2(...r)}});var Um,Vm=R(()=>{"use strict";Ae();Um=(r,e)=>new(Ea(e))(r)});var Pa=R(()=>{"use strict"});var ka,S2,Gm,zu,Ru,Hm,qm=R(()=>{"use strict";dn();Pa();ka=r=>Math.ceil(r/16)*16,S2=1,Gm=()=>S2++,zu=async(r,e,n,t)=>{let o=ka(n),i=r.device.createBuffer({size:o,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let s=r.getCommandEncoder();r.endComputePass(),s.copyBufferToBuffer(e,0,i,0,o),r.flush(),await i.mapAsync(GPUMapMode.READ);let a=i.getMappedRange();if(t){let u=t();return u.set(new Uint8Array(a,0,n)),u}else return new Uint8Array(a.slice(0,n))}finally{i.destroy()}},Ru=class{constructor(e){this.backend=e;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map,this.capturedPendingBuffers=new Map}upload(e,n){let t=n.buffer,o=n.byteOffset,i=n.byteLength,s=ka(i),a=this.storageCache.get(e);if(!a)throw new Error("gpu data for uploading does not exist");if(a.originalSize!==i)throw new Error(`inconsistent data size. gpu data size=${a.originalSize}, data size=${i}`);let u=this.backend.device.createBuffer({mappedAtCreation:!0,size:s,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),l=u.getMappedRange();new Uint8Array(l).set(new Uint8Array(t,o,i)),u.unmap();let d=this.backend.getCommandEncoder();this.backend.endComputePass(),d.copyBufferToBuffer(u,0,a.gpuData.buffer,0,s),nt("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`),this.buffersForUploadingPending.push(u)}memcpy(e,n){let t=this.storageCache.get(e);if(!t)throw new Error("source gpu data for memcpy does not exist");let o=this.storageCache.get(n);if(!o)throw new Error("destination gpu data for memcpy does not exist");if(t.originalSize!==o.originalSize)throw new Error("inconsistent source and destination gpu data size");let i=ka(t.originalSize),s=this.backend.getCommandEncoder();this.backend.endComputePass(),s.copyBufferToBuffer(t.gpuData.buffer,0,o.gpuData.buffer,0,i)}registerExternalBuffer(e,n,t){let o;if(t){if(o=this.externalBuffers.get(t),o===void 0)throw new Error("previous buffer is not registered");if(e===t)return nt("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${n}) => id=${o}, buffer is the same, skip.`),o;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`);this.externalBuffers.delete(t)}else o=Gm();return this.storageCache.set(o,{gpuData:{id:o,type:0,buffer:e},originalSize:n}),this.externalBuffers.set(e,o),nt("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${n}) => id=${o}, registered.`),o}unregisterExternalBuffer(e){let n=this.externalBuffers.get(e);n!==void 0&&(this.storageCache.delete(n),this.externalBuffers.delete(e),nt("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${n}`))}create(e,n=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let t=ka(e),o,i=(n&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,s=(n&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(i||s){let u=i?this.freeBuffers:this.freeUniformBuffers,l=u.get(t);l||(l=[],u.set(t,l)),l.length>0?o=l.pop():o=this.backend.device.createBuffer({size:t,usage:n})}else o=this.backend.device.createBuffer({size:t,usage:n});let a={id:Gm(),type:0,buffer:o};return this.storageCache.set(a.id,{gpuData:a,originalSize:e}),nt("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${a.id}`),a}get(e){return this.storageCache.get(e)?.gpuData}release(e){let n=this.storageCache.get(e);if(!n)throw new Error("releasing data does not exist");return nt("verbose",()=>`[WebGPU] GpuDataManager.release(id=${e}), gpuDataId=${n.gpuData.id}`),this.storageCache.delete(e),this.buffersPending.push(n.gpuData.buffer),n.originalSize}async download(e,n){let t=this.storageCache.get(e);if(!t)throw new Error("data does not exist");await zu(this.backend,t.gpuData.buffer,t.originalSize,n)}refreshPendingBuffers(){for(let e of this.buffersForUploadingPending)e.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let e of this.buffersPending)(e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(e.size).push(e):(e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(e.size).push(e):e.destroy();this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let n of this.buffersPending)e.push(n);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(e=>{e.forEach(n=>{n.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(n=>{n.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(e=>{e.forEach(n=>{n.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(e){let n=this.capturedPendingBuffers.get(e);n&&(n.forEach(t=>{t.destroy()}),this.capturedPendingBuffers.delete(e))}},Hm=(...r)=>new Ru(...r)});var Nu,Ve,Bt=R(()=>{"use strict";Nu=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},Ve=r=>new Nu(r)});var Mu,Dr,H,Bn,Da,Ba,Ra,Ge=R(()=>{"use strict";Mu=class{static calcMatMulShape(e,n){return e[1]!==n[0]?void 0:[e[0],n[1]]}},Dr=class{static calcShape(e,n,t=!1){let o=e.length,i=n.length;if(o===0)return n;if(i===0)return e;let s=Math.max(e.length,n.length),a=new Array(s);if(t){if(o<2||i<2)return;let u=Mu.calcMatMulShape([e[o-2],e[o-1]],[n[i-2],n[i-1]]);if(u===void 0)return;[a[s-2],a[s-1]]=u}for(let u=t?3:1;u<=s;u++){let l=o-u<0?1:e[o-u],d=i-u<0?1:n[i-u];if(l!==d&&l>1&&d>1)return;a[s-u]=Math.max(l,d)}return a}static isValidBroadcast(e,n){let t=e.length,o=n.length;if(t>o)return!1;for(let i=1;i<=t;i++)if(e[t-i]!==1&&e[t-i]!==n[o-i])return!1;return!0}},H=class r{static size(e){return r.getSizeFromDimensionRange(e,0,e.length)}static sizeFromDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,n,e.length)}static sizeToDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeToDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,0,n)}static getSizeFromDimensionRange(e,n,t){let o=1;for(let i=n;i<t;i++){if(e[i]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");o*=e[i]}return o}static computeStrides(e){let n=e.length;if(n===0)return[];if(n===1)return[1];let t=new Array(n);t[n-1]=1,t[n-2]=e[n-1];for(let o=n-3;o>=0;--o)t[o]=t[o+1]*e[o+1];return t}static normalizeAxis(e,n){if(e<-n&&e>=n)throw new Error("unsupported axis for this operation.");return e<0?e+n:e}static normalizeAxes(e,n){return e.map(t=>this.normalizeAxis(t,n??e.length))}static sortBasedOnPerm(e,n){return n?n.map(t=>e[t]):e.slice().reverse()}static padShape(e,n){let t=e.length;return e.map((o,i)=>o+n[i]+n[i+t])}static areEqual(e,n){return e.length!==n.length?!1:e.every((t,o)=>t===n[o])}},Bn=class r{static adjustPoolAttributes(e,n,t,o,i,s){if(!e&&t.length!==n.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let a=0;a<n.length-2;a++)a>=t.length?t.push(n[a+2]):t[a]=n[a+2];for(let a=0;a<t.length;a++)if(a<o.length){if(o[a]<0)throw new Error("strides should be greater than or equal to 1")}else o.push(1);for(let a=0;a<t.length;a++)if(a<i.length){if(i[a]<0)throw new Error("dilations should be greater than or equal to 1")}else i.push(1);for(let a=0;a<t.length*2;a++)if(a<s.length){if(s[a]<0)throw new Error("pad should be greater than or equal to 1")}else s.push(0);for(let a=0;a<t.length;a++){if(t[a]<=0)throw new Error("kernel shapes need to be greater than 0");if(s[a]>=t[a]||s[a+t.length]>=t[a])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(e,n,t,o,i,s,a){if(a){if(i.length!==2*(e.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(n.length!==e.length-2)throw new Error("length of strides should be the length of data dimensions");if(o.length!==e.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let u=0;u<e.length-2;u++)r.adjustPadAndReturnShape(e[u+(s?1:2)],n[u],t[u],o[u],i,u,u+e.length-2,a)}}static computePoolOutputShape(e,n,t,o,i,s,a){if(n.length<=0)throw new Error("input shape must be of size greater than 0");let u=[n[0],n[1]];return r.computeShapeHelper(e,n,u,t,o,i,s,a),u}static computeConvOutputShape(e,n,t,o,i,s,a){if(e.length<=0||n.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let u=[e[0],n[0]];return r.computeShapeHelper(!1,e,u,t,o,i,s,a),u}static computeShapeHelper(e,n,t,o,i,s,a,u){if(e)for(let l=0;l<n.length-2;l++)t.push(1);else for(let l=0;l<n.length-2;l++)t.push(r.adjustPadAndReturnShape(n[l+2],o[l],i[l],s[l],a,l,l+n.length-2,u))}static adjustPadAndReturnShape(e,n,t,o,i,s,a,u){let l=t*(o-1)+1;if(u&&u!=="NOTSET")switch(u){case"VALID":return i[s]=0,i[a]=0,Math.floor((e-l)/n+1);case"SAME_LOWER":case"SAME_UPPER":if(t!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let p=((e+n-1)/n-1)*n+o-e;return i[s]=Math.floor(u==="SAME_LOWER"?(p+1)/2:p/2),i[a]=p-i[s],Math.floor((e+p-o)/n+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((e+i[s]+i[a]-l)/n+1)}},Da=class{static getShapeOfGemmResult(e,n,t,o,i){if(e.length!==2||t.length!==2)throw new Error("shape need to be of size 2");let s,a,u;n?(s=e[1],a=e[0]):(s=e[0],a=e[1]);let l=-1;if(o?(u=t[0],l=1):(u=t[1],l=0),t[l]!==a)throw new Error("dimension mismatch");if(s<=0||u<=0||a<=0)throw new Error("invalid shape specified");if(i&&!Dr.isValidBroadcast(i,[s,u]))throw new Error("gemm: invalid bias shape for broadcast");return[s,u,a]}},Ba=-34028234663852886e22,Ra=34028234663852886e22});var I2,Fu,yt,_r,K,vt,Rt,Tr,Qt,Te,Uu,W,te,za,Lu,jm,ao,Ue=R(()=>{"use strict";Ae();Ge();I2=64,Fu=(r,e)=>{if(e===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(r){case 10:return e>1?`vec${e}<f16>`:"f16";case 1:return e>1?`vec${e}<f32>`:"f32";case 6:return e>1?`vec${e}<i32>`:"i32";case 12:return e>1?`vec${e}<u32>`:"u32";case 7:if(e>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(e>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(e!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${r}`)}},yt=(r,e=1)=>{let n=Fu(r,e);return typeof n=="string"?n:n[0]},_r=(r,e=1)=>{let n=Fu(r,e);return typeof n=="string"?n:n[1]},K=r=>r.length===0?[]:[{type:12,data:r},{type:12,data:H.computeStrides(r)}],vt=r=>r%4===0?4:r%2===0?2:1,Rt=(r="f32",e,n="0")=>!e||e===1?`${r}(${n})`:`vec${e}<${r}>(${n})`,Tr=(r,e,n)=>r==="f32"?n:e===1?`f32(${n})`:`vec${e}f(${n})`,Qt=(r,e)=>e===4?`(${r}.x + ${r}.y + ${r}.z + ${r}.w)`:e===2?`(${r}.x + ${r}.y)`:e===3?`(${r}.x + ${r}.y + ${r}.z)`:r,Te=(r,e,n,t)=>r.startsWith("uniforms.")&&n>4?typeof e=="string"?t==="f16"?`${r}[(${e}) / 8][(${e}) % 8 / 4][(${e}) % 8 % 4]`:`${r}[(${e}) / 4][(${e}) % 4]`:t==="f16"?`${r}[${Math.floor(e/8)}][${Math.floor(e%8/4)}][${e%8%4}]`:`${r}[${Math.floor(e/4)}][${e%4}]`:n>1?`${r}[${e}]`:r,Uu=(r,e,n,t,o)=>{let i=typeof n=="number",s=i?n:n.length,a=[...new Array(s).keys()],u=s<2?"u32":s<=4?`vec${s}<u32>`:`array<u32, ${s}>`,l=Fu(e,o),d=typeof l=="string"?l:l[1],p=typeof l=="string"?l:l[0],m={indices:u,value:d,storage:p,tensor:e},y=X=>typeof X=="string"?X:`${X}u`,b={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},w=i?"uniforms.":"",A=`${w}${r}_shape`,$=`${w}${r}_strides`,_="";for(let X=0;X<s-1;X++)_+=`
    let dim${X} = current / ${Te($,X,s)};
    let rest${X} = current % ${Te($,X,s)};
    indices[${X}] = dim${X};
    current = rest${X};
    `;_+=`indices[${s-1}] = current;`;let O=s<2?"":`
  fn o2i_${r}(offset: u32) -> ${m.indices} {
    var indices: ${m.indices};
    var current = offset;
    ${_}
    return indices;
  }`,P=X=>(b.offsetToIndices=!0,s<2?X:`o2i_${r}(${X})`),N=[];if(s>=2)for(let X=s-1;X>=0;X--)N.push(`${Te($,X,s)} * (indices[${X}])`);let F=s<2?"":`
  fn i2o_${r}(indices: ${m.indices}) -> u32 {
    return ${N.join("+")};
  }`,G=X=>(b.indicesToOffset=!0,s<2?X:`i2o_${r}(${X})`),J=(...X)=>s===0?"0u":`${m.indices}(${X.map(y).join(",")})`,le=(X,be)=>s<2?`${X}`:`${Te(X,be,s)}`,z=(X,be,Oe)=>s<2?`${X}=${Oe};`:`${Te(X,be,s)}=${Oe};`,q={},tt=(X,be)=>{b.broadcastedIndicesToOffset=!0;let Oe=`${be.name}broadcastedIndicesTo${r}Offset`;if(Oe in q)return`${Oe}(${X})`;let pr=[];for(let At=s-1;At>=0;At--){let mt=be.indicesGet("outputIndices",At+be.rank-s);pr.push(`${le($,At)} * (${mt} % ${le(A,At)})`)}return q[Oe]=`fn ${Oe}(outputIndices: ${be.type.indices}) -> u32 {
             return ${pr.length>0?pr.join("+"):"0u"};
           }`,`${Oe}(${X})`},ot=(X,be)=>(()=>{if(m.storage===m.value)return`${r}[${X}]=${be};`;if(m.storage==="vec2<u32>"&&m.value==="i32")return`${r}[${X}]=vec2<u32>(u32(${be}), select(0u, 0xFFFFFFFFu, ${be} < 0));`;if(m.storage==="vec2<u32>"&&m.value==="u32")return`${r}[${X}]=vec2<u32>(u32(${be}), 0u);`;if(m.storage==="u32"&&m.value==="vec4<bool>")return`${r}[${X}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${be}));`;throw new Error(`not supported combination of storage type ${m.storage} and value type ${m.value} yet`)})(),Be=X=>(()=>{if(m.storage===m.value)return`${r}[${X}]`;if(m.storage==="vec2<u32>"&&m.value==="i32")return`i32(${r}[${X}].x)`;if(m.storage==="vec2<u32>"&&m.value==="u32")return`u32(${r}[${X}].x)`;if(m.storage==="u32"&&m.value==="vec4<bool>")return`vec4<bool>(bool(${r}[${X}] & 0xFFu), bool(${r}[${X}] & 0xFF00u), bool(${r}[${X}] & 0xFF0000u), bool(${r}[${X}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${m.storage} and value type ${m.value} yet`)})(),Pe=s<2?"":`
  fn get_${r}ByIndices(indices: ${m.indices}) -> ${d} {
    return ${Be(`i2o_${r}(indices)`)};
  }`,xe=s<2?"":(()=>{let X=a.map(Oe=>`d${Oe}: u32`).join(", "),be=a.map(Oe=>`d${Oe}`).join(", ");return`
  fn get_${r}(${X}) -> ${d} {
    return get_${r}ByIndices(${J(be)});
  }`})(),He=(...X)=>{if(X.length!==s)throw new Error(`indices length must be ${s}`);let be=X.map(y).join(",");return s===0?Be("0u"):s===1?Be(be[0]):(b.get=!0,b.getByIndices=!0,b.indicesToOffset=!0,`get_${r}(${be})`)},Ne=X=>s<2?Be(X):(b.getByIndices=!0,b.indicesToOffset=!0,`get_${r}ByIndices(${X})`),pe=s<2?"":`
  fn set_${r}ByIndices(indices: ${m.indices}, value: ${d}) {
    ${ot(`i2o_${r}(indices)`,"value")}
  }`,Re=s<2?"":(()=>{let X=a.map(Oe=>`d${Oe}: u32`).join(", "),be=a.map(Oe=>`d${Oe}`).join(", ");return`
  fn set_${r}(${X}, value: ${d}) {
    set_${r}ByIndices(${J(be)}, value);
  }`})();return{impl:()=>{let X=[],be=!1;return b.offsetToIndices&&(X.push(O),be=!0),b.indicesToOffset&&(X.push(F),be=!0),b.broadcastedIndicesToOffset&&(Object.values(q).forEach(Oe=>X.push(Oe)),be=!0),b.set&&(X.push(Re),be=!0),b.setByIndices&&(X.push(pe),be=!0),b.get&&(X.push(xe),be=!0),b.getByIndices&&(X.push(Pe),be=!0),!i&&be&&X.unshift(`const ${A} = ${m.indices}(${n.join(",")});`,`const ${$} = ${m.indices}(${H.computeStrides(n).join(",")});`),X.join(`
`)},type:m,offsetToIndices:P,indicesToOffset:G,broadcastedIndicesToOffset:tt,indices:J,indicesGet:le,indicesSet:z,set:(...X)=>{if(X.length!==s+1)throw new Error(`indices length must be ${s}`);let be=X[s];if(typeof be!="string")throw new Error("value must be string");let Oe=X.slice(0,s).map(y).join(",");return s===0?ot("0u",be):s===1?ot(Oe[0],be):(b.set=!0,b.setByIndices=!0,b.indicesToOffset=!0,`set_${r}(${Oe}, ${be})`)},setByOffset:ot,setByIndices:(X,be)=>s<2?ot(X,be):(b.setByIndices=!0,b.indicesToOffset=!0,`set_${r}ByIndices(${X}, ${be});`),get:He,getByOffset:Be,getByIndices:Ne,usage:t,name:r,strides:$,shape:A,rank:s}},W=(r,e,n,t=1)=>Uu(r,e,n,"input",t),te=(r,e,n,t=1)=>Uu(r,e,n,"output",t),za=(r,e,n,t=1)=>Uu(r,e,n,"internal",t),Lu=class{constructor(e){this.normalizedDispatchGroup=e;this.internalVariables=[];this.variables=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e=="number"?`${e}u`:e}) { return; }`}mainStart(e=I2){let n=typeof e=="number"?e:e[0],t=typeof e=="number"?1:e[1],o=typeof e=="number"?1:e[2],i=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,s=i?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,a=i?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${n*t*o}u + local_idx;`;return`@compute @workgroup_size(${n}, ${t}, ${o})
  fn main(${s}) {
    ${a}
  `}appendVariableUniforms(e){e.rank!==0&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,n){if(e.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let t=e.usage==="input"?"read":"read_write",o=e.type.storage;return`@group(0) @binding(${n}) var<storage, ${t}> ${e.name}: array<${o}>;`}declareVariables(...e){return e.map(n=>this.declareVariable(n,this.variableIndex++)).join(`
`)}registerInternalVariable(e){if(e.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach(n=>this.registerInternalVariable(n)),this}registerUniform(e,n,t=1){return this.uniforms.push({name:e,type:n,length:t}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let e=[];for(let{name:n,type:t,length:o}of this.uniforms)if(o&&o>4)t==="f16"?e.push(`@align(16) ${n}:array<mat2x4<${t}>, ${Math.ceil(o/8)}>`):e.push(`${n}:array<vec4<${t}>, ${Math.ceil(o/4)}>`);else{let i=o==null||o===1?t:`vec${o}<${t}>`;e.push(`${n}:${i}`)}return`
      struct Uniforms { ${e.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(e=>e.impl()).join(`
`)+this.internalVariables.map(e=>e.impl()).join(`
`)}},jm=r=>new Lu(r),ao=(r,e)=>{let n=r.length,t=[];for(let o=0;o<n;o++){let i=n-1-o,s=r[i]||1;(e[e.length-1-o]||1)>1&&s===1&&t.unshift(i)}return t}});var A2,Km,O2,E2,$r,Ym,Xm,so=R(()=>{"use strict";Ae();Ge();Bt();Ue();A2=r=>{if(!r||r.length!==1)throw new Error("Transpose requires 1 input.")},Km=(r,e)=>e&&e.length!==r?[...new Array(r).keys()].reverse():e,O2=(r,e)=>H.sortBasedOnPerm(r,Km(r.length,e)),E2=(r,e,n,t)=>{let o=[];o.push(`fn perm(i: ${t.type.indices}) -> ${n.type.indices} {
    var a: ${n.type.indices};`);for(let i=0;i<e;++i)o.push(n.indicesSet("a",r[i],`i[${i}]`));return o.push("return a;}"),o.join(`
`)},$r=(r,e)=>{let n=r.dataType,t=r.dims.length,o=Km(t,e),i=O2(r.dims,o),s=te("output",n,i.length),a=W("a",n,t),u=l=>`
  ${l.registerUniform("output_size","u32").declareVariables(a,s)}

  ${E2(o,t,a,s)}

  ${l.mainStart()}
    ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${s.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${s.setByOffset("global_idx",a.getByIndices("aIndices"))}
  }`;return{name:"Transpose",shaderCache:{hint:`${e}`,inputDependencies:["rank"]},getRunData:l=>{let d=H.size(i);return{outputs:[{dims:i,dataType:l[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:[{type:12,data:d},...K(l[0].dims),...K(i)]}},getShaderSource:u}},Ym=(r,e)=>{A2(r.inputs),r.compute($r(r.inputs[0],e.perm))},Xm=r=>Ve({perm:r.perm})});var C2,P2,k2,D2,B2,R2,z2,N2,M2,L2,Br,Zm,Jm,Qm,eg,tg,rg,ng,og,ig,ag,sg=R(()=>{"use strict";Ae();Ge();Ue();Na();so();C2={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},P2={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},k2={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},D2={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},B2=(r,e)=>{let n=[];for(let t=e-r;t<e;++t)n.push(t);return n},R2=(r,e)=>{let n=[],t=r.length;for(let i=0;i<t;i++)e.indexOf(i)===-1&&n.push(r[i]);let o=e.map(i=>r[i]);return[n,o]},z2=(r,e)=>{let n=r.length+e.length,t=[],o=0;for(let i=0;i<n;i++)e.indexOf(i)===-1?t.push(r[o++]):t.push(1);return t},N2=(r,e)=>{for(let n=0;n<r.length;++n)if(r[r.length-n-1]!==e-1-n)return!1;return!0},M2=(r,e)=>{let n=[];if(!N2(r,e)){for(let t=0;t<e;++t)r.indexOf(t)===-1&&n.push(t);r.forEach(t=>n.push(t))}return n},L2=(r,e,n,t,o,i,s)=>{let a=n[0].dims,u=H.size(i),l=H.size(s),d=W("_A",n[0].dataType,a),p=te("output",o,i),m=32,y=`
          var<workgroup> aBestValues : array<${p.type.storage}, ${m}>;
       `;return{name:r,shaderCache:e,getShaderSource:w=>`
        ${w.registerUniform("reduceSize","u32").declareVariables(d,p)}
        ${y}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${w.mainStart(m)}

          let outputIndex = global_idx / ${m};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = ${p.type.storage}(${k2[t]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${m}) {
           let candidate = ${p.type.storage}(${d.getByOffset("offset + k")});
           bestValue = ${C2[t]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${m}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${P2[t]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${p.setByOffset("outputIndex",`${t==="mean"?`bestValue / ${p.type.storage}(uniforms.reduceSize)`:`${D2[t]}`}`)};
         }
        }`,getRunData:()=>({outputs:[{dims:i,dataType:o}],dispatchGroup:{x:u},programUniforms:[{type:12,data:l}]})}},Br=(r,e,n,t)=>{let o=r.inputs.length===1?n:Vu(r.inputs,n),i=o.axes;i.length===0&&!o.noopWithEmptyAxes&&(i=r.inputs[0].dims.map((y,b)=>b));let s=H.normalizeAxes(i,r.inputs[0].dims.length),a=s,u=r.inputs[0],l=M2(a,r.inputs[0].dims.length);l.length>0&&(u=r.compute($r(r.inputs[0],l),{inputs:[0],outputs:[-1]})[0],a=B2(a.length,u.dims.length));let[d,p]=R2(u.dims,a),m=d;o.keepDims&&(m=z2(d,s)),r.compute(L2(e,{hint:o.cacheKey,inputDependencies:["type"]},[u],t,r.inputs[0].dataType,m,p),{inputs:[u]})},Zm=(r,e)=>{Br(r,"ReduceMeanShared",e,"mean")},Jm=(r,e)=>{Br(r,"ReduceL1Shared",e,"l1")},Qm=(r,e)=>{Br(r,"ReduceL2Shared",e,"l2")},eg=(r,e)=>{Br(r,"ReduceLogSumExpShared",e,"logSumExp")},tg=(r,e)=>{Br(r,"ReduceMaxShared",e,"max")},rg=(r,e)=>{Br(r,"ReduceMinShared",e,"min")},ng=(r,e)=>{Br(r,"ReduceProdShared",e,"prod")},og=(r,e)=>{Br(r,"ReduceSumShared",e,"sum")},ig=(r,e)=>{Br(r,"ReduceSumSquareShared",e,"sumSquare")},ag=(r,e)=>{Br(r,"ReduceLogSumShared",e,"logSum")}});var Rr,F2,Ma,Vu,zr,U2,V2,G2,W2,H2,q2,j2,K2,Y2,X2,Nr,ug,lg,dg,cg,fg,pg,hg,mg,gg,bg,Na=R(()=>{"use strict";Ae();Ge();Bt();Ue();sg();Rr=r=>{if(!r||r.length===0||r.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(r.length===2&&r[1].dims.length!==1)throw new Error("Invalid axes input dims.")},F2=r=>["","",`var value = ${r.getByIndices("input_indices")};`,""],Ma=(r,e,n,t,o,i,s=!1,a=!1)=>{let u=[],l=n[0].dims,d=l.length,p=H.normalizeAxes(o,d),m=!a&&p.length===0;l.forEach((A,$)=>{m||p.indexOf($)>=0?s&&u.push(1):u.push(A)});let y=u.length,b=H.size(u);return{name:r,shaderCache:e,getShaderSource:A=>{let $=[],_=W("_A",n[0].dataType,d),O=te("output",i,y),P=t(_,O,p),N=P[2];for(let F=0,G=0;F<d;F++)m||p.indexOf(F)>=0?(s&&G++,N=`for(var j${F}: u32 = 0; j${F} < ${l[F]}; j${F}++) {
                  ${P[2].includes("last_index")?`let last_index = j${F};`:""}
                  ${_.indicesSet("input_indices",F,`j${F}`)}
                  ${N}
                }`):($.push(`${_.indicesSet("input_indices",F,O.indicesGet("output_indices",G))};`),G++);return`

        ${A.registerUniform("output_size","u32").declareVariables(_,O)}

        ${A.mainStart()}
          ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${_.type.indices};
          let output_indices = ${O.offsetToIndices("global_idx")};

          ${$.join(`
`)}
          ${P[0]}       // init ops for reduce max/min
          ${P[1]}
          ${N}
          ${P[3]}
          ${P.length===4?O.setByOffset("global_idx","value"):P.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:u,dataType:i}],dispatchGroup:{x:Math.ceil(b/64)},programUniforms:[{type:12,data:b},...K(l),...K(u)]})}},Vu=(r,e)=>{let n=[];return r[1].dims[0]>0&&r[1].getBigInt64Array().forEach(t=>n.push(Number(t))),Ve({axes:n,keepDims:e.keepDims,noopWithEmptyAxes:e.noopWithEmptyAxes})},zr=(r,e,n,t)=>{let o=r.inputs,i=o.length===1?n:Vu(o,n);r.compute(Ma(e,{hint:i.cacheKey,inputDependencies:["rank"]},[o[0]],i.noopWithEmptyAxes&&i.axes.length===0?F2:t,i.axes,o[0].dataType,i.keepDims,i.noopWithEmptyAxes),{inputs:[0]})},U2=(r,e)=>{Rr(r.inputs),zr(r,"ReduceLogSum",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,"value = log(value);"])},V2=(r,e)=>{Rr(r.inputs),zr(r,"ReduceL1",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += abs(${t.getByIndices("input_indices")});`,""])},G2=(r,e)=>{Rr(r.inputs),zr(r,"ReduceL2",e,(t,o)=>[`var t = ${o.type.value}(0); var value = ${o.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},W2=(r,e)=>{Rr(r.inputs),zr(r,"ReduceLogSumExp",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += exp(${t.getByIndices("input_indices")});`,"value = log(value);"])},H2=(r,e)=>{Rr(r.inputs),zr(r,"ReduceMax",e,(t,o,i)=>{let s=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(t.indicesSet("input_indices",a,0));return[`${s.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = max(value, ${t.getByIndices("input_indices")});`,""]})},q2=(r,e)=>{Rr(r.inputs),zr(r,"ReduceMean",e,(t,o,i)=>{let s=1;for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&(s*=r.inputs[0].dims[a]);return["var sum = f32(0);","",`sum += f32(${t.getByIndices("input_indices")});`,`let value = ${o.type.value}(sum / ${s});`]})},j2=(r,e)=>{Rr(r.inputs),zr(r,"ReduceMin",e,(t,o,i)=>{let s=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`input_indices[${a}] = 0;`);return[`${s.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = min(value, ${t.getByIndices("input_indices")});`,""]})},K2=(r,e)=>{Rr(r.inputs),zr(r,"ReduceProd",e,(t,o)=>[`var value = ${o.type.storage}(1);`,"",`value *= ${t.getByIndices("input_indices")};`,""])},Y2=(r,e)=>{Rr(r.inputs),zr(r,"ReduceSum",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,""])},X2=(r,e)=>{Rr(r.inputs),zr(r,"ReduceSumSquare",e,(t,o)=>[`var t = ${o.type.value}(0); var value = ${o.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += t * t;`,""])},Nr=(r,e,n)=>{if(e.length===0)return n;let t=1,o=1;for(let i=0;i<e.length;i++)e.indexOf(i)===-1?t*=r[i]:o*=r[i];return o<32&&t>1024},ug=(r,e)=>{Nr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?q2(r,e):Zm(r,e)},lg=(r,e)=>{Nr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?V2(r,e):Jm(r,e)},dg=(r,e)=>{Nr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?G2(r,e):Qm(r,e)},cg=(r,e)=>{Nr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?W2(r,e):eg(r,e)},fg=(r,e)=>{Nr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?H2(r,e):tg(r,e)},pg=(r,e)=>{Nr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?j2(r,e):rg(r,e)},hg=(r,e)=>{Nr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?K2(r,e):ng(r,e)},mg=(r,e)=>{Nr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Y2(r,e):og(r,e)},gg=(r,e)=>{Nr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?X2(r,e):ig(r,e)},bg=(r,e)=>{Nr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?U2(r,e):ag(r,e)}});var yg,vg,wg,Gu,xg=R(()=>{"use strict";Ae();Bt();Na();yg=r=>{if(!r||r.length===0||r.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(r[0].dataType!==1)throw new Error("Invalid input type.")},vg=(r,e)=>{yg(r.inputs);let n=(t,o,i)=>{let s=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`input_indices[${a}] = 0;`);return[`${s.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${t.getByIndices("input_indices")} ${e.selectLastIndex>0?"<=":"<"} value) {
         value = ${t.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",o.setByOffset("global_idx","best_index")]};r.compute(Ma("ArgMin",{hint:e.cacheKey,inputDependencies:["rank"]},[r.inputs[0]],n,[e.axis],7,e.keepDims),{inputs:[0]})},wg=(r,e)=>{yg(r.inputs);let n=(t,o,i)=>{let s=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`input_indices[${a}] = 0;`);return[`${s.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${t.getByIndices("input_indices")} ${e.selectLastIndex>0?">=":">"} value) {
         value = ${t.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",o.setByOffset("global_idx","best_index")]};r.compute(Ma("argMax",{hint:e.cacheKey,inputDependencies:["rank"]},[r.inputs[0]],n,[e.axis],7,e.keepDims),{inputs:[0]})},Gu=r=>Ve(r)});var Z2,J2,Q2,e1,La,t1,_g,Wu=R(()=>{"use strict";Ae();Pa();Ue();Z2=(r,e)=>{let n=r[0],t=r[1],o=r[2],i=r[3],s=r[4],a=r[5];if(s&&a)throw new Error("Attention cannot have both past and relative_position_bias");if(n.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let u=n.dims[0],l=n.dims[1],d=n.dims[2];if(o.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(t.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(t.dims[0]!==d)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(o.dims[0]!==t.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let p=o.dims[0]/3,m=p,y=m;if(e.qkvHiddenSizes.length>0){if(e.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let O of e.qkvHiddenSizes)if(O%e.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");p=e.qkvHiddenSizes[0],m=e.qkvHiddenSizes[1],y=e.qkvHiddenSizes[2]}let b=l;if(p!==m)throw new Error("qkv_hidden_sizes first element should be same as the second");if(o.dims[0]!==p+m+y)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let w=0;if(s){if(m!==y)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(s.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(s.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(s.dims[1]!==u)throw new Error('Input "past" second dimension must be batch_size');if(s.dims[2]!==e.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(s.dims[4]!==m/e.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');e.pastPresentShareBuffer||(w=s.dims[3])}let A=b+w,$=-1,_=0;if(i)throw new Error("Mask not supported");if(s)throw new Error("past is not supported");if(a)throw new Error("relativePositionBias is not supported");return{batchSize:u,sequenceLength:l,pastSequenceLength:w,kvSequenceLength:b,totalSequenceLength:A,maxSequenceLength:$,inputHiddenSize:d,hiddenSize:p,vHiddenSize:y,headSize:Math.floor(p/e.numHeads),vHeadSize:Math.floor(y/e.numHeads),numHeads:e.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:e.maskFilterValue,maskType:_,scale:e.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},J2=(r,e,n,t)=>{let o=vt(t),i=64,s=t/o;s<i?i=1:s/8<64&&(i=Math.ceil(s/8));let a=Math.ceil(t/o/i),u=[{type:e.dataType,data:1/t},{type:12,data:s},{type:12,data:a}],l=yt(e.dataType,o),d=p=>{let m=te("x",e.dataType,e.dims,o),y="thread_max_vector";o===2?y="max(thread_max_vector.x, thread_max_vector.y)":o===4&&(y="max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))");let b=_r(e.dataType),w=[{name:"d_inv",type:b},{name:"d_comp",type:"u32"},{name:"elements_per_wg",type:"u32"}];return`
  var<workgroup> wgMax: array<f32, ${i}>;
  var<workgroup> wgSum: array<f32, ${i}>;
  ${p.registerUniforms(w).declareVariables(m)}
  ${p.mainStart([i,1,1])}
    let localOffset = local_idx * uniforms.elements_per_wg;
    let offset: u32 = workgroup_id.x * uniforms.d_comp + localOffset;

    var thread_max_vector = ${Rt("f32",o,"-3.402823e+38f")};
    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
      thread_max_vector = max(${Tr(b,o,"x[offset + i]")}, thread_max_vector);
    }
    wgMax[local_idx] = ${y};
    workgroupBarrier();

    var maxValue = -3.402823e+38f;
    for (var i = 0u; i < ${i}; i++) {
      maxValue = max(wgMax[i], maxValue);
    }

    var sumVector = ${Rt("f32",o,"0")};
    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
      sumVector += exp(${Tr(b,o,"x[offset + i]")} - maxValue);
    }
    wgSum[local_idx] = ${Qt("sumVector",o)};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${i}; i++) {
      sum += wgSum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
        x[offset + i] = ${Rt(b,o,"uniforms.d_inv")};
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
        let f32input = ${Tr(b,o,"x[offset + i]")};
        x[offset + i] = ${m.type.value}(exp(f32input - maxValue) / sum);
      }
    }
  }`};r.compute({name:"AttentionProbsSoftmax",shaderCache:{hint:`${i};${l};${o}`},getShaderSource:d,getRunData:()=>({outputs:[],dispatchGroup:{x:n},programUniforms:u})},{inputs:[e],outputs:[]})},Q2=(r,e,n,t,o,i)=>{let s=[o.batchSize,o.numHeads,o.sequenceLength,o.kvSequenceLength+o.pastSequenceLength],a=i.scale===0?1/Math.sqrt(o.headSize):i.scale,u=vt(o.headSize),l=o.headSize/u,d=12,p={x:Math.ceil(o.totalSequenceLength/d),y:Math.ceil(o.sequenceLength/d),z:o.batchSize*o.numHeads},m=[{type:12,data:o.sequenceLength},{type:12,data:l},{type:12,data:o.totalSequenceLength},{type:12,data:o.kvSequenceLength},{type:e.dataType,data:a}],y=[e,n],b=A=>{let $=W("q",e.dataType,e.dims,u),_=W("key",n.dataType,n.dims,u),O=te("output",e.dataType,s),P=yt(e.dataType),N=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"alpha",type:P}];return`
  const beta: ${P} = 1.0;
  const TILE_SIZE = ${d}u;

  var<workgroup> tileQ: array<${$.type.storage}, ${d*d}>;
  var<workgroup> tileK: array<${$.type.storage}, ${d*d}>;
  ${A.registerUniforms(N).declareVariables($,_,O)}
  ${A.mainStart([d,d,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let lm = m + local_id.y;
    let ln = n + local_id.x;

    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;
    let kOffset = uniforms.kv_sequence_length * uniforms.K * headIdx + n * uniforms.K;

    var value = ${Rt(P,u)};
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m + local_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k];
      }

      workgroupBarrier();
    }

    let headOffset = headIdx * uniforms.M * uniforms.N;
    if (lm < uniforms.M && ln < uniforms.N) {
      let outputIdx = headOffset + lm * uniforms.N + ln;
      output[outputIdx] = ${Qt("value",u)} * uniforms.alpha;
    }
  }`},w=r.compute({name:"AttentionProbs",shaderCache:{hint:`${u}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:s,dataType:e.dataType,gpuDataType:0}],dispatchGroup:p,programUniforms:m}),getShaderSource:b},{inputs:y,outputs:[-1]})[0];return J2(r,w,o.batchSize*o.numHeads*o.sequenceLength,o.totalSequenceLength),w},e1=(r,e,n,t)=>{let o=[t.batchSize,t.sequenceLength,t.vHiddenSize],i=12,s={x:Math.ceil(t.vHeadSize/i),y:Math.ceil(t.sequenceLength/i),z:t.batchSize*t.numHeads},a=[{type:12,data:t.sequenceLength},{type:12,data:t.totalSequenceLength},{type:12,data:t.vHeadSize},{type:12,data:t.numHeads},{type:12,data:t.vHiddenSize}],u=l=>{let d=W("probs",e.dataType,e.dims),p=W("v",n.dataType,n.dims),m=te("output",e.dataType,o),y=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`
  const TILE_SIZE = ${i}u;
  var<workgroup> tileQ: array<${d.type.value}, ${i*i}>;
  var<workgroup> tileK: array<${d.type.value}, ${i*i}>;
  ${l.registerUniforms(y).declareVariables(d,p,m)}
  ${l.mainStart([i,i,1])}
   let headIdx = workgroup_id.z;
   let m = workgroup_id.y * TILE_SIZE + local_id.y;
   let n = workgroup_id.x * TILE_SIZE + local_id.x;

   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;
   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;

   var value = ${d.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
     if (m < uniforms.M && w + local_id.x < uniforms.K) {
       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
     }
     if (n < uniforms.N && w + local_id.y < uniforms.K) {
       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];
     }
     workgroupBarrier();
     for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;
   let headOffset = (batchIdx * uniforms.M * uniforms.num_heads + currentBatchHeadNumber) * uniforms.N;
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M *uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + currentBatchHeadNumber * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return r.compute({name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:o,dataType:e.dataType,gpuDataType:0}],dispatchGroup:s,programUniforms:a}),getShaderSource:u},{inputs:[e,n],outputs:[0]})[0]},La=(r,e,n,t,o,i,s,a,u,l,d)=>{let p=Q2(r,e,n,u,l,d);e1(r,p,t,l)},t1=(r,e)=>{let n=[e.batchSize,e.numHeads,e.sequenceLength,e.headSize],t=e.sequenceLength,o=e.inputHiddenSize,i=e.headSize,s=12,a={x:Math.ceil(e.headSize/s),y:Math.ceil(e.sequenceLength/s),z:e.batchSize*e.numHeads},u=[r.inputs[0],r.inputs[1],r.inputs[2]],l=[{type:12,data:t},{type:12,data:o},{type:12,data:i},{type:12,data:e.numHeads},{type:12,data:e.headSize},{type:12,data:e.hiddenSize},{type:12,data:e.hiddenSize+e.hiddenSize+e.vHiddenSize}],d=p=>{let m=te("output_q",u[0].dataType,n),y=te("output_k",u[0].dataType,n),b=te("output_v",u[0].dataType,n),w=W("input",u[0].dataType,u[0].dims),A=W("weight",u[1].dataType,u[1].dims),$=W("bias",u[2].dataType,u[2].dims),_=w.type.storage,O=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${s}u;
  var<workgroup> tileInput: array<${_}, ${s*s}>;
  var<workgroup> tileWeightQ: array<${_}, ${s*s}>;
  var<workgroup> tileWeightK: array<${_}, ${s*s}>;
  var<workgroup> tileWeightV: array<${_}, ${s*s}>;
  ${p.registerUniforms(O).declareVariables(w,A,$,m,y,b)}
  ${p.mainStart([s,s,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE + local_id.y;
    let n = workgroup_id.x * TILE_SIZE + local_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${_}(0);
    var valueK = ${_}(0);
    var valueV = ${_}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return r.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:n,dataType:r.inputs[0].dataType,gpuDataType:0},{dims:n,dataType:r.inputs[0].dataType,gpuDataType:0},{dims:n,dataType:r.inputs[0].dataType,gpuDataType:0}],dispatchGroup:a,programUniforms:l}),getShaderSource:d},{inputs:u,outputs:[-1,-1,-1]})},_g=(r,e)=>{let n=Z2(r.inputs,e),[t,o,i]=t1(r,n);return La(r,t,o,i,r.inputs[4],void 0,void 0,void 0,r.inputs[5],n,e)}});var r1,n1,o1,Tg,$g=R(()=>{"use strict";kt();Ae();Ge();Bt();Ue();r1=(r,e)=>{if(!r||r.length!==5)throw new Error("BatchNormalization requires 5 inputs");let n=(t,o,i)=>{let s=o.length;if(s!==t.length)throw new Error(`${i}: num dimensions != ${s}`);o.forEach((a,u)=>{if(a!==t[u])throw new Error(`${i}: dim[${u}] do not match`)})};if(r[0].dims.length>1){let t=e.format==="NHWC"?e.spatial?r[0].dims.slice(-1):r[0].dims.slice(-1).concat(r[0].dims.slice(1,r[0].dims.length-1)):r[0].dims.slice(1,e.spatial?2:void 0);n(r[1].dims,t,"Invalid input scale"),n(r[2].dims,t,"Invalid input B"),n(r[3].dims,t,"Invalid input mean"),n(r[4].dims,t,"Invalid input var")}else n(r[1].dims,[1],"Invalid input scale"),n(r[2].dims,[1],"Invalid input B"),n(r[3].dims,[1],"Invalid input mean"),n(r[4].dims,[1],"Invalid input var")},n1=(r,e)=>{let{epsilon:n,spatial:t,format:o}=e,i=r[0].dims,s=t?vt(i[i.length-1]):1,a=o==="NHWC"&&i.length>1?s:1,u=H.size(i)/s,l=t,d=l?i.length:i,p=W("x",r[0].dataType,r[0].dims,s),m=W("scale",r[1].dataType,r[1].dims,a),y=W("bias",r[2].dataType,r[2].dims,a),b=W("inputMean",r[3].dataType,r[3].dims,a),w=W("inputVar",r[4].dataType,r[4].dims,a),A=te("y",r[0].dataType,d,s),$=()=>{let O="";if(t)O=`let cOffset = ${i.length===1?"0u":o==="NHWC"?`outputIndices[${i.length-1}] / ${s}`:"outputIndices[1]"};`;else if(o==="NCHW")O=`
            ${A.indicesSet("outputIndices","0","0")}
            let cOffset = ${A.indicesToOffset("outputIndices")};`;else{O=`var cIndices = ${m.type.indices}(0);
                       cIndices[0] = outputIndices[${i.length-1}];`;for(let P=1;P<m.rank;P++)O+=`cIndices[${P}] = outputIndices[${P}];`;O+=`let cOffset = ${m.indicesToOffset("cIndices")};`}return O},_=O=>`
  const epsilon = ${n};
  ${O.registerUniform("outputSize","u32").declareVariables(p,m,y,b,w,A)}
  ${O.mainStart()}
  ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${A.offsetToIndices(`global_idx * ${s}`)};
    ${$()}
    let scale = ${m.getByOffset("cOffset")};
    let bias = ${y.getByOffset("cOffset")};
    let inputMean = ${b.getByOffset("cOffset")};
    let inputVar = ${w.getByOffset("cOffset")};
    let x = ${p.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${A.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${e.epsilon}_${e.format}_${t}_${s}`,inputDependencies:l?["rank","type","type","type","type"]:void 0},getShaderSource:_,getRunData:()=>({outputs:[{dims:r[0].dims,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:l?[{type:12,data:u},...K(i)]:[{type:12,data:u}]})}},o1=r=>Ve(r),Tg=(r,e)=>{let{inputs:n,outputCount:t}=r,o=o1({...e,outputCount:t});if(ve.webgpu.validateInputContent&&r1(n,o),e.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");r.compute(n1(n,o))}});var i1,a1,Sg,Ig=R(()=>{"use strict";Ge();Ue();i1=r=>{if(r[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(r[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(r[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(r[0].dims[2]!==r[1].dims[0])throw new Error("last dimension of input and bias are not the same")},a1=r=>{let e=r[0].dims,n=r[0].dims[2],t=H.size(e)/4,o=r[0].dataType,i=W("input",o,e,4),s=W("bias",o,[n],4),a=W("residual",o,e,4),u=te("output",o,e,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:e,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(t/64)}}),getShaderSource:d=>`
  const channels = ${n}u / 4;
  ${d.declareVariables(i,s,a,u)}

  ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes(t)}
    let value = ${i.getByOffset("global_idx")}
      + ${s.getByOffset("global_idx % channels")} + ${a.getByOffset("global_idx")};
    ${u.setByOffset("global_idx","value")}
  }`}},Sg=r=>{i1(r.inputs),r.compute(a1(r.inputs))}});var s1,Qe,Ag,Og,Eg,Cg,Pg,kg,Dg,Bg,Rg,u1,zg,Ng,Mg,Lg,Fa,Fg,Ua,Ug,Vg,Gg,Wg,Hg,qg,jg,Kg,Yg,Xg,Zg,Jg,Qg,eb,tb,rb,nb,ob,ib,Hu=R(()=>{"use strict";Ae();Ge();Bt();Ue();s1=(r,e,n,t,o,i)=>{let s=Math.ceil(e/4),a="";typeof o=="string"?a=`${o}(a)`:a=o("a");let u=W("inputData",n,[s],4),l=te("outputData",t,[s],4);return`
      ${r.registerUniform("vec_size","u32").declareVariables(u,l)}

  ${i??""}

  ${r.mainStart()}
    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${u.getByOffset("global_idx")};
    ${l.setByOffset("global_idx",a)}
  }`},Qe=(r,e,n,t,o,i=r.dataType)=>({name:e,shaderCache:{hint:o,inputDependencies:["type"]},getShaderSource:s=>s1(s,H.size(r.dims),r.dataType,i,n,t),getRunData:s=>({outputs:[{dims:r.dims,dataType:i}],dispatchGroup:{x:Math.ceil(H.size(s[0].dims)/64/4)},programUniforms:[{type:12,data:Math.ceil(H.size(r.dims)/4)}]})}),Ag=r=>{r.compute(Qe(r.inputs[0],"Abs","abs"))},Og=r=>{r.compute(Qe(r.inputs[0],"Acos","acos"))},Eg=r=>{r.compute(Qe(r.inputs[0],"Acosh","acosh"))},Cg=r=>{r.compute(Qe(r.inputs[0],"Asin","asin"))},Pg=r=>{r.compute(Qe(r.inputs[0],"Asinh","asinh"))},kg=r=>{r.compute(Qe(r.inputs[0],"Atan","atan"))},Dg=r=>{r.compute(Qe(r.inputs[0],"Atanh","atanh"))},Bg=r=>Ve(r),Rg=(r,e)=>{let n;switch(e.to){case 10:n="vec4<f16>";break;case 1:n="vec4<f32>";break;case 12:n="vec4<u32>";break;case 6:n="vec4<i32>";break;case 9:n="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${e.to}`)}r.compute(Qe(r.inputs[0],"Cast",n,void 0,e.cacheKey,e.to))},u1=r=>{let e=r.length>=2&&r[1].data!==0?r[1].getFloat32Array()[0]:Ba,n=r.length>=3&&r[2].data!==0?r[2].getFloat32Array()[0]:Ra;return Ve({min:e,max:n})},zg=(r,e)=>{let n=r.inputs.length===1?e:u1(r.inputs),t=_r(r.inputs[0].dataType);r.compute(Qe(r.inputs[0],"Clip",o=>`clamp(${o}, clip_min_, clip_max_)`,`
    const clip_min_: vec4<${t}> = vec4(${t}(${n.min}));
    const clip_max_: vec4<${t}> = vec4(${t}(${n.max}));
`,n.cacheKey),{inputs:[0]})},Ng=r=>{r.compute(Qe(r.inputs[0],"Ceil","ceil"))},Mg=r=>{r.compute(Qe(r.inputs[0],"Cos","cos"))},Lg=r=>{r.compute(Qe(r.inputs[0],"Cosh","cosh"))},Fa=r=>Ve(r),Fg=(r,e)=>{let n=_r(r.inputs[0].dataType);r.compute(Qe(r.inputs[0],"Elu",t=>`elu_vf32(${t})`,`
  const elu_alpha_ = ${n}(${e.alpha});

  fn elu_f32(a: ${n}) -> ${n} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${n}>) -> vec4<${n}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,e.cacheKey))},Ua=(r,e="f32")=>`
const r0: ${e} = 0.3275911;
const r1: ${e} = 0.254829592;
const r2: ${e} = -0.284496736;
const r3: ${e} = 1.421413741;
const r4: ${e} = -1.453152027;
const r5: ${e} = 1.061405429;

fn erf_vf32(v: ${r}) -> ${r} {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,Ug=r=>{let e=_r(r.inputs[0].dataType);r.compute(Qe(r.inputs[0],"Erf",n=>`erf_vf32(${n})`,Ua(`vec4<${e}>`,e)))},Vg=r=>{r.compute(Qe(r.inputs[0],"Exp","exp"))},Gg=r=>{r.compute(Qe(r.inputs[0],"Floor","floor"))},Wg=r=>{let e=_r(r.inputs[0].dataType);r.compute(Qe(r.inputs[0],"Gelu",n=>`0.5 * ${n} * (1.0 + erf_vf32(${n} * 0.7071067811865475))`,Ua(`vec4<${e}>`,e)))},Hg=(r,e)=>{let n=_r(r.inputs[0].dataType);r.compute(Qe(r.inputs[0],"LeakyRelu",t=>`select(leaky_relu_alpha_ * ${t}, ${t}, ${t} >= vec4<${n}>(0.0))`,`const leaky_relu_alpha_ = ${n}(${e.alpha});`,e.cacheKey))},qg=r=>{r.compute(Qe(r.inputs[0],"Not",e=>`!${e}`))},jg=r=>{r.compute(Qe(r.inputs[0],"Neg",e=>`-${e}`))},Kg=r=>{r.compute(Qe(r.inputs[0],"Reciprocal",e=>`1.0/${e}`))},Yg=r=>{let e=_r(r.inputs[0].dataType);r.compute(Qe(r.inputs[0],"Relu",n=>`select(vec4<${e}>(0.0), ${n}, ${n} > vec4<${e}>(0.0))`))},Xg=r=>{r.compute(Qe(r.inputs[0],"Sigmoid",e=>`(1.0 / (1.0 + exp(-${e})))`))},Zg=r=>Ve(r),Jg=(r,e)=>{let n=_r(r.inputs[0].dataType);r.compute(Qe(r.inputs[0],"HardSigmoid",t=>`max(vec4<${n}>(0.0), min(vec4<${n}>(1.0), ${e.alpha} * ${t} + vec4<${n}>(${e.beta})))`,void 0,e.cacheKey))},Qg=r=>{r.compute(Qe(r.inputs[0],"Sin","sin"))},eb=r=>{r.compute(Qe(r.inputs[0],"Sinh","sinh"))},tb=r=>{r.compute(Qe(r.inputs[0],"Sqrt","sqrt"))},rb=r=>{r.compute(Qe(r.inputs[0],"Tan","tan"))},nb=r=>{r.compute(Qe(r.inputs[0],"Tanh",e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`))},ob=(r,e)=>{let n=_r(r.inputs[0].dataType);return r.compute(Qe(r.inputs[0],"ThresholdedRelu",t=>`select(vec4<${n}>(0.0), ${t}, ${t} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${n}>(${e.alpha});`,e.cacheKey)),0},ib=r=>{r.compute(Qe(r.inputs[0],"Log","log"))}});var d1,c1,ab,sb=R(()=>{"use strict";Ge();Ue();Hu();d1=r=>{if(r[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(r[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(r[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(r[0].dims[2]!==r[1].dims[0])throw new Error("last dimension of input and bias are not the same")},c1=r=>{let e=r[0].dims.slice();e[2]=e[2]/2;let n=W("input",r[0].dataType,r[0].dims,4),t=W("bias",r[0].dataType,[r[0].dims[2]],4),o=te("output",r[0].dataType,e,4),i=H.size(e)/4,s=yt(r[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:e,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)}}),getShaderSource:u=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${r[0].dims[2]/4/2}u;

  ${u.declareVariables(n,t,o)}

  ${Ua(`vec4<${s}>`,s)}

  ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes(i)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${o.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},ab=r=>{d1(r.inputs),r.compute(c1(r.inputs))}});var f1,p1,Mr,ub,lb,db,cb,fb,pb,hb,mb,gb,bb,yb=R(()=>{"use strict";Ae();Ge();Ue();f1=(r,e,n,t,o,i,s,a,u,l,d,p)=>{let m,y;typeof a=="string"?m=y=(_,O)=>`${a}((${_}),(${O}))`:typeof a=="function"?m=y=a:(m=a.scalar,y=a.vector);let b=te("outputData",d,t.length,4),w=W("aData",u,e.length,4),A=W("bData",l,n.length,4),$;if(o)if(i){let _=H.size(e)===1,O=H.size(n)===1,P=e.length>0&&e[e.length-1]%4===0,N=n.length>0&&n[n.length-1]%4===0;_||O?$=b.setByOffset("global_idx",y(_?`${w.type.value}(${w.getByOffset("0")}.x)`:w.getByOffset("global_idx"),O?`${A.type.value}(${A.getByOffset("0")}.x)`:A.getByOffset("global_idx"))):$=`
            let outputIndices = ${b.offsetToIndices("global_idx * 4u")};
            let offsetA = ${w.broadcastedIndicesToOffset("outputIndices",b)};
            let offsetB = ${A.broadcastedIndicesToOffset("outputIndices",b)};
            ${b.setByOffset("global_idx",y(s||P?w.getByOffset("offsetA / 4u"):`${w.type.value}(${w.getByOffset("offsetA / 4u")}[offsetA % 4u])`,s||N?A.getByOffset("offsetB / 4u"):`${A.type.value}(${A.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else $=b.setByOffset("global_idx",y(w.getByOffset("global_idx"),A.getByOffset("global_idx")));else{if(!i)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let _=(O,P,N="")=>{let F=`aData[indexA${P}][componentA${P}]`,G=`bData[indexB${P}][componentB${P}]`;return`
            let outputIndices${P} = ${b.offsetToIndices(`global_idx * 4u + ${P}u`)};
            let offsetA${P} = ${w.broadcastedIndicesToOffset(`outputIndices${P}`,b)};
            let offsetB${P} = ${A.broadcastedIndicesToOffset(`outputIndices${P}`,b)};
            let indexA${P} = offsetA${P} / 4u;
            let indexB${P} = offsetB${P} / 4u;
            let componentA${P} = offsetA${P} % 4u;
            let componentB${P} = offsetB${P} % 4u;
            ${O}[${P}] = ${N}(${m(F,G)});
          `};d===9?$=`
            var data = vec4<u32>(0);
            ${_("data",0,"u32")}
            ${_("data",1,"u32")}
            ${_("data",2,"u32")}
            ${_("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:$=`
            ${_("outputData[global_idx]",0)}
            ${_("outputData[global_idx]",1)}
            ${_("outputData[global_idx]",2)}
            ${_("outputData[global_idx]",3)}
          `}return`
        ${r.registerUniform("vec_size","u32").declareVariables(w,A,b)}

        ${p??""}

        ${r.mainStart()}
        ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${$}
      }`},p1=(r,e,n,t,o,i,s=n.dataType)=>{let a=!H.areEqual(n.dims,t.dims),u=n.dims,l=H.size(n.dims),d=!1,p=!1,m=[a];if(a){let y=Dr.calcShape(n.dims,t.dims,!1);if(!y)throw new Error("Can't perform binary op on the given tensors");u=y,l=H.size(u);let b=H.size(n.dims)===1,w=H.size(t.dims)===1,A=n.dims.length>0&&n.dims[n.dims.length-1]%4===0,$=t.dims.length>0&&t.dims[t.dims.length-1]%4===0;m.push(b),m.push(w),m.push(A),m.push($);let _=1;for(let O=1;O<u.length;O++){let P=n.dims[n.dims.length-O]??1,N=t.dims[t.dims.length-O]??1;if(P===N)_*=P;else break}_%4===0?(p=!0,d=!0):(b||w||A||$)&&(d=!0)}else d=!0;return m.push(d),{name:r,shaderCache:{hint:e+m.map(y=>y.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:y=>f1(y,n.dims,t.dims,u,d,a,p,o,n.dataType,t.dataType,s,i),getRunData:()=>({outputs:[{dims:u,dataType:s}],dispatchGroup:{x:Math.ceil(l/64/4)},programUniforms:[{type:12,data:Math.ceil(H.size(u)/4)},...K(n.dims),...K(t.dims),...K(u)]})}},Mr=(r,e,n,t,o,i)=>{r.compute(p1(e,o??"",r.inputs[0],r.inputs[1],n,t,i))},ub=r=>{Mr(r,"Add",(e,n)=>`${e}+${n}`)},lb=r=>{Mr(r,"Div",(e,n)=>`${e}/${n}`)},db=r=>{Mr(r,"Equal",{scalar:(e,n)=>`u32(${e}==${n})`,vector:(e,n)=>`vec4<u32>(${e}==${n})`},void 0,void 0,9)},cb=r=>{Mr(r,"Mul",(e,n)=>`${e}*${n}`)},fb=r=>{let e=W("input",r.inputs[0].dataType,r.inputs[0].dims).type.value;Mr(r,"Pow",{scalar:(t,o)=>`pow_custom(${t},${o})`,vector:(t,o)=>`pow_vector_custom(${t},${o})`},`
    fn pow_custom(a : ${e}, b : ${e}) -> ${e} {
      if (b == ${e}(0.0)) {
        return ${e}(1.0);
      } else if (a < ${e}(0.0) && f32(b) != floor(f32(b))) {
        return ${e}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${e}(1.0), round(f32(abs(b) % ${e}(2.0))) != 1.0) * ${e}(${e==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${e}>, b : vec4<${e}>) -> vec4<${e}> {
      // TODO: implement vectorized pow
      return vec4<${e}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},pb=r=>{Mr(r,"Sub",(e,n)=>`${e}-${n}`)},hb=r=>{Mr(r,"Greater",{scalar:(e,n)=>`u32(${e}>${n})`,vector:(e,n)=>`vec4<u32>(${e}>${n})`},void 0,void 0,9)},mb=r=>{Mr(r,"Less",{scalar:(e,n)=>`u32(${e}<${n})`,vector:(e,n)=>`vec4<u32>(${e}<${n})`},void 0,void 0,9)},gb=r=>{Mr(r,"GreaterOrEqual",{scalar:(e,n)=>`u32(${e}>=${n})`,vector:(e,n)=>`vec4<u32>(${e}>=${n})`},void 0,void 0,9)},bb=r=>{Mr(r,"LessOrEqual",{scalar:(e,n)=>`u32(${e}<=${n})`,vector:(e,n)=>`vec4<u32>(${e}<=${n})`},void 0,void 0,9)}});var m1,g1,b1,y1,vb,wb,xb=R(()=>{"use strict";Ae();Ge();Bt();Ue();m1=r=>{if(!r||r.length<1)throw new Error("too few inputs");let e=r[0].dataType,n=r[0].dims.length;for(let t of r){if(t.dataType!==e)throw new Error("input tensors should be one type");if(t.dims.length!==n)throw new Error("input tensors should have the same shape")}},g1=(r,e)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${r}u>(${e});
    for (var i: u32 = 0u; i < ${r}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${r}u;
  }`,b1=(r,e)=>{let n=r.length,t=[];for(let o=0;o<n;++o){let i=e.setByOffset("global_idx",r[o].getByIndices("indices"));n===1?t.push(i):o===0?t.push(`if (inputIndex == ${o}u) { ${i} }`):o===n-1?t.push(`else { ${i} }`):t.push(`else if (inputIndex == ${o}) { ${i} }`)}return t.join(`
`)},y1=(r,e)=>{let n=r[0].dims.slice();if(e>=n.length||e<-1*n.length)throw new Error("axis specified for concat doesn't match input dimensionality");let t=e<0?n.length+e:e,o=n.slice(0);for(let $=1;$<r.length;$++){let _=r[$].dims.slice();for(let O=0;O<n.length;O++)if(O===t)o[t]+=_[O];else if(n[O]!==_[O])throw new Error("non concat dimensions must match")}let i=H.size(o),s=new Array(r.length),a=new Array(r.length),u=r[0].dataType,l=0,d=[],p=[],m=[{type:12,data:i}];for(let $=0;$<r.length;++$)l+=r[$].dims[t],s[$]=l,p.push(r[$].dims.length),a[$]=W(`input${$}`,u,p[$]),d.push("rank"),m.push({type:12,data:s[$]});for(let $=0;$<r.length;++$)m.push(...K(r[$].dims));m.push(...K(o));let y=te("output",u,o.length),b=y.indicesGet("indices",t),w=Array.from(Array(s.length).keys()).map($=>`uniforms.sizeInConcatAxis${$}`).join(","),A=$=>`

  ${(()=>{$.registerUniform("outputSize","u32");for(let _=0;_<r.length;_++)$.registerUniform(`sizeInConcatAxis${_}`,"u32");return $.declareVariables(...a,y)})()}

  ${g1(s.length,w)}

  ${$.mainStart()}
    ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${y.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${b});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${s.length}u>(${w});
      ${b} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${b1(a,y)}
  }`;return{name:"Concat",shaderCache:{hint:`${e}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:o,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:m}),getShaderSource:A}},vb=(r,e)=>{m1(r.inputs),r.compute(y1(r.inputs,e.axis))},wb=r=>Ve({axis:r.axis})});var Lr,Fr,Ur,Va,cn=R(()=>{"use strict";Ae();Ge();Lr=(r,e)=>{switch(r.activation){case"Relu":return`value = max(value, ${e}(0.0));`;case"Sigmoid":return`value = (${e}(1.0) / (${e}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${e}(uniforms.clip_min), ${e}(uniforms.clip_max));`;case"HardSigmoid":return`value = max(${e}(0.0), min(${e}(1.0), ${e}(uniforms.alpha) * value + ${e}(uniforms.beta)));`;case"":return"";default:throw new Error(`Unsupported activation ${r.activation}`)}},Fr=(r,e)=>{r.activation==="Clip"?e.push({type:1,data:r.clipMax},{type:1,data:r.clipMin}):r.activation==="HardSigmoid"&&e.push({type:1,data:r.alpha},{type:1,data:r.beta})},Ur=(r,e)=>{r.activation==="Clip"?e.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):r.activation==="HardSigmoid"&&e.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"})},Va=r=>{let e=r?.activation||"";if(e==="HardSigmoid"){let[n,t]=r?.activation_params||[.2,.5];return{activation:e,alpha:n,beta:t}}else if(e==="Clip"){let[n,t]=r?.activation_params||[Ba,Ra];return{activation:e,clipMax:t,clipMin:n}}return{activation:e}}});var St,Ga,Wa=R(()=>{"use strict";St=(r,e)=>{switch(r){case 1:return e;case 2:return`vec2<${e}>`;case 3:return`vec3<${e}>`;case 4:return`vec4<${e}>`;default:throw new Error(`${r}-component is not supported.`)}},Ga=r=>`
      ${r?"value = value + getBiasByOutputCoords(coords);":""}
      `});var Ha,qu=R(()=>{"use strict";Ha=r=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${r}.x), i32(${r}.y), i32(${r}.z), 1));
}
`});var v1,w1,Qo,_b,x1,ei,_1,qa,ti=R(()=>{"use strict";Ae();Ge();Ue();cn();Wa();v1=(r,e)=>r?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${e?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${e?", batchIndices":""});
        `,w1=(r,e)=>r?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${e===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${e===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${e===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,Qo=(r,e,n="f32",t,o=!1,i=32,s=!1,a=32)=>{let u=e[1]*r[1],l=e[0]*r[0],d=o?u:i,p=o?i:u,m=d/e[0],y=i/e[1];if(!((o&&m===4&&r[1]===4||!o&&(m===3||m===4))&&d%e[0]===0&&i%e[1]===0&&r[0]===4))throw new Error(`If transposeA ${o} is true, innerElementSize ${m} and workPerThread[1] ${r[1]} must be 4.
      Otherwise, innerElementSize ${m} must be 3 or 4.
  tileAWidth ${d} must be divisible by workgroupSize[0]${e[0]}. tileInner ${i} must be divisible by workgroupSize[1] ${e[1]}. colPerThread ${r[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${m}<${n}>, ${d/m}>, ${p}>;
var<workgroup> mm_Bsub: array<array<vec4<${n}>, ${l/r[0]}>, ${i}>;

const rowPerThread = ${r[1]};
const colPerThread = ${r[0]};
const innerElementSize = ${m};
const tileInner = ${i};

@compute @workgroup_size(${e[0]}, ${e[1]}, ${e[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${s?"0":"i32(globalId.z)"};
  ${t?`let batchIndices = ${t.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${u};

  let num_tiles = ${s?`${Math.ceil(a/i)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${s?`i32(globalId.z) * ${a}`:"0"};

  var acc: array<vec4<${n}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${y};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${v1(o,t)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${y}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${t?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${m===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${w1(o,m)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},_b=(r,e)=>r?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${e?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${e?", batchIndices":""});
            `,x1=r=>r?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",ei=(r,e,n="f32",t,o=!1,i=32,s=!1,a=32,u=!1)=>{let l=r[1]*e[1],d=r[0]*e[0],p=o?l:i,m=o?i:l;if(!(m%e[1]===0&&p%e[0]===0&&i%e[1]===0))throw new Error(`tileAHight ${m} must be divisible by workgroupSize[1]${e[1]}, tileAWidth ${p} must be divisible by workgroupSize[0]${e[0]}, tileInner ${i} must be divisible by workgroupSize[1]${e[1]}`);let y=m/e[1],b=p/e[0],w=i/e[1],A=u?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${l};
    let globalColStart = i32(workgroupId.x) * ${d};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${m}; inputRow = inputRow + ${e[1]}) {
        for (var inputCol = localCol; inputCol < ${p}; inputCol = inputCol + ${e[0]}) {
          ${_b(o,t)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${i}; inputRow = inputRow + ${e[1]}) {
            for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${e[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${t?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${n}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${e[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${o?`mm_Asub[k][localRow + innerRow * ${e[1]}];`:`mm_Asub[localRow + innerRow * ${e[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${e[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${e[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${l};

let tileRowA = i32(localId.y) * ${y};
let tileColA = i32(localId.x) * ${b};
let tileRowB = i32(localId.y) * ${w};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${y}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${b}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${_b(o,t)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${w}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${t?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${n}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${x1(o)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${n}, ${p}>, ${m}>;
  var<workgroup> mm_Bsub : array<array<${n}, ${d}>, ${i}>;
  const rowPerThread = ${r[1]};
  const colPerThread = ${r[0]};
  const tileInner = ${i};

@compute @workgroup_size(${e[0]}, ${e[1]}, ${e[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${s?"0":"i32(globalId.z)"};
    ${t?`let batchIndices = ${t.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${s?`${Math.ceil(a/i)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${s?`i32(globalId.z) * ${a}`:"0"};

    var acc : array<array<${n}, colPerThread>, rowPerThread>;

    // Without this initialization strange values show up in acc.
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = 0.0;
      }
    }
    ${A}
  }
`},_1=(r,e,n,t,o,i=!1)=>{let[s,a,u]=o,[l,d,p,m]=t,y=ao(s,u),b=ao(a,u),w=yt(t[0].type.tensor),A=()=>{let O=d.rank,P=l.rank,N=`var aIndices: ${d.type.indices};`;for(let F=O-2-1,G=P-1;F>=0;F--,G--)N+=`
aIndices[${F}] = ${P>1?`batchIndices[${G}]`:"batchIndices"};`;return y.forEach(F=>{N+=`
aIndices[${F}] = 0;`}),N+=`
aIndices[${O-2}] = u32(row);
                   aIndices[${O-1}] = u32(colIn);`,N},$=()=>{let O=p.rank,P=l.rank,N=`var bIndices: ${p.type.indices};`;for(let F=O-2-1,G=P-1;F>=0;F--,G--)N+=`
bIndices[${F}] = ${P>1?`batchIndices[${G}]`:"batchIndices"};`;return b.forEach(F=>{N+=`
bIndices[${F}] = 0;`}),N+=`
bIndices[${O-2}] = u32(row);
                   bIndices[${O-1}] = u32(colIn);`,N};return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${l.type.indices}) -> ${St(r,w)} {
      var value = ${St(r,w)}(0.0);
      let col = colIn * ${r};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        ${A()}
        value = ${d.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${l.type.indices}) -> ${St(r,w)} {
      var value = ${St(r,w)}(0.0);
      let col = colIn * ${r};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        ${$()}
        value = ${p.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${St(r,w)}) {
      let col = colIn * ${r};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${e?`value = value + ${i?"bias[colIn]":`${St(r,w)}(bias[row])`};`:""}
        ${n}
        ${m.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},qa=(r,e,n,t,o=!1)=>{let i=r[0].dims,s=r[1].dims,a=i.slice(0,-2),u=s.slice(0,-2),l=t?t.slice(0,-2):n.slice(0,-2),d=H.size(l),p=i[i.length-2],m=i[i.length-1],y=s[s.length-1],b=m%4===0&&y%4===0,w=p<=8?[4,1,1]:[4,4,1],A=[8,8,1],$=[Math.ceil(y/A[0]/w[0]),Math.ceil(p/A[1]/w[1]),Math.ceil(d/A[2]/w[2])],_=b?4:1,O=[...a,p,m/_],P=O.length,N=[...u,m,y/_],F=N.length,G=[d,p,y/_],J=[{type:6,data:p},{type:6,data:y},{type:6,data:m}];Fr(e,J),J.push(...K(l),...K(O),...K(N));let le=["rank","rank"],z=r.length>2;z&&(J.push(...K(r[2].dims)),le.push("rank")),J.push(...K(G));let q=tt=>{let ot=l.length,Be=za("batchDims",r[0].dataType,ot,1),Pe=yt(r[0].dataType),xe=W("a",r[0].dataType,P,_),He=W("b",r[1].dataType,F,_),Ne=te("result",r[0].dataType,G.length,_),pe=[xe,He];if(z){let It=o?_:1;pe.push(W("bias",r[2].dataType,r[2].dims.length,It))}let Re=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Ur(e,Re);let qe=Lr(e,Ne.type.value),Ze=_1(_,z,qe,[Be,xe,He,Ne],[a,u,l],o);return`
  ${tt.registerUniforms(Re).registerInternalVariables(Be).declareVariables(...pe,Ne)}
  ${Ze}
  ${b?Qo(w,A,Pe,Be):ei(w,A,Pe,Be)}
                   `};return{name:"MatMul",shaderCache:{hint:`${w};${e.activation};${b};${o}`,inputDependencies:le},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:$[0],y:$[1],z:$[2]},programUniforms:J}),getShaderSource:q}}});var T1,Tb,$b=R(()=>{"use strict";Ae();dn();Ue();cn();Wa();qu();ti();T1=(r,e,n,t,o=!1,i,s=4,a=4,u=4,l="f32")=>{let d=z=>{switch(z){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${l}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${z} is not supported.`)}},p=z=>{switch(z){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${z} is not supported.`)}},m=r?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,y=r?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,b=r?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",w=r?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",A=r?"row":"col",$=r?"col":"row",_=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${r?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${A} / outWidth;
    let outCol = ${A} % outWidth;

    let WRow = ${$} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${$} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${$} % inChannels;
    var resData = ${St(s,l)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${b} && xCol >= 0 && xCol < ${w}) {
      ${m}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${d(s)}
    }
    return resData;`,O=r?e&&t?`
    let col = colIn * ${s};
    ${_}`:`
    let col = colIn * ${s};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${_}
    }
    return ${St(s,l)}(0.0);`:t&&n?`
    let col = colIn * ${s};
    ${_}`:`
    let col = colIn * ${s};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${_}
    }
    return ${St(s,l)}(0.0);`,P=`${p(a)}`,N=St(u,l),F=r?St(s,l):St(a,l),G=r?St(a,l):St(s,l),J=Lr(i,N);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${F} {
      ${r?O:P}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${G} {
      ${r?P:O}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${N}) {
      let col = colIn * ${u};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${r?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${y}
      ${Ga(o)}
      ${J}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},Tb=(r,e,n,t,o,i,s,a)=>{let u=e.format==="NHWC",l=u?r[0].dims[3]:r[0].dims[1],d=n[0],p=u?n[2]:n[3],m=u?n[1]:n[2],y=u?n[3]:n[1],b=u&&(l%4===0||l%3===0)&&y%4===0,w=u?y:p*m,A=u?p*m:y,$=[8,8,1],_=t<=8?[4,1,1]:[4,4,1],O=[Math.ceil(w/$[0]/_[0]),Math.ceil(A/$[1]/_[1]),Math.ceil(d/$[2]/_[2])];nt("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${O}`);let P=b?u&&l%4!==0?3:4:1,N=$[1]*_[1],F=$[0]*_[0],G=Math.max($[0]*P,$[1]),J=t%N===0,le=o%F===0,z=i%G===0,q=b?[P,4,4]:[1,1,1],tt=[{type:6,data:t},{type:6,data:o},{type:6,data:i},{type:6,data:[e.pads[0],e.pads[1]]},{type:6,data:e.strides},{type:6,data:e.dilations}];Fr(e,tt),tt.push(...K(r[0].dims),...K(r[1].dims));let ot=["rank","rank"];s&&(tt.push(...K(r[2].dims)),ot.push("rank")),tt.push(...K(n));let Be=Pe=>{let xe=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Ur(e,xe);let He=b?4:1,Ne=yt(r[0].dataType),pe=`
      fn setOutputAtIndex(flatIndex : i32, value : ${b?`vec4<${Ne}>`:Ne}) {
        result[flatIndex] = ${b?`vec4<${Ne}>`:Ne}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${b?`vec4<${Ne}>`:Ne}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${b?"/ 4":""}, value);
      }`,Re=W("x",r[0].dataType,r[0].dims.length,P===3?1:P),qe=W("w",r[1].dataType,r[1].dims.length,He),Ze=[Re,qe],It=te("result",r[0].dataType,n.length,He);if(s){let X=W("bias",r[2].dataType,r[2].dims.length,He);Ze.push(X),pe+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${b?`vec4<${Ne}>`:Ne} {
          return bias[coords.${u?"w":"y"}${b?"/ 4":""}];
        }`}return`
        ${Ha("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${Pe.registerUniforms(xe).declareVariables(...Ze,It)}
        ${pe}
        ${T1(u,J,le,z,s,e,q[0],q[1],q[2],Ne)}
        ${b?Qo(_,$,Ne,void 0,!u,G):ei(_,$,Ne,void 0,!u,G,!1,void 0,a)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${e.cacheKey};${P};${b};${J};${le};${z};${N};${F};${G}`,inputDependencies:ot},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:O[0],y:O[1],z:O[2]},programUniforms:tt}),getShaderSource:Be}}});var ju,Sb=R(()=>{"use strict";Ae();Ge();Ue();Yu();cn();ju=(r,e,n)=>{let t=r.length>2,o=t?"value += b[output_channel];":"",i=r[0].dims,s=r[1].dims,a=s[0]/e.group,u=e.format==="NHWC",l=Ku(i,s,e.dilations,e.pads,e.strides,u),d=H.size(l),p=[{type:12,data:d},{type:12,data:e.dilations},{type:12,data:[e.strides[0],e.strides[1]]},{type:12,data:[e.pads[0],e.pads[1]]},{type:12,data:a}];Fr(e,p),p.push(...K(i),...K(s),...K(l));let m=["rank","rank"];t&&(p.push(...K(r[2].dims)),m.push("rank")),p.push(...K(l));let y=b=>{let w=te("output",r[0].dataType,l.length),A=Lr(e,w.type.value),$=W("x",r[0].dataType,i.length),_=W("w",r[1].dataType,s.length),O=[$,_];t&&O.push(W("b",r[2].dataType,r[2].dims));let P=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:e.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];return Ur(e,P),`
  ${b.registerUniforms(P).declareVariables(...O,w)}

  ${b.mainStart()}
    ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${w.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${u?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${u?1:2}], outputIndices[${u?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel / uniforms.output_channels_per_group;

    var value: ${w.type.value} = ${w.type.value}(0);
    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[${u?1:2}]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[${u?2:3}]) {
            continue;
          }

          let xVal = ${u?$.get("batch","xHeight","xWidth","input_channel"):$.get("batch","input_channel","xHeight","xWidth")};
          let wVal = ${_.get("output_channel","wInChannel","wHeight","wWidth")};
          value += xVal*wVal;
        }
      }
    }
    ${o}
    ${A}
    ${w.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:e.cacheKey,inputDependencies:m},getRunData:()=>({outputs:[{dims:n?n(l):l,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:p}),getShaderSource:y}}});var Xu,$1,Ib,Zu=R(()=>{"use strict";Ae();Ge();ti();Ue();cn();Xu=(r,e,n,t,o=!1)=>{let i=r[0].dims,s=r[1].dims,a=i[i.length-2],u=s[s.length-1],l=i[i.length-1],d=vt(u),p=vt(l),m=vt(a),y=H.size(n)/d/m,b=r.length>2,w=t?t.slice(0,-2):n.slice(0,-2),$=[H.size(w),a,u],_=[{type:12,data:y},{type:12,data:a},{type:12,data:u},{type:12,data:l}];Fr(e,_),_.push(...K(w),...K(i),...K(s)),b&&_.push(...K(r[2].dims)),_.push(...K($));let O=P=>{let N=za("batch_dims",r[0].dataType,w.length),F=W("a",r[0].dataType,i.length,p),G=W("b",r[1].dataType,s.length,d),J=te("output",r[0].dataType,$.length,d),le=Lr(e,J.type.value),z=[F,G],q="";if(b){let pe=o?d:1;z.push(W("bias",r[2].dataType,r[2].dims.length,pe)),q=`${o?`value += bias[col / ${pe}];`:`value += ${J.type.value}(bias[row + i]);`}`}let tt=i.slice(0,-2),ot=s.slice(0,-2),Be=ao(tt,w),Pe=ao(ot,w),xe=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];Ur(e,xe);let He=(pe,Re)=>{let qe=pe.rank,Ze=pe.name;if(qe===2)return`var ${Ze}_indices = ${pe.type.indices}(0u, 0u);`;let It=N.rank,X=`var ${Ze}_indices: ${pe.type.indices};`;for(let be=qe-2-1,Oe=It-1;be>=0;be--,Oe--)X+=`
${Ze}_indices[${be}] = ${It>1?`batch_indices[${Oe}]`:"batch_indices"};`;return Re.forEach(be=>{X+=`
${Ze}_indices[${be}] = 0;`}),X+=`${Ze}_indices[${qe-2}] = 0u;
                     ${Ze}_indices[${qe-1}] = 0u;`,X},Ne=()=>{let pe=`var a_data: ${F.type.value};`;for(let Re=0;Re<p;Re++)pe+=`
              let b_data${Re} = b[(b_offset + (k + ${Re}) * uniforms.N + col) / ${d}];`;for(let Re=0;Re<m;Re++){pe+=`a_data = a[(a_offset + (row + ${Re}) * uniforms.K + k) / ${p}];`;for(let qe=0;qe<p;qe++)pe+=`
            values[${Re}] = fma(${G.type.value}(a_data${p===1?"":`[${qe}]`}), b_data${qe}, values[${Re}]);
`}return pe};return`
  ${P.registerUniforms(xe).registerInternalVariables(N).declareVariables(...z,J)}
  ${P.mainStart()}
    ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${d})) * ${d};
    var index1 = global_idx / (uniforms.N / ${d});
    let stride1 = uniforms.M / ${m};
    let row = (index1 % stride1) * ${m};
    let batch = index1 / stride1;

    ${n.length===2?"":`let batch_indices = ${N.offsetToIndices("batch")};`}
    ${He(F,Be)}
    let a_offset = ${F.indicesToOffset("a_indices")};
    ${He(G,Pe)}
    let b_offset = ${G.indicesToOffset("b_indices")};
    var values: array<${J.type.value}, ${m}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${p}) {
      ${Ne()}
    }
    for (var i = 0u; i < ${m}u; i++) {
      var value = values[i];
      ${q}
      ${le}
      let cur_indices = ${J.type.indices}(batch, row + i, col);
      let offset = ${J.indicesToOffset("cur_indices")};
      ${J.setByOffset(`offset / ${d}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${e.activation};${d};${p};${m};${o}`,inputDependencies:b?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:_}),getShaderSource:O}},$1=r=>{if(!r||r.length!==2)throw new Error("MatMul requires 2 inputs.");if(r[0].dims[r[0].dims.length-1]!==r[1].dims[r[1].dims.length-2])throw new Error("shared dimension does not match.")},Ib=r=>{$1(r.inputs);let e=Dr.calcShape(r.inputs[0].dims,r.inputs[1].dims,!0);if(!e)throw new Error("Can't use matmul on the given tensors");let n=e[e.length-1],t=r.inputs[0].dims[r.inputs[0].dims.length-1];n<8&&t<8?r.compute(Xu(r.inputs,{activation:""},e)):r.compute(qa(r.inputs,{activation:""},e))}});var Ku,Ab,S1,Ob,Ju,I1,A1,Qu,Yu=R(()=>{"use strict";Ge();$b();ti();Sb();cn();Zu();so();Ku=(r,e,n,t,o,i)=>{let s=r[0],a=r.slice(i?1:2,i?3:4),u=a.length,l=e[0],p=e.slice(2).map((b,w)=>b+(b-1)*(n[w]-1)),y=a.map((b,w)=>b+t[w]+t[w+u]).map((b,w)=>Math.floor((b-p[w]+o[w])/o[w]));return y.splice(0,0,s),y.splice(i?3:1,0,l),y},Ab=[2,3,1,0],S1=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4&&r[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(r[0].dims.length!==r[1].dims.length)throw new Error("filter does not have same dimension as input");let n=r[0].dims[e.format==="NHWC"?r[0].dims.length-1:1],t=r[1].dims[1]*e.group;if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(r.length===3&&(r[2].dims.length!==1||r[1].dims[0]!==r[2].dims[0]))throw new Error("invalid bias");let o=r[0].dims.length-2;if(e.dilations.length!==o)throw new Error(`dilations should be ${o}D`);if(e.strides.length!==o)throw new Error(`strides should be ${o}D`);if(e.pads.length!==o*2)throw new Error(`pads should be ${o*2}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape")},Ob=(r,e)=>{let n=r.kernelShape.slice();for(let i=2;i<e[1].dims.length;++i)n[i-2]===0&&(n[i-2]=e[1].dims[i]);let t=r.pads.slice();Bn.adjustPadsBasedOnAutoPad(e[0].dims,r.strides,r.dilations,n,t,r.format==="NHWC",r.autoPad);let o=Object.assign({},r);return Object.assign(o,{kernelShape:n,pads:t}),o},Ju=r=>{let e=Va(r),n=r.format,t=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][r.auto_pad],o=r.dilations,i=r.group,s=r.kernel_shape,a=r.pads,u=r.strides,l=r.w_is_const();return{autoPad:t,format:n,dilations:o,group:i,kernelShape:s,pads:a,strides:u,wIsConst:l,...e,cacheKey:`${r.format};${e.activation};`}},I1=(r,e,n)=>{let t=Ob(n,e),o=n.format==="NHWC";if(n.group!==1){r.compute(ju(e,t));return}let i=e.length===3,s=e[0].dims[o?1:2],a=e[0].dims[o?2:3],u=e[0].dims[o?3:1],l=e[1].dims[2],d=e[1].dims[3],p=Ku(e[0].dims,e[1].dims,n.dilations,t.pads,n.strides,o),m=p[o?1:2],y=p[o?2:3],b=p[o?3:1],w=o&&l===s&&d===a&&n.pads[0]===0&&n.pads[1]===0;if(w||l===1&&d===1&&n.dilations[0]===1&&n.dilations[1]===1&&n.strides[0]===1&&n.strides[1]===1&&n.pads[0]===0&&n.pads[1]===0){let F=p[0],G,J,le,z=[];if(o){let ot=r.kernelCustomData.wT??r.compute($r(e[1],Ab),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];if(n.wIsConst&&!r.kernelCustomData.wT&&(r.kernelCustomData.wT=ot),w){let Be=s*a*u;G=e[0].reshape([1,F,Be]),J=ot.reshape([1,Be,b]),le=[1,F,b]}else G=e[0].reshape([F,s*a,u]),J=ot.reshape([1,u,b]),le=[F,m*y,b];z.push(G),z.push(J)}else G=e[0].reshape([F,u,s*a]),J=e[1].reshape([1,b,u]),le=[F,b,m*y],z.push(J),z.push(G);i&&z.push(e[2]);let q=le[2],tt=z[0].dims[z[0].dims.length-1];q<8&&tt<8?r.compute(Xu(z,t,p,le,o),{inputs:z}):r.compute(qa(z,t,p,le,o),{inputs:z});return}let A=!0,$=r.kernelCustomData.wT??r.compute($r(e[1],Ab),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!r.kernelCustomData.wT&&(r.kernelCustomData.wT=$);let _=[e[0],$];i&&_.push(e[2]);let O=o?m*y:b,P=o?b:m*y,N=l*d*u;r.compute(Tb(_,t,p,O,P,N,i,A),{inputs:_})},A1=(r,e)=>{let n=e.format==="NHWC",t=[r.inputs[0].reshape(n?[r.inputs[0].dims[0],1,r.inputs[0].dims[1],r.inputs[0].dims[2]]:[r.inputs[0].dims[0],r.inputs[0].dims[1],1,r.inputs[0].dims[2]]),r.inputs[1].reshape([r.inputs[1].dims[0],r.inputs[1].dims[1],1,r.inputs[1].dims[2]])];r.inputs.length===3&&t.push(r.inputs[2]);let o=[0,e.pads[0],0,e.pads[1]],i=[1].concat(e.strides),s=[1].concat(e.dilations),a=[1].concat(e.kernelShape),u=Ob({...e,pads:o,strides:i,dilations:s,kernelShape:a},t);r.compute(ju(t,u,l=>n?[l[0],l[2],l[3]]:[]))},Qu=(r,e)=>{S1(r.inputs,e),r.inputs[0].dims.length===3?A1(r,e):I1(r,r.inputs,e)}});var O1,Eb,Cb=R(()=>{"use strict";Ae();dn();Ue();cn();Wa();qu();ti();O1=(r,e=!1,n,t=4)=>{let o=St(t,"f32"),i=$=>{switch($){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];
            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];
            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];
            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${$} is not supported.`)}},s=r?`
      let coord = vec4<i32>(batch, iXR, iXC, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, iXR, iXC);
      `,a=r?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,u=r?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",l=r?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",d=r?"row":"col",p=r?"col":"row",m=`
      let inChannels = ${r?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let outWidth = ${r?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      let outRow = ${d} / outWidth;
      let outCol = ${d} % outWidth;

      let WRow = ${p} / (uniforms.filter_dims[1] * inChannels);
      let WCol = ${p} / inChannels % uniforms.filter_dims[1];
      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(${u}) || fract(xR) > 0.0) {
        return ${o}(0.0);
      }
      if (xC < 0.0 || xC >= f32(${l}) || fract(xC) > 0.0) {
        return ${o}(0.0);
      }
      let iXR = i32(xR);
      let iXC = i32(xC);
      let xCh = ${p} % inChannels;
      ${s}
      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${t}];`,y=r?`
      let col = colIn * ${t};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
        ${m}
      }
      return ${o}(0.0);`:`
      let col = colIn * ${t};
      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
        ${m}
      }
      return ${o}(0.0);`,b=`
      let col = colIn * ${t};
      let inChannels = ${r?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);
      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];
      if (${r?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {
        let rowInner = row % inChannels;
        let coord = vec4<i32>(coordX, coordY, col, rowInner);
        ${i(t)}
      }
      return ${o}(0.0);
      `,w=Lr(n,o);return`
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${o} {
    ${r?y:b}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${o} {
    ${r?b:y}
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${o}) {
    let col = colIn * ${t};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
      var value = valueInput;
      let outWidth = ${r?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${a}
      ${Ga(e)}
      ${w}
      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${t}] = value;
    }
  }`},Eb=(r,e,n,t,o,i,s,a)=>{let u=e.format==="NHWC",l=u?r[0].dims[3]:r[0].dims[1],d=n[0],p=u?n[2]:n[3],m=u?n[1]:n[2],y=u?n[3]:n[1],b=u?l%4===0&&y%4===0:p%4===0&&y%4===0,w=u?y:p*m,A=u?p*m:y,$=b?[8,8,1]:[w<=4||A<=4?4:16,w>4&&A<=4?4:16,1],_=b?[4,4,1]:[w<=4?1:4,w>4&&A<=4?1:4,1],O=[Math.ceil(w/$[0]/_[0]),Math.ceil(A/$[1]/_[1]),Math.ceil(d/$[2]/_[2])];nt("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${O}`);let P=b?4:1,N=Math.max($[0]*P,$[1]),F=b?4:1,G=[e.kernelShape[u?1:2],e.kernelShape[u?2:3]],J=[G[0]+(e.dilations[0]<=1?0:(G[0]-1)*(e.dilations[0]-1)),G[1]+(e.dilations[1]<=1?0:(G[1]-1)*(e.dilations[1]-1))],le=[J[0]-1-Math.floor((e.pads[0]+e.pads[2])/2),J[1]-1-Math.floor((e.pads[1]+e.pads[3])/2)],z=[{type:6,data:t},{type:6,data:o},{type:6,data:i},{type:6,data:e.strides},{type:6,data:e.dilations},{type:6,data:G},{type:6,data:le}];Fr(e,z),z.push(...K(r[0].dims),...K(r[1].dims));let q=["rank","rank"];s&&(z.push(...K(r[2].dims)),q.push("rank")),z.push(...K(n));let tt=ot=>{let Be=W("x",r[0].dataType,r[0].dims.length,F),Pe=W("w",r[1].dataType,r[1].dims.length,1),xe=te("result",r[0].dataType,n.length,F),He=[Be,Pe],Ne="";if(s){let Re=W("bias",r[2].dataType,r[2].dims.length,F);He.push(Re),Ne+=`
          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${b?"vec4<f32>":"f32"} {
            return bias[coords.${u?"w":"y"}${b?"/ 4":""}];
          }`}let pe=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:G.length},{name:"pads",type:"i32",length:le.length}];return Ur(e,pe),`
        ${Ha("uniforms.result_strides")}
        ${ot.registerUniforms(pe).declareVariables(...He,xe)};
        ${Ne}
        ${O1(u,s,e,P)}
        ${b?Qo(_,$,"f32",void 0,!u,N):ei(_,$,"f32",void 0,!u,N,!1,void 0,a)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${e.cacheKey};${_};${$};${b}`,inputDependencies:q},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:O[0],y:O[1],z:O[2]},programUniforms:z}),getShaderSource:tt}}});var E1,el,Pb=R(()=>{"use strict";Ae();dn();Ge();Ue();E1=(r,e,n,t,o,i=!1,s,a,u=!1)=>{let l=u?1:2,d=u?2:3,p=u?3:1,m=i?2:1,y=`
  fn setOutputAtIndex(flatIndex : u32, value : ${i?`vec4<${s}>`:s}) {
    result[flatIndex] = ${i?`vec4<${s}>`:s}(value);
  }`;t&&(y+=`
    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${i?`vec4<${s}>`:s} {
      return bias[coords.${u?"w":"y"}${i?"/ 4":""}];
    }`);let b=i?4:1,w=W("W",e[1].dataType,e[1].dims.length,b),A=W("Dy",e[0].dataType,e[0].dims.length,b),$=[A,w];t&&$.push(W("bias",e[2].dataType,[n[p]].length,b));let _=te("result",e[0].dataType,n.length,b),O=`{
        let batch: u32 = ${o?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];
        let r = ${o?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];
        let c = ${o?"global_id.y":"workgroup_id.y"} * ${m};
        let d1: u32 = ${o?"global_id.x":"workgroup_id.x"} * 4;

        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd: array<vec4<${s}>, ${m}>;
        for (var i = 0; i < ${m}; i++) {
          dotProd[i] = vec4<${s}>(0.0);
        }
        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {
          var dyR = (${s}(dyCorner.x) + ${s}(wR)) / ${s}(uniforms.strides.x);
          let wRPerm = uniforms.filter_dims[0] - 1 - wR;
          if (dyR < 0.0 || dyR >= ${s}(uniforms.Dy_shape[1]) ||
              fract(dyR) > 0.0 || wRPerm < 0) {
            continue;
          }
          let idyR: u32 = u32(dyR);

          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {
            let dyC = (${s}(dyCorner.y) + ${s}(wC)) / ${s}(uniforms.strides.y);
            let dyC2 = (${s}(dyCorner.y) + 1.0 + ${s}(wC)) / ${s}(uniforms.strides.y);
            let wCPerm = uniforms.filter_dims[1] - 1 - wC;
            if (wCPerm < 0) {
              continue;
            }
            var bDyCVal = true;
            var bDyCVal2 = true;
            if (dyC < 0.0 || dyC >= ${s}(uniforms.Dy_shape[2]) ||
                fract(dyC) > 0.0) {
              bDyCVal = false;
            }
            if (dyC2 < 0.0 || dyC2 >= ${s}(uniforms.Dy_shape[2]) ||
                fract(dyC2) > 0.0) {
              bDyCVal2 = false;
            }

            let idyC: u32 = u32(dyC);
            let idyC2: u32 = u32(dyC2);
            if (bDyCVal && bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${A.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${s}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;

                xValue =  ${A.get("batch","idyR","idyC2","d2")};

                dotProd[1] = dotProd[1] + vec4<${s}>(dot(xValue, wValue0),
                                                    dot(xValue, wValue1),
                                                    dot(xValue, wValue2),
                                                    dot(xValue, wValue3));
              }
            } else if (bDyCVal) {
              let d2Length = uniforms.Dy_shape[${p}];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${A.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${s}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;
              }
            } else if (bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${A.get("batch","idyR","idyC2","d2")};
                let tmpval = vec4<${s}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[1] = dotProd[1] + tmpval;
              }
            }
          }
        }

        for (var i: u32 = 0; i < ${m}; i = i + 1) {
          let value = dotProd[i] + ${t?"bias[c+i]":`vec4<${s}>(0.0)`};
          ${_.set("batch","r","c + i","d1","value")};
        }
      }`,P=`
          let outputIndices = ${_.offsetToIndices("global_idx")};
          let batch = ${_.indicesGet("outputIndices",0)};
          let d1 = ${_.indicesGet("outputIndices",p)};
          let r = ${_.indicesGet("outputIndices",l)};
          let c = ${_.indicesGet("outputIndices",d)};
          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
          let dyRCorner = dyCorner.x;
          let dyCCorner = dyCorner.y;
          let groupId = d1 / uniforms.output_channels_per_group;
          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
          // ? = to be determined. : = across all values in that axis.
          var dotProd = ${s}(0.0);
          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
            if (wR % uniforms.dilations.x != 0) {
              continue;
            }
            let dyR = (${s}(dyRCorner) + ${s}(wR)) / ${s}(uniforms.strides[0]);
            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
            if (dyR < 0.0 || dyR >= ${s}(uniforms.Dy_shape[${l}]) || fract(dyR) > 0.0 ||
                wRPerm < 0) {
              continue;
            }
            let idyR: u32 = u32(dyR);

            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
              if (wC % uniforms.dilations.y != 0) {
                continue;
              }
              let dyC = (${s}(dyCCorner) + ${s}(wC)) / ${s}(uniforms.strides.y);
              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
              if (dyC < 0.0 || dyC >= ${s}(uniforms.Dy_shape[${d}]) ||
                  fract(dyC) > 0.0 || wCPerm < 0) {
                continue;
              }
              let idyC: u32 = u32(dyC);
              var inputChannel = groupId * uniforms.input_channels_per_group;
              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {
                let xValue = ${u?A.get("batch","idyR","idyC","inputChannel"):A.get("batch","inputChannel","idyR","idyC")};
                let wValue = ${w.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};
                dotProd = dotProd + xValue * wValue;
                inputChannel = inputChannel + 1;
              }
            }
          }
          let value = dotProd + ${t?"bias[d1]":`${s}(0.0)`};
          ${_.setByOffset("global_idx","value")};
        `;return`
  ${r.registerUniforms(a).declareVariables(...$,_)}
  ${y}

    ${r.mainStart()}
    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
  ${i?O:P}}`},el=(r,e,n)=>{let t=r.length>2,o=e.outputShape,i=H.size(o),s=[Math.ceil(i/64),1,1];nt("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${s}`);let a=e.format==="NHWC",u=["rank","rank"],l=[e.strides[0],e.strides[1]],d=[e.kernelShape[a?1:2],e.kernelShape[a?2:3]],p=[e.dilations[0],e.dilations[1]],m=[d[0]+(e.dilations[0]<=1?0:(e.kernelShape[a?1:2]-1)*(e.dilations[0]-1)),d[1]+(e.dilations[1]<=1?0:(e.kernelShape[a?2:3]-1)*(e.dilations[1]-1))],y=[m[0]-1-Math.floor((e.pads[0]+e.pads[2])/2),m[1]-1-Math.floor(e.pads[1]+e.pads[3])/2],b=!1,w=e.group,A=r[1].dims,$=A[0]/w,_=A[1],O=[{type:6,data:i},{type:12,data:l},{type:12,data:d},{type:12,data:p},{type:12,data:m},{type:6,data:y},{type:12,data:$},{type:12,data:_},...K(r[0].dims),...K(r[1].dims)];t&&(O.push(...K(r[2].dims)),u.push("rank")),O.push(...K(o));let P=s[1]===1&&s[2]===1,N=F=>{let G=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:l.length},{name:"filter_dims",type:"u32",length:d.length},{name:"dilations",type:"u32",length:d.length},{name:"effective_filter_dims",type:"u32",length:m.length},{name:"pads",type:"i32",length:y.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],J=yt(r[0].dataType);return`${E1(F,r,o,t,P,b,J,G,a)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${e.cacheKey};`,inputDependencies:u},getRunData:()=>({dispatchGroup:{x:s[0],y:s[1],z:s[2]},outputs:[{dims:n?n(o):o,dataType:r[0].dataType}],programUniforms:O}),getShaderSource:N}}});var C1,P1,k1,kb,Db,D1,B1,R1,z1,Bb,Rb=R(()=>{"use strict";Cb();Pb();cn();so();C1=(r,e,n,t,o,i)=>(r-1)*e+n+(t-1)*o+1-i,P1=(r,e,n,t,o)=>{let i=Math.floor(r/2);e==="SAME_UPPER"?(n[t]=i,n[o]=r-i):e==="SAME_LOWER"&&(n[t]=r-i,n[o]=i)},k1=(r,e,n,t,o,i,s,a,u,l)=>{let d=r.length-2,p=l.length===0;if(u.length===0)for(let b=0;b<d;++b)u.push(0);let m=r[0],y=e[a?3:1]*o;for(let b=0,w=r.length-d-(a?1:0);b<d;++b,++w){let A=r[w],$=p?A*s[b]:l[b],_=C1(A,s[b],i[b],e[w],n[b],$);P1(_,t,i,b,b+d),p&&l.push(s[b]*(A-1)+u[b]+(e[w]-1)*n[b]+1-i[b]-i[b+d])}l.splice(0,0,m),l.splice(a?3:1,0,y)},kb=(r,e)=>{let n=r.kernelShape.slice();if(r.kernelShape.length===0||r.kernelShape.reduce((p,m)=>p*m,1)===0){n.length=0;for(let p=2;p<e[1].dims.length;++p)n.push(e[1].dims[p])}let t=r.format==="NHWC";n.splice(0,0,e[1].dims[0]),n.splice(t?3:1,0,e[1].dims[1]);let o=r.pads.slice(),i=r.outputShape.slice(),s=r.outputPadding.slice(),a=e[0].dims,u=r.dilations.slice();if(u.reduce((p,m)=>p+m,0)===0){let p=e[0].dims.length-2;u=new Array(p).fill(1)}let l=r.strides.slice();if(l.reduce((p,m)=>p+m,0)===0){let p=e[0].dims.length-2;l=new Array(p).fill(1)}k1(a,n,u,r.autoPad,r.group,o,l,t,s,i);let d=Object.assign({},r);return Object.assign(d,{kernelShape:n,pads:o,outputPadding:s,outputShape:i,dilations:u,strides:l}),d},Db=r=>{let e=Va(r),n=r.format,t=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof r.autoPad>"u"?0:r.autoPad],o=r.dilations,i=r.group,s=r.kernelShape,a=r.pads,u=r.strides,l=r.wIsConst(),d=r.outputPadding,p=r.outputShape;return{autoPad:t,format:n,dilations:o,group:i,kernelShape:s,outputPadding:d,outputShape:p,pads:a,strides:u,wIsConst:l,...e,cacheKey:`${r.format};${e.activation};`}},D1=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4&&r[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(r[0].dims.length!==r[1].dims.length)throw new Error("filter does not have same dimension as input");let n=r[0].dims[e.format==="NHWC"?r[0].dims.length-1:1],t=r[1].dims[0];if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let o=r[1].dims[1]*e.group;if(r.length===3&&(r[2].dims.length!==1||r[2].dims[0]!==o))throw new Error("invalid bias");let i=r[0].dims.length-2;if(e.dilations.reduce((d,p)=>d+p,0)>0&&e.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(e.strides.reduce((d,p)=>d+p,0)>0&&e.strides.length!==i)throw new Error(`strides should be ${i}D`);if(e.pads.reduce((d,p)=>d+p,0)>0&&e.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(e.outputPadding.length!==i&&e.outputPadding.length!==0)throw new Error(`output_padding should be ${i}D`);if(e.kernelShape.reduce((d,p)=>d+p,0)>0&&e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape");if(e.outputShape.length!==0&&e.outputShape.length!==r[0].dims.length-2)throw new Error("invalid output shape")},B1=[2,3,1,0],R1=(r,e,n)=>{let t=kb(n,e),o=n.format==="NHWC",i=t.outputShape,s=i[o?3:1],a=e[0].dims[o?3:1];if(t.group!==1||s===1&&a===1){r.compute(el(e,t));return}let u=i[o?1:2],l=i[o?2:3],d=e[1].dims[2],p=e[1].dims[3],m=o?u*l:s,y=o?s:u*l,b=d*p*a,w=!0,A=r.kernelCustomData.wT??r.compute($r(e[1],B1),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!r.kernelCustomData.wT&&(r.kernelCustomData.wT=A);let $=[e[0],A],_=e.length===3;_&&(!o&&e[2].dims.length===1?$.push(e[2].reshape([e[2].dims[0],1,1])):$.push(e[2])),r.compute(Eb($,t,i,m,y,b,_,w),{inputs:$})},z1=(r,e)=>{let n=e.format==="NHWC",t=[r.inputs[0].reshape(n?[r.inputs[0].dims[0],1,r.inputs[0].dims[1],r.inputs[0].dims[2]]:[r.inputs[0].dims[0],r.inputs[0].dims[1],1,r.inputs[0].dims[2]]),r.inputs[1].reshape([r.inputs[1].dims[0],r.inputs[1].dims[1],1,r.inputs[1].dims[2]])];t.length===3&&t.push(r.inputs[2]);let o=e.kernelShape;(o.length===0||o[0]===0)&&(o=[r.inputs[1].dims[2]]);let i=e.dilations;(i.length===0||i[0]===0)&&(i=[1]);let s=e.strides;(s.length===0||s[0]===0)&&(s=[1]);let a=e.pads;a.length===0&&(a=[0,0]),a=[0,a[0],0,a[1]],s=[1].concat(s),i=[1].concat(i),o=[1].concat(o);let u=kb({...e,pads:a,strides:s,dilations:i,kernelShape:o},t);r.compute(el(t,u,l=>n?[l[0],l[2],l[3]]:[l[0],l[1],l[3]]))},Bb=(r,e)=>{D1(r.inputs,e),r.inputs[0].dims.length===3?z1(r,e):R1(r,r.inputs,e)}});var N1,zb,Nb,Mb=R(()=>{"use strict";Ae();Ge();Bt();Ue();N1=(r,e,n,t)=>{let o=H.size(e),i=e.length,s=W("input",r,i),a=te("output",r,i),u=n.dataType===6?n.getInt32Array()[0]:Number(n.getBigInt64Array()[0]),l=H.normalizeAxis(u,i),d=p=>{let m=` i32(${s.indicesGet("inputIndices","uniforms.axis")}) `,y=Te("uniforms.input_shape","uniforms.axis",i),b=t.reverse?m+(t.exclusive?" + 1":""):"0",w=t.reverse?y:m+(t.exclusive?"":" + 1");return`
                ${p.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(s,a)}
                ${p.mainStart()}
                  ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${a.offsetToIndices("global_idx")};
                  var sum = ${a.type.value}(0);
                  let first : i32 = ${b};
                  let last : i32 = ${w};
                  for (var i : i32 = first; i < last; i++) {
                    ${s.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${s.getByIndices("inputIndices")};
                  }
                  ${a.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:e,dataType:r}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:[{type:12,data:o},{type:6,data:l},...K(e),...K(e)]}),getShaderSource:d}},zb=(r,e)=>{let n=r.inputs[0].dims,t=r.inputs[0].dataType,o=r.inputs[1];r.compute(N1(t,n,o,e),{inputs:[0]})},Nb=r=>{let e=r.exclusive===1,n=r.reverse===1;return Ve({exclusive:e,reverse:n})}});var tl,ja,Lb,M1,L1,rl,nl,Fb,F1,Ub,Vb,Gb=R(()=>{"use strict";Ae();Ge();Bt();Ue();tl="[a-zA-Z]|\\.\\.\\.",ja="("+tl+")+",Lb="^"+ja+"$",M1="("+ja+",)*"+ja,L1="^"+M1+"$",rl=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,n){let t=this.symbolToIndices.get(e);t===void 0?t=[n]:t.push(n),this.symbolToIndices.set(e,t)}},nl=class{constructor(e,n){this.equation=n;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[t,o]=n.includes("->")?n.split("->",2):[n,""];if(!t.match(RegExp(L1)))throw new Error("Invalid LHS term");if(t.split(",").forEach((a,u)=>{let l=e[u].dims.slice();if(!a.match(RegExp(Lb)))throw new Error("Invalid LHS term");let d=this.processTerm(a,!0,l,u);this.lhs.push(d)}),o==="")o+=[...this.symbolToInfo.entries()].filter(([a,u])=>u.count===1||a==="...").map(([a])=>a).join("");else if(!o.match(RegExp(ja)))throw new Error("Invalid RHS");o.match(RegExp(tl,"g"))?.forEach(a=>{if(a==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let u=this.symbolToInfo.get(a);if(u===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(u.dimValue)}}),this.rhs=this.processTerm(o,!1,this.outputDims)}addSymbol(e,n,t){let o=this.symbolToInfo.get(e);if(o!==void 0){if(o.dimValue!==n&&o.count!==1)throw new Error("Dimension mismatch");o.count++,o.inputIndices.push(t)}else o={count:1,dimValue:n,inputIndices:[t]};this.symbolToInfo.set(e,o)}processTerm(e,n,t,o=-1){let i=t.length,s=!1,a=[],u=0;if(!e.match(RegExp(Lb))&&!n&&e!=="")throw new Error("Invalid LHS term");let l=e.match(RegExp(tl,"g")),d=new rl(o);return l?.forEach((p,m)=>{if(p==="..."){if(s)throw new Error("Only one ellipsis is allowed per input term");s=!0;let y=i-l.length+1;if(y<0)throw new Error("Ellipsis out of bounds");if(a=t.slice(u,u+y),this.hasEllipsis){if(this.ellipsisDims.length!==a.length||this.ellipsisDims.toString()!==a.toString())throw new Error("Ellipsis dimensions mismatch")}else if(n)this.hasEllipsis=!0,this.ellipsisDims=a;else throw new Error("Ellipsis must be specified in the LHS");for(let b=0;b<a.length;b++){let w=String.fromCharCode("0".charCodeAt(0)+b);d.addSymbol(w,m+b),this.addSymbol(w,t[u++],o)}}else d.addSymbol(p,m+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(p,t[u++],o)}),d}},Fb=r=>r+"_max",F1=(r,e,n,t)=>{let i=r.map(d=>d.length).map((d,p)=>W(`input${p}`,e,d)),s=H.size(t),a=te("output",e,t.length),u=[...n.symbolToInfo.keys()].filter(d=>!n.rhs.symbolToIndices.has(d)),l=d=>{let p=[],m="var prod = 1.0;",y="var sum = 0.0;",b="sum += prod;",w=[],A=[],$=[],_=[],O=n.symbolToInfo.size===n.rhs.symbolToIndices.size;n.symbolToInfo.forEach((N,F)=>{if(n.rhs.symbolToIndices.has(F)){let G=n.rhs.symbolToIndices.get(F)?.[0];G!==void 0&&n.lhs.forEach((J,le)=>{if(N.inputIndices.includes(le)){let z=J.symbolToIndices.get(F);if(z===void 0)throw new Error("Invalid symbol error");z.forEach(q=>{p.push(`${i[le].indicesSet(`input${le}Indices`,q,a.indicesGet("outputIndices",G))}`)})}})}else n.lhs.forEach((G,J)=>{if(N.inputIndices.includes(J)){let le=G.symbolToIndices.get(F);if(le===void 0)throw new Error("Invalid symbol error");le.forEach(z=>{w.push(`${i[J].indicesSet(`input${J}Indices`,z,`${F}`)}`)}),_.push(`prod *= ${i[J].getByIndices(`input${J}Indices`)};`)}}),A.push(`for(var ${F}: u32 = 0; ${F} < uniforms.${Fb(F)}; ${F}++) {`),$.push("}")});let P=O?[...p,`let sum = ${i.map((N,F)=>N.getByIndices(`input${F}Indices`)).join(" * ")};`]:[...p,y,...A,...w,m,..._,b,...$];return`
            ${d.registerUniforms(u.map(N=>({name:`${Fb(N)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...i,a)}

            ${d.mainStart()}
            ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${a.offsetToIndices("global_idx")};
            ${i.map((N,F)=>`var input${F}Indices: ${i[F].type.indices};`).join(`
`)}
            ${P.join(`
`)};
            ${a.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:n.equation,inputDependencies:r.map(()=>"rank")},getRunData:()=>{let d=u.filter(m=>n.symbolToInfo.has(m)).map(m=>({type:12,data:n.symbolToInfo.get(m)?.dimValue||0}));d.push({type:12,data:s});let p=r.map((m,y)=>[...K(m)]).reduce((m,y)=>m.concat(y),d);return p.push(...K(t)),{outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:p}},getShaderSource:l}},Ub=(r,e)=>{let n=new nl(r.inputs,e.equation),t=n.outputDims,o=r.inputs.map((i,s)=>i.dims);r.compute(F1(o,r.inputs[0].dataType,n,t))},Vb=r=>{let e=r.equation.replace(/\s+/g,"");return Ve({equation:e})}});var U1,Wb,V1,G1,Hb,qb=R(()=>{"use strict";Ae();Ge();Ue();U1=r=>{if(!r||r.length!==2)throw new Error("Expand requires 2 input.");let e=r[0].dims,n=Array.from(r[1].getBigInt64Array(),Number),t=n.length<e.length?0:n.length-e.length,o=e.length<n.length?0:e.length-n.length;for(;t<n.length&&o<e.length;++t,++o)if(n[t]!==e[o]&&n[t]!==1&&e[o]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Wb=(r,e)=>{let n=r.length-e.length,t=[];for(let o=0;o<n;++o)t.push(r[o]);for(let o=0;o<e.length;++o)t.push(e[o]===1?r[o+n]:e[o]);return t},V1=(r,e)=>r.length>e.length?Wb(r,e):Wb(e,r),G1=r=>{let e=r[0].dims,n=Array.from(r[1].getBigInt64Array(),Number),t=V1(e,n),o=r[0].dataType,i=o===9?4:1,s=Math.ceil(H.size(t)/i),a=l=>{let d=W("input",o,e.length,i),p=te("output",o,t.length,i),m;if(o===9){let y=(b,w,A="")=>`
          let outputIndices${w} = ${p.offsetToIndices(`outputOffset + ${w}u`)};
          let offset${w} = ${d.broadcastedIndicesToOffset(`outputIndices${w}`,p)};
          let index${w} = offset${w} / 4u;
          let component${w} = offset${w} % 4u;
          ${b}[${w}] = ${A}(${d.getByOffset(`index${w}`)}[component${w}]);
        `;m=`
        let outputOffset = global_idx * ${i};
        var data = vec4<u32>(0);
        ${y("data",0,"u32")}
        ${y("data",1,"u32")}
        ${y("data",2,"u32")}
        ${y("data",3,"u32")}
        ${p.setByOffset("global_idx","data")}
      }`}else m=`
        let outputIndices = ${p.offsetToIndices("global_idx")};
        let inputOffset = ${d.broadcastedIndicesToOffset("outputIndices",p)};
        ${p.setByOffset("global_idx",d.getByOffset("inputOffset"))}
      }`;return`
    ${l.registerUniform("vec_size","u32").declareVariables(d,p)}
    ${l.mainStart()}
    ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${m}`},u=[{type:12,data:s},...K(e),...K(t)];return{name:"Expand",shaderCache:{hint:`${t.length}`,inputDependencies:["rank"]},getShaderSource:a,getRunData:()=>({outputs:[{dims:t,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:u})}},Hb=r=>{U1(r.inputs),r.compute(G1(r.inputs),{inputs:[0]})}});var W1,H1,jb,Kb,Yb=R(()=>{"use strict";Ae();Ge();Bt();Ue();W1=r=>{if(!r||r.length!==2)throw new Error("Gather requires 2 inputs.")},H1=(r,e)=>{let n=r[0].dims,t=r[1].dims,o=n.length,i=H.normalizeAxis(e.axis,o),s=n.slice(0);s.splice(i,1,...t);let a=n[i],u=r[0].dataType===9?4:1,l=Math.ceil(H.size(s)/u),d=[{type:12,data:l},{type:6,data:a},{type:12,data:i},...K(r[0].dims),...K(r[1].dims),...K(s)],p=m=>{let y=W("data",r[0].dataType,r[0].dims.length,u),b=W("inputIndices",r[1].dataType,r[1].dims.length),w=te("output",r[0].dataType,s.length,u),A=_=>{let O=t.length,P=`var indicesIndices${_}  = ${b.type.indices}(0);`;for(let N=0;N<O;N++)P+=`${O>1?`indicesIndices${_}[${N}]`:`indicesIndices${_}`} = ${s.length>1?`outputIndices${_}[uniforms.axis + ${N}]`:`outputIndices${_}`};`;P+=`
          var idx${_} = ${b.getByIndices(`indicesIndices${_}`)};
          if (idx${_} < 0) {
            idx${_} = idx${_} + uniforms.axisDimLimit;
          }
          var dataIndices${_} = ${y.type.indices}(0);
        `;for(let N=0,F=0;N<o;N++)N===i?(P+=`${o>1?`dataIndices${_}[${N}]`:`dataIndices${_}`} = u32(idx${_});`,F+=O):(P+=`${o>1?`dataIndices${_}[${N}]`:`dataIndices${_}`} = ${s.length>1?`outputIndices${_}[${F}]`:`outputIndices${_}`};`,F++);return P},$;if(r[0].dataType===9){let _=(O,P,N="")=>`
          let outputIndices${P} = ${w.offsetToIndices(`outputOffset + ${P}u`)};
          ${A(P)};
          let offset${P} = ${y.indicesToOffset(`dataIndices${P}`)};
          let index${P} = offset${P} / 4u;
          let component${P} = offset${P} % 4u;
          ${O}[${P}] = ${N}(${y.getByOffset(`index${P}`)}[component${P}]);
        `;$=`
        let outputOffset = global_idx * ${u};
        var value = vec4<u32>(0);
        ${_("value",0,"u32")}
        ${_("value",1,"u32")}
        ${_("value",2,"u32")}
        ${_("value",3,"u32")}
        ${w.setByOffset("global_idx","value")}
      `}else $=`
      let outputIndices = ${w.offsetToIndices("global_idx")};
      ${A("")};
      let value = ${y.getByIndices("dataIndices")};
      ${w.setByOffset("global_idx","value")};
      `;return`
      ${m.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(y,b,w)}
      ${m.mainStart()}
        ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${$}
      }`};return{name:"Gather",shaderCache:{hint:e.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:s,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:d}),getShaderSource:p}},jb=r=>Ve({axis:r.axis}),Kb=(r,e)=>{let n=r.inputs;W1(n),r.compute(H1(r.inputs,e))}});var q1,j1,Xb,Zb,Jb=R(()=>{"use strict";Ae();Ge();Bt();Ue();q1=r=>{if(!r||r.length!==2)throw new Error("GatherElements requires 2 inputs.");if(r[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(r[0].dims.length!==r[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},j1=(r,e)=>{let n=r[0].dims,t=r[0].dataType,o=n.length,i=r[1].dims,s=r[1].dataType,a=H.normalizeAxis(e.axis,o),u=n[a],l=i.slice(0),d=H.size(l),p=W("input",t,o),m=W("indicesInput",s,i.length),y=te("output",t,l.length),b=[{type:12,data:d},{type:6,data:u},{type:12,data:a}];return b.push(...K(n)),b.push(...K(i)),b.push(...K(l)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:l,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:b}),getShaderSource:$=>`
      ${$.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(p,m,y)}
      ${$.mainStart()}
      ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${y.offsetToIndices("global_idx")};

      var idx = ${m.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${p.type.indices}(outputIndices);
      ${p.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${p.getByIndices("inputIndices")};

      ${y.setByOffset("global_idx","value")};
  }`}},Xb=r=>Ve({axis:r.axis}),Zb=(r,e)=>{let n=r.inputs;q1(n),r.compute(j1(r.inputs,e))}});var K1,Y1,Qb,ey,ty=R(()=>{"use strict";Ae();Ge();Ue();K1=r=>{if(!r)throw new Error("Input is missing");if(r.length<2||r.length>3)throw new Error("Invaid input number.");if(r.length===3&&r[2].dims.length>2)throw new Error("Invalid input shape of C");if(r[0].dataType!==r[1].dataType||r.length===3&&r[0].dataType!==r[2].dataType)throw new Error("Input types are mismatched")},Y1=(r,e)=>{let n=r[0].dims.slice(),t=r[1].dims.slice(),[o,i,s]=Da.getShapeOfGemmResult(n,e.transA,t,e.transB,r.length===3?r[2].dims:void 0),a=[o,i];if(!a)throw new Error("Can't use gemm on the given tensors");let u=H.size(a),l=[{type:12,data:u},{type:12,data:o},{type:12,data:i},{type:12,data:s},{type:1,data:e.alpha},{type:1,data:e.beta}],d=["type","type"];r.length===3&&(l.push(...K(r[2].dims)),d.push("rank")),l.push(...K(a));let p=m=>{let y="";e.transA&&e.transB?y="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":e.transA&&!e.transB?y="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!e.transA&&e.transB?y="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!e.transA&&!e.transB&&(y="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let b=e.alpha===1?"":"value *= uniforms.alpha;",w=W("a",r[0].dataType,r[0].dims),A=W("b",r[1].dataType,r[1].dims),$=w.type.value,_=null,O=[w,A];r.length===3&&(_=W("c",r[2].dataType,r[2].dims.length),O.push(_));let P=te("output",r[0].dataType,a.length);O.push(P);let N=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${m.registerUniforms(N).declareVariables(...O)}

  ${m.mainStart()}
    ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${$}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${y}
    }

    ${b}
    ${(()=>_!=null?`let cOffset = ${_.broadcastedIndicesToOffset("vec2(m, n)",P)}; value += ${$}(uniforms.beta) * ${_.getByOffset("cOffset")};`:"")()}
    output[global_idx] = value;
  }`};return{name:"Gemm",shaderCache:{hint:`${e.cacheKey}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:a,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:l}),getShaderSource:p}},Qb=r=>{let e=r.transA,n=r.transB,t=r.alpha,o=r.beta;return{transA:e,transB:n,alpha:t,beta:o,cacheKey:`${r.transA};${r.transB};${r.alpha===1}`}},ey=(r,e)=>{K1(r.inputs),r.compute(Y1(r.inputs,e))}});var X1,Z1,J1,ry,ny=R(()=>{"use strict";Ae();Ge();Ue();X1=(r,e)=>{let n=r[0].dims,t=n,o=2,i=H.sizeToDimension(n,o),s=H.sizeFromDimension(n,o),a=vt(s),u=s/a,l=[n[0],n[1],u],d=["rank","type","type"],p=[{type:12,data:s},{type:12,data:u}];p.push(...K(l),...K(l));let m=y=>{let b=W("x",r[0].dataType,l.length,a),w=W("scale",r[1].dataType,r[1].dims),A=W("bias",r[2].dataType,r[2].dims),$=te("output",r[0].dataType,l.length,a),_=[b,w,A,$],O=b.type.value,P=a===1?"f32":`vec${a}<f32>`,N=64,F=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`
  var<workgroup> meanShared : f32;
  var<workgroup> squaredNormShared : f32;
  var<workgroup> workgroupShared : array<${P}, ${N}>;
  const workgroupSize = ${N}u;
  ${y.registerUniforms(F).declareVariables(..._)}
  ${y.mainStart(N)}
    let norm = global_idx / workgroupSize;
    let batch = norm / uniforms.x_shape[1];
    let channel = norm % uniforms.x_shape[1];
    let localIndex = local_id.x;

    // initialize workgroup memory
    var initial = ${P}(0);
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      initial = initial + ${P}(${b.get("batch","channel","h")});
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the mean of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      meanShared = ${Qt("workgroupShared[0]",a)} / f32(uniforms.normSize);
    }
    workgroupBarrier();

    // reinitialize workgroup memory.
    initial = ${P}(0);
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      let deviation =  ${P}(${b.get("batch","channel","h")}) - ${P}(meanShared);
      initial = initial + deviation * deviation;
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the sum of square of deviation of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      squaredNormShared = ${Qt("workgroupShared[0]",a)};
    }
    workgroupBarrier();

    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${e.epsilon}));
    let channelScale = invStdDev * f32(${w.getByOffset("channel")});
    let channelShift = f32(${A.getByOffset("channel")}) - meanShared * channelScale;
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      let value = ${b.get("batch","channel","h")} * ${O}(${P}(channelScale)) + ${O}(${P}(channelShift));
      ${$.set("batch","channel","h","value")};
    }
  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${e.epsilon};${a}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:t,dataType:r[0].dataType}],dispatchGroup:{x:i},programUniforms:p}),getShaderSource:m}},Z1=(r,e,n,t,o,i,s,a)=>{let u=vt(s),l=64,d=u===1?"vec2f":`mat2x${u}f`,p=u===1?"f32":`vec${u}f`,m=(F,G)=>`${d}(${F}, ${G})`,y=o*s/u,b=Math.ceil(i/l),w=["type"],A=[{type:12,data:b},{type:12,data:i},{type:12,data:Math.floor(s/u)},{type:12,data:Math.floor(i*s/u)}],$=F=>{let G=W("input",e.dataType,e.dims,u);return`
  ${F.declareVariables(G)}
  @group(0) @binding(1) var<storage, read_write> output : array<${d}>;
  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};
  @group(0) @binding(2) var<uniform> uniforms: Uniforms;

  ${F.mainStart(l)}
    let currentImageNumber = global_idx / ${l} / uniforms.C;
    let currentChannelNumber = (global_idx / ${l}) % uniforms.C;
    let wgId = global_idx % ${l};
    let wgOffset = wgId * uniforms.wg_size;
    if (wgOffset >= uniforms.H) {
        return;
    }
    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);

    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;
    var sum = ${Rt("f32",u)};
    var squaredSum = ${Rt("f32",u)};
    for (var i: u32 = wgOffset; i < wgMax; i++) {
        let value = ${p}(input[offset + i * uniforms.C]);
        sum += value;
        squaredSum += value * value;
    }
    output[global_idx] = ${m("sum","squaredSum")};
  }`},_=r.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${u}`,inputDependencies:w},getRunData:()=>({outputs:[{dims:[o,s,l,2],dataType:1}],dispatchGroup:{x:o*s/u},programUniforms:A}),getShaderSource:$},{inputs:[e],outputs:[-1]})[0],O=[{type:12,data:y},{type:12,data:i},{type:12,data:Math.floor(s/u)},{type:12,data:Math.floor(l*s/u)}],P=["type","type","type"],N=F=>{let G=W("scale",n.dataType,n.dims,u),J=W("bias",t.dataType,t.dims,u);return`
  @group(0) @binding(0) var<storage, read> input : array<${d}>;
  @group(0) @binding(1) var<storage, read> scale : array<${G.type.storage}>;
  @group(0) @binding(2) var<storage, read> bias : array<${J.type.storage}>;
  @group(0) @binding(3) var<storage, read_write> output : array<${d}>;
  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};
  @group(0) @binding(4) var<uniform> uniforms: Uniforms;

  ${F.mainStart()}
    ${F.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}
    let currentImageNumber = global_idx / uniforms.C;
    let currentChannelNumber = global_idx % uniforms.C;

    let offset = currentImageNumber * uniforms.image_size;
    var sum = ${Rt("f32",u)};
    var squaredSum = ${Rt("f32",u)};
    for (var i: u32 = 0; i < ${l}; i++) {
        let value = input[offset + i + currentChannelNumber * ${l}];
        sum += value[0];
        squaredSum += value[1];
    }
    sum = sum / f32(uniforms.H);
    squaredSum = squaredSum / f32(uniforms.H);
    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${a}));
    let channelScale = invStdDev * ${p}(scale[currentChannelNumber]);
    let channelShift = ${p}(bias[currentChannelNumber]) - sum * channelScale;

    output[global_idx] = ${m("channelScale","channelShift")};
  }`};return r.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${u};${a}`,inputDependencies:P},getRunData:()=>({outputs:[{dims:[o,s,2],dataType:1}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:O}),getShaderSource:N},{inputs:[_,n,t],outputs:[-1]})[0]},J1=(r,e,n)=>{let t=e[0].dims,o=t,i=t[0],s=t[t.length-1],a=H.sizeFromDimension(t,1)/s,u=vt(s),l=H.size(o)/u,d=[{type:12,data:a},{type:12,data:Math.floor(s/u)}],p=["type","type"],m=Z1(r,e[0],e[1],e[2],i,a,s,n.epsilon),y=b=>{let w=yt(e[0].dataType),A=u===1?"vec2f":`mat2x${u}f`,$=u===1?w:`vec${u}<${w}>`,_=W("input",e[0].dataType,e[0].dims,u),O=te("output",e[0].dataType,o,u);return`
  @group(0) @binding(0) var<storage, read> input : array<${_.type.storage}>;
  @group(0) @binding(1) var<storage, read> scaleInput : array<${A}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${O.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${b.mainStart()}
    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);
    let currentChannelNumber = global_idx % uniforms.C;

    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;
    let scale = scaleInput[scaleOffset];
    output[global_idx] = fma(input[global_idx], ${$}(scale[0]), ${$}(scale[1]));
  }`};r.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${u}`,inputDependencies:p},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:d}),getShaderSource:y},{inputs:[e[0],m]})},ry=(r,e)=>{e.format==="NHWC"?J1(r,r.inputs,e):r.compute(X1(r.inputs,e))}});var Q1,e_,oy,iy=R(()=>{"use strict";Ae();Ge();Ue();Q1=r=>{if(!r||r.length<2)throw new Error("layerNorm requires at least 2 inputs.")},e_=(r,e,n)=>{let t=r[0].dims,o=r[1],i=r[2],s=t,a=H.normalizeAxis(e.axis,t.length),u=H.sizeToDimension(t,a),l=H.sizeFromDimension(t,a),d=H.size(o.dims),p=i?H.size(i.dims):0;if(d!==l||i&&p!==l)throw new Error(`Size of X.shape()[axis:] == ${l}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${d} and bias size of ${p}`);let m=[];for(let P=0;P<t.length;++P)P<a?m.push(t[P]):m.push(1);let y=vt(l),b=["type","type"],w=[{type:12,data:u},{type:1,data:l},{type:12,data:Math.floor(l/y)},{type:1,data:e.epsilon}];i&&b.push("type");let A=n>1,$=n>2,_=P=>{let N=yt(r[0].dataType),F=[W("x",r[0].dataType,r[0].dims,y),W("scale",o.dataType,o.dims,y)];i&&F.push(W("bias",i.dataType,i.dims,y)),F.push(te("output",r[0].dataType,s,y)),A&&F.push(te("mean_data_output",1,m)),$&&F.push(te("inv_std_output",1,m));let G=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${P.registerUniforms(G).declareVariables(...F)}
  ${P.mainStart()}
    ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var meanVector = ${Rt("f32",y)};
    var meanSquareVector = ${Rt("f32",y)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${Tr(N,y,"x[h + offset]")};
      meanVector += value;
      meanSquareVector += value * value;
    }
    let mean = ${Qt("meanVector",y)} / uniforms.norm_size;
    let invStdDev =
        inverseSqrt(${Qt("meanSquareVector",y)} / uniforms.norm_size - mean * mean + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${Tr(N,y,"x[j + offset]")};
      let f32scale = ${Tr(N,y,"scale[j]")};
      output[j + offset] = ${F[0].type.value}((f32input - mean) * invStdDev * f32scale
        ${i?`+ ${Tr(N,y,"bias[j]")}`:""}
      );
    }

    ${A?"mean_data_output[global_idx] = mean":""};
    ${$?"inv_std_output[global_idx] = invStdDev":""};
  }`},O=[{dims:s,dataType:r[0].dataType}];return A&&O.push({dims:m,dataType:1}),$&&O.push({dims:m,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${y};${n}`,inputDependencies:b},getRunData:()=>({outputs:O,dispatchGroup:{x:Math.ceil(u/64)},programUniforms:w}),getShaderSource:_}},oy=(r,e)=>{Q1(r.inputs),r.compute(e_(r.inputs,e,r.outputCount))}});var t_,sy,ay,r_,ol,uy,ly=R(()=>{"use strict";Ae();Ge();Bt();Pa();Wu();Ue();so();t_=(r,e)=>{let n=r[0],t=r[1],o=r[2],i=r[3],s=r[4],a=r[5],u=r[6],l=r[7];if(n.dims.length!==3&&n.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let d=!1,p=n.dims[0],m=n.dims[1],y=n.dims.length===3?d?n.dims[2]/3:n.dims[2]:e.numHeads*n.dims[4],b=m,w=0,A=0,$=Math.floor(y/e.numHeads);if(u&&l){if(u.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(l.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');w=u.dims[2],A=u.dims[2]}else if(u||l)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let _;if(t){if(n.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(t.dims.length<3||t.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(n.dims[0]!==t.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(t.dims.length===3){if(t.dims[2]!==n.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');_=2,b=t.dims[1]}else if(t.dims.length===5){if(t.dims[2]!==e.numHeads||t.dims[3]!==2||t.dims[4]!==$)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(o)throw new Error('Expect "value" be none when "key" has packed kv format.');_=5,b=t.dims[1]}else{if(t.dims[1]!==e.numHeads||t.dims[3]!==$)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');_=0,b=t.dims[2]}}else{if(n.dims.length!==3&&n.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(n.dims.length===5&&(n.dims[2]!==e.numHeads||n.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');_=3}if(i){if(i.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(o&&n.dims.length===5&&n.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let O=0;if(s){O=8;let J=s.dims;throw J.length===1?J[0]===p?O=1:J[0]===3*p+2&&(O=3):J.length===2&&J[0]===p&&J[1]===b&&(O=5),O===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)'):new Error("Mask not supported")}let P=!1,N=y;if(o){if(o.dims.length!==3&&o.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(n.dims[0]!==o.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(o.dims.length===3){if(b!==o.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');N=o.dims[2]}else{if(b!==o.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');N=o.dims[1]*o.dims[3],P=!0}}let F=w+b,G=!1;if(s)throw new Error("Key padding mask is not supported");if(a)throw new Error("extraAddQk is not supported");if(u)throw new Error("pastKey is not supported");if(l)throw new Error("pastValue is not supported");return{batchSize:p,sequenceLength:m,pastSequenceLength:w,kvSequenceLength:b,totalSequenceLength:F,maxSequenceLength:A,inputHiddenSize:0,hiddenSize:y,vHiddenSize:N,headSize:$,vHeadSize:Math.floor(N/e.numHeads),numHeads:e.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:e.maskFilterValue,maskType:O,scale:e.scale,broadcastResPosBias:G,passPastInKv:P,qkvFormat:_}},sy=r=>Ve({...r}),ay=Ve({perm:[0,2,1,3]}),r_=(r,e,n,t,o,i,s)=>{let a=[t,o,i],u=H.size(a),l=[{type:12,data:u},{type:12,data:s},{type:12,data:i}],d=p=>{let m=te("qkv_with_bias",e.dataType,a),y=W("qkv",e.dataType,a),b=W("bias",n.dataType,a),w=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${p.registerUniforms(w).declareVariables(y,b,m)}
  ${p.mainStart()}
    ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return r.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:a,dataType:e.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:l}),getShaderSource:d},{inputs:[e,n],outputs:[-1]})[0]},ol=(r,e,n,t,o,i,s,a)=>{let u=i;if(s){if(t===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return u=r_(r,i,s,e,t,n*o,a),u=u.reshape([e,t,n,o]),r.compute($r(u,ay.perm),{inputs:[u],outputs:[-1]})[0]}else return i.dims.length===3&&(u=i.reshape([e,t,n,o])),r.compute($r(u,ay.perm),{inputs:[u],outputs:[-1]})[0]},uy=(r,e)=>{let n=t_(r.inputs,e);if(r.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(r.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let t=r.inputs[1]&&r.inputs[2]&&r.inputs[1].dims.length===4&&r.inputs[2].dims.length===4,o=ol(r,n.batchSize,n.numHeads,n.sequenceLength,n.headSize,r.inputs[0],r.inputs[3],0);if(t)return La(r,o,r.inputs[1],r.inputs[2],r.inputs[4],void 0,void 0,void 0,r.inputs[5],n,e);let i=ol(r,n.batchSize,n.numHeads,n.kvSequenceLength,n.headSize,r.inputs[1],r.inputs[3],n.hiddenSize),s=ol(r,n.batchSize,n.numHeads,n.kvSequenceLength,n.vHeadSize,r.inputs[2],r.inputs[3],2*n.hiddenSize);La(r,o,i,s,r.inputs[4],void 0,r.inputs[6],r.inputs[7],r.inputs[5],n,e)}});var n_,o_,i_,a_,s_,u_,l_,d_,dy,cy=R(()=>{"use strict";Ae();Ge();Ue();n_=r=>{if(!r||r.length<1)throw new Error("Too few inputs");if(r[0].dataType!==1&&r[0].dataType!==10)throw new Error("Input type must be float or float16.");if(r.length>=2){let e=r[0].dims.length*2===r[1].dims[0];if(r.length===4&&(e=r[3].dims[0]*2===r[1].dims[0]),!e)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},o_=(r,e,n)=>{let t="";for(let o=e-1;o>=0;--o)t+=`
            k = i32(${r.indicesGet("indices",o)}) - ${Te("uniforms.pads",o,n)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${Te("uniforms.x_shape",o,e)})) {
              break;
            }
            offset += k * i32(${Te("uniforms.x_strides",o,e)});
        `;return`
          value = ${r.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${t}
            value = x[offset];
          }
      `},i_=(r,e,n)=>{let t="";for(let o=e-1;o>=0;--o)t+=`
                k = i32(${r.indicesGet("indices",o)}) - ${Te("uniforms.pads",o,n)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${Te("uniforms.x_shape",o,e)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${Te("uniforms.x_shape",o,e)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${Te("uniforms.x_strides",o,e)});
            `;return`
              var offset = 0;
              var k = 0;
              ${t}
              value = x[offset];
          `},a_=(r,e,n)=>{let t="";for(let o=e-1;o>=0;--o)t+=`
                k = i32(${r.indicesGet("indices",o)}) - ${Te("uniforms.pads",o,n)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${Te("uniforms.x_shape",o,e)})) {
                  k = i32(${Te("uniforms.x_shape",o,e)}) - 1;
                }
                offset += k * i32(${Te("uniforms.x_strides",o,e)});
            `;return`
              var offset = 0;
              var k = 0;
              ${t}
              value = x[offset];
          `},s_=(r,e,n)=>{let t="";for(let o=e-1;o>=0;--o)t+=`
                k = i32(${r.indicesGet("indices",o)}) - ${Te("uniforms.pads",o,n)};
                if (k < 0)  {
                  k += i32(${Te("uniforms.x_shape",o,e)}]);
                }
                if (k >= i32(${Te("uniforms.x_shape",o,e)})) {
                  k -= i32(${Te("uniforms.x_shape",o,e)});
                }
                offset += k * i32(${Te("uniforms.x_strides",o,e)});
            `;return`
              var offset = 0;
              var k = 0;
              ${t}
              value = x[offset];
          `},u_=(r,e,n)=>{switch(n.mode){case 0:return o_(r,e,n.pads.length);case 1:return i_(r,e,n.pads.length);case 2:return a_(r,e,n.pads.length);case 3:return s_(r,e,n.pads.length);default:throw new Error("Invalid mode")}},l_=(r,e)=>{let n=H.padShape(r[0].dims.slice(),e.pads),t=r[0].dims,o=H.size(n),i=[{type:12,data:o},{type:12,data:e.pads}];e.mode===0&&i.push({type:r[0].dataType,data:e.value}),i.push(...K(r[0].dims),...K(n));let s=["rank"],a=u=>{let l=te("output",r[0].dataType,n.length),d=W("x",r[0].dataType,t.length),p=d.type.value,m=u_(l,t.length,e),y=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:e.pads.length}];return e.mode===0&&y.push({name:"constant_value",type:p}),`
            ${u.registerUniforms(y).declareVariables(d,l)}
            ${u.mainStart()}
            ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${l.offsetToIndices("global_idx")};

            var value = ${p}(0);
            ${m}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${e.mode}`,inputDependencies:s},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(H.size(n)/64)},programUniforms:i}),getShaderSource:a}},d_=(r,e)=>{if(r.length>1){let n=r[1].getBigInt64Array(),t=r.length>=3&&r[2].data?r[2].getFloat32Array()[0]:0,o=r[0].dims.length,i=new Int32Array(2*o).fill(0);if(r.length>=4){let a=r[3].getBigInt64Array();for(let u=0;u<a.length;u++)i[Number(a[u])]=Number(n[u]),i[Number(a[u])+o]=Number(n[u+a.length])}else n.forEach((a,u)=>i[Number(u)]=Number(a));let s=[];return i.forEach(a=>s.push(a)),{mode:e.mode,value:t,pads:s}}else return e},dy=(r,e)=>{n_(r.inputs);let n=d_(r.inputs,e);r.compute(l_(r.inputs,n),{inputs:[0]})}});var Ka,fy,py,hy,my,c_,f_,gy,by,yy,vy,wy,xy,_y,Ty,$y,Sy,Iy,Ay,Oy=R(()=>{"use strict";kt();Ae();Ge();Ue();Ka=r=>{if(ve.webgpu.validateInputContent&&(!r||r.length!==1))throw new Error("Pool ops requires 1 input.")},fy=(r,e,n)=>{let t=e.format==="NHWC",o=r.dims.slice();t&&o.splice(1,0,o.pop());let i=Object.hasOwnProperty.call(e,"dilations"),s=e.kernelShape.slice(),a=e.strides.slice(),u=i?e.dilations.slice():[],l=e.pads.slice();Bn.adjustPoolAttributes(n,o,s,a,u,l);let d=Bn.computePoolOutputShape(n,o,a,u,s,l,e.autoPad),p=Object.assign({},e);i?Object.assign(p,{kernelShape:s,strides:a,pads:l,dilations:u,cacheKey:e.cacheKey}):Object.assign(p,{kernelShape:s,strides:a,pads:l,cacheKey:e.cacheKey});let m=d.slice();return m.push(m.splice(1,1)[0]),[p,t?m:d]},py=(r,e)=>{let n=e.format==="NHWC",t=H.size(r),o=H.size(e.kernelShape),i=[{type:12,data:t},{type:12,data:o}],s=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(e.kernelShape.length<=2){let a=e.kernelShape[e.kernelShape.length-1],u=e.strides[e.strides.length-1],l=e.pads[e.pads.length/2-1],d=e.pads[e.pads.length-1],p=!!(l+d);i.push({type:12,data:a},{type:12,data:u},{type:12,data:l},{type:12,data:d}),s.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let m=!1;if(e.kernelShape.length===2){let y=e.kernelShape[e.kernelShape.length-2],b=e.strides[e.strides.length-2],w=e.pads[e.pads.length/2-2],A=e.pads[e.pads.length-2];m=!!(w+A),i.push({type:12,data:y},{type:12,data:b},{type:12,data:w},{type:12,data:A}),s.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[i,s,!0,p,m]}else{if(n)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let a=H.computeStrides(e.kernelShape);i.push({type:12,data:a},{type:12,data:e.pads},{type:12,data:e.strides}),s.push({name:"kernelStrides",type:"u32",length:a.length},{name:"pads",type:"u32",length:e.pads.length},{name:"strides",type:"u32",length:e.strides.length});let u=e.pads.reduce((l,d)=>l+d);return[i,s,!!u,!1,!1]}},hy=(r,e,n,t,o,i,s,a,u,l,d,p)=>{let m=o.format==="NHWC",y=e.type.value,b=te("output",e.type.tensor,t);if(o.kernelShape.length<=2){let w="",A="",$="",_=n-(m?2:1);if(d?w=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${_}] = indices[${_}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${_}] < 0 || xIndices[${_}]
                      >= uniforms.x_shape[${_}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${e.indicesToOffset("xIndices")}];
                  ${i}
                }`:w=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${_}] = indices[${_}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${e.indicesToOffset("xIndices")}];
                  ${i}
                }`,o.kernelShape.length===2){let P=n-(m?3:2);p?A=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${P}] = indices[${P}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${P}] < 0 || xIndices[${P}] >= uniforms.x_shape[${P}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:A=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${P}] = indices[${P}] * uniforms.sh - uniforms.phStart + j;
                `,$=`
              }
            `}return`
            ${r.registerUniforms(u).declareVariables(e,b)}

            ${r.mainStart()}
              ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${b.offsetToIndices("global_idx")};
              var xIndices = ${b.offsetToIndices("global_idx")};

              var value = ${y}(${a});
              var pad = 0;
              ${A}
              ${w}
              ${$}
              ${s}

              output[global_idx] = value;
            }`}else{if(m)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let w=o.kernelShape.length,A=o.pads.length,$="";return l?$=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${e.indicesToOffset("xIndices")}];
                ${i}
              }`:$=`
              }
              let x_val = x[${e.indicesToOffset("xIndices")}];
              ${i}
            `,`
            ${r.registerUniforms(u).declareVariables(e,b)}

            ${r.mainStart()}
              ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${b.offsetToIndices("global_idx")};
              var xIndices = ${b.offsetToIndices("global_idx")};

              var offsets: array<u32, ${w}>;

              var value = ${y}(${a});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${w-1}u; j++) {
                  offsets[j] = offset / ${Te("uniforms.kernelStrides","j",w)};
                  offset -= offsets[j] * ${Te("uniforms.kernelStrides","j",w)};
                }
                offsets[${w-1}] = offset;

                isPad = false;
                for (var j = ${n-w}u; j < ${n}u; j++) {
                  xIndices[j] = indices[j] * ${Te("uniforms.strides",`j - ${n-w}u`,w)}
                    + offsets[j - ${n-w}u] - ${Te("uniforms.pads","j - 2u",A)};
                  ${$}
              }
              ${s}

              output[global_idx] = value;
            }`}},my=r=>`${r.format};${r.ceilMode};${r.autoPad};${r.kernelShape.length}`,c_=r=>`${my(r)};${r.countIncludePad}`,f_=r=>`${my(r)};${r.storageOrder};${r.dilations}`,gy=r=>({format:r.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][r.auto_pad],ceilMode:r.ceil_mode,kernelShape:r.kernel_shape,strides:r.strides,pads:r.pads}),by=(r,e,n,t)=>{let[o,i]=fy(e,t,n),s=W("x",e.dataType,e.dims.length),a=s.type.value,u="value += x_val;",l="";o.countIncludePad?l+=`value /= ${a}(uniforms.kernelSize);`:l+=`value /= ${a}(i32(uniforms.kernelSize) - pad);`;let[d,p,m,y,b]=py(i,o);d.push(...K(e.dims),...K(i));let w=["rank"];return{name:r,shaderCache:{hint:`${t.cacheKey};${m};${y};${b}`,inputDependencies:w},getRunData:()=>({outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(H.size(i)/64)},programUniforms:d}),getShaderSource:A=>hy(A,s,e.dims.length,i.length,o,u,l,0,p,m,y,b)}},yy=r=>{let e=r.count_include_pad!==0,n=gy(r);if(n.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let t={countIncludePad:e,...n,cacheKey:""};return{...t,cacheKey:c_(t)}},vy=(r,e)=>{Ka(r.inputs),r.compute(by("AveragePool",r.inputs[0],!1,e))},wy={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},xy=r=>{let e=r.format;return{format:e,...wy,cacheKey:e}},_y=(r,e)=>{Ka(r.inputs),r.compute(by("GlobalAveragePool",r.inputs[0],!0,e))},Ty=(r,e,n,t)=>{let[o,i]=fy(e,t,n),s=`
      value = max(x_val, value);
    `,a="",u=W("x",e.dataType,e.dims.length),l=["rank"],[d,p,m,y,b]=py(i,o);return d.push(...K(e.dims),...K(i)),{name:r,shaderCache:{hint:`${t.cacheKey};${m};${y};${b}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(H.size(i)/64)},programUniforms:d}),getShaderSource:w=>hy(w,u,e.dims.length,i.length,o,s,a,-1e5,p,m,y,b)}},$y=(r,e)=>{Ka(r.inputs),r.compute(Ty("MaxPool",r.inputs[0],!1,e))},Sy=r=>{let e=r.storage_order,n=r.dilations,t=gy(r);if(e!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(t.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let o={storageOrder:e,dilations:n,...t,cacheKey:""};return{...o,cacheKey:f_(o)}},Iy=r=>{let e=r.format;return{format:e,...wy,cacheKey:e}},Ay=(r,e)=>{Ka(r.inputs),r.compute(Ty("GlobalMaxPool",r.inputs[0],!0,e))}});var h_,m_,Ey,Cy=R(()=>{"use strict";kt();Ae();Ue();h_=(r,e,n)=>{let t=r===e,o=r<e&&n<0,i=r>e&&n>0;if(t||o||i)throw new Error("Range these inputs' contents are invalid.")},m_=(r,e,n,t)=>{let o=Math.abs(Math.ceil((e-r)/n)),i=[o],s=o,a=[{type:12,data:s},{type:t,data:r},{type:t,data:n},...K(i)],u=l=>{let d=te("output",t,i.length),p=d.type.value,m=[{name:"outputSize",type:"u32"},{name:"start",type:p},{name:"delta",type:p}];return`
        ${l.registerUniforms(m).declareVariables(d)}
        ${l.mainStart()}
        ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${p}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${t}`},getShaderSource:u,getRunData:()=>({outputs:[{dims:i,dataType:t}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:a})}},Ey=r=>{let e=0,n=0,t=0;r.inputs[0].dataType===6?(e=r.inputs[0].getInt32Array()[0],n=r.inputs[1].getInt32Array()[0],t=r.inputs[2].getInt32Array()[0]):r.inputs[0].dataType===1&&(e=r.inputs[0].getFloat32Array()[0],n=r.inputs[1].getFloat32Array()[0],t=r.inputs[2].getFloat32Array()[0]),ve.webgpu.validateInputContent&&h_(e,n,t),r.compute(m_(e,n,t,r.inputs[0].dataType),{inputs:[]})}});var g_,b_,y_,v_,w_,x_,__,T_,$_,S_,I_,Py,A_,O_,E_,C_,P_,ky,Dy,By=R(()=>{"use strict";Ae();Ge();Bt();Ue();g_=(r,e)=>{if(r.every(n=>n>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),r.length>0){if(e.mode==="linear"){if(!(r.length===2||r.length===3||r.length===4&&r[0]===1&&r[1]===1||r.length===4&&r[0]===1&&r[3]===1||r.length===5&&r[0]===1&&r[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(e.mode==="cubic"&&!(r.length===2||r.length===4&&r[0]===1&&r[1]===1||r.length===4&&r[0]===1&&r[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},b_=(r,e,n)=>{e.every(o=>o>=0&&o<n||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let t=new Array(n).fill(1);return e.forEach((o,i)=>t[o]=r[i]),t},y_=(r,e,n,t,o,i)=>{let[s,a,u]=n>10?[1,2,3]:[-1,r.length>1?1:-1,-1],l=r[0].dims.length;if(s>0&&r.length>s&&r[s].dims.length>0)r[s].getFloat32Array().forEach(d=>i.push(d));else if(e.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(a>0&&r.length>a&&r[a].dims.length>0){if(r[a].getFloat32Array().forEach(d=>t.push(d)),t.length!==0&&t.length!==l&&n>=18&&t.length!==e.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");g_(t,e),e.axes.length>0&&b_(t,e.axes,l).forEach((d,p)=>t[p]=d)}if(u>0&&r.length>u&&(r[u].getBigInt64Array().forEach(d=>o.push(Number(d))),o.length!==l||n>=18&&o.length===e.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(e.axes.length>0){if(t.length!==e.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(o.length!==e.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof t<"u"&&typeof o<"u"&&t.length>0&&o.length>l)throw new Error("Resize requires only of scales or sizes to be specified")},v_=(r,e)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${e} { `+(()=>{switch(r){case"asymmetric":return`return ${e}(xResized) / ${e}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${e}(xResized) + 0.5) / ${e}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${e}(xResized) + 0.5) / ${e}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating
                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
                    // offset-by-one error later in floor().
                    let whole = ${e}(xResized * (lengthOriginal - 1) / (lengthResized - 1));
                    let fract =
                        ${e}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${e}(lengthResized - 1);
                    return whole + fract;
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${e}(roiStart) * ${e}(lengthOriginal - 1) +
                        (${e}(xResized) * ${e}(roiEnd - roiStart) * ${e}(lengthOriginal - 1)) /
                        ${e}(lengthResized - 1);
                  } else {
                    return 0.5 * ${e}(roiStart + roiEnd) * ${e}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${e}xScale * ${e}(lengthResized);
                  const adjustment = ${e}(lengthResized) / outputWidth;
                  const center = ${e}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${e}(xResized) + 0.5) / ${e}(xScale)) - 0.5;`;case"half_pixel":return`return ((${e}(xResized) + 0.5) / ${e}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${r} is not supported`)}})()+"}",w_=(r,e,n)=>`fn getNearestPixelFromOriginal(xOriginal: ${n}, isDownSample: bool) -> ${n} {`+(()=>{switch(r){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(e<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${r} is not supported`)}})()+"}",x_=(r,e,n)=>{let t=new Array(n).fill(0).concat(new Array(n).fill(1)),o=r.length===0?t:r.slice();return e.length>0?(e.forEach((i,s)=>{t[i]=o[s],t[s+n]=o[e.length+s]}),t):o},__=(r,e,n,t)=>{let o=[];if(n.length>0)if(t.length>0){if(r.forEach(i=>o.push(i)),Math.max(...t)>r.length)throw new Error("axes is out of bound");t.forEach((i,s)=>o[i]=n[s])}else n.forEach(i=>o.push(i));else{if(e.length===0)throw new Error("Resize requires either scales or sizes.");o=r.map((i,s)=>Math.round(i*e[s]))}return o},T_=(r,e,n)=>{let t=(()=>{switch(n.keepAspectRatioPolicy){case"not_larger":return n.axes.length>0?Math.min(...n.axes.map(i=>e[i]),Number.MAX_VALUE):Math.min(...e,Number.MAX_VALUE);case"not_smaller":return n.axes.length>0?Math.max(...n.axes.map(i=>e[i]),Number.MIN_VALUE):Math.max(...e,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${n.keepAspectRatioPolicy} is not supported`)}})();e.fill(1,0,e.length);let o=r.slice();return n.axes.length>0?(n.axes.forEach(i=>e[i]=t),n.axes.forEach(i=>o[i]=Math.round(r[i]*e[i]))):(e.fill(t,0,e.length),o.forEach((i,s)=>o[s]=Math.round(i*e[s]))),o},$_=(r,e,n,t,o)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${r.type.indices}) -> array<${r.type.value}, ${n.length}> {
      var original_indices: array<${r.type.value}, ${n.length}>;
      for (var i:u32 = 0; i < ${n.length}; i++) {
        var output_index = ${r.indicesGet("output_indices","i")};
        var scale = ${Te("uniforms.scales","i",t)};
        var roi_low = ${Te("uniforms.roi","i",o)};
        var roi_hi = ${Te("uniforms.roi",`i + ${e.length}`,o)};
        if (scale == 1.0) {
          original_indices[i] = ${r.type.value}(output_index);
        } else {
          var input_shape_i = ${Te("uniforms.input_shape","i",e.length)};
          var output_shape_i = ${Te("uniforms.output_shape","i",n.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,S_=(r,e,n,t,o,i,s)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> ${r.type.indices} {
      var input_indices: ${r.type.indices};
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${Te("uniforms.scales","i",o)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${Te("uniforms.roi","i",i)};
          var roi_hi = ${Te("uniforms.roi",`i + ${n.length}`,i)};
          var input_shape_i = ${Te("uniforms.input_shape","i",n.length)};
          var output_shape_i = ${Te("uniforms.output_shape","i",t.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${s} || (original_idx >= 0 && original_idx < ${e.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${e.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${r.indicesSet("input_indices","i"," input_index")}
      }
      return input_indices;
    }`,I_=(r,e)=>`
    fn checkInputIndices(input_indices: ${r.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${e.length}; i++) {
        var input_index = ${r.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${Te("uniforms.input_shape","i",e.length)}) {
          return false;
        }
      }
      return true;
    }`,Py=(r,e,n,t)=>r.rank>t?`
    ${r.indicesSet("input_indices",e,"channel")};
    ${r.indicesSet("input_indices",n,"batch")};
`:"",A_=(r,e,n,t,o)=>{let[s,a,u,l]=n.length===2?[-1,0,1,-1]:[0,2,3,1],d=r.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${d} {
      var input_indices: ${r.type.indices};
      ${r.indicesSet("input_indices",a,`max(0, min(row, ${n[a]} - 1))`)};
      ${r.indicesSet("input_indices",u,`max(0, min(col, ${n[u]} - 1))`)};
      ${Py(r,l,s,2)}
      return ${r.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${e.type.indices}) -> ${d} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${d} = originalIndices[${a}];
      var col:${d} = originalIndices[${u}];
      ${t?`if (row < 0 || row > (${n[a]} - 1) || col < 0 || col > (${n[u]} - 1)) {
        return ${o};
      }`:""};
      row = max(0, min(row, ${n[a]} - 1));
      col = max(0, min(col, ${n[u]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${n.length>2?`u32(originalIndices[${l}])`:"0"};
      var batch: u32 =  ${n.length>2?`u32(originalIndices[${s}])`:"0"};
      var x11: ${d} = getInputValue(batch, channel, row1, col1);
      var x12: ${d} = getInputValue(batch, channel, row1, col2);
      var x21: ${d} = getInputValue(batch, channel, row2, col1);
      var x22: ${d} = getInputValue(batch, channel, row2, col2);
      var dx1: ${d} = abs(row - ${d}(row1));
      var dx2: ${d} = abs(${d}(row2) - row);
      var dy1: ${d} = abs(col - ${d}(col1));
      var dy2: ${d} = abs(${d}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},O_=(r,e,n,t,o,i,s,a,u,l)=>{let d=n.length===2,p=!0,[m,y]=d?[0,1]:p?[2,3]:[1,2],b=r.type.value,w=A=>{let $=A===m?"row":"col";return`
      fn ${$}CubicInterpolation(input_indices: ${r.type.indices}, output_indices: ${e.type.indices}) -> ${b} {
        var output_index = ${e.indicesGet("output_indices",A)};
        var originalIdx: ${b} = getOriginalCoordinateFromResizedCoordinate(output_index, ${o[A]},
        ${t[A]}, ${n[A]}, ${i[A]}, ${i[A]} + ${n.length});
        var fractOriginalIdx: ${b} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${a} && (originalIdx < 0 || originalIdx > (${n[A]} - 1))) {
          return ${u};
        }
        var data: array<${b}, 4> = array<${b}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${$}: ${b} = originalIdx + ${b}(i);
          if (${$} < 0 || ${$} >= ${n[A]}) {
            ${(()=>l?`coefs[i + 1] = 0.0;
                        continue;`:a?`return ${u};`:`${$} = max(0, min(${$}, ${n[A]} - 1));`)()};
          }
        var input_indices_copy: ${r.type.indices} = input_indices;
          ${r.indicesSet("input_indices_copy",A,`u32(${$})`)};
          data[i + 1] = ${A===m?r.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${w(m)};
    ${w(y)};
  fn getCubicInterpolationCoefs(s: ${b}) -> array<${b}, 4> {
    var absS = abs(s);
    var coeffs: array<${b}, 4> = array<${b}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${b} = 1.0 - absS;
    var twoMinusAbsS: ${b} = 2.0 - absS;
    var onePlusAbsS: ${b} = 1.0 + absS;
    coeffs[0] = ((${s} * onePlusAbsS - 5 * ${s}) * onePlusAbsS + 8 * ${s}) * onePlusAbsS - 4 * ${s};
    coeffs[1] = ((${s} + 2) * absS - (${s} + 3)) * absS * absS + 1;
    coeffs[2] = ((${s} + 2) * oneMinusAbsS - (${s} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${s} * twoMinusAbsS - 5 * ${s}) * twoMinusAbsS + 8 * ${s}) * twoMinusAbsS - 4 * ${s};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${b}, 4>, coefs: array<${b}, 4>) -> ${b} {
    var coefsSum: ${b} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${e.type.indices}) -> ${b} {
    var input_indices: ${r.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},E_=(r,e,n,t,o)=>{let[s,a,u,l,d]=n.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],p=r.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${p} {
      var input_indices: ${r.type.indices};
      ${r.indicesSet("input_indices",a,`max(0, min(depth, ${n[a]} - 1))`)};
      ${r.indicesSet("input_indices",u,`max(0, min(height, ${n[u]} - 1))`)};
      ${r.indicesSet("input_indices",l,`max(0, min(width, ${n[l]} - 1))`)};
      ${Py(r,d,s,3)}
      return ${r.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${e.type.indices}) -> ${p} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${p} = originalIndices[${a}];
      var height:${p} = originalIndices[${u}];
      var width:${p} = originalIndices[${l}];
      ${t?`if (depth < 0 || depth > (${n[a]} - 1) || height < 0 || height > (${n[u]} - 1) || width < 0 || (width > ${n[l]} - 1)) {
      return ${o};
        }`:""};

    depth = max(0, min(depth, ${n[a]} - 1));
      height = max(0, min(height, ${n[u]} - 1));
      width = max(0, min(width, ${n[l]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${n.length>3?`u32(originalIndices[${d}])`:"0"};
      var batch: u32 =  ${n.length>3?`u32(originalIndices[${s}])`:"0"};

      var x111: ${p} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${p} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${p} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${p} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${p} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${p} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${p} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${p} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${p} = abs(depth - ${p}(depth1));
      var dx2: ${p} = abs(${p}(depth2) - depth);
      var dy1: ${p} = abs(height - ${p}(height1));
      var dy2: ${p} = abs(${p}(height2) - height);
      var dz1: ${p} = abs(width - ${p}(width1));
      var dz2: ${p} = abs(${p}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},C_=(r,e,n,t,o,i)=>{let s=r.dims,a=x_(i,e.axes,s.length),u=__(s,t,o,e.axes),l=t.slice();t.length===0&&(l=s.map((_,O)=>_===0?1:u[O]/_),e.keepAspectRatioPolicy!=="stretch"&&(u=T_(s,l,e)));let d=te("output",r.dataType,u.length),p=W("input",r.dataType,s.length),m=H.size(u),y=s.length===u.length&&s.every((_,O)=>_===u[O]),b=e.coordinateTransformMode==="tf_crop_and_resize",w=e.extrapolationValue,A=p.type.value,$=_=>`
      ${y?"":`
      ${v_(e.coordinateTransformMode,A)};
      ${(()=>{switch(e.mode){case"nearest":return`
              ${I_(p,s)};
              ${w_(e.nearestMode,n,A)};
              ${S_(p,d,s,u,l.length,a.length,b)};
              `;case"linear":return`
              ${$_(d,s,u,l.length,a.length)};
              ${(()=>{if(s.length===2||s.length===4)return`${A_(p,d,s,b,w)}`;if(s.length===3||s.length===5)return`${E_(p,d,s,b,w)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(s.length===2||s.length===4)return`${O_(p,d,s,u,l,a,e.cubicCoeffA,b,e.extrapolationValue,e.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${_.registerUniform("output_size","u32").registerUniform("scales","f32",l.length).registerUniform("roi","f32",a.length).declareVariables(p,d)}
      ${_.mainStart()}
        ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${y?"output[global_idx] = input[global_idx];":`
        let output_indices = ${d.offsetToIndices("global_idx")};
        var input_indices: ${p.type.indices};
        ${(()=>{switch(e.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${p.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${e.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${s.length===2||s.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${e.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${e.cacheKey}|${n}|${l.length>0?l:""}|${o.length>0?o:""}|${a.length>0?a:""}|${y}|${s}`,inputDependencies:["rank"]},getShaderSource:$,getRunData:()=>({outputs:[{dims:u,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:[{type:12,data:m},{type:1,data:l},{type:1,data:a},...K(s),...K(u)]})}},P_=r=>{let e=r.customDataBuffer;return new Uint32Array(e,e.byteOffset,1)[0]},ky=(r,e)=>{let n=[],t=[],o=[],i=P_(r);if(e.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");y_(r.inputs,e,i,n,t,o),r.compute(C_(r.inputs[0],e,i,n,t,o),{inputs:[0]})},Dy=r=>{let e=r.antialias,n=r.axes,t=r.coordinateTransformMode,o=r.cubicCoeffA,i=r.excludeOutside!==0,s=r.extrapolationValue,a=r.keepAspectRatioPolicy,u=r.mode,l=r.nearestMode===""?"simple":r.nearestMode;return Ve({antialias:e,axes:n,coordinateTransformMode:t,cubicCoeffA:o,excludeOutside:i,extrapolationValue:s,keepAspectRatioPolicy:a,mode:u,nearestMode:l})}});var k_,D_,Ry,zy=R(()=>{"use strict";Ae();Ge();Ue();k_=r=>{if(!r||r.length<3)throw new Error("layerNorm requires at least 3 inputs.");let e=r[0],n=r[1],t=r[2];if(e.dataType!==n.dataType||e.dataType!==t.dataType)throw new Error("All inputs must have the same data type");if(e.dims.length!==3&&e.dims.length!==2)throw new Error("Input must be 2D or 3D");if(n.dims.length!==3&&n.dims.length!==2)throw new Error("Skip must be 2D or 3D");let o=e.dims[e.dims.length-1],i=e.dims[e.dims.length-2];if(n.dims[n.dims.length-1]!==o)throw new Error("Skip must have the same hidden size as input");if(n.dims[n.dims.length-2]!==i)throw new Error("Skip must have the same sequence length as input");if(t.dims.length!==1)throw new Error("Gamma must be 1D");if(t.dims[t.dims.length-1]!==o)throw new Error("Gamma must have the same hidden size as input");if(r.length>3){let s=r[3];if(s.dims.length!==1)throw new Error("Beta must be 1D");if(s.dims[s.dims.length-1]!==o)throw new Error("Beta must have the same hidden size as input")}if(r.length>4){let s=r[4];if(s.dims.length!==1)throw new Error("Bias must be 1D");if(s.dims[s.dims.length-1]!==o)throw new Error("Bias must have the same hidden size as input")}},D_=(r,e,n,t)=>{let o=r[0].dims,i=H.size(o),s=o,a=i,u=o.slice(-1)[0],l=t?o.slice(0,-1).concat(1):[],d=r.length>3,p=r.length>4,m=t&&n>1,y=t&&n>2,b=n>3,w=vt(u),A=[{type:12,data:a},{type:12,data:w},{type:12,data:u},{type:1,data:e.epsilon}],$=O=>{let P=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],N=[W("x",r[0].dataType,r[0].dims,w),W("skip",r[1].dataType,r[1].dims,w),W("gamma",r[2].dataType,r[2].dims,w)];d&&N.push(W("beta",r[3].dataType,r[3].dims,w)),p&&N.push(W("bias",r[4].dataType,r[4].dims,w)),N.push(te("output",r[0].dataType,s,w)),m&&N.push(te("mean_output",1,l)),y&&N.push(te("inv_std_output",1,l)),b&&N.push(te("input_skip_bias_sum",r[0].dataType,s,w));let F=yt(r[0].dataType);return`

      ${O.registerUniforms(P).declareVariables(...N)}

      ${O.mainStart()}
        ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size / uniforms.hidden_size")}
        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        let offset = global_idx * hidden_size_vectorized;
        var sum = ${Rt("f32",w)};
        var squareSum = ${Rt("f32",w)};
        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${p?"bias[i]":"0.0"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${b?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${Tr(F,w,"value")};
          sum += f32_value;
          squareSum += f32_value * f32_value;
        }
        let mean = ${Qt("sum",w)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${Qt("squareSum",w)} / f32(uniforms.hidden_size) - mean * mean + uniforms.epsilon);
        ${m?"mean_output[global_idx] = mean;":""}
        ${y?"inv_std_output[global_idx] = inv_std_dev;":""}
        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {
          output[offset + i] = (output[offset + i] - ${F}(mean)) * ${F}(inv_std_dev) * gamma[i] + ${d?"beta[i]":"0.0"};
        }
      }`},_=[{dims:s,dataType:r[0].dataType}];return n>1&&_.push({dims:l,dataType:1}),n>2&&_.push({dims:l,dataType:1}),n>3&&_.push({dims:o,dataType:r[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${w};${m};${y};${b}`,inputDependencies:r.map((O,P)=>"type")},getShaderSource:$,getRunData:()=>({outputs:_,dispatchGroup:{x:Math.ceil(a/u/64)},programUniforms:A})}},Ry=(r,e)=>{k_(r.inputs);let t=[0];r.outputCount>1&&t.push(-3),r.outputCount>2&&t.push(-3),r.outputCount>3&&t.push(3),r.compute(D_(r.inputs,e,r.outputCount,!1),{outputs:t})}});var B_,Ya,R_,Ny,z_,N_,My,Ly,Fy=R(()=>{"use strict";Ae();Ge();Bt();Ue();B_=(r,e)=>{if(!r||r.length<1)throw new Error("too few inputs");if(e.axes.length!==0){if(e.axes.length!==e.starts.length||e.axes.length!==e.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(e.starts.length!==e.ends.length)throw new Error("starts and ends must have the same length");r.slice(1).forEach((n,t)=>{if(r[t+1].dataType!==6&&r[t+1].dataType!==7)throw new Error(`Input ${t} must be an array of int32 or int64`)})},Ya=(r,e)=>{let n=[];if(r.length>e)if(r[e].dataType===7)r[e].getBigInt64Array().forEach(t=>n.push(Number(t)));else if(r[e].dataType===6)r[e].getInt32Array().forEach(t=>n.push(Number(t)));else throw new Error(`Input ${e} must be an array of int32 or int64`);return n},R_=(r,e)=>{if(r.length>1){let n=Ya(r,1),t=Ya(r,2),o=Ya(r,3);return o.length===0&&(o=[...Array(r[0].dims.length).keys()]),Ve({starts:n,ends:t,axes:o})}else return e},Ny=(r,e,n,t,o)=>{let i=r;return r<0&&(i+=n[t[e]]),o[e]<0?Math.max(0,Math.min(i,n[t[e]]-1)):Math.max(0,Math.min(i,n[t[e]]))},z_=(r,e,n)=>`fn calculateInputIndices(output_indices: ${e.type.indices}) -> ${r.type.indices} {
          var input_indices: ${r.type.indices};
          var carry = 0u;
          for (var i = ${n.length}; i >= 0; i--) {
            let input_shape_i = ${Te("uniforms.input_shape","i",n.length)};
            let steps_i = ${Te("uniforms.steps","i",n.length)};
            let signs_i = ${Te("uniforms.signs","i",n.length)};
            let starts_i = ${Te("uniforms.starts","i",n.length)};
            var output_index = ${e.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${r.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,N_=(r,e)=>{let n=r[0].dims,t=H.size(n),o=e.axes.length>0?H.normalizeAxes(e.axes,n.length):[...Array(n.length).keys()],i=Ya(r,4);i.forEach($=>$!==0||(()=>{throw new Error("step cannot be 0")})),i.length===0&&(i=Array(o.length).fill(1));let s=e.starts.map(($,_)=>Ny($,_,n,o,i)),a=e.ends.map(($,_)=>Ny($,_,n,o,i));if(o.length!==s.length||o.length!==a.length)throw new Error("start, ends and axes should have the same number of elements");if(o.length!==n.length)for(let $=0;$<n.length;++$)o.includes($)||(s.splice($,0,0),a.splice($,0,n[$]),i.splice($,0,1));let u=i.map($=>Math.sign($));i.forEach(($,_,O)=>{if($<0){let P=(a[_]-s[_])/$,N=s[_],F=N+P*i[_];s[_]=F,a[_]=N,O[_]=-$}});let l=n.slice(0);o.forEach(($,_)=>{l[$]=Math.ceil((a[$]-s[$])/i[$])});let d={dims:l,dataType:r[0].dataType},p=te("output",r[0].dataType,l.length),m=W("input",r[0].dataType,r[0].dims.length),y=H.size(l),b=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:s.length},{name:"signs",type:"i32",length:u.length},{name:"steps",type:"u32",length:i.length}],w=[{type:12,data:y},{type:12,data:s},{type:6,data:u},{type:12,data:i},...K(r[0].dims),...K(l)],A=$=>`
      ${$.registerUniforms(b).declareVariables(m,p)}
        ${z_(m,p,n)}
        ${$.mainStart()}
          ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${p.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${p.setByOffset("global_idx",m.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${u.length}_${s.length}_${i.length}`,inputDependencies:["rank"]},getShaderSource:A,getRunData:()=>({outputs:[d],dispatchGroup:{x:Math.ceil(t/64)},programUniforms:w})}},My=(r,e)=>{B_(r.inputs,e);let n=R_(r.inputs,e);r.compute(N_(r.inputs,n),{inputs:[0]})},Ly=r=>{let e=r.starts,n=r.ends,t=r.axes;return Ve({starts:e,ends:n,axes:t})}});var M_,L_,Uy,Vy,Gy=R(()=>{"use strict";Ae();Ge();Bt();Ue();M_=r=>{if(!r||r.length!==1)throw new Error("Softmax op requires 1 input.")},L_=(r,e)=>{let n=r.dims,t=H.size(n),o=64,i=e.axis;if(i<0&&(i=n.length+i),i<n.length-1)throw new Error("softmax only supports last axis for now.");let s=n[i],a=t/s,u=vt(s),l=s/u,d=(A,$)=>$===4?`max(max(${A}.x, ${A}.y), max(${A}.z, ${A}.w))`:$===2?`max(${A}.x, ${A}.y)`:$===3?`max(max(${A}.x, ${A}.y), ${A}.z)`:A,p=W("x",r.dataType,r.dims,u),m=te("result",r.dataType,r.dims,u),y=p.type.value,b=yt(r.dataType)==="f32"?`var threadMax = ${y}(-3.402823e+38f);`:`var threadMax = ${y}(-65504.0h);`,w=A=>`
      var<workgroup> rowMaxShared : ${y};
      var<workgroup> rowSumShared : ${y};
      var<workgroup> threadShared : array<${y}, ${o}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${y} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${y}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${A.registerUniform("packedCols","i32").declareVariables(p,m)}
      ${A.mainStart()}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${o};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${b}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${y}(${d("threadShared[0]",u)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${y}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${y}(${Qt("threadShared[0]",u)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`;return{name:"Softmax",shaderCache:{hint:`${u}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:n,dataType:r.dataType}],dispatchGroup:{x:a},programUniforms:[{type:12,data:l}]}),getShaderSource:w}},Uy=(r,e)=>{M_(r.inputs),r.compute(L_(r.inputs[0],e))},Vy=r=>Ve({axis:r.axis})});var F_,U_,V_,G_,W_,Wy,Hy,qy=R(()=>{"use strict";Ae();Ge();Bt();Ue();F_=r=>{if(!r||r.length<1)throw new Error("too few inputs")},U_=(r,e)=>{let n=[],t=e.numOutputs;return r[1].dims[0]>0&&(r[1].getBigInt64Array().forEach(o=>n.push(Number(o))),t=n.length),Ve({numOutputs:t,axis:e.axis,splitSizes:n})},V_=r=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${r}u; i += 1u ) {
    if (index < ${Te("uniforms.size_in_split_axis","i",r)}) {
        return i;
    }
    }
    return ${r}u;
}`,G_=r=>{let e=r.length,n=[];for(let t=0;t<e;++t){let o=r[t].setByIndices("indices","input[global_idx]");e===1?n.push(o):t===0?n.push(`if (output_number == ${t}u) { ${o} }`):t===e-1?n.push(`else { ${o} }`):n.push(`else if (output_number == ${t}) { ${o} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${r[0].type.indices}, global_idx: u32) {
        ${n.join(`
`)}
      }`},W_=(r,e)=>{let n=r[0].dims,t=H.size(n),o=r[0].dataType,i=H.normalizeAxis(e.axis,n.length),s=new Array(e.numOutputs),a=W("input",o,n),u=new Array(e.numOutputs),l=[],d=[],p=0,m=[{type:12,data:t}];for(let b=0;b<e.numOutputs;b++){p+=e.splitSizes[b],u[b]=p;let w=n.slice();w[e.axis]=e.splitSizes[b],d.push(w),s[b]=te(`output${b}`,o,w),l.push({dims:d[b],dataType:r[0].dataType})}m.push({type:12,data:u}),m.push(...K(n)),d.forEach(b=>m.push(...K(b)));let y=b=>`
  ${b.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",u.length).declareVariables(a,...s)}
  ${V_(u.length)}
  ${G_(s)}

  ${b.mainStart()}
    ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${a.offsetToIndices("global_idx")};
    var index = ${a.indicesGet("indices",i)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${Te("uniforms.size_in_split_axis","output_number - 1u",u.length)};
      ${a.indicesSet("indices",i,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:e.cacheKey,inputDependencies:["rank"]},getShaderSource:y,getRunData:()=>({outputs:l,dispatchGroup:{x:Math.ceil(t/64)},programUniforms:m})}},Wy=(r,e)=>{F_(r.inputs);let n=r.inputs.length===1?e:U_(r.inputs,e);r.compute(W_(r.inputs,n),{inputs:[0]})},Hy=r=>{let e=r.axis,n=r.splitSizes,t=r.numOutputs<0?n.length:r.numOutputs;if(t!==n.length)throw new Error("numOutputs and splitSizes lengh must be equal");return Ve({axis:e,numOutputs:t,splitSizes:n})}});var jy,H_,q_,j_,Ky,Yy=R(()=>{"use strict";Ae();Ge();Ue();jy=r=>Array.from(r.getBigInt64Array(),Number),H_=r=>{if(!r||r.length!==2)throw new Error("Tile requires 2 inputs.");if(r[0].dataType!==1&&r[0].dataType!==6&&r[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(r[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(r[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(jy(r[1]).length!==r[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},q_=(r,e)=>{let n=[];for(let t=0;t<r.length;++t)n.push(r[t]*e[t]);return n},j_=r=>{let e=r[0].dims,n=jy(r[1]),t=q_(e,n),o=H.size(t),i=r[0].dataType,s=W("input",i,e.length),a=te("output",i,t.length),u=l=>`
      const inputShape = ${s.indices(...e)};
      ${l.registerUniform("output_size","u32").declareVariables(s,a)}
      ${l.mainStart()}
      ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${a.offsetToIndices("global_idx")};
      var input_indices: ${s.type.indices};
      for (var i = 0; i < ${e.length}; i++) {
        let input_dim_i = ${s.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${a.indicesGet("output_indices","i")}  % input_dim_i;

        ${s.indicesSet("input_indices","i","input_dim_value")}
      }
      ${a.setByOffset("global_idx",s.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${n}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:[{type:12,data:o},...K(r[0].dims),...K(t)]}),getShaderSource:u}},Ky=r=>{H_(r.inputs),r.compute(j_(r.inputs),{inputs:[0]})}});var K_,Y_,Xy,Zy=R(()=>{"use strict";Ae();Ge();Ue();K_=(r,e,n,t,o)=>{let i=te("output_data",o,n.length,4),s=W("a_data",e[1].dataType,e[1].dims.length,4),a=W("b_data",e[2].dataType,e[2].dims.length,4),u=W("c_data",e[0].dataType,e[0].dims.length,4),l,d=(p,m,y)=>`select(${m}, ${p}, ${y})`;if(!t)l=i.setByOffset("global_idx",d(s.getByOffset("global_idx"),a.getByOffset("global_idx"),u.getByOffset("global_idx")));else{let p=(m,y,b="")=>{let w=`a_data[index_a${y}][component_a${y}]`,A=`b_data[index_b${y}][component_b${y}]`,$=`bool(c_data[index_c${y}] & ${4278190080>>>(3-y)*8}u)`;return`
            let output_indices${y} = ${i.offsetToIndices(`global_idx * 4u + ${y}u`)};
            let offset_a${y} = ${s.broadcastedIndicesToOffset(`output_indices${y}`,i)};
            let offset_b${y} = ${a.broadcastedIndicesToOffset(`output_indices${y}`,i)};
            let offset_c${y} = ${u.broadcastedIndicesToOffset(`output_indices${y}`,i)};
            let index_a${y} = offset_a${y} / 4u;
            let index_b${y} = offset_b${y} / 4u;
            let index_c${y} = offset_c${y} / 4u;
            let component_a${y} = offset_a${y} % 4u;
            let component_b${y} = offset_b${y} % 4u;
            ${m}[${y}] = ${b}(${d(w,A,$)});
          `};o===9?l=`
            var data = vec4<u32>(0);
            ${p("data",0,"u32")}
            ${p("data",1,"u32")}
            ${p("data",2,"u32")}
            ${p("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:l=`
            ${p("output_data[global_idx]",0)}
            ${p("output_data[global_idx]",1)}
            ${p("output_data[global_idx]",2)}
            ${p("output_data[global_idx]",3)}
          `}return`
        ${r.registerUniform("vec_size","u32").declareVariables(u,s,a,i)}
        ${r.mainStart()}
        ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${l}
      }`},Y_=r=>{let e=r[1].dims,n=r[2].dims,t=r[0].dims,o=r[1].dataType,i=!(H.areEqual(e,n)&&H.areEqual(n,t)),s=e,a=H.size(e);if(i){let l=Dr.calcShape(Dr.calcShape(e,n,!1),t,!1);if(!l)throw new Error("Can't perform where op on the given tensors");s=l,a=H.size(s)}let u=Math.ceil(a/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:l=>K_(l,r,s,i,o),getRunData:()=>({outputs:[{dims:s,dataType:o}],dispatchGroup:{x:Math.ceil(a/64/4)},programUniforms:[{type:12,data:u},...K(t),...K(e),...K(n),...K(s)]})}},Xy=r=>{r.compute(Y_(r.inputs))}});var Jy,Qy=R(()=>{"use strict";xg();Wu();$g();Ig();sb();yb();xb();Yu();Rb();Mb();Gb();qb();Yb();Jb();ty();ny();iy();Zu();ly();cy();Oy();Cy();Na();By();zy();Fy();Gy();qy();Yy();so();Hu();Zy();Jy=new Map([["Abs",[Ag]],["Acos",[Og]],["Acosh",[Eg]],["Add",[ub]],["ArgMax",[wg,Gu]],["ArgMin",[vg,Gu]],["Asin",[Cg]],["Asinh",[Pg]],["Atan",[kg]],["Atanh",[Dg]],["Attention",[_g]],["AveragePool",[vy,yy]],["BatchNormalization",[Tg]],["BiasAdd",[Sg]],["BiasSplitGelu",[ab]],["Cast",[Rg,Bg]],["Ceil",[Ng]],["Clip",[zg]],["Concat",[vb,wb]],["Conv",[Qu,Ju]],["ConvTranspose",[Bb,Db]],["Cos",[Mg]],["Cosh",[Lg]],["CumSum",[zb,Nb]],["Div",[lb]],["Einsum",[Ub,Vb]],["Elu",[Fg,Fa]],["Equal",[db]],["Erf",[Ug]],["Exp",[Vg]],["Expand",[Hb]],["Floor",[Gg]],["FusedConv",[Qu,Ju]],["Gather",[Kb,jb]],["GatherElements",[Zb,Xb]],["Gelu",[Wg]],["Gemm",[ey,Qb]],["GlobalAveragePool",[_y,xy]],["GlobalMaxPool",[Ay,Iy]],["Greater",[hb]],["GreaterOrEqual",[gb]],["HardSigmoid",[Jg,Zg]],["InstanceNormalization",[ry]],["LayerNormalization",[oy]],["LeakyRelu",[Hg,Fa]],["Less",[mb]],["LessOrEqual",[bb]],["Log",[ib]],["MatMul",[Ib]],["MaxPool",[$y,Sy]],["Mul",[cb]],["MultiHeadAttention",[uy,sy]],["Neg",[jg]],["Not",[qg]],["Pad",[dy]],["Pow",[fb]],["Range",[Ey]],["Reciprocal",[Kg]],["ReduceMin",[pg]],["ReduceMean",[ug]],["ReduceMax",[fg]],["ReduceSum",[mg]],["ReduceProd",[hg]],["ReduceL1",[lg]],["ReduceL2",[dg]],["ReduceLogSum",[bg]],["ReduceLogSumExp",[cg]],["ReduceSumSquare",[gg]],["Relu",[Yg]],["Resize",[ky,Dy]],["Sigmoid",[Xg]],["Sin",[Qg]],["Sinh",[eb]],["Slice",[My,Ly]],["SkipLayerNormalization",[Ry]],["Split",[Wy,Hy]],["Sqrt",[tb]],["Softmax",[Uy,Vy]],["Sub",[pb]],["Tan",[rb]],["Tanh",[nb]],["ThresholdedRelu",[ob,Fa]],["Tile",[Ky]],["Transpose",[Ym,Xm]],["Where",[Xy]]])});var Xa,e0=R(()=>{"use strict";kt();dn();Ue();Xa=class{constructor(e){this.backend=e;this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,n){this.repo.set(e,n)}run(e,n,t,o,i){Kt(e.programInfo.name);let s=this.backend.device,a=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let u=[];for(let d of n)u.push({binding:u.length,resource:{buffer:d.buffer}});for(let d of t)u.push({binding:u.length,resource:{buffer:d.buffer}});i&&u.push({binding:u.length,resource:i});let l=s.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:u,label:e.programInfo.name});if(this.backend.sessionStatus==="capturing"){let d={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:l,dispatchGroup:o};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(d)}a.setPipeline(e.computePipeline),a.setBindGroup(0,l),a.dispatchWorkgroups(...o),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Yt(e.programInfo.name)}dispose(){}build(e,n){Kt(e.name);let t=this.backend.device,o=[];t.features.has("shader-f16")&&o.push("enable f16;");let i=jm(n),s=e.getShaderSource(i),a=`${o.join(`
`)}
${i.additionalImplementations}
${s}`,u=t.createShaderModule({code:a,label:e.name});nt("verbose",()=>`[WebGPU] ${e.name} shader code: ${a}`);let l=t.createComputePipeline({compute:{module:u,entryPoint:"main"},layout:"auto",label:e.name});return Yt(e.name),{programInfo:e,computePipeline:l}}normalizeDispatchGroupSize(e){let n=typeof e=="number"?e:e.x,t=typeof e=="number"?1:e.y||1,o=typeof e=="number"?1:e.z||1,i=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(n<=i&&t<=i&&o<=i)return[n,t,o];let s=n*t*o,a=Math.ceil(Math.sqrt(s));if(a>i){if(a=Math.ceil(Math.cbrt(s)),a>i)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[a,a,a]}else return[a,a,1]}}});var X_,Z_,Za,t0=R(()=>{"use strict";kt();Ae();dn();Vm();qm();Qy();e0();X_=(r,e)=>{if(e.length!==r.length)throw new Error(`inputDependencies length ${e.length} is not equal to inputTensors length ${r.length}.`);let n=[];for(let t=0;t<r.length;++t){let o=r[t].dataType;switch(e[t]){case"none":{n.push("");break}case"type":{n.push(`${o}`);break}case"rank":{let i=r[t].dims.length;n.push(`${o};${i}`);break}case"dims":{let i=r[t].dims.join(",");n.push(`${o};${i}`);break}default:throw new Error(`unsupported input dependency: ${e[t]}`)}}return n.join("|")},Z_=(r,e,n)=>{let t=r.name;return r.shaderCache?.hint&&(t+="["+r.shaderCache.hint+"]"),t+=":"+n+`:${X_(e,r.shaderCache?.inputDependencies??new Array(e.length).fill("dims"))}`,t},Za=class{constructor(){this.currentSessionId=null;this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.maxDispatchNumber=16;this.pendingDispatchNumber=0;this.pendingKernels=[];this.pendingQueries=new Map;this.sessionStatus="default";this.capturedCommandList=new Map;this.capturedPendingKernels=new Map;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,n){this.env=e;let t=[],o={requiredLimits:{maxComputeWorkgroupStorageSize:n.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:n.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:n.limits.maxStorageBufferBindingSize,maxBufferSize:n.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:n.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:n.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:n.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:n.limits.maxComputeWorkgroupSizeZ},requiredFeatures:t};n.features.has("chromium-experimental-timestamp-query-inside-passes")?t.push("chromium-experimental-timestamp-query-inside-passes"):n.features.has("timestamp-query")&&t.push("timestamp-query"),n.features.has("shader-f16")&&t.push("shader-f16"),this.device=await n.requestDevice(o),this.gpuDataManager=Hm(this),this.programManager=new Xa(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Fm(e.logLevel,!!e.debug),this.device.onuncapturederror=i=>{i.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${i.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),n={};this.queryType==="at-passes"&&(n.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=e.beginComputePass(n)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;Kt(),this.endComputePass();let e;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),e=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&e.mapAsync(GPUMapMode.READ).then(()=>{let n=new BigUint64Array(e.getMappedRange()),t=this.pendingQueries.get(e);for(let o=0;o<n.length/2;o++){let i=t[o],s=i.kernelId,a=this.kernels.get(s),u=a.kernelType,l=a.kernelName,d=i.programName,p=i.inputTensorViews,m=i.outputTensorViews,y=n[o*2],b=n[o*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=y);let w=Number(y-this.queryTimeBase),A=Number(b-this.queryTimeBase);if(!Number.isSafeInteger(w)||!Number.isSafeInteger(A))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:p.map($=>({dims:$.dims,dataType:ln($.dataType)})),outputsMetadata:m.map($=>({dims:$.dims,dataType:ln($.dataType)})),kernelId:s,kernelType:u,kernelName:l,programName:d,startTime:w,endTime:A});else{let $="";p.forEach((O,P)=>{$+=`input[${P}]: [${O.dims}] | ${ln(O.dataType)}, `});let _="";m.forEach((O,P)=>{_+=`output[${P}]: [${O.dims}] | ${ln(O.dataType)}, `}),console.log(`[profiling] kernel "${s}|${u}|${l}|${d}" ${$}${_}execution time: ${A-w} ns`)}Do("GPU",`${d}::${y}::${b}`)}e.unmap(),this.pendingQueries.delete(e)}),Yt()}run(e,n,t,o,i){Kt(e.name);let s=[];for(let _=0;_<n.length;++_){let O=this.gpuDataManager.get(n[_].data);if(!O)throw new Error(`no GPU data for input: ${n[_].data}`);s[_]=O}let{outputs:a,dispatchGroup:u,programUniforms:l}=e.getRunData(n),d=t.length===0?a.map((_,O)=>O):t;if(d.length!==a.length)throw new Error(`Output size ${d.length} must be equal to ${a.length}.`);let p=[],m=[];for(let _=0;_<a.length;++_){if(!Number.isInteger(d[_])||d[_]<-3||d[_]>=a.length)throw new Error(`Invalid output index: ${d[_]}`);if(d[_]===-3)continue;let O=d[_]===-1,P=d[_]===-2,N=O||P?i(a[_].dataType,a[_].dims):o(d[_],a[_].dataType,a[_].dims),F=this.gpuDataManager.get(N.data);if(!F)throw new Error(`no GPU data for output: ${N.data}`);if(O&&this.temporaryData.push(F),P){let G=this.kernelPersistentData.get(this.currentKernelId);G||(G=[],this.kernelPersistentData.set(this.currentKernelId,G)),G.push(F)}p.push(N),m.push(F)}let y;if(l){let _=0,O=[];l.forEach(G=>{let J=typeof G.data=="number"?[G.data]:G.data;if(J.length===0)return;let le=G.type===10?2:4,z,q;G.type===10?(q=J.length>4?16:J.length>2?8:J.length*le,z=J.length>4?16:le*J.length):(q=J.length<=2?J.length*le:16,z=16),_=Math.ceil(_/q)*q,O.push(_);let tt=G.type===10?8:4;_+=J.length>4?Math.ceil(J.length/tt)*z:J.length*le});let P=16;_=Math.ceil(_/P)*P;let N=new ArrayBuffer(_);l.forEach((G,J)=>{let le=O[J],z=typeof G.data=="number"?[G.data]:G.data;if(G.type===6)new Int32Array(N,le,z.length).set(z);else if(G.type===12)new Uint32Array(N,le,z.length).set(z);else if(G.type===10)new Uint16Array(N,le,z.length).set(z);else if(G.type===1)new Float32Array(N,le,z.length).set(z);else throw new Error(`Unsupported uniform type: ${ln(G.type)}`)});let F=this.gpuDataManager.create(_,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(F.buffer,0,N,0,_),this.gpuDataManager.release(F.id),y={offset:0,size:_,buffer:F.buffer}}let b=this.programManager.normalizeDispatchGroupSize(u),w=b[1]===1&&b[2]===1,A=Z_(e,n,w),$=this.programManager.getArtifact(A);if($||($=this.programManager.build(e,b),this.programManager.setArtifact(A,$),nt("info",()=>`[artifact] key: ${A}, programName: ${e.name}`)),nt("info",()=>`[ProgramManager] run "${e.name}" (key=${A}) with ${b[0]}x${b[1]}x${b[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let _={kernelId:this.currentKernelId,programName:$.programInfo.name,inputTensorViews:n,outputTensorViews:p};this.pendingKernels.push(_),this.capturedPendingKernels.get(this.currentSessionId).push(_)}return this.programManager.run($,s,m,b,y),Yt(e.name),p}upload(e,n){this.gpuDataManager.upload(e,n)}memcpy(e,n){this.gpuDataManager.memcpy(e,n)}async download(e,n){await this.gpuDataManager.download(e,n)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,n,t,o){let i=Jy.get(e);if(!i)throw new Error(`kernel not implemented: ${e}`);let s={kernelType:e,kernelName:o,kernelEntry:i[0],attributes:[i[1],t]};this.kernels.set(n,s)}releaseKernel(e){let n=this.kernelPersistentData.get(e);if(n){for(let t of n)this.gpuDataManager.release(t.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,n,t){let o=this.kernels.get(e);if(!o)throw new Error(`kernel not created: ${e}`);let i=o.kernelType,s=o.kernelName,a=o.kernelEntry,u=o.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${i}] ${s}" is not allowed to be called recursively`);this.currentKernelId=e,u[0]&&(u[1]=u[0](u[1]),u[0]=void 0),nt("info",()=>`[WebGPU] Start to run kernel "[${i}] ${s}"...`);let l=this.env.debug;this.temporaryData=[];try{return l&&this.device.pushErrorScope("validation"),a(n,u[1]),0}catch(d){return t.push(Promise.resolve(`[WebGPU] Kernel "[${i}] ${s}" failed. ${d}`)),1}finally{l&&t.push(this.device.popErrorScope().then(d=>d?`GPU validation error for kernel "[${i}] ${s}": ${d.message}`:null));for(let d of this.temporaryData)this.gpuDataManager.release(d.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,n,t,o){let i=this.sessionExternalDataMapping.get(e);i||(i=new Map,this.sessionExternalDataMapping.set(e,i));let s=i.get(n),a=this.gpuDataManager.registerExternalBuffer(t,o,s?.[1]);return i.set(n,[a,t]),a}unregisterBuffers(e){let n=this.sessionExternalDataMapping.get(e);n&&(n.forEach(t=>this.gpuDataManager.unregisterExternalBuffer(t[1])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let n=this.gpuDataManager.get(e);if(!n)throw new Error(`no GPU data for buffer: ${e}`);return n.buffer}createDownloader(e,n,t){return async()=>{let o=await zu(this,e,n);return Um(o.buffer,t)}}writeTimestamp(e){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||this.env.wasm.trace)&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){nt("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){nt("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){nt("info","replay"),this.sessionStatus="replaying";let e=this.capturedCommandList.get(this.currentSessionId),n=this.capturedPendingKernels.get(this.currentSessionId),t=e.length;this.pendingKernels=[];for(let o=0;o<t;o++){let i=this.getComputePassEncoder(),s=e[o];this.writeTimestamp(this.pendingDispatchNumber*2),i.setPipeline(s.computePipeline),i.setBindGroup(0,s.bindGroup),i.dispatchWorkgroups(...s.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(n[o]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}});var r0={};tn(r0,{init:()=>J_});var ri,il,J_,n0=R(()=>{"use strict";Ae();t0();dn();Ge();ri=class r{constructor(e,n,t,o){this.module=e;this.dataType=n;this.data=t;this.dims=o}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let e=H.size(this.dims);return e===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,e)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let e=H.size(this.dims);return e===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,e)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let e=H.size(this.dims);return e===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,e)}reshape(e){if(H.size(e)!==H.size(this.dims))throw new Error("Invalid new shape");return new r(this.module,this.dataType,this.data,e)}},il=class{constructor(e,n,t){this.module=e;this.backend=n;this.customDataOffset=0;this.customDataSize=0;let o=e.HEAPU32,i=t>>>2;this.opKernelContext=o[i++];let s=o[i++];this.outputCount=o[i++],this.customDataOffset=o[i++],this.customDataSize=o[i++];let a=[];for(let u=0;u<s;u++){let l=o[i++],d=o[i++],p=o[i++],m=[];for(let y=0;y<p;y++)m.push(o[i++]);a.push(new ri(e,l,d,m))}this.inputs=a}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(e,n){let t=n?.inputs?.map(a=>typeof a=="number"?this.inputs[a]:a)??this.inputs,o=n?.outputs??[],i=(a,u,l)=>new ri(this.module,u,this.output(a,l),l),s=(a,u)=>{let l=Xo(a);if(!l)throw new Error(`Unsupported data type: ${a}`);let d=l*H.size(u);return new ri(this.module,a,this.backend.gpuDataManager.create(d).id,u)};return this.backend.run(e,t,o,i,s)}output(e,n){let t=this.module.stackSave();try{let o=this.module.stackAlloc((1+n.length)*4),i=o>>2;this.module.HEAPU32[i++]=n.length;for(let s=0;s<n.length;s++)this.module.HEAPU32[i++]=n[s];return this.module._JsepOutput(this.opKernelContext,e,o)}catch(o){throw new Error(`Failed to generate kernel's output[${e}] with dims [${n}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${o}`)}finally{this.module.stackRestore(t)}}},J_=async(r,e,n)=>{let t=r.jsepInit;if(!t)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");let o=new Za;await o.initialize(e,n),t(o,i=>o.alloc(i),i=>o.free(i),(i,s,a,u=!1)=>{if(u)nt("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${i}, dst=${s}, size=${a}`),o.memcpy(i,s);else{nt("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${i}, gpuDataId=${s}, size=${a}`);let l=r.HEAPU8.subarray(i>>>0,(i>>>0)+a);o.upload(s,l)}},async(i,s,a)=>{nt("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${i}, dataOffset=${s}, size=${a}`),await o.download(i,()=>r.HEAPU8.subarray(s>>>0,(s>>>0)+a))},(i,s,a)=>o.createKernel(i,s,a,r.UTF8ToString(r._JsepGetNodeName(s))),i=>o.releaseKernel(i),(i,s,a,u)=>{nt("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${a}, kernel=${i}, contextDataOffset=${s}`);let l=new il(r,o,s);return o.computeKernel(i,l,u)},()=>o.captureBegin(),()=>o.captureEnd(),()=>o.replay())}});var Q_,i0,a0,Rn,eT,al,s0,u0,o0,l0,d0,c0,f0=R(()=>{"use strict";Rm();Nm();Ae();io();Oa();Bu();Q_=(r,e)=>{ct()._OrtInit(r,e)!==0&&rt("Can't initialize onnxruntime.")},i0=async r=>{Q_(r.wasm.numThreads,Zo(r.logLevel))},a0=async(r,e)=>{if(e==="webgpu"||e==="webnn"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let n=await navigator.gpu.requestAdapter();if(!n)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.');if(!r.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");let t=(n0(),Hr(r0)).init;await t(ct(),r,n)}},Rn=new Map,eT=r=>{let e=ct(),n=e.stackSave();try{let t=e.stackAlloc(8);return e._OrtGetInputOutputCount(r,t,t+4)!==0&&rt("Can't get session input/output count."),[e.HEAP32[t/4],e.HEAP32[t/4+1]]}finally{e.stackRestore(n)}},al=r=>{let e=ct(),n=e._malloc(r.byteLength);if(n===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${r.byteLength}.`);return e.HEAPU8.set(r,n),[n,r.byteLength]},s0=async(r,e)=>{let n,t,o=ct();Array.isArray(r)?[n,t]=r:r.buffer===o.HEAPU8.buffer?[n,t]=[r.byteOffset,r.byteLength]:[n,t]=al(r);let i=0,s=0,a=0,u=[],l=[],d=[];try{if([s,u]=zm(e),e?.externalData&&o.mountExternalData){let _=[];for(let O of e.externalData){let P=typeof O=="string"?O:O.path;_.push(Jo(typeof O=="string"?O:O.data).then(N=>{o.mountExternalData(P,N)}))}await Promise.all(_)}i=await o._OrtCreateSession(n,t,s),i===0&&rt("Can't create a session.");let[p,m]=eT(i),y=!!e?.enableGraphCapture,b=[],w=[],A=[];for(let _=0;_<p;_++){let O=o._OrtGetInputName(i,_);O===0&&rt("Can't get an input name."),l.push(O),b.push(o.UTF8ToString(O))}for(let _=0;_<m;_++){let O=o._OrtGetOutputName(i,_);O===0&&rt("Can't get an output name."),d.push(O);let P=o.UTF8ToString(O);w.push(P);{if(y&&e?.preferredOutputLocation===void 0){A.push("gpu-buffer");continue}let N=typeof e?.preferredOutputLocation=="string"?e.preferredOutputLocation:e?.preferredOutputLocation?.[P]??"cpu";if(N!=="cpu"&&N!=="cpu-pinned"&&N!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${N}.`);if(y&&N!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${N}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);A.push(N)}}let $=null;return A.some(_=>_==="gpu-buffer")&&(a=o._OrtCreateBinding(i),a===0&&rt("Can't create IO binding."),$={handle:a,outputPreferredLocations:A,outputPreferredLocationsEncoded:A.map(_=>Du(_))}),Rn.set(i,[i,l,d,$,y,!1]),[i,b,w]}catch(p){throw l.forEach(m=>o._OrtFree(m)),d.forEach(m=>o._OrtFree(m)),a!==0&&o._OrtReleaseBinding(a),i!==0&&o._OrtReleaseSession(i),p}finally{o._free(n),s!==0&&o._OrtReleaseSessionOptions(s),u.forEach(p=>o._free(p)),o.unmountExternalData?.()}},u0=r=>{let e=ct(),n=Rn.get(r);if(!n)throw new Error(`cannot release session. invalid session id: ${r}`);let[t,o,i,s,a]=n;s&&(a&&e._OrtClearBoundOutputs(s.handle),e._OrtReleaseBinding(s.handle)),e.jsepOnReleaseSession?.(r),o.forEach(u=>e._OrtFree(u)),i.forEach(u=>e._OrtFree(u)),e._OrtReleaseSession(t),Rn.delete(r)},o0=(r,e,n,t,o,i=!1)=>{if(!r){e.push(0);return}let s=ct(),a=r[0],u=r[1],l=r[3],d,p;if(a==="string"&&l==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(i&&l!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${o} when enableGraphCapture is true.`);if(l==="gpu-buffer"){let b=r[2].gpuBuffer,w=Xo(ku(a));p=u.reduce((A,$)=>A*$,1)*w,d=s.jsepRegisterBuffer(t,o,b,p)}else{let b=r[2];if(Array.isArray(b)){p=4*b.length,d=s._malloc(p),n.push(d);let w=d/4;for(let A=0;A<b.length;A++){if(typeof b[A]!="string")throw new TypeError(`tensor data at index ${A} is not a string`);s.HEAPU32[w++]=dt(b[A],n)}}else p=b.byteLength,d=s._malloc(p),n.push(d),s.HEAPU8.set(new Uint8Array(b.buffer,b.byteOffset,p),d)}let m=s.stackSave(),y=s.stackAlloc(4*u.length);try{let b=y/4;u.forEach(A=>s.HEAP32[b++]=A);let w=s._OrtCreateTensor(ku(a),d,p,y,u.length,Du(l));w===0&&rt(`Can't create tensor for input/output. session=${t}, index=${o}.`),e.push(w)}finally{s.stackRestore(m)}},l0=async(r,e,n,t,o,i)=>{let s=ct(),a=Rn.get(r);if(!a)throw new Error(`cannot run inference. invalid session id: ${r}`);let u=a[0],l=a[1],d=a[2],p=a[3],m=a[4],y=a[5],b=e.length,w=t.length,A=0,$=[],_=[],O=[],P=[],N=s.stackSave(),F=s.stackAlloc(b*4),G=s.stackAlloc(b*4),J=s.stackAlloc(w*4),le=s.stackAlloc(w*4);try{[A,$]=Bm(i);for(let xe=0;xe<b;xe++)o0(n[xe],_,P,r,e[xe],m);for(let xe=0;xe<w;xe++)o0(o[xe],O,P,r,b+t[xe],m);let z=F/4,q=G/4,tt=J/4,ot=le/4;for(let xe=0;xe<b;xe++)s.HEAPU32[z++]=_[xe],s.HEAPU32[q++]=l[e[xe]];for(let xe=0;xe<w;xe++)s.HEAPU32[tt++]=O[xe],s.HEAPU32[ot++]=d[t[xe]];if(p&&!y){let{handle:xe,outputPreferredLocations:He,outputPreferredLocationsEncoded:Ne}=p;if(l.length!==b)throw new Error(`input count from feeds (${b}) is expected to be always equal to model's input count (${l.length}).`);for(let pe=0;pe<b;pe++){let Re=e[pe];await s._OrtBindInput(xe,l[Re],_[pe])!==0&&rt(`Can't bind input[${pe}] for session=${r}.`)}for(let pe=0;pe<w;pe++){let Re=t[pe];o[pe]?.[3]?s._OrtBindOutput(xe,d[Re],O[pe],0)!==0&&rt(`Can't bind pre-allocated output[${pe}] for session=${r}.`):s._OrtBindOutput(xe,d[Re],0,Ne[Re])!==0&&rt(`Can't bind output[${pe}] to ${He[pe]} for session=${r}.`)}Rn.set(r,[u,l,d,p,m,!0])}s.jsepOnRunStart?.(u);let Be;p?Be=await s._OrtRunWithBinding(u,p.handle,w,J,A):Be=await s._OrtRun(u,G,F,b,le,w,J,A),Be!==0&&rt("failed to call OrtRun().");let Pe=[];for(let xe=0;xe<w;xe++){let He=s.HEAPU32[J/4+xe];if(He===O[xe]){Pe.push(o[xe]);continue}let Ne=s.stackSave(),pe=s.stackAlloc(4*4),Re=!1,qe,Ze=0;try{s._OrtGetTensorData(He,pe,pe+4,pe+8,pe+12)!==0&&rt(`Can't access output tensor data on index ${xe}.`);let X=pe/4,be=s.HEAPU32[X++];Ze=s.HEAPU32[X++];let Oe=s.HEAPU32[X++],pr=s.HEAPU32[X++],At=[];for(let wt=0;wt<pr;wt++)At.push(s.HEAPU32[Oe/4+wt]);s._OrtFree(Oe);let mt=At.reduce((wt,gt)=>wt*gt,1);qe=ln(be);let Xr=p?.outputPreferredLocations[t[xe]];if(qe==="string"){if(Xr==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let wt=[],gt=Ze/4;for(let Vr=0;Vr<mt;Vr++){let hr=s.HEAPU32[gt++],Zr=Vr===mt-1?void 0:s.HEAPU32[gt]-hr;wt.push(s.UTF8ToString(hr,Zr))}Pe.push([qe,At,wt,"cpu"])}else if(Xr==="gpu-buffer"&&mt>0){let wt=s.jsepGetBuffer(Ze),gt=Xo(be);if(gt===void 0||!Ca(qe))throw new Error(`Unsupported data type: ${qe}`);Re=!0,Pe.push([qe,At,{gpuBuffer:wt,download:s.jsepCreateDownloader(wt,mt*gt,qe),dispose:()=>{s._OrtReleaseTensor(He)}},"gpu-buffer"])}else{let wt=Ea(qe),gt=new wt(mt);new Uint8Array(gt.buffer,gt.byteOffset,gt.byteLength).set(s.HEAPU8.subarray(Ze,Ze+gt.byteLength)),Pe.push([qe,At,gt,"cpu"])}}finally{s.stackRestore(Ne),qe==="string"&&Ze&&s._free(Ze),Re||s._OrtReleaseTensor(He)}}return p&&!m&&(s._OrtClearBoundOutputs(p.handle),Rn.set(r,[u,l,d,p,m,!1])),Pe}finally{s.stackRestore(N),_.forEach(z=>s._OrtReleaseTensor(z)),O.forEach(z=>s._OrtReleaseTensor(z)),P.forEach(z=>s._free(z)),A!==0&&s._OrtReleaseRunOptions(A),$.forEach(z=>s._free(z))}},d0=r=>{let e=ct(),n=Rn.get(r);if(!n)throw new Error("invalid session id");let t=n[0],o=e._OrtEndProfiling(t);o===0&&rt("Can't get an profile file name."),e._OrtFree(o)},c0=r=>{let e=[];for(let n of r){let t=n[2];!Array.isArray(t)&&"buffer"in t&&e.push(t.buffer)}return e}});var p0=it((WN,rT)=>{rT.exports='/*!\n * ONNX Runtime Web v1.18.0\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n"use strict";(()=>{var no=Object.defineProperty;var Dl=Object.getOwnPropertyDescriptor;var Bl=Object.getOwnPropertyNames;var Ml=Object.prototype.hasOwnProperty;var J=(e,t)=>()=>(e&&(t=e(e=0)),t);var Ur=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),bn=(e,t)=>{for(var r in t)no(e,r,{get:t[r],enumerable:!0})},zl=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of Bl(t))!Ml.call(e,i)&&i!==r&&no(e,i,{get:()=>t[i],enumerable:!(o=Dl(t,i))||o.enumerable});return e};var pr=e=>zl(no({},"__esModule",{value:!0}),e);var oo={};bn(oo,{createReadStream:()=>wi,readFile:()=>Ul,readFileSync:()=>Vl});var Ul,Vl,wi,io=J(()=>{Ul=void 0,Vl=void 0,wi=void 0});var ao={};bn(ao,{join:()=>Wl});var Wl,so=J(()=>{Wl=void 0});var _i=Ur(($i,uo)=>{"use strict";var vi=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){var r=t,o,i;r.ready=new Promise((s,c)=>{o=s,i=c}),r.mountExternalData=(s,c)=>{(r.gb||(r.gb=new Map)).set(s,c)},r.unmountExternalData=()=>{delete r.gb},r.jsepInit=(s,c,g,$,I,B,H,q,X,Y,ce)=>{r.Ib=s,r.vb=c,r.zb=g,r.ob=$,r.yb=I,r.Sa=B,r.Ab=H,r.Cb=q,r.wb=X,r.xb=Y,r.Bb=ce,c=(ee,he,R)=>(...ie)=>{let ve=tt,Xe=he?.();ie=ee(...ie);let lt=he?.();return Xe!==lt&&(ee=lt,R(Xe),he=R=null),tt!=ve?Qr():ie},g=ee=>async(...he)=>{try{if(r.fb)throw Error("Session already started");let R=r.fb={Db:he[0],errors:[]},ie=await ee(...he);if(r.fb!==R)throw Error("Session mismatch");s.flush();let ve=R.errors;if(0<ve.length){let Xe=await Promise.all(ve);if(Xe=Xe.filter(lt=>lt),0<Xe.length)throw Error(Xe.join(`\n`))}return ie}finally{r.fb=null}},r._OrtCreateSession=c(r._OrtCreateSession,()=>r._OrtCreateSession,ee=>r._OrtCreateSession=ee),r._OrtRun=g(c(r._OrtRun,()=>r._OrtRun,ee=>r._OrtRun=ee)),r._OrtRunWithBinding=g(c(r._OrtRunWithBinding,()=>r._OrtRunWithBinding,ee=>r._OrtRunWithBinding=ee)),r._OrtBindInput=c(r._OrtBindInput,()=>r._OrtBindInput,ee=>r._OrtBindInput=ee),r.jsepRegisterBuffer=(ee,he,R,ie)=>s.registerBuffer(ee,he,R,ie),r.jsepGetBuffer=ee=>s.getBuffer(ee),r.jsepCreateDownloader=(ee,he,R)=>s.createDownloader(ee,he,R),r.jsepOnReleaseSession=ee=>{s.onReleaseSession(ee)},r.jsepOnRunStart=ee=>s.onRunStart(ee)};var u=Object.assign({},r),a="./this.program",p=(s,c)=>{throw c},m=typeof window=="object",h=typeof importScripts=="function",d=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",y="",v,S,w;if(d){var x=(io(),pr(oo)),E=(so(),pr(ao));y=h?E.dirname(y)+"/":__dirname+"/",v=(s,c)=>(s=ae(s)?new URL(s):E.normalize(s),x.readFileSync(s,c?void 0:"utf8")),w=s=>(s=v(s,!0),s.buffer||(s=new Uint8Array(s)),s),S=(s,c,g,$=!0)=>{s=ae(s)?new URL(s):E.normalize(s),x.readFile(s,$?void 0:"utf8",(I,B)=>{I?g(I):c($?B.buffer:B)})},!r.thisProgram&&1<process.argv.length&&(a=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),p=(s,c)=>{throw process.exitCode=s,c},r.inspect=()=>"[Emscripten Module object]"}else(m||h)&&(h?y=self.location.href:typeof document<"u"&&document.currentScript&&(y=document.currentScript.src),e&&(y=e),y.indexOf("blob:")!==0?y=y.substr(0,y.replace(/[?#].*/,"").lastIndexOf("/")+1):y="",v=s=>{var c=new XMLHttpRequest;return c.open("GET",s,!1),c.send(null),c.responseText},h&&(w=s=>{var c=new XMLHttpRequest;return c.open("GET",s,!1),c.responseType="arraybuffer",c.send(null),new Uint8Array(c.response)}),S=(s,c,g)=>{var $=new XMLHttpRequest;$.open("GET",s,!0),$.responseType="arraybuffer",$.onload=()=>{$.status==200||$.status==0&&$.response?c($.response):g()},$.onerror=g,$.send(null)});var C=console.log.bind(console),_=console.error.bind(console);Object.assign(r,u),u=null,typeof WebAssembly!="object"&&Ke("no native wasm support detected");var T,O=!1,z,M,N,j,ue,k,te,Be,Ue,$e,we;function de(){var s=T.buffer;r.HEAP8=M=new Int8Array(s),r.HEAP16=j=new Int16Array(s),r.HEAPU8=N=new Uint8Array(s),r.HEAPU16=ue=new Uint16Array(s),r.HEAP32=k=new Int32Array(s),r.HEAPU32=te=new Uint32Array(s),r.HEAPF32=Be=new Float32Array(s),r.HEAPF64=we=new Float64Array(s),r.HEAP64=Ue=new BigInt64Array(s),r.HEAPU64=$e=new BigUint64Array(s)}var Pe=[],xe=[],oe=[],_e=0,Oe=null,ke=null;function Ke(s){throw s="Aborted("+s+")",_(s),O=!0,z=1,s=new WebAssembly.RuntimeError(s+". Build with -sASSERTIONS for more info."),i(s),s}var F=s=>s.startsWith("data:application/octet-stream;base64,"),ae=s=>s.startsWith("file://"),ge;if(ge="ort-wasm-simd.wasm",!F(ge)){var ht=ge;ge=r.locateFile?r.locateFile(ht,y):y+ht}function Ye(s){if(w)return w(s);throw"both async and sync fetching of the wasm failed"}function Ne(s){if(m||h){if(typeof fetch=="function"&&!ae(s))return fetch(s,{credentials:"same-origin"}).then(c=>{if(!c.ok)throw"failed to load wasm binary file at \'"+s+"\'";return c.arrayBuffer()}).catch(()=>Ye(s));if(S)return new Promise((c,g)=>{S(s,$=>c(new Uint8Array($)),g)})}return Promise.resolve().then(()=>Ye(s))}function Mt(s,c,g){return Ne(s).then($=>WebAssembly.instantiate($,c)).then($=>$).then(g,$=>{_(`failed to asynchronously prepare wasm: ${$}`),Ke($)})}function Fe(s,c){var g=ge;return typeof WebAssembly.instantiateStreaming!="function"||F(g)||ae(g)||d||typeof fetch!="function"?Mt(g,s,c):fetch(g,{credentials:"same-origin"}).then($=>WebAssembly.instantiateStreaming($,s).then(c,function(I){return _(`wasm streaming compile failed: ${I}`),_("falling back to ArrayBuffer instantiation"),Mt(g,s,c)}))}var He={945680:(s,c,g,$)=>{if(typeof r>"u"||!r.gb)return 1;if(s=qe(s>>>0),s.startsWith("./")&&(s=s.substring(2)),s=r.gb.get(s),!s)return 2;if(c>>>=0,g>>>=0,c+g>s.byteLength)return 3;try{return N.set(s.subarray(c,c+g),$>>>0>>>0),0}catch{return 4}},946181:()=>{r.wb()},946212:()=>{r.xb()},946241:()=>{r.Bb()},946266:s=>r.vb(s),946299:s=>r.zb(s),946331:(s,c,g)=>{r.ob(s,c,g,!0)},946370:(s,c,g)=>{r.ob(s,c,g)},946403:s=>{r.Sa("Abs",s,void 0)},946454:s=>{r.Sa("Neg",s,void 0)},946505:s=>{r.Sa("Floor",s,void 0)},946558:s=>{r.Sa("Ceil",s,void 0)},946610:s=>{r.Sa("Reciprocal",s,void 0)},946668:s=>{r.Sa("Sqrt",s,void 0)},946720:s=>{r.Sa("Exp",s,void 0)},946771:s=>{r.Sa("Erf",s,void 0)},946822:s=>{r.Sa("Sigmoid",s,void 0)},946877:(s,c,g)=>{r.Sa("HardSigmoid",s,{alpha:c,beta:g})},946956:s=>{r.Sa("Log",s,void 0)},947007:s=>{r.Sa("Sin",s,void 0)},947058:s=>{r.Sa("Cos",s,void 0)},947109:s=>{r.Sa("Tan",s,void 0)},947160:s=>{r.Sa("Asin",s,void 0)},947212:s=>{r.Sa("Acos",s,void 0)},947264:s=>{r.Sa("Atan",s,void 0)},947316:s=>{r.Sa("Sinh",s,void 0)},947368:s=>{r.Sa("Cosh",s,void 0)},947420:s=>{r.Sa("Asinh",s,void 0)},947473:s=>{r.Sa("Acosh",s,void 0)},947526:s=>{r.Sa("Atanh",s,void 0)},947579:s=>{r.Sa("Tanh",s,void 0)},947631:s=>{r.Sa("Not",s,void 0)},947682:(s,c,g)=>{r.Sa("Clip",s,{min:c,max:g})},947751:s=>{r.Sa("Clip",s,void 0)},947803:(s,c)=>{r.Sa("Elu",s,{alpha:c})},947861:s=>{r.Sa("Relu",s,void 0)},947913:(s,c)=>{r.Sa("LeakyRelu",s,{alpha:c})},947977:(s,c)=>{r.Sa("ThresholdedRelu",s,{alpha:c})},948047:(s,c)=>{r.Sa("Cast",s,{to:c})},948105:s=>{r.Sa("Add",s,void 0)},948156:s=>{r.Sa("Sub",s,void 0)},948207:s=>{r.Sa("Mul",s,void 0)},948258:s=>{r.Sa("Div",s,void 0)},948309:s=>{r.Sa("Pow",s,void 0)},948360:s=>{r.Sa("Equal",s,void 0)},948413:s=>{r.Sa("Greater",s,void 0)},948468:s=>{r.Sa("GreaterOrEqual",s,void 0)},948530:s=>{r.Sa("Less",s,void 0)},948582:s=>{r.Sa("LessOrEqual",s,void 0)},948641:(s,c,g,$,I)=>{r.Sa("ReduceMean",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(k.subarray($>>>0,I>>>0)):[]})},948800:(s,c,g,$,I)=>{r.Sa("ReduceMax",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(k.subarray($>>>0,I>>>0)):[]})},948958:(s,c,g,$,I)=>{r.Sa("ReduceMin",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(k.subarray($>>>0,I>>>0)):[]})},949116:(s,c,g,$,I)=>{r.Sa("ReduceProd",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(k.subarray($>>>0,I>>>0)):[]})},949275:(s,c,g,$,I)=>{r.Sa("ReduceSum",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(k.subarray($>>>0,I>>>0)):[]})},949433:(s,c,g,$,I)=>{r.Sa("ReduceL1",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(k.subarray($>>>0,I>>>0)):[]})},949590:(s,c,g,$,I)=>{r.Sa("ReduceL2",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(k.subarray($>>>0,I>>>0)):[]})},949747:(s,c,g,$,I)=>{r.Sa("ReduceLogSum",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(k.subarray($>>>0,I>>>0)):[]})},949908:(s,c,g,$,I)=>{r.Sa("ReduceSumSquare",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(k.subarray($>>>0,I>>>0)):[]})},950072:(s,c,g,$,I)=>{r.Sa("ReduceLogSumExp",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(k.subarray($>>>0,I>>>0)):[]})},950236:s=>{r.Sa("Where",s,void 0)},950289:(s,c,g)=>{r.Sa("Transpose",s,{perm:c?Array.from(k.subarray(c>>>0,g>>>0)):[]})},950397:(s,c,g,$,I,B,H,q,X,Y,ce,ee,he,R,ie)=>{r.Sa("ConvTranspose",s,{format:X?"NHWC":"NCHW",autoPad:c,dilations:[g],group:$,kernel_shape:[I],pads:[B,H],strides:[q],wIsConst:()=>!!M[Y>>>0],outputPadding:ce?Array.from(k.subarray(ce>>>0,ee>>>0)):[],outputShape:he?Array.from(k.subarray(he>>>0,R>>>0)):[],activation:qe(ie)})},950799:(s,c,g,$,I,B,H,q,X,Y,ce,ee,he,R)=>{r.Sa("ConvTranspose",s,{format:q?"NHWC":"NCHW",autoPad:c,dilations:Array.from(k.subarray(g>>>0,(g>>>0)+2>>>0)),group:$,kernelShape:Array.from(k.subarray(I>>>0,(I>>>0)+2>>>0)),pads:Array.from(k.subarray(B>>>0,(B>>>0)+4>>>0)),strides:Array.from(k.subarray(H>>>0,(H>>>0)+2>>>0)),wIsConst:()=>!!M[X>>>0],outputPadding:Y?Array.from(k.subarray(Y>>>0,ce>>>0)):[],outputShape:ee?Array.from(k.subarray(ee>>>0,he>>>0)):[],activation:qe(R)})},951364:(s,c,g,$,I,B,H,q,X,Y,ce,ee,he,R,ie)=>{r.Sa("ConvTranspose",s,{format:X?"NHWC":"NCHW",autoPad:c,dilations:[g],group:$,kernel_shape:[I],pads:[B,H],strides:[q],wIsConst:()=>!!M[Y>>>0],outputPadding:ce?Array.from(k.subarray(ce>>>0,ee>>>0)):[],outputShape:he?Array.from(k.subarray(he>>>0,R>>>0)):[],activation:qe(ie)})},951766:(s,c,g,$,I,B,H,q,X,Y,ce,ee,he,R)=>{r.Sa("ConvTranspose",s,{format:q?"NHWC":"NCHW",autoPad:c,dilations:Array.from(k.subarray(g>>>0,(g>>>0)+2>>>0)),group:$,kernelShape:Array.from(k.subarray(I>>>0,(I>>>0)+2>>>0)),pads:Array.from(k.subarray(B>>>0,(B>>>0)+4>>>0)),strides:Array.from(k.subarray(H>>>0,(H>>>0)+2>>>0)),wIsConst:()=>!!M[X>>>0],outputPadding:Y?Array.from(k.subarray(Y>>>0,ce>>>0)):[],outputShape:ee?Array.from(k.subarray(ee>>>0,he>>>0)):[],activation:qe(R)})},952331:(s,c)=>{r.Sa("GlobalAveragePool",s,{format:c?"NHWC":"NCHW"})},952422:(s,c,g,$,I,B,H,q,X,Y,ce,ee,he,R,ie,ve)=>{r.Sa("AveragePool",s,{format:ve?"NHWC":"NCHW",auto_pad:c,ceil_mode:g,count_include_pad:$,storage_order:I,dilations:[B,H],kernel_shape:[q,X],pads:[Y,ce,ee,he],strides:[R,ie]})},952706:(s,c)=>{r.Sa("GlobalAveragePool",s,{format:c?"NHWC":"NCHW"})},952797:(s,c,g,$,I,B,H,q,X,Y,ce,ee,he,R,ie,ve)=>{r.Sa("AveragePool",s,{format:ve?"NHWC":"NCHW",auto_pad:c,ceil_mode:g,count_include_pad:$,storage_order:I,dilations:[B,H],kernel_shape:[q,X],pads:[Y,ce,ee,he],strides:[R,ie]})},953081:(s,c)=>{r.Sa("GlobalMaxPool",s,{format:c?"NHWC":"NCHW"})},953168:(s,c,g,$,I,B,H,q,X,Y,ce,ee,he,R,ie,ve)=>{r.Sa("MaxPool",s,{format:ve?"NHWC":"NCHW",auto_pad:c,ceil_mode:g,count_include_pad:$,storage_order:I,dilations:[B,H],kernel_shape:[q,X],pads:[Y,ce,ee,he],strides:[R,ie]})},953448:(s,c)=>{r.Sa("GlobalMaxPool",s,{format:c?"NHWC":"NCHW"})},953535:(s,c,g,$,I,B,H,q,X,Y,ce,ee,he,R,ie,ve)=>{r.Sa("MaxPool",s,{format:ve?"NHWC":"NCHW",auto_pad:c,ceil_mode:g,count_include_pad:$,storage_order:I,dilations:[B,H],kernel_shape:[q,X],pads:[Y,ce,ee,he],strides:[R,ie]})},953815:(s,c,g,$,I)=>{r.Sa("Gemm",s,{alpha:c,beta:g,transA:$,transB:I})},953919:s=>{r.Sa("MatMul",s,void 0)},953973:(s,c,g,$)=>{r.Sa("ArgMax",s,{keepDims:!!c,selectLastIndex:!!g,axis:$})},954081:(s,c,g,$)=>{r.Sa("ArgMin",s,{keepDims:!!c,selectLastIndex:!!g,axis:$})},954189:(s,c)=>{r.Sa("Softmax",s,{axis:c})},954252:(s,c)=>{r.Sa("Concat",s,{axis:c})},954312:(s,c,g,$,I)=>{r.Sa("Split",s,{axis:c,numOutputs:g,splitSizes:$?Array.from(k.subarray($>>>0,I>>>0)):[]})},954452:s=>{r.Sa("Expand",s,void 0)},954506:(s,c)=>{r.Sa("Gather",s,{axis:Number(c)})},954577:(s,c)=>{r.Sa("GatherElements",s,{axis:Number(c)})},954656:(s,c,g,$,I,B,H,q,X,Y,ce)=>{r.Sa("Resize",s,{antialias:c,axes:g?Array.from(k.subarray(g>>>0,$>>>0)):[],coordinateTransformMode:qe(I),cubicCoeffA:B,excludeOutside:H,extrapolationValue:q,keepAspectRatioPolicy:qe(X),mode:qe(Y),nearestMode:qe(ce)})},955002:(s,c,g,$,I,B,H)=>{r.Sa("Slice",s,{starts:c?Array.from(k.subarray(c>>>0,g>>>0)):[],ends:$?Array.from(k.subarray($>>>0,I>>>0)):[],axes:B?Array.from(k.subarray(B>>>0,H>>>0)):[]})},955218:s=>{r.Sa("Tile",s,void 0)},955270:(s,c,g)=>{r.Sa("LayerNormalization",s,{axis:Number(c),epsilon:Number(g)})},955377:(s,c,g)=>{r.Sa("InstanceNormalization",s,{epsilon:c,format:g?"NHWC":"NCHW"})},955491:(s,c,g)=>{r.Sa("InstanceNormalization",s,{epsilon:c,format:g?"NHWC":"NCHW"})},955605:s=>{r.Sa("Range",s,void 0)},955658:(s,c)=>{r.Sa("Einsum",s,{equation:qe(c)})},955739:(s,c,g,$,I)=>{r.Sa("Pad",s,{mode:c,value:g,pads:$?Array.from(k.subarray($>>>0,I>>>0)):[]})},955866:(s,c,g,$,I,B)=>{r.Sa("BatchNormalization",s,{epsilon:c,momentum:g,spatial:!!I,trainingMode:!!$,format:B?"NHWC":"NCHW"})},956035:(s,c,g,$,I,B)=>{r.Sa("BatchNormalization",s,{epsilon:c,momentum:g,spatial:!!I,trainingMode:!!$,format:B?"NHWC":"NCHW"})},956204:(s,c,g)=>{r.Sa("CumSum",s,{exclusive:Number(c),reverse:Number(g)})},956301:(s,c,g,$,I,B,H,q,X)=>{r.Sa("Attention",s,{numHeads:c,isUnidirectional:g,maskFilterValue:$,scale:I,doRotary:B,qkvHiddenSizes:H?Array.from(k.subarray(Number(q)>>>0,Number(q)+H>>>0)):[],pastPresentShareBuffer:!!X})},956573:s=>{r.Sa("Gelu",s,void 0)},956625:(s,c,g,$,I,B)=>{r.Sa("MultiHeadAttention",s,{numHeads:c,isUnidirectional:g,maskFilterValue:$,scale:I,doRotary:B})},956784:s=>{r.Sa("BiasAdd",s,void 0)},956839:s=>{r.Sa("BiasSplitGelu",s,void 0)},956900:(s,c)=>{r.Sa("SkipLayerNormalization",s,{epsilon:c})},956981:(s,c,g,$,I,B,H,q,X,Y,ce,ee,he)=>{r.Sa("Conv",s,{format:X?"NHWC":"NCHW",auto_pad:c,dilations:[g],group:$,kernel_shape:[I],pads:B?Array.from(k.subarray(B>>>0,H>>>0)):[],strides:[q],w_is_const:()=>!!M[Y>>>0],activation:qe(ce),activation_params:ee?Array.from(Be.subarray(ee>>>0,he>>>0)):[]})},957351:(s,c,g,$,I,B,H,q,X,Y,ce,ee,he,R,ie,ve)=>{r.Sa("Conv",s,{format:ee?"NHWC":"NCHW",auto_pad:c,dilations:[g,$],group:I,kernel_shape:[B,H],pads:q?Array.from(k.subarray(q>>>0,X>>>0)):[],strides:[Y,ce],w_is_const:()=>!!M[he>>>0],activation:qe(R),activation_params:ie?Array.from(Be.subarray(ie>>>0,ve>>>0)):[]})},957742:s=>{r.Ab(s)},957776:(s,c)=>r.Cb(s,c,r.fb.Db,r.fb.errors)};function Rt(s){this.name="ExitStatus",this.message=`Program terminated with exit(${s})`,this.status=s}function gt(s){this.cb=s-24,this.rb=function(c){te[this.cb+4>>>2>>>0]=c},this.qb=function(c){te[this.cb+8>>>2>>>0]=c},this.kb=function(c,g){this.jb(),this.rb(c),this.qb(g)},this.jb=function(){te[this.cb+16>>>2>>>0]=0}}var zt=0,Lt=0,yr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Ut=(s,c,g)=>{c>>>=0;var $=c+g;for(g=c;s[g]&&!(g>=$);)++g;if(16<g-c&&s.buffer&&yr)return yr.decode(s.subarray(c,g));for($="";c<g;){var I=s[c++];if(I&128){var B=s[c++]&63;if((I&224)==192)$+=String.fromCharCode((I&31)<<6|B);else{var H=s[c++]&63;I=(I&240)==224?(I&15)<<12|B<<6|H:(I&7)<<18|B<<12|H<<6|s[c++]&63,65536>I?$+=String.fromCharCode(I):(I-=65536,$+=String.fromCharCode(55296|I>>10,56320|I&1023))}}else $+=String.fromCharCode(I)}return $},qe=(s,c)=>(s>>>=0)?Ut(N,s,c):"",Dt=s=>{for(var c=0,g=0;g<s.length;++g){var $=s.charCodeAt(g);127>=$?c++:2047>=$?c+=2:55296<=$&&57343>=$?(c+=4,++g):c+=3}return c},_t=(s,c,g,$)=>{if(g>>>=0,!(0<$))return 0;var I=g;$=g+$-1;for(var B=0;B<s.length;++B){var H=s.charCodeAt(B);if(55296<=H&&57343>=H){var q=s.charCodeAt(++B);H=65536+((H&1023)<<10)|q&1023}if(127>=H){if(g>=$)break;c[g++>>>0]=H}else{if(2047>=H){if(g+1>=$)break;c[g++>>>0]=192|H>>6}else{if(65535>=H){if(g+2>=$)break;c[g++>>>0]=224|H>>12}else{if(g+3>=$)break;c[g++>>>0]=240|H>>18,c[g++>>>0]=128|H>>12&63}c[g++>>>0]=128|H>>6&63}c[g++>>>0]=128|H&63}}return c[g>>>0]=0,g-I},br=s=>{if(s===null)return"null";var c=typeof s;return c==="object"||c==="array"||c==="function"?s.toString():""+s},qr,at=s=>{for(var c="";N[s>>>0];)c+=qr[N[s++>>>0]];return c},wr={},Ft={},vr={},mt;function jr(s,c,g={}){var $=c.name;if(!s)throw new mt(`type "${$}" must have a positive integer typeid pointer`);if(Ft.hasOwnProperty(s)){if(g.tb)return;throw new mt(`Cannot register type \'${$}\' twice`)}Ft[s]=c,delete vr[s],wr.hasOwnProperty(s)&&(c=wr[s],delete wr[s],c.forEach(I=>I()))}function Ze(s,c,g={}){if(!("argPackAdvance"in c))throw new TypeError("registerType registeredInstance requires argPackAdvance");jr(s,c,g)}var $r=(s,c,g)=>{switch(c){case 1:return g?$=>M[$>>>0>>>0]:$=>N[$>>>0>>>0];case 2:return g?$=>j[$>>>1>>>0]:$=>ue[$>>>1>>>0];case 4:return g?$=>k[$>>>2>>>0]:$=>te[$>>>2>>>0];case 8:return g?$=>Ue[$>>>3]:$=>$e[$>>>3];default:throw new TypeError(`invalid integer width (${c}): ${s}`)}};function _r(){this.$a=[void 0],this.nb=[]}var De=new _r;function Sr(s){s>>>=0,s>=De.cb&&--De.get(s).pb===0&&De.jb(s)}var Se=s=>{if(!s)throw new mt("Cannot use deleted val. handle = "+s);return De.get(s).value},st=s=>{switch(s){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return De.kb({pb:1,value:s})}};function nr(s){return this.fromWireType(k[s>>>2>>>0])}var xr=(s,c)=>{switch(c){case 4:return function(g){return this.fromWireType(Be[g>>>2>>>0])};case 8:return function(g){return this.fromWireType(we[g>>>3>>>0])};default:throw new TypeError(`invalid float width (${c}): ${s}`)}};function Fn(s){return this.fromWireType(te[s>>>2>>>0])}var Cr=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,qn=(s,c)=>{for(var g=s>>1,$=g+c/2;!(g>=$)&&ue[g>>>0];)++g;if(g<<=1,32<g-s&&Cr)return Cr.decode(N.subarray(s>>>0,g>>>0));for(g="",$=0;!($>=c/2);++$){var I=j[s+2*$>>>1>>>0];if(I==0)break;g+=String.fromCharCode(I)}return g},me=(s,c,g)=>{if(g??=2147483647,2>g)return 0;g-=2;var $=c;g=g<2*s.length?g/2:s.length;for(var I=0;I<g;++I)j[c>>>1>>>0]=s.charCodeAt(I),c+=2;return j[c>>>1>>>0]=0,c-$},or=s=>2*s.length,Kr=(s,c)=>{for(var g=0,$="";!(g>=c/4);){var I=k[s+4*g>>>2>>>0];if(I==0)break;++g,65536<=I?(I-=65536,$+=String.fromCharCode(55296|I>>10,56320|I&1023)):$+=String.fromCharCode(I)}return $},jn=(s,c,g)=>{if(c>>>=0,g??=2147483647,4>g)return 0;var $=c;g=$+g-4;for(var I=0;I<s.length;++I){var B=s.charCodeAt(I);if(55296<=B&&57343>=B){var H=s.charCodeAt(++I);B=65536+((B&1023)<<10)|H&1023}if(k[c>>>2>>>0]=B,c+=4,c+4>g)break}return k[c>>>2>>>0]=0,c-$},Yr=s=>{for(var c=0,g=0;g<s.length;++g){var $=s.charCodeAt(g);55296<=$&&57343>=$&&++g,c+=4}return c},Ar=(s,c)=>{var g=Ft[s];if(g===void 0)throw s=Yt(s),g=at(s),ut(s),new mt(c+" has unknown type "+g);return g},Ir=(s,c,g)=>{var $=[];return s=s.toWireType($,g),$.length&&(te[c>>>2>>>0]=st($)),s},qt=s=>{try{s()}catch(c){Ke(c)}};function Zr(){var s=le,c={};for(let[g,$]of Object.entries(s))c[g]=typeof $=="function"?function(){Vt.push(g);try{return $.apply(null,arguments)}finally{O||(Vt.pop(),tt&&yt===1&&Vt.length===0&&(yt=0,qt(pn),typeof Fibers<"u"&&Fibers.Kb()))}}:$;return c}var yt=0,tt=null,Tr=0,Vt=[],Er={},Pr={},Jr=0,ir=null,Xr=[];function Qr(){return new Promise((s,c)=>{ir={resolve:s,reject:c}})}function en(){var s=Wt(65548),c=s+12;te[s>>>2>>>0]=c,te[s+4>>>2>>>0]=c+65536,c=Vt[0];var g=Er[c];return g===void 0&&(g=Jr++,Er[c]=g,Pr[g]=c),k[s+8>>>2>>>0]=g,s}function tn(s){if(!O){if(yt===0){var c=!1,g=!1;s(($=0)=>{if(!O&&(Tr=$,c=!0,g)){yt=2,qt(()=>bt(tt)),typeof Browser<"u"&&Browser.lb.sb&&Browser.lb.resume(),$=!1;try{var I=(0,le[Pr[k[tt+8>>>2>>>0]]])()}catch(q){I=q,$=!0}var B=!1;if(!tt){var H=ir;H&&(ir=null,($?H.reject:H.resolve)(I),B=!0)}if($&&!B)throw I}}),g=!0,c||(yt=1,tt=en(),typeof Browser<"u"&&Browser.lb.sb&&Browser.lb.pause(),qt(()=>Zt(tt)))}else yt===2?(yt=0,qt(pt),ut(tt),tt=null,Xr.forEach($=>{if(!O)try{$();try{z=z=$=z,r.onExit?.($),O=!0,p($,new Rt($))}catch(I){I instanceof Rt||I=="unwind"||p(1,I)}}catch(I){I instanceof Rt||I=="unwind"||p(1,I)}})):Ke(`invalid state: ${yt}`);return Tr}}function Or(s){return tn(c=>{s().then(c)})}var jt=[],rn={},ar=s=>{var c=rn[s];return c===void 0?at(s):c},kr=()=>typeof globalThis=="object"?globalThis:Function("return this")(),ct=s=>{var c=jt.length;return jt.push(s),c},Rr=(s,c)=>{for(var g=Array(s),$=0;$<s;++$)g[$]=Ar(te[c+4*$>>>2>>>0],"parameter "+$);return g},sr=(s,c)=>Object.defineProperty(c,"name",{value:s});function Kn(s){var c=Function;if(!(c instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof c} which is not a function`);var g=sr(c.name||"unknownFunctionName",function(){});return g.prototype=c.prototype,g=new g,s=c.apply(g,s),s instanceof Object?s:g}var rt=s=>s%4===0&&(s%100!==0||s%400===0),nn=[0,31,60,91,121,152,182,213,244,274,305,335],ft=[0,31,59,90,120,151,181,212,243,273,304,334],Dr=s=>{var c=Dt(s)+1,g=Wt(c);return g&&_t(s,N,g,c),g},ur=[],nt=(s,c)=>{ur.length=0;for(var g;g=N[s++>>>0];){var $=g!=105;$&=g!=112,c+=$&&c%8?4:0,ur.push(g==112?te[c>>>2>>>0]:g==106?Ue[c>>>3]:g==105?k[c>>>2>>>0]:we[c>>>3>>>0]),c+=$?8:4}return ur},Kt={},Je=()=>{if(!ot){var s={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:a||"./this.program"},c;for(c in Kt)Kt[c]===void 0?delete s[c]:s[c]=Kt[c];var g=[];for(c in s)g.push(`${c}=${s[c]}`);ot=g}return ot},ot,on=[null,[],[]],an=[31,29,31,30,31,30,31,31,30,31,30,31],sn=[31,28,31,30,31,30,31,31,30,31,30,31];function un(s){var c=Array(Dt(s)+1);return _t(s,c,0,c.length),c}function ln(s,c,g,$){function I(R,ie,ve){for(R=typeof R=="number"?R.toString():R||"";R.length<ie;)R=ve[0]+R;return R}function B(R,ie){return I(R,ie,"0")}function H(R,ie){function ve(lt){return 0>lt?-1:0<lt?1:0}var Xe;return(Xe=ve(R.getFullYear()-ie.getFullYear()))===0&&(Xe=ve(R.getMonth()-ie.getMonth()))===0&&(Xe=ve(R.getDate()-ie.getDate())),Xe}function q(R){switch(R.getDay()){case 0:return new Date(R.getFullYear()-1,11,29);case 1:return R;case 2:return new Date(R.getFullYear(),0,3);case 3:return new Date(R.getFullYear(),0,2);case 4:return new Date(R.getFullYear(),0,1);case 5:return new Date(R.getFullYear()-1,11,31);case 6:return new Date(R.getFullYear()-1,11,30)}}function X(R){var ie=R.ab;for(R=new Date(new Date(R.bb+1900,0,1).getTime());0<ie;){var ve=R.getMonth(),Xe=(rt(R.getFullYear())?an:sn)[ve];if(ie>Xe-R.getDate())ie-=Xe-R.getDate()+1,R.setDate(1),11>ve?R.setMonth(ve+1):(R.setMonth(0),R.setFullYear(R.getFullYear()+1));else{R.setDate(R.getDate()+ie);break}}return ve=new Date(R.getFullYear()+1,0,4),ie=q(new Date(R.getFullYear(),0,4)),ve=q(ve),0>=H(ie,R)?0>=H(ve,R)?R.getFullYear()+1:R.getFullYear():R.getFullYear()-1}s>>>=0,c>>>=0,g>>>=0,$>>>=0;var Y=te[$+40>>>2>>>0];$={Gb:k[$>>>2>>>0],Fb:k[$+4>>>2>>>0],hb:k[$+8>>>2>>>0],mb:k[$+12>>>2>>>0],ib:k[$+16>>>2>>>0],bb:k[$+20>>>2>>>0],Wa:k[$+24>>>2>>>0],ab:k[$+28>>>2>>>0],Jb:k[$+32>>>2>>>0],Eb:k[$+36>>>2>>>0],Hb:Y?qe(Y):""},g=qe(g),Y={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var ce in Y)g=g.replace(new RegExp(ce,"g"),Y[ce]);var ee="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),he="January February March April May June July August September October November December".split(" ");Y={"%a":R=>ee[R.Wa].substring(0,3),"%A":R=>ee[R.Wa],"%b":R=>he[R.ib].substring(0,3),"%B":R=>he[R.ib],"%C":R=>B((R.bb+1900)/100|0,2),"%d":R=>B(R.mb,2),"%e":R=>I(R.mb,2," "),"%g":R=>X(R).toString().substring(2),"%G":R=>X(R),"%H":R=>B(R.hb,2),"%I":R=>(R=R.hb,R==0?R=12:12<R&&(R-=12),B(R,2)),"%j":R=>{for(var ie=0,ve=0;ve<=R.ib-1;ie+=(rt(R.bb+1900)?an:sn)[ve++]);return B(R.mb+ie,3)},"%m":R=>B(R.ib+1,2),"%M":R=>B(R.Fb,2),"%n":()=>`\n`,"%p":R=>0<=R.hb&&12>R.hb?"AM":"PM","%S":R=>B(R.Gb,2),"%t":()=>"	","%u":R=>R.Wa||7,"%U":R=>B(Math.floor((R.ab+7-R.Wa)/7),2),"%V":R=>{var ie=Math.floor((R.ab+7-(R.Wa+6)%7)/7);if(2>=(R.Wa+371-R.ab-2)%7&&ie++,ie)ie==53&&(ve=(R.Wa+371-R.ab)%7,ve==4||ve==3&&rt(R.bb)||(ie=1));else{ie=52;var ve=(R.Wa+7-R.ab-1)%7;(ve==4||ve==5&&rt(R.bb%400-1))&&ie++}return B(ie,2)},"%w":R=>R.Wa,"%W":R=>B(Math.floor((R.ab+7-(R.Wa+6)%7)/7),2),"%y":R=>(R.bb+1900).toString().substring(2),"%Y":R=>R.bb+1900,"%z":R=>{R=R.Eb;var ie=0<=R;return R=Math.abs(R)/60,(ie?"+":"-")+("0000"+(R/60*100+R%60)).slice(-4)},"%Z":R=>R.Hb,"%%":()=>"%"},g=g.replace(/%%/g,"\\0\\0");for(ce in Y)g.includes(ce)&&(g=g.replace(new RegExp(ce,"g"),Y[ce]($)));return g=g.replace(/\\0\\0/g,"%"),ce=un(g),ce.length>c?0:(M.set(ce,s>>>0),ce.length-1)}for(var dn=Array(256),lr=0;256>lr;++lr)dn[lr]=String.fromCharCode(lr);qr=dn,mt=r.BindingError=class extends Error{constructor(s){super(s),this.name="BindingError"}},r.InternalError=class extends Error{constructor(s){super(s),this.name="InternalError"}},Object.assign(_r.prototype,{get(s){return this.$a[s]},has(s){return this.$a[s]!==void 0},kb(s){var c=this.nb.pop()||this.$a.length;return this.$a[c]=s,c},jb(s){this.$a[s]=void 0,this.nb.push(s)}}),De.$a.push({value:void 0},{value:null},{value:!0},{value:!1}),De.cb=De.$a.length,r.count_emval_handles=()=>{for(var s=0,c=De.cb;c<De.$a.length;++c)De.$a[c]!==void 0&&++s;return s};var Yn={ia:function(s,c,g){return Or(async()=>{await r.yb(s,c,g)})},a:function(s,c,g){throw s>>>=0,new gt(s).kb(c>>>0,g>>>0),zt=s,Lt++,zt},x:function(){return 0},ba:function(){},O:function(){},Q:function(){},ca:function(){return 0},$:function(){},W:function(){},_:function(){},D:function(){},P:function(){},M:function(){},aa:function(){},N:function(){},G:function(s,c,g,$,I){c>>>=0,c=at(c);var B=c.indexOf("u")!=-1;B&&(I=(1n<<64n)-1n),Ze(s>>>0,{name:c,fromWireType:H=>H,toWireType:function(H,q){if(typeof q!="bigint"&&typeof q!="number")throw new TypeError(`Cannot convert "${br(q)}" to ${this.name}`);if(q<$||q>I)throw new TypeError(`Passing a number "${br(q)}" from JS side to C/C++ side to an argument of type "${c}", which is outside the valid range [${$}, ${I}]!`);return q},argPackAdvance:8,readValueFromPointer:$r(c,g>>>0,!B),eb:null})},ga:function(s,c,g,$){c=at(c>>>0),Ze(s>>>0,{name:c,fromWireType:function(I){return!!I},toWireType:function(I,B){return B?g:$},argPackAdvance:8,readValueFromPointer:function(I){return this.fromWireType(N[I>>>0])},eb:null})},fa:function(s,c){c=at(c>>>0),Ze(s>>>0,{name:c,fromWireType:g=>{var $=Se(g);return Sr(g),$},toWireType:(g,$)=>st($),argPackAdvance:8,readValueFromPointer:nr,eb:null})},F:function(s,c,g){c=at(c>>>0),Ze(s>>>0,{name:c,fromWireType:$=>$,toWireType:($,I)=>I,argPackAdvance:8,readValueFromPointer:xr(c,g>>>0),eb:null})},t:function(s,c,g,$,I){if(s>>>=0,g>>>=0,c=at(c>>>0),I===-1&&(I=4294967295),I=q=>q,$===0){var B=32-8*g;I=q=>q<<B>>>B}var H=c.includes("unsigned")?function(q,X){return X>>>0}:function(q,X){return X};Ze(s,{name:c,fromWireType:I,toWireType:H,argPackAdvance:8,readValueFromPointer:$r(c,g,$!==0),eb:null})},n:function(s,c,g){function $(B){return new I(M.buffer,te[B+4>>>2>>>0],te[B>>>2>>>0])}var I=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][c];g=at(g>>>0),Ze(s>>>0,{name:g,fromWireType:$,argPackAdvance:8,readValueFromPointer:$},{tb:!0})},H:function(s,c){c=at(c>>>0);var g=c==="std::string";Ze(s>>>0,{name:c,fromWireType:function($){var I=te[$>>>2>>>0],B=$+4;if(g)for(var H=B,q=0;q<=I;++q){var X=B+q;if(q==I||N[X>>>0]==0){if(H=qe(H,X-H),Y===void 0)var Y=H;else Y+=String.fromCharCode(0),Y+=H;H=X+1}}else{for(Y=Array(I),q=0;q<I;++q)Y[q]=String.fromCharCode(N[B+q>>>0]);Y=Y.join("")}return ut($),Y},toWireType:function($,I){I instanceof ArrayBuffer&&(I=new Uint8Array(I));var B=typeof I=="string";if(!(B||I instanceof Uint8Array||I instanceof Uint8ClampedArray||I instanceof Int8Array))throw new mt("Cannot pass non-string to std::string");var H=g&&B?Dt(I):I.length,q=Wt(4+H+1),X=q+4;if(te[q>>>2>>>0]=H,g&&B)_t(I,N,X,H+1);else if(B)for(B=0;B<H;++B){var Y=I.charCodeAt(B);if(255<Y)throw ut(X),new mt("String has UTF-16 code units that do not fit in 8 bits");N[X+B>>>0]=Y}else for(B=0;B<H;++B)N[X+B>>>0]=I[B];return $!==null&&$.push(ut,q),q},argPackAdvance:8,readValueFromPointer:Fn,eb($){ut($)}})},z:function(s,c,g){if(c>>>=0,g>>>=0,g=at(g),c===2)var $=qn,I=me,B=or,H=()=>ue,q=1;else c===4&&($=Kr,I=jn,B=Yr,H=()=>te,q=2);Ze(s>>>0,{name:g,fromWireType:X=>{for(var Y=te[X>>>2>>>0],ce=H(),ee,he=X+4,R=0;R<=Y;++R){var ie=X+4+R*c;(R==Y||ce[ie>>>q]==0)&&(he=$(he,ie-he),ee===void 0?ee=he:(ee+=String.fromCharCode(0),ee+=he),he=ie+c)}return ut(X),ee},toWireType:(X,Y)=>{if(typeof Y!="string")throw new mt(`Cannot pass non-string to C++ string type ${g}`);var ce=B(Y),ee=Wt(4+ce+c);return te[ee>>>2]=ce>>q,I(Y,ee+4,ce+c),X!==null&&X.push(ut,ee),ee},argPackAdvance:8,readValueFromPointer:nr,eb(X){ut(X)}})},ha:function(s,c){c=at(c>>>0),Ze(s>>>0,{ub:!0,name:c,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},da:()=>1,s:function(s,c,g){return c>>>=0,g>>>=0,s=Se(s>>>0),c=Ar(c,"emval::as"),Ir(c,g,s)},w:function(s){return s>>>=0,Or(()=>(s=Se(s),s.then(st)))},o:function(s,c,g,$){return g>>>=0,$>>>=0,s=jt[s>>>0],c=Se(c>>>0),s(null,c,g,$)},k:function(s,c,g,$,I){return g>>>=0,$>>>=0,I>>>=0,s=jt[s>>>0],c=Se(c>>>0),g=ar(g),s(c,c[g],$,I)},b:Sr,A:function(s,c){return c>>>=0,s=Se(s>>>0),c=Se(c),s==c},m:function(s){return s>>>=0,s===0?st(kr()):(s=ar(s),st(kr()[s]))},i:function(s,c,g){c=Rr(s,c>>>0);var $=c.shift();s--;var I=`return function (obj, func, destructorsRef, args) {\n`,B=0,H=[];g===0&&H.push("obj");for(var q=["retType"],X=[$],Y=0;Y<s;++Y)H.push("arg"+Y),q.push("argType"+Y),X.push(c[Y]),I+=`  var arg${Y} = argType${Y}.readValueFromPointer(args${B?"+"+B:""});\n`,B+=c[Y].argPackAdvance;for(I+=`  var rv = ${g===1?"new func":"func.call"}(${H.join(", ")});\n`,Y=0;Y<s;++Y)c[Y].deleteObject&&(I+=`  argType${Y}.deleteObject(arg${Y});\n`);return $.ub||(q.push("emval_returnValue"),X.push(Ir),I+=`  return emval_returnValue(retType, destructorsRef, rv);\n`),q.push(I+`};\n`),s=Kn(q).apply(null,X),g=`methodCaller<(${c.map(ce=>ce.name).join(", ")}) => ${$.name}>`,ct(sr(g,s))},r:function(s,c){return c>>>=0,s=Se(s>>>0),c=Se(c),st(s[c])},f:function(s){s>>>=0,4<s&&(De.get(s).pb+=1)},u:function(){return st([])},l:function(s){s=Se(s>>>0);for(var c=Array(s.length),g=0;g<s.length;g++)c[g]=s[g];return st(c)},e:function(s){return st(ar(s>>>0))},j:function(){return st({})},h:function(s){s>>>=0;for(var c=Se(s);c.length;){var g=c.pop();c.pop()(g)}Sr(s)},g:function(s,c,g){c>>>=0,g>>>=0,s=Se(s>>>0),c=Se(c),g=Se(g),s[c]=g},c:function(s,c){return c>>>=0,s=Ar(s>>>0,"_emval_take_value"),s=s.readValueFromPointer(c),st(s)},T:function(s,c){s=-9007199254740992>s||9007199254740992<s?NaN:Number(s),c>>>=0,s=new Date(1e3*s),k[c>>>2>>>0]=s.getUTCSeconds(),k[c+4>>>2>>>0]=s.getUTCMinutes(),k[c+8>>>2>>>0]=s.getUTCHours(),k[c+12>>>2>>>0]=s.getUTCDate(),k[c+16>>>2>>>0]=s.getUTCMonth(),k[c+20>>>2>>>0]=s.getUTCFullYear()-1900,k[c+24>>>2>>>0]=s.getUTCDay(),k[c+28>>>2>>>0]=(s.getTime()-Date.UTC(s.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},U:function(s,c){s=-9007199254740992>s||9007199254740992<s?NaN:Number(s),c>>>=0,s=new Date(1e3*s),k[c>>>2>>>0]=s.getSeconds(),k[c+4>>>2>>>0]=s.getMinutes(),k[c+8>>>2>>>0]=s.getHours(),k[c+12>>>2>>>0]=s.getDate(),k[c+16>>>2>>>0]=s.getMonth(),k[c+20>>>2>>>0]=s.getFullYear()-1900,k[c+24>>>2>>>0]=s.getDay(),k[c+28>>>2>>>0]=(rt(s.getFullYear())?nn:ft)[s.getMonth()]+s.getDate()-1|0,k[c+36>>>2>>>0]=-(60*s.getTimezoneOffset());var g=new Date(s.getFullYear(),6,1).getTimezoneOffset(),$=new Date(s.getFullYear(),0,1).getTimezoneOffset();k[c+32>>>2>>>0]=(g!=$&&s.getTimezoneOffset()==Math.min($,g))|0},V:function(s){s>>>=0;var c=new Date(k[s+20>>>2>>>0]+1900,k[s+16>>>2>>>0],k[s+12>>>2>>>0],k[s+8>>>2>>>0],k[s+4>>>2>>>0],k[s>>>2>>>0],0),g=k[s+32>>>2>>>0],$=c.getTimezoneOffset(),I=new Date(c.getFullYear(),6,1).getTimezoneOffset(),B=new Date(c.getFullYear(),0,1).getTimezoneOffset(),H=Math.min(B,I);return 0>g?k[s+32>>>2>>>0]=+(I!=B&&H==$):0<g!=(H==$)&&(I=Math.max(B,I),c.setTime(c.getTime()+6e4*((0<g?H:I)-$))),k[s+24>>>2>>>0]=c.getDay(),k[s+28>>>2>>>0]=(rt(c.getFullYear())?nn:ft)[c.getMonth()]+c.getDate()-1|0,k[s>>>2>>>0]=c.getSeconds(),k[s+4>>>2>>>0]=c.getMinutes(),k[s+8>>>2>>>0]=c.getHours(),k[s+12>>>2>>>0]=c.getDate(),k[s+16>>>2>>>0]=c.getMonth(),k[s+20>>>2>>>0]=c.getYear(),s=c.getTime(),isNaN(s)?(k[cn()>>>2>>>0]=61,s=-1):s/=1e3,BigInt(s)},R:function(){return-52},S:function(){},K:function(s,c,g){function $(X){return(X=X.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?X[1]:"GMT"}g>>>=0;var I=new Date().getFullYear(),B=new Date(I,0,1),H=new Date(I,6,1);I=B.getTimezoneOffset();var q=H.getTimezoneOffset();te[s>>>0>>>2>>>0]=60*Math.max(I,q),k[c>>>0>>>2>>>0]=+(I!=q),s=$(B),c=$(H),s=Dr(s),c=Dr(c),q<I?(te[g>>>2>>>0]=s,te[g+4>>>2>>>0]=c):(te[g>>>2>>>0]=c,te[g+4>>>2>>>0]=s)},v:()=>{Ke("")},d:function(s,c,g){return s>>>=0,c=nt(c>>>0,g>>>0),He[s].apply(null,c)},I:function(s,c,g){return s>>>=0,c=nt(c>>>0,g>>>0),He[s].apply(null,c)},E:()=>Date.now(),L:function(){return 4294901760},q:()=>performance.now(),J:function(s){s>>>=0;var c=N.length;if(4294901760<s)return!1;for(var g=1;4>=g;g*=2){var $=c*(1+.2/g);$=Math.min($,s+100663296);var I=Math;$=Math.max(s,$);e:{I=(I.min.call(I,4294901760,$+(65536-$%65536)%65536)-T.buffer.byteLength+65535)/65536;try{T.grow(I),de();var B=1;break e}catch{}B=void 0}if(B)return!0}return!1},Y:function(s,c){s>>>=0,c>>>=0;var g=0;return Je().forEach(($,I)=>{var B=c+g;for(I=te[s+4*I>>>2>>>0]=B,B=0;B<$.length;++B)M[I++>>>0>>>0]=$.charCodeAt(B);M[I>>>0>>>0]=0,g+=$.length+1}),0},Z:function(s,c){s>>>=0,c>>>=0;var g=Je();te[s>>>2>>>0]=g.length;var $=0;return g.forEach(I=>$+=I.length+1),te[c>>>2>>>0]=$,0},y:()=>52,C:function(){return 52},X:function(){return 70},B:function(s,c,g,$){c>>>=0,g>>>=0,$>>>=0;for(var I=0,B=0;B<g;B++){var H=te[c>>>2>>>0],q=te[c+4>>>2>>>0];c+=8;for(var X=0;X<q;X++){var Y=N[H+X>>>0],ce=on[s];Y===0||Y===10?((s===1?C:_)(Ut(ce,0)),ce.length=0):ce.push(Y)}I+=q}return te[$>>>2>>>0]=I,0},ea:ln,p:function(s,c,g,$){return ln(s>>>0,c>>>0,g>>>0,$>>>0)}},le=function(){function s(g){return le=g.exports,le=Zr(),le=mn(),T=le.ja,de(),xe.unshift(le.ka),_e--,_e==0&&(Oe!==null&&(clearInterval(Oe),Oe=null),ke&&(g=ke,ke=null,g())),le}var c={a:Yn};if(_e++,r.instantiateWasm)try{return r.instantiateWasm(c,s)}catch(g){_(`Module.instantiateWasm callback failed with error: ${g}`),i(g)}return Fe(c,function(g){s(g.instance)}).catch(i),{}}();r._OrtInit=(s,c)=>(r._OrtInit=le.la)(s,c),r._OrtGetLastError=(s,c)=>(r._OrtGetLastError=le.ma)(s,c),r._OrtCreateSessionOptions=(s,c,g,$,I,B,H,q,X,Y)=>(r._OrtCreateSessionOptions=le.na)(s,c,g,$,I,B,H,q,X,Y),r._OrtAppendExecutionProvider=(s,c)=>(r._OrtAppendExecutionProvider=le.oa)(s,c),r._OrtAddFreeDimensionOverride=(s,c,g)=>(r._OrtAddFreeDimensionOverride=le.pa)(s,c,g),r._OrtAddSessionConfigEntry=(s,c,g)=>(r._OrtAddSessionConfigEntry=le.qa)(s,c,g),r._OrtReleaseSessionOptions=s=>(r._OrtReleaseSessionOptions=le.ra)(s),r._OrtCreateSession=(s,c,g)=>(r._OrtCreateSession=le.sa)(s,c,g),r._OrtReleaseSession=s=>(r._OrtReleaseSession=le.ta)(s),r._OrtGetInputOutputCount=(s,c,g)=>(r._OrtGetInputOutputCount=le.ua)(s,c,g),r._OrtGetInputName=(s,c)=>(r._OrtGetInputName=le.va)(s,c),r._OrtGetOutputName=(s,c)=>(r._OrtGetOutputName=le.wa)(s,c),r._OrtFree=s=>(r._OrtFree=le.xa)(s),r._OrtCreateTensor=(s,c,g,$,I,B)=>(r._OrtCreateTensor=le.ya)(s,c,g,$,I,B),r._OrtGetTensorData=(s,c,g,$,I)=>(r._OrtGetTensorData=le.za)(s,c,g,$,I),r._OrtReleaseTensor=s=>(r._OrtReleaseTensor=le.Aa)(s),r._OrtCreateRunOptions=(s,c,g,$)=>(r._OrtCreateRunOptions=le.Ba)(s,c,g,$),r._OrtAddRunConfigEntry=(s,c,g)=>(r._OrtAddRunConfigEntry=le.Ca)(s,c,g),r._OrtReleaseRunOptions=s=>(r._OrtReleaseRunOptions=le.Da)(s),r._OrtCreateBinding=s=>(r._OrtCreateBinding=le.Ea)(s),r._OrtBindInput=(s,c,g)=>(r._OrtBindInput=le.Fa)(s,c,g),r._OrtBindOutput=(s,c,g,$)=>(r._OrtBindOutput=le.Ga)(s,c,g,$),r._OrtClearBoundOutputs=s=>(r._OrtClearBoundOutputs=le.Ha)(s),r._OrtReleaseBinding=s=>(r._OrtReleaseBinding=le.Ia)(s),r._OrtRunWithBinding=(s,c,g,$,I)=>(r._OrtRunWithBinding=le.Ja)(s,c,g,$,I),r._OrtRun=(s,c,g,$,I,B,H,q)=>(r._OrtRun=le.Ka)(s,c,g,$,I,B,H,q),r._OrtEndProfiling=s=>(r._OrtEndProfiling=le.La)(s),r._JsepOutput=(s,c,g)=>(r._JsepOutput=le.Ma)(s,c,g),r._JsepGetNodeName=s=>(r._JsepGetNodeName=le.Na)(s);var cn=()=>(cn=le.Oa)(),Wt=r._malloc=s=>(Wt=r._malloc=le.Pa)(s),ut=r._free=s=>(ut=r._free=le.Qa)(s),Yt=s=>(Yt=le.Ra)(s),dr=()=>(dr=le.Ta)(),cr=s=>(cr=le.Ua)(s),Br=s=>(Br=le.Va)(s),Zt=s=>(Zt=le.Xa)(s),pn=()=>(pn=le.Ya)(),bt=s=>(bt=le.Za)(s),pt=()=>(pt=le._a)();r.___start_em_js=957888,r.___stop_em_js=958049;function mn(){var s=le;s=Object.assign({},s);var c=$=>()=>$()>>>0,g=$=>I=>$(I)>>>0;return s.Oa=c(s.Oa),s.Pa=g(s.Pa),s.Ra=g(s.Ra),s.Ta=c(s.Ta),s.Va=g(s.Va),s}r.stackAlloc=Br,r.stackSave=dr,r.stackRestore=cr,r.UTF8ToString=qe,r.stringToUTF8=(s,c,g)=>_t(s,N,c,g),r.lengthBytesUTF8=Dt;var Bt;ke=function s(){Bt||Mr(),Bt||(ke=s)};function Mr(){if(!(0<_e)){if(r.preRun)for(typeof r.preRun=="function"&&(r.preRun=[r.preRun]);r.preRun.length;){var s=r.preRun.shift();Pe.unshift(s)}for(;0<Pe.length;)Pe.shift()(r);if(!(0<_e||Bt||(Bt=!0,r.calledRun=!0,O))){for(;0<xe.length;)xe.shift()(r);for(o(r);0<oe.length;)oe.shift()(r)}}}return Mr(),t.ready}})();typeof $i=="object"&&typeof uo=="object"?uo.exports=vi:typeof define=="function"&&define.amd&&define([],()=>vi)});var Si=Ur(()=>{});var xi=Ur(()=>{});var Ci={};bn(Ci,{cpus:()=>Nl});var Nl,Ai=J(()=>{Nl=void 0});var Ei=Ur((Ti,lo)=>{"use strict";var Ii=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){function r(){return we.buffer!=oe.buffer&&Ne(),oe}function o(){return we.buffer!=oe.buffer&&Ne(),_e}function i(){return we.buffer!=oe.buffer&&Ne(),Oe}function u(){return we.buffer!=oe.buffer&&Ne(),ke}function a(){return we.buffer!=oe.buffer&&Ne(),Ke}function p(){return we.buffer!=oe.buffer&&Ne(),F}function m(){return we.buffer!=oe.buffer&&Ne(),ae}function h(){return we.buffer!=oe.buffer&&Ne(),Ye}var d=t,y,v;d.ready=new Promise((n,l)=>{y=n,v=l}),d.mountExternalData=(n,l)=>{(d.Fb||(d.Fb=new Map)).set(n,l)},d.unmountExternalData=()=>{delete d.Fb},d.jsepInit=(n,l,f,b,A,P,U,L,Q,Z,fe)=>{d.uc=n,d.$b=l,d.dc=f,d.Ob=b,d.cc=A,d.eb=P,d.ec=U,d.hc=L,d.ac=Q,d.bc=Z,d.fc=fe,l=(ne,ye,D)=>(...se)=>{let Ce=pt,it=ye?.();se=ne(...se);let Jt=ye?.();return it!==Jt&&(ne=Jt,D(it),ye=D=null),pt!=Ce?I():se},f=ne=>async(...ye)=>{try{if(d.Eb)throw Error("Session already started");let D=d.Eb={jc:ye[0],errors:[]},se=await ne(...ye);if(d.Eb!==D)throw Error("Session mismatch");n.flush();let Ce=D.errors;if(0<Ce.length){let it=await Promise.all(Ce);if(it=it.filter(Jt=>Jt),0<it.length)throw Error(it.join(`\n`))}return se}finally{d.Eb=null}},d._OrtCreateSession=l(d._OrtCreateSession,()=>d._OrtCreateSession,ne=>d._OrtCreateSession=ne),d._OrtRun=f(l(d._OrtRun,()=>d._OrtRun,ne=>d._OrtRun=ne)),d._OrtRunWithBinding=f(l(d._OrtRunWithBinding,()=>d._OrtRunWithBinding,ne=>d._OrtRunWithBinding=ne)),d._OrtBindInput=l(d._OrtBindInput,()=>d._OrtBindInput,ne=>d._OrtBindInput=ne),d.jsepRegisterBuffer=(ne,ye,D,se)=>n.registerBuffer(ne,ye,D,se),d.jsepGetBuffer=ne=>n.getBuffer(ne),d.jsepCreateDownloader=(ne,ye,D)=>n.createDownloader(ne,ye,D),d.jsepOnReleaseSession=ne=>{n.onReleaseSession(ne)},d.jsepOnRunStart=ne=>n.onRunStart(ne)};var S=Object.assign({},d),w="./this.program",x=(n,l)=>{throw l},E=typeof window=="object",C=typeof importScripts=="function",_=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",T=d.ENVIRONMENT_IS_PTHREAD||!1,O="";function z(n){return d.locateFile?d.locateFile(n,O):O+n}var M,N,j;if(_){var ue=(io(),pr(oo)),k=(so(),pr(ao));O=C?k.dirname(O)+"/":__dirname+"/",M=(l,f)=>(l=Dt(l)?new URL(l):k.normalize(l),ue.readFileSync(l,f?void 0:"utf8")),j=l=>(l=M(l,!0),l.buffer||(l=new Uint8Array(l)),l),N=(l,f,b,A=!0)=>{l=Dt(l)?new URL(l):k.normalize(l),ue.readFile(l,A?void 0:"utf8",(P,U)=>{P?b(P):f(A?U.buffer:U)})},!d.thisProgram&&1<process.argv.length&&(w=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),x=(l,f)=>{throw process.exitCode=l,f},d.inspect=()=>"[Emscripten Module object]";let n;try{n=Si()}catch(l){throw console.error(\'The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?\'),l}global.Worker=n.Worker}else(E||C)&&(C?O=self.location.href:typeof document<"u"&&document.currentScript&&(O=document.currentScript.src),typeof e<"u"&&e&&(O=e),O.indexOf("blob:")!==0?O=O.substr(0,O.replace(/[?#].*/,"").lastIndexOf("/")+1):O="",_||(M=n=>{var l=new XMLHttpRequest;return l.open("GET",n,!1),l.send(null),l.responseText},C&&(j=n=>{var l=new XMLHttpRequest;return l.open("GET",n,!1),l.responseType="arraybuffer",l.send(null),new Uint8Array(l.response)}),N=(n,l,f)=>{var b=new XMLHttpRequest;b.open("GET",n,!0),b.responseType="arraybuffer",b.onload=()=>{b.status==200||b.status==0&&b.response?l(b.response):f()},b.onerror=f,b.send(null)}));_&&typeof performance>"u"&&(global.performance=xi().performance);var te=console.log.bind(console),Be=console.error.bind(console);_&&(te=(...n)=>ue.writeSync(1,n.join(" ")+`\n`),Be=(...n)=>ue.writeSync(2,n.join(" ")+`\n`));var Ue=te,$e=Be;Object.assign(d,S),S=null,typeof WebAssembly!="object"&&Ut("no native wasm support detected");var we,de,Pe=!1,xe,oe,_e,Oe,ke,Ke,F,ae,ge,ht,Ye;function Ne(){var n=we.buffer;d.HEAP8=oe=new Int8Array(n),d.HEAP16=Oe=new Int16Array(n),d.HEAPU8=_e=new Uint8Array(n),d.HEAPU16=ke=new Uint16Array(n),d.HEAP32=Ke=new Int32Array(n),d.HEAPU32=F=new Uint32Array(n),d.HEAPF32=ae=new Float32Array(n),d.HEAPF64=Ye=new Float64Array(n),d.HEAP64=ge=new BigInt64Array(n),d.HEAPU64=ht=new BigUint64Array(n)}var Mt=16777216;if(T)we=d.wasmMemory;else if(d.wasmMemory)we=d.wasmMemory;else if(we=new WebAssembly.Memory({initial:Mt/65536,maximum:65536,shared:!0}),!(we.buffer instanceof SharedArrayBuffer))throw $e("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),_&&$e("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");Ne(),Mt=we.buffer.byteLength;var Fe=[],He=[],Rt=[],gt=0,zt=null,Lt=null;function yr(){if(gt--,gt==0&&(zt!==null&&(clearInterval(zt),zt=null),Lt)){var n=Lt;Lt=null,n()}}function Ut(n){throw n="Aborted("+n+")",$e(n),Pe=!0,xe=1,n=new WebAssembly.RuntimeError(n+". Build with -sASSERTIONS for more info."),v(n),n}var qe=n=>n.startsWith("data:application/octet-stream;base64,"),Dt=n=>n.startsWith("file://"),_t;_t="ort-wasm-simd-threaded.wasm",qe(_t)||(_t=z(_t));function br(n){if(j)return j(n);throw"both async and sync fetching of the wasm failed"}function qr(n){if(E||C){if(typeof fetch=="function"&&!Dt(n))return fetch(n,{credentials:"same-origin"}).then(l=>{if(!l.ok)throw"failed to load wasm binary file at \'"+n+"\'";return l.arrayBuffer()}).catch(()=>br(n));if(N)return new Promise((l,f)=>{N(n,b=>l(new Uint8Array(b)),f)})}return Promise.resolve().then(()=>br(n))}function at(n,l,f){return qr(n).then(b=>WebAssembly.instantiate(b,l)).then(b=>b).then(f,b=>{$e(`failed to asynchronously prepare wasm: ${b}`),Ut(b)})}function wr(n,l){var f=_t;return typeof WebAssembly.instantiateStreaming!="function"||qe(f)||Dt(f)||_||typeof fetch!="function"?at(f,n,l):fetch(f,{credentials:"same-origin"}).then(b=>WebAssembly.instantiateStreaming(b,n).then(l,function(A){return $e(`wasm streaming compile failed: ${A}`),$e("falling back to ArrayBuffer instantiation"),at(f,n,l)}))}var Ft={1381140:(n,l,f,b)=>{if(typeof d>"u"||!d.Fb)return 1;if(n=De(n>>>0),n.startsWith("./")&&(n=n.substring(2)),n=d.Fb.get(n),!n)return 2;if(l>>>=0,f>>>=0,b>>>=0,l+f>n.byteLength)return 3;try{return o().set(n.subarray(l,l+f),b>>>0),0}catch{return 4}},1381641:()=>{d.ac()},1381672:()=>{d.bc()},1381701:()=>{d.fc()},1381726:n=>d.$b(n),1381759:n=>d.dc(n),1381791:(n,l,f)=>{d.Ob(n,l,f,!0)},1381830:(n,l,f)=>{d.Ob(n,l,f)},1381863:n=>{d.eb("Abs",n,void 0)},1381914:n=>{d.eb("Neg",n,void 0)},1381965:n=>{d.eb("Floor",n,void 0)},1382018:n=>{d.eb("Ceil",n,void 0)},1382070:n=>{d.eb("Reciprocal",n,void 0)},1382128:n=>{d.eb("Sqrt",n,void 0)},1382180:n=>{d.eb("Exp",n,void 0)},1382231:n=>{d.eb("Erf",n,void 0)},1382282:n=>{d.eb("Sigmoid",n,void 0)},1382337:(n,l,f)=>{d.eb("HardSigmoid",n,{alpha:l,beta:f})},1382416:n=>{d.eb("Log",n,void 0)},1382467:n=>{d.eb("Sin",n,void 0)},1382518:n=>{d.eb("Cos",n,void 0)},1382569:n=>{d.eb("Tan",n,void 0)},1382620:n=>{d.eb("Asin",n,void 0)},1382672:n=>{d.eb("Acos",n,void 0)},1382724:n=>{d.eb("Atan",n,void 0)},1382776:n=>{d.eb("Sinh",n,void 0)},1382828:n=>{d.eb("Cosh",n,void 0)},1382880:n=>{d.eb("Asinh",n,void 0)},1382933:n=>{d.eb("Acosh",n,void 0)},1382986:n=>{d.eb("Atanh",n,void 0)},1383039:n=>{d.eb("Tanh",n,void 0)},1383091:n=>{d.eb("Not",n,void 0)},1383142:(n,l,f)=>{d.eb("Clip",n,{min:l,max:f})},1383211:n=>{d.eb("Clip",n,void 0)},1383263:(n,l)=>{d.eb("Elu",n,{alpha:l})},1383321:n=>{d.eb("Relu",n,void 0)},1383373:(n,l)=>{d.eb("LeakyRelu",n,{alpha:l})},1383437:(n,l)=>{d.eb("ThresholdedRelu",n,{alpha:l})},1383507:(n,l)=>{d.eb("Cast",n,{to:l})},1383565:n=>{d.eb("Add",n,void 0)},1383616:n=>{d.eb("Sub",n,void 0)},1383667:n=>{d.eb("Mul",n,void 0)},1383718:n=>{d.eb("Div",n,void 0)},1383769:n=>{d.eb("Pow",n,void 0)},1383820:n=>{d.eb("Equal",n,void 0)},1383873:n=>{d.eb("Greater",n,void 0)},1383928:n=>{d.eb("GreaterOrEqual",n,void 0)},1383990:n=>{d.eb("Less",n,void 0)},1384042:n=>{d.eb("LessOrEqual",n,void 0)},1384101:(n,l,f,b,A)=>{d.eb("ReduceMean",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},1384260:(n,l,f,b,A)=>{d.eb("ReduceMax",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},1384418:(n,l,f,b,A)=>{d.eb("ReduceMin",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},1384576:(n,l,f,b,A)=>{d.eb("ReduceProd",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},1384735:(n,l,f,b,A)=>{d.eb("ReduceSum",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},1384893:(n,l,f,b,A)=>{d.eb("ReduceL1",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},1385050:(n,l,f,b,A)=>{d.eb("ReduceL2",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},1385207:(n,l,f,b,A)=>{d.eb("ReduceLogSum",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},1385368:(n,l,f,b,A)=>{d.eb("ReduceSumSquare",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},1385532:(n,l,f,b,A)=>{d.eb("ReduceLogSumExp",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},1385696:n=>{d.eb("Where",n,void 0)},1385749:(n,l,f)=>{d.eb("Transpose",n,{perm:l?Array.from(a().subarray(l>>>0,f>>>0)):[]})},1385857:(n,l,f,b,A,P,U,L,Q,Z,fe,ne,ye,D,se)=>{d.eb("ConvTranspose",n,{format:Q?"NHWC":"NCHW",autoPad:l,dilations:[f],group:b,kernel_shape:[A],pads:[P,U],strides:[L],wIsConst:()=>!!r()[Z>>>0],outputPadding:fe?Array.from(a().subarray(fe>>>0,ne>>>0)):[],outputShape:ye?Array.from(a().subarray(ye>>>0,D>>>0)):[],activation:De(se)})},1386259:(n,l,f,b,A,P,U,L,Q,Z,fe,ne,ye,D)=>{d.eb("ConvTranspose",n,{format:L?"NHWC":"NCHW",autoPad:l,dilations:Array.from(a().subarray(f>>>0,(f>>>0)+2>>>0)),group:b,kernelShape:Array.from(a().subarray(A>>>0,(A>>>0)+2>>>0)),pads:Array.from(a().subarray(P>>>0,(P>>>0)+4>>>0)),strides:Array.from(a().subarray(U>>>0,(U>>>0)+2>>>0)),wIsConst:()=>!!r()[Q>>>0],outputPadding:Z?Array.from(a().subarray(Z>>>0,fe>>>0)):[],outputShape:ne?Array.from(a().subarray(ne>>>0,ye>>>0)):[],activation:De(D)})},1386824:(n,l,f,b,A,P,U,L,Q,Z,fe,ne,ye,D,se)=>{d.eb("ConvTranspose",n,{format:Q?"NHWC":"NCHW",autoPad:l,dilations:[f],group:b,kernel_shape:[A],pads:[P,U],strides:[L],wIsConst:()=>!!r()[Z>>>0],outputPadding:fe?Array.from(a().subarray(fe>>>0,ne>>>0)):[],outputShape:ye?Array.from(a().subarray(ye>>>0,D>>>0)):[],activation:De(se)})},1387226:(n,l,f,b,A,P,U,L,Q,Z,fe,ne,ye,D)=>{d.eb("ConvTranspose",n,{format:L?"NHWC":"NCHW",autoPad:l,dilations:Array.from(a().subarray(f>>>0,(f>>>0)+2>>>0)),group:b,kernelShape:Array.from(a().subarray(A>>>0,(A>>>0)+2>>>0)),pads:Array.from(a().subarray(P>>>0,(P>>>0)+4>>>0)),strides:Array.from(a().subarray(U>>>0,(U>>>0)+2>>>0)),wIsConst:()=>!!r()[Q>>>0],outputPadding:Z?Array.from(a().subarray(Z>>>0,fe>>>0)):[],outputShape:ne?Array.from(a().subarray(ne>>>0,ye>>>0)):[],activation:De(D)})},1387791:(n,l)=>{d.eb("GlobalAveragePool",n,{format:l?"NHWC":"NCHW"})},1387882:(n,l,f,b,A,P,U,L,Q,Z,fe,ne,ye,D,se,Ce)=>{d.eb("AveragePool",n,{format:Ce?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:A,dilations:[P,U],kernel_shape:[L,Q],pads:[Z,fe,ne,ye],strides:[D,se]})},1388166:(n,l)=>{d.eb("GlobalAveragePool",n,{format:l?"NHWC":"NCHW"})},1388257:(n,l,f,b,A,P,U,L,Q,Z,fe,ne,ye,D,se,Ce)=>{d.eb("AveragePool",n,{format:Ce?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:A,dilations:[P,U],kernel_shape:[L,Q],pads:[Z,fe,ne,ye],strides:[D,se]})},1388541:(n,l)=>{d.eb("GlobalMaxPool",n,{format:l?"NHWC":"NCHW"})},1388628:(n,l,f,b,A,P,U,L,Q,Z,fe,ne,ye,D,se,Ce)=>{d.eb("MaxPool",n,{format:Ce?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:A,dilations:[P,U],kernel_shape:[L,Q],pads:[Z,fe,ne,ye],strides:[D,se]})},1388908:(n,l)=>{d.eb("GlobalMaxPool",n,{format:l?"NHWC":"NCHW"})},1388995:(n,l,f,b,A,P,U,L,Q,Z,fe,ne,ye,D,se,Ce)=>{d.eb("MaxPool",n,{format:Ce?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:A,dilations:[P,U],kernel_shape:[L,Q],pads:[Z,fe,ne,ye],strides:[D,se]})},1389275:(n,l,f,b,A)=>{d.eb("Gemm",n,{alpha:l,beta:f,transA:b,transB:A})},1389379:n=>{d.eb("MatMul",n,void 0)},1389433:(n,l,f,b)=>{d.eb("ArgMax",n,{keepDims:!!l,selectLastIndex:!!f,axis:b})},1389541:(n,l,f,b)=>{d.eb("ArgMin",n,{keepDims:!!l,selectLastIndex:!!f,axis:b})},1389649:(n,l)=>{d.eb("Softmax",n,{axis:l})},1389712:(n,l)=>{d.eb("Concat",n,{axis:l})},1389772:(n,l,f,b,A)=>{d.eb("Split",n,{axis:l,numOutputs:f,splitSizes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},1389912:n=>{d.eb("Expand",n,void 0)},1389966:(n,l)=>{d.eb("Gather",n,{axis:Number(l)})},1390037:(n,l)=>{d.eb("GatherElements",n,{axis:Number(l)})},1390116:(n,l,f,b,A,P,U,L,Q,Z,fe)=>{d.eb("Resize",n,{antialias:l,axes:f?Array.from(a().subarray(f>>>0,b>>>0)):[],coordinateTransformMode:De(A),cubicCoeffA:P,excludeOutside:U,extrapolationValue:L,keepAspectRatioPolicy:De(Q),mode:De(Z),nearestMode:De(fe)})},1390462:(n,l,f,b,A,P,U)=>{d.eb("Slice",n,{starts:l?Array.from(a().subarray(l>>>0,f>>>0)):[],ends:b?Array.from(a().subarray(b>>>0,A>>>0)):[],axes:P?Array.from(a().subarray(P>>>0,U>>>0)):[]})},1390678:n=>{d.eb("Tile",n,void 0)},1390730:(n,l,f)=>{d.eb("LayerNormalization",n,{axis:Number(l),epsilon:Number(f)})},1390837:(n,l,f)=>{d.eb("InstanceNormalization",n,{epsilon:l,format:f?"NHWC":"NCHW"})},1390951:(n,l,f)=>{d.eb("InstanceNormalization",n,{epsilon:l,format:f?"NHWC":"NCHW"})},1391065:n=>{d.eb("Range",n,void 0)},1391118:(n,l)=>{d.eb("Einsum",n,{equation:De(l)})},1391199:(n,l,f,b,A)=>{d.eb("Pad",n,{mode:l,value:f,pads:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},1391326:(n,l,f,b,A,P)=>{d.eb("BatchNormalization",n,{epsilon:l,momentum:f,spatial:!!A,trainingMode:!!b,format:P?"NHWC":"NCHW"})},1391495:(n,l,f,b,A,P)=>{d.eb("BatchNormalization",n,{epsilon:l,momentum:f,spatial:!!A,trainingMode:!!b,format:P?"NHWC":"NCHW"})},1391664:(n,l,f)=>{d.eb("CumSum",n,{exclusive:Number(l),reverse:Number(f)})},1391761:(n,l,f,b,A,P,U,L,Q)=>{d.eb("Attention",n,{numHeads:l,isUnidirectional:f,maskFilterValue:b,scale:A,doRotary:P,qkvHiddenSizes:U?Array.from(a().subarray(Number(L)>>>0,Number(L)+U>>>0)):[],pastPresentShareBuffer:!!Q})},1392033:n=>{d.eb("Gelu",n,void 0)},1392085:(n,l,f,b,A,P)=>{d.eb("MultiHeadAttention",n,{numHeads:l,isUnidirectional:f,maskFilterValue:b,scale:A,doRotary:P})},1392244:n=>{d.eb("BiasAdd",n,void 0)},1392299:n=>{d.eb("BiasSplitGelu",n,void 0)},1392360:(n,l)=>{d.eb("SkipLayerNormalization",n,{epsilon:l})},1392441:(n,l,f,b,A,P,U,L,Q,Z,fe,ne,ye)=>{d.eb("Conv",n,{format:Q?"NHWC":"NCHW",auto_pad:l,dilations:[f],group:b,kernel_shape:[A],pads:P?Array.from(a().subarray(P>>>0,U>>>0)):[],strides:[L],w_is_const:()=>!!r()[Z>>>0],activation:De(fe),activation_params:ne?Array.from(m().subarray(ne>>>0,ye>>>0)):[]})},1392811:(n,l,f,b,A,P,U,L,Q,Z,fe,ne,ye,D,se,Ce)=>{d.eb("Conv",n,{format:ne?"NHWC":"NCHW",auto_pad:l,dilations:[f,b],group:A,kernel_shape:[P,U],pads:L?Array.from(a().subarray(L>>>0,Q>>>0)):[],strides:[Z,fe],w_is_const:()=>!!r()[ye>>>0],activation:De(D),activation_params:se?Array.from(m().subarray(se>>>0,Ce>>>0)):[]})},1393202:n=>{d.ec(n)},1393236:(n,l)=>d.hc(n,l,d.Eb.jc,d.Eb.errors)};function vr(n){this.name="ExitStatus",this.message=`Program terminated with exit(${n})`,this.status=n}var mt=n=>{n.terminate(),n.onmessage=()=>{}},jr=n=>{me.yb.length==0&&(Cr(),me.Pb(me.yb[0]));var l=me.yb.pop();if(!l)return 6;me.zb.push(l),me.pb[n.xb]=l,l.xb=n.xb;var f={cmd:"run",start_routine:n.kc,arg:n.Vb,pthread_ptr:n.xb};return _&&l.unref(),l.postMessage(f,n.qc),0},Ze=0,$r=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,_r=(n,l,f)=>{l>>>=0;var b=l+f;for(f=l;n[f]&&!(f>=b);)++f;if(16<f-l&&n.buffer&&$r)return $r.decode(n.buffer instanceof SharedArrayBuffer?n.slice(l,f):n.subarray(l,f));for(b="";l<f;){var A=n[l++];if(A&128){var P=n[l++]&63;if((A&224)==192)b+=String.fromCharCode((A&31)<<6|P);else{var U=n[l++]&63;A=(A&240)==224?(A&15)<<12|P<<6|U:(A&7)<<18|P<<12|U<<6|n[l++]&63,65536>A?b+=String.fromCharCode(A):(A-=65536,b+=String.fromCharCode(55296|A>>10,56320|A&1023))}}else b+=String.fromCharCode(A)}return b},De=(n,l)=>(n>>>=0)?_r(o(),n,l):"",Sr=n=>{var l=to();return n=n(),gn(l),n};function Se(n,l){var f=arguments.length-2,b=arguments;return Sr(()=>{for(var A=2*f,P=ro(8*A),U=P>>>3,L=0;L<f;L++){var Q=b[2+L];typeof Q=="bigint"?(ge[U+2*L]=1n,ge[U+2*L+1]=Q):(ge[U+2*L]=0n,h()[U+2*L+1>>>0]=Q)}return di(n,A,P,l)})}function st(n){if(T)return Se(0,1,n);xe=n,0<Ze||(me.lc(),d.onExit?.(n),Pe=!0),x(n,new vr(n))}var nr=n=>{if(xe=n,T)throw Kr(n),"unwind";st(n)},xr=n=>{n instanceof vr||n=="unwind"||x(1,n)};function Fn(){for(var n=d.numThreads;n--;)Cr();Fe.unshift(()=>{gt++,qn(()=>yr())})}function Cr(){var n=z("ort-wasm-simd-threaded.worker.js");n=new Worker(n),me.yb.push(n)}function qn(n){T?n():Promise.all(me.yb.map(me.Pb)).then(n)}var me={yb:[],zb:[],Ub:[],pb:{},Ib(){T?(me.receiveObjectTransfer=me.ic,me.threadInitTLS=me.Tb,me.setExitStatus=me.Sb):Fn()},Sb:n=>xe=n,vc:["$terminateWorker"],lc:()=>{for(var n of me.zb)mt(n);for(n of me.yb)mt(n);me.yb=[],me.zb=[],me.pb=[]},Rb:n=>{var l=n.xb;delete me.pb[l],me.yb.push(n),me.zb.splice(me.zb.indexOf(n),1),n.xb=0,Qn(l)},ic(){},Tb(){me.Ub.forEach(n=>n())},Pb:n=>new Promise(l=>{n.onmessage=P=>{P=P.data;var U=P.cmd;if(P.targetThread&&P.targetThread!=hn()){var L=me.pb[P.targetThread];L?L.postMessage(P,P.transferList):$e(`Internal error! Worker sent a message "${U}" to target pthread ${P.targetThread}, but that thread no longer exists!`)}else U==="checkMailbox"?Yt():U==="spawnThread"?jr(P):U==="cleanupThread"?me.Rb(me.pb[P.thread]):U==="killThread"?(P=P.thread,U=me.pb[P],delete me.pb[P],mt(U),Qn(P),me.zb.splice(me.zb.indexOf(U),1),U.xb=0):U==="cancelThread"?me.pb[P.thread].postMessage({cmd:"cancel"}):U==="loaded"?(n.loaded=!0,_&&!n.xb&&n.unref(),l(n)):U==="alert"?alert(`Thread ${P.threadId}: ${P.text}`):P.target==="setimmediate"?n.postMessage(P):U==="callHandler"?d[P.handler](...P.args):U&&$e(`worker sent an unknown command ${U}`)},n.onerror=P=>{throw $e(`worker sent an error! ${P.filename}:${P.lineno}: ${P.message}`),P},_&&(n.on("message",P=>n.onmessage({data:P})),n.on("error",P=>n.onerror(P)));var f=[],b=["onExit"],A;for(A of b)d.hasOwnProperty(A)&&f.push(A);n.postMessage({cmd:"load",handlers:f,urlOrBlob:d.mainScriptUrlOrBlob||e,wasmMemory:we,wasmModule:de})})};d.PThread=me;var or=n=>{for(;0<n.length;)n.shift()(d)};d.establishStackSpace=()=>{var n=hn(),l=p()[n+52>>>2>>>0];n=p()[n+56>>>2>>>0],pi(l,l-n),gn(l)};function Kr(n){if(T)return Se(1,0,n);nr(n)}d.invokeEntryPoint=(n,l)=>{n=mi.apply(null,[n,l]),0<Ze?me.Sb(n):eo(n)};function jn(n){this.Db=n-24,this.sc=function(l){p()[this.Db+4>>>2>>>0]=l},this.Mb=function(l){p()[this.Db+8>>>2>>>0]=l},this.Ib=function(l,f){this.Kb(),this.sc(l),this.Mb(f)},this.Kb=function(){p()[this.Db+16>>>2>>>0]=0}}var Yr=0,Ar=0;function Ir(n,l,f,b){return T?Se(2,1,n,l,f,b):qt(n,l,f,b)}function qt(n,l,f,b){if(n>>>=0,l>>>=0,f>>>=0,b>>>=0,typeof SharedArrayBuffer>"u")return $e("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var A=[];return T&&A.length===0?Ir(n,l,f,b):(n={kc:f,xb:n,Vb:b,qc:A},T?(n.tc="spawnThread",postMessage(n,A),0):jr(n))}function Zr(n,l,f){return T?Se(3,1,n,l,f):0}function yt(n,l){if(T)return Se(4,1,n,l)}var tt=n=>{for(var l=0,f=0;f<n.length;++f){var b=n.charCodeAt(f);127>=b?l++:2047>=b?l+=2:55296<=b&&57343>=b?(l+=4,++f):l+=3}return l},Tr=(n,l,f,b)=>{if(f>>>=0,!(0<b))return 0;var A=f;b=f+b-1;for(var P=0;P<n.length;++P){var U=n.charCodeAt(P);if(55296<=U&&57343>=U){var L=n.charCodeAt(++P);U=65536+((U&1023)<<10)|L&1023}if(127>=U){if(f>=b)break;l[f++>>>0]=U}else{if(2047>=U){if(f+1>=b)break;l[f++>>>0]=192|U>>6}else{if(65535>=U){if(f+2>=b)break;l[f++>>>0]=224|U>>12}else{if(f+3>=b)break;l[f++>>>0]=240|U>>18,l[f++>>>0]=128|U>>12&63}l[f++>>>0]=128|U>>6&63}l[f++>>>0]=128|U&63}}return l[f>>>0]=0,f-A},Vt=(n,l,f)=>Tr(n,o(),l,f);function Er(n,l){if(T)return Se(5,1,n,l)}function Pr(n,l,f){if(T)return Se(6,1,n,l,f)}function Jr(n,l,f){return T?Se(7,1,n,l,f):0}function ir(n,l){if(T)return Se(8,1,n,l)}function Xr(n,l,f){if(T)return Se(9,1,n,l,f)}function Qr(n,l,f,b){if(T)return Se(10,1,n,l,f,b)}function en(n,l,f,b){if(T)return Se(11,1,n,l,f,b)}function tn(n,l,f,b){if(T)return Se(12,1,n,l,f,b)}function Or(n){if(T)return Se(13,1,n)}function jt(n,l){if(T)return Se(14,1,n,l)}function rn(n,l,f){if(T)return Se(15,1,n,l,f)}var ar=n=>{if(n===null)return"null";var l=typeof n;return l==="object"||l==="array"||l==="function"?n.toString():""+n},kr,ct=n=>{for(var l="";o()[n>>>0];)l+=kr[o()[n++>>>0]];return l},Rr={},sr={},Kn={},rt;function nn(n,l,f={}){var b=l.name;if(!n)throw new rt(`type "${b}" must have a positive integer typeid pointer`);if(sr.hasOwnProperty(n)){if(f.Yb)return;throw new rt(`Cannot register type \'${b}\' twice`)}sr[n]=l,delete Kn[n],Rr.hasOwnProperty(n)&&(l=Rr[n],delete Rr[n],l.forEach(A=>A()))}function ft(n,l,f={}){if(!("argPackAdvance"in l))throw new TypeError("registerType registeredInstance requires argPackAdvance");nn(n,l,f)}var Dr=(n,l,f)=>{switch(l){case 1:return f?b=>r()[b>>>0>>>0]:b=>o()[b>>>0>>>0];case 2:return f?b=>i()[b>>>1>>>0]:b=>u()[b>>>1>>>0];case 4:return f?b=>a()[b>>>2>>>0]:b=>p()[b>>>2>>>0];case 8:return f?b=>ge[b>>>3]:b=>ht[b>>>3];default:throw new TypeError(`invalid integer width (${l}): ${n}`)}};function ur(){this.wb=[void 0],this.Nb=[]}var nt=new ur;function Kt(n){n>>>=0,n>=nt.Db&&--nt.get(n).Qb===0&&nt.Mb(n)}var Je=n=>{if(!n)throw new rt("Cannot use deleted val. handle = "+n);return nt.get(n).value},ot=n=>{switch(n){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return nt.Kb({Qb:1,value:n})}};function on(n){return this.fromWireType(a()[n>>>2>>>0])}var an=(n,l)=>{switch(l){case 4:return function(f){return this.fromWireType(m()[f>>>2>>>0])};case 8:return function(f){return this.fromWireType(h()[f>>>3>>>0])};default:throw new TypeError(`invalid float width (${l}): ${n}`)}};function sn(n){return this.fromWireType(p()[n>>>2>>>0])}var un=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,ln=(n,l)=>{for(var f=n>>1,b=f+l/2;!(f>=b)&&u()[f>>>0];)++f;if(f<<=1,32<f-n&&un)return un.decode(o().slice(n,f));for(f="",b=0;!(b>=l/2);++b){var A=i()[n+2*b>>>1>>>0];if(A==0)break;f+=String.fromCharCode(A)}return f},dn=(n,l,f)=>{if(f??=2147483647,2>f)return 0;f-=2;var b=l;f=f<2*n.length?f/2:n.length;for(var A=0;A<f;++A){var P=n.charCodeAt(A);i()[l>>>1>>>0]=P,l+=2}return i()[l>>>1>>>0]=0,l-b},lr=n=>2*n.length,Yn=(n,l)=>{for(var f=0,b="";!(f>=l/4);){var A=a()[n+4*f>>>2>>>0];if(A==0)break;++f,65536<=A?(A-=65536,b+=String.fromCharCode(55296|A>>10,56320|A&1023)):b+=String.fromCharCode(A)}return b},le=(n,l,f)=>{if(l>>>=0,f??=2147483647,4>f)return 0;var b=l;f=b+f-4;for(var A=0;A<n.length;++A){var P=n.charCodeAt(A);if(55296<=P&&57343>=P){var U=n.charCodeAt(++A);P=65536+((P&1023)<<10)|U&1023}if(a()[l>>>2>>>0]=P,l+=4,l+4>f)break}return a()[l>>>2>>>0]=0,l-b},cn=n=>{for(var l=0,f=0;f<n.length;++f){var b=n.charCodeAt(f);55296<=b&&57343>=b&&++f,l+=4}return l},Wt=()=>{if(!(0<Ze))try{T?eo(xe):nr(xe)}catch(n){xr(n)}};function ut(n){n>>>=0,typeof Atomics.rc=="function"&&(Atomics.rc(a(),n>>>2,n).value.then(Yt),n+=128,Atomics.store(a(),n>>>2,1))}d.__emscripten_thread_mailbox_await=ut;var Yt=()=>{var n=hn();if(n&&(ut(n),!Pe))try{ci(),Wt()}catch(l){xr(l)}};d.checkMailbox=Yt;var dr=[],cr=(n,l)=>{var f=sr[n];if(f===void 0)throw n=ui(n),f=ct(n),St(n),new rt(l+" has unknown type "+f);return f},Br=(n,l,f)=>{var b=[];return n=n.toWireType(b,f),b.length&&(p()[l>>>2>>>0]=ot(b)),n},Zt=n=>{try{n()}catch(l){Ut(l)}};function pn(){var n=re,l={};for(let[f,b]of Object.entries(n))l[f]=typeof b=="function"?function(){Bt.push(f);try{return b.apply(null,arguments)}finally{Pe||(Bt.pop(),pt&&bt===1&&Bt.length===0&&(bt=0,Ze+=1,Zt(hi),typeof Fibers<"u"&&Fibers.xc()))}}:b;return l}var bt=0,pt=null,mn=0,Bt=[],Mr={},s={},c=0,g=null,$=[];function I(){return new Promise((n,l)=>{g={resolve:n,reject:l}})}function B(){var n=zr(65548),l=n+12;p()[n>>>2>>>0]=l,p()[n+4>>>2>>>0]=l+65536,l=Bt[0];var f=Mr[l];return f===void 0&&(f=c++,Mr[l]=f,s[f]=l),l=f,a()[n+8>>>2>>>0]=l,n}function H(){var n=a()[pt+8>>>2>>>0];return n=re[s[n]],--Ze,n()}function q(n){if(!Pe){if(bt===0){var l=!1,f=!1;n((b=0)=>{if(!Pe&&(mn=b,l=!0,f)){bt=2,Zt(()=>gi(pt)),typeof Browser<"u"&&Browser.Jb.Xb&&Browser.Jb.resume(),b=!1;try{var A=H()}catch(L){A=L,b=!0}var P=!1;if(!pt){var U=g;U&&(g=null,(b?U.reject:U.resolve)(A),P=!0)}if(b&&!P)throw A}}),f=!0,l||(bt=1,pt=B(),typeof Browser<"u"&&Browser.Jb.Xb&&Browser.Jb.pause(),Zt(()=>fi(pt)))}else bt===2?(bt=0,Zt(yi),St(pt),pt=null,$.forEach(b=>{if(!Pe)try{b(),Wt()}catch(A){xr(A)}})):Ut(`invalid state: ${bt}`);return mn}}function X(n){return q(l=>{n().then(l)})}var Y=[],ce={},ee=n=>{var l=ce[n];return l===void 0?ct(n):l},he=()=>typeof globalThis=="object"?globalThis:Function("return this")(),R=n=>{var l=Y.length;return Y.push(n),l},ie=(n,l)=>{for(var f=Array(n),b=0;b<n;++b)f[b]=cr(p()[l+4*b>>>2>>>0],"parameter "+b);return f},ve=(n,l)=>Object.defineProperty(l,"name",{value:n});function Xe(n){var l=Function;if(!(l instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof l} which is not a function`);var f=ve(l.name||"unknownFunctionName",function(){});return f.prototype=l.prototype,f=new f,n=l.apply(f,n),n instanceof Object?n:f}var lt=n=>n%4===0&&(n%100!==0||n%400===0),Lo=[0,31,60,91,121,152,182,213,244,274,305,335],Fo=[0,31,59,90,120,151,181,212,243,273,304,334];function qo(n,l,f,b,A,P,U){return T?Se(16,1,n,l,f,b,A,P,U):-52}function jo(n,l,f,b,A,P){if(T)return Se(17,1,n,l,f,b,A,P)}var Ko=n=>{var l=tt(n)+1,f=zr(l);return f&&Vt(n,f,l),f},Zn=[],Yo=(n,l)=>{Zn.length=0;for(var f;f=o()[n++>>>0];){var b=f!=105;b&=f!=112,l+=b&&l%8?4:0,Zn.push(f==112?p()[l>>>2>>>0]:f==106?ge[l>>>3]:f==105?a()[l>>>2>>>0]:h()[l>>>3>>>0]),l+=b?8:4}return Zn},Jn={},Zo=()=>{if(!Xn){var n={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:w||"./this.program"},l;for(l in Jn)Jn[l]===void 0?delete n[l]:n[l]=Jn[l];var f=[];for(l in n)f.push(`${l}=${n[l]}`);Xn=f}return Xn},Xn;function Jo(n,l){if(T)return Se(18,1,n,l);n>>>=0,l>>>=0;var f=0;return Zo().forEach((b,A)=>{var P=l+f;for(A=p()[n+4*A>>>2>>>0]=P,P=0;P<b.length;++P)r()[A++>>>0>>>0]=b.charCodeAt(P);r()[A>>>0>>>0]=0,f+=b.length+1}),0}function Xo(n,l){if(T)return Se(19,1,n,l);n>>>=0,l>>>=0;var f=Zo();p()[n>>>2>>>0]=f.length;var b=0;return f.forEach(A=>b+=A.length+1),p()[l>>>2>>>0]=b,0}function Qo(n){return T?Se(20,1,n):52}function ei(n,l,f,b){return T?Se(21,1,n,l,f,b):52}function ti(n,l,f,b){return T?Se(22,1,n,l,f,b):70}var Tl=[null,[],[]];function ri(n,l,f,b){if(T)return Se(23,1,n,l,f,b);l>>>=0,f>>>=0,b>>>=0;for(var A=0,P=0;P<f;P++){var U=p()[l>>>2>>>0],L=p()[l+4>>>2>>>0];l+=8;for(var Q=0;Q<L;Q++){var Z=o()[U+Q>>>0],fe=Tl[n];Z===0||Z===10?((n===1?Ue:$e)(_r(fe,0)),fe.length=0):fe.push(Z)}A+=L}return p()[b>>>2>>>0]=A,0}var ni=[31,29,31,30,31,30,31,31,30,31,30,31],oi=[31,28,31,30,31,30,31,31,30,31,30,31];function El(n){var l=Array(tt(n)+1);return Tr(n,l,0,l.length),l}var Pl=(n,l)=>{r().set(n,l>>>0)};function ii(n,l,f,b){function A(D,se,Ce){for(D=typeof D=="number"?D.toString():D||"";D.length<se;)D=Ce[0]+D;return D}function P(D,se){return A(D,se,"0")}function U(D,se){function Ce(Jt){return 0>Jt?-1:0<Jt?1:0}var it;return(it=Ce(D.getFullYear()-se.getFullYear()))===0&&(it=Ce(D.getMonth()-se.getMonth()))===0&&(it=Ce(D.getDate()-se.getDate())),it}function L(D){switch(D.getDay()){case 0:return new Date(D.getFullYear()-1,11,29);case 1:return D;case 2:return new Date(D.getFullYear(),0,3);case 3:return new Date(D.getFullYear(),0,2);case 4:return new Date(D.getFullYear(),0,1);case 5:return new Date(D.getFullYear()-1,11,31);case 6:return new Date(D.getFullYear()-1,11,30)}}function Q(D){var se=D.Ab;for(D=new Date(new Date(D.Bb+1900,0,1).getTime());0<se;){var Ce=D.getMonth(),it=(lt(D.getFullYear())?ni:oi)[Ce];if(se>it-D.getDate())se-=it-D.getDate()+1,D.setDate(1),11>Ce?D.setMonth(Ce+1):(D.setMonth(0),D.setFullYear(D.getFullYear()+1));else{D.setDate(D.getDate()+se);break}}return Ce=new Date(D.getFullYear()+1,0,4),se=L(new Date(D.getFullYear(),0,4)),Ce=L(Ce),0>=U(se,D)?0>=U(Ce,D)?D.getFullYear()+1:D.getFullYear():D.getFullYear()-1}n>>>=0,l>>>=0,f>>>=0,b>>>=0;var Z=p()[b+40>>>2>>>0];b={oc:a()[b>>>2>>>0],nc:a()[b+4>>>2>>>0],Gb:a()[b+8>>>2>>>0],Lb:a()[b+12>>>2>>>0],Hb:a()[b+16>>>2>>>0],Bb:a()[b+20>>>2>>>0],vb:a()[b+24>>>2>>>0],Ab:a()[b+28>>>2>>>0],wc:a()[b+32>>>2>>>0],mc:a()[b+36>>>2>>>0],pc:Z?De(Z):""},f=De(f),Z={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var fe in Z)f=f.replace(new RegExp(fe,"g"),Z[fe]);var ne="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),ye="January February March April May June July August September October November December".split(" ");Z={"%a":D=>ne[D.vb].substring(0,3),"%A":D=>ne[D.vb],"%b":D=>ye[D.Hb].substring(0,3),"%B":D=>ye[D.Hb],"%C":D=>P((D.Bb+1900)/100|0,2),"%d":D=>P(D.Lb,2),"%e":D=>A(D.Lb,2," "),"%g":D=>Q(D).toString().substring(2),"%G":D=>Q(D),"%H":D=>P(D.Gb,2),"%I":D=>(D=D.Gb,D==0?D=12:12<D&&(D-=12),P(D,2)),"%j":D=>{for(var se=0,Ce=0;Ce<=D.Hb-1;se+=(lt(D.Bb+1900)?ni:oi)[Ce++]);return P(D.Lb+se,3)},"%m":D=>P(D.Hb+1,2),"%M":D=>P(D.nc,2),"%n":()=>`\n`,"%p":D=>0<=D.Gb&&12>D.Gb?"AM":"PM","%S":D=>P(D.oc,2),"%t":()=>"	","%u":D=>D.vb||7,"%U":D=>P(Math.floor((D.Ab+7-D.vb)/7),2),"%V":D=>{var se=Math.floor((D.Ab+7-(D.vb+6)%7)/7);if(2>=(D.vb+371-D.Ab-2)%7&&se++,se)se==53&&(Ce=(D.vb+371-D.Ab)%7,Ce==4||Ce==3&&lt(D.Bb)||(se=1));else{se=52;var Ce=(D.vb+7-D.Ab-1)%7;(Ce==4||Ce==5&&lt(D.Bb%400-1))&&se++}return P(se,2)},"%w":D=>D.vb,"%W":D=>P(Math.floor((D.Ab+7-(D.vb+6)%7)/7),2),"%y":D=>(D.Bb+1900).toString().substring(2),"%Y":D=>D.Bb+1900,"%z":D=>{D=D.mc;var se=0<=D;return D=Math.abs(D)/60,(se?"+":"-")+("0000"+(D/60*100+D%60)).slice(-4)},"%Z":D=>D.pc,"%%":()=>"%"},f=f.replace(/%%/g,"\\0\\0");for(fe in Z)f.includes(fe)&&(f=f.replace(new RegExp(fe,"g"),Z[fe](b)));return f=f.replace(/\\0\\0/g,"%"),fe=El(f),fe.length>l?0:(Pl(fe,n),fe.length-1)}me.Ib();for(var ai=Array(256),fn=0;256>fn;++fn)ai[fn]=String.fromCharCode(fn);kr=ai,rt=d.BindingError=class extends Error{constructor(n){super(n),this.name="BindingError"}},d.InternalError=class extends Error{constructor(n){super(n),this.name="InternalError"}},Object.assign(ur.prototype,{get(n){return this.wb[n]},has(n){return this.wb[n]!==void 0},Kb(n){var l=this.Nb.pop()||this.wb.length;return this.wb[l]=n,l},Mb(n){this.wb[n]=void 0,this.Nb.push(n)}}),nt.wb.push({value:void 0},{value:null},{value:!0},{value:!1}),nt.Db=nt.wb.length,d.count_emval_handles=()=>{for(var n=0,l=nt.Db;l<nt.wb.length;++l)nt.wb[l]!==void 0&&++n;return n};var Ol=[st,Kr,Ir,Zr,yt,Er,Pr,Jr,ir,Xr,Qr,en,tn,Or,jt,rn,qo,jo,Jo,Xo,Qo,ei,ti,ri],kl={ua:function(n,l,f){return X(async()=>{await d.cc(n,l,f)})},b:function(n,l,f){throw n>>>=0,new jn(n).Ib(l>>>0,f>>>0),Yr=n,Ar++,Yr},ga:function(n){li(n>>>0,!C,1,!E,131072,!1),me.Tb()},F:function(n){n>>>=0,T?postMessage({cmd:"cleanupThread",thread:n}):me.Rb(me.pb[n])},Y:qt,z:Zr,ma:yt,U:Er,W:Pr,N:Jr,ka:ir,da:Xr,ja:Qr,H:en,V:tn,S:Or,la:jt,T:rn,K:function(n,l,f,b,A){n>>>=0,l>>>=0,f>>>=0,l=ct(l);var P=l.indexOf("u")!=-1;P&&(A=(1n<<64n)-1n),ft(n,{name:l,fromWireType:U=>U,toWireType:function(U,L){if(typeof L!="bigint"&&typeof L!="number")throw new TypeError(`Cannot convert "${ar(L)}" to ${this.name}`);if(L<b||L>A)throw new TypeError(`Passing a number "${ar(L)}" from JS side to C/C++ side to an argument of type "${l}", which is outside the valid range [${b}, ${A}]!`);return L},argPackAdvance:8,readValueFromPointer:Dr(l,f,!P),Cb:null})},sa:function(n,l,f,b){n>>>=0,l=ct(l>>>0),ft(n,{name:l,fromWireType:function(A){return!!A},toWireType:function(A,P){return P?f:b},argPackAdvance:8,readValueFromPointer:function(A){return this.fromWireType(o()[A>>>0])},Cb:null})},ra:function(n,l){n>>>=0,l=ct(l>>>0),ft(n,{name:l,fromWireType:f=>{var b=Je(f);return Kt(f),b},toWireType:(f,b)=>ot(b),argPackAdvance:8,readValueFromPointer:on,Cb:null})},J:function(n,l,f){n>>>=0,f>>>=0,l=ct(l>>>0),ft(n,{name:l,fromWireType:b=>b,toWireType:(b,A)=>A,argPackAdvance:8,readValueFromPointer:an(l,f),Cb:null})},v:function(n,l,f,b,A){if(n>>>=0,f>>>=0,l=ct(l>>>0),A===-1&&(A=4294967295),A=L=>L,b===0){var P=32-8*f;A=L=>L<<P>>>P}var U=l.includes("unsigned")?function(L,Q){return Q>>>0}:function(L,Q){return Q};ft(n,{name:l,fromWireType:A,toWireType:U,argPackAdvance:8,readValueFromPointer:Dr(l,f,b!==0),Cb:null})},o:function(n,l,f){function b(P){var U=p()[P>>>2>>>0];return P=p()[P+4>>>2>>>0],new A(r().buffer,P,U)}n>>>=0;var A=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][l];f=ct(f>>>0),ft(n,{name:f,fromWireType:b,argPackAdvance:8,readValueFromPointer:b},{Yb:!0})},L:function(n,l){n>>>=0,l=ct(l>>>0);var f=l==="std::string";ft(n,{name:l,fromWireType:function(b){var A=p()[b>>>2>>>0],P=b+4;if(f)for(var U=P,L=0;L<=A;++L){var Q=P+L;if(L==A||o()[Q>>>0]==0){if(U=De(U,Q-U),Z===void 0)var Z=U;else Z+=String.fromCharCode(0),Z+=U;U=Q+1}}else{for(Z=Array(A),L=0;L<A;++L)Z[L]=String.fromCharCode(o()[P+L>>>0]);Z=Z.join("")}return St(b),Z},toWireType:function(b,A){A instanceof ArrayBuffer&&(A=new Uint8Array(A));var P=typeof A=="string";if(!(P||A instanceof Uint8Array||A instanceof Uint8ClampedArray||A instanceof Int8Array))throw new rt("Cannot pass non-string to std::string");var U=f&&P?tt(A):A.length,L=zr(4+U+1),Q=L+4;if(p()[L>>>2>>>0]=U,f&&P)Vt(A,Q,U+1);else if(P)for(P=0;P<U;++P){var Z=A.charCodeAt(P);if(255<Z)throw St(Q),new rt("String has UTF-16 code units that do not fit in 8 bits");o()[Q+P>>>0]=Z}else for(P=0;P<U;++P)o()[Q+P>>>0]=A[P];return b!==null&&b.push(St,L),L},argPackAdvance:8,readValueFromPointer:sn,Cb(b){St(b)}})},B:function(n,l,f){if(n>>>=0,l>>>=0,f>>>=0,f=ct(f),l===2)var b=ln,A=dn,P=lr,U=()=>u(),L=1;else l===4&&(b=Yn,A=le,P=cn,U=()=>p(),L=2);ft(n,{name:f,fromWireType:Q=>{for(var Z=p()[Q>>>2>>>0],fe=U(),ne,ye=Q+4,D=0;D<=Z;++D){var se=Q+4+D*l;(D==Z||fe[se>>>L]==0)&&(ye=b(ye,se-ye),ne===void 0?ne=ye:(ne+=String.fromCharCode(0),ne+=ye),ye=se+l)}return St(Q),ne},toWireType:(Q,Z)=>{if(typeof Z!="string")throw new rt(`Cannot pass non-string to C++ string type ${f}`);var fe=P(Z),ne=zr(4+fe+l);return p()[ne>>>2]=fe>>L,A(Z,ne+4,fe+l),Q!==null&&Q.push(St,ne),ne},argPackAdvance:8,readValueFromPointer:on,Cb(Q){St(Q)}})},ta:function(n,l){n>>>=0,l=ct(l>>>0),ft(n,{Zb:!0,name:l,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},qa:()=>1,Q:function(n,l){n>>>=0,n==l>>>0?setTimeout(()=>Yt()):T?postMessage({targetThread:n,cmd:"checkMailbox"}):(n=me.pb[n])&&n.postMessage({cmd:"checkMailbox"})},Z:function(n,l,f,b){l>>>=0,f/=2,dr.length=f,b=b>>>0>>>3;for(var A=0;A<f;A++)dr[A]=ge[b+2*A]?ge[b+2*A+1]:h()[b+2*A+1>>>0];return n=0>n?Ft[-n-1]:Ol[n],me.Wb=l,l=n.apply(null,dr),me.Wb=0,l},fa:ut,pa:function(n){_&&me.pb[n>>>0].ref()},t:function(n,l,f){return l>>>=0,f>>>=0,n=Je(n>>>0),l=cr(l,"emval::as"),Br(l,f,n)},y:function(n){return n>>>=0,X(()=>(n=Je(n),n.then(ot)))},p:function(n,l,f,b){return f>>>=0,b>>>=0,n=Y[n>>>0],l=Je(l>>>0),n(null,l,f,b)},k:function(n,l,f,b,A){return f>>>=0,b>>>=0,A>>>=0,n=Y[n>>>0],l=Je(l>>>0),f=ee(f),n(l,l[f],b,A)},c:Kt,C:function(n,l){return l>>>=0,n=Je(n>>>0),l=Je(l),n==l},n:function(n){return n>>>=0,n===0?ot(he()):(n=ee(n),ot(he()[n]))},j:function(n,l,f){l=ie(n,l>>>0);var b=l.shift();n--;var A=`return function (obj, func, destructorsRef, args) {\n`,P=0,U=[];f===0&&U.push("obj");for(var L=["retType"],Q=[b],Z=0;Z<n;++Z)U.push("arg"+Z),L.push("argType"+Z),Q.push(l[Z]),A+=`  var arg${Z} = argType${Z}.readValueFromPointer(args${P?"+"+P:""});\n`,P+=l[Z].argPackAdvance;for(A+=`  var rv = ${f===1?"new func":"func.call"}(${U.join(", ")});\n`,Z=0;Z<n;++Z)l[Z].deleteObject&&(A+=`  argType${Z}.deleteObject(arg${Z});\n`);return b.Zb||(L.push("emval_returnValue"),Q.push(Br),A+=`  return emval_returnValue(retType, destructorsRef, rv);\n`),L.push(A+`};\n`),n=Xe(L).apply(null,Q),f=`methodCaller<(${l.map(fe=>fe.name).join(", ")}) => ${b.name}>`,R(ve(f,n))},s:function(n,l){return l>>>=0,n=Je(n>>>0),l=Je(l),ot(n[l])},e:function(n){n>>>=0,4<n&&(nt.get(n).Qb+=1)},w:function(){return ot([])},m:function(n){n=Je(n>>>0);for(var l=Array(n.length),f=0;f<n.length;f++)l[f]=n[f];return ot(l)},g:function(n){return ot(ee(n>>>0))},l:function(){return ot({})},i:function(n){n>>>=0;for(var l=Je(n);l.length;){var f=l.pop();l.pop()(f)}Kt(n)},h:function(n,l,f){l>>>=0,f>>>=0,n=Je(n>>>0),l=Je(l),f=Je(f),n[l]=f},d:function(n,l){return l>>>=0,n=cr(n>>>0,"_emval_take_value"),n=n.readValueFromPointer(l),ot(n)},aa:function(n,l){n=-9007199254740992>n||9007199254740992<n?NaN:Number(n),l>>>=0,n=new Date(1e3*n),a()[l>>>2>>>0]=n.getUTCSeconds(),a()[l+4>>>2>>>0]=n.getUTCMinutes(),a()[l+8>>>2>>>0]=n.getUTCHours(),a()[l+12>>>2>>>0]=n.getUTCDate(),a()[l+16>>>2>>>0]=n.getUTCMonth(),a()[l+20>>>2>>>0]=n.getUTCFullYear()-1900,a()[l+24>>>2>>>0]=n.getUTCDay(),n=(n.getTime()-Date.UTC(n.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,a()[l+28>>>2>>>0]=n},ba:function(n,l){n=-9007199254740992>n||9007199254740992<n?NaN:Number(n),l>>>=0,n=new Date(1e3*n),a()[l>>>2>>>0]=n.getSeconds(),a()[l+4>>>2>>>0]=n.getMinutes(),a()[l+8>>>2>>>0]=n.getHours(),a()[l+12>>>2>>>0]=n.getDate(),a()[l+16>>>2>>>0]=n.getMonth(),a()[l+20>>>2>>>0]=n.getFullYear()-1900,a()[l+24>>>2>>>0]=n.getDay();var f=(lt(n.getFullYear())?Lo:Fo)[n.getMonth()]+n.getDate()-1|0;a()[l+28>>>2>>>0]=f,a()[l+36>>>2>>>0]=-(60*n.getTimezoneOffset()),f=new Date(n.getFullYear(),6,1).getTimezoneOffset();var b=new Date(n.getFullYear(),0,1).getTimezoneOffset();n=(f!=b&&n.getTimezoneOffset()==Math.min(b,f))|0,a()[l+32>>>2>>>0]=n},ca:function(n){n>>>=0;var l=new Date(a()[n+20>>>2>>>0]+1900,a()[n+16>>>2>>>0],a()[n+12>>>2>>>0],a()[n+8>>>2>>>0],a()[n+4>>>2>>>0],a()[n>>>2>>>0],0),f=a()[n+32>>>2>>>0],b=l.getTimezoneOffset(),A=new Date(l.getFullYear(),6,1).getTimezoneOffset(),P=new Date(l.getFullYear(),0,1).getTimezoneOffset(),U=Math.min(P,A);return 0>f?a()[n+32>>>2>>>0]=+(A!=P&&U==b):0<f!=(U==b)&&(A=Math.max(P,A),l.setTime(l.getTime()+6e4*((0<f?U:A)-b))),a()[n+24>>>2>>>0]=l.getDay(),f=(lt(l.getFullYear())?Lo:Fo)[l.getMonth()]+l.getDate()-1|0,a()[n+28>>>2>>>0]=f,a()[n>>>2>>>0]=l.getSeconds(),a()[n+4>>>2>>>0]=l.getMinutes(),a()[n+8>>>2>>>0]=l.getHours(),a()[n+12>>>2>>>0]=l.getDate(),a()[n+16>>>2>>>0]=l.getMonth(),a()[n+20>>>2>>>0]=l.getYear(),n=l.getTime(),isNaN(n)?(a()[si()>>>2>>>0]=61,n=-1):n/=1e3,BigInt(n)},_:qo,$:jo,P:function(n,l,f){function b(Z){return(Z=Z.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?Z[1]:"GMT"}n>>>=0,l>>>=0,f>>>=0;var A=new Date().getFullYear(),P=new Date(A,0,1),U=new Date(A,6,1);A=P.getTimezoneOffset();var L=U.getTimezoneOffset(),Q=Math.max(A,L);p()[n>>>2>>>0]=60*Q,a()[l>>>2>>>0]=+(A!=L),n=b(P),l=b(U),n=Ko(n),l=Ko(l),L<A?(p()[f>>>2>>>0]=n,p()[f+4>>>2>>>0]=l):(p()[f>>>2>>>0]=l,p()[f+4>>>2>>>0]=n)},q:()=>{Ut("")},f:function(n,l,f){return n>>>=0,l=Yo(l>>>0,f>>>0),Ft[n].apply(null,l)},M:function(n,l,f){return n>>>=0,l=Yo(l>>>0,f>>>0),Ft[n].apply(null,l)},G:()=>{},I:()=>Date.now(),oa:()=>{throw Ze+=1,"unwind"},R:function(){return 4294901760},u:()=>performance.timeOrigin+performance.now(),x:()=>_?(Ai(),pr(Ci)).cpus().length:navigator.hardwareConcurrency,O:function(n){n>>>=0;var l=o().length;if(n<=l||4294901760<n)return!1;for(var f=1;4>=f;f*=2){var b=l*(1+.2/f);b=Math.min(b,n+100663296);var A=Math;b=Math.max(n,b);e:{A=(A.min.call(A,4294901760,b+(65536-b%65536)%65536)-we.buffer.byteLength+65535)/65536;try{we.grow(A),Ne();var P=1;break e}catch{}P=void 0}if(P)return!0}return!1},ha:Jo,ia:Xo,X:nr,A:Qo,E:ei,ea:ti,D:ri,a:we||d.wasmMemory,na:ii,r:function(n,l,f,b){return ii(n>>>0,l>>>0,f>>>0,b>>>0)}},re=function(){function n(f,b){return re=f.exports,re=pn(),re=Rl(),me.Ub.push(re.bb),He.unshift(re.va),de=b,yr(),re}var l={a:kl};if(gt++,d.instantiateWasm)try{return d.instantiateWasm(l,n)}catch(f){$e(`Module.instantiateWasm callback failed with error: ${f}`),v(f)}return wr(l,function(f){n(f.instance,f.module)}).catch(v),{}}();d._OrtInit=(n,l)=>(d._OrtInit=re.wa)(n,l),d._OrtGetLastError=(n,l)=>(d._OrtGetLastError=re.xa)(n,l),d._OrtCreateSessionOptions=(n,l,f,b,A,P,U,L,Q,Z)=>(d._OrtCreateSessionOptions=re.ya)(n,l,f,b,A,P,U,L,Q,Z),d._OrtAppendExecutionProvider=(n,l)=>(d._OrtAppendExecutionProvider=re.za)(n,l),d._OrtAddFreeDimensionOverride=(n,l,f)=>(d._OrtAddFreeDimensionOverride=re.Aa)(n,l,f),d._OrtAddSessionConfigEntry=(n,l,f)=>(d._OrtAddSessionConfigEntry=re.Ba)(n,l,f),d._OrtReleaseSessionOptions=n=>(d._OrtReleaseSessionOptions=re.Ca)(n),d._OrtCreateSession=(n,l,f)=>(d._OrtCreateSession=re.Da)(n,l,f),d._OrtReleaseSession=n=>(d._OrtReleaseSession=re.Ea)(n),d._OrtGetInputOutputCount=(n,l,f)=>(d._OrtGetInputOutputCount=re.Fa)(n,l,f),d._OrtGetInputName=(n,l)=>(d._OrtGetInputName=re.Ga)(n,l),d._OrtGetOutputName=(n,l)=>(d._OrtGetOutputName=re.Ha)(n,l),d._OrtFree=n=>(d._OrtFree=re.Ia)(n),d._OrtCreateTensor=(n,l,f,b,A,P)=>(d._OrtCreateTensor=re.Ja)(n,l,f,b,A,P),d._OrtGetTensorData=(n,l,f,b,A)=>(d._OrtGetTensorData=re.Ka)(n,l,f,b,A),d._OrtReleaseTensor=n=>(d._OrtReleaseTensor=re.La)(n),d._OrtCreateRunOptions=(n,l,f,b)=>(d._OrtCreateRunOptions=re.Ma)(n,l,f,b),d._OrtAddRunConfigEntry=(n,l,f)=>(d._OrtAddRunConfigEntry=re.Na)(n,l,f),d._OrtReleaseRunOptions=n=>(d._OrtReleaseRunOptions=re.Oa)(n),d._OrtCreateBinding=n=>(d._OrtCreateBinding=re.Pa)(n),d._OrtBindInput=(n,l,f)=>(d._OrtBindInput=re.Qa)(n,l,f),d._OrtBindOutput=(n,l,f,b)=>(d._OrtBindOutput=re.Ra)(n,l,f,b),d._OrtClearBoundOutputs=n=>(d._OrtClearBoundOutputs=re.Sa)(n),d._OrtReleaseBinding=n=>(d._OrtReleaseBinding=re.Ta)(n),d._OrtRunWithBinding=(n,l,f,b,A)=>(d._OrtRunWithBinding=re.Ua)(n,l,f,b,A),d._OrtRun=(n,l,f,b,A,P,U,L)=>(d._OrtRun=re.Va)(n,l,f,b,A,P,U,L),d._OrtEndProfiling=n=>(d._OrtEndProfiling=re.Wa)(n),d._JsepOutput=(n,l,f)=>(d._JsepOutput=re.Xa)(n,l,f),d._JsepGetNodeName=n=>(d._JsepGetNodeName=re.Ya)(n);var si=()=>(si=re.Za)(),hn=d._pthread_self=()=>(hn=d._pthread_self=re._a)(),zr=d._malloc=n=>(zr=d._malloc=re.$a)(n),St=d._free=n=>(St=d._free=re.ab)(n);d.__emscripten_tls_init=()=>(d.__emscripten_tls_init=re.bb)();var ui=n=>(ui=re.cb)(n);d.__embind_initialize_bindings=()=>(d.__embind_initialize_bindings=re.db)();var li=d.__emscripten_thread_init=(n,l,f,b,A,P)=>(li=d.__emscripten_thread_init=re.fb)(n,l,f,b,A,P);d.__emscripten_thread_crashed=()=>(d.__emscripten_thread_crashed=re.gb)();var di=(n,l,f,b)=>(di=re.hb)(n,l,f,b),Qn=n=>(Qn=re.ib)(n),eo=d.__emscripten_thread_exit=n=>(eo=d.__emscripten_thread_exit=re.jb)(n),ci=()=>(ci=re.kb)(),pi=(n,l)=>(pi=re.lb)(n,l),to=()=>(to=re.mb)(),gn=n=>(gn=re.nb)(n),ro=n=>(ro=re.ob)(n),mi=d.dynCall_ii=(n,l)=>(mi=d.dynCall_ii=re.qb)(n,l),fi=n=>(fi=re.rb)(n),hi=()=>(hi=re.sb)(),gi=n=>(gi=re.tb)(n),yi=()=>(yi=re.ub)();d.___start_em_js=1393348,d.___stop_em_js=1393509;function Rl(){var n=re;n=Object.assign({},n);var l=b=>()=>b()>>>0,f=b=>A=>b(A)>>>0;return n.Za=l(n.Za),n._a=l(n._a),n.$a=f(n.$a),n.cb=f(n.cb),n.emscripten_main_runtime_thread_id=l(n.emscripten_main_runtime_thread_id),n.mb=l(n.mb),n.ob=f(n.ob),n}d.wasmMemory=we,d.stackAlloc=ro,d.stackSave=to,d.stackRestore=gn,d.keepRuntimeAlive=()=>0<Ze,d.UTF8ToString=De,d.stringToUTF8=Vt,d.lengthBytesUTF8=tt,d.ExitStatus=vr,d.PThread=me;var yn;Lt=function n(){yn||bi(),yn||(Lt=n)};function bi(){if(!(0<gt))if(T)y(d),T||or(He),startWorker(d);else{if(d.preRun)for(typeof d.preRun=="function"&&(d.preRun=[d.preRun]);d.preRun.length;)Fe.unshift(d.preRun.shift());or(Fe),0<gt||yn||(yn=!0,d.calledRun=!0,Pe||(T||or(He),y(d),T||or(Rt)))}}return bi(),t.ready}})();typeof Ti=="object"&&typeof lo=="object"?lo.exports=Ii:typeof define=="function"&&define.amd&&define([],()=>Ii)});var Pi=Ur((Np,Hl)=>{Hl.exports=\'"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs"),vm=require("vm");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,"utf8"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed?.(),a}}self.onmessage=handleMessage;\\n\'});var mo,Nt,Wr,vn,Nr,Mi,fo,be=J(()=>{"use strict";mo=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},Nt=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},Wr=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],vn=e=>{switch(e){case"float16":return Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},Nr=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},Mi=e=>e==="float32"||e==="int32"||e==="int64"||e==="bool"||e==="float16"||e==="uint32",fo=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}});var $n=J(()=>{});var Ui=J(()=>{$n()});var Vi,Wi=J(()=>{Vi="1.18.0"});var Ni,Xt,ho=J(()=>{Wi();Ni="warning",Xt={wasm:{},webgl:{},webgpu:{},versions:{common:Vi},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);Ni=e}},get logLevel(){return Ni}};Object.defineProperty(Xt,"logLevel",{enumerable:!0})});var mr,Hi=J(()=>{ho();mr=Xt});var Gi=J(()=>{});var Li=J(()=>{_n()});var qi=J(()=>{});var ji=J(()=>{_n()});var _n=J(()=>{Gi();Li();qi();ji()});var Sn=J(()=>{_n()});var go,Ki,Qt,er,yo=J(()=>{ho();go=(e,t)=>{Xt.wasm.trace&&console.timeStamp(`${e}::ORT::${t}`)},Ki=(e,t)=>{let r=new Error().stack?.split(/\\r\\n|\\r|\\n/g)||[],o=!1;for(let i=0;i<r.length;i++){if(o&&!r[i].includes("TRACE_FUNC")){let u=`FUNC_${e}::${r[i].trim().split(" ")[1]}`;t&&(u+=`::${t}`),go("CPU",u);return}r[i].includes("TRACE_FUNC")&&(o=!0)}},Qt=e=>{Xt.wasm.trace&&Ki("BEGIN",e)},er=e=>{Xt.wasm.trace&&Ki("END",e)}});var Yi=J(()=>{$n();Sn();yo()});var Zi=J(()=>{Yi()});var Ji=J(()=>{});var Xi=J(()=>{$n();Sn()});var Qi=J(()=>{Xi()});var fr=J(()=>{Ui();Hi();Zi();Sn();yo();Ji();Qi()});var Ql,ed,ea,ta,ra,td,ze,Ht=J(()=>{"use strict";be();Ql=["V","I","W","E","F"],ed=(e,t)=>{console.log(`[${Ql[e]},${new Date().toISOString()}]${t}`)},ra=(e,t)=>{ea=e,ta=t},td=(e,t)=>{let r=Nr(e),o=Nr(ea);r>=o&&ed(r,typeof t=="function"?t():t)},ze=(...e)=>{ta&&td(...e)}});var na,oa=J(()=>{"use strict";be();na=(e,t)=>new(vn(t))(e)});var xn=J(()=>{"use strict"});var Cn,rd,ia,wo,bo,sa,ua=J(()=>{"use strict";Ht();xn();Cn=e=>Math.ceil(e/16)*16,rd=1,ia=()=>rd++,wo=async(e,t,r,o)=>{let i=Cn(r),u=e.device.createBuffer({size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let a=e.getCommandEncoder();e.endComputePass(),a.copyBufferToBuffer(t,0,u,0,i),e.flush(),await u.mapAsync(GPUMapMode.READ);let p=u.getMappedRange();if(o){let m=o();return m.set(new Uint8Array(p,0,r)),m}else return new Uint8Array(p.slice(0,r))}finally{u.destroy()}},bo=class{constructor(t){this.backend=t;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map,this.capturedPendingBuffers=new Map}upload(t,r){let o=r.buffer,i=r.byteOffset,u=r.byteLength,a=Cn(u),p=this.storageCache.get(t);if(!p)throw new Error("gpu data for uploading does not exist");if(p.originalSize!==u)throw new Error(`inconsistent data size. gpu data size=${p.originalSize}, data size=${u}`);let m=this.backend.device.createBuffer({mappedAtCreation:!0,size:a,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),h=m.getMappedRange();new Uint8Array(h).set(new Uint8Array(o,i,u)),m.unmap();let d=this.backend.getCommandEncoder();this.backend.endComputePass(),d.copyBufferToBuffer(m,0,p.gpuData.buffer,0,a),ze("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${t})`),this.buffersForUploadingPending.push(m)}memcpy(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("source gpu data for memcpy does not exist");let i=this.storageCache.get(r);if(!i)throw new Error("destination gpu data for memcpy does not exist");if(o.originalSize!==i.originalSize)throw new Error("inconsistent source and destination gpu data size");let u=Cn(o.originalSize),a=this.backend.getCommandEncoder();this.backend.endComputePass(),a.copyBufferToBuffer(o.gpuData.buffer,0,i.gpuData.buffer,0,u)}registerExternalBuffer(t,r,o){let i;if(o){if(i=this.externalBuffers.get(o),i===void 0)throw new Error("previous buffer is not registered");if(t===o)return ze("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${i}, buffer is the same, skip.`),i;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.\n             Please use the previous external buffer!`);this.externalBuffers.delete(o)}else i=ia();return this.storageCache.set(i,{gpuData:{id:i,type:0,buffer:t},originalSize:r}),this.externalBuffers.set(t,i),ze("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${i}, registered.`),i}unregisterExternalBuffer(t){let r=this.externalBuffers.get(t);r!==void 0&&(this.storageCache.delete(r),this.externalBuffers.delete(t),ze("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${r}`))}create(t,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let o=Cn(t),i,u=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,a=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(u||a){let m=u?this.freeBuffers:this.freeUniformBuffers,h=m.get(o);h||(h=[],m.set(o,h)),h.length>0?i=h.pop():i=this.backend.device.createBuffer({size:o,usage:r})}else i=this.backend.device.createBuffer({size:o,usage:r});let p={id:ia(),type:0,buffer:i};return this.storageCache.set(p.id,{gpuData:p,originalSize:t}),ze("verbose",()=>`[WebGPU] GpuDataManager.create(size=${t}) => id=${p.id}`),p}get(t){return this.storageCache.get(t)?.gpuData}release(t){let r=this.storageCache.get(t);if(!r)throw new Error("releasing data does not exist");return ze("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${r.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(r.gpuData.buffer),r.originalSize}async download(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("data does not exist");await wo(this.backend,o.gpuData.buffer,o.originalSize,r)}refreshPendingBuffers(){for(let t of this.buffersForUploadingPending)t.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let t of this.buffersPending)(t.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(t.size).push(t):(t.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(t.size).push(t):t.destroy();this.buffersPending=[]}else{let t=this.capturedPendingBuffers.get(this.backend.currentSessionId);t||(t=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,t));for(let r of this.buffersPending)t.push(r);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(t){let r=this.capturedPendingBuffers.get(t);r&&(r.forEach(o=>{o.destroy()}),this.capturedPendingBuffers.delete(t))}},sa=(...e)=>new bo(...e)});var vo,Te,Qe=J(()=>{"use strict";vo=class{constructor(t){Object.assign(this,t)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(t=>`${this[t]}`).join(";")),this.key}},Te=e=>new vo(e)});var $o,xt,W,tr,An,In,Tn,Ee=J(()=>{"use strict";$o=class{static calcMatMulShape(t,r){return t[1]!==r[0]?void 0:[t[0],r[1]]}},xt=class{static calcShape(t,r,o=!1){let i=t.length,u=r.length;if(i===0)return r;if(u===0)return t;let a=Math.max(t.length,r.length),p=new Array(a);if(o){if(i<2||u<2)return;let m=$o.calcMatMulShape([t[i-2],t[i-1]],[r[u-2],r[u-1]]);if(m===void 0)return;[p[a-2],p[a-1]]=m}for(let m=o?3:1;m<=a;m++){let h=i-m<0?1:t[i-m],d=u-m<0?1:r[u-m];if(h!==d&&h>1&&d>1)return;p[a-m]=Math.max(h,d)}return p}static isValidBroadcast(t,r){let o=t.length,i=r.length;if(o>i)return!1;for(let u=1;u<=o;u++)if(t[o-u]!==1&&t[o-u]!==r[i-u])return!1;return!0}},W=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,o){let i=1;for(let u=r;u<o;u++){if(t[u]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");i*=t[u]}return i}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let o=new Array(r);o[r-1]=1,o[r-2]=t[r-1];for(let i=r-3;i>=0;--i)o[i]=o[i+1]*t[i+1];return o}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(o=>this.normalizeAxis(o,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(o=>t[o]):t.slice().reverse()}static padShape(t,r){let o=t.length;return t.map((i,u)=>i+r[u]+r[u+o])}static areEqual(t,r){return t.length!==r.length?!1:t.every((o,i)=>o===r[i])}},tr=class e{static adjustPoolAttributes(t,r,o,i,u,a){if(!t&&o.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let p=0;p<r.length-2;p++)p>=o.length?o.push(r[p+2]):o[p]=r[p+2];for(let p=0;p<o.length;p++)if(p<i.length){if(i[p]<0)throw new Error("strides should be greater than or equal to 1")}else i.push(1);for(let p=0;p<o.length;p++)if(p<u.length){if(u[p]<0)throw new Error("dilations should be greater than or equal to 1")}else u.push(1);for(let p=0;p<o.length*2;p++)if(p<a.length){if(a[p]<0)throw new Error("pad should be greater than or equal to 1")}else a.push(0);for(let p=0;p<o.length;p++){if(o[p]<=0)throw new Error("kernel shapes need to be greater than 0");if(a[p]>=o[p]||a[p+o.length]>=o[p])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,o,i,u,a,p){if(p){if(u.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(i.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let m=0;m<t.length-2;m++)e.adjustPadAndReturnShape(t[m+(a?1:2)],r[m],o[m],i[m],u,m,m+t.length-2,p)}}static computePoolOutputShape(t,r,o,i,u,a,p){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let m=[r[0],r[1]];return e.computeShapeHelper(t,r,m,o,i,u,a,p),m}static computeConvOutputShape(t,r,o,i,u,a,p){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let m=[t[0],r[0]];return e.computeShapeHelper(!1,t,m,o,i,u,a,p),m}static computeShapeHelper(t,r,o,i,u,a,p,m){if(t)for(let h=0;h<r.length-2;h++)o.push(1);else for(let h=0;h<r.length-2;h++)o.push(e.adjustPadAndReturnShape(r[h+2],i[h],u[h],a[h],p,h,h+r.length-2,m))}static adjustPadAndReturnShape(t,r,o,i,u,a,p,m){let h=o*(i-1)+1;if(m&&m!=="NOTSET")switch(m){case"VALID":return u[a]=0,u[p]=0,Math.floor((t-h)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(o!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let y=((t+r-1)/r-1)*r+i-t;return u[a]=Math.floor(m==="SAME_LOWER"?(y+1)/2:y/2),u[p]=y-u[a],Math.floor((t+y-i)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+u[a]+u[p]-h)/r+1)}},An=class{static getShapeOfGemmResult(t,r,o,i,u){if(t.length!==2||o.length!==2)throw new Error("shape need to be of size 2");let a,p,m;r?(a=t[1],p=t[0]):(a=t[0],p=t[1]);let h=-1;if(i?(m=o[0],h=1):(m=o[1],h=0),o[h]!==p)throw new Error("dimension mismatch");if(a<=0||m<=0||p<=0)throw new Error("invalid shape specified");if(u&&!xt.isValidBroadcast(u,[a,m]))throw new Error("gemm: invalid bias shape for broadcast");return[a,m,p]}},In=-34028234663852886e22,Tn=34028234663852886e22});var nd,So,Ge,wt,G,Le,et,vt,dt,pe,xo,V,K,En,_o,la,hr,Ie=J(()=>{"use strict";be();Ee();nd=64,So=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}},Ge=(e,t=1)=>{let r=So(e,t);return typeof r=="string"?r:r[0]},wt=(e,t=1)=>{let r=So(e,t);return typeof r=="string"?r:r[1]},G=e=>e.length===0?[]:[{type:12,data:e},{type:12,data:W.computeStrides(e)}],Le=e=>e%4===0?4:e%2===0?2:1,et=(e="f32",t,r="0")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,vt=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}f(${r})`,dt=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,pe=(e,t,r,o)=>e.startsWith("uniforms.")&&r>4?typeof t=="string"?o==="f16"?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:o==="f16"?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:r>1?`${e}[${t}]`:e,xo=(e,t,r,o,i)=>{let u=typeof r=="number",a=u?r:r.length,p=[...new Array(a).keys()],m=a<2?"u32":a<=4?`vec${a}<u32>`:`array<u32, ${a}>`,h=So(t,i),d=typeof h=="string"?h:h[1],y=typeof h=="string"?h:h[0],v={indices:m,value:d,storage:y,tensor:t},S=F=>typeof F=="string"?F:`${F}u`,w={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},x=u?"uniforms.":"",E=`${x}${e}_shape`,C=`${x}${e}_strides`,_="";for(let F=0;F<a-1;F++)_+=`\n    let dim${F} = current / ${pe(C,F,a)};\n    let rest${F} = current % ${pe(C,F,a)};\n    indices[${F}] = dim${F};\n    current = rest${F};\n    `;_+=`indices[${a-1}] = current;`;let T=a<2?"":`\n  fn o2i_${e}(offset: u32) -> ${v.indices} {\n    var indices: ${v.indices};\n    var current = offset;\n    ${_}\n    return indices;\n  }`,O=F=>(w.offsetToIndices=!0,a<2?F:`o2i_${e}(${F})`),z=[];if(a>=2)for(let F=a-1;F>=0;F--)z.push(`${pe(C,F,a)} * (indices[${F}])`);let M=a<2?"":`\n  fn i2o_${e}(indices: ${v.indices}) -> u32 {\n    return ${z.join("+")};\n  }`,N=F=>(w.indicesToOffset=!0,a<2?F:`i2o_${e}(${F})`),j=(...F)=>a===0?"0u":`${v.indices}(${F.map(S).join(",")})`,ue=(F,ae)=>a<2?`${F}`:`${pe(F,ae,a)}`,k=(F,ae,ge)=>a<2?`${F}=${ge};`:`${pe(F,ae,a)}=${ge};`,te={},Be=(F,ae)=>{w.broadcastedIndicesToOffset=!0;let ge=`${ae.name}broadcastedIndicesTo${e}Offset`;if(ge in te)return`${ge}(${F})`;let ht=[];for(let Ye=a-1;Ye>=0;Ye--){let Ne=ae.indicesGet("outputIndices",Ye+ae.rank-a);ht.push(`${ue(C,Ye)} * (${Ne} % ${ue(E,Ye)})`)}return te[ge]=`fn ${ge}(outputIndices: ${ae.type.indices}) -> u32 {\n             return ${ht.length>0?ht.join("+"):"0u"};\n           }`,`${ge}(${F})`},Ue=(F,ae)=>(()=>{if(v.storage===v.value)return`${e}[${F}]=${ae};`;if(v.storage==="vec2<u32>"&&v.value==="i32")return`${e}[${F}]=vec2<u32>(u32(${ae}), select(0u, 0xFFFFFFFFu, ${ae} < 0));`;if(v.storage==="vec2<u32>"&&v.value==="u32")return`${e}[${F}]=vec2<u32>(u32(${ae}), 0u);`;if(v.storage==="u32"&&v.value==="vec4<bool>")return`${e}[${F}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${ae}));`;throw new Error(`not supported combination of storage type ${v.storage} and value type ${v.value} yet`)})(),$e=F=>(()=>{if(v.storage===v.value)return`${e}[${F}]`;if(v.storage==="vec2<u32>"&&v.value==="i32")return`i32(${e}[${F}].x)`;if(v.storage==="vec2<u32>"&&v.value==="u32")return`u32(${e}[${F}].x)`;if(v.storage==="u32"&&v.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${F}] & 0xFFu), bool(${e}[${F}] & 0xFF00u), bool(${e}[${F}] & 0xFF0000u), bool(${e}[${F}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${v.storage} and value type ${v.value} yet`)})(),we=a<2?"":`\n  fn get_${e}ByIndices(indices: ${v.indices}) -> ${d} {\n    return ${$e(`i2o_${e}(indices)`)};\n  }`,de=a<2?"":(()=>{let F=p.map(ge=>`d${ge}: u32`).join(", "),ae=p.map(ge=>`d${ge}`).join(", ");return`\n  fn get_${e}(${F}) -> ${d} {\n    return get_${e}ByIndices(${j(ae)});\n  }`})(),Pe=(...F)=>{if(F.length!==a)throw new Error(`indices length must be ${a}`);let ae=F.map(S).join(",");return a===0?$e("0u"):a===1?$e(ae[0]):(w.get=!0,w.getByIndices=!0,w.indicesToOffset=!0,`get_${e}(${ae})`)},xe=F=>a<2?$e(F):(w.getByIndices=!0,w.indicesToOffset=!0,`get_${e}ByIndices(${F})`),oe=a<2?"":`\n  fn set_${e}ByIndices(indices: ${v.indices}, value: ${d}) {\n    ${Ue(`i2o_${e}(indices)`,"value")}\n  }`,_e=a<2?"":(()=>{let F=p.map(ge=>`d${ge}: u32`).join(", "),ae=p.map(ge=>`d${ge}`).join(", ");return`\n  fn set_${e}(${F}, value: ${d}) {\n    set_${e}ByIndices(${j(ae)}, value);\n  }`})();return{impl:()=>{let F=[],ae=!1;return w.offsetToIndices&&(F.push(T),ae=!0),w.indicesToOffset&&(F.push(M),ae=!0),w.broadcastedIndicesToOffset&&(Object.values(te).forEach(ge=>F.push(ge)),ae=!0),w.set&&(F.push(_e),ae=!0),w.setByIndices&&(F.push(oe),ae=!0),w.get&&(F.push(de),ae=!0),w.getByIndices&&(F.push(we),ae=!0),!u&&ae&&F.unshift(`const ${E} = ${v.indices}(${r.join(",")});`,`const ${C} = ${v.indices}(${W.computeStrides(r).join(",")});`),F.join(`\n`)},type:v,offsetToIndices:O,indicesToOffset:N,broadcastedIndicesToOffset:Be,indices:j,indicesGet:ue,indicesSet:k,set:(...F)=>{if(F.length!==a+1)throw new Error(`indices length must be ${a}`);let ae=F[a];if(typeof ae!="string")throw new Error("value must be string");let ge=F.slice(0,a).map(S).join(",");return a===0?Ue("0u",ae):a===1?Ue(ge[0],ae):(w.set=!0,w.setByIndices=!0,w.indicesToOffset=!0,`set_${e}(${ge}, ${ae})`)},setByOffset:Ue,setByIndices:(F,ae)=>a<2?Ue(F,ae):(w.setByIndices=!0,w.indicesToOffset=!0,`set_${e}ByIndices(${F}, ${ae});`),get:Pe,getByOffset:$e,getByIndices:xe,usage:o,name:e,strides:C,shape:E,rank:a}},V=(e,t,r,o=1)=>xo(e,t,r,"input",o),K=(e,t,r,o=1)=>xo(e,t,r,"output",o),En=(e,t,r,o=1)=>xo(e,t,r,"internal",o),_o=class{constructor(t){this.normalizedDispatchGroup=t;this.internalVariables=[];this.variables=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(t){return`if (global_idx >= ${typeof t=="number"?`${t}u`:t}) { return; }`}mainStart(t=nd){let r=typeof t=="number"?t:t[0],o=typeof t=="number"?1:t[1],i=typeof t=="number"?1:t[2],u=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,a=u?`@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(local_invocation_id) local_id : vec3<u32>,\n    @builtin(local_invocation_index) local_idx : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(num_workgroups) num_workgroups : vec3<u32>`,p=u?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +\n          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${r*o*i}u + local_idx;`;return`@compute @workgroup_size(${r}, ${o}, ${i})\n  fn main(${a}) {\n    ${p}\n  `}appendVariableUniforms(t){t.rank!==0&&(t.shape.startsWith("uniforms.")&&this.uniforms.push({name:t.shape.replace("uniforms.",""),type:"u32",length:t.rank}),t.strides.startsWith("uniforms.")&&this.uniforms.push({name:t.strides.replace("uniforms.",""),type:"u32",length:t.rank}))}declareVariable(t,r){if(t.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(t),this.appendVariableUniforms(t);let o=t.usage==="input"?"read":"read_write",i=t.type.storage;return`@group(0) @binding(${r}) var<storage, ${o}> ${t.name}: array<${i}>;`}declareVariables(...t){return t.map(r=>this.declareVariable(r,this.variableIndex++)).join(`\n`)}registerInternalVariable(t){if(t.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(t),this.appendVariableUniforms(t)}registerInternalVariables(...t){return t.forEach(r=>this.registerInternalVariable(r)),this}registerUniform(t,r,o=1){return this.uniforms.push({name:t,type:r,length:o}),this}registerUniforms(t){return this.uniforms=this.uniforms.concat(t),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let t=[];for(let{name:r,type:o,length:i}of this.uniforms)if(i&&i>4)o==="f16"?t.push(`@align(16) ${r}:array<mat2x4<${o}>, ${Math.ceil(i/8)}>`):t.push(`${r}:array<vec4<${o}>, ${Math.ceil(i/4)}>`);else{let u=i==null||i===1?o:`vec${i}<${o}>`;t.push(`${r}:${u}`)}return`\n      struct Uniforms { ${t.join(", ")} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(t=>t.impl()).join(`\n`)+this.internalVariables.map(t=>t.impl()).join(`\n`)}},la=e=>new _o(e),hr=(e,t)=>{let r=e.length,o=[];for(let i=0;i<r;i++){let u=r-1-i,a=e[u]||1;(t[t.length-1-i]||1)>1&&a===1&&o.unshift(u)}return o}});var od,da,id,ad,$t,ca,pa,gr=J(()=>{"use strict";be();Ee();Qe();Ie();od=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},da=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,id=(e,t)=>W.sortBasedOnPerm(e,da(e.length,t)),ad=(e,t,r,o)=>{let i=[];i.push(`fn perm(i: ${o.type.indices}) -> ${r.type.indices} {\n    var a: ${r.type.indices};`);for(let u=0;u<t;++u)i.push(r.indicesSet("a",e[u],`i[${u}]`));return i.push("return a;}"),i.join(`\n`)},$t=(e,t)=>{let r=e.dataType,o=e.dims.length,i=da(o,t),u=id(e.dims,i),a=K("output",r,u.length),p=V("a",r,o),m=h=>`\n  ${h.registerUniform("output_size","u32").declareVariables(p,a)}\n\n  ${ad(i,o,p,a)}\n\n  ${h.mainStart()}\n    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${a.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${a.setByOffset("global_idx",p.getByIndices("aIndices"))}\n  }`;return{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:h=>{let d=W.size(u);return{outputs:[{dims:u,dataType:h[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:[{type:12,data:d},...G(h[0].dims),...G(u)]}},getShaderSource:m}},ca=(e,t)=>{od(e.inputs),e.compute($t(e.inputs[0],t.perm))},pa=e=>Te({perm:e.perm})});var sd,ud,ld,dd,cd,pd,md,fd,hd,gd,Ct,ma,fa,ha,ga,ya,ba,wa,va,$a,_a,Sa=J(()=>{"use strict";be();Ee();Ie();Pn();gr();sd={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},ud={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},ld={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},dd={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},cd=(e,t)=>{let r=[];for(let o=t-e;o<t;++o)r.push(o);return r},pd=(e,t)=>{let r=[],o=e.length;for(let u=0;u<o;u++)t.indexOf(u)===-1&&r.push(e[u]);let i=t.map(u=>e[u]);return[r,i]},md=(e,t)=>{let r=e.length+t.length,o=[],i=0;for(let u=0;u<r;u++)t.indexOf(u)===-1?o.push(e[i++]):o.push(1);return o},fd=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},hd=(e,t)=>{let r=[];if(!fd(e,t)){for(let o=0;o<t;++o)e.indexOf(o)===-1&&r.push(o);e.forEach(o=>r.push(o))}return r},gd=(e,t,r,o,i,u,a)=>{let p=r[0].dims,m=W.size(u),h=W.size(a),d=V("_A",r[0].dataType,p),y=K("output",i,u),v=32,S=`\n          var<workgroup> aBestValues : array<${y.type.storage}, ${v}>;\n       `;return{name:e,shaderCache:t,getShaderSource:x=>`\n        ${x.registerUniform("reduceSize","u32").declareVariables(d,y)}\n        ${S}\n        fn DIV_CEIL(a : u32, b : u32) -> u32 {\n          return ((a - 1u) / b + 1u);\n         }\n         ${x.mainStart(v)}\n\n          let outputIndex = global_idx / ${v};\n          let offset = outputIndex * uniforms.reduceSize;\n\n          var bestValue = ${y.type.storage}(${ld[o]});\n          let Length = uniforms.reduceSize;\n          for (var k = local_idx; k < Length; k = k + ${v}) {\n           let candidate = ${y.type.storage}(${d.getByOffset("offset + k")});\n           bestValue = ${sd[o]};\n          }\n          aBestValues[local_idx] = bestValue;\n          workgroupBarrier();\n\n         var reduceSize = min(Length, ${v}u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (local_idx < currentSize) {\n            let candidate = aBestValues[local_idx + interval];\n            bestValue = ${ud[o]};\n            aBestValues[local_idx] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (local_idx == 0u) {\n          ${y.setByOffset("outputIndex",`${o==="mean"?`bestValue / ${y.type.storage}(uniforms.reduceSize)`:`${dd[o]}`}`)};\n         }\n        }`,getRunData:()=>({outputs:[{dims:u,dataType:i}],dispatchGroup:{x:m},programUniforms:[{type:12,data:h}]})}},Ct=(e,t,r,o)=>{let i=e.inputs.length===1?r:Co(e.inputs,r),u=i.axes;u.length===0&&!i.noopWithEmptyAxes&&(u=e.inputs[0].dims.map((S,w)=>w));let a=W.normalizeAxes(u,e.inputs[0].dims.length),p=a,m=e.inputs[0],h=hd(p,e.inputs[0].dims.length);h.length>0&&(m=e.compute($t(e.inputs[0],h),{inputs:[0],outputs:[-1]})[0],p=cd(p.length,m.dims.length));let[d,y]=pd(m.dims,p),v=d;i.keepDims&&(v=md(d,a)),e.compute(gd(t,{hint:i.cacheKey,inputDependencies:["type"]},[m],o,e.inputs[0].dataType,v,y),{inputs:[m]})},ma=(e,t)=>{Ct(e,"ReduceMeanShared",t,"mean")},fa=(e,t)=>{Ct(e,"ReduceL1Shared",t,"l1")},ha=(e,t)=>{Ct(e,"ReduceL2Shared",t,"l2")},ga=(e,t)=>{Ct(e,"ReduceLogSumExpShared",t,"logSumExp")},ya=(e,t)=>{Ct(e,"ReduceMaxShared",t,"max")},ba=(e,t)=>{Ct(e,"ReduceMinShared",t,"min")},wa=(e,t)=>{Ct(e,"ReduceProdShared",t,"prod")},va=(e,t)=>{Ct(e,"ReduceSumShared",t,"sum")},$a=(e,t)=>{Ct(e,"ReduceSumSquareShared",t,"sumSquare")},_a=(e,t)=>{Ct(e,"ReduceLogSumShared",t,"logSum")}});var At,yd,On,Co,It,bd,wd,vd,$d,_d,Sd,xd,Cd,Ad,Id,Tt,xa,Ca,Aa,Ia,Ta,Ea,Pa,Oa,ka,Ra,Pn=J(()=>{"use strict";be();Ee();Qe();Ie();Sa();At=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},yd=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],On=(e,t,r,o,i,u,a=!1,p=!1)=>{let m=[],h=r[0].dims,d=h.length,y=W.normalizeAxes(i,d),v=!p&&y.length===0;h.forEach((E,C)=>{v||y.indexOf(C)>=0?a&&m.push(1):m.push(E)});let S=m.length,w=W.size(m);return{name:e,shaderCache:t,getShaderSource:E=>{let C=[],_=V("_A",r[0].dataType,d),T=K("output",u,S),O=o(_,T,y),z=O[2];for(let M=0,N=0;M<d;M++)v||y.indexOf(M)>=0?(a&&N++,z=`for(var j${M}: u32 = 0; j${M} < ${h[M]}; j${M}++) {\n                  ${O[2].includes("last_index")?`let last_index = j${M};`:""}\n                  ${_.indicesSet("input_indices",M,`j${M}`)}\n                  ${z}\n                }`):(C.push(`${_.indicesSet("input_indices",M,T.indicesGet("output_indices",N))};`),N++);return`\n\n        ${E.registerUniform("output_size","u32").declareVariables(_,T)}\n\n        ${E.mainStart()}\n          ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var input_indices: ${_.type.indices};\n          let output_indices = ${T.offsetToIndices("global_idx")};\n\n          ${C.join(`\n`)}\n          ${O[0]}       // init ops for reduce max/min\n          ${O[1]}\n          ${z}\n          ${O[3]}\n          ${O.length===4?T.setByOffset("global_idx","value"):O.slice(4).join(`\n`)}\n        }`},getRunData:()=>({outputs:[{dims:m,dataType:u}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:[{type:12,data:w},...G(h),...G(m)]})}},Co=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(o=>r.push(Number(o))),Te({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},It=(e,t,r,o)=>{let i=e.inputs,u=i.length===1?r:Co(i,r);e.compute(On(t,{hint:u.cacheKey,inputDependencies:["rank"]},[i[0]],u.noopWithEmptyAxes&&u.axes.length===0?yd:o,u.axes,i[0].dataType,u.keepDims,u.noopWithEmptyAxes),{inputs:[0]})},bd=(e,t)=>{At(e.inputs),It(e,"ReduceLogSum",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,"value = log(value);"])},wd=(e,t)=>{At(e.inputs),It(e,"ReduceL1",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += abs(${o.getByIndices("input_indices")});`,""])},vd=(e,t)=>{At(e.inputs),It(e,"ReduceL2",t,(o,i)=>[`var t = ${i.type.value}(0); var value = ${i.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},$d=(e,t)=>{At(e.inputs),It(e,"ReduceLogSumExp",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += exp(${o.getByIndices("input_indices")});`,"value = log(value);"])},_d=(e,t)=>{At(e.inputs),It(e,"ReduceMax",t,(o,i,u)=>{let a=[];for(let p=0;p<o.rank;p++)(u.indexOf(p)>=0||u.length===0)&&a.push(o.indicesSet("input_indices",p,0));return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = max(value, ${o.getByIndices("input_indices")});`,""]})},Sd=(e,t)=>{At(e.inputs),It(e,"ReduceMean",t,(o,i,u)=>{let a=1;for(let p=0;p<o.rank;p++)(u.indexOf(p)>=0||u.length===0)&&(a*=e.inputs[0].dims[p]);return["var sum = f32(0);","",`sum += f32(${o.getByIndices("input_indices")});`,`let value = ${i.type.value}(sum / ${a});`]})},xd=(e,t)=>{At(e.inputs),It(e,"ReduceMin",t,(o,i,u)=>{let a=[];for(let p=0;p<o.rank;p++)(u.indexOf(p)>=0||u.length===0)&&a.push(`input_indices[${p}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = min(value, ${o.getByIndices("input_indices")});`,""]})},Cd=(e,t)=>{At(e.inputs),It(e,"ReduceProd",t,(o,i)=>[`var value = ${i.type.storage}(1);`,"",`value *= ${o.getByIndices("input_indices")};`,""])},Ad=(e,t)=>{At(e.inputs),It(e,"ReduceSum",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,""])},Id=(e,t)=>{At(e.inputs),It(e,"ReduceSumSquare",t,(o,i)=>[`var t = ${i.type.value}(0); var value = ${i.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += t * t;`,""])},Tt=(e,t,r)=>{if(t.length===0)return r;let o=1,i=1;for(let u=0;u<t.length;u++)t.indexOf(u)===-1?o*=e[u]:i*=e[u];return i<32&&o>1024},xa=(e,t)=>{Tt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Sd(e,t):ma(e,t)},Ca=(e,t)=>{Tt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?wd(e,t):fa(e,t)},Aa=(e,t)=>{Tt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?vd(e,t):ha(e,t)},Ia=(e,t)=>{Tt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?$d(e,t):ga(e,t)},Ta=(e,t)=>{Tt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?_d(e,t):ya(e,t)},Ea=(e,t)=>{Tt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?xd(e,t):ba(e,t)},Pa=(e,t)=>{Tt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Cd(e,t):wa(e,t)},Oa=(e,t)=>{Tt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ad(e,t):va(e,t)},ka=(e,t)=>{Tt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Id(e,t):$a(e,t)},Ra=(e,t)=>{Tt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?bd(e,t):_a(e,t)}});var Da,Ba,Ma,Ao,za=J(()=>{"use strict";be();Qe();Pn();Da=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},Ba=(e,t)=>{Da(e.inputs);let r=(o,i,u)=>{let a=[];for(let p=0;p<o.rank;p++)(u.indexOf(p)>=0||u.length===0)&&a.push(`input_indices[${p}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {\n         value = ${o.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(On("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},Ma=(e,t)=>{Da(e.inputs);let r=(o,i,u)=>{let a=[];for(let p=0;p<o.rank;p++)(u.indexOf(p)>=0||u.length===0)&&a.push(`input_indices[${p}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {\n         value = ${o.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(On("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},Ao=e=>Te(e)});var Td,Ed,Pd,Od,kn,kd,Ua,Io=J(()=>{"use strict";be();xn();Ie();Td=(e,t)=>{let r=e[0],o=e[1],i=e[2],u=e[3],a=e[4],p=e[5];if(a&&p)throw new Error("Attention cannot have both past and relative_position_bias");if(r.dims.length!==3)throw new Error(\'Input "input" must have 3 dimensions\');let m=r.dims[0],h=r.dims[1],d=r.dims[2];if(i.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimensions\');if(o.dims.length!==2)throw new Error(\'Input "weights" is expected to have 2 dimensions\');if(o.dims[0]!==d)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(i.dims[0]!==o.dims[1])throw new Error(\'Input "bias" dimension 0 should have same length as dimension 1 of input "weights"\');let y=i.dims[0]/3,v=y,S=v;if(t.qkvHiddenSizes.length>0){if(t.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let T of t.qkvHiddenSizes)if(T%t.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");y=t.qkvHiddenSizes[0],v=t.qkvHiddenSizes[1],S=t.qkvHiddenSizes[2]}let w=h;if(y!==v)throw new Error("qkv_hidden_sizes first element should be same as the second");if(i.dims[0]!==y+v+S)throw new Error(\'Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes\');let x=0;if(a){if(v!==S)throw new Error(\'Input "past" expect k_hidden_size == v_hidden_size\');if(a.dims.length!==5)throw new Error(\'Input "past" must have 5 dimensions\');if(a.dims[0]!==2)throw new Error(\'Input "past" first dimension must be 2\');if(a.dims[1]!==m)throw new Error(\'Input "past" second dimension must be batch_size\');if(a.dims[2]!==t.numHeads)throw new Error(\'Input "past" third dimension must be num_heads\');if(a.dims[4]!==v/t.numHeads)throw new Error(\'Input "past" fifth dimension must be k_hidden_size / num_heads\');t.pastPresentShareBuffer||(x=a.dims[3])}let E=w+x,C=-1,_=0;if(u)throw new Error("Mask not supported");if(a)throw new Error("past is not supported");if(p)throw new Error("relativePositionBias is not supported");return{batchSize:m,sequenceLength:h,pastSequenceLength:x,kvSequenceLength:w,totalSequenceLength:E,maxSequenceLength:C,inputHiddenSize:d,hiddenSize:y,vHiddenSize:S,headSize:Math.floor(y/t.numHeads),vHeadSize:Math.floor(S/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:_,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},Ed=(e,t,r,o)=>{let i=Le(o),u=64,a=o/i;a<u?u=1:a/8<64&&(u=Math.ceil(a/8));let p=Math.ceil(o/i/u),m=[{type:t.dataType,data:1/o},{type:12,data:a},{type:12,data:p}],h=Ge(t.dataType,i),d=y=>{let v=K("x",t.dataType,t.dims,i),S="thread_max_vector";i===2?S="max(thread_max_vector.x, thread_max_vector.y)":i===4&&(S="max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))");let w=wt(t.dataType),x=[{name:"d_inv",type:w},{name:"d_comp",type:"u32"},{name:"elements_per_wg",type:"u32"}];return`\n  var<workgroup> wgMax: array<f32, ${u}>;\n  var<workgroup> wgSum: array<f32, ${u}>;\n  ${y.registerUniforms(x).declareVariables(v)}\n  ${y.mainStart([u,1,1])}\n    let localOffset = local_idx * uniforms.elements_per_wg;\n    let offset: u32 = workgroup_id.x * uniforms.d_comp + localOffset;\n\n    var thread_max_vector = ${et("f32",i,"-3.402823e+38f")};\n    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n      thread_max_vector = max(${vt(w,i,"x[offset + i]")}, thread_max_vector);\n    }\n    wgMax[local_idx] = ${S};\n    workgroupBarrier();\n\n    var maxValue = -3.402823e+38f;\n    for (var i = 0u; i < ${u}; i++) {\n      maxValue = max(wgMax[i], maxValue);\n    }\n\n    var sumVector = ${et("f32",i,"0")};\n    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n      sumVector += exp(${vt(w,i,"x[offset + i]")} - maxValue);\n    }\n    wgSum[local_idx] = ${dt("sumVector",i)};\n    workgroupBarrier();\n\n    var sum: f32 = 0;\n    for (var i = 0u; i < ${u}; i++) {\n      sum += wgSum[i];\n    }\n\n    if (sum == 0) {\n      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n        x[offset + i] = ${et(w,i,"uniforms.d_inv")};\n      }\n    } else {\n      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n        let f32input = ${vt(w,i,"x[offset + i]")};\n        x[offset + i] = ${v.type.value}(exp(f32input - maxValue) / sum);\n      }\n    }\n  }`};e.compute({name:"AttentionProbsSoftmax",shaderCache:{hint:`${u};${h};${i}`},getShaderSource:d,getRunData:()=>({outputs:[],dispatchGroup:{x:r},programUniforms:m})},{inputs:[t],outputs:[]})},Pd=(e,t,r,o,i,u)=>{let a=[i.batchSize,i.numHeads,i.sequenceLength,i.kvSequenceLength+i.pastSequenceLength],p=u.scale===0?1/Math.sqrt(i.headSize):u.scale,m=Le(i.headSize),h=i.headSize/m,d=12,y={x:Math.ceil(i.totalSequenceLength/d),y:Math.ceil(i.sequenceLength/d),z:i.batchSize*i.numHeads},v=[{type:12,data:i.sequenceLength},{type:12,data:h},{type:12,data:i.totalSequenceLength},{type:12,data:i.kvSequenceLength},{type:t.dataType,data:p}],S=[t,r],w=E=>{let C=V("q",t.dataType,t.dims,m),_=V("key",r.dataType,r.dims,m),T=K("output",t.dataType,a),O=Ge(t.dataType),z=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"alpha",type:O}];return`\n  const beta: ${O} = 1.0;\n  const TILE_SIZE = ${d}u;\n\n  var<workgroup> tileQ: array<${C.type.storage}, ${d*d}>;\n  var<workgroup> tileK: array<${C.type.storage}, ${d*d}>;\n  ${E.registerUniforms(z).declareVariables(C,_,T)}\n  ${E.mainStart([d,d,1])}\n    // x holds the N and y holds the M\n    let headIdx = workgroup_id.z;\n    let m = workgroup_id.y * TILE_SIZE;\n    let n = workgroup_id.x * TILE_SIZE;\n    let lm = m + local_id.y;\n    let ln = n + local_id.x;\n\n    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;\n    let kOffset = uniforms.kv_sequence_length * uniforms.K * headIdx + n * uniforms.K;\n\n    var value = ${et(O,m)};\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m + local_id.y < uniforms.M && w + local_id.x < uniforms.K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {\n        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      workgroupBarrier();\n\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = headIdx * uniforms.M * uniforms.N;\n    if (lm < uniforms.M && ln < uniforms.N) {\n      let outputIdx = headOffset + lm * uniforms.N + ln;\n      output[outputIdx] = ${dt("value",m)} * uniforms.alpha;\n    }\n  }`},x=e.compute({name:"AttentionProbs",shaderCache:{hint:`${m}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:a,dataType:t.dataType,gpuDataType:0}],dispatchGroup:y,programUniforms:v}),getShaderSource:w},{inputs:S,outputs:[-1]})[0];return Ed(e,x,i.batchSize*i.numHeads*i.sequenceLength,i.totalSequenceLength),x},Od=(e,t,r,o)=>{let i=[o.batchSize,o.sequenceLength,o.vHiddenSize],u=12,a={x:Math.ceil(o.vHeadSize/u),y:Math.ceil(o.sequenceLength/u),z:o.batchSize*o.numHeads},p=[{type:12,data:o.sequenceLength},{type:12,data:o.totalSequenceLength},{type:12,data:o.vHeadSize},{type:12,data:o.numHeads},{type:12,data:o.vHiddenSize}],m=h=>{let d=V("probs",t.dataType,t.dims),y=V("v",r.dataType,r.dims),v=K("output",t.dataType,i),S=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`\n  const TILE_SIZE = ${u}u;\n  var<workgroup> tileQ: array<${d.type.value}, ${u*u}>;\n  var<workgroup> tileK: array<${d.type.value}, ${u*u}>;\n  ${h.registerUniforms(S).declareVariables(d,y,v)}\n  ${h.mainStart([u,u,1])}\n   let headIdx = workgroup_id.z;\n   let m = workgroup_id.y * TILE_SIZE + local_id.y;\n   let n = workgroup_id.x * TILE_SIZE + local_id.x;\n\n   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;\n   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;\n\n   var value = ${d.type.storage}(0);\n   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n     if (m < uniforms.M && w + local_id.x < uniforms.K) {\n       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];\n     }\n     if (n < uniforms.N && w + local_id.y < uniforms.K) {\n       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];\n     }\n     workgroupBarrier();\n     for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];\n     }\n     workgroupBarrier();\n   }\n\n   // we need to transpose output from BNSH_v to BSND_v\n   let batchIdx = workgroup_id.z / uniforms.num_heads;\n   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;\n   let headOffset = (batchIdx * uniforms.M * uniforms.num_heads + currentBatchHeadNumber) * uniforms.N;\n   if (m < uniforms.M && n < uniforms.N) {\n     let outputIdx = batchIdx * uniforms.M *uniforms.v_hidden_size + m * uniforms.v_hidden_size\n       + currentBatchHeadNumber * uniforms.N + n;\n     output[outputIdx] = value;\n   }\n  }`};return e.compute({name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:i,dataType:t.dataType,gpuDataType:0}],dispatchGroup:a,programUniforms:p}),getShaderSource:m},{inputs:[t,r],outputs:[0]})[0]},kn=(e,t,r,o,i,u,a,p,m,h,d)=>{let y=Pd(e,t,r,m,h,d);Od(e,y,o,h)},kd=(e,t)=>{let r=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],o=t.sequenceLength,i=t.inputHiddenSize,u=t.headSize,a=12,p={x:Math.ceil(t.headSize/a),y:Math.ceil(t.sequenceLength/a),z:t.batchSize*t.numHeads},m=[e.inputs[0],e.inputs[1],e.inputs[2]],h=[{type:12,data:o},{type:12,data:i},{type:12,data:u},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}],d=y=>{let v=K("output_q",m[0].dataType,r),S=K("output_k",m[0].dataType,r),w=K("output_v",m[0].dataType,r),x=V("input",m[0].dataType,m[0].dims),E=V("weight",m[1].dataType,m[1].dims),C=V("bias",m[2].dataType,m[2].dims),_=x.type.storage,T=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`\n  const TILE_SIZE = ${a}u;\n  var<workgroup> tileInput: array<${_}, ${a*a}>;\n  var<workgroup> tileWeightQ: array<${_}, ${a*a}>;\n  var<workgroup> tileWeightK: array<${_}, ${a*a}>;\n  var<workgroup> tileWeightV: array<${_}, ${a*a}>;\n  ${y.registerUniforms(T).declareVariables(x,E,C,v,S,w)}\n  ${y.mainStart([a,a,1])}\n    let batchIndex = workgroup_id.z / uniforms.num_heads;\n    let headNumber = workgroup_id.z % uniforms.num_heads;\n    let m = workgroup_id.y * TILE_SIZE + local_id.y;\n    let n = workgroup_id.x * TILE_SIZE + local_id.x;\n\n    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;\n    let biasOffsetQ = headNumber * uniforms.head_size;\n    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;\n    let biasOffsetV = uniforms.hidden_size + biasOffsetK;\n\n    var valueQ = ${_}(0);\n    var valueK = ${_}(0);\n    var valueV = ${_}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\n        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];\n      }\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\n        let offset = n + (w + local_id.y) * uniforms.ldb;\n        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];\n        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];\n        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];\n      }\n      workgroupBarrier();\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        let inputTileOffset = TILE_SIZE * local_id.y + k;\n        let weightTileOffset = TILE_SIZE * k + local_id.x;\n        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];\n        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];\n        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = (m * uniforms.N + n) % uniforms.head_size;\n    valueQ += bias[headOffset + biasOffsetQ];\n    valueK += bias[headOffset + biasOffsetK];\n    valueV += bias[headOffset + biasOffsetV];\n\n    let offset = workgroup_id.z * uniforms.M * uniforms.N;\n    if (m < uniforms.M && n < uniforms.N) {\n      let outputIdx = offset + m * uniforms.N + n;\n      output_q[outputIdx] = valueQ;\n      output_k[outputIdx] = valueK;\n      output_v[outputIdx] = valueV;\n    }\n  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:p,programUniforms:h}),getShaderSource:d},{inputs:m,outputs:[-1,-1,-1]})},Ua=(e,t)=>{let r=Td(e.inputs,t),[o,i,u]=kd(e,r);return kn(e,o,i,u,e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t)}});var Rd,Dd,Bd,Va,Wa=J(()=>{"use strict";fr();be();Ee();Qe();Ie();Rd=(e,t)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let r=(o,i,u)=>{let a=i.length;if(a!==o.length)throw new Error(`${u}: num dimensions != ${a}`);i.forEach((p,m)=>{if(p!==o[m])throw new Error(`${u}: dim[${m}] do not match`)})};if(e[0].dims.length>1){let o=t.format==="NHWC"?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);r(e[1].dims,o,"Invalid input scale"),r(e[2].dims,o,"Invalid input B"),r(e[3].dims,o,"Invalid input mean"),r(e[4].dims,o,"Invalid input var")}else r(e[1].dims,[1],"Invalid input scale"),r(e[2].dims,[1],"Invalid input B"),r(e[3].dims,[1],"Invalid input mean"),r(e[4].dims,[1],"Invalid input var")},Dd=(e,t)=>{let{epsilon:r,spatial:o,format:i}=t,u=e[0].dims,a=o?Le(u[u.length-1]):1,p=i==="NHWC"&&u.length>1?a:1,m=W.size(u)/a,h=o,d=h?u.length:u,y=V("x",e[0].dataType,e[0].dims,a),v=V("scale",e[1].dataType,e[1].dims,p),S=V("bias",e[2].dataType,e[2].dims,p),w=V("inputMean",e[3].dataType,e[3].dims,p),x=V("inputVar",e[4].dataType,e[4].dims,p),E=K("y",e[0].dataType,d,a),C=()=>{let T="";if(o)T=`let cOffset = ${u.length===1?"0u":i==="NHWC"?`outputIndices[${u.length-1}] / ${a}`:"outputIndices[1]"};`;else if(i==="NCHW")T=`\n            ${E.indicesSet("outputIndices","0","0")}\n            let cOffset = ${E.indicesToOffset("outputIndices")};`;else{T=`var cIndices = ${v.type.indices}(0);\n                       cIndices[0] = outputIndices[${u.length-1}];`;for(let O=1;O<v.rank;O++)T+=`cIndices[${O}] = outputIndices[${O}];`;T+=`let cOffset = ${v.indicesToOffset("cIndices")};`}return T},_=T=>`\n  const epsilon = ${r};\n  ${T.registerUniform("outputSize","u32").declareVariables(y,v,S,w,x,E)}\n  ${T.mainStart()}\n  ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n    var outputIndices = ${E.offsetToIndices(`global_idx * ${a}`)};\n    ${C()}\n    let scale = ${v.getByOffset("cOffset")};\n    let bias = ${S.getByOffset("cOffset")};\n    let inputMean = ${w.getByOffset("cOffset")};\n    let inputVar = ${x.getByOffset("cOffset")};\n    let x = ${y.getByOffset("global_idx")};\n    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;\n    ${E.setByOffset("global_idx","value")}\n  }`;return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${o}_${a}`,inputDependencies:h?["rank","type","type","type","type"]:void 0},getShaderSource:_,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:h?[{type:12,data:m},...G(u)]:[{type:12,data:m}]})}},Bd=e=>Te(e),Va=(e,t)=>{let{inputs:r,outputCount:o}=e,i=Bd({...t,outputCount:o});if(mr.webgpu.validateInputContent&&Rd(r,i),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(Dd(r,i))}});var Md,zd,Na,Ha=J(()=>{"use strict";Ee();Ie();Md=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},zd=e=>{let t=e[0].dims,r=e[0].dims[2],o=W.size(t)/4,i=e[0].dataType,u=V("input",i,t,4),a=V("bias",i,[r],4),p=V("residual",i,t,4),m=K("output",i,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:d=>`\n  const channels = ${r}u / 4;\n  ${d.declareVariables(u,a,p,m)}\n\n  ${d.mainStart()}\n    ${d.guardAgainstOutOfBoundsWorkgroupSizes(o)}\n    let value = ${u.getByOffset("global_idx")}\n      + ${a.getByOffset("global_idx % channels")} + ${p.getByOffset("global_idx")};\n    ${m.setByOffset("global_idx","value")}\n  }`}},Na=e=>{Md(e.inputs),e.compute(zd(e.inputs))}});var Ud,Re,Ga,La,Fa,qa,ja,Ka,Ya,Za,Ja,Vd,Xa,Qa,es,ts,Rn,rs,Dn,ns,os,is,as,ss,us,ls,ds,cs,ps,ms,fs,hs,gs,ys,bs,ws,vs,$s,To=J(()=>{"use strict";be();Ee();Qe();Ie();Ud=(e,t,r,o,i,u)=>{let a=Math.ceil(t/4),p="";typeof i=="string"?p=`${i}(a)`:p=i("a");let m=V("inputData",r,[a],4),h=K("outputData",o,[a],4);return`\n      ${e.registerUniform("vec_size","u32").declareVariables(m,h)}\n\n  ${u??""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n\n    let a = ${m.getByOffset("global_idx")};\n    ${h.setByOffset("global_idx",p)}\n  }`},Re=(e,t,r,o,i,u=e.dataType)=>({name:t,shaderCache:{hint:i,inputDependencies:["type"]},getShaderSource:a=>Ud(a,W.size(e.dims),e.dataType,u,r,o),getRunData:a=>({outputs:[{dims:e.dims,dataType:u}],dispatchGroup:{x:Math.ceil(W.size(a[0].dims)/64/4)},programUniforms:[{type:12,data:Math.ceil(W.size(e.dims)/4)}]})}),Ga=e=>{e.compute(Re(e.inputs[0],"Abs","abs"))},La=e=>{e.compute(Re(e.inputs[0],"Acos","acos"))},Fa=e=>{e.compute(Re(e.inputs[0],"Acosh","acosh"))},qa=e=>{e.compute(Re(e.inputs[0],"Asin","asin"))},ja=e=>{e.compute(Re(e.inputs[0],"Asinh","asinh"))},Ka=e=>{e.compute(Re(e.inputs[0],"Atan","atan"))},Ya=e=>{e.compute(Re(e.inputs[0],"Atanh","atanh"))},Za=e=>Te(e),Ja=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute \'to\' from \'Cast\' operator): ${t.to}`)}e.compute(Re(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},Vd=e=>{let t=e.length>=2&&e[1].data!==0?e[1].getFloat32Array()[0]:In,r=e.length>=3&&e[2].data!==0?e[2].getFloat32Array()[0]:Tn;return Te({min:t,max:r})},Xa=(e,t)=>{let r=e.inputs.length===1?t:Vd(e.inputs),o=wt(e.inputs[0].dataType);e.compute(Re(e.inputs[0],"Clip",i=>`clamp(${i}, clip_min_, clip_max_)`,`\n    const clip_min_: vec4<${o}> = vec4(${o}(${r.min}));\n    const clip_max_: vec4<${o}> = vec4(${o}(${r.max}));\n`,r.cacheKey),{inputs:[0]})},Qa=e=>{e.compute(Re(e.inputs[0],"Ceil","ceil"))},es=e=>{e.compute(Re(e.inputs[0],"Cos","cos"))},ts=e=>{e.compute(Re(e.inputs[0],"Cosh","cosh"))},Rn=e=>Te(e),rs=(e,t)=>{let r=wt(e.inputs[0].dataType);e.compute(Re(e.inputs[0],"Elu",o=>`elu_vf32(${o})`,`\n  const elu_alpha_ = ${r}(${t.alpha});\n\n  fn elu_f32(a: ${r}) -> ${r} {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<${r}>) -> vec4<${r}> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,t.cacheKey))},Dn=(e,t="f32")=>`\nconst r0: ${t} = 0.3275911;\nconst r1: ${t} = 0.254829592;\nconst r2: ${t} = -0.284496736;\nconst r3: ${t} = 1.421413741;\nconst r4: ${t} = -1.453152027;\nconst r5: ${t} = 1.061405429;\n\nfn erf_vf32(v: ${e}) -> ${e} {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,ns=e=>{let t=wt(e.inputs[0].dataType);e.compute(Re(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,Dn(`vec4<${t}>`,t)))},os=e=>{e.compute(Re(e.inputs[0],"Exp","exp"))},is=e=>{e.compute(Re(e.inputs[0],"Floor","floor"))},as=e=>{let t=wt(e.inputs[0].dataType);e.compute(Re(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,Dn(`vec4<${t}>`,t)))},ss=(e,t)=>{let r=wt(e.inputs[0].dataType);e.compute(Re(e.inputs[0],"LeakyRelu",o=>`select(leaky_relu_alpha_ * ${o}, ${o}, ${o} >= vec4<${r}>(0.0))`,`const leaky_relu_alpha_ = ${r}(${t.alpha});`,t.cacheKey))},us=e=>{e.compute(Re(e.inputs[0],"Not",t=>`!${t}`))},ls=e=>{e.compute(Re(e.inputs[0],"Neg",t=>`-${t}`))},ds=e=>{e.compute(Re(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},cs=e=>{let t=wt(e.inputs[0].dataType);e.compute(Re(e.inputs[0],"Relu",r=>`select(vec4<${t}>(0.0), ${r}, ${r} > vec4<${t}>(0.0))`))},ps=e=>{e.compute(Re(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},ms=e=>Te(e),fs=(e,t)=>{let r=wt(e.inputs[0].dataType);e.compute(Re(e.inputs[0],"HardSigmoid",o=>`max(vec4<${r}>(0.0), min(vec4<${r}>(1.0), ${t.alpha} * ${o} + vec4<${r}>(${t.beta})))`,void 0,t.cacheKey))},hs=e=>{e.compute(Re(e.inputs[0],"Sin","sin"))},gs=e=>{e.compute(Re(e.inputs[0],"Sinh","sinh"))},ys=e=>{e.compute(Re(e.inputs[0],"Sqrt","sqrt"))},bs=e=>{e.compute(Re(e.inputs[0],"Tan","tan"))},ws=e=>{e.compute(Re(e.inputs[0],"Tanh",t=>`sign(${t}) * (1 - exp(-2 * abs(${t}))) / (1 + exp(-2 * abs(${t})))`))},vs=(e,t)=>{let r=wt(e.inputs[0].dataType);return e.compute(Re(e.inputs[0],"ThresholdedRelu",o=>`select(vec4<${r}>(0.0), ${o}, ${o} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${r}>(${t.alpha});`,t.cacheKey)),0},$s=e=>{e.compute(Re(e.inputs[0],"Log","log"))}});var Nd,Hd,_s,Ss=J(()=>{"use strict";Ee();Ie();To();Nd=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Hd=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=V("input",e[0].dataType,e[0].dims,4),o=V("bias",e[0].dataType,[e[0].dims[2]],4),i=K("output",e[0].dataType,t,4),u=W.size(t)/4,a=Ge(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)}}),getShaderSource:m=>`\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${e[0].dims[2]/4/2}u;\n\n  ${m.declareVariables(r,o,i)}\n\n  ${Dn(`vec4<${a}>`,a)}\n\n  ${m.mainStart()}\n    ${m.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${i.setByOffset("global_idx","valueLeft * geluRight")}\n  }`}},_s=e=>{Nd(e.inputs),e.compute(Hd(e.inputs))}});var Gd,Ld,Et,xs,Cs,As,Is,Ts,Es,Ps,Os,ks,Rs,Ds=J(()=>{"use strict";be();Ee();Ie();Gd=(e,t,r,o,i,u,a,p,m,h,d,y)=>{let v,S;typeof p=="string"?v=S=(_,T)=>`${p}((${_}),(${T}))`:typeof p=="function"?v=S=p:(v=p.scalar,S=p.vector);let w=K("outputData",d,o.length,4),x=V("aData",m,t.length,4),E=V("bData",h,r.length,4),C;if(i)if(u){let _=W.size(t)===1,T=W.size(r)===1,O=t.length>0&&t[t.length-1]%4===0,z=r.length>0&&r[r.length-1]%4===0;_||T?C=w.setByOffset("global_idx",S(_?`${x.type.value}(${x.getByOffset("0")}.x)`:x.getByOffset("global_idx"),T?`${E.type.value}(${E.getByOffset("0")}.x)`:E.getByOffset("global_idx"))):C=`\n            let outputIndices = ${w.offsetToIndices("global_idx * 4u")};\n            let offsetA = ${x.broadcastedIndicesToOffset("outputIndices",w)};\n            let offsetB = ${E.broadcastedIndicesToOffset("outputIndices",w)};\n            ${w.setByOffset("global_idx",S(a||O?x.getByOffset("offsetA / 4u"):`${x.type.value}(${x.getByOffset("offsetA / 4u")}[offsetA % 4u])`,a||z?E.getByOffset("offsetB / 4u"):`${E.type.value}(${E.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}\n          `}else C=w.setByOffset("global_idx",S(x.getByOffset("global_idx"),E.getByOffset("global_idx")));else{if(!u)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let _=(T,O,z="")=>{let M=`aData[indexA${O}][componentA${O}]`,N=`bData[indexB${O}][componentB${O}]`;return`\n            let outputIndices${O} = ${w.offsetToIndices(`global_idx * 4u + ${O}u`)};\n            let offsetA${O} = ${x.broadcastedIndicesToOffset(`outputIndices${O}`,w)};\n            let offsetB${O} = ${E.broadcastedIndicesToOffset(`outputIndices${O}`,w)};\n            let indexA${O} = offsetA${O} / 4u;\n            let indexB${O} = offsetB${O} / 4u;\n            let componentA${O} = offsetA${O} % 4u;\n            let componentB${O} = offsetB${O} % 4u;\n            ${T}[${O}] = ${z}(${v(M,N)});\n          `};d===9?C=`\n            var data = vec4<u32>(0);\n            ${_("data",0,"u32")}\n            ${_("data",1,"u32")}\n            ${_("data",2,"u32")}\n            ${_("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:C=`\n            ${_("outputData[global_idx]",0)}\n            ${_("outputData[global_idx]",1)}\n            ${_("outputData[global_idx]",2)}\n            ${_("outputData[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(x,E,w)}\n\n        ${y??""}\n\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${C}\n      }`},Ld=(e,t,r,o,i,u,a=r.dataType)=>{let p=!W.areEqual(r.dims,o.dims),m=r.dims,h=W.size(r.dims),d=!1,y=!1,v=[p];if(p){let S=xt.calcShape(r.dims,o.dims,!1);if(!S)throw new Error("Can\'t perform binary op on the given tensors");m=S,h=W.size(m);let w=W.size(r.dims)===1,x=W.size(o.dims)===1,E=r.dims.length>0&&r.dims[r.dims.length-1]%4===0,C=o.dims.length>0&&o.dims[o.dims.length-1]%4===0;v.push(w),v.push(x),v.push(E),v.push(C);let _=1;for(let T=1;T<m.length;T++){let O=r.dims[r.dims.length-T]??1,z=o.dims[o.dims.length-T]??1;if(O===z)_*=O;else break}_%4===0?(y=!0,d=!0):(w||x||E||C)&&(d=!0)}else d=!0;return v.push(d),{name:e,shaderCache:{hint:t+v.map(S=>S.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:S=>Gd(S,r.dims,o.dims,m,d,p,y,i,r.dataType,o.dataType,a,u),getRunData:()=>({outputs:[{dims:m,dataType:a}],dispatchGroup:{x:Math.ceil(h/64/4)},programUniforms:[{type:12,data:Math.ceil(W.size(m)/4)},...G(r.dims),...G(o.dims),...G(m)]})}},Et=(e,t,r,o,i,u)=>{e.compute(Ld(t,i??"",e.inputs[0],e.inputs[1],r,o,u))},xs=e=>{Et(e,"Add",(t,r)=>`${t}+${r}`)},Cs=e=>{Et(e,"Div",(t,r)=>`${t}/${r}`)},As=e=>{Et(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},Is=e=>{Et(e,"Mul",(t,r)=>`${t}*${r}`)},Ts=e=>{let t=V("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;Et(e,"Pow",{scalar:(o,i)=>`pow_custom(${o},${i})`,vector:(o,i)=>`pow_vector_custom(${o},${i})`},`\n    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {\n      if (b == ${t}(0.0)) {\n        return ${t}(1.0);\n      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {\n        return ${t}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {\n      // TODO: implement vectorized pow\n      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `)},Es=e=>{Et(e,"Sub",(t,r)=>`${t}-${r}`)},Ps=e=>{Et(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},Os=e=>{Et(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},ks=e=>{Et(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},Rs=e=>{Et(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}});var qd,jd,Kd,Yd,Bs,Ms,zs=J(()=>{"use strict";be();Ee();Qe();Ie();qd=e=>{if(!e||e.length<1)throw new Error("too few inputs");let t=e[0].dataType,r=e[0].dims.length;for(let o of e){if(o.dataType!==t)throw new Error("input tensors should be one type");if(o.dims.length!==r)throw new Error("input tensors should have the same shape")}},jd=(e,t)=>`\n  fn calculateInputIndex(index: u32) -> u32 {\n    let sizeInConcatAxis = array<u32, ${e}u>(${t});\n    for (var i: u32 = 0u; i < ${e}; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${e}u;\n  }`,Kd=(e,t)=>{let r=e.length,o=[];for(let i=0;i<r;++i){let u=t.setByOffset("global_idx",e[i].getByIndices("indices"));r===1?o.push(u):i===0?o.push(`if (inputIndex == ${i}u) { ${u} }`):i===r-1?o.push(`else { ${u} }`):o.push(`else if (inputIndex == ${i}) { ${u} }`)}return o.join(`\n`)},Yd=(e,t)=>{let r=e[0].dims.slice();if(t>=r.length||t<-1*r.length)throw new Error("axis specified for concat doesn\'t match input dimensionality");let o=t<0?r.length+t:t,i=r.slice(0);for(let C=1;C<e.length;C++){let _=e[C].dims.slice();for(let T=0;T<r.length;T++)if(T===o)i[o]+=_[T];else if(r[T]!==_[T])throw new Error("non concat dimensions must match")}let u=W.size(i),a=new Array(e.length),p=new Array(e.length),m=e[0].dataType,h=0,d=[],y=[],v=[{type:12,data:u}];for(let C=0;C<e.length;++C)h+=e[C].dims[o],a[C]=h,y.push(e[C].dims.length),p[C]=V(`input${C}`,m,y[C]),d.push("rank"),v.push({type:12,data:a[C]});for(let C=0;C<e.length;++C)v.push(...G(e[C].dims));v.push(...G(i));let S=K("output",m,i.length),w=S.indicesGet("indices",o),x=Array.from(Array(a.length).keys()).map(C=>`uniforms.sizeInConcatAxis${C}`).join(","),E=C=>`\n\n  ${(()=>{C.registerUniform("outputSize","u32");for(let _=0;_<e.length;_++)C.registerUniform(`sizeInConcatAxis${_}`,"u32");return C.declareVariables(...p,S)})()}\n\n  ${jd(a.length,x)}\n\n  ${C.mainStart()}\n    ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n    var indices = ${S.offsetToIndices("global_idx")};\n\n    let inputIndex = calculateInputIndex(${w});\n    if (inputIndex != 0u) {\n      let sizeInConcatAxis = array<u32, ${a.length}u>(${x});\n      ${w} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${Kd(p,S)}\n  }`;return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:v}),getShaderSource:E}},Bs=(e,t)=>{qd(e.inputs),e.compute(Yd(e.inputs,t.axis))},Ms=e=>Te({axis:e.axis})});var Pt,Ot,kt,Bn,Gt=J(()=>{"use strict";be();Ee();Pt=(e,t)=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(uniforms.clip_min), ${t}(uniforms.clip_max));`;case"HardSigmoid":return`value = max(${t}(0.0), min(${t}(1.0), ${t}(uniforms.alpha) * value + ${t}(uniforms.beta)));`;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},Ot=(e,t)=>{e.activation==="Clip"?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"&&t.push({type:1,data:e.alpha},{type:1,data:e.beta})},kt=(e,t)=>{e.activation==="Clip"?t.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"&&t.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"})},Bn=e=>{let t=e?.activation||"";if(t==="HardSigmoid"){let[r,o]=e?.activation_params||[.2,.5];return{activation:t,alpha:r,beta:o}}else if(t==="Clip"){let[r,o]=e?.activation_params||[In,Tn];return{activation:t,clipMax:o,clipMin:r}}return{activation:t}}});var je,Mn,zn=J(()=>{"use strict";je=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},Mn=e=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      `});var Un,Eo=J(()=>{"use strict";Un=e=>`\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));\n}\n`});var Zd,Jd,Hr,Us,Xd,Gr,Qd,Vn,Lr=J(()=>{"use strict";be();Ee();Ie();Gt();zn();Zd=(e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `,Jd=(e,t)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`,Hr=(e,t,r="f32",o,i=!1,u=32,a=!1,p=32)=>{let m=t[1]*e[1],h=t[0]*e[0],d=i?m:u,y=i?u:m,v=d/t[0],S=u/t[1];if(!((i&&v===4&&e[1]===4||!i&&(v===3||v===4))&&d%t[0]===0&&u%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${i} is true, innerElementSize ${v} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${v} must be 3 or 4.\n  tileAWidth ${d} must be divisible by workgroupSize[0]${t[0]}. tileInner ${u} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub: array<array<vec${v}<${r}>, ${d/v}>, ${y}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${r}>, ${h/e[0]}>, ${u}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${v};\nconst tileInner = ${u};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${a?"0":"i32(globalId.z)"};\n  ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n  let globalRowStart = i32(workgroupId.y) * ${m};\n\n  let num_tiles = ${a?`${Math.ceil(p/u)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n  var kStart = ${a?`i32(globalId.z) * ${p}`:"0"};\n\n  var acc: array<vec4<${r}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${S};\n  for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${Zd(i,o)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${S}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${o?", batchIndices":""});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${v===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${Jd(i,v)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`},Us=(e,t)=>e?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${t?", batchIndices":""});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${t?", batchIndices":""});\n            `,Xd=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Gr=(e,t,r="f32",o,i=!1,u=32,a=!1,p=32,m=!1)=>{let h=e[1]*t[1],d=e[0]*t[0],y=i?h:u,v=i?u:h;if(!(v%t[1]===0&&y%t[0]===0&&u%t[1]===0))throw new Error(`tileAHight ${v} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${y} must be divisible by workgroupSize[0]${t[0]}, tileInner ${u} must be divisible by workgroupSize[1]${t[1]}`);let S=v/t[1],w=y/t[0],x=u/t[1],E=m?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${h};\n    let globalColStart = i32(workgroupId.x) * ${d};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${v}; inputRow = inputRow + ${t[1]}) {\n        for (var inputCol = localCol; inputCol < ${y}; inputCol = inputCol + ${t[0]}) {\n          ${Us(i,o)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${u}; inputRow = inputRow + ${t[1]}) {\n            for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${t[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${o?", batchIndices":""});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${r}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${i?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${h};\n\nlet tileRowA = i32(localId.y) * ${S};\nlet tileColA = i32(localId.x) * ${w};\nlet tileRowB = i32(localId.y) * ${x};\n// Loop over shared dimension.\nfor (var t = 0; t < num_tiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${S}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${w}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${Us(i,o)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${x}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${o?", batchIndices":""});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${r}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${Xd(i)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<${r}, ${y}>, ${v}>;\n  var<workgroup> mm_Bsub : array<array<${r}, ${d}>, ${u}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${u};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${a?"0":"i32(globalId.z)"};\n    ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n    let num_tiles = ${a?`${Math.ceil(p/u)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n    var kStart = ${a?`i32(globalId.z) * ${p}`:"0"};\n\n    var acc : array<array<${r}, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${E}\n  }\n`},Qd=(e,t,r,o,i,u=!1)=>{let[a,p,m]=i,[h,d,y,v]=o,S=hr(a,m),w=hr(p,m),x=Ge(o[0].type.tensor),E=()=>{let T=d.rank,O=h.rank,z=`var aIndices: ${d.type.indices};`;for(let M=T-2-1,N=O-1;M>=0;M--,N--)z+=`\naIndices[${M}] = ${O>1?`batchIndices[${N}]`:"batchIndices"};`;return S.forEach(M=>{z+=`\naIndices[${M}] = 0;`}),z+=`\naIndices[${T-2}] = u32(row);\n                   aIndices[${T-1}] = u32(colIn);`,z},C=()=>{let T=y.rank,O=h.rank,z=`var bIndices: ${y.type.indices};`;for(let M=T-2-1,N=O-1;M>=0;M--,N--)z+=`\nbIndices[${M}] = ${O>1?`batchIndices[${N}]`:"batchIndices"};`;return w.forEach(M=>{z+=`\nbIndices[${M}] = 0;`}),z+=`\nbIndices[${T-2}] = u32(row);\n                   bIndices[${T-1}] = u32(colIn);`,z};return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${h.type.indices}) -> ${je(e,x)} {\n      var value = ${je(e,x)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)\n      {\n        ${E()}\n        value = ${d.getByIndices("aIndices")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${h.type.indices}) -> ${je(e,x)} {\n      var value = ${je(e,x)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)\n      {\n        ${C()}\n        value = ${y.getByIndices("bIndices")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${je(e,x)}) {\n      let col = colIn * ${e};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${t?`value = value + ${u?"bias[colIn]":`${je(e,x)}(bias[row])`};`:""}\n        ${r}\n        ${v.setByIndices("vec3<u32>(coords)","value")}\n      }\n    }\n    `},Vn=(e,t,r,o,i=!1)=>{let u=e[0].dims,a=e[1].dims,p=u.slice(0,-2),m=a.slice(0,-2),h=o?o.slice(0,-2):r.slice(0,-2),d=W.size(h),y=u[u.length-2],v=u[u.length-1],S=a[a.length-1],w=v%4===0&&S%4===0,x=y<=8?[4,1,1]:[4,4,1],E=[8,8,1],C=[Math.ceil(S/E[0]/x[0]),Math.ceil(y/E[1]/x[1]),Math.ceil(d/E[2]/x[2])],_=w?4:1,T=[...p,y,v/_],O=T.length,z=[...m,v,S/_],M=z.length,N=[d,y,S/_],j=[{type:6,data:y},{type:6,data:S},{type:6,data:v}];Ot(t,j),j.push(...G(h),...G(T),...G(z));let ue=["rank","rank"],k=e.length>2;k&&(j.push(...G(e[2].dims)),ue.push("rank")),j.push(...G(N));let te=Be=>{let Ue=h.length,$e=En("batchDims",e[0].dataType,Ue,1),we=Ge(e[0].dataType),de=V("a",e[0].dataType,O,_),Pe=V("b",e[1].dataType,M,_),xe=K("result",e[0].dataType,N.length,_),oe=[de,Pe];if(k){let Ke=i?_:1;oe.push(V("bias",e[2].dataType,e[2].dims.length,Ke))}let _e=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];kt(t,_e);let Oe=Pt(t,xe.type.value),ke=Qd(_,k,Oe,[$e,de,Pe,xe],[p,m,h],i);return`\n  ${Be.registerUniforms(_e).registerInternalVariables($e).declareVariables(...oe,xe)}\n  ${ke}\n  ${w?Hr(x,E,we,$e):Gr(x,E,we,$e)}\n                   `};return{name:"MatMul",shaderCache:{hint:`${x};${t.activation};${w};${i}`,inputDependencies:ue},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:C[0],y:C[1],z:C[2]},programUniforms:j}),getShaderSource:te}}});var ec,Vs,Ws=J(()=>{"use strict";be();Ht();Ie();Gt();zn();Eo();Lr();ec=(e,t,r,o,i=!1,u,a=4,p=4,m=4,h="f32")=>{let d=k=>{switch(k){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${h}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${k} is not supported.`)}},y=k=>{switch(k){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${k} is not supported.`)}},v=e?`\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    `:`\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    `,S=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,w=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",x=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",E=e?"row":"col",C=e?"col":"row",_=`\n    let inChannels = i32(uniforms.w_shape[2]);\n    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n    let outRow = ${E} / outWidth;\n    let outCol = ${E} % outWidth;\n\n    let WRow = ${C} / (i32(uniforms.w_shape[1]) * inChannels);\n    let WCol = ${C} / inChannels % i32(uniforms.w_shape[1]);\n    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];\n    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];\n    let xCh = ${C} % inChannels;\n    var resData = ${je(a,h)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the \'same\' padding type.\n    if (xRow >= 0 && xRow < ${w} && xCol >= 0 && xCol < ${x}) {\n      ${v}\n      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));\n      ${d(a)}\n    }\n    return resData;`,T=e?t&&o?`\n    let col = colIn * ${a};\n    ${_}`:`\n    let col = colIn * ${a};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n      ${_}\n    }\n    return ${je(a,h)}(0.0);`:o&&r?`\n    let col = colIn * ${a};\n    ${_}`:`\n    let col = colIn * ${a};\n    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n      ${_}\n    }\n    return ${je(a,h)}(0.0);`,O=`${y(p)}`,z=je(m,h),M=e?je(a,h):je(p,h),N=e?je(p,h):je(a,h),j=Pt(u,z);return`\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${M} {\n      ${e?T:O}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${N} {\n      ${e?O:T}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${z}) {\n      let col = colIn * ${m};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${S}\n      ${Mn(i)}\n      ${j}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`},Vs=(e,t,r,o,i,u,a,p)=>{let m=t.format==="NHWC",h=m?e[0].dims[3]:e[0].dims[1],d=r[0],y=m?r[2]:r[3],v=m?r[1]:r[2],S=m?r[3]:r[1],w=m&&(h%4===0||h%3===0)&&S%4===0,x=m?S:y*v,E=m?y*v:S,C=[8,8,1],_=o<=8?[4,1,1]:[4,4,1],T=[Math.ceil(x/C[0]/_[0]),Math.ceil(E/C[1]/_[1]),Math.ceil(d/C[2]/_[2])];ze("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${T}`);let O=w?m&&h%4!==0?3:4:1,z=C[1]*_[1],M=C[0]*_[0],N=Math.max(C[0]*O,C[1]),j=o%z===0,ue=i%M===0,k=u%N===0,te=w?[O,4,4]:[1,1,1],Be=[{type:6,data:o},{type:6,data:i},{type:6,data:u},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];Ot(t,Be),Be.push(...G(e[0].dims),...G(e[1].dims));let Ue=["rank","rank"];a&&(Be.push(...G(e[2].dims)),Ue.push("rank")),Be.push(...G(r));let $e=we=>{let de=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];kt(t,de);let Pe=w?4:1,xe=Ge(e[0].dataType),oe=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${w?`vec4<${xe}>`:xe}) {\n        result[flatIndex] = ${w?`vec4<${xe}>`:xe}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${w?`vec4<${xe}>`:xe}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${w?"/ 4":""}, value);\n      }`,_e=V("x",e[0].dataType,e[0].dims.length,O===3?1:O),Oe=V("w",e[1].dataType,e[1].dims.length,Pe),ke=[_e,Oe],Ke=K("result",e[0].dataType,r.length,Pe);if(a){let F=V("bias",e[2].dataType,e[2].dims.length,Pe);ke.push(F),oe+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${w?`vec4<${xe}>`:xe} {\n          return bias[coords.${m?"w":"y"}${w?"/ 4":""}];\n        }`}return`\n        ${Un("uniforms.result_strides")}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${we.registerUniforms(de).declareVariables(...ke,Ke)}\n        ${oe}\n        ${ec(m,j,ue,k,a,t,te[0],te[1],te[2],xe)}\n        ${w?Hr(_,C,xe,void 0,!m,N):Gr(_,C,xe,void 0,!m,N,!1,void 0,p)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${O};${w};${j};${ue};${k};${z};${M};${N}`,inputDependencies:Ue},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:T[0],y:T[1],z:T[2]},programUniforms:Be}),getShaderSource:$e}}});var Po,Ns=J(()=>{"use strict";be();Ee();Ie();ko();Gt();Po=(e,t,r)=>{let o=e.length>2,i=o?"value += b[output_channel];":"",u=e[0].dims,a=e[1].dims,p=a[0]/t.group,m=t.format==="NHWC",h=Oo(u,a,t.dilations,t.pads,t.strides,m),d=W.size(h),y=[{type:12,data:d},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:p}];Ot(t,y),y.push(...G(u),...G(a),...G(h));let v=["rank","rank"];o&&(y.push(...G(e[2].dims)),v.push("rank")),y.push(...G(h));let S=w=>{let x=K("output",e[0].dataType,h.length),E=Pt(t,x.type.value),C=V("x",e[0].dataType,u.length),_=V("w",e[1].dataType,a.length),T=[C,_];o&&T.push(V("b",e[2].dataType,e[2].dims));let O=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];return kt(t,O),`\n  ${w.registerUniforms(O).declareVariables(...T,x)}\n\n  ${w.mainStart()}\n    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let outputIndices = ${x.offsetToIndices("global_idx")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${m?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${m?1:2}], outputIndices[${m?2:3}]) * uniforms.strides - uniforms.pads;\n    let group_id: u32 = output_channel / uniforms.output_channels_per_group;\n\n    var value: ${x.type.value} = ${x.type.value}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {\n      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];\n\n        if (xHeight < 0u || xHeight >= uniforms.x_shape[${m?1:2}]) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];\n          if (xWidth < 0u || xWidth >= uniforms.x_shape[${m?2:3}]) {\n            continue;\n          }\n\n          let xVal = ${m?C.get("batch","xHeight","xWidth","input_channel"):C.get("batch","input_channel","xHeight","xWidth")};\n          let wVal = ${_.get("output_channel","wInChannel","wHeight","wWidth")};\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${i}\n    ${E}\n    ${x.setByOffset("global_idx","value")}\n  }`};return{name:"GroupedConv",shaderCache:{hint:t.cacheKey,inputDependencies:v},getRunData:()=>({outputs:[{dims:r?r(h):h,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:y}),getShaderSource:S}}});var Ro,tc,Hs,Do=J(()=>{"use strict";be();Ee();Lr();Ie();Gt();Ro=(e,t,r,o,i=!1)=>{let u=e[0].dims,a=e[1].dims,p=u[u.length-2],m=a[a.length-1],h=u[u.length-1],d=Le(m),y=Le(h),v=Le(p),S=W.size(r)/d/v,w=e.length>2,x=o?o.slice(0,-2):r.slice(0,-2),C=[W.size(x),p,m],_=[{type:12,data:S},{type:12,data:p},{type:12,data:m},{type:12,data:h}];Ot(t,_),_.push(...G(x),...G(u),...G(a)),w&&_.push(...G(e[2].dims)),_.push(...G(C));let T=O=>{let z=En("batch_dims",e[0].dataType,x.length),M=V("a",e[0].dataType,u.length,y),N=V("b",e[1].dataType,a.length,d),j=K("output",e[0].dataType,C.length,d),ue=Pt(t,j.type.value),k=[M,N],te="";if(w){let oe=i?d:1;k.push(V("bias",e[2].dataType,e[2].dims.length,oe)),te=`${i?`value += bias[col / ${oe}];`:`value += ${j.type.value}(bias[row + i]);`}`}let Be=u.slice(0,-2),Ue=a.slice(0,-2),$e=hr(Be,x),we=hr(Ue,x),de=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];kt(t,de);let Pe=(oe,_e)=>{let Oe=oe.rank,ke=oe.name;if(Oe===2)return`var ${ke}_indices = ${oe.type.indices}(0u, 0u);`;let Ke=z.rank,F=`var ${ke}_indices: ${oe.type.indices};`;for(let ae=Oe-2-1,ge=Ke-1;ae>=0;ae--,ge--)F+=`\n${ke}_indices[${ae}] = ${Ke>1?`batch_indices[${ge}]`:"batch_indices"};`;return _e.forEach(ae=>{F+=`\n${ke}_indices[${ae}] = 0;`}),F+=`${ke}_indices[${Oe-2}] = 0u;\n                     ${ke}_indices[${Oe-1}] = 0u;`,F},xe=()=>{let oe=`var a_data: ${M.type.value};`;for(let _e=0;_e<y;_e++)oe+=`\n              let b_data${_e} = b[(b_offset + (k + ${_e}) * uniforms.N + col) / ${d}];`;for(let _e=0;_e<v;_e++){oe+=`a_data = a[(a_offset + (row + ${_e}) * uniforms.K + k) / ${y}];`;for(let Oe=0;Oe<y;Oe++)oe+=`\n            values[${_e}] = fma(${N.type.value}(a_data${y===1?"":`[${Oe}]`}), b_data${Oe}, values[${_e}]);\n`}return oe};return`\n  ${O.registerUniforms(de).registerInternalVariables(z).declareVariables(...k,j)}\n  ${O.mainStart()}\n    ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let col = (global_idx % (uniforms.N / ${d})) * ${d};\n    var index1 = global_idx / (uniforms.N / ${d});\n    let stride1 = uniforms.M / ${v};\n    let row = (index1 % stride1) * ${v};\n    let batch = index1 / stride1;\n\n    ${r.length===2?"":`let batch_indices = ${z.offsetToIndices("batch")};`}\n    ${Pe(M,$e)}\n    let a_offset = ${M.indicesToOffset("a_indices")};\n    ${Pe(N,we)}\n    let b_offset = ${N.indicesToOffset("b_indices")};\n    var values: array<${j.type.value}, ${v}>;\n    for (var k: u32 = 0u; k < uniforms.K; k = k + ${y}) {\n      ${xe()}\n    }\n    for (var i = 0u; i < ${v}u; i++) {\n      var value = values[i];\n      ${te}\n      ${ue}\n      let cur_indices = ${j.type.indices}(batch, row + i, col);\n      let offset = ${j.indicesToOffset("cur_indices")};\n      ${j.setByOffset(`offset / ${d}`,"value")};\n    }\n  }\n  `};return{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${d};${y};${v};${i}`,inputDependencies:w?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(S/64)},programUniforms:_}),getShaderSource:T}},tc=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},Hs=e=>{tc(e.inputs);let t=xt.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can\'t use matmul on the given tensors");let r=t[t.length-1],o=e.inputs[0].dims[e.inputs[0].dims.length-1];r<8&&o<8?e.compute(Ro(e.inputs,{activation:""},t)):e.compute(Vn(e.inputs,{activation:""},t))}});var Oo,Gs,rc,Ls,Bo,nc,oc,Mo,ko=J(()=>{"use strict";Ee();Ws();Lr();Ns();Gt();Do();gr();Oo=(e,t,r,o,i,u)=>{let a=e[0],p=e.slice(u?1:2,u?3:4),m=p.length,h=t[0],y=t.slice(2).map((w,x)=>w+(w-1)*(r[x]-1)),S=p.map((w,x)=>w+o[x]+o[x+m]).map((w,x)=>Math.floor((w-y[x]+i[x])/i[x]));return S.splice(0,0,a),S.splice(u?3:1,0,h),S},Gs=[2,3,1,0],rc=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[1]*t.group;if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let i=e[0].dims.length-2;if(t.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(t.strides.length!==i)throw new Error(`strides should be ${i}D`);if(t.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},Ls=(e,t)=>{let r=e.kernelShape.slice();for(let u=2;u<t[1].dims.length;++u)r[u-2]===0&&(r[u-2]=t[1].dims[u]);let o=e.pads.slice();tr.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,o,e.format==="NHWC",e.autoPad);let i=Object.assign({},e);return Object.assign(i,{kernelShape:r,pads:o}),i},Bo=e=>{let t=Bn(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],i=e.dilations,u=e.group,a=e.kernel_shape,p=e.pads,m=e.strides,h=e.w_is_const();return{autoPad:o,format:r,dilations:i,group:u,kernelShape:a,pads:p,strides:m,wIsConst:h,...t,cacheKey:`${e.format};${t.activation};`}},nc=(e,t,r)=>{let o=Ls(r,t),i=r.format==="NHWC";if(r.group!==1){e.compute(Po(t,o));return}let u=t.length===3,a=t[0].dims[i?1:2],p=t[0].dims[i?2:3],m=t[0].dims[i?3:1],h=t[1].dims[2],d=t[1].dims[3],y=Oo(t[0].dims,t[1].dims,r.dilations,o.pads,r.strides,i),v=y[i?1:2],S=y[i?2:3],w=y[i?3:1],x=i&&h===a&&d===p&&r.pads[0]===0&&r.pads[1]===0;if(x||h===1&&d===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let M=y[0],N,j,ue,k=[];if(i){let Ue=e.kernelCustomData.wT??e.compute($t(t[1],Gs),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=Ue),x){let $e=a*p*m;N=t[0].reshape([1,M,$e]),j=Ue.reshape([1,$e,w]),ue=[1,M,w]}else N=t[0].reshape([M,a*p,m]),j=Ue.reshape([1,m,w]),ue=[M,v*S,w];k.push(N),k.push(j)}else N=t[0].reshape([M,m,a*p]),j=t[1].reshape([1,w,m]),ue=[M,w,v*S],k.push(j),k.push(N);u&&k.push(t[2]);let te=ue[2],Be=k[0].dims[k[0].dims.length-1];te<8&&Be<8?e.compute(Ro(k,o,y,ue,i),{inputs:k}):e.compute(Vn(k,o,y,ue,i),{inputs:k});return}let E=!0,C=e.kernelCustomData.wT??e.compute($t(t[1],Gs),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=C);let _=[t[0],C];u&&_.push(t[2]);let T=i?v*S:w,O=i?w:v*S,z=h*d*m;e.compute(Vs(_,o,y,T,O,z,u,E),{inputs:_})},oc=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&o.push(e.inputs[2]);let i=[0,t.pads[0],0,t.pads[1]],u=[1].concat(t.strides),a=[1].concat(t.dilations),p=[1].concat(t.kernelShape),m=Ls({...t,pads:i,strides:u,dilations:a,kernelShape:p},o);e.compute(Po(o,m,h=>r?[h[0],h[2],h[3]]:[]))},Mo=(e,t)=>{rc(e.inputs,t),e.inputs[0].dims.length===3?oc(e,t):nc(e,e.inputs,t)}});var ic,Fs,qs=J(()=>{"use strict";be();Ht();Ie();Gt();zn();Eo();Lr();ic=(e,t=!1,r,o=4)=>{let i=je(o,"f32"),u=C=>{switch(C){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];\n            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];\n            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];\n            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];\n            return vec4<f32>(v0, v1, v2, v3);\n            `;default:throw new Error(`innerElementSize ${C} is not supported.`)}},a=e?`\n      let coord = vec4<i32>(batch, iXR, iXC, xCh);\n      `:`\n      let coord = vec4<i32>(batch, xCh, iXR, iXC);\n      `,p=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,m=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",h=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",d=e?"row":"col",y=e?"col":"row",v=`\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      let outRow = ${d} / outWidth;\n      let outCol = ${d} % outWidth;\n\n      let WRow = ${y} / (uniforms.filter_dims[1] * inChannels);\n      let WCol = ${y} / inChannels % uniforms.filter_dims[1];\n      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);\n      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);\n      if (xR < 0.0 || xR >= f32(${m}) || fract(xR) > 0.0) {\n        return ${i}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(${h}) || fract(xC) > 0.0) {\n        return ${i}(0.0);\n      }\n      let iXR = i32(xR);\n      let iXC = i32(xC);\n      let xCh = ${y} % inChannels;\n      ${a}\n      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${o}];`,S=e?`\n      let col = colIn * ${o};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n        ${v}\n      }\n      return ${i}(0.0);`:`\n      let col = colIn * ${o};\n      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n        ${v}\n      }\n      return ${i}(0.0);`,w=`\n      let col = colIn * ${o};\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);\n      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];\n      if (${e?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {\n        let rowInner = row % inChannels;\n        let coord = vec4<i32>(coordX, coordY, col, rowInner);\n        ${u(o)}\n      }\n      return ${i}(0.0);\n      `,x=Pt(r,i);return`\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${i} {\n    ${e?S:w}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${i} {\n    ${e?w:S}\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${i}) {\n    let col = colIn * ${o};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n      var value = valueInput;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${p}\n      ${Mn(t)}\n      ${x}\n      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${o}] = value;\n    }\n  }`},Fs=(e,t,r,o,i,u,a,p)=>{let m=t.format==="NHWC",h=m?e[0].dims[3]:e[0].dims[1],d=r[0],y=m?r[2]:r[3],v=m?r[1]:r[2],S=m?r[3]:r[1],w=m?h%4===0&&S%4===0:y%4===0&&S%4===0,x=m?S:y*v,E=m?y*v:S,C=w?[8,8,1]:[x<=4||E<=4?4:16,x>4&&E<=4?4:16,1],_=w?[4,4,1]:[x<=4?1:4,x>4&&E<=4?1:4,1],T=[Math.ceil(x/C[0]/_[0]),Math.ceil(E/C[1]/_[1]),Math.ceil(d/C[2]/_[2])];ze("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${T}`);let O=w?4:1,z=Math.max(C[0]*O,C[1]),M=w?4:1,N=[t.kernelShape[m?1:2],t.kernelShape[m?2:3]],j=[N[0]+(t.dilations[0]<=1?0:(N[0]-1)*(t.dilations[0]-1)),N[1]+(t.dilations[1]<=1?0:(N[1]-1)*(t.dilations[1]-1))],ue=[j[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),j[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],k=[{type:6,data:o},{type:6,data:i},{type:6,data:u},{type:6,data:t.strides},{type:6,data:t.dilations},{type:6,data:N},{type:6,data:ue}];Ot(t,k),k.push(...G(e[0].dims),...G(e[1].dims));let te=["rank","rank"];a&&(k.push(...G(e[2].dims)),te.push("rank")),k.push(...G(r));let Be=Ue=>{let $e=V("x",e[0].dataType,e[0].dims.length,M),we=V("w",e[1].dataType,e[1].dims.length,1),de=K("result",e[0].dataType,r.length,M),Pe=[$e,we],xe="";if(a){let _e=V("bias",e[2].dataType,e[2].dims.length,M);Pe.push(_e),xe+=`\n          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${w?"vec4<f32>":"f32"} {\n            return bias[coords.${m?"w":"y"}${w?"/ 4":""}];\n          }`}let oe=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:N.length},{name:"pads",type:"i32",length:ue.length}];return kt(t,oe),`\n        ${Un("uniforms.result_strides")}\n        ${Ue.registerUniforms(oe).declareVariables(...Pe,de)};\n        ${xe}\n        ${ic(m,a,t,O)}\n        ${w?Hr(_,C,"f32",void 0,!m,z):Gr(_,C,"f32",void 0,!m,z,!1,void 0,p)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${t.cacheKey};${_};${C};${w}`,inputDependencies:te},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:T[0],y:T[1],z:T[2]},programUniforms:k}),getShaderSource:Be}}});var ac,zo,js=J(()=>{"use strict";be();Ht();Ee();Ie();ac=(e,t,r,o,i,u=!1,a,p,m=!1)=>{let h=m?1:2,d=m?2:3,y=m?3:1,v=u?2:1,S=`\n  fn setOutputAtIndex(flatIndex : u32, value : ${u?`vec4<${a}>`:a}) {\n    result[flatIndex] = ${u?`vec4<${a}>`:a}(value);\n  }`;o&&(S+=`\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${u?`vec4<${a}>`:a} {\n      return bias[coords.${m?"w":"y"}${u?"/ 4":""}];\n    }`);let w=u?4:1,x=V("W",t[1].dataType,t[1].dims.length,w),E=V("Dy",t[0].dataType,t[0].dims.length,w),C=[E,x];o&&C.push(V("bias",t[2].dataType,[r[y]].length,w));let _=K("result",t[0].dataType,r.length,w),T=`{\n        let batch: u32 = ${i?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];\n        let r = ${i?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];\n        let c = ${i?"global_id.y":"workgroup_id.y"} * ${v};\n        let d1: u32 = ${i?"global_id.x":"workgroup_id.x"} * 4;\n\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd: array<vec4<${a}>, ${v}>;\n        for (var i = 0; i < ${v}; i++) {\n          dotProd[i] = vec4<${a}>(0.0);\n        }\n        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {\n          var dyR = (${a}(dyCorner.x) + ${a}(wR)) / ${a}(uniforms.strides.x);\n          let wRPerm = uniforms.filter_dims[0] - 1 - wR;\n          if (dyR < 0.0 || dyR >= ${a}(uniforms.Dy_shape[1]) ||\n              fract(dyR) > 0.0 || wRPerm < 0) {\n            continue;\n          }\n          let idyR: u32 = u32(dyR);\n\n          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {\n            let dyC = (${a}(dyCorner.y) + ${a}(wC)) / ${a}(uniforms.strides.y);\n            let dyC2 = (${a}(dyCorner.y) + 1.0 + ${a}(wC)) / ${a}(uniforms.strides.y);\n            let wCPerm = uniforms.filter_dims[1] - 1 - wC;\n            if (wCPerm < 0) {\n              continue;\n            }\n            var bDyCVal = true;\n            var bDyCVal2 = true;\n            if (dyC < 0.0 || dyC >= ${a}(uniforms.Dy_shape[2]) ||\n                fract(dyC) > 0.0) {\n              bDyCVal = false;\n            }\n            if (dyC2 < 0.0 || dyC2 >= ${a}(uniforms.Dy_shape[2]) ||\n                fract(dyC2) > 0.0) {\n              bDyCVal2 = false;\n            }\n\n            let idyC: u32 = u32(dyC);\n            let idyC2: u32 = u32(dyC2);\n            if (bDyCVal && bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${E.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${a}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n\n                xValue =  ${E.get("batch","idyR","idyC2","d2")};\n\n                dotProd[1] = dotProd[1] + vec4<${a}>(dot(xValue, wValue0),\n                                                    dot(xValue, wValue1),\n                                                    dot(xValue, wValue2),\n                                                    dot(xValue, wValue3));\n              }\n            } else if (bDyCVal) {\n              let d2Length = uniforms.Dy_shape[${y}];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${E.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${a}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n              }\n            } else if (bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${E.get("batch","idyR","idyC2","d2")};\n                let tmpval = vec4<${a}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[1] = dotProd[1] + tmpval;\n              }\n            }\n          }\n        }\n\n        for (var i: u32 = 0; i < ${v}; i = i + 1) {\n          let value = dotProd[i] + ${o?"bias[c+i]":`vec4<${a}>(0.0)`};\n          ${_.set("batch","r","c + i","d1","value")};\n        }\n      }`,O=`\n          let outputIndices = ${_.offsetToIndices("global_idx")};\n          let batch = ${_.indicesGet("outputIndices",0)};\n          let d1 = ${_.indicesGet("outputIndices",y)};\n          let r = ${_.indicesGet("outputIndices",h)};\n          let c = ${_.indicesGet("outputIndices",d)};\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;\n          let dyRCorner = dyCorner.x;\n          let dyCCorner = dyCorner.y;\n          let groupId = d1 / uniforms.output_channels_per_group;\n          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n          // ? = to be determined. : = across all values in that axis.\n          var dotProd = ${a}(0.0);\n          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {\n            if (wR % uniforms.dilations.x != 0) {\n              continue;\n            }\n            let dyR = (${a}(dyRCorner) + ${a}(wR)) / ${a}(uniforms.strides[0]);\n            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;\n            if (dyR < 0.0 || dyR >= ${a}(uniforms.Dy_shape[${h}]) || fract(dyR) > 0.0 ||\n                wRPerm < 0) {\n              continue;\n            }\n            let idyR: u32 = u32(dyR);\n\n            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {\n              if (wC % uniforms.dilations.y != 0) {\n                continue;\n              }\n              let dyC = (${a}(dyCCorner) + ${a}(wC)) / ${a}(uniforms.strides.y);\n              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;\n              if (dyC < 0.0 || dyC >= ${a}(uniforms.Dy_shape[${d}]) ||\n                  fract(dyC) > 0.0 || wCPerm < 0) {\n                continue;\n              }\n              let idyC: u32 = u32(dyC);\n              var inputChannel = groupId * uniforms.input_channels_per_group;\n              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {\n                let xValue = ${m?E.get("batch","idyR","idyC","inputChannel"):E.get("batch","inputChannel","idyR","idyC")};\n                let wValue = ${x.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};\n                dotProd = dotProd + xValue * wValue;\n                inputChannel = inputChannel + 1;\n              }\n            }\n          }\n          let value = dotProd + ${o?"bias[d1]":`${a}(0.0)`};\n          ${_.setByOffset("global_idx","value")};\n        `;return`\n  ${e.registerUniforms(p).declareVariables(...C,_)}\n  ${S}\n\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};\n  ${u?T:O}}`},zo=(e,t,r)=>{let o=e.length>2,i=t.outputShape,u=W.size(i),a=[Math.ceil(u/64),1,1];ze("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${a}`);let p=t.format==="NHWC",m=["rank","rank"],h=[t.strides[0],t.strides[1]],d=[t.kernelShape[p?1:2],t.kernelShape[p?2:3]],y=[t.dilations[0],t.dilations[1]],v=[d[0]+(t.dilations[0]<=1?0:(t.kernelShape[p?1:2]-1)*(t.dilations[0]-1)),d[1]+(t.dilations[1]<=1?0:(t.kernelShape[p?2:3]-1)*(t.dilations[1]-1))],S=[v[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),v[1]-1-Math.floor(t.pads[1]+t.pads[3])/2],w=!1,x=t.group,E=e[1].dims,C=E[0]/x,_=E[1],T=[{type:6,data:u},{type:12,data:h},{type:12,data:d},{type:12,data:y},{type:12,data:v},{type:6,data:S},{type:12,data:C},{type:12,data:_},...G(e[0].dims),...G(e[1].dims)];o&&(T.push(...G(e[2].dims)),m.push("rank")),T.push(...G(i));let O=a[1]===1&&a[2]===1,z=M=>{let N=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:h.length},{name:"filter_dims",type:"u32",length:d.length},{name:"dilations",type:"u32",length:d.length},{name:"effective_filter_dims",type:"u32",length:v.length},{name:"pads",type:"i32",length:S.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],j=Ge(e[0].dataType);return`${ac(M,e,i,o,O,w,j,N,p)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};`,inputDependencies:m},getRunData:()=>({dispatchGroup:{x:a[0],y:a[1],z:a[2]},outputs:[{dims:r?r(i):i,dataType:e[0].dataType}],programUniforms:T}),getShaderSource:z}}});var sc,uc,lc,Ks,Ys,dc,cc,pc,mc,Zs,Js=J(()=>{"use strict";qs();js();Gt();gr();sc=(e,t,r,o,i,u)=>(e-1)*t+r+(o-1)*i+1-u,uc=(e,t,r,o,i)=>{let u=Math.floor(e/2);t==="SAME_UPPER"?(r[o]=u,r[i]=e-u):t==="SAME_LOWER"&&(r[o]=e-u,r[i]=u)},lc=(e,t,r,o,i,u,a,p,m,h)=>{let d=e.length-2,y=h.length===0;if(m.length===0)for(let w=0;w<d;++w)m.push(0);let v=e[0],S=t[p?3:1]*i;for(let w=0,x=e.length-d-(p?1:0);w<d;++w,++x){let E=e[x],C=y?E*a[w]:h[w],_=sc(E,a[w],u[w],t[x],r[w],C);uc(_,o,u,w,w+d),y&&h.push(a[w]*(E-1)+m[w]+(t[x]-1)*r[w]+1-u[w]-u[w+d])}h.splice(0,0,v),h.splice(p?3:1,0,S)},Ks=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((y,v)=>y*v,1)===0){r.length=0;for(let y=2;y<t[1].dims.length;++y)r.push(t[1].dims[y])}let o=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(o?3:1,0,t[1].dims[1]);let i=e.pads.slice(),u=e.outputShape.slice(),a=e.outputPadding.slice(),p=t[0].dims,m=e.dilations.slice();if(m.reduce((y,v)=>y+v,0)===0){let y=t[0].dims.length-2;m=new Array(y).fill(1)}let h=e.strides.slice();if(h.reduce((y,v)=>y+v,0)===0){let y=t[0].dims.length-2;h=new Array(y).fill(1)}lc(p,r,m,e.autoPad,e.group,i,h,o,a,u);let d=Object.assign({},e);return Object.assign(d,{kernelShape:r,pads:i,outputPadding:a,outputShape:u,dilations:m,strides:h}),d},Ys=e=>{let t=Bn(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],i=e.dilations,u=e.group,a=e.kernelShape,p=e.pads,m=e.strides,h=e.wIsConst(),d=e.outputPadding,y=e.outputShape;return{autoPad:o,format:r,dilations:i,group:u,kernelShape:a,outputPadding:d,outputShape:y,pads:p,strides:m,wIsConst:h,...t,cacheKey:`${e.format};${t.activation};`}},dc=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[0];if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let i=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==i))throw new Error("invalid bias");let u=e[0].dims.length-2;if(t.dilations.reduce((d,y)=>d+y,0)>0&&t.dilations.length!==u)throw new Error(`dilations should be ${u}D`);if(t.strides.reduce((d,y)=>d+y,0)>0&&t.strides.length!==u)throw new Error(`strides should be ${u}D`);if(t.pads.reduce((d,y)=>d+y,0)>0&&t.pads.length!==u*2)throw new Error(`pads should be ${u*2}D`);if(t.outputPadding.length!==u&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${u}D`);if(t.kernelShape.reduce((d,y)=>d+y,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},cc=[2,3,1,0],pc=(e,t,r)=>{let o=Ks(r,t),i=r.format==="NHWC",u=o.outputShape,a=u[i?3:1],p=t[0].dims[i?3:1];if(o.group!==1||a===1&&p===1){e.compute(zo(t,o));return}let m=u[i?1:2],h=u[i?2:3],d=t[1].dims[2],y=t[1].dims[3],v=i?m*h:a,S=i?a:m*h,w=d*y*p,x=!0,E=e.kernelCustomData.wT??e.compute($t(t[1],cc),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=E);let C=[t[0],E],_=t.length===3;_&&(!i&&t[2].dims.length===1?C.push(t[2].reshape([t[2].dims[0],1,1])):C.push(t[2])),e.compute(Fs(C,o,u,v,S,w,_,x),{inputs:C})},mc=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];o.length===3&&o.push(e.inputs[2]);let i=t.kernelShape;(i.length===0||i[0]===0)&&(i=[e.inputs[1].dims[2]]);let u=t.dilations;(u.length===0||u[0]===0)&&(u=[1]);let a=t.strides;(a.length===0||a[0]===0)&&(a=[1]);let p=t.pads;p.length===0&&(p=[0,0]),p=[0,p[0],0,p[1]],a=[1].concat(a),u=[1].concat(u),i=[1].concat(i);let m=Ks({...t,pads:p,strides:a,dilations:u,kernelShape:i},o);e.compute(zo(o,m,h=>r?[h[0],h[2],h[3]]:[h[0],h[1],h[3]]))},Zs=(e,t)=>{dc(e.inputs,t),e.inputs[0].dims.length===3?mc(e,t):pc(e,e.inputs,t)}});var fc,Xs,Qs,eu=J(()=>{"use strict";be();Ee();Qe();Ie();fc=(e,t,r,o)=>{let i=W.size(t),u=t.length,a=V("input",e,u),p=K("output",e,u),m=r.dataType===6?r.getInt32Array()[0]:Number(r.getBigInt64Array()[0]),h=W.normalizeAxis(m,u),d=y=>{let v=` i32(${a.indicesGet("inputIndices","uniforms.axis")}) `,S=pe("uniforms.input_shape","uniforms.axis",u),w=o.reverse?v+(o.exclusive?" + 1":""):"0",x=o.reverse?S:v+(o.exclusive?"":" + 1");return`\n                ${y.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(a,p)}\n                ${y.mainStart()}\n                  ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n                  var inputIndices = ${p.offsetToIndices("global_idx")};\n                  var sum = ${p.type.value}(0);\n                  let first : i32 = ${w};\n                  let last : i32 = ${x};\n                  for (var i : i32 = first; i < last; i++) {\n                    ${a.indicesSet("inputIndices","uniforms.axis","u32(i)")};\n                    sum = sum + ${a.getByIndices("inputIndices")};\n                  }\n                  ${p.setByOffset("global_idx","sum")};\n                }`};return{name:"CumSum",shaderCache:{hint:o.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},{type:6,data:h},...G(t),...G(t)]}),getShaderSource:d}},Xs=(e,t)=>{let r=e.inputs[0].dims,o=e.inputs[0].dataType,i=e.inputs[1];e.compute(fc(o,r,i,t),{inputs:[0]})},Qs=e=>{let t=e.exclusive===1,r=e.reverse===1;return Te({exclusive:t,reverse:r})}});var Uo,Wn,tu,hc,gc,Vo,Wo,ru,yc,nu,ou,iu=J(()=>{"use strict";be();Ee();Qe();Ie();Uo="[a-zA-Z]|\\\\.\\\\.\\\\.",Wn="("+Uo+")+",tu="^"+Wn+"$",hc="("+Wn+",)*"+Wn,gc="^"+hc+"$",Vo=class{constructor(t=-1){this.symbolToIndices=new Map,this.inputIndex=t}addSymbol(t,r){let o=this.symbolToIndices.get(t);o===void 0?o=[r]:o.push(r),this.symbolToIndices.set(t,o)}},Wo=class{constructor(t,r){this.equation=r;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[o,i]=r.includes("->")?r.split("->",2):[r,""];if(!o.match(RegExp(gc)))throw new Error("Invalid LHS term");if(o.split(",").forEach((p,m)=>{let h=t[m].dims.slice();if(!p.match(RegExp(tu)))throw new Error("Invalid LHS term");let d=this.processTerm(p,!0,h,m);this.lhs.push(d)}),i==="")i+=[...this.symbolToInfo.entries()].filter(([p,m])=>m.count===1||p==="...").map(([p])=>p).join("");else if(!i.match(RegExp(Wn)))throw new Error("Invalid RHS");i.match(RegExp(Uo,"g"))?.forEach(p=>{if(p==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let m=this.symbolToInfo.get(p);if(m===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(m.dimValue)}}),this.rhs=this.processTerm(i,!1,this.outputDims)}addSymbol(t,r,o){let i=this.symbolToInfo.get(t);if(i!==void 0){if(i.dimValue!==r&&i.count!==1)throw new Error("Dimension mismatch");i.count++,i.inputIndices.push(o)}else i={count:1,dimValue:r,inputIndices:[o]};this.symbolToInfo.set(t,i)}processTerm(t,r,o,i=-1){let u=o.length,a=!1,p=[],m=0;if(!t.match(RegExp(tu))&&!r&&t!=="")throw new Error("Invalid LHS term");let h=t.match(RegExp(Uo,"g")),d=new Vo(i);return h?.forEach((y,v)=>{if(y==="..."){if(a)throw new Error("Only one ellipsis is allowed per input term");a=!0;let S=u-h.length+1;if(S<0)throw new Error("Ellipsis out of bounds");if(p=o.slice(m,m+S),this.hasEllipsis){if(this.ellipsisDims.length!==p.length||this.ellipsisDims.toString()!==p.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=p;else throw new Error("Ellipsis must be specified in the LHS");for(let w=0;w<p.length;w++){let x=String.fromCharCode("0".charCodeAt(0)+w);d.addSymbol(x,v+w),this.addSymbol(x,o[m++],i)}}else d.addSymbol(y,v+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(y,o[m++],i)}),d}},ru=e=>e+"_max",yc=(e,t,r,o)=>{let u=e.map(d=>d.length).map((d,y)=>V(`input${y}`,t,d)),a=W.size(o),p=K("output",t,o.length),m=[...r.symbolToInfo.keys()].filter(d=>!r.rhs.symbolToIndices.has(d)),h=d=>{let y=[],v="var prod = 1.0;",S="var sum = 0.0;",w="sum += prod;",x=[],E=[],C=[],_=[],T=r.symbolToInfo.size===r.rhs.symbolToIndices.size;r.symbolToInfo.forEach((z,M)=>{if(r.rhs.symbolToIndices.has(M)){let N=r.rhs.symbolToIndices.get(M)?.[0];N!==void 0&&r.lhs.forEach((j,ue)=>{if(z.inputIndices.includes(ue)){let k=j.symbolToIndices.get(M);if(k===void 0)throw new Error("Invalid symbol error");k.forEach(te=>{y.push(`${u[ue].indicesSet(`input${ue}Indices`,te,p.indicesGet("outputIndices",N))}`)})}})}else r.lhs.forEach((N,j)=>{if(z.inputIndices.includes(j)){let ue=N.symbolToIndices.get(M);if(ue===void 0)throw new Error("Invalid symbol error");ue.forEach(k=>{x.push(`${u[j].indicesSet(`input${j}Indices`,k,`${M}`)}`)}),_.push(`prod *= ${u[j].getByIndices(`input${j}Indices`)};`)}}),E.push(`for(var ${M}: u32 = 0; ${M} < uniforms.${ru(M)}; ${M}++) {`),C.push("}")});let O=T?[...y,`let sum = ${u.map((z,M)=>z.getByIndices(`input${M}Indices`)).join(" * ")};`]:[...y,S,...E,...x,v,..._,w,...C];return`\n            ${d.registerUniforms(m.map(z=>({name:`${ru(z)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...u,p)}\n\n            ${d.mainStart()}\n            ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n            var outputIndices = ${p.offsetToIndices("global_idx")};\n            ${u.map((z,M)=>`var input${M}Indices: ${u[M].type.indices};`).join(`\n`)}\n            ${O.join(`\n`)};\n            ${p.setByOffset("global_idx","sum")};\n          }`};return{name:"Einsum",shaderCache:{hint:r.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let d=m.filter(v=>r.symbolToInfo.has(v)).map(v=>({type:12,data:r.symbolToInfo.get(v)?.dimValue||0}));d.push({type:12,data:a});let y=e.map((v,S)=>[...G(v)]).reduce((v,S)=>v.concat(S),d);return y.push(...G(o)),{outputs:[{dims:o,dataType:t}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:y}},getShaderSource:h}},nu=(e,t)=>{let r=new Wo(e.inputs,t.equation),o=r.outputDims,i=e.inputs.map((u,a)=>u.dims);e.compute(yc(i,e.inputs[0].dataType,r,o))},ou=e=>{let t=e.equation.replace(/\\s+/g,"");return Te({equation:t})}});var bc,au,wc,vc,su,uu=J(()=>{"use strict";be();Ee();Ie();bc=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=r.length<t.length?0:r.length-t.length,i=t.length<r.length?0:t.length-r.length;for(;o<r.length&&i<t.length;++o,++i)if(r[o]!==t[i]&&r[o]!==1&&t[i]!==1)throw new Error("Expand requires shape to be broadcastable to input")},au=(e,t)=>{let r=e.length-t.length,o=[];for(let i=0;i<r;++i)o.push(e[i]);for(let i=0;i<t.length;++i)o.push(t[i]===1?e[i+r]:t[i]);return o},wc=(e,t)=>e.length>t.length?au(e,t):au(t,e),vc=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=wc(t,r),i=e[0].dataType,u=i===9?4:1,a=Math.ceil(W.size(o)/u),p=h=>{let d=V("input",i,t.length,u),y=K("output",i,o.length,u),v;if(i===9){let S=(w,x,E="")=>`\n          let outputIndices${x} = ${y.offsetToIndices(`outputOffset + ${x}u`)};\n          let offset${x} = ${d.broadcastedIndicesToOffset(`outputIndices${x}`,y)};\n          let index${x} = offset${x} / 4u;\n          let component${x} = offset${x} % 4u;\n          ${w}[${x}] = ${E}(${d.getByOffset(`index${x}`)}[component${x}]);\n        `;v=`\n        let outputOffset = global_idx * ${u};\n        var data = vec4<u32>(0);\n        ${S("data",0,"u32")}\n        ${S("data",1,"u32")}\n        ${S("data",2,"u32")}\n        ${S("data",3,"u32")}\n        ${y.setByOffset("global_idx","data")}\n      }`}else v=`\n        let outputIndices = ${y.offsetToIndices("global_idx")};\n        let inputOffset = ${d.broadcastedIndicesToOffset("outputIndices",y)};\n        ${y.setByOffset("global_idx",d.getByOffset("inputOffset"))}\n      }`;return`\n    ${h.registerUniform("vec_size","u32").declareVariables(d,y)}\n    ${h.mainStart()}\n    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n    ${v}`},m=[{type:12,data:a},...G(t),...G(o)];return{name:"Expand",shaderCache:{hint:`${o.length}`,inputDependencies:["rank"]},getShaderSource:p,getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:m})}},su=e=>{bc(e.inputs),e.compute(vc(e.inputs),{inputs:[0]})}});var $c,_c,lu,du,cu=J(()=>{"use strict";be();Ee();Qe();Ie();$c=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},_c=(e,t)=>{let r=e[0].dims,o=e[1].dims,i=r.length,u=W.normalizeAxis(t.axis,i),a=r.slice(0);a.splice(u,1,...o);let p=r[u],m=e[0].dataType===9?4:1,h=Math.ceil(W.size(a)/m),d=[{type:12,data:h},{type:6,data:p},{type:12,data:u},...G(e[0].dims),...G(e[1].dims),...G(a)],y=v=>{let S=V("data",e[0].dataType,e[0].dims.length,m),w=V("inputIndices",e[1].dataType,e[1].dims.length),x=K("output",e[0].dataType,a.length,m),E=_=>{let T=o.length,O=`var indicesIndices${_}  = ${w.type.indices}(0);`;for(let z=0;z<T;z++)O+=`${T>1?`indicesIndices${_}[${z}]`:`indicesIndices${_}`} = ${a.length>1?`outputIndices${_}[uniforms.axis + ${z}]`:`outputIndices${_}`};`;O+=`\n          var idx${_} = ${w.getByIndices(`indicesIndices${_}`)};\n          if (idx${_} < 0) {\n            idx${_} = idx${_} + uniforms.axisDimLimit;\n          }\n          var dataIndices${_} = ${S.type.indices}(0);\n        `;for(let z=0,M=0;z<i;z++)z===u?(O+=`${i>1?`dataIndices${_}[${z}]`:`dataIndices${_}`} = u32(idx${_});`,M+=T):(O+=`${i>1?`dataIndices${_}[${z}]`:`dataIndices${_}`} = ${a.length>1?`outputIndices${_}[${M}]`:`outputIndices${_}`};`,M++);return O},C;if(e[0].dataType===9){let _=(T,O,z="")=>`\n          let outputIndices${O} = ${x.offsetToIndices(`outputOffset + ${O}u`)};\n          ${E(O)};\n          let offset${O} = ${S.indicesToOffset(`dataIndices${O}`)};\n          let index${O} = offset${O} / 4u;\n          let component${O} = offset${O} % 4u;\n          ${T}[${O}] = ${z}(${S.getByOffset(`index${O}`)}[component${O}]);\n        `;C=`\n        let outputOffset = global_idx * ${m};\n        var value = vec4<u32>(0);\n        ${_("value",0,"u32")}\n        ${_("value",1,"u32")}\n        ${_("value",2,"u32")}\n        ${_("value",3,"u32")}\n        ${x.setByOffset("global_idx","value")}\n      `}else C=`\n      let outputIndices = ${x.offsetToIndices("global_idx")};\n      ${E("")};\n      let value = ${S.getByIndices("dataIndices")};\n      ${x.setByOffset("global_idx","value")};\n      `;return`\n      ${v.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(S,w,x)}\n      ${v.mainStart()}\n        ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        ${C}\n      }`};return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:d}),getShaderSource:y}},lu=e=>Te({axis:e.axis}),du=(e,t)=>{let r=e.inputs;$c(r),e.compute(_c(e.inputs,t))}});var Sc,xc,pu,mu,fu=J(()=>{"use strict";be();Ee();Qe();Ie();Sc=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and\n                     indices input tensors be of same rank.`)},xc=(e,t)=>{let r=e[0].dims,o=e[0].dataType,i=r.length,u=e[1].dims,a=e[1].dataType,p=W.normalizeAxis(t.axis,i),m=r[p],h=u.slice(0),d=W.size(h),y=V("input",o,i),v=V("indicesInput",a,u.length),S=K("output",o,h.length),w=[{type:12,data:d},{type:6,data:m},{type:12,data:p}];return w.push(...G(r)),w.push(...G(u)),w.push(...G(h)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:h,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:w}),getShaderSource:C=>`\n      ${C.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(y,v,S)}\n      ${C.mainStart()}\n      ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n      let outputIndices = ${S.offsetToIndices("global_idx")};\n\n      var idx = ${v.getByOffset("global_idx")};\n      if (idx < 0) {\n        idx = idx + uniforms.axisDimLimit;\n      }\n      var inputIndices = ${y.type.indices}(outputIndices);\n      ${y.indicesSet("inputIndices","uniforms.axis","u32(idx)")};\n      let value = ${y.getByIndices("inputIndices")};\n\n      ${S.setByOffset("global_idx","value")};\n  }`}},pu=e=>Te({axis:e.axis}),mu=(e,t)=>{let r=e.inputs;Sc(r),e.compute(xc(e.inputs,t))}});var Cc,Ac,hu,gu,yu=J(()=>{"use strict";be();Ee();Ie();Cc=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},Ac=(e,t)=>{let r=e[0].dims.slice(),o=e[1].dims.slice(),[i,u,a]=An.getShapeOfGemmResult(r,t.transA,o,t.transB,e.length===3?e[2].dims:void 0),p=[i,u];if(!p)throw new Error("Can\'t use gemm on the given tensors");let m=W.size(p),h=[{type:12,data:m},{type:12,data:i},{type:12,data:u},{type:12,data:a},{type:1,data:t.alpha},{type:1,data:t.beta}],d=["type","type"];e.length===3&&(h.push(...G(e[2].dims)),d.push("rank")),h.push(...G(p));let y=v=>{let S="";t.transA&&t.transB?S="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":t.transA&&!t.transB?S="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!t.transA&&t.transB?S="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!t.transA&&!t.transB&&(S="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let w=t.alpha===1?"":"value *= uniforms.alpha;",x=V("a",e[0].dataType,e[0].dims),E=V("b",e[1].dataType,e[1].dims),C=x.type.value,_=null,T=[x,E];e.length===3&&(_=V("c",e[2].dataType,e[2].dims.length),T.push(_));let O=K("output",e[0].dataType,p.length);T.push(O);let z=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`\n  ${v.registerUniforms(z).declareVariables(...T)}\n\n  ${v.mainStart()}\n    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let m = global_idx / uniforms.N;\n    let n = global_idx % uniforms.N;\n\n    var value = ${C}(0);\n    for (var k: u32 = 0u; k < uniforms.K; k++) {\n      ${S}\n    }\n\n    ${w}\n    ${(()=>_!=null?`let cOffset = ${_.broadcastedIndicesToOffset("vec2(m, n)",O)}; value += ${C}(uniforms.beta) * ${_.getByOffset("cOffset")};`:"")()}\n    output[global_idx] = value;\n  }`};return{name:"Gemm",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:p,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:h}),getShaderSource:y}},hu=e=>{let t=e.transA,r=e.transB,o=e.alpha,i=e.beta;return{transA:t,transB:r,alpha:o,beta:i,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},gu=(e,t)=>{Cc(e.inputs),e.compute(Ac(e.inputs,t))}});var Ic,Tc,Ec,bu,wu=J(()=>{"use strict";be();Ee();Ie();Ic=(e,t)=>{let r=e[0].dims,o=r,i=2,u=W.sizeToDimension(r,i),a=W.sizeFromDimension(r,i),p=Le(a),m=a/p,h=[r[0],r[1],m],d=["rank","type","type"],y=[{type:12,data:a},{type:12,data:m}];y.push(...G(h),...G(h));let v=S=>{let w=V("x",e[0].dataType,h.length,p),x=V("scale",e[1].dataType,e[1].dims),E=V("bias",e[2].dataType,e[2].dims),C=K("output",e[0].dataType,h.length,p),_=[w,x,E,C],T=w.type.value,O=p===1?"f32":`vec${p}<f32>`,z=64,M=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`\n  var<workgroup> meanShared : f32;\n  var<workgroup> squaredNormShared : f32;\n  var<workgroup> workgroupShared : array<${O}, ${z}>;\n  const workgroupSize = ${z}u;\n  ${S.registerUniforms(M).declareVariables(..._)}\n  ${S.mainStart(z)}\n    let norm = global_idx / workgroupSize;\n    let batch = norm / uniforms.x_shape[1];\n    let channel = norm % uniforms.x_shape[1];\n    let localIndex = local_id.x;\n\n    // initialize workgroup memory\n    var initial = ${O}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      initial = initial + ${O}(${w.get("batch","channel","h")});\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the mean of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      meanShared = ${dt("workgroupShared[0]",p)} / f32(uniforms.normSize);\n    }\n    workgroupBarrier();\n\n    // reinitialize workgroup memory.\n    initial = ${O}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let deviation =  ${O}(${w.get("batch","channel","h")}) - ${O}(meanShared);\n      initial = initial + deviation * deviation;\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the sum of square of deviation of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      squaredNormShared = ${dt("workgroupShared[0]",p)};\n    }\n    workgroupBarrier();\n\n    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${t.epsilon}));\n    let channelScale = invStdDev * f32(${x.getByOffset("channel")});\n    let channelShift = f32(${E.getByOffset("channel")}) - meanShared * channelScale;\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let value = ${w.get("batch","channel","h")} * ${T}(${O}(channelScale)) + ${T}(${O}(channelShift));\n      ${C.set("batch","channel","h","value")};\n    }\n  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${t.epsilon};${p}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:u},programUniforms:y}),getShaderSource:v}},Tc=(e,t,r,o,i,u,a,p)=>{let m=Le(a),h=64,d=m===1?"vec2f":`mat2x${m}f`,y=m===1?"f32":`vec${m}f`,v=(M,N)=>`${d}(${M}, ${N})`,S=i*a/m,w=Math.ceil(u/h),x=["type"],E=[{type:12,data:w},{type:12,data:u},{type:12,data:Math.floor(a/m)},{type:12,data:Math.floor(u*a/m)}],C=M=>{let N=V("input",t.dataType,t.dims,m);return`\n  ${M.declareVariables(N)}\n  @group(0) @binding(1) var<storage, read_write> output : array<${d}>;\n  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};\n  @group(0) @binding(2) var<uniform> uniforms: Uniforms;\n\n  ${M.mainStart(h)}\n    let currentImageNumber = global_idx / ${h} / uniforms.C;\n    let currentChannelNumber = (global_idx / ${h}) % uniforms.C;\n    let wgId = global_idx % ${h};\n    let wgOffset = wgId * uniforms.wg_size;\n    if (wgOffset >= uniforms.H) {\n        return;\n    }\n    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);\n\n    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;\n    var sum = ${et("f32",m)};\n    var squaredSum = ${et("f32",m)};\n    for (var i: u32 = wgOffset; i < wgMax; i++) {\n        let value = ${y}(input[offset + i * uniforms.C]);\n        sum += value;\n        squaredSum += value * value;\n    }\n    output[global_idx] = ${v("sum","squaredSum")};\n  }`},_=e.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${m}`,inputDependencies:x},getRunData:()=>({outputs:[{dims:[i,a,h,2],dataType:1}],dispatchGroup:{x:i*a/m},programUniforms:E}),getShaderSource:C},{inputs:[t],outputs:[-1]})[0],T=[{type:12,data:S},{type:12,data:u},{type:12,data:Math.floor(a/m)},{type:12,data:Math.floor(h*a/m)}],O=["type","type","type"],z=M=>{let N=V("scale",r.dataType,r.dims,m),j=V("bias",o.dataType,o.dims,m);return`\n  @group(0) @binding(0) var<storage, read> input : array<${d}>;\n  @group(0) @binding(1) var<storage, read> scale : array<${N.type.storage}>;\n  @group(0) @binding(2) var<storage, read> bias : array<${j.type.storage}>;\n  @group(0) @binding(3) var<storage, read_write> output : array<${d}>;\n  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};\n  @group(0) @binding(4) var<uniform> uniforms: Uniforms;\n\n  ${M.mainStart()}\n    ${M.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}\n    let currentImageNumber = global_idx / uniforms.C;\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let offset = currentImageNumber * uniforms.image_size;\n    var sum = ${et("f32",m)};\n    var squaredSum = ${et("f32",m)};\n    for (var i: u32 = 0; i < ${h}; i++) {\n        let value = input[offset + i + currentChannelNumber * ${h}];\n        sum += value[0];\n        squaredSum += value[1];\n    }\n    sum = sum / f32(uniforms.H);\n    squaredSum = squaredSum / f32(uniforms.H);\n    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${p}));\n    let channelScale = invStdDev * ${y}(scale[currentChannelNumber]);\n    let channelShift = ${y}(bias[currentChannelNumber]) - sum * channelScale;\n\n    output[global_idx] = ${v("channelScale","channelShift")};\n  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${m};${p}`,inputDependencies:O},getRunData:()=>({outputs:[{dims:[i,a,2],dataType:1}],dispatchGroup:{x:Math.ceil(S/64)},programUniforms:T}),getShaderSource:z},{inputs:[_,r,o],outputs:[-1]})[0]},Ec=(e,t,r)=>{let o=t[0].dims,i=o,u=o[0],a=o[o.length-1],p=W.sizeFromDimension(o,1)/a,m=Le(a),h=W.size(i)/m,d=[{type:12,data:p},{type:12,data:Math.floor(a/m)}],y=["type","type"],v=Tc(e,t[0],t[1],t[2],u,p,a,r.epsilon),S=w=>{let x=Ge(t[0].dataType),E=m===1?"vec2f":`mat2x${m}f`,C=m===1?x:`vec${m}<${x}>`,_=V("input",t[0].dataType,t[0].dims,m),T=K("output",t[0].dataType,i,m);return`\n  @group(0) @binding(0) var<storage, read> input : array<${_.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scaleInput : array<${E}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${T.type.storage}>;\n  struct Uniforms {H: u32, C : u32};\n  @group(0) @binding(3) var<uniform> uniforms: Uniforms;\n\n  ${w.mainStart()}\n    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;\n    let scale = scaleInput[scaleOffset];\n    output[global_idx] = fma(input[global_idx], ${C}(scale[0]), ${C}(scale[1]));\n  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${m}`,inputDependencies:y},getRunData:()=>({outputs:[{dims:i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:d}),getShaderSource:S},{inputs:[t[0],v]})},bu=(e,t)=>{t.format==="NHWC"?Ec(e,e.inputs,t):e.compute(Ic(e.inputs,t))}});var Pc,Oc,vu,$u=J(()=>{"use strict";be();Ee();Ie();Pc=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Oc=(e,t,r)=>{let o=e[0].dims,i=e[1],u=e[2],a=o,p=W.normalizeAxis(t.axis,o.length),m=W.sizeToDimension(o,p),h=W.sizeFromDimension(o,p),d=W.size(i.dims),y=u?W.size(u.dims):0;if(d!==h||u&&y!==h)throw new Error(`Size of X.shape()[axis:] == ${h}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${d} and bias size of ${y}`);let v=[];for(let O=0;O<o.length;++O)O<p?v.push(o[O]):v.push(1);let S=Le(h),w=["type","type"],x=[{type:12,data:m},{type:1,data:h},{type:12,data:Math.floor(h/S)},{type:1,data:t.epsilon}];u&&w.push("type");let E=r>1,C=r>2,_=O=>{let z=Ge(e[0].dataType),M=[V("x",e[0].dataType,e[0].dims,S),V("scale",i.dataType,i.dims,S)];u&&M.push(V("bias",u.dataType,u.dims,S)),M.push(K("output",e[0].dataType,a,S)),E&&M.push(K("mean_data_output",1,v)),C&&M.push(K("inv_std_output",1,v));let N=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`\n  ${O.registerUniforms(N).declareVariables(...M)}\n  ${O.mainStart()}\n    ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}\n    let offset = global_idx * uniforms.norm_size_vectorized;\n    var meanVector = ${et("f32",S)};\n    var meanSquareVector = ${et("f32",S)};\n\n    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {\n      let value = ${vt(z,S,"x[h + offset]")};\n      meanVector += value;\n      meanSquareVector += value * value;\n    }\n    let mean = ${dt("meanVector",S)} / uniforms.norm_size;\n    let invStdDev =\n        inverseSqrt(${dt("meanSquareVector",S)} / uniforms.norm_size - mean * mean + uniforms.epsilon);\n\n    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {\n      let f32input = ${vt(z,S,"x[j + offset]")};\n      let f32scale = ${vt(z,S,"scale[j]")};\n      output[j + offset] = ${M[0].type.value}((f32input - mean) * invStdDev * f32scale\n        ${u?`+ ${vt(z,S,"bias[j]")}`:""}\n      );\n    }\n\n    ${E?"mean_data_output[global_idx] = mean":""};\n    ${C?"inv_std_output[global_idx] = invStdDev":""};\n  }`},T=[{dims:a,dataType:e[0].dataType}];return E&&T.push({dims:v,dataType:1}),C&&T.push({dims:v,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${S};${r}`,inputDependencies:w},getRunData:()=>({outputs:T,dispatchGroup:{x:Math.ceil(m/64)},programUniforms:x}),getShaderSource:_}},vu=(e,t)=>{Pc(e.inputs),e.compute(Oc(e.inputs,t,e.outputCount))}});var kc,Su,_u,Rc,No,xu,Cu=J(()=>{"use strict";be();Ee();Qe();xn();Io();Ie();gr();kc=(e,t)=>{let r=e[0],o=e[1],i=e[2],u=e[3],a=e[4],p=e[5],m=e[6],h=e[7];if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let d=!1,y=r.dims[0],v=r.dims[1],S=r.dims.length===3?d?r.dims[2]/3:r.dims[2]:t.numHeads*r.dims[4],w=v,x=0,E=0,C=Math.floor(S/t.numHeads);if(m&&h){if(m.dims.length!==4)throw new Error(\'Input "past_key" is expected to have 4 dimensions\');if(h.dims.length!==4)throw new Error(\'Input "past_value" is expected to have 4 dimensions\');x=m.dims[2],E=m.dims[2]}else if(m||h)throw new Error(\'Input "past_key" and "past_value" shall be both present or both absent\');let _;if(o){if(r.dims.length!==3)throw new Error(\'Input "query" is expected to have 3 dimensions when key is given\');if(o.dims.length<3||o.dims.length>5)throw new Error(\'Input "key" is expected to have 3, 4, or 5 dimensions\');if(r.dims[0]!==o.dims[0])throw new Error(\'Input "query" and "key" shall have same dim 0 (batch size)\');if(o.dims.length===3){if(o.dims[2]!==r.dims[2])throw new Error(\'Input "query" and "key" shall have same dim 2 (hidden_size)\');_=2,w=o.dims[1]}else if(o.dims.length===5){if(o.dims[2]!==t.numHeads||o.dims[3]!==2||o.dims[4]!==C)throw new Error(\'Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv\');if(i)throw new Error(\'Expect "value" be none when "key" has packed kv format.\');_=5,w=o.dims[1]}else{if(o.dims[1]!==t.numHeads||o.dims[3]!==C)throw new Error(\'Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key\');_=0,w=o.dims[2]}}else{if(r.dims.length!==3&&r.dims.length!==5)throw new Error(\'Input "query" is expected to have 3 or 5 dimensions when key is empty\');if(r.dims.length===5&&(r.dims[2]!==t.numHeads||r.dims[3]!==3))throw new Error(\'Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv\');_=3}if(u){if(u.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimension\');if(i&&r.dims.length===5&&r.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let T=0;if(a){T=8;let j=a.dims;throw j.length===1?j[0]===y?T=1:j[0]===3*y+2&&(T=3):j.length===2&&j[0]===y&&j[1]===w&&(T=5),T===8?new Error(\'Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)\'):new Error("Mask not supported")}let O=!1,z=S;if(i){if(i.dims.length!==3&&i.dims.length!==4)throw new Error(\'Input "value" is expected to have 3 or 4 dimensions\');if(r.dims[0]!==i.dims[0])throw new Error(\'Input "query" and "value" shall have same dim 0 (batch_size)\');if(i.dims.length===3){if(w!==i.dims[1])throw new Error(\'Input "key" and "value" shall have the same dim 1 (kv_sequence_length)\');z=i.dims[2]}else{if(w!==i.dims[2])throw new Error(\'Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)\');z=i.dims[1]*i.dims[3],O=!0}}let M=x+w,N=!1;if(a)throw new Error("Key padding mask is not supported");if(p)throw new Error("extraAddQk is not supported");if(m)throw new Error("pastKey is not supported");if(h)throw new Error("pastValue is not supported");return{batchSize:y,sequenceLength:v,pastSequenceLength:x,kvSequenceLength:w,totalSequenceLength:M,maxSequenceLength:E,inputHiddenSize:0,hiddenSize:S,vHiddenSize:z,headSize:C,vHeadSize:Math.floor(z/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:T,scale:t.scale,broadcastResPosBias:N,passPastInKv:O,qkvFormat:_}},Su=e=>Te({...e}),_u=Te({perm:[0,2,1,3]}),Rc=(e,t,r,o,i,u,a)=>{let p=[o,i,u],m=W.size(p),h=[{type:12,data:m},{type:12,data:a},{type:12,data:u}],d=y=>{let v=K("qkv_with_bias",t.dataType,p),S=V("qkv",t.dataType,p),w=V("bias",r.dataType,p),x=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`\n  ${y.registerUniforms(x).declareVariables(S,w,v)}\n  ${y.mainStart()}\n    ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;\n\n    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];\n  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:p,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:h}),getShaderSource:d},{inputs:[t,r],outputs:[-1]})[0]},No=(e,t,r,o,i,u,a,p)=>{let m=u;if(a){if(o===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return m=Rc(e,u,a,t,o,r*i,p),m=m.reshape([t,o,r,i]),e.compute($t(m,_u.perm),{inputs:[m],outputs:[-1]})[0]}else return u.dims.length===3&&(m=u.reshape([t,o,r,i])),e.compute($t(m,_u.perm),{inputs:[m],outputs:[-1]})[0]},xu=(e,t)=>{let r=kc(e.inputs,t);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(e.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let o=e.inputs[1]&&e.inputs[2]&&e.inputs[1].dims.length===4&&e.inputs[2].dims.length===4,i=No(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,e.inputs[0],e.inputs[3],0);if(o)return kn(e,i,e.inputs[1],e.inputs[2],e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t);let u=No(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.headSize,e.inputs[1],e.inputs[3],r.hiddenSize),a=No(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.vHeadSize,e.inputs[2],e.inputs[3],2*r.hiddenSize);kn(e,i,u,a,e.inputs[4],void 0,e.inputs[6],e.inputs[7],e.inputs[5],r,t)}});var Dc,Bc,Mc,zc,Uc,Vc,Wc,Nc,Au,Iu=J(()=>{"use strict";be();Ee();Ie();Dc=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},Bc=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n            k = i32(${e.indicesGet("indices",i)}) - ${pe("uniforms.pads",i,r)};\n            if (k < 0) {\n              break;\n            }\n            if (k >= i32(${pe("uniforms.x_shape",i,t)})) {\n              break;\n            }\n            offset += k * i32(${pe("uniforms.x_strides",i,t)});\n        `;return`\n          value = ${e.type.value}(uniforms.constant_value);\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${o}\n            value = x[offset];\n          }\n      `},Mc=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${pe("uniforms.pads",i,r)};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = 2 * (i32(${pe("uniforms.x_shape",i,t)}) - 1);\n                  k = k % _2n_1;\n                  if(k >= i32(${pe("uniforms.x_shape",i,t)})) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * i32(${pe("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},zc=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${pe("uniforms.pads",i,r)};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= i32(${pe("uniforms.x_shape",i,t)})) {\n                  k = i32(${pe("uniforms.x_shape",i,t)}) - 1;\n                }\n                offset += k * i32(${pe("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},Uc=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${pe("uniforms.pads",i,r)};\n                if (k < 0)  {\n                  k += i32(${pe("uniforms.x_shape",i,t)}]);\n                }\n                if (k >= i32(${pe("uniforms.x_shape",i,t)})) {\n                  k -= i32(${pe("uniforms.x_shape",i,t)});\n                }\n                offset += k * i32(${pe("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},Vc=(e,t,r)=>{switch(r.mode){case 0:return Bc(e,t,r.pads.length);case 1:return Mc(e,t,r.pads.length);case 2:return zc(e,t,r.pads.length);case 3:return Uc(e,t,r.pads.length);default:throw new Error("Invalid mode")}},Wc=(e,t)=>{let r=W.padShape(e[0].dims.slice(),t.pads),o=e[0].dims,i=W.size(r),u=[{type:12,data:i},{type:12,data:t.pads}];t.mode===0&&u.push({type:e[0].dataType,data:t.value}),u.push(...G(e[0].dims),...G(r));let a=["rank"],p=m=>{let h=K("output",e[0].dataType,r.length),d=V("x",e[0].dataType,o.length),y=d.type.value,v=Vc(h,o.length,t),S=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return t.mode===0&&S.push({name:"constant_value",type:y}),`\n            ${m.registerUniforms(S).declareVariables(d,h)}\n            ${m.mainStart()}\n            ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n            let indices = ${h.offsetToIndices("global_idx")};\n\n            var value = ${y}(0);\n            ${v}\n            output[global_idx] = value;\n        }`};return{name:"Pad",shaderCache:{hint:`${t.mode}`,inputDependencies:a},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(W.size(r)/64)},programUniforms:u}),getShaderSource:p}},Nc=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),o=e.length>=3&&e[2].data?e[2].getFloat32Array()[0]:0,i=e[0].dims.length,u=new Int32Array(2*i).fill(0);if(e.length>=4){let p=e[3].getBigInt64Array();for(let m=0;m<p.length;m++)u[Number(p[m])]=Number(r[m]),u[Number(p[m])+i]=Number(r[m+p.length])}else r.forEach((p,m)=>u[Number(m)]=Number(p));let a=[];return u.forEach(p=>a.push(p)),{mode:t.mode,value:o,pads:a}}else return t},Au=(e,t)=>{Dc(e.inputs);let r=Nc(e.inputs,t);e.compute(Wc(e.inputs,r),{inputs:[0]})}});var Nn,Tu,Eu,Pu,Ou,Hc,Gc,ku,Ru,Du,Bu,Mu,zu,Uu,Vu,Wu,Nu,Hu,Gu,Lu=J(()=>{"use strict";fr();be();Ee();Ie();Nn=e=>{if(mr.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},Tu=(e,t,r)=>{let o=t.format==="NHWC",i=e.dims.slice();o&&i.splice(1,0,i.pop());let u=Object.hasOwnProperty.call(t,"dilations"),a=t.kernelShape.slice(),p=t.strides.slice(),m=u?t.dilations.slice():[],h=t.pads.slice();tr.adjustPoolAttributes(r,i,a,p,m,h);let d=tr.computePoolOutputShape(r,i,p,m,a,h,t.autoPad),y=Object.assign({},t);u?Object.assign(y,{kernelShape:a,strides:p,pads:h,dilations:m,cacheKey:t.cacheKey}):Object.assign(y,{kernelShape:a,strides:p,pads:h,cacheKey:t.cacheKey});let v=d.slice();return v.push(v.splice(1,1)[0]),[y,o?v:d]},Eu=(e,t)=>{let r=t.format==="NHWC",o=W.size(e),i=W.size(t.kernelShape),u=[{type:12,data:o},{type:12,data:i}],a=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let p=t.kernelShape[t.kernelShape.length-1],m=t.strides[t.strides.length-1],h=t.pads[t.pads.length/2-1],d=t.pads[t.pads.length-1],y=!!(h+d);u.push({type:12,data:p},{type:12,data:m},{type:12,data:h},{type:12,data:d}),a.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let v=!1;if(t.kernelShape.length===2){let S=t.kernelShape[t.kernelShape.length-2],w=t.strides[t.strides.length-2],x=t.pads[t.pads.length/2-2],E=t.pads[t.pads.length-2];v=!!(x+E),u.push({type:12,data:S},{type:12,data:w},{type:12,data:x},{type:12,data:E}),a.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[u,a,!0,y,v]}else{if(r)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let p=W.computeStrides(t.kernelShape);u.push({type:12,data:p},{type:12,data:t.pads},{type:12,data:t.strides}),a.push({name:"kernelStrides",type:"u32",length:p.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length});let m=t.pads.reduce((h,d)=>h+d);return[u,a,!!m,!1,!1]}},Pu=(e,t,r,o,i,u,a,p,m,h,d,y)=>{let v=i.format==="NHWC",S=t.type.value,w=K("output",t.type.tensor,o);if(i.kernelShape.length<=2){let x="",E="",C="",_=r-(v?2:1);if(d?x=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${_}] = indices[${_}] * uniforms.sw - uniforms.pwStart + i;\n                  if (xIndices[${_}] < 0 || xIndices[${_}]\n                      >= uniforms.x_shape[${_}]) {\n                    pad++;\n                    continue;\n                  }\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${u}\n                }`:x=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${_}] = indices[${_}] * uniforms.sw - uniforms.pwStart + i;\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${u}\n                }`,i.kernelShape.length===2){let O=r-(v?3:2);y?E=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${O}] = indices[${O}] * uniforms.sh - uniforms.phStart + j;\n                  if (xIndices[${O}] < 0 || xIndices[${O}] >= uniforms.x_shape[${O}]) {\n                    pad += i32(uniforms.kw);\n                    continue;\n                  }\n              `:E=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${O}] = indices[${O}] * uniforms.sh - uniforms.phStart + j;\n                `,C=`\n              }\n            `}return`\n            ${e.registerUniforms(m).declareVariables(t,w)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n              let indices = ${w.offsetToIndices("global_idx")};\n              var xIndices = ${w.offsetToIndices("global_idx")};\n\n              var value = ${S}(${p});\n              var pad = 0;\n              ${E}\n              ${x}\n              ${C}\n              ${a}\n\n              output[global_idx] = value;\n            }`}else{if(v)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let x=i.kernelShape.length,E=i.pads.length,C="";return h?C=`\n                if (xIndices[j] >= uniforms.x_shape[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${t.indicesToOffset("xIndices")}];\n                ${u}\n              }`:C=`\n              }\n              let x_val = x[${t.indicesToOffset("xIndices")}];\n              ${u}\n            `,`\n            ${e.registerUniforms(m).declareVariables(t,w)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n              let indices = ${w.offsetToIndices("global_idx")};\n              var xIndices = ${w.offsetToIndices("global_idx")};\n\n              var offsets: array<u32, ${x}>;\n\n              var value = ${S}(${p});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${x-1}u; j++) {\n                  offsets[j] = offset / ${pe("uniforms.kernelStrides","j",x)};\n                  offset -= offsets[j] * ${pe("uniforms.kernelStrides","j",x)};\n                }\n                offsets[${x-1}] = offset;\n\n                isPad = false;\n                for (var j = ${r-x}u; j < ${r}u; j++) {\n                  xIndices[j] = indices[j] * ${pe("uniforms.strides",`j - ${r-x}u`,x)}\n                    + offsets[j - ${r-x}u] - ${pe("uniforms.pads","j - 2u",E)};\n                  ${C}\n              }\n              ${a}\n\n              output[global_idx] = value;\n            }`}},Ou=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,Hc=e=>`${Ou(e)};${e.countIncludePad}`,Gc=e=>`${Ou(e)};${e.storageOrder};${e.dilations}`,ku=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),Ru=(e,t,r,o)=>{let[i,u]=Tu(t,o,r),a=V("x",t.dataType,t.dims.length),p=a.type.value,m="value += x_val;",h="";i.countIncludePad?h+=`value /= ${p}(uniforms.kernelSize);`:h+=`value /= ${p}(i32(uniforms.kernelSize) - pad);`;let[d,y,v,S,w]=Eu(u,i);d.push(...G(t.dims),...G(u));let x=["rank"];return{name:e,shaderCache:{hint:`${o.cacheKey};${v};${S};${w}`,inputDependencies:x},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(W.size(u)/64)},programUniforms:d}),getShaderSource:E=>Pu(E,a,t.dims.length,u.length,i,m,h,0,y,v,S,w)}},Du=e=>{let t=e.count_include_pad!==0,r=ku(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let o={countIncludePad:t,...r,cacheKey:""};return{...o,cacheKey:Hc(o)}},Bu=(e,t)=>{Nn(e.inputs),e.compute(Ru("AveragePool",e.inputs[0],!1,t))},Mu={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},zu=e=>{let t=e.format;return{format:t,...Mu,cacheKey:t}},Uu=(e,t)=>{Nn(e.inputs),e.compute(Ru("GlobalAveragePool",e.inputs[0],!0,t))},Vu=(e,t,r,o)=>{let[i,u]=Tu(t,o,r),a=`\n      value = max(x_val, value);\n    `,p="",m=V("x",t.dataType,t.dims.length),h=["rank"],[d,y,v,S,w]=Eu(u,i);return d.push(...G(t.dims),...G(u)),{name:e,shaderCache:{hint:`${o.cacheKey};${v};${S};${w}`,inputDependencies:h},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(W.size(u)/64)},programUniforms:d}),getShaderSource:x=>Pu(x,m,t.dims.length,u.length,i,a,p,-1e5,y,v,S,w)}},Wu=(e,t)=>{Nn(e.inputs),e.compute(Vu("MaxPool",e.inputs[0],!1,t))},Nu=e=>{let t=e.storage_order,r=e.dilations,o=ku(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(o.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let i={storageOrder:t,dilations:r,...o,cacheKey:""};return{...i,cacheKey:Gc(i)}},Hu=e=>{let t=e.format;return{format:t,...Mu,cacheKey:t}},Gu=(e,t)=>{Nn(e.inputs),e.compute(Vu("GlobalMaxPool",e.inputs[0],!0,t))}});var Fc,qc,Fu,qu=J(()=>{"use strict";fr();be();Ie();Fc=(e,t,r)=>{let o=e===t,i=e<t&&r<0,u=e>t&&r>0;if(o||i||u)throw new Error("Range these inputs\' contents are invalid.")},qc=(e,t,r,o)=>{let i=Math.abs(Math.ceil((t-e)/r)),u=[i],a=i,p=[{type:12,data:a},{type:o,data:e},{type:o,data:r},...G(u)],m=h=>{let d=K("output",o,u.length),y=d.type.value,v=[{name:"outputSize",type:"u32"},{name:"start",type:y},{name:"delta",type:y}];return`\n        ${h.registerUniforms(v).declareVariables(d)}\n        ${h.mainStart()}\n        ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        output[global_idx] = uniforms.start + ${y}(global_idx) * uniforms.delta;\n      }`};return{name:"Range",shaderCache:{hint:`${o}`},getShaderSource:m,getRunData:()=>({outputs:[{dims:u,dataType:o}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:p})}},Fu=e=>{let t=0,r=0,o=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],o=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],o=e.inputs[2].getFloat32Array()[0]),mr.webgpu.validateInputContent&&Fc(t,r,o),e.compute(qc(t,r,o,e.inputs[0].dataType),{inputs:[]})}});var jc,Kc,Yc,Zc,Jc,Xc,Qc,ep,tp,rp,np,ju,op,ip,ap,sp,up,Ku,Yu,Zu=J(()=>{"use strict";be();Ee();Qe();Ie();jc=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and\n            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},Kc=(e,t,r)=>{t.every(i=>i>=0&&i<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let o=new Array(r).fill(1);return t.forEach((i,u)=>o[i]=e[u]),o},Yc=(e,t,r,o,i,u)=>{let[a,p,m]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],h=e[0].dims.length;if(a>0&&e.length>a&&e[a].dims.length>0)e[a].getFloat32Array().forEach(d=>u.push(d));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(p>0&&e.length>p&&e[p].dims.length>0){if(e[p].getFloat32Array().forEach(d=>o.push(d)),o.length!==0&&o.length!==h&&r>=18&&o.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");jc(o,t),t.axes.length>0&&Kc(o,t.axes,h).forEach((d,y)=>o[y]=d)}if(m>0&&e.length>m&&(e[m].getBigInt64Array().forEach(d=>i.push(Number(d))),i.length!==h||r>=18&&i.length===t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(o.length!==t.axes.length)throw new Error(\'Resize requires "scales" input size to be of axes rank when axes attributes is specified\');if(i.length!==t.axes.length)throw new Error(\'Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified\')}if(typeof o<"u"&&typeof i<"u"&&o.length>0&&i.length>h)throw new Error("Resize requires only of scales or sizes to be specified")},Zc=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,\n     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`return ${t}(xResized) / ${t}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {\n                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;\n                  } else {\n                    return 0.0;\n                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {\n                    return 0.0;\n                  } else {\n                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating\n                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an\n                    // offset-by-one error later in floor().\n                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));\n                    let fract =\n                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);\n                    return whole + fract;\n                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {\n                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +\n                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /\n                        ${t}(lengthResized - 1);\n                  } else {\n                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);\n                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);\n                  const adjustment = ${t}(lengthResized) / outputWidth;\n                  const center = ${t}(lengthOriginal) / 2;\n                  const offset = center * (1 - adjustment);\n                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",Jc=(e,t,r)=>`fn getNearestPixelFromOriginal(xOriginal: ${r}, isDownSample: bool) -> ${r} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Xc=(e,t,r)=>{let o=new Array(r).fill(0).concat(new Array(r).fill(1)),i=e.length===0?o:e.slice();return t.length>0?(t.forEach((u,a)=>{o[u]=i[a],o[a+r]=i[t.length+a]}),o):i},Qc=(e,t,r,o)=>{let i=[];if(r.length>0)if(o.length>0){if(e.forEach(u=>i.push(u)),Math.max(...o)>e.length)throw new Error("axes is out of bound");o.forEach((u,a)=>i[u]=r[a])}else r.forEach(u=>i.push(u));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");i=e.map((u,a)=>Math.round(u*t[a]))}return i},ep=(e,t,r)=>{let o=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map(u=>t[u]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map(u=>t[u]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let i=e.slice();return r.axes.length>0?(r.axes.forEach(u=>t[u]=o),r.axes.forEach(u=>i[u]=Math.round(e[u]*t[u]))):(t.fill(o,0,t.length),i.forEach((u,a)=>i[a]=Math.round(u*t[a]))),i},tp=(e,t,r,o,i)=>`\n    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${r.length}> {\n      var original_indices: array<${e.type.value}, ${r.length}>;\n      for (var i:u32 = 0; i < ${r.length}; i++) {\n        var output_index = ${e.indicesGet("output_indices","i")};\n        var scale = ${pe("uniforms.scales","i",o)};\n        var roi_low = ${pe("uniforms.roi","i",i)};\n        var roi_hi = ${pe("uniforms.roi",`i + ${t.length}`,i)};\n        if (scale == 1.0) {\n          original_indices[i] = ${e.type.value}(output_index);\n        } else {\n          var input_shape_i = ${pe("uniforms.input_shape","i",t.length)};\n          var output_shape_i = ${pe("uniforms.output_shape","i",r.length)};\n          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                           input_shape_i, roi_low, roi_hi);\n        }\n      }\n      return original_indices;\n    }`,rp=(e,t,r,o,i,u,a)=>`\n    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n      var input_indices: ${e.type.indices};\n      for (var i:u32 = 0; i < ${o.length}; i++) {\n        var output_index = ${t.indicesGet("output_indices","i")};\n        var input_index: u32;\n        var scale = ${pe("uniforms.scales","i",i)};\n        if (scale == 1.0) {\n          input_index = output_index;\n        } else {\n          var roi_low = ${pe("uniforms.roi","i",u)};\n          var roi_hi = ${pe("uniforms.roi",`i + ${r.length}`,u)};\n          var input_shape_i = ${pe("uniforms.input_shape","i",r.length)};\n          var output_shape_i = ${pe("uniforms.output_shape","i",o.length)};\n          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                        input_shape_i, roi_low, roi_hi);\n          if (!${a} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {\n            if (original_idx < 0) {\n              input_index = 0;\n            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {\n              input_index = input_shape_i - 1;\n            } else {\n              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));\n            }\n          } else {\n            input_index = u32(original_idx);\n          }\n        }\n        ${e.indicesSet("input_indices","i"," input_index")}\n      }\n      return input_indices;\n    }`,np=(e,t)=>`\n    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var input_index = ${e.indicesGet("input_indices","i")};\n        if (input_index < 0 || input_index >= ${pe("uniforms.input_shape","i",t.length)}) {\n          return false;\n        }\n      }\n      return true;\n    }`,ju=(e,t,r,o)=>e.rank>o?`\n    ${e.indicesSet("input_indices",t,"channel")};\n    ${e.indicesSet("input_indices",r,"batch")};\n`:"",op=(e,t,r,o,i)=>{let[a,p,m,h]=r.length===2?[-1,0,1,-1]:[0,2,3,1],d=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${d} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",p,`max(0, min(row, ${r[p]} - 1))`)};\n      ${e.indicesSet("input_indices",m,`max(0, min(col, ${r[m]} - 1))`)};\n      ${ju(e,h,a,2)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${d} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var row:${d} = originalIndices[${p}];\n      var col:${d} = originalIndices[${m}];\n      ${o?`if (row < 0 || row > (${r[p]} - 1) || col < 0 || col > (${r[m]} - 1)) {\n        return ${i};\n      }`:""};\n      row = max(0, min(row, ${r[p]} - 1));\n      col = max(0, min(col, ${r[m]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = ${r.length>2?`u32(originalIndices[${h}])`:"0"};\n      var batch: u32 =  ${r.length>2?`u32(originalIndices[${a}])`:"0"};\n      var x11: ${d} = getInputValue(batch, channel, row1, col1);\n      var x12: ${d} = getInputValue(batch, channel, row1, col2);\n      var x21: ${d} = getInputValue(batch, channel, row2, col1);\n      var x22: ${d} = getInputValue(batch, channel, row2, col2);\n      var dx1: ${d} = abs(row - ${d}(row1));\n      var dx2: ${d} = abs(${d}(row2) - row);\n      var dy1: ${d} = abs(col - ${d}(col1));\n      var dy2: ${d} = abs(${d}(col2) - col);\n      if (row1 == row2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (col1 == col2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`},ip=(e,t,r,o,i,u,a,p,m,h)=>{let d=r.length===2,y=!0,[v,S]=d?[0,1]:y?[2,3]:[1,2],w=e.type.value,x=E=>{let C=E===v?"row":"col";return`\n      fn ${C}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${w} {\n        var output_index = ${t.indicesGet("output_indices",E)};\n        var originalIdx: ${w} = getOriginalCoordinateFromResizedCoordinate(output_index, ${i[E]},\n        ${o[E]}, ${r[E]}, ${u[E]}, ${u[E]} + ${r.length});\n        var fractOriginalIdx: ${w} = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${p} && (originalIdx < 0 || originalIdx > (${r[E]} - 1))) {\n          return ${m};\n        }\n        var data: array<${w}, 4> = array<${w}, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${C}: ${w} = originalIdx + ${w}(i);\n          if (${C} < 0 || ${C} >= ${r[E]}) {\n            ${(()=>h?`coefs[i + 1] = 0.0;\n                        continue;`:p?`return ${m};`:`${C} = max(0, min(${C}, ${r[E]} - 1));`)()};\n          }\n        var input_indices_copy: ${e.type.indices} = input_indices;\n          ${e.indicesSet("input_indices_copy",E,`u32(${C})`)};\n          data[i + 1] = ${E===v?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${x(v)};\n    ${x(S)};\n  fn getCubicInterpolationCoefs(s: ${w}) -> array<${w}, 4> {\n    var absS = abs(s);\n    var coeffs: array<${w}, 4> = array<${w}, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: ${w} = 1.0 - absS;\n    var twoMinusAbsS: ${w} = 2.0 - absS;\n    var onePlusAbsS: ${w} = 1.0 + absS;\n    coeffs[0] = ((${a} * onePlusAbsS - 5 * ${a}) * onePlusAbsS + 8 * ${a}) * onePlusAbsS - 4 * ${a};\n    coeffs[1] = ((${a} + 2) * absS - (${a} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${a} + 2) * oneMinusAbsS - (${a} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${a} * twoMinusAbsS - 5 * ${a}) * twoMinusAbsS + 8 * ${a}) * twoMinusAbsS - 4 * ${a};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<${w}, 4>, coefs: array<${w}, 4>) -> ${w} {\n    var coefsSum: ${w} = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${w} {\n    var input_indices: ${e.type.indices} = output_indices;\n    return colCubicInterpolation(input_indices, output_indices);\n  }\n    `},ap=(e,t,r,o,i)=>{let[a,p,m,h,d]=r.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],y=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${y} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",p,`max(0, min(depth, ${r[p]} - 1))`)};\n      ${e.indicesSet("input_indices",m,`max(0, min(height, ${r[m]} - 1))`)};\n      ${e.indicesSet("input_indices",h,`max(0, min(width, ${r[h]} - 1))`)};\n      ${ju(e,d,a,3)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${y} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var depth:${y} = originalIndices[${p}];\n      var height:${y} = originalIndices[${m}];\n      var width:${y} = originalIndices[${h}];\n      ${o?`if (depth < 0 || depth > (${r[p]} - 1) || height < 0 || height > (${r[m]} - 1) || width < 0 || (width > ${r[h]} - 1)) {\n      return ${i};\n        }`:""};\n\n    depth = max(0, min(depth, ${r[p]} - 1));\n      height = max(0, min(height, ${r[m]} - 1));\n      width = max(0, min(width, ${r[h]} - 1));\n      var depth1: u32 = u32(depth);\n      var height1: u32 = u32(height);\n      var width1: u32 = u32(width);\n      var depth2: u32 = u32(depth + 1);\n      var height2: u32 = u32(height + 1);\n      var width2: u32 = u32(width + 1);\n      var channel: u32 = ${r.length>3?`u32(originalIndices[${d}])`:"0"};\n      var batch: u32 =  ${r.length>3?`u32(originalIndices[${a}])`:"0"};\n\n      var x111: ${y} = getInputValue(batch, channel, depth1, height1, width1);\n      var x112: ${y} = getInputValue(batch, channel, depth1, height1, width2);\n      var x121: ${y} = getInputValue(batch, channel, depth1, height2, width1);\n      var x122: ${y} = getInputValue(batch, channel, depth1, height2, width2);\n      var x211: ${y} = getInputValue(batch, channel, depth2, height1, width1);\n      var x212: ${y} = getInputValue(batch, channel, depth2, height1, width2);\n      var x221: ${y} = getInputValue(batch, channel, depth2, height2, width1);\n      var x222: ${y} = getInputValue(batch, channel, depth2, height2, width2);\n      var dx1: ${y} = abs(depth - ${y}(depth1));\n      var dx2: ${y} = abs(${y}(depth2) - depth);\n      var dy1: ${y} = abs(height - ${y}(height1));\n      var dy2: ${y} = abs(${y}(height2) - height);\n      var dz1: ${y} = abs(width - ${y}(width1));\n      var dz2: ${y} = abs(${y}(width2) - width);\n      if (depth1 == depth2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (height1 == height2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      if (width1 == width2) {\n        dz1 = 0.5;\n        dz2 = 0.5;\n      }\n      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +\n              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);\n    }`},sp=(e,t,r,o,i,u)=>{let a=e.dims,p=Xc(u,t.axes,a.length),m=Qc(a,o,i,t.axes),h=o.slice();o.length===0&&(h=a.map((_,T)=>_===0?1:m[T]/_),t.keepAspectRatioPolicy!=="stretch"&&(m=ep(a,h,t)));let d=K("output",e.dataType,m.length),y=V("input",e.dataType,a.length),v=W.size(m),S=a.length===m.length&&a.every((_,T)=>_===m[T]),w=t.coordinateTransformMode==="tf_crop_and_resize",x=t.extrapolationValue,E=y.type.value,C=_=>`\n      ${S?"":`\n      ${Zc(t.coordinateTransformMode,E)};\n      ${(()=>{switch(t.mode){case"nearest":return`\n              ${np(y,a)};\n              ${Jc(t.nearestMode,r,E)};\n              ${rp(y,d,a,m,h.length,p.length,w)};\n              `;case"linear":return`\n              ${tp(d,a,m,h.length,p.length)};\n              ${(()=>{if(a.length===2||a.length===4)return`${op(y,d,a,w,x)}`;if(a.length===3||a.length===5)return`${ap(y,d,a,w,x)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};\n            `;case"cubic":return`\n            ${(()=>{if(a.length===2||a.length===4)return`${ip(y,d,a,m,h,p,t.cubicCoeffA,w,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};\n            `;default:throw Error("Invalid resize mode")}})()};\n      `}\n      ${_.registerUniform("output_size","u32").registerUniform("scales","f32",h.length).registerUniform("roi","f32",p.length).declareVariables(y,d)}\n      ${_.mainStart()}\n        ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n        ${S?"output[global_idx] = input[global_idx];":`\n        let output_indices = ${d.offsetToIndices("global_idx")};\n        var input_indices: ${y.type.indices};\n        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);\n                if (checkInputIndices(input_indices)) {\n                  output[global_idx] = ${y.getByIndices("input_indices")};\n                } else {\n                  output[global_idx] = ${t.extrapolationValue};\n                }`;case"linear":return`output[global_idx] = ${a.length===2||a.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};\n`}\n      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${h.length>0?h:""}|${i.length>0?i:""}|${p.length>0?p:""}|${S}|${a}`,inputDependencies:["rank"]},getShaderSource:C,getRunData:()=>({outputs:[{dims:m,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(v/64)},programUniforms:[{type:12,data:v},{type:1,data:h},{type:1,data:p},...G(a),...G(m)]})}},up=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},Ku=(e,t)=>{let r=[],o=[],i=[],u=up(e);if(t.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");Yc(e.inputs,t,u,r,o,i),e.compute(sp(e.inputs[0],t,u,r,o,i),{inputs:[0]})},Yu=e=>{let t=e.antialias,r=e.axes,o=e.coordinateTransformMode,i=e.cubicCoeffA,u=e.excludeOutside!==0,a=e.extrapolationValue,p=e.keepAspectRatioPolicy,m=e.mode,h=e.nearestMode===""?"simple":e.nearestMode;return Te({antialias:t,axes:r,coordinateTransformMode:o,cubicCoeffA:i,excludeOutside:u,extrapolationValue:a,keepAspectRatioPolicy:p,mode:m,nearestMode:h})}});var lp,dp,Ju,Xu=J(()=>{"use strict";be();Ee();Ie();lp=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],o=e[2];if(t.dataType!==r.dataType||t.dataType!==o.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let i=t.dims[t.dims.length-1],u=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==i)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==u)throw new Error("Skip must have the same sequence length as input");if(o.dims.length!==1)throw new Error("Gamma must be 1D");if(o.dims[o.dims.length-1]!==i)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let a=e[3];if(a.dims.length!==1)throw new Error("Beta must be 1D");if(a.dims[a.dims.length-1]!==i)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let a=e[4];if(a.dims.length!==1)throw new Error("Bias must be 1D");if(a.dims[a.dims.length-1]!==i)throw new Error("Bias must have the same hidden size as input")}},dp=(e,t,r,o)=>{let i=e[0].dims,u=W.size(i),a=i,p=u,m=i.slice(-1)[0],h=o?i.slice(0,-1).concat(1):[],d=e.length>3,y=e.length>4,v=o&&r>1,S=o&&r>2,w=r>3,x=Le(m),E=[{type:12,data:p},{type:12,data:x},{type:12,data:m},{type:1,data:t.epsilon}],C=T=>{let O=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],z=[V("x",e[0].dataType,e[0].dims,x),V("skip",e[1].dataType,e[1].dims,x),V("gamma",e[2].dataType,e[2].dims,x)];d&&z.push(V("beta",e[3].dataType,e[3].dims,x)),y&&z.push(V("bias",e[4].dataType,e[4].dims,x)),z.push(K("output",e[0].dataType,a,x)),v&&z.push(K("mean_output",1,h)),S&&z.push(K("inv_std_output",1,h)),w&&z.push(K("input_skip_bias_sum",e[0].dataType,a,x));let M=Ge(e[0].dataType);return`\n\n      ${T.registerUniforms(O).declareVariables(...z)}\n\n      ${T.mainStart()}\n        ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size / uniforms.hidden_size")}\n        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;\n        let offset = global_idx * hidden_size_vectorized;\n        var sum = ${et("f32",x)};\n        var squareSum = ${et("f32",x)};\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          let skip_value = skip[offset + i];\n          let bias_value = ${y?"bias[i]":"0.0"};\n          let input_value = x[offset + i];\n          let value = input_value + skip_value + bias_value;\n          ${w?"input_skip_bias_sum[offset + i] = value;":""}\n          output[offset + i] = value;\n          let f32_value = ${vt(M,x,"value")};\n          sum += f32_value;\n          squareSum += f32_value * f32_value;\n        }\n        let mean = ${dt("sum",x)} / f32(uniforms.hidden_size);\n        let inv_std_dev = inverseSqrt(${dt("squareSum",x)} / f32(uniforms.hidden_size) - mean * mean + uniforms.epsilon);\n        ${v?"mean_output[global_idx] = mean;":""}\n        ${S?"inv_std_output[global_idx] = inv_std_dev;":""}\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          output[offset + i] = (output[offset + i] - ${M}(mean)) * ${M}(inv_std_dev) * gamma[i] + ${d?"beta[i]":"0.0"};\n        }\n      }`},_=[{dims:a,dataType:e[0].dataType}];return r>1&&_.push({dims:h,dataType:1}),r>2&&_.push({dims:h,dataType:1}),r>3&&_.push({dims:i,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${x};${v};${S};${w}`,inputDependencies:e.map((T,O)=>"type")},getShaderSource:C,getRunData:()=>({outputs:_,dispatchGroup:{x:Math.ceil(p/m/64)},programUniforms:E})}},Ju=(e,t)=>{lp(e.inputs);let o=[0];e.outputCount>1&&o.push(-3),e.outputCount>2&&o.push(-3),e.outputCount>3&&o.push(3),e.compute(dp(e.inputs,t,e.outputCount,!1),{outputs:o})}});var cp,Hn,pp,Qu,mp,fp,el,tl,rl=J(()=>{"use strict";be();Ee();Qe();Ie();cp=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,o)=>{if(e[o+1].dataType!==6&&e[o+1].dataType!==7)throw new Error(`Input ${o} must be an array of int32 or int64`)})},Hn=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(o=>r.push(Number(o)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(o=>r.push(Number(o)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},pp=(e,t)=>{if(e.length>1){let r=Hn(e,1),o=Hn(e,2),i=Hn(e,3);return i.length===0&&(i=[...Array(e[0].dims.length).keys()]),Te({starts:r,ends:o,axes:i})}else return t},Qu=(e,t,r,o,i)=>{let u=e;return e<0&&(u+=r[o[t]]),i[t]<0?Math.max(0,Math.min(u,r[o[t]]-1)):Math.max(0,Math.min(u,r[o[t]]))},mp=(e,t,r)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n          var input_indices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${r.length}; i >= 0; i--) {\n            let input_shape_i = ${pe("uniforms.input_shape","i",r.length)};\n            let steps_i = ${pe("uniforms.steps","i",r.length)};\n            let signs_i = ${pe("uniforms.signs","i",r.length)};\n            let starts_i = ${pe("uniforms.starts","i",r.length)};\n            var output_index = ${t.indicesGet("output_indices","i")};\n            var input_index = output_index * steps_i + starts_i + carry;\n            carry = input_index / input_shape_i;\n            input_index = input_index % input_shape_i;\n            if (signs_i < 0) {\n              input_index = input_shape_i - input_index - 1u + starts_i;\n            }\n            ${e.indicesSet("input_indices","i","input_index")};\n          }\n          return input_indices;\n      }`,fp=(e,t)=>{let r=e[0].dims,o=W.size(r),i=t.axes.length>0?W.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],u=Hn(e,4);u.forEach(C=>C!==0||(()=>{throw new Error("step cannot be 0")})),u.length===0&&(u=Array(i.length).fill(1));let a=t.starts.map((C,_)=>Qu(C,_,r,i,u)),p=t.ends.map((C,_)=>Qu(C,_,r,i,u));if(i.length!==a.length||i.length!==p.length)throw new Error("start, ends and axes should have the same number of elements");if(i.length!==r.length)for(let C=0;C<r.length;++C)i.includes(C)||(a.splice(C,0,0),p.splice(C,0,r[C]),u.splice(C,0,1));let m=u.map(C=>Math.sign(C));u.forEach((C,_,T)=>{if(C<0){let O=(p[_]-a[_])/C,z=a[_],M=z+O*u[_];a[_]=M,p[_]=z,T[_]=-C}});let h=r.slice(0);i.forEach((C,_)=>{h[C]=Math.ceil((p[C]-a[C])/u[C])});let d={dims:h,dataType:e[0].dataType},y=K("output",e[0].dataType,h.length),v=V("input",e[0].dataType,e[0].dims.length),S=W.size(h),w=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:a.length},{name:"signs",type:"i32",length:m.length},{name:"steps",type:"u32",length:u.length}],x=[{type:12,data:S},{type:12,data:a},{type:6,data:m},{type:12,data:u},...G(e[0].dims),...G(h)],E=C=>`\n      ${C.registerUniforms(w).declareVariables(v,y)}\n        ${mp(v,y,r)}\n        ${C.mainStart()}\n          ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n          let output_indices = ${y.offsetToIndices("global_idx")};\n          let input_indices = calculateInputIndices(output_indices);\n          ${y.setByOffset("global_idx",v.getByIndices("input_indices"))}\n      }`;return{name:"Slice",shaderCache:{hint:`${m.length}_${a.length}_${u.length}`,inputDependencies:["rank"]},getShaderSource:E,getRunData:()=>({outputs:[d],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:x})}},el=(e,t)=>{cp(e.inputs,t);let r=pp(e.inputs,t);e.compute(fp(e.inputs,r),{inputs:[0]})},tl=e=>{let t=e.starts,r=e.ends,o=e.axes;return Te({starts:t,ends:r,axes:o})}});var hp,gp,nl,ol,il=J(()=>{"use strict";be();Ee();Qe();Ie();hp=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},gp=(e,t)=>{let r=e.dims,o=W.size(r),i=64,u=t.axis;if(u<0&&(u=r.length+u),u<r.length-1)throw new Error("softmax only supports last axis for now.");let a=r[u],p=o/a,m=Le(a),h=a/m,d=(E,C)=>C===4?`max(max(${E}.x, ${E}.y), max(${E}.z, ${E}.w))`:C===2?`max(${E}.x, ${E}.y)`:C===3?`max(max(${E}.x, ${E}.y), ${E}.z)`:E,y=V("x",e.dataType,e.dims,m),v=K("result",e.dataType,e.dims,m),S=y.type.value,w=Ge(e.dataType)==="f32"?`var threadMax = ${S}(-3.402823e+38f);`:`var threadMax = ${S}(-65504.0h);`,x=E=>`\n      var<workgroup> rowMaxShared : ${S};\n      var<workgroup> rowSumShared : ${S};\n      var<workgroup> threadShared : array<${S}, ${i}>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${S} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${S}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n      ${E.registerUniform("packedCols","i32").declareVariables(y,v)}\n      ${E.mainStart()}\n        let gindex = i32(global_idx);\n        let lindex = i32(local_idx);\n        const wg = ${i};\n        let row = gindex / wg;\n        let cols = uniforms.packedCols;\n        let row_stride : i32 = uniforms.packedCols;\n\n        // find the rows max\n        ${w}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = ${S}(${d("threadShared[0]",m)});\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = ${S}(0.0);\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = ${S}(${dt("threadShared[0]",m)});\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`;return{name:"Softmax",shaderCache:{hint:`${m}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.dataType}],dispatchGroup:{x:p},programUniforms:[{type:12,data:h}]}),getShaderSource:x}},nl=(e,t)=>{hp(e.inputs),e.compute(gp(e.inputs[0],t))},ol=e=>Te({axis:e.axis})});var yp,bp,wp,vp,$p,al,sl,ul=J(()=>{"use strict";be();Ee();Qe();Ie();yp=e=>{if(!e||e.length<1)throw new Error("too few inputs")},bp=(e,t)=>{let r=[],o=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(i=>r.push(Number(i))),o=r.length),Te({numOutputs:o,axis:t.axis,splitSizes:r})},wp=e=>`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n    if (index < ${pe("uniforms.size_in_split_axis","i",e)}) {\n        return i;\n    }\n    }\n    return ${e}u;\n}`,vp=e=>{let t=e.length,r=[];for(let o=0;o<t;++o){let i=e[o].setByIndices("indices","input[global_idx]");t===1?r.push(i):o===0?r.push(`if (output_number == ${o}u) { ${i} }`):o===t-1?r.push(`else { ${i} }`):r.push(`else if (output_number == ${o}) { ${i} }`)}return`\n      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${r.join(`\n`)}\n      }`},$p=(e,t)=>{let r=e[0].dims,o=W.size(r),i=e[0].dataType,u=W.normalizeAxis(t.axis,r.length),a=new Array(t.numOutputs),p=V("input",i,r),m=new Array(t.numOutputs),h=[],d=[],y=0,v=[{type:12,data:o}];for(let w=0;w<t.numOutputs;w++){y+=t.splitSizes[w],m[w]=y;let x=r.slice();x[t.axis]=t.splitSizes[w],d.push(x),a[w]=K(`output${w}`,i,x),h.push({dims:d[w],dataType:e[0].dataType})}v.push({type:12,data:m}),v.push(...G(r)),d.forEach(w=>v.push(...G(w)));let S=w=>`\n  ${w.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",m.length).declareVariables(p,...a)}\n  ${wp(m.length)}\n  ${vp(a)}\n\n  ${w.mainStart()}\n    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}\n\n    var indices = ${p.offsetToIndices("global_idx")};\n    var index = ${p.indicesGet("indices",u)};\n    let output_number = calculateOutputIndex(index);\n    if (output_number != 0) {\n      index -= ${pe("uniforms.size_in_split_axis","output_number - 1u",m.length)};\n      ${p.indicesSet("indices",u,"index")};\n    }\n    writeBufferData(output_number, indices, global_idx);\n  }`;return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:S,getRunData:()=>({outputs:h,dispatchGroup:{x:Math.ceil(o/64)},programUniforms:v})}},al=(e,t)=>{yp(e.inputs);let r=e.inputs.length===1?t:bp(e.inputs,t);e.compute($p(e.inputs,r),{inputs:[0]})},sl=e=>{let t=e.axis,r=e.splitSizes,o=e.numOutputs<0?r.length:e.numOutputs;if(o!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return Te({axis:t,numOutputs:o,splitSizes:r})}});var ll,_p,Sp,xp,dl,cl=J(()=>{"use strict";be();Ee();Ie();ll=e=>Array.from(e.getBigInt64Array(),Number),_p=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(ll(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},Sp=(e,t)=>{let r=[];for(let o=0;o<e.length;++o)r.push(e[o]*t[o]);return r},xp=e=>{let t=e[0].dims,r=ll(e[1]),o=Sp(t,r),i=W.size(o),u=e[0].dataType,a=V("input",u,t.length),p=K("output",u,o.length),m=h=>`\n      const inputShape = ${a.indices(...t)};\n      ${h.registerUniform("output_size","u32").declareVariables(a,p)}\n      ${h.mainStart()}\n      ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let output_indices = ${p.offsetToIndices("global_idx")};\n      var input_indices: ${a.type.indices};\n      for (var i = 0; i < ${t.length}; i++) {\n        let input_dim_i = ${a.indicesGet("uniforms.input_shape","i")};\n        let input_dim_value = ${p.indicesGet("output_indices","i")}  % input_dim_i;\n\n        ${a.indicesSet("input_indices","i","input_dim_value")}\n      }\n      ${p.setByOffset("global_idx",a.getByIndices("input_indices"))}\n    }`;return{name:"Tile",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},...G(e[0].dims),...G(o)]}),getShaderSource:m}},dl=e=>{_p(e.inputs),e.compute(xp(e.inputs),{inputs:[0]})}});var Cp,Ap,pl,ml=J(()=>{"use strict";be();Ee();Ie();Cp=(e,t,r,o,i)=>{let u=K("output_data",i,r.length,4),a=V("a_data",t[1].dataType,t[1].dims.length,4),p=V("b_data",t[2].dataType,t[2].dims.length,4),m=V("c_data",t[0].dataType,t[0].dims.length,4),h,d=(y,v,S)=>`select(${v}, ${y}, ${S})`;if(!o)h=u.setByOffset("global_idx",d(a.getByOffset("global_idx"),p.getByOffset("global_idx"),m.getByOffset("global_idx")));else{let y=(v,S,w="")=>{let x=`a_data[index_a${S}][component_a${S}]`,E=`b_data[index_b${S}][component_b${S}]`,C=`bool(c_data[index_c${S}] & ${4278190080>>>(3-S)*8}u)`;return`\n            let output_indices${S} = ${u.offsetToIndices(`global_idx * 4u + ${S}u`)};\n            let offset_a${S} = ${a.broadcastedIndicesToOffset(`output_indices${S}`,u)};\n            let offset_b${S} = ${p.broadcastedIndicesToOffset(`output_indices${S}`,u)};\n            let offset_c${S} = ${m.broadcastedIndicesToOffset(`output_indices${S}`,u)};\n            let index_a${S} = offset_a${S} / 4u;\n            let index_b${S} = offset_b${S} / 4u;\n            let index_c${S} = offset_c${S} / 4u;\n            let component_a${S} = offset_a${S} % 4u;\n            let component_b${S} = offset_b${S} % 4u;\n            ${v}[${S}] = ${w}(${d(x,E,C)});\n          `};i===9?h=`\n            var data = vec4<u32>(0);\n            ${y("data",0,"u32")}\n            ${y("data",1,"u32")}\n            ${y("data",2,"u32")}\n            ${y("data",3,"u32")}\n            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:h=`\n            ${y("output_data[global_idx]",0)}\n            ${y("output_data[global_idx]",1)}\n            ${y("output_data[global_idx]",2)}\n            ${y("output_data[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(m,a,p,u)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${h}\n      }`},Ap=e=>{let t=e[1].dims,r=e[2].dims,o=e[0].dims,i=e[1].dataType,u=!(W.areEqual(t,r)&&W.areEqual(r,o)),a=t,p=W.size(t);if(u){let h=xt.calcShape(xt.calcShape(t,r,!1),o,!1);if(!h)throw new Error("Can\'t perform where op on the given tensors");a=h,p=W.size(a)}let m=Math.ceil(p/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:h=>Cp(h,e,a,u,i),getRunData:()=>({outputs:[{dims:a,dataType:i}],dispatchGroup:{x:Math.ceil(p/64/4)},programUniforms:[{type:12,data:m},...G(o),...G(t),...G(r),...G(a)]})}},pl=e=>{e.compute(Ap(e.inputs))}});var fl,hl=J(()=>{"use strict";za();Io();Wa();Ha();Ss();Ds();zs();ko();Js();eu();iu();uu();cu();fu();yu();wu();$u();Do();Cu();Iu();Lu();qu();Pn();Zu();Xu();rl();il();ul();cl();gr();To();ml();fl=new Map([["Abs",[Ga]],["Acos",[La]],["Acosh",[Fa]],["Add",[xs]],["ArgMax",[Ma,Ao]],["ArgMin",[Ba,Ao]],["Asin",[qa]],["Asinh",[ja]],["Atan",[Ka]],["Atanh",[Ya]],["Attention",[Ua]],["AveragePool",[Bu,Du]],["BatchNormalization",[Va]],["BiasAdd",[Na]],["BiasSplitGelu",[_s]],["Cast",[Ja,Za]],["Ceil",[Qa]],["Clip",[Xa]],["Concat",[Bs,Ms]],["Conv",[Mo,Bo]],["ConvTranspose",[Zs,Ys]],["Cos",[es]],["Cosh",[ts]],["CumSum",[Xs,Qs]],["Div",[Cs]],["Einsum",[nu,ou]],["Elu",[rs,Rn]],["Equal",[As]],["Erf",[ns]],["Exp",[os]],["Expand",[su]],["Floor",[is]],["FusedConv",[Mo,Bo]],["Gather",[du,lu]],["GatherElements",[mu,pu]],["Gelu",[as]],["Gemm",[gu,hu]],["GlobalAveragePool",[Uu,zu]],["GlobalMaxPool",[Gu,Hu]],["Greater",[Ps]],["GreaterOrEqual",[ks]],["HardSigmoid",[fs,ms]],["InstanceNormalization",[bu]],["LayerNormalization",[vu]],["LeakyRelu",[ss,Rn]],["Less",[Os]],["LessOrEqual",[Rs]],["Log",[$s]],["MatMul",[Hs]],["MaxPool",[Wu,Nu]],["Mul",[Is]],["MultiHeadAttention",[xu,Su]],["Neg",[ls]],["Not",[us]],["Pad",[Au]],["Pow",[Ts]],["Range",[Fu]],["Reciprocal",[ds]],["ReduceMin",[Ea]],["ReduceMean",[xa]],["ReduceMax",[Ta]],["ReduceSum",[Oa]],["ReduceProd",[Pa]],["ReduceL1",[Ca]],["ReduceL2",[Aa]],["ReduceLogSum",[Ra]],["ReduceLogSumExp",[Ia]],["ReduceSumSquare",[ka]],["Relu",[cs]],["Resize",[Ku,Yu]],["Sigmoid",[ps]],["Sin",[hs]],["Sinh",[gs]],["Slice",[el,tl]],["SkipLayerNormalization",[Ju]],["Split",[al,sl]],["Sqrt",[ys]],["Softmax",[nl,ol]],["Sub",[Es]],["Tan",[bs]],["Tanh",[ws]],["ThresholdedRelu",[vs,Rn]],["Tile",[dl]],["Transpose",[ca,pa]],["Where",[pl]]])});var Gn,gl=J(()=>{"use strict";fr();Ht();Ie();Gn=class{constructor(t){this.backend=t;this.repo=new Map,this.attributesBound=!1}getArtifact(t){return this.repo.get(t)}setArtifact(t,r){this.repo.set(t,r)}run(t,r,o,i,u){Qt(t.programInfo.name);let a=this.backend.device,p=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let m=[];for(let d of r)m.push({binding:m.length,resource:{buffer:d.buffer}});for(let d of o)m.push({binding:m.length,resource:{buffer:d.buffer}});u&&m.push({binding:m.length,resource:u});let h=a.createBindGroup({layout:t.computePipeline.getBindGroupLayout(0),entries:m,label:t.programInfo.name});if(this.backend.sessionStatus==="capturing"){let d={kernelId:this.backend.currentKernelId,computePipeline:t.computePipeline,bindGroup:h,dispatchGroup:i};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(d)}p.setPipeline(t.computePipeline),p.setBindGroup(0,h),p.dispatchWorkgroups(...i),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),er(t.programInfo.name)}dispose(){}build(t,r){Qt(t.name);let o=this.backend.device,i=[];o.features.has("shader-f16")&&i.push("enable f16;");let u=la(r),a=t.getShaderSource(u),p=`${i.join(`\n`)}\n${u.additionalImplementations}\n${a}`,m=o.createShaderModule({code:p,label:t.name});ze("verbose",()=>`[WebGPU] ${t.name} shader code: ${p}`);let h=o.createComputePipeline({compute:{module:m,entryPoint:"main"},layout:"auto",label:t.name});return er(t.name),{programInfo:t,computePipeline:h}}normalizeDispatchGroupSize(t){let r=typeof t=="number"?t:t.x,o=typeof t=="number"?1:t.y||1,i=typeof t=="number"?1:t.z||1,u=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=u&&o<=u&&i<=u)return[r,o,i];let a=r*o*i,p=Math.ceil(Math.sqrt(a));if(p>u){if(p=Math.ceil(Math.cbrt(a)),p>u)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[p,p,p]}else return[p,p,1]}}});var Ip,Tp,Ln,yl=J(()=>{"use strict";fr();be();Ht();oa();ua();hl();gl();Ip=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let o=0;o<e.length;++o){let i=e[o].dataType;switch(t[o]){case"none":{r.push("");break}case"type":{r.push(`${i}`);break}case"rank":{let u=e[o].dims.length;r.push(`${i};${u}`);break}case"dims":{let u=e[o].dims.join(",");r.push(`${i};${u}`);break}default:throw new Error(`unsupported input dependency: ${t[o]}`)}}return r.join("|")},Tp=(e,t,r)=>{let o=e.name;return e.shaderCache?.hint&&(o+="["+e.shaderCache.hint+"]"),o+=":"+r+`:${Ip(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,o},Ln=class{constructor(){this.currentSessionId=null;this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.maxDispatchNumber=16;this.pendingDispatchNumber=0;this.pendingKernels=[];this.pendingQueries=new Map;this.sessionStatus="default";this.capturedCommandList=new Map;this.capturedPendingKernels=new Map;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let t=this.kernelCustomData.get(this.currentKernelId);return t||(t={},this.kernelCustomData.set(this.currentKernelId,t)),t}async initialize(t,r){this.env=t;let o=[],i={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:o};r.features.has("chromium-experimental-timestamp-query-inside-passes")?o.push("chromium-experimental-timestamp-query-inside-passes"):r.features.has("timestamp-query")&&o.push("timestamp-query"),r.features.has("shader-f16")&&o.push("shader-f16"),this.device=await r.requestDevice(i),this.gpuDataManager=sa(this),this.programManager=new Gn(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,ra(t.logLevel,!!t.debug),this.device.onuncapturederror=u=>{u.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${u.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let t=this.getCommandEncoder(),r={};this.queryType==="at-passes"&&(r.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=t.beginComputePass(r)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;Qt(),this.endComputePass();let t;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),t=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(t,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,t,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&t.mapAsync(GPUMapMode.READ).then(()=>{let r=new BigUint64Array(t.getMappedRange()),o=this.pendingQueries.get(t);for(let i=0;i<r.length/2;i++){let u=o[i],a=u.kernelId,p=this.kernels.get(a),m=p.kernelType,h=p.kernelName,d=u.programName,y=u.inputTensorViews,v=u.outputTensorViews,S=r[i*2],w=r[i*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=S);let x=Number(S-this.queryTimeBase),E=Number(w-this.queryTimeBase);if(!Number.isSafeInteger(x)||!Number.isSafeInteger(E))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:y.map(C=>({dims:C.dims,dataType:Nt(C.dataType)})),outputsMetadata:v.map(C=>({dims:C.dims,dataType:Nt(C.dataType)})),kernelId:a,kernelType:m,kernelName:h,programName:d,startTime:x,endTime:E});else{let C="";y.forEach((T,O)=>{C+=`input[${O}]: [${T.dims}] | ${Nt(T.dataType)}, `});let _="";v.forEach((T,O)=>{_+=`output[${O}]: [${T.dims}] | ${Nt(T.dataType)}, `}),console.log(`[profiling] kernel "${a}|${m}|${h}|${d}" ${C}${_}execution time: ${E-x} ns`)}go("GPU",`${d}::${S}::${w}`)}t.unmap(),this.pendingQueries.delete(t)}),er()}run(t,r,o,i,u){Qt(t.name);let a=[];for(let _=0;_<r.length;++_){let T=this.gpuDataManager.get(r[_].data);if(!T)throw new Error(`no GPU data for input: ${r[_].data}`);a[_]=T}let{outputs:p,dispatchGroup:m,programUniforms:h}=t.getRunData(r),d=o.length===0?p.map((_,T)=>T):o;if(d.length!==p.length)throw new Error(`Output size ${d.length} must be equal to ${p.length}.`);let y=[],v=[];for(let _=0;_<p.length;++_){if(!Number.isInteger(d[_])||d[_]<-3||d[_]>=p.length)throw new Error(`Invalid output index: ${d[_]}`);if(d[_]===-3)continue;let T=d[_]===-1,O=d[_]===-2,z=T||O?u(p[_].dataType,p[_].dims):i(d[_],p[_].dataType,p[_].dims),M=this.gpuDataManager.get(z.data);if(!M)throw new Error(`no GPU data for output: ${z.data}`);if(T&&this.temporaryData.push(M),O){let N=this.kernelPersistentData.get(this.currentKernelId);N||(N=[],this.kernelPersistentData.set(this.currentKernelId,N)),N.push(M)}y.push(z),v.push(M)}let S;if(h){let _=0,T=[];h.forEach(N=>{let j=typeof N.data=="number"?[N.data]:N.data;if(j.length===0)return;let ue=N.type===10?2:4,k,te;N.type===10?(te=j.length>4?16:j.length>2?8:j.length*ue,k=j.length>4?16:ue*j.length):(te=j.length<=2?j.length*ue:16,k=16),_=Math.ceil(_/te)*te,T.push(_);let Be=N.type===10?8:4;_+=j.length>4?Math.ceil(j.length/Be)*k:j.length*ue});let O=16;_=Math.ceil(_/O)*O;let z=new ArrayBuffer(_);h.forEach((N,j)=>{let ue=T[j],k=typeof N.data=="number"?[N.data]:N.data;if(N.type===6)new Int32Array(z,ue,k.length).set(k);else if(N.type===12)new Uint32Array(z,ue,k.length).set(k);else if(N.type===10)new Uint16Array(z,ue,k.length).set(k);else if(N.type===1)new Float32Array(z,ue,k.length).set(k);else throw new Error(`Unsupported uniform type: ${Nt(N.type)}`)});let M=this.gpuDataManager.create(_,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(M.buffer,0,z,0,_),this.gpuDataManager.release(M.id),S={offset:0,size:_,buffer:M.buffer}}let w=this.programManager.normalizeDispatchGroupSize(m),x=w[1]===1&&w[2]===1,E=Tp(t,r,x),C=this.programManager.getArtifact(E);if(C||(C=this.programManager.build(t,w),this.programManager.setArtifact(E,C),ze("info",()=>`[artifact] key: ${E}, programName: ${t.name}`)),ze("info",()=>`[ProgramManager] run "${t.name}" (key=${E}) with ${w[0]}x${w[1]}x${w[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let _={kernelId:this.currentKernelId,programName:C.programInfo.name,inputTensorViews:r,outputTensorViews:y};this.pendingKernels.push(_),this.capturedPendingKernels.get(this.currentSessionId).push(_)}return this.programManager.run(C,a,v,w,S),er(t.name),y}upload(t,r){this.gpuDataManager.upload(t,r)}memcpy(t,r){this.gpuDataManager.memcpy(t,r)}async download(t,r){await this.gpuDataManager.download(t,r)}alloc(t){return this.gpuDataManager.create(t).id}free(t){return this.gpuDataManager.release(t)}createKernel(t,r,o,i){let u=fl.get(t);if(!u)throw new Error(`kernel not implemented: ${t}`);let a={kernelType:t,kernelName:i,kernelEntry:u[0],attributes:[u[1],o]};this.kernels.set(r,a)}releaseKernel(t){let r=this.kernelPersistentData.get(t);if(r){for(let o of r)this.gpuDataManager.release(o.id);this.kernelPersistentData.delete(t)}this.kernelCustomData.delete(t),this.kernels.delete(t)}computeKernel(t,r,o){let i=this.kernels.get(t);if(!i)throw new Error(`kernel not created: ${t}`);let u=i.kernelType,a=i.kernelName,p=i.kernelEntry,m=i.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${u}] ${a}" is not allowed to be called recursively`);this.currentKernelId=t,m[0]&&(m[1]=m[0](m[1]),m[0]=void 0),ze("info",()=>`[WebGPU] Start to run kernel "[${u}] ${a}"...`);let h=this.env.debug;this.temporaryData=[];try{return h&&this.device.pushErrorScope("validation"),p(r,m[1]),0}catch(d){return o.push(Promise.resolve(`[WebGPU] Kernel "[${u}] ${a}" failed. ${d}`)),1}finally{h&&o.push(this.device.popErrorScope().then(d=>d?`GPU validation error for kernel "[${u}] ${a}": ${d.message}`:null));for(let d of this.temporaryData)this.gpuDataManager.release(d.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(t,r,o,i){let u=this.sessionExternalDataMapping.get(t);u||(u=new Map,this.sessionExternalDataMapping.set(t,u));let a=u.get(r),p=this.gpuDataManager.registerExternalBuffer(o,i,a?.[1]);return u.set(r,[p,o]),p}unregisterBuffers(t){let r=this.sessionExternalDataMapping.get(t);r&&(r.forEach(o=>this.gpuDataManager.unregisterExternalBuffer(o[1])),this.sessionExternalDataMapping.delete(t))}getBuffer(t){let r=this.gpuDataManager.get(t);if(!r)throw new Error(`no GPU data for buffer: ${t}`);return r.buffer}createDownloader(t,r,o){return async()=>{let i=await wo(this,t,r);return na(i.buffer,o)}}writeTimestamp(t){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,t)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||this.env.wasm.trace)&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){ze("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){ze("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){ze("info","replay"),this.sessionStatus="replaying";let t=this.capturedCommandList.get(this.currentSessionId),r=this.capturedPendingKernels.get(this.currentSessionId),o=t.length;this.pendingKernels=[];for(let i=0;i<o;i++){let u=this.getComputePassEncoder(),a=t[i];this.writeTimestamp(this.pendingDispatchNumber*2),u.setPipeline(a.computePipeline),u.setBindGroup(0,a.bindGroup),u.dispatchWorkgroups(...a.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(r[i]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onReleaseSession(t){this.unregisterBuffers(t),this.capturedCommandList.has(t)&&this.capturedCommandList.delete(t),this.capturedPendingKernels.has(t)&&this.capturedPendingKernels.delete(t),this.gpuDataManager.onReleaseSession(t)}onRunStart(t){this.currentSessionId=t,this.setQueryType()}}});var bl={};bn(bl,{init:()=>Ep});var Fr,Ho,Ep,wl=J(()=>{"use strict";be();yl();Ht();Ee();Fr=class e{constructor(t,r,o,i){this.module=t;this.dataType=r;this.data=o;this.dims=i}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=W.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=W.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=W.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(W.size(t)!==W.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,t)}},Ho=class{constructor(t,r,o){this.module=t;this.backend=r;this.customDataOffset=0;this.customDataSize=0;let i=t.HEAPU32,u=o>>>2;this.opKernelContext=i[u++];let a=i[u++];this.outputCount=i[u++],this.customDataOffset=i[u++],this.customDataSize=i[u++];let p=[];for(let m=0;m<a;m++){let h=i[u++],d=i[u++],y=i[u++],v=[];for(let S=0;S<y;S++)v.push(i[u++]);p.push(new Fr(t,h,d,v))}this.inputs=p}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(t,r){let o=r?.inputs?.map(p=>typeof p=="number"?this.inputs[p]:p)??this.inputs,i=r?.outputs??[],u=(p,m,h)=>new Fr(this.module,m,this.output(p,h),h),a=(p,m)=>{let h=Wr(p);if(!h)throw new Error(`Unsupported data type: ${p}`);let d=h*W.size(m);return new Fr(this.module,p,this.backend.gpuDataManager.create(d).id,m)};return this.backend.run(t,o,i,u,a)}output(t,r){let o=this.module.stackSave();try{let i=this.module.stackAlloc((1+r.length)*4),u=i>>2;this.module.HEAPU32[u++]=r.length;for(let a=0;a<r.length;a++)this.module.HEAPU32[u++]=r[a];return this.module._JsepOutput(this.opKernelContext,t,i)}catch(i){throw new Error(`Failed to generate kernel\'s output[${t}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${i}`)}finally{this.module.stackRestore(o)}}},Ep=async(e,t,r)=>{let o=e.jsepInit;if(!o)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");let i=new Ln;await i.initialize(t,r),o(i,u=>i.alloc(u),u=>i.free(u),(u,a,p,m=!1)=>{if(m)ze("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${u}, dst=${a}, size=${p}`),i.memcpy(u,a);else{ze("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${u}, gpuDataId=${a}, size=${p}`);let h=e.HEAPU8.subarray(u>>>0,(u>>>0)+p);i.upload(a,h)}},async(u,a,p)=>{ze("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${u}, dataOffset=${a}, size=${p}`),await i.download(u,()=>e.HEAPU8.subarray(a>>>0,(a>>>0)+p))},(u,a,p)=>i.createKernel(u,a,p,e.UTF8ToString(e._JsepGetNodeName(a))),u=>i.releaseKernel(u),(u,a,p,m)=>{ze("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${p}, kernel=${u}, contextDataOffset=${a}`);let h=new Ho(e,i,a);return i.computeKernel(u,h,m)},()=>i.captureBegin(),()=>i.captureEnd(),()=>i.replay())}});var ki;ki=_i();var Gl=Ei(),co,po=!1,wn=!1,Oi=!1,Ll=e=>{if(e===1)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+e+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+e+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},Fl=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},ql=(e,t)=>e?t?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":t?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Ri=async e=>{if(po)return Promise.resolve();if(wn)throw new Error("multiple calls to \'initializeWebAssembly()\' detected.");if(Oi)throw new Error("previous call to \'initializeWebAssembly()\' failed.");wn=!0;let t=e.initTimeout,r=e.numThreads,o=e.simd,i=Ll(r),u=o&&Fl(),a=e.wasmPaths,p=typeof a=="string"?a:void 0,m=ql(u,i),h=typeof a=="object"?a[m]:void 0,d=!1,y=[];if(t>0&&y.push(new Promise(v=>{setTimeout(()=>{d=!0,v()},t)})),y.push(new Promise((v,S)=>{let w=i?Gl:ki,x={locateFile:(E,C)=>{if(i&&E.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([Pi()],{type:"text/javascript"}));if(E.endsWith(".wasm")){if(h)return h;let _=p??C;return m==="ort-wasm-simd.wasm"?_+"ort-wasm-simd.jsep.wasm":m==="ort-wasm-simd-threaded.wasm"?_+"ort-wasm-simd-threaded.jsep.wasm":_+m}return C+E}};if(i)if(x.numThreads=r,typeof Blob>"u")x.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let E=`var ortWasmThreaded=${w.toString()};`;x.mainScriptUrlOrBlob=new Blob([E],{type:"text/javascript"})}w(x).then(E=>{wn=!1,po=!0,co=E,v()},E=>{wn=!1,Oi=!0,S(E)})})),await Promise.race(y),d)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},We=()=>{if(po&&co)return co;throw new Error("WebAssembly is not initialized yet.")};var Ve=(e,t)=>{let r=We(),o=r.lengthBytesUTF8(e)+1,i=r._malloc(o);return r.stringToUTF8(e,i,o),t.push(i),i},Vr=(e,t,r,o)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([i,u])=>{let a=t?t+i:i;if(typeof u=="object")Vr(u,a+".",r,o);else if(typeof u=="string"||typeof u=="number")o(a,u.toString());else if(typeof u=="boolean")o(a,u?"1":"0");else throw new Error(`Can\'t handle extra config type: ${typeof u}`)})},Me=e=>{let t=We(),r=t.stackSave();try{let o=t.stackAlloc(8);t._OrtGetLastError(o,o+4);let i=t.HEAP32[o/4],u=t.HEAPU32[o/4+1],a=u?t.UTF8ToString(u):"";throw new Error(`${e} ERROR_CODE: ${i}, ERROR_MESSAGE: ${a}`)}finally{t.stackRestore(r)}};var Di=e=>{let t=We(),r=0,o=[],i=e||{};try{if(e?.logSeverityLevel===void 0)i.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)i.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(i.terminate=!1);let u=0;return e?.tag!==void 0&&(u=Ve(e.tag,o)),r=t._OrtCreateRunOptions(i.logSeverityLevel,i.logVerbosityLevel,!!i.terminate,u),r===0&&Me("Can\'t create run options."),e?.extra!==void 0&&Vr(e.extra,"",new WeakSet,(a,p)=>{let m=Ve(a,o),h=Ve(p,o);t._OrtAddRunConfigEntry(r,m,h)!==0&&Me(`Can\'t set a run config entry: ${a} - ${p}.`)}),[r,o]}catch(u){throw r!==0&&t._OrtReleaseRunOptions(r),o.forEach(a=>t._free(a)),u}};var jl=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},Kl=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Yl=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},Zl=(e,t,r)=>{for(let o of t){let i=typeof o=="string"?o:o.name;switch(i){case"webnn":if(i="WEBNN",typeof o!="string"){let a=o;if(a?.deviceType){let p=Ve("deviceType",r),m=Ve(a.deviceType,r);We()._OrtAddSessionConfigEntry(e,p,m)!==0&&Me(`Can\'t set a session config entry: \'deviceType\' - ${a.deviceType}.`)}if(a?.numThreads){let p=a.numThreads;(typeof p!="number"||!Number.isInteger(p)||p<0)&&(p=0);let m=Ve("numThreads",r),h=Ve(p.toString(),r);We()._OrtAddSessionConfigEntry(e,m,h)!==0&&Me(`Can\'t set a session config entry: \'numThreads\' - ${a.numThreads}.`)}if(a?.powerPreference){let p=Ve("powerPreference",r),m=Ve(a.powerPreference,r);We()._OrtAddSessionConfigEntry(e,p,m)!==0&&Me(`Can\'t set a session config entry: \'powerPreference\' - ${a.powerPreference}.`)}}break;case"webgpu":if(i="JS",typeof o!="string"){let a=o;if(a?.preferredLayout){if(a.preferredLayout!=="NCHW"&&a.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either \'NCHW\' or \'NHWC\': ${a.preferredLayout}`);let p=Ve("preferredLayout",r),m=Ve(a.preferredLayout,r);We()._OrtAddSessionConfigEntry(e,p,m)!==0&&Me(`Can\'t set a session config entry: \'preferredLayout\' - ${a.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${i}`)}let u=Ve(i,r);We()._OrtAppendExecutionProvider(e,u)!==0&&Me(`Can\'t append execution provider: ${i}.`)}},Bi=e=>{let t=We(),r=0,o=[],i=e||{};Yl(i);try{let u=jl(i.graphOptimizationLevel??"all"),a=Kl(i.executionMode??"sequential"),p=typeof i.logId=="string"?Ve(i.logId,o):0,m=i.logSeverityLevel??2;if(!Number.isInteger(m)||m<0||m>4)throw new Error(`log serverity level is not valid: ${m}`);let h=i.logVerbosityLevel??0;if(!Number.isInteger(h)||h<0||h>4)throw new Error(`log verbosity level is not valid: ${h}`);let d=typeof i.optimizedModelFilePath=="string"?Ve(i.optimizedModelFilePath,o):0;if(r=t._OrtCreateSessionOptions(u,!!i.enableCpuMemArena,!!i.enableMemPattern,a,!!i.enableProfiling,0,p,m,h,d),r===0&&Me("Can\'t create session options."),i.executionProviders&&Zl(r,i.executionProviders,o),i.enableGraphCapture!==void 0){if(typeof i.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${i.enableGraphCapture}`);let y=Ve("enableGraphCapture",o),v=Ve(i.enableGraphCapture.toString(),o);t._OrtAddSessionConfigEntry(r,y,v)!==0&&Me(`Can\'t set a session config entry: \'enableGraphCapture\' - ${i.enableGraphCapture}.`)}if(i.freeDimensionOverrides)for(let[y,v]of Object.entries(i.freeDimensionOverrides)){if(typeof y!="string")throw new Error(`free dimension override name must be a string: ${y}`);if(typeof v!="number"||!Number.isInteger(v)||v<0)throw new Error(`free dimension override value must be a non-negative integer: ${v}`);let S=Ve(y,o);t._OrtAddFreeDimensionOverride(r,S,v)!==0&&Me(`Can\'t set a free dimension override: ${y} - ${v}.`)}return i.extra!==void 0&&Vr(i.extra,"",new WeakSet,(y,v)=>{let S=Ve(y,o),w=Ve(v,o);t._OrtAddSessionConfigEntry(r,S,w)!==0&&Me(`Can\'t set a session config entry: ${y} - ${v}.`)}),[r,o]}catch(u){throw r!==0&&t._OrtReleaseSessionOptions(r),o.forEach(a=>t._free(a)),u}};be();var zi=async e=>{if(typeof e=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(e))}catch(t){if(t.code==="ERR_FS_FILE_TOO_LARGE"){let r=(void 0)(e),o=[];for await(let i of r)o.push(i);return new Uint8Array(Buffer.concat(o))}throw t}else{let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let r=t.headers.get("Content-Length"),o=r?parseInt(r,10):0;if(o<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let i=t.body.getReader(),u;try{u=new ArrayBuffer(o)}catch(p){if(p instanceof RangeError){let m=Math.ceil(o/65536);u=new WebAssembly.Memory({initial:m,maximum:m}).buffer}else throw p}let a=0;for(;;){let{done:p,value:m}=await i.read();if(p)break;let h=m.byteLength;new Uint8Array(u,a,h).set(m),a+=h}return new Uint8Array(u,0,o)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)};var Pp=(e,t)=>{We()._OrtInit(e,t)!==0&&Me("Can\'t initialize onnxruntime.")},$l=async e=>{Pp(e.wasm.numThreads,Nr(e.logLevel))},_l=async(e,t)=>{if(t==="webgpu"||t==="webnn"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let r=await navigator.gpu.requestAdapter();if(!r)throw new Error(\'Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.\');if(!e.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");let o=(wl(),pr(bl)).init;await o(We(),e,r)}},rr=new Map,Op=e=>{let t=We(),r=t.stackSave();try{let o=t.stackAlloc(8);return t._OrtGetInputOutputCount(e,o,o+4)!==0&&Me("Can\'t get session input/output count."),[t.HEAP32[o/4],t.HEAP32[o/4+1]]}finally{t.stackRestore(r)}},Go=e=>{let t=We(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can\'t create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},Sl=async(e,t)=>{let r,o,i=We();Array.isArray(e)?[r,o]=e:e.buffer===i.HEAPU8.buffer?[r,o]=[e.byteOffset,e.byteLength]:[r,o]=Go(e);let u=0,a=0,p=0,m=[],h=[],d=[];try{if([a,m]=Bi(t),t?.externalData&&i.mountExternalData){let _=[];for(let T of t.externalData){let O=typeof T=="string"?T:T.path;_.push(zi(typeof T=="string"?T:T.data).then(z=>{i.mountExternalData(O,z)}))}await Promise.all(_)}u=await i._OrtCreateSession(r,o,a),u===0&&Me("Can\'t create a session.");let[y,v]=Op(u),S=!!t?.enableGraphCapture,w=[],x=[],E=[];for(let _=0;_<y;_++){let T=i._OrtGetInputName(u,_);T===0&&Me("Can\'t get an input name."),h.push(T),w.push(i.UTF8ToString(T))}for(let _=0;_<v;_++){let T=i._OrtGetOutputName(u,_);T===0&&Me("Can\'t get an output name."),d.push(T);let O=i.UTF8ToString(T);x.push(O);{if(S&&t?.preferredOutputLocation===void 0){E.push("gpu-buffer");continue}let z=typeof t?.preferredOutputLocation=="string"?t.preferredOutputLocation:t?.preferredOutputLocation?.[O]??"cpu";if(z!=="cpu"&&z!=="cpu-pinned"&&z!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${z}.`);if(S&&z!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${z}. Only \'gpu-buffer\' location is supported when enableGraphCapture is true.`);E.push(z)}}let C=null;return E.some(_=>_==="gpu-buffer")&&(p=i._OrtCreateBinding(u),p===0&&Me("Can\'t create IO binding."),C={handle:p,outputPreferredLocations:E,outputPreferredLocationsEncoded:E.map(_=>fo(_))}),rr.set(u,[u,h,d,C,S,!1]),[u,w,x]}catch(y){throw h.forEach(v=>i._OrtFree(v)),d.forEach(v=>i._OrtFree(v)),p!==0&&i._OrtReleaseBinding(p),u!==0&&i._OrtReleaseSession(u),y}finally{i._free(r),a!==0&&i._OrtReleaseSessionOptions(a),m.forEach(y=>i._free(y)),i.unmountExternalData?.()}},xl=e=>{let t=We(),r=rr.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[o,i,u,a,p]=r;a&&(p&&t._OrtClearBoundOutputs(a.handle),t._OrtReleaseBinding(a.handle)),t.jsepOnReleaseSession?.(e),i.forEach(m=>t._OrtFree(m)),u.forEach(m=>t._OrtFree(m)),t._OrtReleaseSession(o),rr.delete(e)},vl=(e,t,r,o,i,u=!1)=>{if(!e){t.push(0);return}let a=We(),p=e[0],m=e[1],h=e[3],d,y;if(p==="string"&&h==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(u&&h!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${i} when enableGraphCapture is true.`);if(h==="gpu-buffer"){let w=e[2].gpuBuffer,x=Wr(mo(p));y=m.reduce((E,C)=>E*C,1)*x,d=a.jsepRegisterBuffer(o,i,w,y)}else{let w=e[2];if(Array.isArray(w)){y=4*w.length,d=a._malloc(y),r.push(d);let x=d/4;for(let E=0;E<w.length;E++){if(typeof w[E]!="string")throw new TypeError(`tensor data at index ${E} is not a string`);a.HEAPU32[x++]=Ve(w[E],r)}}else y=w.byteLength,d=a._malloc(y),r.push(d),a.HEAPU8.set(new Uint8Array(w.buffer,w.byteOffset,y),d)}let v=a.stackSave(),S=a.stackAlloc(4*m.length);try{let w=S/4;m.forEach(E=>a.HEAP32[w++]=E);let x=a._OrtCreateTensor(mo(p),d,y,S,m.length,fo(h));x===0&&Me(`Can\'t create tensor for input/output. session=${o}, index=${i}.`),t.push(x)}finally{a.stackRestore(v)}},Cl=async(e,t,r,o,i,u)=>{let a=We(),p=rr.get(e);if(!p)throw new Error(`cannot run inference. invalid session id: ${e}`);let m=p[0],h=p[1],d=p[2],y=p[3],v=p[4],S=p[5],w=t.length,x=o.length,E=0,C=[],_=[],T=[],O=[],z=a.stackSave(),M=a.stackAlloc(w*4),N=a.stackAlloc(w*4),j=a.stackAlloc(x*4),ue=a.stackAlloc(x*4);try{[E,C]=Di(u);for(let de=0;de<w;de++)vl(r[de],_,O,e,t[de],v);for(let de=0;de<x;de++)vl(i[de],T,O,e,w+o[de],v);let k=M/4,te=N/4,Be=j/4,Ue=ue/4;for(let de=0;de<w;de++)a.HEAPU32[k++]=_[de],a.HEAPU32[te++]=h[t[de]];for(let de=0;de<x;de++)a.HEAPU32[Be++]=T[de],a.HEAPU32[Ue++]=d[o[de]];if(y&&!S){let{handle:de,outputPreferredLocations:Pe,outputPreferredLocationsEncoded:xe}=y;if(h.length!==w)throw new Error(`input count from feeds (${w}) is expected to be always equal to model\'s input count (${h.length}).`);for(let oe=0;oe<w;oe++){let _e=t[oe];await a._OrtBindInput(de,h[_e],_[oe])!==0&&Me(`Can\'t bind input[${oe}] for session=${e}.`)}for(let oe=0;oe<x;oe++){let _e=o[oe];i[oe]?.[3]?a._OrtBindOutput(de,d[_e],T[oe],0)!==0&&Me(`Can\'t bind pre-allocated output[${oe}] for session=${e}.`):a._OrtBindOutput(de,d[_e],0,xe[_e])!==0&&Me(`Can\'t bind output[${oe}] to ${Pe[oe]} for session=${e}.`)}rr.set(e,[m,h,d,y,v,!0])}a.jsepOnRunStart?.(m);let $e;y?$e=await a._OrtRunWithBinding(m,y.handle,x,j,E):$e=await a._OrtRun(m,N,M,w,ue,x,j,E),$e!==0&&Me("failed to call OrtRun().");let we=[];for(let de=0;de<x;de++){let Pe=a.HEAPU32[j/4+de];if(Pe===T[de]){we.push(i[de]);continue}let xe=a.stackSave(),oe=a.stackAlloc(4*4),_e=!1,Oe,ke=0;try{a._OrtGetTensorData(Pe,oe,oe+4,oe+8,oe+12)!==0&&Me(`Can\'t access output tensor data on index ${de}.`);let F=oe/4,ae=a.HEAPU32[F++];ke=a.HEAPU32[F++];let ge=a.HEAPU32[F++],ht=a.HEAPU32[F++],Ye=[];for(let Fe=0;Fe<ht;Fe++)Ye.push(a.HEAPU32[ge/4+Fe]);a._OrtFree(ge);let Ne=Ye.reduce((Fe,He)=>Fe*He,1);Oe=Nt(ae);let Mt=y?.outputPreferredLocations[o[de]];if(Oe==="string"){if(Mt==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let Fe=[],He=ke/4;for(let Rt=0;Rt<Ne;Rt++){let gt=a.HEAPU32[He++],zt=Rt===Ne-1?void 0:a.HEAPU32[He]-gt;Fe.push(a.UTF8ToString(gt,zt))}we.push([Oe,Ye,Fe,"cpu"])}else if(Mt==="gpu-buffer"&&Ne>0){let Fe=a.jsepGetBuffer(ke),He=Wr(ae);if(He===void 0||!Mi(Oe))throw new Error(`Unsupported data type: ${Oe}`);_e=!0,we.push([Oe,Ye,{gpuBuffer:Fe,download:a.jsepCreateDownloader(Fe,Ne*He,Oe),dispose:()=>{a._OrtReleaseTensor(Pe)}},"gpu-buffer"])}else{let Fe=vn(Oe),He=new Fe(Ne);new Uint8Array(He.buffer,He.byteOffset,He.byteLength).set(a.HEAPU8.subarray(ke,ke+He.byteLength)),we.push([Oe,Ye,He,"cpu"])}}finally{a.stackRestore(xe),Oe==="string"&&ke&&a._free(ke),_e||a._OrtReleaseTensor(Pe)}}return y&&!v&&(a._OrtClearBoundOutputs(y.handle),rr.set(e,[m,h,d,y,v,!1])),we}finally{a.stackRestore(z),_.forEach(k=>a._OrtReleaseTensor(k)),T.forEach(k=>a._OrtReleaseTensor(k)),O.forEach(k=>a._free(k)),E!==0&&a._OrtReleaseRunOptions(E),C.forEach(k=>a._free(k))}},Al=e=>{let t=We(),r=rr.get(e);if(!r)throw new Error("invalid session id");let o=r[0],i=t._OrtEndProfiling(o);i===0&&Me("Can\'t get an profile file name."),t._OrtFree(i)},Il=e=>{let t=[];for(let r of e){let o=r[2];!Array.isArray(o)&&"buffer"in o&&t.push(o.buffer)}return t};self.onmessage=e=>{let{type:t,in:r}=e.data;try{switch(t){case"init-wasm":Ri(r.wasm).then(()=>{$l(r).then(()=>{postMessage({type:t})},o=>{postMessage({type:t,err:o})})},o=>{postMessage({type:t,err:o})});break;case"init-ep":{let{epName:o,env:i}=r;_l(i,o).then(()=>{postMessage({type:t})},u=>{postMessage({type:t,err:u})});break}case"copy-from":{let{buffer:o}=r,i=Go(o);postMessage({type:t,out:i});break}case"create":{let{model:o,options:i}=r;Sl(o,i).then(u=>{postMessage({type:t,out:u})},u=>{postMessage({type:t,err:u})});break}case"release":xl(r),postMessage({type:t});break;case"run":{let{sessionId:o,inputIndices:i,inputs:u,outputIndices:a,options:p}=r;Cl(o,i,u,a,new Array(a.length).fill(null),p).then(m=>{m.some(h=>h[3]!=="cpu")?postMessage({type:t,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:t,out:m},Il(m))},m=>{postMessage({type:t,err:m})});break}case"end-profiling":Al(r),postMessage({type:t});break;default:}}catch(o){postMessage({type:t,err:o})}};})();\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n'});var zn,fr,ni,Qa,es,sl,ul,uo,lo,nT,Ja,h0,m0,g0,b0,y0,v0,w0,ll=R(()=>{"use strict";kt();f0();io();zn=()=>!!ve.wasm.proxy&&typeof document<"u",ni=!1,Qa=!1,es=!1,ul=new Map,uo=(r,e)=>{let n=ul.get(r);n?n.push(e):ul.set(r,[e])},lo=()=>{if(ni||!Qa||es||!fr)throw new Error("worker not ready")},nT=r=>{switch(r.data.type){case"init-wasm":ni=!1,r.data.err?(es=!0,sl[1](r.data.err)):(Qa=!0,sl[0]());break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let e=ul.get(r.data.type);r.data.err?e.shift()[1](r.data.err):e.shift()[0](r.data.out);break}default:}},Ja=typeof document<"u"?document?.currentScript?.src:void 0,h0=async()=>{if(!Qa){if(ni)throw new Error("multiple calls to 'initWasm()' detected.");if(es)throw new Error("previous call to 'initWasm()' failed.");if(ni=!0,zn())return ve.wasm.wasmPaths===void 0&&Ja&&Ja.indexOf("blob:")!==0&&(ve.wasm.wasmPaths=Ja.substr(0,+Ja.lastIndexOf("/")+1)),new Promise((r,e)=>{fr?.terminate();let n=URL.createObjectURL(new Blob([p0()],{type:"text/javascript"}));fr=new Worker(n,{name:"ort-wasm-proxy-worker"}),fr.onerror=o=>e(o),fr.onmessage=nT,URL.revokeObjectURL(n),sl=[r,e];let t={type:"init-wasm",in:ve};fr.postMessage(t)});try{await Dm(ve.wasm),await i0(ve),Qa=!0}catch(r){throw es=!0,r}finally{ni=!1}}},m0=async r=>{if(zn())return lo(),new Promise((e,n)=>{uo("init-ep",[e,n]);let t={type:"init-ep",in:{epName:r,env:ve}};fr.postMessage(t)});await a0(ve,r)},g0=async r=>zn()?(lo(),new Promise((e,n)=>{uo("copy-from",[e,n]);let t={type:"copy-from",in:{buffer:r}};fr.postMessage(t,[r.buffer])})):al(r),b0=async(r,e)=>{if(zn()){if(e?.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return lo(),new Promise((n,t)=>{uo("create",[n,t]);let o={type:"create",in:{model:r,options:e}},i=[];r instanceof Uint8Array&&i.push(r.buffer),fr.postMessage(o,i)})}else return s0(r,e)},y0=async r=>{if(zn())return lo(),new Promise((e,n)=>{uo("release",[e,n]);let t={type:"release",in:r};fr.postMessage(t)});u0(r)},v0=async(r,e,n,t,o,i)=>{if(zn()){if(n.some(s=>s[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(o.some(s=>s))throw new Error("pre-allocated output tensor is not supported for proxy.");return lo(),new Promise((s,a)=>{uo("run",[s,a]);let u=n,l={type:"run",in:{sessionId:r,inputIndices:e,inputs:u,outputIndices:t,options:i}};fr.postMessage(l,c0(u))})}else return l0(r,e,n,t,o,i)},w0=async r=>{if(zn())return lo(),new Promise((e,n)=>{uo("end-profiling",[e,n]);let t={type:"end-profiling",in:r};fr.postMessage(t)});d0(r)}});var x0,oT,ts,_0=R(()=>{"use strict";kt();ll();Ae();Bu();x0=(r,e)=>{switch(r.location){case"cpu":return[r.type,r.dims,r.data,"cpu"];case"gpu-buffer":return[r.type,r.dims,{gpuBuffer:r.gpuBuffer},"gpu-buffer"];default:throw new Error(`invalid data location: ${r.location} for ${e()}`)}},oT=r=>{switch(r[3]){case"cpu":return new _t(r[0],r[2],r[1]);case"gpu-buffer":{let e=r[0];if(!Ca(e))throw new Error(`not supported data type: ${e} for deserializing GPU tensor`);let{gpuBuffer:n,download:t,dispose:o}=r[2];return _t.fromGpuBuffer(n,{dataType:e,dims:r[1],download:t,dispose:o})}default:throw new Error(`invalid data location: ${r[3]}`)}},ts=class{async fetchModelAndCopyToWasmMemory(e){return g0(await Jo(e))}async loadModel(e,n){Kt();let t;typeof e=="string"?typeof process<"u"&&process.versions&&process.versions.node?t=await Jo(e):t=await this.fetchModelAndCopyToWasmMemory(e):t=e,[this.sessionId,this.inputNames,this.outputNames]=await b0(t,n),Yt()}async dispose(){return y0(this.sessionId)}async run(e,n,t){Kt();let o=[],i=[];Object.entries(e).forEach(m=>{let y=m[0],b=m[1],w=this.inputNames.indexOf(y);if(w===-1)throw new Error(`invalid input '${y}'`);o.push(b),i.push(w)});let s=[],a=[];Object.entries(n).forEach(m=>{let y=m[0],b=m[1],w=this.outputNames.indexOf(y);if(w===-1)throw new Error(`invalid output '${y}'`);s.push(b),a.push(w)});let u=o.map((m,y)=>x0(m,()=>`input "${this.inputNames[i[y]]}"`)),l=s.map((m,y)=>m?x0(m,()=>`output "${this.outputNames[a[y]]}"`):null),d=await v0(this.sessionId,i,u,a,l,t),p={};for(let m=0;m<d.length;m++)p[this.outputNames[a[m]]]=s[m]??oT(d[m]);return Yt(),p}startProfiling(){}endProfiling(){w0(this.sessionId)}}});var iT,rs,T0=R(()=>{"use strict";kt();ll();_0();iT=()=>{if((typeof ve.wasm.initTimeout!="number"||ve.wasm.initTimeout<0)&&(ve.wasm.initTimeout=0),typeof ve.wasm.simd!="boolean"&&(ve.wasm.simd=!0),typeof ve.wasm.proxy!="boolean"&&(ve.wasm.proxy=!1),typeof ve.wasm.trace!="boolean"&&(ve.wasm.trace=!1),typeof ve.wasm.numThreads!="number"||!Number.isInteger(ve.wasm.numThreads)||ve.wasm.numThreads<=0){(typeof self<"u"&&!self.crossOriginIsolated||typeof process<"u"&&process.versions&&process.versions.node)&&(ve.wasm.numThreads=1);let r=typeof navigator>"u"?(void 0)().length:navigator.hardwareConcurrency;ve.wasm.numThreads=Math.min(4,Math.ceil((r||1)/2))}},rs=class{async init(e){iT(),await h0(),await m0(e)}async createInferenceSessionHandler(e,n){let t=new ts;return await t.loadModel(e,n),Promise.resolve(t)}}});var $0={};tn($0,{wasmBackend:()=>aT});var aT,S0=R(()=>{"use strict";T0();aT=new rs});var uT={};tn(uT,{InferenceSession:()=>sd,TRACE:()=>Do,TRACE_FUNC_BEGIN:()=>Kt,TRACE_FUNC_END:()=>Yt,Tensor:()=>_t,TrainingSession:()=>cd,default:()=>sT,env:()=>ve,registerBackend:()=>qr});kt();kt();kt();var pd="1.18.0";var sT=ys;{let r=(ym(),Hr(bm)).onnxjsBackend;qr("webgl",r,-10)}{let r=(S0(),Hr($0)).wasmBackend;qr("webgpu",r,5),qr("webnn",r,5),qr("cpu",r,10),qr("wasm",r,10)}Object.defineProperty(ve.versions,"web",{value:pd,enumerable:!0});return Hr(uT);})();
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/*! Bundled license information:

long/index.js:
  (**
   * @license
   * Copyright 2009 The Closure Library Authors
   * Copyright 2020 Daniel Wirtz / The long.js Authors.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *     http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *
   * SPDX-License-Identifier: Apache-2.0
   *)
*/
//# sourceMappingURL=ort.all.min.js.map
