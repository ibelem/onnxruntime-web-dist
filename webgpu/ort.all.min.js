/*!
 * ONNX Runtime Web v1.18.0
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
"use strict";var ort=(()=>{var Uy=Object.create;var xi=Object.defineProperty;var Gy=Object.getOwnPropertyDescriptor;var Wy=Object.getOwnPropertyNames;var Hy=Object.getPrototypeOf,qy=Object.prototype.hasOwnProperty;var D=(r,e)=>()=>(r&&(e=r(r=0)),e);var Xe=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),Hr=(r,e)=>{for(var n in e)xi(r,n,{get:e[n],enumerable:!0})},tl=(r,e,n,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of Wy(e))!qy.call(r,o)&&o!==n&&xi(r,o,{get:()=>e[o],enumerable:!(t=Gy(e,o))||t.enumerable});return r};var zn=(r,e,n)=>(n=r!=null?Uy(Hy(r)):{},tl(e||!r||!r.__esModule?xi(n,"default",{value:r,enumerable:!0}):n,r)),Rr=r=>tl(xi({},"__esModule",{value:!0}),r);var Ti,sn,Br,$i,_i=D(()=>{Ti=new Map,sn=[],Br=(r,e,n)=>{if(e&&typeof e.init=="function"&&typeof e.createInferenceSessionHandler=="function"){let t=Ti.get(r);if(t===void 0)Ti.set(r,{backend:e,priority:n});else{if(t.priority>n)return;if(t.priority===n&&t.backend!==e)throw new Error(`cannot register backend "${r}" using priority ${n}`)}if(n>=0){let o=sn.indexOf(r);o!==-1&&sn.splice(o,1);for(let i=0;i<sn.length;i++)if(Ti.get(sn[i]).priority<=n){sn.splice(i,0,r);return}sn.push(r)}return}throw new TypeError("not a valid backend")},$i=async r=>{let e=r.length===0?sn:r,n=[];for(let t of e){let o=Ti.get(t);if(o){if(o.initialized)return o.backend;if(o.aborted)continue;let i=!!o.initPromise;try{return i||(o.initPromise=o.backend.init(t)),await o.initPromise,o.initialized=!0,o.backend}catch(s){i||n.push({name:t,err:s}),o.aborted=!0}finally{delete o.initPromise}}}throw new Error(`no available backend found. ERR: ${n.map(t=>`[${t.name}] ${t.err}`).join(", ")}`)}});var rl=D(()=>{_i()});var nl,ol=D(()=>{nl="1.18.0"});var il,un,es=D(()=>{ol();il="warning",un={wasm:{},webgl:{},webgpu:{},versions:{common:nl},set logLevel(r){if(r!==void 0){if(typeof r!="string"||["verbose","info","warning","error","fatal"].indexOf(r)===-1)throw new Error(`Unsupported logging level: ${r}`);il=r}},get logLevel(){return il}};Object.defineProperty(un,"logLevel",{enumerable:!0})});var ye,al=D(()=>{es();ye=un});var sl,ul,ll=D(()=>{sl=(r,e)=>{let n=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);n.width=r.dims[3],n.height=r.dims[2];let t=n.getContext("2d");if(t!=null){let o,i;e?.tensorLayout!==void 0&&e.tensorLayout==="NHWC"?(o=r.dims[2],i=r.dims[3]):(o=r.dims[3],i=r.dims[2]);let s=e?.format!==void 0?e.format:"RGB",a=e?.norm,u,l;a===void 0||a.mean===void 0?u=[255,255,255,255]:typeof a.mean=="number"?u=[a.mean,a.mean,a.mean,a.mean]:(u=[a.mean[0],a.mean[1],a.mean[2],0],a.mean[3]!==void 0&&(u[3]=a.mean[3])),a===void 0||a.bias===void 0?l=[0,0,0,0]:typeof a.bias=="number"?l=[a.bias,a.bias,a.bias,a.bias]:(l=[a.bias[0],a.bias[1],a.bias[2],0],a.bias[3]!==void 0&&(l[3]=a.bias[3]));let d=i*o,p=0,h=d,g=d*2,y=-1;s==="RGBA"?(p=0,h=d,g=d*2,y=d*3):s==="RGB"?(p=0,h=d,g=d*2):s==="RBG"&&(p=0,g=d,h=d*2);for(let w=0;w<i;w++)for(let I=0;I<o;I++){let T=(r.data[p++]-l[0])*u[0],$=(r.data[h++]-l[1])*u[1],O=(r.data[g++]-l[2])*u[2],C=y===-1?255:(r.data[y++]-l[3])*u[3];t.fillStyle="rgba("+T+","+$+","+O+","+C+")",t.fillRect(I,w,1,1)}if("toDataURL"in n)return n.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},ul=(r,e)=>{let n=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),t;if(n!=null){let o,i,s;e?.tensorLayout!==void 0&&e.tensorLayout==="NHWC"?(o=r.dims[2],i=r.dims[1],s=r.dims[3]):(o=r.dims[3],i=r.dims[2],s=r.dims[1]);let a=e!==void 0&&e.format!==void 0?e.format:"RGB",u=e?.norm,l,d;u===void 0||u.mean===void 0?l=[255,255,255,255]:typeof u.mean=="number"?l=[u.mean,u.mean,u.mean,u.mean]:(l=[u.mean[0],u.mean[1],u.mean[2],255],u.mean[3]!==void 0&&(l[3]=u.mean[3])),u===void 0||u.bias===void 0?d=[0,0,0,0]:typeof u.bias=="number"?d=[u.bias,u.bias,u.bias,u.bias]:(d=[u.bias[0],u.bias[1],u.bias[2],0],u.bias[3]!==void 0&&(d[3]=u.bias[3]));let p=i*o;if(e!==void 0&&(e.format!==void 0&&s===4&&e.format!=="RGBA"||s===3&&e.format!=="RGB"&&e.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let h=4,g=0,y=1,w=2,I=3,T=0,$=p,O=p*2,C=-1;a==="RGBA"?(T=0,$=p,O=p*2,C=p*3):a==="RGB"?(T=0,$=p,O=p*2):a==="RBG"&&(T=0,O=p,$=p*2),t=n.createImageData(o,i);for(let M=0;M<i*o;g+=h,y+=h,w+=h,I+=h,M++)t.data[g]=(r.data[T++]-d[0])*l[0],t.data[y]=(r.data[$++]-d[1])*l[1],t.data[w]=(r.data[O++]-d[2])*l[2],t.data[I]=C===-1?255:(r.data[C++]-d[3])*l[3]}else throw new Error("Can not access image data");return t}});var ts,dl,cl,fl,pl,hl=D(()=>{Si();ts=(r,e)=>{if(r===void 0)throw new Error("Image buffer must be defined");if(e.height===void 0||e.width===void 0)throw new Error("Image height and width must be defined");if(e.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:n,width:t}=e,o=e.norm??{mean:255,bias:0},i,s;typeof o.mean=="number"?i=[o.mean,o.mean,o.mean,o.mean]:i=[o.mean[0],o.mean[1],o.mean[2],o.mean[3]??255],typeof o.bias=="number"?s=[o.bias,o.bias,o.bias,o.bias]:s=[o.bias[0],o.bias[1],o.bias[2],o.bias[3]??0];let a=e.format!==void 0?e.format:"RGBA",u=e.tensorFormat!==void 0&&e.tensorFormat!==void 0?e.tensorFormat:"RGB",l=n*t,d=u==="RGBA"?new Float32Array(l*4):new Float32Array(l*3),p=4,h=0,g=1,y=2,w=3,I=0,T=l,$=l*2,O=-1;a==="RGB"&&(p=3,h=0,g=1,y=2,w=-1),u==="RGBA"?O=l*3:u==="RBG"?(I=0,$=l,T=l*2):u==="BGR"&&($=0,T=l,I=l*2);for(let M=0;M<l;M++,h+=p,y+=p,g+=p,w+=p)d[I++]=(r[h]+s[0])/i[0],d[T++]=(r[g]+s[1])/i[1],d[$++]=(r[y]+s[2])/i[2],O!==-1&&w!==-1&&(d[O++]=(r[w]+s[3])/i[3]);return u==="RGBA"?new Rt("float32",d,[1,4,n,t]):new Rt("float32",d,[1,3,n,t])},dl=async(r,e)=>{let n=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,t=typeof ImageData<"u"&&r instanceof ImageData,o=typeof ImageBitmap<"u"&&r instanceof ImageBitmap,i=typeof r=="string",s,a=e??{},u=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},l=d=>d instanceof HTMLCanvasElement||d instanceof OffscreenCanvas?d.getContext("2d"):null;if(n){let d=u();d.width=r.width,d.height=r.height;let p=l(d);if(p!=null){let h=r.height,g=r.width;if(e!==void 0&&e.resizedHeight!==void 0&&e.resizedWidth!==void 0&&(h=e.resizedHeight,g=e.resizedWidth),e!==void 0){if(a=e,e.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");a.tensorFormat="RGBA",a.height=h,a.width=g}else a.tensorFormat="RGBA",a.height=h,a.width=g;p.drawImage(r,0,0),s=p.getImageData(0,0,g,h).data}else throw new Error("Can not access image data")}else if(t){let d,p;if(e!==void 0&&e.resizedWidth!==void 0&&e.resizedHeight!==void 0?(d=e.resizedHeight,p=e.resizedWidth):(d=r.height,p=r.width),e!==void 0&&(a=e),a.format="RGBA",a.height=d,a.width=p,e!==void 0){let h=u();h.width=p,h.height=d;let g=l(h);if(g!=null)g.putImageData(r,0,0),s=g.getImageData(0,0,p,d).data;else throw new Error("Can not access image data")}else s=r.data}else if(o){if(e===void 0)throw new Error("Please provide image config with format for Imagebitmap");let d=u();d.width=r.width,d.height=r.height;let p=l(d);if(p!=null){let h=r.height,g=r.width;return p.drawImage(r,0,0,g,h),s=p.getImageData(0,0,g,h).data,a.height=h,a.width=g,ts(s,a)}else throw new Error("Can not access image data")}else{if(i)return new Promise((d,p)=>{let h=u(),g=l(h);if(!r||!g)return p();let y=new Image;y.crossOrigin="Anonymous",y.src=r,y.onload=()=>{h.width=y.width,h.height=y.height,g.drawImage(y,0,0,h.width,h.height);let w=g.getImageData(0,0,h.width,h.height);a.height=h.height,a.width=h.width,d(ts(w.data,a))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(s!==void 0)return ts(s,a);throw new Error("Input data provided is not supported - aborted tensor creation")},cl=(r,e)=>{let{width:n,height:t,download:o,dispose:i}=e,s=[1,t,n,4];return new Rt({location:"texture",type:"float32",texture:r,dims:s,download:o,dispose:i})},fl=(r,e)=>{let{dataType:n,dims:t,download:o,dispose:i}=e;return new Rt({location:"gpu-buffer",type:n??"float32",gpuBuffer:r,dims:t,download:o,dispose:i})},pl=(r,e,n)=>new Rt({location:"cpu-pinned",type:r,data:e,dims:n??[e.length]})});var wo,Ii,ml,gl,bl=D(()=>{wo=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["float16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),Ii=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),ml=!1,gl=()=>{if(!ml){ml=!0;let r=typeof BigInt64Array<"u"&&typeof BigInt64Array.from=="function",e=typeof BigUint64Array<"u"&&typeof BigUint64Array.from=="function";r&&(wo.set("int64",BigInt64Array),Ii.set(BigInt64Array,"int64")),e&&(wo.set("uint64",BigUint64Array),Ii.set(BigUint64Array,"uint64"))}}});var yl,vl,wl=D(()=>{Si();yl=r=>{let e=1;for(let n=0;n<r.length;n++){let t=r[n];if(typeof t!="number"||!Number.isSafeInteger(t))throw new TypeError(`dims[${n}] must be an integer, got: ${t}`);if(t<0)throw new RangeError(`dims[${n}] must be a non-negative integer, got: ${t}`);e*=t}return e},vl=(r,e)=>{switch(r.location){case"cpu":return new Rt(r.type,r.data,e);case"cpu-pinned":return new Rt({location:"cpu-pinned",data:r.data,type:r.type,dims:e});case"texture":return new Rt({location:"texture",texture:r.texture,type:r.type,dims:e});case"gpu-buffer":return new Rt({location:"gpu-buffer",gpuBuffer:r.gpuBuffer,type:r.type,dims:e});default:throw new Error(`tensorReshape: tensor location ${r.location} is not supported`)}}});var Rt,Si=D(()=>{ll();hl();bl();wl();Rt=class{constructor(e,n,t){gl();let o,i;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,o=e.type,i=e.dims,e.location){case"cpu-pinned":{let a=wo.get(o);if(!a)throw new TypeError(`unsupported type "${o}" to create tensor from pinned buffer`);if(!(e.data instanceof a))throw new TypeError(`buffer should be of type ${a.name}`);this.cpuData=e.data;break}case"texture":{if(o!=="float32")throw new TypeError(`unsupported type "${o}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(o!=="float32"&&o!=="float16"&&o!=="int32"&&o!=="int64"&&o!=="uint32"&&o!=="bool")throw new TypeError(`unsupported type "${o}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let a,u;if(typeof e=="string")if(o=e,u=t,e==="string"){if(!Array.isArray(n))throw new TypeError("A string tensor's data must be a string array.");a=n}else{let l=wo.get(e);if(l===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(n)){if(e==="float16")throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");e==="uint64"||e==="int64"?a=l.from(n,BigInt):a=l.from(n)}else if(n instanceof l)a=n;else throw new TypeError(`A ${o} tensor's data must be type of ${l}`)}else if(u=n,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let l=typeof e[0];if(l==="string")o="string",a=e;else if(l==="boolean")o="bool",a=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${l}.`)}else{let l=Ii.get(e.constructor);if(l===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);o=l,a=e}if(u===void 0)u=[a.length];else if(!Array.isArray(u))throw new TypeError("A tensor's dims must be a number array");i=u,this.cpuData=a,this.dataLocation="cpu"}let s=yl(i);if(this.cpuData&&s!==this.cpuData.length)throw new Error(`Tensor's size(${s}) does not match data length(${this.cpuData.length}).`);this.type=o,this.dims=i,this.size=s}static async fromImage(e,n){return dl(e,n)}static fromTexture(e,n){return cl(e,n)}static fromGpuBuffer(e,n){return fl(e,n)}static fromPinnedBuffer(e,n,t){return pl(e,n,t)}toDataURL(e){return sl(this,e)}toImageData(e){return ul(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let n=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=n,e&&this.disposer&&(this.disposer(),this.disposer=void 0),n}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return vl(this,e)}}});var wt,Ai=D(()=>{Si();wt=Rt});var xo,xl,Ft,Vt,rs=D(()=>{es();xo=(r,e)=>{un.wasm.trace&&console.timeStamp(`${r}::ORT::${e}`)},xl=(r,e)=>{let n=new Error().stack?.split(/\r\n|\r|\n/g)||[],t=!1;for(let o=0;o<n.length;o++){if(t&&!n[o].includes("TRACE_FUNC")){let i=`FUNC_${r}::${n[o].trim().split(" ")[1]}`;e&&(i+=`::${e}`),xo("CPU",i);return}n[o].includes("TRACE_FUNC")&&(t=!0)}},Ft=r=>{un.wasm.trace&&xl("BEGIN",r)},Vt=r=>{un.wasm.trace&&xl("END",r)}});var Oi,Tl=D(()=>{_i();Ai();rs();Oi=class r{constructor(e){this.handler=e}async run(e,n,t){Ft();let o={},i={};if(typeof e!="object"||e===null||e instanceof wt||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let s=!0;if(typeof n=="object"){if(n===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(n instanceof wt)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(n)){if(n.length===0)throw new TypeError("'fetches' cannot be an empty array.");s=!1;for(let l of n){if(typeof l!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(l)===-1)throw new RangeError(`'fetches' contains invalid output name: ${l}.`);o[l]=null}if(typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else{let l=!1,d=Object.getOwnPropertyNames(n);for(let p of this.outputNames)if(d.indexOf(p)!==-1){let h=n[p];(h===null||h instanceof wt)&&(l=!0,s=!1,o[p]=h)}if(l){if(typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else i=n}}else if(typeof n<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let l of this.inputNames)if(typeof e[l]>"u")throw new Error(`input '${l}' is missing in 'feeds'.`);if(s)for(let l of this.outputNames)o[l]=null;let a=await this.handler.run(e,o,i),u={};for(let l in a)if(Object.hasOwnProperty.call(a,l)){let d=a[l];d instanceof wt?u[l]=d:u[l]=new wt(d.type,d.data,d.dims)}return Vt(),u}async release(){return this.handler.dispose()}static async create(e,n,t,o){Ft();let i,s={};if(typeof e=="string"){if(i=e,typeof n=="object"&&n!==null)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof Uint8Array){if(i=e,typeof n=="object"&&n!==null)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&e instanceof SharedArrayBuffer){let p=e,h=0,g=e.byteLength;if(typeof n=="object"&&n!==null)s=n;else if(typeof n=="number"){if(h=n,!Number.isSafeInteger(h))throw new RangeError("'byteOffset' must be an integer.");if(h<0||h>=p.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${p.byteLength}).`);if(g=e.byteLength-h,typeof t=="number"){if(g=t,!Number.isSafeInteger(g))throw new RangeError("'byteLength' must be an integer.");if(g<=0||h+g>p.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${p.byteLength-h}].`);if(typeof o=="object"&&o!==null)s=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else if(typeof t<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof n<"u")throw new TypeError("'options' must be an object.");i=new Uint8Array(p,h,g)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let u=(s.executionProviders||[]).map(p=>typeof p=="string"?p:p.name),d=await(await $i(u)).createInferenceSessionHandler(i,s);return Vt(),new r(d)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}});var $l,_l=D(()=>{Tl();$l=Oi});var Sl=D(()=>{});var jy,Ei,Il=D(()=>{_i();Ai();jy="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.",Ei=class r{constructor(e,n,t){this.handler=e,this.hasOptimizerModel=n,this.hasEvalModel=t}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(e,n){let t=e.evalModel||"",o=e.optimizerModel||"",i=n||{},a=(i.executionProviders||[]).map(l=>typeof l=="string"?l:l.name),u=await $i(a);if(u.createTrainingSessionHandler){let l=await u.createTrainingSessionHandler(e.checkpointState,e.trainModel,t,o,i);return new r(l,!!e.optimizerModel,!!e.evalModel)}else throw new Error(jy)}typeNarrowingForRunStep(e,n,t,o,i){let s={},a={};if(typeof t!="object"||t===null||t instanceof wt||Array.isArray(t))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let u=!0;if(typeof o=="object"){if(o===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(o instanceof wt)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(o)){if(o.length===0)throw new TypeError("'fetches' cannot be an empty array.");u=!1;for(let l of o){if(typeof l!="string")throw new TypeError("'fetches' must be a string array or an object.");if(n.indexOf(l)===-1)throw new RangeError(`'fetches' contains invalid output name: ${l}.`);s[l]=null}if(typeof i=="object"&&i!==null)a=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else{let l=!1,d=Object.getOwnPropertyNames(o);for(let p of n)if(d.indexOf(p)!==-1){let h=o[p];(h===null||h instanceof wt)&&(l=!0,u=!1,s[p]=h)}if(l){if(typeof i=="object"&&i!==null)a=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else a=o}}else if(typeof o<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let l of e)if(typeof t[l]>"u")throw new Error(`input '${l}' is missing in 'feeds'.`);if(u)for(let l of n)s[l]=null;return[s,a]}convertHandlerReturnTypeToMapOfTensors(e){let n={};for(let t in e)if(Object.hasOwnProperty.call(e,t)){let o=e[t];o instanceof wt?n[t]=o:n[t]=new wt(o.type,o.data,o.dims)}return n}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(e,n,t){let[o,i]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,e,n,t),s=await this.handler.runTrainStep(e,o,i);return this.convertHandlerReturnTypeToMapOfTensors(s)}async runOptimizerStep(e){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(e||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(e,n,t){if(this.hasEvalModel){let[o,i]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,e,n,t),s=await this.handler.runEvalStep(e,o,i);return this.convertHandlerReturnTypeToMapOfTensors(s)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(e=!0){return this.handler.getParametersSize(e)}async loadParametersBuffer(e,n=!0){let t=await this.getParametersSize(n);if(e.length!==4*t)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(e,n)}async getContiguousParameters(e=!0){return this.handler.getContiguousParameters(e)}async release(){return this.handler.dispose()}}});var Al,Ol=D(()=>{Il();Al=Ei});var ns={};Hr(ns,{InferenceSession:()=>$l,TRACE:()=>xo,TRACE_FUNC_BEGIN:()=>Ft,TRACE_FUNC_END:()=>Vt,Tensor:()=>wt,TrainingSession:()=>Al,env:()=>ye,registerBackend:()=>Br});var Pt=D(()=>{rl();al();_l();Ai();rs();Sl();Ol()});function qr(r,e,n,t){if(e===void 0)return Yy(r);if(n===void 0)Ci(r,e,1);else if(typeof n=="number"&&t===void 0)Ci(r,e,n);else if(typeof n=="string"&&t===void 0)Ci(r,n,1,e);else if(typeof n=="string"&&typeof t=="number")Ci(r,n,t,e);else throw new TypeError("input is valid")}function Yy(r){return{verbose:qr.verbose.bind(null,r),info:qr.info.bind(null,r),warning:qr.warning.bind(null,r),error:qr.error.bind(null,r),fatal:qr.fatal.bind(null,r)}}function Ci(r,e,n,t){let o=To[t||""]||To[""];Cl[r]<Cl[o.minimalSeverity]||(o.logDateTime&&(e=`${new Date().toISOString()}|${e}`),o.logSourceLocation,Ky[o.provider].log(r,e,t))}var os,is,Cl,Ky,Pl,To,He,ki,Di,Ri,Pi,Zt=D(()=>{"use strict";os=class{log(e,n,t){}},is=class{log(e,n,t){console.log(`${this.color(e)} ${t?"\x1B[35m"+t+"\x1B[0m ":""}${n}`)}color(e){switch(e){case"verbose":return"\x1B[34;40mv\x1B[0m";case"info":return"\x1B[32mi\x1B[0m";case"warning":return"\x1B[30;43mw\x1B[0m";case"error":return"\x1B[31;40me\x1B[0m";case"fatal":return"\x1B[101mf\x1B[0m";default:throw new Error(`unsupported severity: ${e}`)}}},Cl={verbose:1e3,info:2e3,warning:4e3,error:5e3,fatal:6e3},Ky={none:new os,console:new is},Pl={provider:"console",minimalSeverity:"warning",logDateTime:!0,logSourceLocation:!1},To={"":Pl};(u=>{function r(l,d){u("verbose",l,d)}u.verbose=r;function e(l,d){u("info",l,d)}u.info=e;function n(l,d){u("warning",l,d)}u.warning=n;function t(l,d){u("error",l,d)}u.error=t;function o(l,d){u("fatal",l,d)}u.fatal=o;function i(l){To={},s("",l||{})}u.reset=i;function s(l,d){if(l==="*")i(d);else{let p=To[l]||Pl;To[l]={provider:d.provider||p.provider,minimalSeverity:d.minimalSeverity||p.minimalSeverity,logDateTime:d.logDateTime===void 0?p.logDateTime:d.logDateTime,logSourceLocation:d.logSourceLocation===void 0?p.logSourceLocation:d.logSourceLocation}}}u.set=s;function a(l){let d={};l.logLevel&&(d.minimalSeverity=l.logLevel),s("",d)}u.setWithEnv=a})(qr||={});He=qr,ki=class{constructor(e,n,t,o,i,s){this.category=e;this.name=n;this.startTime=t;this.endCallback=o;this.timer=i;this.ctx=s}async end(){return this.endCallback(this)}async checkTimer(){if(this.ctx===void 0||this.timer===void 0)throw new Error("No webgl timer found");return this.ctx.endTimer(),this.ctx.waitForQueryAndGetTime(this.timer)}},Di=class{constructor(e,n,t,o){this.category=e;this.name=n;this.startTime=t;this.endTime=o}},Ri=class{constructor(e,n,t){this._started=!1;this._flushPointer=0;this._started=!1,this._maxNumberEvents=e===void 0?1e4:e,this._flushBatchSize=n===void 0?10:n,this._flushIntervalInMilliseconds=t===void 0?5e3:t}static create(e){return e===void 0?new this:new this(e.maxNumberEvents,e.flushBatchSize,e.flushIntervalInMilliseconds)}start(){this._started=!0,this._timingEvents=[],this._flushTime=Pi(),this._flushPointer=0}stop(){for(this._started=!1;this._flushPointer<this._timingEvents.length;this._flushPointer++)this.logOneEvent(this._timingEvents[this._flushPointer])}event(e,n,t,o){let i=this._started?this.begin(e,n,o):void 0,s=!1,a=t();if(a&&typeof a.then=="function")return s=!0,new Promise((u,l)=>{a.then(async d=>{i&&await i.end(),u(d)},async d=>{i&&await i.end(),l(d)})});if(!s&&i){let u=i.end();if(u&&typeof u.then=="function")return new Promise((l,d)=>{u.then(()=>{l(a)},p=>{d(p)})})}return a}begin(e,n,t){if(!this._started)throw new Error("profiler is not started yet");if(t===void 0){let o=Pi();return this.flush(o),new ki(e,n,o,i=>this.endSync(i))}else{let o=t.beginTimer();return new ki(e,n,0,async i=>this.end(i),o,t)}}async end(e){let n=await e.checkTimer();this._timingEvents.length<this._maxNumberEvents&&(this._timingEvents.push(new Di(e.category,e.name,e.startTime,n)),this.flush(n))}endSync(e){let n=Pi();this._timingEvents.length<this._maxNumberEvents&&(this._timingEvents.push(new Di(e.category,e.name,e.startTime,n)),this.flush(n))}logOneEvent(e){He.verbose(`Profiler.${e.category}`,`${(e.endTime-e.startTime).toFixed(2)}ms on event '${e.name}' at ${e.endTime.toFixed(2)}`)}flush(e){if(this._timingEvents.length-this._flushPointer>=this._flushBatchSize||e-this._flushTime>=this._flushIntervalInMilliseconds){for(let n=this._flushPointer;this._flushPointer<n+this._flushBatchSize&&this._flushPointer<this._timingEvents.length;this._flushPointer++)this.logOneEvent(this._timingEvents[this._flushPointer]);this._flushTime=Pi()}}get started(){return this._started}},Pi=typeof performance<"u"&&performance.now?()=>performance.now():Date.now});function kl(r,e,n){for(let t of n){let o=t[0],i=t[1],s=t[2],a=t[3],u=t[4];if(r.opType===o){for(let l of e)if((l.domain===i||l.domain==="ai.onnx"&&i==="")&&Xy(l.version,s))return{opImpl:a,opInit:u}}}throw new TypeError(`cannot resolve operator '${r.opType}' with opsets: ${e.map(t=>`${t.domain||"ai.onnx"} v${t.version}`).join(", ")}`)}function Xy(r,e){if(e.endsWith("+")){let n=Number.parseInt(e.substring(0,e.length-1),10);return!isNaN(n)&&n<=r}else if(e.split("-").length===2){let n=e.split("-"),t=Number.parseInt(n[0],10),o=Number.parseInt(n[1],10);return!isNaN(t)&&!isNaN(o)&&t<=r&&r<=o}else return Number.parseInt(e,10)===r}var Dl=D(()=>{"use strict"});var Rl=Xe(as=>{"use strict";as.__esModule=!0;var Zy=function(){function r(e){if(!e)throw new TypeError("Invalid argument; `value` has no value.");this.value=r.EMPTY,e&&r.isGuid(e)&&(this.value=e)}return r.isGuid=function(e){var n=e.toString();return e&&(e instanceof r||r.validator.test(n))},r.create=function(){return new r([r.gen(2),r.gen(1),r.gen(1),r.gen(1),r.gen(3)].join("-"))},r.createEmpty=function(){return new r("emptyguid")},r.parse=function(e){return new r(e)},r.raw=function(){return[r.gen(2),r.gen(1),r.gen(1),r.gen(1),r.gen(3)].join("-")},r.gen=function(e){for(var n="",t=0;t<e;t++)n+=((1+Math.random())*65536|0).toString(16).substring(1);return n},r.prototype.equals=function(e){return r.isGuid(e)&&this.value===e.toString()},r.prototype.isEmpty=function(){return this.value===r.EMPTY},r.prototype.toString=function(){return this.value},r.prototype.toJSON=function(){return{value:this.value}},r.validator=new RegExp("^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$","i"),r.EMPTY="00000000-0000-0000-0000-000000000000",r}();as.Guid=Zy});function Ze(r,e,n){this.low=r|0,this.high=e|0,this.unsigned=!!n}function kt(r){return(r&&r.__isLong__)===!0}function Bl(r){var e=Math.clz32(r&-r);return r?31-e:e}function ln(r,e){var n,t,o;return e?(r>>>=0,(o=0<=r&&r<256)&&(t=Ml[r],t)?t:(n=Ge(r,0,!0),o&&(Ml[r]=n),n)):(r|=0,(o=-128<=r&&r<128)&&(t=Ll[r],t)?t:(n=Ge(r,r<0?-1:0,!1),o&&(Ll[r]=n),n))}function Qt(r,e){if(isNaN(r))return e?Lr:cr;if(e){if(r<0)return Lr;if(r>=Vl)return Wl}else{if(r<=-Nl)return Ut;if(r+1>=Nl)return Gl}return r<0?Qt(-r,e).neg():Ge(r%Fn|0,r/Fn|0,e)}function Ge(r,e,n){return new Ze(r,e,n)}function us(r,e,n){if(r.length===0)throw Error("empty string");if(typeof e=="number"?(n=e,e=!1):e=!!e,r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return e?Lr:cr;if(n=n||10,n<2||36<n)throw RangeError("radix");var t;if((t=r.indexOf("-"))>0)throw Error("interior hyphen");if(t===0)return us(r.substring(1),e,n).neg();for(var o=Qt(Bi(n,8)),i=cr,s=0;s<r.length;s+=8){var a=Math.min(8,r.length-s),u=parseInt(r.substring(s,s+a),n);if(a<8){var l=Qt(Bi(n,a));i=i.mul(l).add(Qt(u))}else i=i.mul(o),i=i.add(Qt(u))}return i.unsigned=e,i}function fr(r,e){return typeof r=="number"?Qt(r,e):typeof r=="string"?us(r,e):Ge(r.low,r.high,typeof e=="boolean"?e:r.unsigned)}var Jt,Ll,Ml,Bi,zl,Jy,Fn,Vl,Nl,Fl,cr,Lr,Nn,Ul,ss,Gl,Wl,Ut,Y,Mr,ls=D(()=>{Jt=null;try{Jt=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}Ze.prototype.__isLong__;Object.defineProperty(Ze.prototype,"__isLong__",{value:!0});Ze.isLong=kt;Ll={},Ml={};Ze.fromInt=ln;Ze.fromNumber=Qt;Ze.fromBits=Ge;Bi=Math.pow;Ze.fromString=us;Ze.fromValue=fr;zl=65536,Jy=1<<24,Fn=zl*zl,Vl=Fn*Fn,Nl=Vl/2,Fl=ln(Jy),cr=ln(0);Ze.ZERO=cr;Lr=ln(0,!0);Ze.UZERO=Lr;Nn=ln(1);Ze.ONE=Nn;Ul=ln(1,!0);Ze.UONE=Ul;ss=ln(-1);Ze.NEG_ONE=ss;Gl=Ge(-1,2147483647,!1);Ze.MAX_VALUE=Gl;Wl=Ge(-1,-1,!0);Ze.MAX_UNSIGNED_VALUE=Wl;Ut=Ge(0,-2147483648,!1);Ze.MIN_VALUE=Ut;Y=Ze.prototype;Y.toInt=function(){return this.unsigned?this.low>>>0:this.low};Y.toNumber=function(){return this.unsigned?(this.high>>>0)*Fn+(this.low>>>0):this.high*Fn+(this.low>>>0)};Y.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Ut)){var n=Qt(e),t=this.div(n),o=t.mul(n).sub(this);return t.toString(e)+o.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var i=Qt(Bi(e,6),this.unsigned),s=this,a="";;){var u=s.div(i),l=s.sub(u.mul(i)).toInt()>>>0,d=l.toString(e);if(s=u,s.isZero())return d+a;for(;d.length<6;)d="0"+d;a=""+d+a}};Y.getHighBits=function(){return this.high};Y.getHighBitsUnsigned=function(){return this.high>>>0};Y.getLowBits=function(){return this.low};Y.getLowBitsUnsigned=function(){return this.low>>>0};Y.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Ut)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,n=31;n>0&&!(e&1<<n);n--);return this.high!=0?n+33:n+1};Y.isZero=function(){return this.high===0&&this.low===0};Y.eqz=Y.isZero;Y.isNegative=function(){return!this.unsigned&&this.high<0};Y.isPositive=function(){return this.unsigned||this.high>=0};Y.isOdd=function(){return(this.low&1)===1};Y.isEven=function(){return(this.low&1)===0};Y.equals=function(e){return kt(e)||(e=fr(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};Y.eq=Y.equals;Y.notEquals=function(e){return!this.eq(e)};Y.neq=Y.notEquals;Y.ne=Y.notEquals;Y.lessThan=function(e){return this.comp(e)<0};Y.lt=Y.lessThan;Y.lessThanOrEqual=function(e){return this.comp(e)<=0};Y.lte=Y.lessThanOrEqual;Y.le=Y.lessThanOrEqual;Y.greaterThan=function(e){return this.comp(e)>0};Y.gt=Y.greaterThan;Y.greaterThanOrEqual=function(e){return this.comp(e)>=0};Y.gte=Y.greaterThanOrEqual;Y.ge=Y.greaterThanOrEqual;Y.compare=function(e){if(kt(e)||(e=fr(e)),this.eq(e))return 0;var n=this.isNegative(),t=e.isNegative();return n&&!t?-1:!n&&t?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};Y.comp=Y.compare;Y.negate=function(){return!this.unsigned&&this.eq(Ut)?Ut:this.not().add(Nn)};Y.neg=Y.negate;Y.add=function(e){kt(e)||(e=fr(e));var n=this.high>>>16,t=this.high&65535,o=this.low>>>16,i=this.low&65535,s=e.high>>>16,a=e.high&65535,u=e.low>>>16,l=e.low&65535,d=0,p=0,h=0,g=0;return g+=i+l,h+=g>>>16,g&=65535,h+=o+u,p+=h>>>16,h&=65535,p+=t+a,d+=p>>>16,p&=65535,d+=n+s,d&=65535,Ge(h<<16|g,d<<16|p,this.unsigned)};Y.subtract=function(e){return kt(e)||(e=fr(e)),this.add(e.neg())};Y.sub=Y.subtract;Y.multiply=function(e){if(this.isZero())return this;if(kt(e)||(e=fr(e)),Jt){var n=Jt.mul(this.low,this.high,e.low,e.high);return Ge(n,Jt.get_high(),this.unsigned)}if(e.isZero())return this.unsigned?Lr:cr;if(this.eq(Ut))return e.isOdd()?Ut:cr;if(e.eq(Ut))return this.isOdd()?Ut:cr;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(Fl)&&e.lt(Fl))return Qt(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,o=this.high&65535,i=this.low>>>16,s=this.low&65535,a=e.high>>>16,u=e.high&65535,l=e.low>>>16,d=e.low&65535,p=0,h=0,g=0,y=0;return y+=s*d,g+=y>>>16,y&=65535,g+=i*d,h+=g>>>16,g&=65535,g+=s*l,h+=g>>>16,g&=65535,h+=o*d,p+=h>>>16,h&=65535,h+=i*l,p+=h>>>16,h&=65535,h+=s*u,p+=h>>>16,h&=65535,p+=t*d+o*l+i*u+s*a,p&=65535,Ge(g<<16|y,p<<16|h,this.unsigned)};Y.mul=Y.multiply;Y.divide=function(e){if(kt(e)||(e=fr(e)),e.isZero())throw Error("division by zero");if(Jt){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var n=(this.unsigned?Jt.div_u:Jt.div_s)(this.low,this.high,e.low,e.high);return Ge(n,Jt.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Lr:cr;var t,o,i;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return Lr;if(e.gt(this.shru(1)))return Ul;i=Lr}else{if(this.eq(Ut)){if(e.eq(Nn)||e.eq(ss))return Ut;if(e.eq(Ut))return Nn;var s=this.shr(1);return t=s.div(e).shl(1),t.eq(cr)?e.isNegative()?Nn:ss:(o=this.sub(e.mul(t)),i=t.add(o.div(e)),i)}else if(e.eq(Ut))return this.unsigned?Lr:cr;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();i=cr}for(o=this;o.gte(e);){t=Math.max(1,Math.floor(o.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(t)/Math.LN2),u=a<=48?1:Bi(2,a-48),l=Qt(t),d=l.mul(e);d.isNegative()||d.gt(o);)t-=u,l=Qt(t,this.unsigned),d=l.mul(e);l.isZero()&&(l=Nn),i=i.add(l),o=o.sub(d)}return i};Y.div=Y.divide;Y.modulo=function(e){if(kt(e)||(e=fr(e)),Jt){var n=(this.unsigned?Jt.rem_u:Jt.rem_s)(this.low,this.high,e.low,e.high);return Ge(n,Jt.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};Y.mod=Y.modulo;Y.rem=Y.modulo;Y.not=function(){return Ge(~this.low,~this.high,this.unsigned)};Y.countLeadingZeros=function(){return this.high?Math.clz32(this.high):Math.clz32(this.low)+32};Y.clz=Y.countLeadingZeros;Y.countTrailingZeros=function(){return this.low?Bl(this.low):Bl(this.high)+32};Y.ctz=Y.countTrailingZeros;Y.and=function(e){return kt(e)||(e=fr(e)),Ge(this.low&e.low,this.high&e.high,this.unsigned)};Y.or=function(e){return kt(e)||(e=fr(e)),Ge(this.low|e.low,this.high|e.high,this.unsigned)};Y.xor=function(e){return kt(e)||(e=fr(e)),Ge(this.low^e.low,this.high^e.high,this.unsigned)};Y.shiftLeft=function(e){return kt(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Ge(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):Ge(0,this.low<<e-32,this.unsigned)};Y.shl=Y.shiftLeft;Y.shiftRight=function(e){return kt(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Ge(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):Ge(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};Y.shr=Y.shiftRight;Y.shiftRightUnsigned=function(e){return kt(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Ge(this.low>>>e|this.high<<32-e,this.high>>>e,this.unsigned):e===32?Ge(this.high,0,this.unsigned):Ge(this.high>>>e-32,0,this.unsigned)};Y.shru=Y.shiftRightUnsigned;Y.shr_u=Y.shiftRightUnsigned;Y.rotateLeft=function(e){var n;return kt(e)&&(e=e.toInt()),(e&=63)===0?this:e===32?Ge(this.high,this.low,this.unsigned):e<32?(n=32-e,Ge(this.low<<e|this.high>>>n,this.high<<e|this.low>>>n,this.unsigned)):(e-=32,n=32-e,Ge(this.high<<e|this.low>>>n,this.low<<e|this.high>>>n,this.unsigned))};Y.rotl=Y.rotateLeft;Y.rotateRight=function(e){var n;return kt(e)&&(e=e.toInt()),(e&=63)===0?this:e===32?Ge(this.high,this.low,this.unsigned):e<32?(n=32-e,Ge(this.high<<n|this.low>>>e,this.low<<n|this.high>>>e,this.unsigned)):(e-=32,n=32-e,Ge(this.low<<n|this.high>>>e,this.high<<n|this.low>>>e,this.unsigned))};Y.rotr=Y.rotateRight;Y.toSigned=function(){return this.unsigned?Ge(this.low,this.high,!1):this};Y.toUnsigned=function(){return this.unsigned?this:Ge(this.low,this.high,!0)};Y.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};Y.toBytesLE=function(){var e=this.high,n=this.low;return[n&255,n>>>8&255,n>>>16&255,n>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};Y.toBytesBE=function(){var e=this.high,n=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,n>>>24,n>>>16&255,n>>>8&255,n&255]};Ze.fromBytes=function(e,n,t){return t?Ze.fromBytesLE(e,n):Ze.fromBytesBE(e,n)};Ze.fromBytesLE=function(e,n){return new Ze(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,n)};Ze.fromBytesBE=function(e,n){return new Ze(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],n)};Mr=Ze});var k,Li=D(()=>{k={};k.Offset;k.Table;k.SIZEOF_SHORT=2;k.SIZEOF_INT=4;k.FILE_IDENTIFIER_LENGTH=4;k.SIZE_PREFIX_LENGTH=4;k.Encoding={UTF8_BYTES:1,UTF16_STRING:2};k.int32=new Int32Array(2);k.float32=new Float32Array(k.int32.buffer);k.float64=new Float64Array(k.int32.buffer);k.isLittleEndian=new Uint16Array(new Uint8Array([1,0]).buffer)[0]===1;k.Long=function(r,e){this.low=r|0,this.high=e|0};k.Long.create=function(r,e){return r==0&&e==0?k.Long.ZERO:new k.Long(r,e)};k.Long.prototype.toFloat64=function(){return(this.low>>>0)+this.high*4294967296};k.Long.prototype.equals=function(r){return this.low==r.low&&this.high==r.high};k.Long.ZERO=new k.Long(0,0);k.Builder=function(r){if(r)var e=r;else var e=1024;this.bb=k.ByteBuffer.allocate(e),this.space=e,this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1};k.Builder.prototype.clear=function(){this.bb.clear(),this.space=this.bb.capacity(),this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1};k.Builder.prototype.forceDefaults=function(r){this.force_defaults=r};k.Builder.prototype.dataBuffer=function(){return this.bb};k.Builder.prototype.asUint8Array=function(){return this.bb.bytes().subarray(this.bb.position(),this.bb.position()+this.offset())};k.Builder.prototype.prep=function(r,e){r>this.minalign&&(this.minalign=r);for(var n=~(this.bb.capacity()-this.space+e)+1&r-1;this.space<n+r+e;){var t=this.bb.capacity();this.bb=k.Builder.growByteBuffer(this.bb),this.space+=this.bb.capacity()-t}this.pad(n)};k.Builder.prototype.pad=function(r){for(var e=0;e<r;e++)this.bb.writeInt8(--this.space,0)};k.Builder.prototype.writeInt8=function(r){this.bb.writeInt8(this.space-=1,r)};k.Builder.prototype.writeInt16=function(r){this.bb.writeInt16(this.space-=2,r)};k.Builder.prototype.writeInt32=function(r){this.bb.writeInt32(this.space-=4,r)};k.Builder.prototype.writeInt64=function(r){this.bb.writeInt64(this.space-=8,r)};k.Builder.prototype.writeFloat32=function(r){this.bb.writeFloat32(this.space-=4,r)};k.Builder.prototype.writeFloat64=function(r){this.bb.writeFloat64(this.space-=8,r)};k.Builder.prototype.addInt8=function(r){this.prep(1,0),this.writeInt8(r)};k.Builder.prototype.addInt16=function(r){this.prep(2,0),this.writeInt16(r)};k.Builder.prototype.addInt32=function(r){this.prep(4,0),this.writeInt32(r)};k.Builder.prototype.addInt64=function(r){this.prep(8,0),this.writeInt64(r)};k.Builder.prototype.addFloat32=function(r){this.prep(4,0),this.writeFloat32(r)};k.Builder.prototype.addFloat64=function(r){this.prep(8,0),this.writeFloat64(r)};k.Builder.prototype.addFieldInt8=function(r,e,n){(this.force_defaults||e!=n)&&(this.addInt8(e),this.slot(r))};k.Builder.prototype.addFieldInt16=function(r,e,n){(this.force_defaults||e!=n)&&(this.addInt16(e),this.slot(r))};k.Builder.prototype.addFieldInt32=function(r,e,n){(this.force_defaults||e!=n)&&(this.addInt32(e),this.slot(r))};k.Builder.prototype.addFieldInt64=function(r,e,n){(this.force_defaults||!e.equals(n))&&(this.addInt64(e),this.slot(r))};k.Builder.prototype.addFieldFloat32=function(r,e,n){(this.force_defaults||e!=n)&&(this.addFloat32(e),this.slot(r))};k.Builder.prototype.addFieldFloat64=function(r,e,n){(this.force_defaults||e!=n)&&(this.addFloat64(e),this.slot(r))};k.Builder.prototype.addFieldOffset=function(r,e,n){(this.force_defaults||e!=n)&&(this.addOffset(e),this.slot(r))};k.Builder.prototype.addFieldStruct=function(r,e,n){e!=n&&(this.nested(e),this.slot(r))};k.Builder.prototype.nested=function(r){if(r!=this.offset())throw new Error("FlatBuffers: struct must be serialized inline.")};k.Builder.prototype.notNested=function(){if(this.isNested)throw new Error("FlatBuffers: object serialization must not be nested.")};k.Builder.prototype.slot=function(r){this.vtable[r]=this.offset()};k.Builder.prototype.offset=function(){return this.bb.capacity()-this.space};k.Builder.growByteBuffer=function(r){var e=r.capacity();if(e&3221225472)throw new Error("FlatBuffers: cannot grow buffer beyond 2 gigabytes.");var n=e<<1,t=k.ByteBuffer.allocate(n);return t.setPosition(n-e),t.bytes().set(r.bytes(),n-e),t};k.Builder.prototype.addOffset=function(r){this.prep(k.SIZEOF_INT,0),this.writeInt32(this.offset()-r+k.SIZEOF_INT)};k.Builder.prototype.startObject=function(r){this.notNested(),this.vtable==null&&(this.vtable=[]),this.vtable_in_use=r;for(var e=0;e<r;e++)this.vtable[e]=0;this.isNested=!0,this.object_start=this.offset()};k.Builder.prototype.endObject=function(){if(this.vtable==null||!this.isNested)throw new Error("FlatBuffers: endObject called without startObject");this.addInt32(0);for(var r=this.offset(),e=this.vtable_in_use-1;e>=0&&this.vtable[e]==0;e--);for(var n=e+1;e>=0;e--)this.addInt16(this.vtable[e]!=0?r-this.vtable[e]:0);var t=2;this.addInt16(r-this.object_start);var o=(n+t)*k.SIZEOF_SHORT;this.addInt16(o);var i=0,s=this.space;e:for(e=0;e<this.vtables.length;e++){var a=this.bb.capacity()-this.vtables[e];if(o==this.bb.readInt16(a)){for(var u=k.SIZEOF_SHORT;u<o;u+=k.SIZEOF_SHORT)if(this.bb.readInt16(s+u)!=this.bb.readInt16(a+u))continue e;i=this.vtables[e];break}}return i?(this.space=this.bb.capacity()-r,this.bb.writeInt32(this.space,i-r)):(this.vtables.push(this.offset()),this.bb.writeInt32(this.bb.capacity()-r,this.offset()-r)),this.isNested=!1,r};k.Builder.prototype.finish=function(r,e,n){var t=n?k.SIZE_PREFIX_LENGTH:0;if(e){var o=e;if(this.prep(this.minalign,k.SIZEOF_INT+k.FILE_IDENTIFIER_LENGTH+t),o.length!=k.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+k.FILE_IDENTIFIER_LENGTH);for(var i=k.FILE_IDENTIFIER_LENGTH-1;i>=0;i--)this.writeInt8(o.charCodeAt(i))}this.prep(this.minalign,k.SIZEOF_INT+t),this.addOffset(r),t&&this.addInt32(this.bb.capacity()-this.space),this.bb.setPosition(this.space)};k.Builder.prototype.finishSizePrefixed=function(r,e){this.finish(r,e,!0)};k.Builder.prototype.requiredField=function(r,e){var n=this.bb.capacity()-r,t=n-this.bb.readInt32(n),o=this.bb.readInt16(t+e)!=0;if(!o)throw new Error("FlatBuffers: field "+e+" must be set")};k.Builder.prototype.startVector=function(r,e,n){this.notNested(),this.vector_num_elems=e,this.prep(k.SIZEOF_INT,r*e),this.prep(n,r*e)};k.Builder.prototype.endVector=function(){return this.writeInt32(this.vector_num_elems),this.offset()};k.Builder.prototype.createString=function(r){if(r instanceof Uint8Array)var e=r;else for(var e=[],n=0;n<r.length;){var t,o=r.charCodeAt(n++);if(o<55296||o>=56320)t=o;else{var i=r.charCodeAt(n++);t=(o<<10)+i+(65536-56623104-56320)}t<128?e.push(t):(t<2048?e.push(t>>6&31|192):(t<65536?e.push(t>>12&15|224):e.push(t>>18&7|240,t>>12&63|128),e.push(t>>6&63|128)),e.push(t&63|128))}this.addInt8(0),this.startVector(1,e.length,1),this.bb.setPosition(this.space-=e.length);for(var n=0,s=this.space,a=this.bb.bytes();n<e.length;n++)a[s++]=e[n];return this.endVector()};k.Builder.prototype.createLong=function(r,e){return k.Long.create(r,e)};k.ByteBuffer=function(r){this.bytes_=r,this.position_=0};k.ByteBuffer.allocate=function(r){return new k.ByteBuffer(new Uint8Array(r))};k.ByteBuffer.prototype.clear=function(){this.position_=0};k.ByteBuffer.prototype.bytes=function(){return this.bytes_};k.ByteBuffer.prototype.position=function(){return this.position_};k.ByteBuffer.prototype.setPosition=function(r){this.position_=r};k.ByteBuffer.prototype.capacity=function(){return this.bytes_.length};k.ByteBuffer.prototype.readInt8=function(r){return this.readUint8(r)<<24>>24};k.ByteBuffer.prototype.readUint8=function(r){return this.bytes_[r]};k.ByteBuffer.prototype.readInt16=function(r){return this.readUint16(r)<<16>>16};k.ByteBuffer.prototype.readUint16=function(r){return this.bytes_[r]|this.bytes_[r+1]<<8};k.ByteBuffer.prototype.readInt32=function(r){return this.bytes_[r]|this.bytes_[r+1]<<8|this.bytes_[r+2]<<16|this.bytes_[r+3]<<24};k.ByteBuffer.prototype.readUint32=function(r){return this.readInt32(r)>>>0};k.ByteBuffer.prototype.readInt64=function(r){return new k.Long(this.readInt32(r),this.readInt32(r+4))};k.ByteBuffer.prototype.readUint64=function(r){return new k.Long(this.readUint32(r),this.readUint32(r+4))};k.ByteBuffer.prototype.readFloat32=function(r){return k.int32[0]=this.readInt32(r),k.float32[0]};k.ByteBuffer.prototype.readFloat64=function(r){return k.int32[k.isLittleEndian?0:1]=this.readInt32(r),k.int32[k.isLittleEndian?1:0]=this.readInt32(r+4),k.float64[0]};k.ByteBuffer.prototype.writeInt8=function(r,e){this.bytes_[r]=e};k.ByteBuffer.prototype.writeUint8=function(r,e){this.bytes_[r]=e};k.ByteBuffer.prototype.writeInt16=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8};k.ByteBuffer.prototype.writeUint16=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8};k.ByteBuffer.prototype.writeInt32=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8,this.bytes_[r+2]=e>>16,this.bytes_[r+3]=e>>24};k.ByteBuffer.prototype.writeUint32=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8,this.bytes_[r+2]=e>>16,this.bytes_[r+3]=e>>24};k.ByteBuffer.prototype.writeInt64=function(r,e){this.writeInt32(r,e.low),this.writeInt32(r+4,e.high)};k.ByteBuffer.prototype.writeUint64=function(r,e){this.writeUint32(r,e.low),this.writeUint32(r+4,e.high)};k.ByteBuffer.prototype.writeFloat32=function(r,e){k.float32[0]=e,this.writeInt32(r,k.int32[0])};k.ByteBuffer.prototype.writeFloat64=function(r,e){k.float64[0]=e,this.writeInt32(r,k.int32[k.isLittleEndian?0:1]),this.writeInt32(r+4,k.int32[k.isLittleEndian?1:0])};k.ByteBuffer.prototype.getBufferIdentifier=function(){if(this.bytes_.length<this.position_+k.SIZEOF_INT+k.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: ByteBuffer is too short to contain an identifier.");for(var r="",e=0;e<k.FILE_IDENTIFIER_LENGTH;e++)r+=String.fromCharCode(this.readInt8(this.position_+k.SIZEOF_INT+e));return r};k.ByteBuffer.prototype.__offset=function(r,e){var n=r-this.readInt32(r);return e<this.readInt16(n)?this.readInt16(n+e):0};k.ByteBuffer.prototype.__union=function(r,e){return r.bb_pos=e+this.readInt32(e),r.bb=this,r};k.ByteBuffer.prototype.__string=function(r,e){r+=this.readInt32(r);var n=this.readInt32(r),t="",o=0;if(r+=k.SIZEOF_INT,e===k.Encoding.UTF8_BYTES)return this.bytes_.subarray(r,r+n);for(;o<n;){var i,s=this.readUint8(r+o++);if(s<192)i=s;else{var a=this.readUint8(r+o++);if(s<224)i=(s&31)<<6|a&63;else{var u=this.readUint8(r+o++);if(s<240)i=(s&15)<<12|(a&63)<<6|u&63;else{var l=this.readUint8(r+o++);i=(s&7)<<18|(a&63)<<12|(u&63)<<6|l&63}}}i<65536?t+=String.fromCharCode(i):(i-=65536,t+=String.fromCharCode((i>>10)+55296,(i&1024-1)+56320))}return t};k.ByteBuffer.prototype.__indirect=function(r){return r+this.readInt32(r)};k.ByteBuffer.prototype.__vector=function(r){return r+this.readInt32(r)+k.SIZEOF_INT};k.ByteBuffer.prototype.__vector_len=function(r){return this.readInt32(r+this.readInt32(r))};k.ByteBuffer.prototype.__has_identifier=function(r){if(r.length!=k.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+k.FILE_IDENTIFIER_LENGTH);for(var e=0;e<k.FILE_IDENTIFIER_LENGTH;e++)if(r.charCodeAt(e)!=this.readInt8(this.position_+k.SIZEOF_INT+e))return!1;return!0};k.ByteBuffer.prototype.createLong=function(r,e){return k.Long.create(r,e)}});var ce,$o=D(()=>{"use strict";Li();(e=>{let r;(t=>{let n;(i=>{let o;(O=>(O[O.UNDEFINED=0]="UNDEFINED",O[O.FLOAT=1]="FLOAT",O[O.INT=2]="INT",O[O.STRING=3]="STRING",O[O.TENSOR=4]="TENSOR",O[O.GRAPH=5]="GRAPH",O[O.FLOATS=6]="FLOATS",O[O.INTS=7]="INTS",O[O.STRINGS=8]="STRINGS",O[O.TENSORS=9]="TENSORS",O[O.GRAPHS=10]="GRAPHS",O[O.SPARSE_TENSOR=11]="SPARSE_TENSOR",O[O.SPARSE_TENSORS=12]="SPARSE_TENSORS"))(o=i.AttributeType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{let o;(l=>(l[l.UNKNOWN=0]="UNKNOWN",l[l.VALUE=1]="VALUE",l[l.PARAM=2]="PARAM"))(o=i.DimensionValueType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{let o;(V=>(V[V.UNDEFINED=0]="UNDEFINED",V[V.FLOAT=1]="FLOAT",V[V.UINT8=2]="UINT8",V[V.INT8=3]="INT8",V[V.UINT16=4]="UINT16",V[V.INT16=5]="INT16",V[V.INT32=6]="INT32",V[V.INT64=7]="INT64",V[V.STRING=8]="STRING",V[V.BOOL=9]="BOOL",V[V.FLOAT16=10]="FLOAT16",V[V.DOUBLE=11]="DOUBLE",V[V.UINT32=12]="UINT32",V[V.UINT64=13]="UINT64",V[V.COMPLEX64=14]="COMPLEX64",V[V.COMPLEX128=15]="COMPLEX128",V[V.BFLOAT16=16]="BFLOAT16",V[V.FLOAT8E4M3FN=17]="FLOAT8E4M3FN",V[V.FLOAT8E4M3FNUZ=18]="FLOAT8E4M3FNUZ",V[V.FLOAT8E5M2=19]="FLOAT8E5M2",V[V.FLOAT8E5M2FNUZ=20]="FLOAT8E5M2FNUZ"))(o=i.TensorDataType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{let o;(u=>(u[u.Primitive=0]="Primitive",u[u.Fused=1]="Fused"))(o=i.NodeType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{let o;(d=>(d[d.NONE=0]="NONE",d[d.tensor_type=1]="tensor_type",d[d.sequence_type=2]="sequence_type",d[d.map_type=3]="map_type"))(o=i.TypeInfoValue||={})})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsShape(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsShape(a,u){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}dim(a,u){let l=this.bb.__offset(this.bb_pos,4);return l?(u||new e.experimental.fbs.Dimension).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}dimLength(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.__vector_len(this.bb_pos+a):0}static startShape(a){a.startObject(1)}static addDim(a,u){a.addFieldOffset(0,u,0)}static createDimVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startDimVector(a,u){a.startVector(4,u,4)}static endShape(a){return a.endObject()}static createShape(a,u){return o.startShape(a),o.addDim(a,u),o.endShape(a)}}i.Shape=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsDimension(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsDimension(a,u){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}value(a){let u=this.bb.__offset(this.bb_pos,4);return u?(a||new e.experimental.fbs.DimensionValue).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}denotation(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}static startDimension(a){a.startObject(2)}static addValue(a,u){a.addFieldOffset(0,u,0)}static addDenotation(a,u){a.addFieldOffset(1,u,0)}static endDimension(a){return a.endObject()}static createDimension(a,u,l){return o.startDimension(a),o.addValue(a,u),o.addDenotation(a,l),o.endDimension(a)}}i.Dimension=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsDimensionValue(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsDimensionValue(a,u){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}dimType(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt8(this.bb_pos+a):0}dimValue(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}dimParam(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.__string(this.bb_pos+u,a):null}static startDimensionValue(a){a.startObject(3)}static addDimType(a,u){a.addFieldInt8(0,u,0)}static addDimValue(a,u){a.addFieldInt64(1,u,a.createLong(0,0))}static addDimParam(a,u){a.addFieldOffset(2,u,0)}static endDimensionValue(a){return a.endObject()}static createDimensionValue(a,u,l,d){return o.startDimensionValue(a),o.addDimType(a,u),o.addDimValue(a,l),o.addDimParam(a,d),o.endDimensionValue(a)}}i.DimensionValue=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsTensorTypeAndShape(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsTensorTypeAndShape(a,u){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}elemType(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt32(this.bb_pos+a):0}shape(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.Shape).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startTensorTypeAndShape(a){a.startObject(2)}static addElemType(a,u){a.addFieldInt32(0,u,0)}static addShape(a,u){a.addFieldOffset(1,u,0)}static endTensorTypeAndShape(a){return a.endObject()}static createTensorTypeAndShape(a,u,l){return o.startTensorTypeAndShape(a),o.addElemType(a,u),o.addShape(a,l),o.endTensorTypeAndShape(a)}}i.TensorTypeAndShape=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsMapType(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsMapType(a,u){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}keyType(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt32(this.bb_pos+a):0}valueType(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startMapType(a){a.startObject(2)}static addKeyType(a,u){a.addFieldInt32(0,u,0)}static addValueType(a,u){a.addFieldOffset(1,u,0)}static endMapType(a){return a.endObject()}static createMapType(a,u,l){return o.startMapType(a),o.addKeyType(a,u),o.addValueType(a,l),o.endMapType(a)}}i.MapType=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsSequenceType(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSequenceType(a,u){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}elemType(a){let u=this.bb.__offset(this.bb_pos,4);return u?(a||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startSequenceType(a){a.startObject(1)}static addElemType(a,u){a.addFieldOffset(0,u,0)}static endSequenceType(a){return a.endObject()}static createSequenceType(a,u){return o.startSequenceType(a),o.addElemType(a,u),o.endSequenceType(a)}}i.SequenceType=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}nodeIndex(){return this.bb.readUint32(this.bb_pos)}srcArgIndex(){return this.bb.readInt32(this.bb_pos+4)}dstArgIndex(){return this.bb.readInt32(this.bb_pos+8)}static createEdgeEnd(a,u,l,d){return a.prep(4,12),a.writeInt32(d),a.writeInt32(l),a.writeInt32(u),a.offset()}}i.EdgeEnd=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsNodeEdge(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsNodeEdge(a,u){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}nodeIndex(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readUint32(this.bb_pos+a):0}inputEdges(a,u){let l=this.bb.__offset(this.bb_pos,6);return l?(u||new e.experimental.fbs.EdgeEnd).__init(this.bb.__vector(this.bb_pos+l)+a*12,this.bb):null}inputEdgesLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}outputEdges(a,u){let l=this.bb.__offset(this.bb_pos,8);return l?(u||new e.experimental.fbs.EdgeEnd).__init(this.bb.__vector(this.bb_pos+l)+a*12,this.bb):null}outputEdgesLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}static startNodeEdge(a){a.startObject(3)}static addNodeIndex(a,u){a.addFieldInt32(0,u,0)}static addInputEdges(a,u){a.addFieldOffset(1,u,0)}static startInputEdgesVector(a,u){a.startVector(12,u,4)}static addOutputEdges(a,u){a.addFieldOffset(2,u,0)}static startOutputEdgesVector(a,u){a.startVector(12,u,4)}static endNodeEdge(a){return a.endObject()}static createNodeEdge(a,u,l,d){return o.startNodeEdge(a),o.addNodeIndex(a,u),o.addInputEdges(a,l),o.addOutputEdges(a,d),o.endNodeEdge(a)}}i.NodeEdge=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsNode(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsNode(a,u){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}docString(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}domain(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.__string(this.bb_pos+u,a):null}sinceVersion(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readInt32(this.bb_pos+a):0}index(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.readUint32(this.bb_pos+a):0}opType(a){let u=this.bb.__offset(this.bb_pos,14);return u?this.bb.__string(this.bb_pos+u,a):null}type(){let a=this.bb.__offset(this.bb_pos,16);return a?this.bb.readInt32(this.bb_pos+a):0}executionProviderType(a){let u=this.bb.__offset(this.bb_pos,18);return u?this.bb.__string(this.bb_pos+u,a):null}inputs(a,u){let l=this.bb.__offset(this.bb_pos,20);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}inputsLength(){let a=this.bb.__offset(this.bb_pos,20);return a?this.bb.__vector_len(this.bb_pos+a):0}outputs(a,u){let l=this.bb.__offset(this.bb_pos,22);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}outputsLength(){let a=this.bb.__offset(this.bb_pos,22);return a?this.bb.__vector_len(this.bb_pos+a):0}attributes(a,u){let l=this.bb.__offset(this.bb_pos,24);return l?(u||new e.experimental.fbs.Attribute).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}attributesLength(){let a=this.bb.__offset(this.bb_pos,24);return a?this.bb.__vector_len(this.bb_pos+a):0}inputArgCounts(a){let u=this.bb.__offset(this.bb_pos,26);return u?this.bb.readInt32(this.bb.__vector(this.bb_pos+u)+a*4):0}inputArgCountsLength(){let a=this.bb.__offset(this.bb_pos,26);return a?this.bb.__vector_len(this.bb_pos+a):0}inputArgCountsArray(){let a=this.bb.__offset(this.bb_pos,26);return a?new Int32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}implicitInputs(a,u){let l=this.bb.__offset(this.bb_pos,28);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}implicitInputsLength(){let a=this.bb.__offset(this.bb_pos,28);return a?this.bb.__vector_len(this.bb_pos+a):0}static startNode(a){a.startObject(13)}static addName(a,u){a.addFieldOffset(0,u,0)}static addDocString(a,u){a.addFieldOffset(1,u,0)}static addDomain(a,u){a.addFieldOffset(2,u,0)}static addSinceVersion(a,u){a.addFieldInt32(3,u,0)}static addIndex(a,u){a.addFieldInt32(4,u,0)}static addOpType(a,u){a.addFieldOffset(5,u,0)}static addType(a,u){a.addFieldInt32(6,u,0)}static addExecutionProviderType(a,u){a.addFieldOffset(7,u,0)}static addInputs(a,u){a.addFieldOffset(8,u,0)}static createInputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startInputsVector(a,u){a.startVector(4,u,4)}static addOutputs(a,u){a.addFieldOffset(9,u,0)}static createOutputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startOutputsVector(a,u){a.startVector(4,u,4)}static addAttributes(a,u){a.addFieldOffset(10,u,0)}static createAttributesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startAttributesVector(a,u){a.startVector(4,u,4)}static addInputArgCounts(a,u){a.addFieldOffset(11,u,0)}static createInputArgCountsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addInt32(u[l]);return a.endVector()}static startInputArgCountsVector(a,u){a.startVector(4,u,4)}static addImplicitInputs(a,u){a.addFieldOffset(12,u,0)}static createImplicitInputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startImplicitInputsVector(a,u){a.startVector(4,u,4)}static endNode(a){return a.endObject()}static createNode(a,u,l,d,p,h,g,y,w,I,T,$,O,C){return o.startNode(a),o.addName(a,u),o.addDocString(a,l),o.addDomain(a,d),o.addSinceVersion(a,p),o.addIndex(a,h),o.addOpType(a,g),o.addType(a,y),o.addExecutionProviderType(a,w),o.addInputs(a,I),o.addOutputs(a,T),o.addAttributes(a,$),o.addInputArgCounts(a,O),o.addImplicitInputs(a,C),o.endNode(a)}}i.Node=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsValueInfo(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsValueInfo(a,u){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}docString(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}type(a){let u=this.bb.__offset(this.bb_pos,8);return u?(a||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startValueInfo(a){a.startObject(3)}static addName(a,u){a.addFieldOffset(0,u,0)}static addDocString(a,u){a.addFieldOffset(1,u,0)}static addType(a,u){a.addFieldOffset(2,u,0)}static endValueInfo(a){return a.endObject()}static createValueInfo(a,u,l,d){return o.startValueInfo(a),o.addName(a,u),o.addDocString(a,l),o.addType(a,d),o.endValueInfo(a)}}i.ValueInfo=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsTypeInfo(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsTypeInfo(a,u){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}denotation(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}valueType(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.readUint8(this.bb_pos+a):0}value(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.__union(a,this.bb_pos+u):null}static startTypeInfo(a){a.startObject(3)}static addDenotation(a,u){a.addFieldOffset(0,u,0)}static addValueType(a,u){a.addFieldInt8(1,u,0)}static addValue(a,u){a.addFieldOffset(2,u,0)}static endTypeInfo(a){return a.endObject()}static createTypeInfo(a,u,l,d){return o.startTypeInfo(a),o.addDenotation(a,u),o.addValueType(a,l),o.addValue(a,d),o.endTypeInfo(a)}}i.TypeInfo=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsOperatorSetId(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsOperatorSetId(a,u){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}domain(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}version(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}static startOperatorSetId(a){a.startObject(2)}static addDomain(a,u){a.addFieldOffset(0,u,0)}static addVersion(a,u){a.addFieldInt64(1,u,a.createLong(0,0))}static endOperatorSetId(a){return a.endObject()}static createOperatorSetId(a,u,l){return o.startOperatorSetId(a),o.addDomain(a,u),o.addVersion(a,l),o.endOperatorSetId(a)}}i.OperatorSetId=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsTensor(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsTensor(a,u){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}docString(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}dims(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.readInt64(this.bb.__vector(this.bb_pos+u)+a*8):this.bb.createLong(0,0)}dimsLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}dataType(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readInt32(this.bb_pos+a):0}rawData(a){let u=this.bb.__offset(this.bb_pos,12);return u?this.bb.readUint8(this.bb.__vector(this.bb_pos+u)+a):0}rawDataLength(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.__vector_len(this.bb_pos+a):0}rawDataArray(){let a=this.bb.__offset(this.bb_pos,12);return a?new Uint8Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}stringData(a,u){let l=this.bb.__offset(this.bb_pos,14);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}stringDataLength(){let a=this.bb.__offset(this.bb_pos,14);return a?this.bb.__vector_len(this.bb_pos+a):0}static startTensor(a){a.startObject(6)}static addName(a,u){a.addFieldOffset(0,u,0)}static addDocString(a,u){a.addFieldOffset(1,u,0)}static addDims(a,u){a.addFieldOffset(2,u,0)}static createDimsVector(a,u){a.startVector(8,u.length,8);for(let l=u.length-1;l>=0;l--)a.addInt64(u[l]);return a.endVector()}static startDimsVector(a,u){a.startVector(8,u,8)}static addDataType(a,u){a.addFieldInt32(3,u,0)}static addRawData(a,u){a.addFieldOffset(4,u,0)}static createRawDataVector(a,u){a.startVector(1,u.length,1);for(let l=u.length-1;l>=0;l--)a.addInt8(u[l]);return a.endVector()}static startRawDataVector(a,u){a.startVector(1,u,1)}static addStringData(a,u){a.addFieldOffset(5,u,0)}static createStringDataVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startStringDataVector(a,u){a.startVector(4,u,4)}static endTensor(a){return a.endObject()}static createTensor(a,u,l,d,p,h,g){return o.startTensor(a),o.addName(a,u),o.addDocString(a,l),o.addDims(a,d),o.addDataType(a,p),o.addRawData(a,h),o.addStringData(a,g),o.endTensor(a)}}i.Tensor=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsSparseTensor(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSparseTensor(a,u){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}values(a){let u=this.bb.__offset(this.bb_pos,4);return u?(a||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}indices(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}dims(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.readInt64(this.bb.__vector(this.bb_pos+u)+a*8):this.bb.createLong(0,0)}dimsLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}static startSparseTensor(a){a.startObject(3)}static addValues(a,u){a.addFieldOffset(0,u,0)}static addIndices(a,u){a.addFieldOffset(1,u,0)}static addDims(a,u){a.addFieldOffset(2,u,0)}static createDimsVector(a,u){a.startVector(8,u.length,8);for(let l=u.length-1;l>=0;l--)a.addInt64(u[l]);return a.endVector()}static startDimsVector(a,u){a.startVector(8,u,8)}static endSparseTensor(a){return a.endObject()}static createSparseTensor(a,u,l,d){return o.startSparseTensor(a),o.addValues(a,u),o.addIndices(a,l),o.addDims(a,d),o.endSparseTensor(a)}}i.SparseTensor=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsAttribute(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsAttribute(a,u){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}docString(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}type(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.readInt32(this.bb_pos+a):0}f(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readFloat32(this.bb_pos+a):0}i(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}s(a){let u=this.bb.__offset(this.bb_pos,14);return u?this.bb.__string(this.bb_pos+u,a):null}t(a){let u=this.bb.__offset(this.bb_pos,16);return u?(a||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}g(a){let u=this.bb.__offset(this.bb_pos,18);return u?(a||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}floats(a){let u=this.bb.__offset(this.bb_pos,20);return u?this.bb.readFloat32(this.bb.__vector(this.bb_pos+u)+a*4):0}floatsLength(){let a=this.bb.__offset(this.bb_pos,20);return a?this.bb.__vector_len(this.bb_pos+a):0}floatsArray(){let a=this.bb.__offset(this.bb_pos,20);return a?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}ints(a){let u=this.bb.__offset(this.bb_pos,22);return u?this.bb.readInt64(this.bb.__vector(this.bb_pos+u)+a*8):this.bb.createLong(0,0)}intsLength(){let a=this.bb.__offset(this.bb_pos,22);return a?this.bb.__vector_len(this.bb_pos+a):0}strings(a,u){let l=this.bb.__offset(this.bb_pos,24);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}stringsLength(){let a=this.bb.__offset(this.bb_pos,24);return a?this.bb.__vector_len(this.bb_pos+a):0}tensors(a,u){let l=this.bb.__offset(this.bb_pos,26);return l?(u||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}tensorsLength(){let a=this.bb.__offset(this.bb_pos,26);return a?this.bb.__vector_len(this.bb_pos+a):0}graphs(a,u){let l=this.bb.__offset(this.bb_pos,28);return l?(u||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}graphsLength(){let a=this.bb.__offset(this.bb_pos,28);return a?this.bb.__vector_len(this.bb_pos+a):0}static startAttribute(a){a.startObject(13)}static addName(a,u){a.addFieldOffset(0,u,0)}static addDocString(a,u){a.addFieldOffset(1,u,0)}static addType(a,u){a.addFieldInt32(2,u,0)}static addF(a,u){a.addFieldFloat32(3,u,0)}static addI(a,u){a.addFieldInt64(4,u,a.createLong(0,0))}static addS(a,u){a.addFieldOffset(5,u,0)}static addT(a,u){a.addFieldOffset(6,u,0)}static addG(a,u){a.addFieldOffset(7,u,0)}static addFloats(a,u){a.addFieldOffset(8,u,0)}static createFloatsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addFloat32(u[l]);return a.endVector()}static startFloatsVector(a,u){a.startVector(4,u,4)}static addInts(a,u){a.addFieldOffset(9,u,0)}static createIntsVector(a,u){a.startVector(8,u.length,8);for(let l=u.length-1;l>=0;l--)a.addInt64(u[l]);return a.endVector()}static startIntsVector(a,u){a.startVector(8,u,8)}static addStrings(a,u){a.addFieldOffset(10,u,0)}static createStringsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startStringsVector(a,u){a.startVector(4,u,4)}static addTensors(a,u){a.addFieldOffset(11,u,0)}static createTensorsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startTensorsVector(a,u){a.startVector(4,u,4)}static addGraphs(a,u){a.addFieldOffset(12,u,0)}static createGraphsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startGraphsVector(a,u){a.startVector(4,u,4)}static endAttribute(a){return a.endObject()}static createAttribute(a,u,l,d,p,h,g,y,w,I,T,$,O,C){return o.startAttribute(a),o.addName(a,u),o.addDocString(a,l),o.addType(a,d),o.addF(a,p),o.addI(a,h),o.addS(a,g),o.addT(a,y),o.addG(a,w),o.addFloats(a,I),o.addInts(a,T),o.addStrings(a,$),o.addTensors(a,O),o.addGraphs(a,C),o.endAttribute(a)}}i.Attribute=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsGraph(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsGraph(a,u){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}initializers(a,u){let l=this.bb.__offset(this.bb_pos,4);return l?(u||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}initializersLength(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.__vector_len(this.bb_pos+a):0}nodeArgs(a,u){let l=this.bb.__offset(this.bb_pos,6);return l?(u||new e.experimental.fbs.ValueInfo).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}nodeArgsLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}nodes(a,u){let l=this.bb.__offset(this.bb_pos,8);return l?(u||new e.experimental.fbs.Node).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}nodesLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}maxNodeIndex(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readUint32(this.bb_pos+a):0}nodeEdges(a,u){let l=this.bb.__offset(this.bb_pos,12);return l?(u||new e.experimental.fbs.NodeEdge).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}nodeEdgesLength(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.__vector_len(this.bb_pos+a):0}inputs(a,u){let l=this.bb.__offset(this.bb_pos,14);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}inputsLength(){let a=this.bb.__offset(this.bb_pos,14);return a?this.bb.__vector_len(this.bb_pos+a):0}outputs(a,u){let l=this.bb.__offset(this.bb_pos,16);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}outputsLength(){let a=this.bb.__offset(this.bb_pos,16);return a?this.bb.__vector_len(this.bb_pos+a):0}sparseInitializers(a,u){let l=this.bb.__offset(this.bb_pos,18);return l?(u||new e.experimental.fbs.SparseTensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}sparseInitializersLength(){let a=this.bb.__offset(this.bb_pos,18);return a?this.bb.__vector_len(this.bb_pos+a):0}static startGraph(a){a.startObject(8)}static addInitializers(a,u){a.addFieldOffset(0,u,0)}static createInitializersVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startInitializersVector(a,u){a.startVector(4,u,4)}static addNodeArgs(a,u){a.addFieldOffset(1,u,0)}static createNodeArgsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startNodeArgsVector(a,u){a.startVector(4,u,4)}static addNodes(a,u){a.addFieldOffset(2,u,0)}static createNodesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startNodesVector(a,u){a.startVector(4,u,4)}static addMaxNodeIndex(a,u){a.addFieldInt32(3,u,0)}static addNodeEdges(a,u){a.addFieldOffset(4,u,0)}static createNodeEdgesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startNodeEdgesVector(a,u){a.startVector(4,u,4)}static addInputs(a,u){a.addFieldOffset(5,u,0)}static createInputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startInputsVector(a,u){a.startVector(4,u,4)}static addOutputs(a,u){a.addFieldOffset(6,u,0)}static createOutputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startOutputsVector(a,u){a.startVector(4,u,4)}static addSparseInitializers(a,u){a.addFieldOffset(7,u,0)}static createSparseInitializersVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startSparseInitializersVector(a,u){a.startVector(4,u,4)}static endGraph(a){return a.endObject()}static createGraph(a,u,l,d,p,h,g,y,w){return o.startGraph(a),o.addInitializers(a,u),o.addNodeArgs(a,l),o.addNodes(a,d),o.addMaxNodeIndex(a,p),o.addNodeEdges(a,h),o.addInputs(a,g),o.addOutputs(a,y),o.addSparseInitializers(a,w),o.endGraph(a)}}i.Graph=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsModel(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsModel(a,u){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}irVersion(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}opsetImport(a,u){let l=this.bb.__offset(this.bb_pos,6);return l?(u||new e.experimental.fbs.OperatorSetId).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}opsetImportLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}producerName(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.__string(this.bb_pos+u,a):null}producerVersion(a){let u=this.bb.__offset(this.bb_pos,10);return u?this.bb.__string(this.bb_pos+u,a):null}domain(a){let u=this.bb.__offset(this.bb_pos,12);return u?this.bb.__string(this.bb_pos+u,a):null}modelVersion(){let a=this.bb.__offset(this.bb_pos,14);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}docString(a){let u=this.bb.__offset(this.bb_pos,16);return u?this.bb.__string(this.bb_pos+u,a):null}graph(a){let u=this.bb.__offset(this.bb_pos,18);return u?(a||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}graphDocString(a){let u=this.bb.__offset(this.bb_pos,20);return u?this.bb.__string(this.bb_pos+u,a):null}static startModel(a){a.startObject(9)}static addIrVersion(a,u){a.addFieldInt64(0,u,a.createLong(0,0))}static addOpsetImport(a,u){a.addFieldOffset(1,u,0)}static createOpsetImportVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startOpsetImportVector(a,u){a.startVector(4,u,4)}static addProducerName(a,u){a.addFieldOffset(2,u,0)}static addProducerVersion(a,u){a.addFieldOffset(3,u,0)}static addDomain(a,u){a.addFieldOffset(4,u,0)}static addModelVersion(a,u){a.addFieldInt64(5,u,a.createLong(0,0))}static addDocString(a,u){a.addFieldOffset(6,u,0)}static addGraph(a,u){a.addFieldOffset(7,u,0)}static addGraphDocString(a,u){a.addFieldOffset(8,u,0)}static endModel(a){return a.endObject()}static createModel(a,u,l,d,p,h,g,y,w,I){return o.startModel(a),o.addIrVersion(a,u),o.addOpsetImport(a,l),o.addProducerName(a,d),o.addProducerVersion(a,p),o.addDomain(a,h),o.addModelVersion(a,g),o.addDocString(a,y),o.addGraph(a,w),o.addGraphDocString(a,I),o.endModel(a)}}i.Model=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsKernelCreateInfos(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsKernelCreateInfos(a,u){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}nodeIndices(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.readUint32(this.bb.__vector(this.bb_pos+u)+a*4):0}nodeIndicesLength(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.__vector_len(this.bb_pos+a):0}nodeIndicesArray(){let a=this.bb.__offset(this.bb_pos,4);return a?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}kernelDefHashes(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.readUint64(this.bb.__vector(this.bb_pos+u)+a*8):this.bb.createLong(0,0)}kernelDefHashesLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}static startKernelCreateInfos(a){a.startObject(2)}static addNodeIndices(a,u){a.addFieldOffset(0,u,0)}static createNodeIndicesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addInt32(u[l]);return a.endVector()}static startNodeIndicesVector(a,u){a.startVector(4,u,4)}static addKernelDefHashes(a,u){a.addFieldOffset(1,u,0)}static createKernelDefHashesVector(a,u){a.startVector(8,u.length,8);for(let l=u.length-1;l>=0;l--)a.addInt64(u[l]);return a.endVector()}static startKernelDefHashesVector(a,u){a.startVector(8,u,8)}static endKernelCreateInfos(a){return a.endObject()}static createKernelCreateInfos(a,u,l){return o.startKernelCreateInfos(a),o.addNodeIndices(a,u),o.addKernelDefHashes(a,l),o.endKernelCreateInfos(a)}}i.KernelCreateInfos=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsSubGraphSessionState(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSubGraphSessionState(a,u){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}graphId(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}sessionState(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.SessionState).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startSubGraphSessionState(a){a.startObject(2)}static addGraphId(a,u){a.addFieldOffset(0,u,0)}static addSessionState(a,u){a.addFieldOffset(1,u,0)}static endSubGraphSessionState(a){let u=a.endObject();return a.requiredField(u,4),u}static createSubGraphSessionState(a,u,l){return o.startSubGraphSessionState(a),o.addGraphId(a,u),o.addSessionState(a,l),o.endSubGraphSessionState(a)}}i.SubGraphSessionState=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsSessionState(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSessionState(a,u){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}kernels(a){let u=this.bb.__offset(this.bb_pos,4);return u?(a||new e.experimental.fbs.KernelCreateInfos).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}subGraphSessionStates(a,u){let l=this.bb.__offset(this.bb_pos,6);return l?(u||new e.experimental.fbs.SubGraphSessionState).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}subGraphSessionStatesLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}static startSessionState(a){a.startObject(2)}static addKernels(a,u){a.addFieldOffset(0,u,0)}static addSubGraphSessionStates(a,u){a.addFieldOffset(1,u,0)}static createSubGraphSessionStatesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startSubGraphSessionStatesVector(a,u){a.startVector(4,u,4)}static endSessionState(a){return a.endObject()}static createSessionState(a,u,l){return o.startSessionState(a),o.addKernels(a,u),o.addSubGraphSessionStates(a,l),o.endSessionState(a)}}i.SessionState=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsInferenceSession(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsInferenceSession(a,u){return a.setPosition(a.position()+k.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static bufferHasIdentifier(a){return a.__has_identifier("ORTM")}ortVersion(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}model(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.Model).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}sessionState(a){let u=this.bb.__offset(this.bb_pos,8);return u?(a||new e.experimental.fbs.SessionState).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startInferenceSession(a){a.startObject(3)}static addOrtVersion(a,u){a.addFieldOffset(0,u,0)}static addModel(a,u){a.addFieldOffset(1,u,0)}static addSessionState(a,u){a.addFieldOffset(2,u,0)}static endInferenceSession(a){return a.endObject()}static finishInferenceSessionBuffer(a,u){a.finish(u,"ORTM")}static finishSizePrefixedInferenceSessionBuffer(a,u){a.finish(u,"ORTM",!0)}static createInferenceSession(a,u,l,d){return o.startInferenceSession(a),o.addOrtVersion(a,u),o.addModel(a,l),o.addSessionState(a,d),o.endInferenceSession(a)}}i.InferenceSession=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={})});var ql=Xe((m$,Hl)=>{"use strict";Hl.exports=Qy;function Qy(r,e){for(var n=new Array(arguments.length-1),t=0,o=2,i=!0;o<arguments.length;)n[t++]=arguments[o++];return new Promise(function(a,u){n[t]=function(d){if(i)if(i=!1,d)u(d);else{for(var p=new Array(arguments.length-1),h=0;h<p.length;)p[h++]=arguments[h];a.apply(null,p)}};try{r.apply(e||null,n)}catch(l){i&&(i=!1,u(l))}})}});var Xl=Xe(Yl=>{"use strict";var Mi=Yl;Mi.length=function(e){var n=e.length;if(!n)return 0;for(var t=0;--n%4>1&&e.charAt(n)==="=";)++t;return Math.ceil(e.length*3)/4-t};var Vn=new Array(64),Kl=new Array(123);for(pr=0;pr<64;)Kl[Vn[pr]=pr<26?pr+65:pr<52?pr+71:pr<62?pr-4:pr-59|43]=pr++;var pr;Mi.encode=function(e,n,t){for(var o=null,i=[],s=0,a=0,u;n<t;){var l=e[n++];switch(a){case 0:i[s++]=Vn[l>>2],u=(l&3)<<4,a=1;break;case 1:i[s++]=Vn[u|l>>4],u=(l&15)<<2,a=2;break;case 2:i[s++]=Vn[u|l>>6],i[s++]=Vn[l&63],a=0;break}s>8191&&((o||(o=[])).push(String.fromCharCode.apply(String,i)),s=0)}return a&&(i[s++]=Vn[u],i[s++]=61,a===1&&(i[s++]=61)),o?(s&&o.push(String.fromCharCode.apply(String,i.slice(0,s))),o.join("")):String.fromCharCode.apply(String,i.slice(0,s))};var jl="invalid encoding";Mi.decode=function(e,n,t){for(var o=t,i=0,s,a=0;a<e.length;){var u=e.charCodeAt(a++);if(u===61&&i>1)break;if((u=Kl[u])===void 0)throw Error(jl);switch(i){case 0:s=u,i=1;break;case 1:n[t++]=s<<2|(u&48)>>4,s=u,i=2;break;case 2:n[t++]=(s&15)<<4|(u&60)>>2,s=u,i=3;break;case 3:n[t++]=(s&3)<<6|u,i=0;break}}if(i===1)throw Error(jl);return t-o};Mi.test=function(e){return/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e)}});var Jl=Xe((b$,Zl)=>{"use strict";Zl.exports=zi;function zi(){this._listeners={}}zi.prototype.on=function(e,n,t){return(this._listeners[e]||(this._listeners[e]=[])).push({fn:n,ctx:t||this}),this};zi.prototype.off=function(e,n){if(e===void 0)this._listeners={};else if(n===void 0)this._listeners[e]=[];else for(var t=this._listeners[e],o=0;o<t.length;)t[o].fn===n?t.splice(o,1):++o;return this};zi.prototype.emit=function(e){var n=this._listeners[e];if(n){for(var t=[],o=1;o<arguments.length;)t.push(arguments[o++]);for(o=0;o<n.length;)n[o].fn.apply(n[o++].ctx,t)}return this}});var id=Xe((y$,od)=>{"use strict";od.exports=Ql(Ql);function Ql(r){return typeof Float32Array<"u"?function(){var e=new Float32Array([-0]),n=new Uint8Array(e.buffer),t=n[3]===128;function o(u,l,d){e[0]=u,l[d]=n[0],l[d+1]=n[1],l[d+2]=n[2],l[d+3]=n[3]}function i(u,l,d){e[0]=u,l[d]=n[3],l[d+1]=n[2],l[d+2]=n[1],l[d+3]=n[0]}r.writeFloatLE=t?o:i,r.writeFloatBE=t?i:o;function s(u,l){return n[0]=u[l],n[1]=u[l+1],n[2]=u[l+2],n[3]=u[l+3],e[0]}function a(u,l){return n[3]=u[l],n[2]=u[l+1],n[1]=u[l+2],n[0]=u[l+3],e[0]}r.readFloatLE=t?s:a,r.readFloatBE=t?a:s}():function(){function e(t,o,i,s){var a=o<0?1:0;if(a&&(o=-o),o===0)t(1/o>0?0:2147483648,i,s);else if(isNaN(o))t(2143289344,i,s);else if(o>34028234663852886e22)t((a<<31|2139095040)>>>0,i,s);else if(o<11754943508222875e-54)t((a<<31|Math.round(o/1401298464324817e-60))>>>0,i,s);else{var u=Math.floor(Math.log(o)/Math.LN2),l=Math.round(o*Math.pow(2,-u)*8388608)&8388607;t((a<<31|u+127<<23|l)>>>0,i,s)}}r.writeFloatLE=e.bind(null,ed),r.writeFloatBE=e.bind(null,td);function n(t,o,i){var s=t(o,i),a=(s>>31)*2+1,u=s>>>23&255,l=s&8388607;return u===255?l?NaN:a*(1/0):u===0?a*1401298464324817e-60*l:a*Math.pow(2,u-150)*(l+8388608)}r.readFloatLE=n.bind(null,rd),r.readFloatBE=n.bind(null,nd)}(),typeof Float64Array<"u"?function(){var e=new Float64Array([-0]),n=new Uint8Array(e.buffer),t=n[7]===128;function o(u,l,d){e[0]=u,l[d]=n[0],l[d+1]=n[1],l[d+2]=n[2],l[d+3]=n[3],l[d+4]=n[4],l[d+5]=n[5],l[d+6]=n[6],l[d+7]=n[7]}function i(u,l,d){e[0]=u,l[d]=n[7],l[d+1]=n[6],l[d+2]=n[5],l[d+3]=n[4],l[d+4]=n[3],l[d+5]=n[2],l[d+6]=n[1],l[d+7]=n[0]}r.writeDoubleLE=t?o:i,r.writeDoubleBE=t?i:o;function s(u,l){return n[0]=u[l],n[1]=u[l+1],n[2]=u[l+2],n[3]=u[l+3],n[4]=u[l+4],n[5]=u[l+5],n[6]=u[l+6],n[7]=u[l+7],e[0]}function a(u,l){return n[7]=u[l],n[6]=u[l+1],n[5]=u[l+2],n[4]=u[l+3],n[3]=u[l+4],n[2]=u[l+5],n[1]=u[l+6],n[0]=u[l+7],e[0]}r.readDoubleLE=t?s:a,r.readDoubleBE=t?a:s}():function(){function e(t,o,i,s,a,u){var l=s<0?1:0;if(l&&(s=-s),s===0)t(0,a,u+o),t(1/s>0?0:2147483648,a,u+i);else if(isNaN(s))t(0,a,u+o),t(2146959360,a,u+i);else if(s>17976931348623157e292)t(0,a,u+o),t((l<<31|2146435072)>>>0,a,u+i);else{var d;if(s<22250738585072014e-324)d=s/5e-324,t(d>>>0,a,u+o),t((l<<31|d/4294967296)>>>0,a,u+i);else{var p=Math.floor(Math.log(s)/Math.LN2);p===1024&&(p=1023),d=s*Math.pow(2,-p),t(d*4503599627370496>>>0,a,u+o),t((l<<31|p+1023<<20|d*1048576&1048575)>>>0,a,u+i)}}}r.writeDoubleLE=e.bind(null,ed,0,4),r.writeDoubleBE=e.bind(null,td,4,0);function n(t,o,i,s,a){var u=t(s,a+o),l=t(s,a+i),d=(l>>31)*2+1,p=l>>>20&2047,h=4294967296*(l&1048575)+u;return p===2047?h?NaN:d*(1/0):p===0?d*5e-324*h:d*Math.pow(2,p-1075)*(h+4503599627370496)}r.readDoubleLE=n.bind(null,rd,0,4),r.readDoubleBE=n.bind(null,nd,4,0)}(),r}function ed(r,e,n){e[n]=r&255,e[n+1]=r>>>8&255,e[n+2]=r>>>16&255,e[n+3]=r>>>24}function td(r,e,n){e[n]=r>>>24,e[n+1]=r>>>16&255,e[n+2]=r>>>8&255,e[n+3]=r&255}function rd(r,e){return(r[e]|r[e+1]<<8|r[e+2]<<16|r[e+3]<<24)>>>0}function nd(r,e){return(r[e]<<24|r[e+1]<<16|r[e+2]<<8|r[e+3])>>>0}});var ad=Xe((exports,module)=>{"use strict";module.exports=inquire;function inquire(moduleName){try{var mod=eval("quire".replace(/^/,"re"))(moduleName);if(mod&&(mod.length||Object.keys(mod).length))return mod}catch(r){}return null}});var ud=Xe(sd=>{"use strict";var ds=sd;ds.length=function(e){for(var n=0,t=0,o=0;o<e.length;++o)t=e.charCodeAt(o),t<128?n+=1:t<2048?n+=2:(t&64512)===55296&&(e.charCodeAt(o+1)&64512)===56320?(++o,n+=4):n+=3;return n};ds.read=function(e,n,t){var o=t-n;if(o<1)return"";for(var i=null,s=[],a=0,u;n<t;)u=e[n++],u<128?s[a++]=u:u>191&&u<224?s[a++]=(u&31)<<6|e[n++]&63:u>239&&u<365?(u=((u&7)<<18|(e[n++]&63)<<12|(e[n++]&63)<<6|e[n++]&63)-65536,s[a++]=55296+(u>>10),s[a++]=56320+(u&1023)):s[a++]=(u&15)<<12|(e[n++]&63)<<6|e[n++]&63,a>8191&&((i||(i=[])).push(String.fromCharCode.apply(String,s)),a=0);return i?(a&&i.push(String.fromCharCode.apply(String,s.slice(0,a))),i.join("")):String.fromCharCode.apply(String,s.slice(0,a))};ds.write=function(e,n,t){for(var o=t,i,s,a=0;a<e.length;++a)i=e.charCodeAt(a),i<128?n[t++]=i:i<2048?(n[t++]=i>>6|192,n[t++]=i&63|128):(i&64512)===55296&&((s=e.charCodeAt(a+1))&64512)===56320?(i=65536+((i&1023)<<10)+(s&1023),++a,n[t++]=i>>18|240,n[t++]=i>>12&63|128,n[t++]=i>>6&63|128,n[t++]=i&63|128):(n[t++]=i>>12|224,n[t++]=i>>6&63|128,n[t++]=i&63|128);return t-o}});var dd=Xe((w$,ld)=>{"use strict";ld.exports=e0;function e0(r,e,n){var t=n||8192,o=t>>>1,i=null,s=t;return function(u){if(u<1||u>o)return r(u);s+u>t&&(i=r(t),s=0);var l=e.call(i,s,s+=u);return s&7&&(s=(s|7)+1),l}}});var fd=Xe((x$,cd)=>{"use strict";cd.exports=_t;var _o=Kr();function _t(r,e){this.lo=r>>>0,this.hi=e>>>0}var dn=_t.zero=new _t(0,0);dn.toNumber=function(){return 0};dn.zzEncode=dn.zzDecode=function(){return this};dn.length=function(){return 1};var t0=_t.zeroHash="\0\0\0\0\0\0\0\0";_t.fromNumber=function(e){if(e===0)return dn;var n=e<0;n&&(e=-e);var t=e>>>0,o=(e-t)/4294967296>>>0;return n&&(o=~o>>>0,t=~t>>>0,++t>4294967295&&(t=0,++o>4294967295&&(o=0))),new _t(t,o)};_t.from=function(e){if(typeof e=="number")return _t.fromNumber(e);if(_o.isString(e))if(_o.Long)e=_o.Long.fromString(e);else return _t.fromNumber(parseInt(e,10));return e.low||e.high?new _t(e.low>>>0,e.high>>>0):dn};_t.prototype.toNumber=function(e){if(!e&&this.hi>>>31){var n=~this.lo+1>>>0,t=~this.hi>>>0;return n||(t=t+1>>>0),-(n+t*4294967296)}return this.lo+this.hi*4294967296};_t.prototype.toLong=function(e){return _o.Long?new _o.Long(this.lo|0,this.hi|0,!!e):{low:this.lo|0,high:this.hi|0,unsigned:!!e}};var jr=String.prototype.charCodeAt;_t.fromHash=function(e){return e===t0?dn:new _t((jr.call(e,0)|jr.call(e,1)<<8|jr.call(e,2)<<16|jr.call(e,3)<<24)>>>0,(jr.call(e,4)|jr.call(e,5)<<8|jr.call(e,6)<<16|jr.call(e,7)<<24)>>>0)};_t.prototype.toHash=function(){return String.fromCharCode(this.lo&255,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,this.hi&255,this.hi>>>8&255,this.hi>>>16&255,this.hi>>>24)};_t.prototype.zzEncode=function(){var e=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^e)>>>0,this.lo=(this.lo<<1^e)>>>0,this};_t.prototype.zzDecode=function(){var e=-(this.lo&1);return this.lo=((this.lo>>>1|this.hi<<31)^e)>>>0,this.hi=(this.hi>>>1^e)>>>0,this};_t.prototype.length=function(){var e=this.lo,n=(this.lo>>>28|this.hi<<4)>>>0,t=this.hi>>>24;return t===0?n===0?e<16384?e<128?1:2:e<2097152?3:4:n<16384?n<128?5:6:n<2097152?7:8:t<128?9:10}});var Kr=Xe(cs=>{"use strict";var fe=cs;fe.asPromise=ql();fe.base64=Xl();fe.EventEmitter=Jl();fe.float=id();fe.inquire=ad();fe.utf8=ud();fe.pool=dd();fe.LongBits=fd();fe.isNode=!!(typeof global<"u"&&global&&global.process&&global.process.versions&&global.process.versions.node);fe.global=fe.isNode&&global||typeof window<"u"&&window||typeof self<"u"&&self||cs;fe.emptyArray=Object.freeze?Object.freeze([]):[];fe.emptyObject=Object.freeze?Object.freeze({}):{};fe.isInteger=Number.isInteger||function(e){return typeof e=="number"&&isFinite(e)&&Math.floor(e)===e};fe.isString=function(e){return typeof e=="string"||e instanceof String};fe.isObject=function(e){return e&&typeof e=="object"};fe.isset=fe.isSet=function(e,n){var t=e[n];return t!=null&&e.hasOwnProperty(n)?typeof t!="object"||(Array.isArray(t)?t.length:Object.keys(t).length)>0:!1};fe.Buffer=function(){try{var r=fe.inquire("buffer").Buffer;return r.prototype.utf8Write?r:null}catch{return null}}();fe._Buffer_from=null;fe._Buffer_allocUnsafe=null;fe.newBuffer=function(e){return typeof e=="number"?fe.Buffer?fe._Buffer_allocUnsafe(e):new fe.Array(e):fe.Buffer?fe._Buffer_from(e):typeof Uint8Array>"u"?e:new Uint8Array(e)};fe.Array=typeof Uint8Array<"u"?Uint8Array:Array;fe.Long=fe.global.dcodeIO&&fe.global.dcodeIO.Long||fe.global.Long||fe.inquire("long");fe.key2Re=/^true|false|0|1$/;fe.key32Re=/^-?(?:0|[1-9][0-9]*)$/;fe.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;fe.longToHash=function(e){return e?fe.LongBits.from(e).toHash():fe.LongBits.zeroHash};fe.longFromHash=function(e,n){var t=fe.LongBits.fromHash(e);return fe.Long?fe.Long.fromBits(t.lo,t.hi,n):t.toNumber(!!n)};function pd(r,e,n){for(var t=Object.keys(e),o=0;o<t.length;++o)(r[t[o]]===void 0||!n)&&(r[t[o]]=e[t[o]]);return r}fe.merge=pd;fe.lcFirst=function(e){return e.charAt(0).toLowerCase()+e.substring(1)};function hd(r){function e(n,t){if(!(this instanceof e))return new e(n,t);Object.defineProperty(this,"message",{get:function(){return n}}),Error.captureStackTrace?Error.captureStackTrace(this,e):Object.defineProperty(this,"stack",{value:new Error().stack||""}),t&&pd(this,t)}return e.prototype=Object.create(Error.prototype,{constructor:{value:e,writable:!0,enumerable:!1,configurable:!0},name:{get:function(){return r},set:void 0,enumerable:!1,configurable:!0},toString:{value:function(){return this.name+": "+this.message},writable:!0,enumerable:!1,configurable:!0}}),e}fe.newError=hd;fe.ProtocolError=hd("ProtocolError");fe.oneOfGetter=function(e){for(var n={},t=0;t<e.length;++t)n[e[t]]=1;return function(){for(var o=Object.keys(this),i=o.length-1;i>-1;--i)if(n[o[i]]===1&&this[o[i]]!==void 0&&this[o[i]]!==null)return o[i]}};fe.oneOfSetter=function(e){return function(n){for(var t=0;t<e.length;++t)e[t]!==n&&delete this[e[t]]}};fe.toJSONOptions={longs:String,enums:String,bytes:String,json:!0};fe._configure=function(){var r=fe.Buffer;if(!r){fe._Buffer_from=fe._Buffer_allocUnsafe=null;return}fe._Buffer_from=r.from!==Uint8Array.from&&r.from||function(n,t){return new r(n,t)},fe._Buffer_allocUnsafe=r.allocUnsafe||function(n){return new r(n)}}});var ys=Xe(($$,yd)=>{"use strict";yd.exports=Fe;var er=Kr(),fs,Ni=er.LongBits,md=er.base64,gd=er.utf8;function So(r,e,n){this.fn=r,this.len=e,this.next=void 0,this.val=n}function hs(){}function r0(r){this.head=r.head,this.tail=r.tail,this.len=r.len,this.next=r.states}function Fe(){this.len=0,this.head=new So(hs,0,0),this.tail=this.head,this.states=null}var bd=function(){return er.Buffer?function(){return(Fe.create=function(){return new fs})()}:function(){return new Fe}};Fe.create=bd();Fe.alloc=function(e){return new er.Array(e)};er.Array!==Array&&(Fe.alloc=er.pool(Fe.alloc,er.Array.prototype.subarray));Fe.prototype._push=function(e,n,t){return this.tail=this.tail.next=new So(e,n,t),this.len+=n,this};function ms(r,e,n){e[n]=r&255}function n0(r,e,n){for(;r>127;)e[n++]=r&127|128,r>>>=7;e[n]=r}function gs(r,e){this.len=r,this.next=void 0,this.val=e}gs.prototype=Object.create(So.prototype);gs.prototype.fn=n0;Fe.prototype.uint32=function(e){return this.len+=(this.tail=this.tail.next=new gs((e=e>>>0)<128?1:e<16384?2:e<2097152?3:e<268435456?4:5,e)).len,this};Fe.prototype.int32=function(e){return e<0?this._push(bs,10,Ni.fromNumber(e)):this.uint32(e)};Fe.prototype.sint32=function(e){return this.uint32((e<<1^e>>31)>>>0)};function bs(r,e,n){for(;r.hi;)e[n++]=r.lo&127|128,r.lo=(r.lo>>>7|r.hi<<25)>>>0,r.hi>>>=7;for(;r.lo>127;)e[n++]=r.lo&127|128,r.lo=r.lo>>>7;e[n++]=r.lo}Fe.prototype.uint64=function(e){var n=Ni.from(e);return this._push(bs,n.length(),n)};Fe.prototype.int64=Fe.prototype.uint64;Fe.prototype.sint64=function(e){var n=Ni.from(e).zzEncode();return this._push(bs,n.length(),n)};Fe.prototype.bool=function(e){return this._push(ms,1,e?1:0)};function ps(r,e,n){e[n]=r&255,e[n+1]=r>>>8&255,e[n+2]=r>>>16&255,e[n+3]=r>>>24}Fe.prototype.fixed32=function(e){return this._push(ps,4,e>>>0)};Fe.prototype.sfixed32=Fe.prototype.fixed32;Fe.prototype.fixed64=function(e){var n=Ni.from(e);return this._push(ps,4,n.lo)._push(ps,4,n.hi)};Fe.prototype.sfixed64=Fe.prototype.fixed64;Fe.prototype.float=function(e){return this._push(er.float.writeFloatLE,4,e)};Fe.prototype.double=function(e){return this._push(er.float.writeDoubleLE,8,e)};var o0=er.Array.prototype.set?function(e,n,t){n.set(e,t)}:function(e,n,t){for(var o=0;o<e.length;++o)n[t+o]=e[o]};Fe.prototype.bytes=function(e){var n=e.length>>>0;if(!n)return this._push(ms,1,0);if(er.isString(e)){var t=Fe.alloc(n=md.length(e));md.decode(e,t,0),e=t}return this.uint32(n)._push(o0,n,e)};Fe.prototype.string=function(e){var n=gd.length(e);return n?this.uint32(n)._push(gd.write,n,e):this._push(ms,1,0)};Fe.prototype.fork=function(){return this.states=new r0(this),this.head=this.tail=new So(hs,0,0),this.len=0,this};Fe.prototype.reset=function(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new So(hs,0,0),this.len=0),this};Fe.prototype.ldelim=function(){var e=this.head,n=this.tail,t=this.len;return this.reset().uint32(t),t&&(this.tail.next=e.next,this.tail=n,this.len+=t),this};Fe.prototype.finish=function(){for(var e=this.head.next,n=this.constructor.alloc(this.len),t=0;e;)e.fn(e.val,n,t),t+=e.len,e=e.next;return n};Fe._configure=function(r){fs=r,Fe.create=bd(),fs._configure()}});var xd=Xe((_$,wd)=>{"use strict";wd.exports=vr;var vd=ys();(vr.prototype=Object.create(vd.prototype)).constructor=vr;var Yr=Kr();function vr(){vd.call(this)}vr._configure=function(){vr.alloc=Yr._Buffer_allocUnsafe,vr.writeBytesBuffer=Yr.Buffer&&Yr.Buffer.prototype instanceof Uint8Array&&Yr.Buffer.prototype.set.name==="set"?function(e,n,t){n.set(e,t)}:function(e,n,t){if(e.copy)e.copy(n,t,0,e.length);else for(var o=0;o<e.length;)n[t++]=e[o++]}};vr.prototype.bytes=function(e){Yr.isString(e)&&(e=Yr._Buffer_from(e,"base64"));var n=e.length>>>0;return this.uint32(n),n&&this._push(vr.writeBytesBuffer,n,e),this};function i0(r,e,n){r.length<40?Yr.utf8.write(r,e,n):e.utf8Write?e.utf8Write(r,n):e.write(r,n)}vr.prototype.string=function(e){var n=Yr.Buffer.byteLength(e);return this.uint32(n),n&&this._push(i0,n,e),this};vr._configure()});var xs=Xe((S$,Id)=>{"use strict";Id.exports=ft;var wr=Kr(),ws,_d=wr.LongBits,a0=wr.utf8;function hr(r,e){return RangeError("index out of range: "+r.pos+" + "+(e||1)+" > "+r.len)}function ft(r){this.buf=r,this.pos=0,this.len=r.length}var Td=typeof Uint8Array<"u"?function(e){if(e instanceof Uint8Array||Array.isArray(e))return new ft(e);throw Error("illegal buffer")}:function(e){if(Array.isArray(e))return new ft(e);throw Error("illegal buffer")},Sd=function(){return wr.Buffer?function(n){return(ft.create=function(o){return wr.Buffer.isBuffer(o)?new ws(o):Td(o)})(n)}:Td};ft.create=Sd();ft.prototype._slice=wr.Array.prototype.subarray||wr.Array.prototype.slice;ft.prototype.uint32=function(){var e=4294967295;return function(){if(e=(this.buf[this.pos]&127)>>>0,this.buf[this.pos++]<128||(e=(e|(this.buf[this.pos]&127)<<7)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<14)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<21)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&15)<<28)>>>0,this.buf[this.pos++]<128))return e;if((this.pos+=5)>this.len)throw this.pos=this.len,hr(this,10);return e}}();ft.prototype.int32=function(){return this.uint32()|0};ft.prototype.sint32=function(){var e=this.uint32();return e>>>1^-(e&1)|0};function vs(){var r=new _d(0,0),e=0;if(this.len-this.pos>4){for(;e<4;++e)if(r.lo=(r.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return r;if(r.lo=(r.lo|(this.buf[this.pos]&127)<<28)>>>0,r.hi=(r.hi|(this.buf[this.pos]&127)>>4)>>>0,this.buf[this.pos++]<128)return r;e=0}else{for(;e<3;++e){if(this.pos>=this.len)throw hr(this);if(r.lo=(r.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return r}return r.lo=(r.lo|(this.buf[this.pos++]&127)<<e*7)>>>0,r}if(this.len-this.pos>4){for(;e<5;++e)if(r.hi=(r.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return r}else for(;e<5;++e){if(this.pos>=this.len)throw hr(this);if(r.hi=(r.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return r}throw Error("invalid varint encoding")}ft.prototype.bool=function(){return this.uint32()!==0};function Fi(r,e){return(r[e-4]|r[e-3]<<8|r[e-2]<<16|r[e-1]<<24)>>>0}ft.prototype.fixed32=function(){if(this.pos+4>this.len)throw hr(this,4);return Fi(this.buf,this.pos+=4)};ft.prototype.sfixed32=function(){if(this.pos+4>this.len)throw hr(this,4);return Fi(this.buf,this.pos+=4)|0};function $d(){if(this.pos+8>this.len)throw hr(this,8);return new _d(Fi(this.buf,this.pos+=4),Fi(this.buf,this.pos+=4))}ft.prototype.float=function(){if(this.pos+4>this.len)throw hr(this,4);var e=wr.float.readFloatLE(this.buf,this.pos);return this.pos+=4,e};ft.prototype.double=function(){if(this.pos+8>this.len)throw hr(this,4);var e=wr.float.readDoubleLE(this.buf,this.pos);return this.pos+=8,e};ft.prototype.bytes=function(){var e=this.uint32(),n=this.pos,t=this.pos+e;if(t>this.len)throw hr(this,e);return this.pos+=e,Array.isArray(this.buf)?this.buf.slice(n,t):n===t?new this.buf.constructor(0):this._slice.call(this.buf,n,t)};ft.prototype.string=function(){var e=this.bytes();return a0.read(e,0,e.length)};ft.prototype.skip=function(e){if(typeof e=="number"){if(this.pos+e>this.len)throw hr(this,e);this.pos+=e}else do if(this.pos>=this.len)throw hr(this);while(this.buf[this.pos++]&128);return this};ft.prototype.skipType=function(r){switch(r){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;(r=this.uint32()&7)!==4;)this.skipType(r);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+r+" at offset "+this.pos)}return this};ft._configure=function(r){ws=r,ft.create=Sd(),ws._configure();var e=wr.Long?"toLong":"toNumber";wr.merge(ft.prototype,{int64:function(){return vs.call(this)[e](!1)},uint64:function(){return vs.call(this)[e](!0)},sint64:function(){return vs.call(this).zzDecode()[e](!1)},fixed64:function(){return $d.call(this)[e](!0)},sfixed64:function(){return $d.call(this)[e](!1)}})}});var Cd=Xe((I$,Ed)=>{"use strict";Ed.exports=cn;var Od=xs();(cn.prototype=Object.create(Od.prototype)).constructor=cn;var Ad=Kr();function cn(r){Od.call(this,r)}cn._configure=function(){Ad.Buffer&&(cn.prototype._slice=Ad.Buffer.prototype.slice)};cn.prototype.string=function(){var e=this.uint32();return this.buf.utf8Slice?this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+e,this.len)):this.buf.toString("utf-8",this.pos,this.pos=Math.min(this.pos+e,this.len))};cn._configure()});var kd=Xe((A$,Pd)=>{"use strict";Pd.exports=Io;var Ts=Kr();(Io.prototype=Object.create(Ts.EventEmitter.prototype)).constructor=Io;function Io(r,e,n){if(typeof r!="function")throw TypeError("rpcImpl must be a function");Ts.EventEmitter.call(this),this.rpcImpl=r,this.requestDelimited=!!e,this.responseDelimited=!!n}Io.prototype.rpcCall=function r(e,n,t,o,i){if(!o)throw TypeError("request must be specified");var s=this;if(!i)return Ts.asPromise(r,s,e,n,t,o);if(!s.rpcImpl){setTimeout(function(){i(Error("already ended"))},0);return}try{return s.rpcImpl(e,n[s.requestDelimited?"encodeDelimited":"encode"](o).finish(),function(u,l){if(u)return s.emit("error",u,e),i(u);if(l===null){s.end(!0);return}if(!(l instanceof t))try{l=t[s.responseDelimited?"decodeDelimited":"decode"](l)}catch(d){return s.emit("error",d,e),i(d)}return s.emit("data",l,e),i(null,l)})}catch(a){s.emit("error",a,e),setTimeout(function(){i(a)},0);return}};Io.prototype.end=function(e){return this.rpcImpl&&(e||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this}});var Rd=Xe(Dd=>{"use strict";var s0=Dd;s0.Service=kd()});var Ld=Xe((E$,Bd)=>{"use strict";Bd.exports={}});var Nd=Xe(zd=>{"use strict";var Gt=zd;Gt.build="minimal";Gt.Writer=ys();Gt.BufferWriter=xd();Gt.Reader=xs();Gt.BufferReader=Cd();Gt.util=Kr();Gt.rpc=Rd();Gt.roots=Ld();Gt.configure=Md;function Md(){Gt.util._configure(),Gt.Writer._configure(Gt.BufferWriter),Gt.Reader._configure(Gt.BufferReader)}Md()});var Vd=Xe((P$,Fd)=>{"use strict";Fd.exports=Nd()});var Un=Xe((k$,Ud)=>{"use strict";var Je=Vd(),re=Je.Reader,pt=Je.Writer,E=Je.util,S=Je.roots.default||(Je.roots.default={});S.onnx=function(){var r={};return r.Version=function(){var e={},n=Object.create(e);return n[e[0]="_START_VERSION"]=0,n[e[1]="IR_VERSION_2017_10_10"]=1,n[e[2]="IR_VERSION_2017_10_30"]=2,n[e[3]="IR_VERSION_2017_11_3"]=3,n[e[4]="IR_VERSION_2019_1_22"]=4,n[e[5]="IR_VERSION_2019_3_18"]=5,n[e[6]="IR_VERSION_2019_9_19"]=6,n[e[7]="IR_VERSION_2020_5_8"]=7,n[e[8]="IR_VERSION_2021_7_30"]=8,n[e[9]="IR_VERSION"]=9,n}(),r.AttributeProto=function(){function e(n){if(this.floats=[],this.ints=[],this.strings=[],this.tensors=[],this.graphs=[],this.sparseTensors=[],this.typeProtos=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.name="",e.prototype.refAttrName="",e.prototype.docString="",e.prototype.type=0,e.prototype.f=0,e.prototype.i=E.Long?E.Long.fromBits(0,0,!1):0,e.prototype.s=E.newBuffer([]),e.prototype.t=null,e.prototype.g=null,e.prototype.sparseTensor=null,e.prototype.tp=null,e.prototype.floats=E.emptyArray,e.prototype.ints=E.emptyArray,e.prototype.strings=E.emptyArray,e.prototype.tensors=E.emptyArray,e.prototype.graphs=E.emptyArray,e.prototype.sparseTensors=E.emptyArray,e.prototype.typeProtos=E.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=pt.create()),t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(10).string(t.name),t.f!=null&&Object.hasOwnProperty.call(t,"f")&&o.uint32(21).float(t.f),t.i!=null&&Object.hasOwnProperty.call(t,"i")&&o.uint32(24).int64(t.i),t.s!=null&&Object.hasOwnProperty.call(t,"s")&&o.uint32(34).bytes(t.s),t.t!=null&&Object.hasOwnProperty.call(t,"t")&&S.onnx.TensorProto.encode(t.t,o.uint32(42).fork()).ldelim(),t.g!=null&&Object.hasOwnProperty.call(t,"g")&&S.onnx.GraphProto.encode(t.g,o.uint32(50).fork()).ldelim(),t.floats!=null&&t.floats.length){o.uint32(58).fork();for(var i=0;i<t.floats.length;++i)o.float(t.floats[i]);o.ldelim()}if(t.ints!=null&&t.ints.length){o.uint32(66).fork();for(var i=0;i<t.ints.length;++i)o.int64(t.ints[i]);o.ldelim()}if(t.strings!=null&&t.strings.length)for(var i=0;i<t.strings.length;++i)o.uint32(74).bytes(t.strings[i]);if(t.tensors!=null&&t.tensors.length)for(var i=0;i<t.tensors.length;++i)S.onnx.TensorProto.encode(t.tensors[i],o.uint32(82).fork()).ldelim();if(t.graphs!=null&&t.graphs.length)for(var i=0;i<t.graphs.length;++i)S.onnx.GraphProto.encode(t.graphs[i],o.uint32(90).fork()).ldelim();if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(106).string(t.docString),t.tp!=null&&Object.hasOwnProperty.call(t,"tp")&&S.onnx.TypeProto.encode(t.tp,o.uint32(114).fork()).ldelim(),t.typeProtos!=null&&t.typeProtos.length)for(var i=0;i<t.typeProtos.length;++i)S.onnx.TypeProto.encode(t.typeProtos[i],o.uint32(122).fork()).ldelim();if(t.type!=null&&Object.hasOwnProperty.call(t,"type")&&o.uint32(160).int32(t.type),t.refAttrName!=null&&Object.hasOwnProperty.call(t,"refAttrName")&&o.uint32(170).string(t.refAttrName),t.sparseTensor!=null&&Object.hasOwnProperty.call(t,"sparseTensor")&&S.onnx.SparseTensorProto.encode(t.sparseTensor,o.uint32(178).fork()).ldelim(),t.sparseTensors!=null&&t.sparseTensors.length)for(var i=0;i<t.sparseTensors.length;++i)S.onnx.SparseTensorProto.encode(t.sparseTensors[i],o.uint32(186).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof re||(t=re.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new S.onnx.AttributeProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.name=t.string();break}case 21:{s.refAttrName=t.string();break}case 13:{s.docString=t.string();break}case 20:{s.type=t.int32();break}case 2:{s.f=t.float();break}case 3:{s.i=t.int64();break}case 4:{s.s=t.bytes();break}case 5:{s.t=S.onnx.TensorProto.decode(t,t.uint32());break}case 6:{s.g=S.onnx.GraphProto.decode(t,t.uint32());break}case 22:{s.sparseTensor=S.onnx.SparseTensorProto.decode(t,t.uint32());break}case 14:{s.tp=S.onnx.TypeProto.decode(t,t.uint32());break}case 7:{if(s.floats&&s.floats.length||(s.floats=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.floats.push(t.float());else s.floats.push(t.float());break}case 8:{if(s.ints&&s.ints.length||(s.ints=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.ints.push(t.int64());else s.ints.push(t.int64());break}case 9:{s.strings&&s.strings.length||(s.strings=[]),s.strings.push(t.bytes());break}case 10:{s.tensors&&s.tensors.length||(s.tensors=[]),s.tensors.push(S.onnx.TensorProto.decode(t,t.uint32()));break}case 11:{s.graphs&&s.graphs.length||(s.graphs=[]),s.graphs.push(S.onnx.GraphProto.decode(t,t.uint32()));break}case 23:{s.sparseTensors&&s.sparseTensors.length||(s.sparseTensors=[]),s.sparseTensors.push(S.onnx.SparseTensorProto.decode(t,t.uint32()));break}case 15:{s.typeProtos&&s.typeProtos.length||(s.typeProtos=[]),s.typeProtos.push(S.onnx.TypeProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof re||(t=new re(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!E.isString(t.name))return"name: string expected";if(t.refAttrName!=null&&t.hasOwnProperty("refAttrName")&&!E.isString(t.refAttrName))return"refAttrName: string expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!E.isString(t.docString))return"docString: string expected";if(t.type!=null&&t.hasOwnProperty("type"))switch(t.type){default:return"type: enum value expected";case 0:case 1:case 2:case 3:case 4:case 5:case 11:case 13:case 6:case 7:case 8:case 9:case 10:case 12:case 14:break}if(t.f!=null&&t.hasOwnProperty("f")&&typeof t.f!="number")return"f: number expected";if(t.i!=null&&t.hasOwnProperty("i")&&!E.isInteger(t.i)&&!(t.i&&E.isInteger(t.i.low)&&E.isInteger(t.i.high)))return"i: integer|Long expected";if(t.s!=null&&t.hasOwnProperty("s")&&!(t.s&&typeof t.s.length=="number"||E.isString(t.s)))return"s: buffer expected";if(t.t!=null&&t.hasOwnProperty("t")){var o=S.onnx.TensorProto.verify(t.t);if(o)return"t."+o}if(t.g!=null&&t.hasOwnProperty("g")){var o=S.onnx.GraphProto.verify(t.g);if(o)return"g."+o}if(t.sparseTensor!=null&&t.hasOwnProperty("sparseTensor")){var o=S.onnx.SparseTensorProto.verify(t.sparseTensor);if(o)return"sparseTensor."+o}if(t.tp!=null&&t.hasOwnProperty("tp")){var o=S.onnx.TypeProto.verify(t.tp);if(o)return"tp."+o}if(t.floats!=null&&t.hasOwnProperty("floats")){if(!Array.isArray(t.floats))return"floats: array expected";for(var i=0;i<t.floats.length;++i)if(typeof t.floats[i]!="number")return"floats: number[] expected"}if(t.ints!=null&&t.hasOwnProperty("ints")){if(!Array.isArray(t.ints))return"ints: array expected";for(var i=0;i<t.ints.length;++i)if(!E.isInteger(t.ints[i])&&!(t.ints[i]&&E.isInteger(t.ints[i].low)&&E.isInteger(t.ints[i].high)))return"ints: integer|Long[] expected"}if(t.strings!=null&&t.hasOwnProperty("strings")){if(!Array.isArray(t.strings))return"strings: array expected";for(var i=0;i<t.strings.length;++i)if(!(t.strings[i]&&typeof t.strings[i].length=="number"||E.isString(t.strings[i])))return"strings: buffer[] expected"}if(t.tensors!=null&&t.hasOwnProperty("tensors")){if(!Array.isArray(t.tensors))return"tensors: array expected";for(var i=0;i<t.tensors.length;++i){var o=S.onnx.TensorProto.verify(t.tensors[i]);if(o)return"tensors."+o}}if(t.graphs!=null&&t.hasOwnProperty("graphs")){if(!Array.isArray(t.graphs))return"graphs: array expected";for(var i=0;i<t.graphs.length;++i){var o=S.onnx.GraphProto.verify(t.graphs[i]);if(o)return"graphs."+o}}if(t.sparseTensors!=null&&t.hasOwnProperty("sparseTensors")){if(!Array.isArray(t.sparseTensors))return"sparseTensors: array expected";for(var i=0;i<t.sparseTensors.length;++i){var o=S.onnx.SparseTensorProto.verify(t.sparseTensors[i]);if(o)return"sparseTensors."+o}}if(t.typeProtos!=null&&t.hasOwnProperty("typeProtos")){if(!Array.isArray(t.typeProtos))return"typeProtos: array expected";for(var i=0;i<t.typeProtos.length;++i){var o=S.onnx.TypeProto.verify(t.typeProtos[i]);if(o)return"typeProtos."+o}}return null},e.fromObject=function(t){if(t instanceof S.onnx.AttributeProto)return t;var o=new S.onnx.AttributeProto;switch(t.name!=null&&(o.name=String(t.name)),t.refAttrName!=null&&(o.refAttrName=String(t.refAttrName)),t.docString!=null&&(o.docString=String(t.docString)),t.type){default:if(typeof t.type=="number"){o.type=t.type;break}break;case"UNDEFINED":case 0:o.type=0;break;case"FLOAT":case 1:o.type=1;break;case"INT":case 2:o.type=2;break;case"STRING":case 3:o.type=3;break;case"TENSOR":case 4:o.type=4;break;case"GRAPH":case 5:o.type=5;break;case"SPARSE_TENSOR":case 11:o.type=11;break;case"TYPE_PROTO":case 13:o.type=13;break;case"FLOATS":case 6:o.type=6;break;case"INTS":case 7:o.type=7;break;case"STRINGS":case 8:o.type=8;break;case"TENSORS":case 9:o.type=9;break;case"GRAPHS":case 10:o.type=10;break;case"SPARSE_TENSORS":case 12:o.type=12;break;case"TYPE_PROTOS":case 14:o.type=14;break}if(t.f!=null&&(o.f=Number(t.f)),t.i!=null&&(E.Long?(o.i=E.Long.fromValue(t.i)).unsigned=!1:typeof t.i=="string"?o.i=parseInt(t.i,10):typeof t.i=="number"?o.i=t.i:typeof t.i=="object"&&(o.i=new E.LongBits(t.i.low>>>0,t.i.high>>>0).toNumber())),t.s!=null&&(typeof t.s=="string"?E.base64.decode(t.s,o.s=E.newBuffer(E.base64.length(t.s)),0):t.s.length>=0&&(o.s=t.s)),t.t!=null){if(typeof t.t!="object")throw TypeError(".onnx.AttributeProto.t: object expected");o.t=S.onnx.TensorProto.fromObject(t.t)}if(t.g!=null){if(typeof t.g!="object")throw TypeError(".onnx.AttributeProto.g: object expected");o.g=S.onnx.GraphProto.fromObject(t.g)}if(t.sparseTensor!=null){if(typeof t.sparseTensor!="object")throw TypeError(".onnx.AttributeProto.sparseTensor: object expected");o.sparseTensor=S.onnx.SparseTensorProto.fromObject(t.sparseTensor)}if(t.tp!=null){if(typeof t.tp!="object")throw TypeError(".onnx.AttributeProto.tp: object expected");o.tp=S.onnx.TypeProto.fromObject(t.tp)}if(t.floats){if(!Array.isArray(t.floats))throw TypeError(".onnx.AttributeProto.floats: array expected");o.floats=[];for(var i=0;i<t.floats.length;++i)o.floats[i]=Number(t.floats[i])}if(t.ints){if(!Array.isArray(t.ints))throw TypeError(".onnx.AttributeProto.ints: array expected");o.ints=[];for(var i=0;i<t.ints.length;++i)E.Long?(o.ints[i]=E.Long.fromValue(t.ints[i])).unsigned=!1:typeof t.ints[i]=="string"?o.ints[i]=parseInt(t.ints[i],10):typeof t.ints[i]=="number"?o.ints[i]=t.ints[i]:typeof t.ints[i]=="object"&&(o.ints[i]=new E.LongBits(t.ints[i].low>>>0,t.ints[i].high>>>0).toNumber())}if(t.strings){if(!Array.isArray(t.strings))throw TypeError(".onnx.AttributeProto.strings: array expected");o.strings=[];for(var i=0;i<t.strings.length;++i)typeof t.strings[i]=="string"?E.base64.decode(t.strings[i],o.strings[i]=E.newBuffer(E.base64.length(t.strings[i])),0):t.strings[i].length>=0&&(o.strings[i]=t.strings[i])}if(t.tensors){if(!Array.isArray(t.tensors))throw TypeError(".onnx.AttributeProto.tensors: array expected");o.tensors=[];for(var i=0;i<t.tensors.length;++i){if(typeof t.tensors[i]!="object")throw TypeError(".onnx.AttributeProto.tensors: object expected");o.tensors[i]=S.onnx.TensorProto.fromObject(t.tensors[i])}}if(t.graphs){if(!Array.isArray(t.graphs))throw TypeError(".onnx.AttributeProto.graphs: array expected");o.graphs=[];for(var i=0;i<t.graphs.length;++i){if(typeof t.graphs[i]!="object")throw TypeError(".onnx.AttributeProto.graphs: object expected");o.graphs[i]=S.onnx.GraphProto.fromObject(t.graphs[i])}}if(t.sparseTensors){if(!Array.isArray(t.sparseTensors))throw TypeError(".onnx.AttributeProto.sparseTensors: array expected");o.sparseTensors=[];for(var i=0;i<t.sparseTensors.length;++i){if(typeof t.sparseTensors[i]!="object")throw TypeError(".onnx.AttributeProto.sparseTensors: object expected");o.sparseTensors[i]=S.onnx.SparseTensorProto.fromObject(t.sparseTensors[i])}}if(t.typeProtos){if(!Array.isArray(t.typeProtos))throw TypeError(".onnx.AttributeProto.typeProtos: array expected");o.typeProtos=[];for(var i=0;i<t.typeProtos.length;++i){if(typeof t.typeProtos[i]!="object")throw TypeError(".onnx.AttributeProto.typeProtos: object expected");o.typeProtos[i]=S.onnx.TypeProto.fromObject(t.typeProtos[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.floats=[],i.ints=[],i.strings=[],i.tensors=[],i.graphs=[],i.typeProtos=[],i.sparseTensors=[]),o.defaults){if(i.name="",i.f=0,E.Long){var s=new E.Long(0,0,!1);i.i=o.longs===String?s.toString():o.longs===Number?s.toNumber():s}else i.i=o.longs===String?"0":0;o.bytes===String?i.s="":(i.s=[],o.bytes!==Array&&(i.s=E.newBuffer(i.s))),i.t=null,i.g=null,i.docString="",i.tp=null,i.type=o.enums===String?"UNDEFINED":0,i.refAttrName="",i.sparseTensor=null}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.f!=null&&t.hasOwnProperty("f")&&(i.f=o.json&&!isFinite(t.f)?String(t.f):t.f),t.i!=null&&t.hasOwnProperty("i")&&(typeof t.i=="number"?i.i=o.longs===String?String(t.i):t.i:i.i=o.longs===String?E.Long.prototype.toString.call(t.i):o.longs===Number?new E.LongBits(t.i.low>>>0,t.i.high>>>0).toNumber():t.i),t.s!=null&&t.hasOwnProperty("s")&&(i.s=o.bytes===String?E.base64.encode(t.s,0,t.s.length):o.bytes===Array?Array.prototype.slice.call(t.s):t.s),t.t!=null&&t.hasOwnProperty("t")&&(i.t=S.onnx.TensorProto.toObject(t.t,o)),t.g!=null&&t.hasOwnProperty("g")&&(i.g=S.onnx.GraphProto.toObject(t.g,o)),t.floats&&t.floats.length){i.floats=[];for(var a=0;a<t.floats.length;++a)i.floats[a]=o.json&&!isFinite(t.floats[a])?String(t.floats[a]):t.floats[a]}if(t.ints&&t.ints.length){i.ints=[];for(var a=0;a<t.ints.length;++a)typeof t.ints[a]=="number"?i.ints[a]=o.longs===String?String(t.ints[a]):t.ints[a]:i.ints[a]=o.longs===String?E.Long.prototype.toString.call(t.ints[a]):o.longs===Number?new E.LongBits(t.ints[a].low>>>0,t.ints[a].high>>>0).toNumber():t.ints[a]}if(t.strings&&t.strings.length){i.strings=[];for(var a=0;a<t.strings.length;++a)i.strings[a]=o.bytes===String?E.base64.encode(t.strings[a],0,t.strings[a].length):o.bytes===Array?Array.prototype.slice.call(t.strings[a]):t.strings[a]}if(t.tensors&&t.tensors.length){i.tensors=[];for(var a=0;a<t.tensors.length;++a)i.tensors[a]=S.onnx.TensorProto.toObject(t.tensors[a],o)}if(t.graphs&&t.graphs.length){i.graphs=[];for(var a=0;a<t.graphs.length;++a)i.graphs[a]=S.onnx.GraphProto.toObject(t.graphs[a],o)}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.tp!=null&&t.hasOwnProperty("tp")&&(i.tp=S.onnx.TypeProto.toObject(t.tp,o)),t.typeProtos&&t.typeProtos.length){i.typeProtos=[];for(var a=0;a<t.typeProtos.length;++a)i.typeProtos[a]=S.onnx.TypeProto.toObject(t.typeProtos[a],o)}if(t.type!=null&&t.hasOwnProperty("type")&&(i.type=o.enums===String?S.onnx.AttributeProto.AttributeType[t.type]===void 0?t.type:S.onnx.AttributeProto.AttributeType[t.type]:t.type),t.refAttrName!=null&&t.hasOwnProperty("refAttrName")&&(i.refAttrName=t.refAttrName),t.sparseTensor!=null&&t.hasOwnProperty("sparseTensor")&&(i.sparseTensor=S.onnx.SparseTensorProto.toObject(t.sparseTensor,o)),t.sparseTensors&&t.sparseTensors.length){i.sparseTensors=[];for(var a=0;a<t.sparseTensors.length;++a)i.sparseTensors[a]=S.onnx.SparseTensorProto.toObject(t.sparseTensors[a],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Je.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.AttributeProto"},e.AttributeType=function(){var n={},t=Object.create(n);return t[n[0]="UNDEFINED"]=0,t[n[1]="FLOAT"]=1,t[n[2]="INT"]=2,t[n[3]="STRING"]=3,t[n[4]="TENSOR"]=4,t[n[5]="GRAPH"]=5,t[n[11]="SPARSE_TENSOR"]=11,t[n[13]="TYPE_PROTO"]=13,t[n[6]="FLOATS"]=6,t[n[7]="INTS"]=7,t[n[8]="STRINGS"]=8,t[n[9]="TENSORS"]=9,t[n[10]="GRAPHS"]=10,t[n[12]="SPARSE_TENSORS"]=12,t[n[14]="TYPE_PROTOS"]=14,t}(),e}(),r.ValueInfoProto=function(){function e(n){if(n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.name="",e.prototype.type=null,e.prototype.docString="",e.create=function(t){return new e(t)},e.encode=function(t,o){return o||(o=pt.create()),t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(10).string(t.name),t.type!=null&&Object.hasOwnProperty.call(t,"type")&&S.onnx.TypeProto.encode(t.type,o.uint32(18).fork()).ldelim(),t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(26).string(t.docString),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof re||(t=re.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new S.onnx.ValueInfoProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.name=t.string();break}case 2:{s.type=S.onnx.TypeProto.decode(t,t.uint32());break}case 3:{s.docString=t.string();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof re||(t=new re(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!E.isString(t.name))return"name: string expected";if(t.type!=null&&t.hasOwnProperty("type")){var o=S.onnx.TypeProto.verify(t.type);if(o)return"type."+o}return t.docString!=null&&t.hasOwnProperty("docString")&&!E.isString(t.docString)?"docString: string expected":null},e.fromObject=function(t){if(t instanceof S.onnx.ValueInfoProto)return t;var o=new S.onnx.ValueInfoProto;if(t.name!=null&&(o.name=String(t.name)),t.type!=null){if(typeof t.type!="object")throw TypeError(".onnx.ValueInfoProto.type: object expected");o.type=S.onnx.TypeProto.fromObject(t.type)}return t.docString!=null&&(o.docString=String(t.docString)),o},e.toObject=function(t,o){o||(o={});var i={};return o.defaults&&(i.name="",i.type=null,i.docString=""),t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.type!=null&&t.hasOwnProperty("type")&&(i.type=S.onnx.TypeProto.toObject(t.type,o)),t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Je.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.ValueInfoProto"},e}(),r.NodeProto=function(){function e(n){if(this.input=[],this.output=[],this.attribute=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.input=E.emptyArray,e.prototype.output=E.emptyArray,e.prototype.name="",e.prototype.opType="",e.prototype.domain="",e.prototype.attribute=E.emptyArray,e.prototype.docString="",e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=pt.create()),t.input!=null&&t.input.length)for(var i=0;i<t.input.length;++i)o.uint32(10).string(t.input[i]);if(t.output!=null&&t.output.length)for(var i=0;i<t.output.length;++i)o.uint32(18).string(t.output[i]);if(t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(26).string(t.name),t.opType!=null&&Object.hasOwnProperty.call(t,"opType")&&o.uint32(34).string(t.opType),t.attribute!=null&&t.attribute.length)for(var i=0;i<t.attribute.length;++i)S.onnx.AttributeProto.encode(t.attribute[i],o.uint32(42).fork()).ldelim();return t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(50).string(t.docString),t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(58).string(t.domain),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof re||(t=re.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new S.onnx.NodeProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.input&&s.input.length||(s.input=[]),s.input.push(t.string());break}case 2:{s.output&&s.output.length||(s.output=[]),s.output.push(t.string());break}case 3:{s.name=t.string();break}case 4:{s.opType=t.string();break}case 7:{s.domain=t.string();break}case 5:{s.attribute&&s.attribute.length||(s.attribute=[]),s.attribute.push(S.onnx.AttributeProto.decode(t,t.uint32()));break}case 6:{s.docString=t.string();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof re||(t=new re(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var o=0;o<t.input.length;++o)if(!E.isString(t.input[o]))return"input: string[] expected"}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(var o=0;o<t.output.length;++o)if(!E.isString(t.output[o]))return"output: string[] expected"}if(t.name!=null&&t.hasOwnProperty("name")&&!E.isString(t.name))return"name: string expected";if(t.opType!=null&&t.hasOwnProperty("opType")&&!E.isString(t.opType))return"opType: string expected";if(t.domain!=null&&t.hasOwnProperty("domain")&&!E.isString(t.domain))return"domain: string expected";if(t.attribute!=null&&t.hasOwnProperty("attribute")){if(!Array.isArray(t.attribute))return"attribute: array expected";for(var o=0;o<t.attribute.length;++o){var i=S.onnx.AttributeProto.verify(t.attribute[o]);if(i)return"attribute."+i}}return t.docString!=null&&t.hasOwnProperty("docString")&&!E.isString(t.docString)?"docString: string expected":null},e.fromObject=function(t){if(t instanceof S.onnx.NodeProto)return t;var o=new S.onnx.NodeProto;if(t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.NodeProto.input: array expected");o.input=[];for(var i=0;i<t.input.length;++i)o.input[i]=String(t.input[i])}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.NodeProto.output: array expected");o.output=[];for(var i=0;i<t.output.length;++i)o.output[i]=String(t.output[i])}if(t.name!=null&&(o.name=String(t.name)),t.opType!=null&&(o.opType=String(t.opType)),t.domain!=null&&(o.domain=String(t.domain)),t.attribute){if(!Array.isArray(t.attribute))throw TypeError(".onnx.NodeProto.attribute: array expected");o.attribute=[];for(var i=0;i<t.attribute.length;++i){if(typeof t.attribute[i]!="object")throw TypeError(".onnx.NodeProto.attribute: object expected");o.attribute[i]=S.onnx.AttributeProto.fromObject(t.attribute[i])}}return t.docString!=null&&(o.docString=String(t.docString)),o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.input=[],i.output=[],i.attribute=[]),o.defaults&&(i.name="",i.opType="",i.docString="",i.domain=""),t.input&&t.input.length){i.input=[];for(var s=0;s<t.input.length;++s)i.input[s]=t.input[s]}if(t.output&&t.output.length){i.output=[];for(var s=0;s<t.output.length;++s)i.output[s]=t.output[s]}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.opType!=null&&t.hasOwnProperty("opType")&&(i.opType=t.opType),t.attribute&&t.attribute.length){i.attribute=[];for(var s=0;s<t.attribute.length;++s)i.attribute[s]=S.onnx.AttributeProto.toObject(t.attribute[s],o)}return t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Je.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.NodeProto"},e}(),r.TrainingInfoProto=function(){function e(n){if(this.initializationBinding=[],this.updateBinding=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.initialization=null,e.prototype.algorithm=null,e.prototype.initializationBinding=E.emptyArray,e.prototype.updateBinding=E.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=pt.create()),t.initialization!=null&&Object.hasOwnProperty.call(t,"initialization")&&S.onnx.GraphProto.encode(t.initialization,o.uint32(10).fork()).ldelim(),t.algorithm!=null&&Object.hasOwnProperty.call(t,"algorithm")&&S.onnx.GraphProto.encode(t.algorithm,o.uint32(18).fork()).ldelim(),t.initializationBinding!=null&&t.initializationBinding.length)for(var i=0;i<t.initializationBinding.length;++i)S.onnx.StringStringEntryProto.encode(t.initializationBinding[i],o.uint32(26).fork()).ldelim();if(t.updateBinding!=null&&t.updateBinding.length)for(var i=0;i<t.updateBinding.length;++i)S.onnx.StringStringEntryProto.encode(t.updateBinding[i],o.uint32(34).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof re||(t=re.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new S.onnx.TrainingInfoProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.initialization=S.onnx.GraphProto.decode(t,t.uint32());break}case 2:{s.algorithm=S.onnx.GraphProto.decode(t,t.uint32());break}case 3:{s.initializationBinding&&s.initializationBinding.length||(s.initializationBinding=[]),s.initializationBinding.push(S.onnx.StringStringEntryProto.decode(t,t.uint32()));break}case 4:{s.updateBinding&&s.updateBinding.length||(s.updateBinding=[]),s.updateBinding.push(S.onnx.StringStringEntryProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof re||(t=new re(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.initialization!=null&&t.hasOwnProperty("initialization")){var o=S.onnx.GraphProto.verify(t.initialization);if(o)return"initialization."+o}if(t.algorithm!=null&&t.hasOwnProperty("algorithm")){var o=S.onnx.GraphProto.verify(t.algorithm);if(o)return"algorithm."+o}if(t.initializationBinding!=null&&t.hasOwnProperty("initializationBinding")){if(!Array.isArray(t.initializationBinding))return"initializationBinding: array expected";for(var i=0;i<t.initializationBinding.length;++i){var o=S.onnx.StringStringEntryProto.verify(t.initializationBinding[i]);if(o)return"initializationBinding."+o}}if(t.updateBinding!=null&&t.hasOwnProperty("updateBinding")){if(!Array.isArray(t.updateBinding))return"updateBinding: array expected";for(var i=0;i<t.updateBinding.length;++i){var o=S.onnx.StringStringEntryProto.verify(t.updateBinding[i]);if(o)return"updateBinding."+o}}return null},e.fromObject=function(t){if(t instanceof S.onnx.TrainingInfoProto)return t;var o=new S.onnx.TrainingInfoProto;if(t.initialization!=null){if(typeof t.initialization!="object")throw TypeError(".onnx.TrainingInfoProto.initialization: object expected");o.initialization=S.onnx.GraphProto.fromObject(t.initialization)}if(t.algorithm!=null){if(typeof t.algorithm!="object")throw TypeError(".onnx.TrainingInfoProto.algorithm: object expected");o.algorithm=S.onnx.GraphProto.fromObject(t.algorithm)}if(t.initializationBinding){if(!Array.isArray(t.initializationBinding))throw TypeError(".onnx.TrainingInfoProto.initializationBinding: array expected");o.initializationBinding=[];for(var i=0;i<t.initializationBinding.length;++i){if(typeof t.initializationBinding[i]!="object")throw TypeError(".onnx.TrainingInfoProto.initializationBinding: object expected");o.initializationBinding[i]=S.onnx.StringStringEntryProto.fromObject(t.initializationBinding[i])}}if(t.updateBinding){if(!Array.isArray(t.updateBinding))throw TypeError(".onnx.TrainingInfoProto.updateBinding: array expected");o.updateBinding=[];for(var i=0;i<t.updateBinding.length;++i){if(typeof t.updateBinding[i]!="object")throw TypeError(".onnx.TrainingInfoProto.updateBinding: object expected");o.updateBinding[i]=S.onnx.StringStringEntryProto.fromObject(t.updateBinding[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.initializationBinding=[],i.updateBinding=[]),o.defaults&&(i.initialization=null,i.algorithm=null),t.initialization!=null&&t.hasOwnProperty("initialization")&&(i.initialization=S.onnx.GraphProto.toObject(t.initialization,o)),t.algorithm!=null&&t.hasOwnProperty("algorithm")&&(i.algorithm=S.onnx.GraphProto.toObject(t.algorithm,o)),t.initializationBinding&&t.initializationBinding.length){i.initializationBinding=[];for(var s=0;s<t.initializationBinding.length;++s)i.initializationBinding[s]=S.onnx.StringStringEntryProto.toObject(t.initializationBinding[s],o)}if(t.updateBinding&&t.updateBinding.length){i.updateBinding=[];for(var s=0;s<t.updateBinding.length;++s)i.updateBinding[s]=S.onnx.StringStringEntryProto.toObject(t.updateBinding[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Je.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TrainingInfoProto"},e}(),r.ModelProto=function(){function e(n){if(this.opsetImport=[],this.metadataProps=[],this.trainingInfo=[],this.functions=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.irVersion=E.Long?E.Long.fromBits(0,0,!1):0,e.prototype.opsetImport=E.emptyArray,e.prototype.producerName="",e.prototype.producerVersion="",e.prototype.domain="",e.prototype.modelVersion=E.Long?E.Long.fromBits(0,0,!1):0,e.prototype.docString="",e.prototype.graph=null,e.prototype.metadataProps=E.emptyArray,e.prototype.trainingInfo=E.emptyArray,e.prototype.functions=E.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=pt.create()),t.irVersion!=null&&Object.hasOwnProperty.call(t,"irVersion")&&o.uint32(8).int64(t.irVersion),t.producerName!=null&&Object.hasOwnProperty.call(t,"producerName")&&o.uint32(18).string(t.producerName),t.producerVersion!=null&&Object.hasOwnProperty.call(t,"producerVersion")&&o.uint32(26).string(t.producerVersion),t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(34).string(t.domain),t.modelVersion!=null&&Object.hasOwnProperty.call(t,"modelVersion")&&o.uint32(40).int64(t.modelVersion),t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(50).string(t.docString),t.graph!=null&&Object.hasOwnProperty.call(t,"graph")&&S.onnx.GraphProto.encode(t.graph,o.uint32(58).fork()).ldelim(),t.opsetImport!=null&&t.opsetImport.length)for(var i=0;i<t.opsetImport.length;++i)S.onnx.OperatorSetIdProto.encode(t.opsetImport[i],o.uint32(66).fork()).ldelim();if(t.metadataProps!=null&&t.metadataProps.length)for(var i=0;i<t.metadataProps.length;++i)S.onnx.StringStringEntryProto.encode(t.metadataProps[i],o.uint32(114).fork()).ldelim();if(t.trainingInfo!=null&&t.trainingInfo.length)for(var i=0;i<t.trainingInfo.length;++i)S.onnx.TrainingInfoProto.encode(t.trainingInfo[i],o.uint32(162).fork()).ldelim();if(t.functions!=null&&t.functions.length)for(var i=0;i<t.functions.length;++i)S.onnx.FunctionProto.encode(t.functions[i],o.uint32(202).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof re||(t=re.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new S.onnx.ModelProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.irVersion=t.int64();break}case 8:{s.opsetImport&&s.opsetImport.length||(s.opsetImport=[]),s.opsetImport.push(S.onnx.OperatorSetIdProto.decode(t,t.uint32()));break}case 2:{s.producerName=t.string();break}case 3:{s.producerVersion=t.string();break}case 4:{s.domain=t.string();break}case 5:{s.modelVersion=t.int64();break}case 6:{s.docString=t.string();break}case 7:{s.graph=S.onnx.GraphProto.decode(t,t.uint32());break}case 14:{s.metadataProps&&s.metadataProps.length||(s.metadataProps=[]),s.metadataProps.push(S.onnx.StringStringEntryProto.decode(t,t.uint32()));break}case 20:{s.trainingInfo&&s.trainingInfo.length||(s.trainingInfo=[]),s.trainingInfo.push(S.onnx.TrainingInfoProto.decode(t,t.uint32()));break}case 25:{s.functions&&s.functions.length||(s.functions=[]),s.functions.push(S.onnx.FunctionProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof re||(t=new re(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.irVersion!=null&&t.hasOwnProperty("irVersion")&&!E.isInteger(t.irVersion)&&!(t.irVersion&&E.isInteger(t.irVersion.low)&&E.isInteger(t.irVersion.high)))return"irVersion: integer|Long expected";if(t.opsetImport!=null&&t.hasOwnProperty("opsetImport")){if(!Array.isArray(t.opsetImport))return"opsetImport: array expected";for(var o=0;o<t.opsetImport.length;++o){var i=S.onnx.OperatorSetIdProto.verify(t.opsetImport[o]);if(i)return"opsetImport."+i}}if(t.producerName!=null&&t.hasOwnProperty("producerName")&&!E.isString(t.producerName))return"producerName: string expected";if(t.producerVersion!=null&&t.hasOwnProperty("producerVersion")&&!E.isString(t.producerVersion))return"producerVersion: string expected";if(t.domain!=null&&t.hasOwnProperty("domain")&&!E.isString(t.domain))return"domain: string expected";if(t.modelVersion!=null&&t.hasOwnProperty("modelVersion")&&!E.isInteger(t.modelVersion)&&!(t.modelVersion&&E.isInteger(t.modelVersion.low)&&E.isInteger(t.modelVersion.high)))return"modelVersion: integer|Long expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!E.isString(t.docString))return"docString: string expected";if(t.graph!=null&&t.hasOwnProperty("graph")){var i=S.onnx.GraphProto.verify(t.graph);if(i)return"graph."+i}if(t.metadataProps!=null&&t.hasOwnProperty("metadataProps")){if(!Array.isArray(t.metadataProps))return"metadataProps: array expected";for(var o=0;o<t.metadataProps.length;++o){var i=S.onnx.StringStringEntryProto.verify(t.metadataProps[o]);if(i)return"metadataProps."+i}}if(t.trainingInfo!=null&&t.hasOwnProperty("trainingInfo")){if(!Array.isArray(t.trainingInfo))return"trainingInfo: array expected";for(var o=0;o<t.trainingInfo.length;++o){var i=S.onnx.TrainingInfoProto.verify(t.trainingInfo[o]);if(i)return"trainingInfo."+i}}if(t.functions!=null&&t.hasOwnProperty("functions")){if(!Array.isArray(t.functions))return"functions: array expected";for(var o=0;o<t.functions.length;++o){var i=S.onnx.FunctionProto.verify(t.functions[o]);if(i)return"functions."+i}}return null},e.fromObject=function(t){if(t instanceof S.onnx.ModelProto)return t;var o=new S.onnx.ModelProto;if(t.irVersion!=null&&(E.Long?(o.irVersion=E.Long.fromValue(t.irVersion)).unsigned=!1:typeof t.irVersion=="string"?o.irVersion=parseInt(t.irVersion,10):typeof t.irVersion=="number"?o.irVersion=t.irVersion:typeof t.irVersion=="object"&&(o.irVersion=new E.LongBits(t.irVersion.low>>>0,t.irVersion.high>>>0).toNumber())),t.opsetImport){if(!Array.isArray(t.opsetImport))throw TypeError(".onnx.ModelProto.opsetImport: array expected");o.opsetImport=[];for(var i=0;i<t.opsetImport.length;++i){if(typeof t.opsetImport[i]!="object")throw TypeError(".onnx.ModelProto.opsetImport: object expected");o.opsetImport[i]=S.onnx.OperatorSetIdProto.fromObject(t.opsetImport[i])}}if(t.producerName!=null&&(o.producerName=String(t.producerName)),t.producerVersion!=null&&(o.producerVersion=String(t.producerVersion)),t.domain!=null&&(o.domain=String(t.domain)),t.modelVersion!=null&&(E.Long?(o.modelVersion=E.Long.fromValue(t.modelVersion)).unsigned=!1:typeof t.modelVersion=="string"?o.modelVersion=parseInt(t.modelVersion,10):typeof t.modelVersion=="number"?o.modelVersion=t.modelVersion:typeof t.modelVersion=="object"&&(o.modelVersion=new E.LongBits(t.modelVersion.low>>>0,t.modelVersion.high>>>0).toNumber())),t.docString!=null&&(o.docString=String(t.docString)),t.graph!=null){if(typeof t.graph!="object")throw TypeError(".onnx.ModelProto.graph: object expected");o.graph=S.onnx.GraphProto.fromObject(t.graph)}if(t.metadataProps){if(!Array.isArray(t.metadataProps))throw TypeError(".onnx.ModelProto.metadataProps: array expected");o.metadataProps=[];for(var i=0;i<t.metadataProps.length;++i){if(typeof t.metadataProps[i]!="object")throw TypeError(".onnx.ModelProto.metadataProps: object expected");o.metadataProps[i]=S.onnx.StringStringEntryProto.fromObject(t.metadataProps[i])}}if(t.trainingInfo){if(!Array.isArray(t.trainingInfo))throw TypeError(".onnx.ModelProto.trainingInfo: array expected");o.trainingInfo=[];for(var i=0;i<t.trainingInfo.length;++i){if(typeof t.trainingInfo[i]!="object")throw TypeError(".onnx.ModelProto.trainingInfo: object expected");o.trainingInfo[i]=S.onnx.TrainingInfoProto.fromObject(t.trainingInfo[i])}}if(t.functions){if(!Array.isArray(t.functions))throw TypeError(".onnx.ModelProto.functions: array expected");o.functions=[];for(var i=0;i<t.functions.length;++i){if(typeof t.functions[i]!="object")throw TypeError(".onnx.ModelProto.functions: object expected");o.functions[i]=S.onnx.FunctionProto.fromObject(t.functions[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.opsetImport=[],i.metadataProps=[],i.trainingInfo=[],i.functions=[]),o.defaults){if(E.Long){var s=new E.Long(0,0,!1);i.irVersion=o.longs===String?s.toString():o.longs===Number?s.toNumber():s}else i.irVersion=o.longs===String?"0":0;if(i.producerName="",i.producerVersion="",i.domain="",E.Long){var s=new E.Long(0,0,!1);i.modelVersion=o.longs===String?s.toString():o.longs===Number?s.toNumber():s}else i.modelVersion=o.longs===String?"0":0;i.docString="",i.graph=null}if(t.irVersion!=null&&t.hasOwnProperty("irVersion")&&(typeof t.irVersion=="number"?i.irVersion=o.longs===String?String(t.irVersion):t.irVersion:i.irVersion=o.longs===String?E.Long.prototype.toString.call(t.irVersion):o.longs===Number?new E.LongBits(t.irVersion.low>>>0,t.irVersion.high>>>0).toNumber():t.irVersion),t.producerName!=null&&t.hasOwnProperty("producerName")&&(i.producerName=t.producerName),t.producerVersion!=null&&t.hasOwnProperty("producerVersion")&&(i.producerVersion=t.producerVersion),t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),t.modelVersion!=null&&t.hasOwnProperty("modelVersion")&&(typeof t.modelVersion=="number"?i.modelVersion=o.longs===String?String(t.modelVersion):t.modelVersion:i.modelVersion=o.longs===String?E.Long.prototype.toString.call(t.modelVersion):o.longs===Number?new E.LongBits(t.modelVersion.low>>>0,t.modelVersion.high>>>0).toNumber():t.modelVersion),t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.graph!=null&&t.hasOwnProperty("graph")&&(i.graph=S.onnx.GraphProto.toObject(t.graph,o)),t.opsetImport&&t.opsetImport.length){i.opsetImport=[];for(var a=0;a<t.opsetImport.length;++a)i.opsetImport[a]=S.onnx.OperatorSetIdProto.toObject(t.opsetImport[a],o)}if(t.metadataProps&&t.metadataProps.length){i.metadataProps=[];for(var a=0;a<t.metadataProps.length;++a)i.metadataProps[a]=S.onnx.StringStringEntryProto.toObject(t.metadataProps[a],o)}if(t.trainingInfo&&t.trainingInfo.length){i.trainingInfo=[];for(var a=0;a<t.trainingInfo.length;++a)i.trainingInfo[a]=S.onnx.TrainingInfoProto.toObject(t.trainingInfo[a],o)}if(t.functions&&t.functions.length){i.functions=[];for(var a=0;a<t.functions.length;++a)i.functions[a]=S.onnx.FunctionProto.toObject(t.functions[a],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Je.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.ModelProto"},e}(),r.StringStringEntryProto=function(){function e(n){if(n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.key="",e.prototype.value="",e.create=function(t){return new e(t)},e.encode=function(t,o){return o||(o=pt.create()),t.key!=null&&Object.hasOwnProperty.call(t,"key")&&o.uint32(10).string(t.key),t.value!=null&&Object.hasOwnProperty.call(t,"value")&&o.uint32(18).string(t.value),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof re||(t=re.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new S.onnx.StringStringEntryProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.key=t.string();break}case 2:{s.value=t.string();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof re||(t=new re(t)),this.decode(t,t.uint32())},e.verify=function(t){return typeof t!="object"||t===null?"object expected":t.key!=null&&t.hasOwnProperty("key")&&!E.isString(t.key)?"key: string expected":t.value!=null&&t.hasOwnProperty("value")&&!E.isString(t.value)?"value: string expected":null},e.fromObject=function(t){if(t instanceof S.onnx.StringStringEntryProto)return t;var o=new S.onnx.StringStringEntryProto;return t.key!=null&&(o.key=String(t.key)),t.value!=null&&(o.value=String(t.value)),o},e.toObject=function(t,o){o||(o={});var i={};return o.defaults&&(i.key="",i.value=""),t.key!=null&&t.hasOwnProperty("key")&&(i.key=t.key),t.value!=null&&t.hasOwnProperty("value")&&(i.value=t.value),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Je.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.StringStringEntryProto"},e}(),r.TensorAnnotation=function(){function e(n){if(this.quantParameterTensorNames=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.tensorName="",e.prototype.quantParameterTensorNames=E.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=pt.create()),t.tensorName!=null&&Object.hasOwnProperty.call(t,"tensorName")&&o.uint32(10).string(t.tensorName),t.quantParameterTensorNames!=null&&t.quantParameterTensorNames.length)for(var i=0;i<t.quantParameterTensorNames.length;++i)S.onnx.StringStringEntryProto.encode(t.quantParameterTensorNames[i],o.uint32(18).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof re||(t=re.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new S.onnx.TensorAnnotation;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.tensorName=t.string();break}case 2:{s.quantParameterTensorNames&&s.quantParameterTensorNames.length||(s.quantParameterTensorNames=[]),s.quantParameterTensorNames.push(S.onnx.StringStringEntryProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof re||(t=new re(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.tensorName!=null&&t.hasOwnProperty("tensorName")&&!E.isString(t.tensorName))return"tensorName: string expected";if(t.quantParameterTensorNames!=null&&t.hasOwnProperty("quantParameterTensorNames")){if(!Array.isArray(t.quantParameterTensorNames))return"quantParameterTensorNames: array expected";for(var o=0;o<t.quantParameterTensorNames.length;++o){var i=S.onnx.StringStringEntryProto.verify(t.quantParameterTensorNames[o]);if(i)return"quantParameterTensorNames."+i}}return null},e.fromObject=function(t){if(t instanceof S.onnx.TensorAnnotation)return t;var o=new S.onnx.TensorAnnotation;if(t.tensorName!=null&&(o.tensorName=String(t.tensorName)),t.quantParameterTensorNames){if(!Array.isArray(t.quantParameterTensorNames))throw TypeError(".onnx.TensorAnnotation.quantParameterTensorNames: array expected");o.quantParameterTensorNames=[];for(var i=0;i<t.quantParameterTensorNames.length;++i){if(typeof t.quantParameterTensorNames[i]!="object")throw TypeError(".onnx.TensorAnnotation.quantParameterTensorNames: object expected");o.quantParameterTensorNames[i]=S.onnx.StringStringEntryProto.fromObject(t.quantParameterTensorNames[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.quantParameterTensorNames=[]),o.defaults&&(i.tensorName=""),t.tensorName!=null&&t.hasOwnProperty("tensorName")&&(i.tensorName=t.tensorName),t.quantParameterTensorNames&&t.quantParameterTensorNames.length){i.quantParameterTensorNames=[];for(var s=0;s<t.quantParameterTensorNames.length;++s)i.quantParameterTensorNames[s]=S.onnx.StringStringEntryProto.toObject(t.quantParameterTensorNames[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Je.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TensorAnnotation"},e}(),r.GraphProto=function(){function e(n){if(this.node=[],this.initializer=[],this.sparseInitializer=[],this.input=[],this.output=[],this.valueInfo=[],this.quantizationAnnotation=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.node=E.emptyArray,e.prototype.name="",e.prototype.initializer=E.emptyArray,e.prototype.sparseInitializer=E.emptyArray,e.prototype.docString="",e.prototype.input=E.emptyArray,e.prototype.output=E.emptyArray,e.prototype.valueInfo=E.emptyArray,e.prototype.quantizationAnnotation=E.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=pt.create()),t.node!=null&&t.node.length)for(var i=0;i<t.node.length;++i)S.onnx.NodeProto.encode(t.node[i],o.uint32(10).fork()).ldelim();if(t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(18).string(t.name),t.initializer!=null&&t.initializer.length)for(var i=0;i<t.initializer.length;++i)S.onnx.TensorProto.encode(t.initializer[i],o.uint32(42).fork()).ldelim();if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(82).string(t.docString),t.input!=null&&t.input.length)for(var i=0;i<t.input.length;++i)S.onnx.ValueInfoProto.encode(t.input[i],o.uint32(90).fork()).ldelim();if(t.output!=null&&t.output.length)for(var i=0;i<t.output.length;++i)S.onnx.ValueInfoProto.encode(t.output[i],o.uint32(98).fork()).ldelim();if(t.valueInfo!=null&&t.valueInfo.length)for(var i=0;i<t.valueInfo.length;++i)S.onnx.ValueInfoProto.encode(t.valueInfo[i],o.uint32(106).fork()).ldelim();if(t.quantizationAnnotation!=null&&t.quantizationAnnotation.length)for(var i=0;i<t.quantizationAnnotation.length;++i)S.onnx.TensorAnnotation.encode(t.quantizationAnnotation[i],o.uint32(114).fork()).ldelim();if(t.sparseInitializer!=null&&t.sparseInitializer.length)for(var i=0;i<t.sparseInitializer.length;++i)S.onnx.SparseTensorProto.encode(t.sparseInitializer[i],o.uint32(122).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof re||(t=re.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new S.onnx.GraphProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.node&&s.node.length||(s.node=[]),s.node.push(S.onnx.NodeProto.decode(t,t.uint32()));break}case 2:{s.name=t.string();break}case 5:{s.initializer&&s.initializer.length||(s.initializer=[]),s.initializer.push(S.onnx.TensorProto.decode(t,t.uint32()));break}case 15:{s.sparseInitializer&&s.sparseInitializer.length||(s.sparseInitializer=[]),s.sparseInitializer.push(S.onnx.SparseTensorProto.decode(t,t.uint32()));break}case 10:{s.docString=t.string();break}case 11:{s.input&&s.input.length||(s.input=[]),s.input.push(S.onnx.ValueInfoProto.decode(t,t.uint32()));break}case 12:{s.output&&s.output.length||(s.output=[]),s.output.push(S.onnx.ValueInfoProto.decode(t,t.uint32()));break}case 13:{s.valueInfo&&s.valueInfo.length||(s.valueInfo=[]),s.valueInfo.push(S.onnx.ValueInfoProto.decode(t,t.uint32()));break}case 14:{s.quantizationAnnotation&&s.quantizationAnnotation.length||(s.quantizationAnnotation=[]),s.quantizationAnnotation.push(S.onnx.TensorAnnotation.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof re||(t=new re(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.node!=null&&t.hasOwnProperty("node")){if(!Array.isArray(t.node))return"node: array expected";for(var o=0;o<t.node.length;++o){var i=S.onnx.NodeProto.verify(t.node[o]);if(i)return"node."+i}}if(t.name!=null&&t.hasOwnProperty("name")&&!E.isString(t.name))return"name: string expected";if(t.initializer!=null&&t.hasOwnProperty("initializer")){if(!Array.isArray(t.initializer))return"initializer: array expected";for(var o=0;o<t.initializer.length;++o){var i=S.onnx.TensorProto.verify(t.initializer[o]);if(i)return"initializer."+i}}if(t.sparseInitializer!=null&&t.hasOwnProperty("sparseInitializer")){if(!Array.isArray(t.sparseInitializer))return"sparseInitializer: array expected";for(var o=0;o<t.sparseInitializer.length;++o){var i=S.onnx.SparseTensorProto.verify(t.sparseInitializer[o]);if(i)return"sparseInitializer."+i}}if(t.docString!=null&&t.hasOwnProperty("docString")&&!E.isString(t.docString))return"docString: string expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var o=0;o<t.input.length;++o){var i=S.onnx.ValueInfoProto.verify(t.input[o]);if(i)return"input."+i}}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(var o=0;o<t.output.length;++o){var i=S.onnx.ValueInfoProto.verify(t.output[o]);if(i)return"output."+i}}if(t.valueInfo!=null&&t.hasOwnProperty("valueInfo")){if(!Array.isArray(t.valueInfo))return"valueInfo: array expected";for(var o=0;o<t.valueInfo.length;++o){var i=S.onnx.ValueInfoProto.verify(t.valueInfo[o]);if(i)return"valueInfo."+i}}if(t.quantizationAnnotation!=null&&t.hasOwnProperty("quantizationAnnotation")){if(!Array.isArray(t.quantizationAnnotation))return"quantizationAnnotation: array expected";for(var o=0;o<t.quantizationAnnotation.length;++o){var i=S.onnx.TensorAnnotation.verify(t.quantizationAnnotation[o]);if(i)return"quantizationAnnotation."+i}}return null},e.fromObject=function(t){if(t instanceof S.onnx.GraphProto)return t;var o=new S.onnx.GraphProto;if(t.node){if(!Array.isArray(t.node))throw TypeError(".onnx.GraphProto.node: array expected");o.node=[];for(var i=0;i<t.node.length;++i){if(typeof t.node[i]!="object")throw TypeError(".onnx.GraphProto.node: object expected");o.node[i]=S.onnx.NodeProto.fromObject(t.node[i])}}if(t.name!=null&&(o.name=String(t.name)),t.initializer){if(!Array.isArray(t.initializer))throw TypeError(".onnx.GraphProto.initializer: array expected");o.initializer=[];for(var i=0;i<t.initializer.length;++i){if(typeof t.initializer[i]!="object")throw TypeError(".onnx.GraphProto.initializer: object expected");o.initializer[i]=S.onnx.TensorProto.fromObject(t.initializer[i])}}if(t.sparseInitializer){if(!Array.isArray(t.sparseInitializer))throw TypeError(".onnx.GraphProto.sparseInitializer: array expected");o.sparseInitializer=[];for(var i=0;i<t.sparseInitializer.length;++i){if(typeof t.sparseInitializer[i]!="object")throw TypeError(".onnx.GraphProto.sparseInitializer: object expected");o.sparseInitializer[i]=S.onnx.SparseTensorProto.fromObject(t.sparseInitializer[i])}}if(t.docString!=null&&(o.docString=String(t.docString)),t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.GraphProto.input: array expected");o.input=[];for(var i=0;i<t.input.length;++i){if(typeof t.input[i]!="object")throw TypeError(".onnx.GraphProto.input: object expected");o.input[i]=S.onnx.ValueInfoProto.fromObject(t.input[i])}}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.GraphProto.output: array expected");o.output=[];for(var i=0;i<t.output.length;++i){if(typeof t.output[i]!="object")throw TypeError(".onnx.GraphProto.output: object expected");o.output[i]=S.onnx.ValueInfoProto.fromObject(t.output[i])}}if(t.valueInfo){if(!Array.isArray(t.valueInfo))throw TypeError(".onnx.GraphProto.valueInfo: array expected");o.valueInfo=[];for(var i=0;i<t.valueInfo.length;++i){if(typeof t.valueInfo[i]!="object")throw TypeError(".onnx.GraphProto.valueInfo: object expected");o.valueInfo[i]=S.onnx.ValueInfoProto.fromObject(t.valueInfo[i])}}if(t.quantizationAnnotation){if(!Array.isArray(t.quantizationAnnotation))throw TypeError(".onnx.GraphProto.quantizationAnnotation: array expected");o.quantizationAnnotation=[];for(var i=0;i<t.quantizationAnnotation.length;++i){if(typeof t.quantizationAnnotation[i]!="object")throw TypeError(".onnx.GraphProto.quantizationAnnotation: object expected");o.quantizationAnnotation[i]=S.onnx.TensorAnnotation.fromObject(t.quantizationAnnotation[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.node=[],i.initializer=[],i.input=[],i.output=[],i.valueInfo=[],i.quantizationAnnotation=[],i.sparseInitializer=[]),o.defaults&&(i.name="",i.docString=""),t.node&&t.node.length){i.node=[];for(var s=0;s<t.node.length;++s)i.node[s]=S.onnx.NodeProto.toObject(t.node[s],o)}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.initializer&&t.initializer.length){i.initializer=[];for(var s=0;s<t.initializer.length;++s)i.initializer[s]=S.onnx.TensorProto.toObject(t.initializer[s],o)}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.input&&t.input.length){i.input=[];for(var s=0;s<t.input.length;++s)i.input[s]=S.onnx.ValueInfoProto.toObject(t.input[s],o)}if(t.output&&t.output.length){i.output=[];for(var s=0;s<t.output.length;++s)i.output[s]=S.onnx.ValueInfoProto.toObject(t.output[s],o)}if(t.valueInfo&&t.valueInfo.length){i.valueInfo=[];for(var s=0;s<t.valueInfo.length;++s)i.valueInfo[s]=S.onnx.ValueInfoProto.toObject(t.valueInfo[s],o)}if(t.quantizationAnnotation&&t.quantizationAnnotation.length){i.quantizationAnnotation=[];for(var s=0;s<t.quantizationAnnotation.length;++s)i.quantizationAnnotation[s]=S.onnx.TensorAnnotation.toObject(t.quantizationAnnotation[s],o)}if(t.sparseInitializer&&t.sparseInitializer.length){i.sparseInitializer=[];for(var s=0;s<t.sparseInitializer.length;++s)i.sparseInitializer[s]=S.onnx.SparseTensorProto.toObject(t.sparseInitializer[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Je.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.GraphProto"},e}(),r.TensorProto=function(){function e(n){if(this.dims=[],this.floatData=[],this.int32Data=[],this.stringData=[],this.int64Data=[],this.externalData=[],this.doubleData=[],this.uint64Data=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.dims=E.emptyArray,e.prototype.dataType=0,e.prototype.segment=null,e.prototype.floatData=E.emptyArray,e.prototype.int32Data=E.emptyArray,e.prototype.stringData=E.emptyArray,e.prototype.int64Data=E.emptyArray,e.prototype.name="",e.prototype.docString="",e.prototype.rawData=E.newBuffer([]),e.prototype.externalData=E.emptyArray,e.prototype.dataLocation=0,e.prototype.doubleData=E.emptyArray,e.prototype.uint64Data=E.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=pt.create()),t.dims!=null&&t.dims.length){o.uint32(10).fork();for(var i=0;i<t.dims.length;++i)o.int64(t.dims[i]);o.ldelim()}if(t.dataType!=null&&Object.hasOwnProperty.call(t,"dataType")&&o.uint32(16).int32(t.dataType),t.segment!=null&&Object.hasOwnProperty.call(t,"segment")&&S.onnx.TensorProto.Segment.encode(t.segment,o.uint32(26).fork()).ldelim(),t.floatData!=null&&t.floatData.length){o.uint32(34).fork();for(var i=0;i<t.floatData.length;++i)o.float(t.floatData[i]);o.ldelim()}if(t.int32Data!=null&&t.int32Data.length){o.uint32(42).fork();for(var i=0;i<t.int32Data.length;++i)o.int32(t.int32Data[i]);o.ldelim()}if(t.stringData!=null&&t.stringData.length)for(var i=0;i<t.stringData.length;++i)o.uint32(50).bytes(t.stringData[i]);if(t.int64Data!=null&&t.int64Data.length){o.uint32(58).fork();for(var i=0;i<t.int64Data.length;++i)o.int64(t.int64Data[i]);o.ldelim()}if(t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(66).string(t.name),t.rawData!=null&&Object.hasOwnProperty.call(t,"rawData")&&o.uint32(74).bytes(t.rawData),t.doubleData!=null&&t.doubleData.length){o.uint32(82).fork();for(var i=0;i<t.doubleData.length;++i)o.double(t.doubleData[i]);o.ldelim()}if(t.uint64Data!=null&&t.uint64Data.length){o.uint32(90).fork();for(var i=0;i<t.uint64Data.length;++i)o.uint64(t.uint64Data[i]);o.ldelim()}if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(98).string(t.docString),t.externalData!=null&&t.externalData.length)for(var i=0;i<t.externalData.length;++i)S.onnx.StringStringEntryProto.encode(t.externalData[i],o.uint32(106).fork()).ldelim();return t.dataLocation!=null&&Object.hasOwnProperty.call(t,"dataLocation")&&o.uint32(112).int32(t.dataLocation),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof re||(t=re.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new S.onnx.TensorProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{if(s.dims&&s.dims.length||(s.dims=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.dims.push(t.int64());else s.dims.push(t.int64());break}case 2:{s.dataType=t.int32();break}case 3:{s.segment=S.onnx.TensorProto.Segment.decode(t,t.uint32());break}case 4:{if(s.floatData&&s.floatData.length||(s.floatData=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.floatData.push(t.float());else s.floatData.push(t.float());break}case 5:{if(s.int32Data&&s.int32Data.length||(s.int32Data=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.int32Data.push(t.int32());else s.int32Data.push(t.int32());break}case 6:{s.stringData&&s.stringData.length||(s.stringData=[]),s.stringData.push(t.bytes());break}case 7:{if(s.int64Data&&s.int64Data.length||(s.int64Data=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.int64Data.push(t.int64());else s.int64Data.push(t.int64());break}case 8:{s.name=t.string();break}case 12:{s.docString=t.string();break}case 9:{s.rawData=t.bytes();break}case 13:{s.externalData&&s.externalData.length||(s.externalData=[]),s.externalData.push(S.onnx.StringStringEntryProto.decode(t,t.uint32()));break}case 14:{s.dataLocation=t.int32();break}case 10:{if(s.doubleData&&s.doubleData.length||(s.doubleData=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.doubleData.push(t.double());else s.doubleData.push(t.double());break}case 11:{if(s.uint64Data&&s.uint64Data.length||(s.uint64Data=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.uint64Data.push(t.uint64());else s.uint64Data.push(t.uint64());break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof re||(t=new re(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.dims!=null&&t.hasOwnProperty("dims")){if(!Array.isArray(t.dims))return"dims: array expected";for(var o=0;o<t.dims.length;++o)if(!E.isInteger(t.dims[o])&&!(t.dims[o]&&E.isInteger(t.dims[o].low)&&E.isInteger(t.dims[o].high)))return"dims: integer|Long[] expected"}if(t.dataType!=null&&t.hasOwnProperty("dataType")&&!E.isInteger(t.dataType))return"dataType: integer expected";if(t.segment!=null&&t.hasOwnProperty("segment")){var i=S.onnx.TensorProto.Segment.verify(t.segment);if(i)return"segment."+i}if(t.floatData!=null&&t.hasOwnProperty("floatData")){if(!Array.isArray(t.floatData))return"floatData: array expected";for(var o=0;o<t.floatData.length;++o)if(typeof t.floatData[o]!="number")return"floatData: number[] expected"}if(t.int32Data!=null&&t.hasOwnProperty("int32Data")){if(!Array.isArray(t.int32Data))return"int32Data: array expected";for(var o=0;o<t.int32Data.length;++o)if(!E.isInteger(t.int32Data[o]))return"int32Data: integer[] expected"}if(t.stringData!=null&&t.hasOwnProperty("stringData")){if(!Array.isArray(t.stringData))return"stringData: array expected";for(var o=0;o<t.stringData.length;++o)if(!(t.stringData[o]&&typeof t.stringData[o].length=="number"||E.isString(t.stringData[o])))return"stringData: buffer[] expected"}if(t.int64Data!=null&&t.hasOwnProperty("int64Data")){if(!Array.isArray(t.int64Data))return"int64Data: array expected";for(var o=0;o<t.int64Data.length;++o)if(!E.isInteger(t.int64Data[o])&&!(t.int64Data[o]&&E.isInteger(t.int64Data[o].low)&&E.isInteger(t.int64Data[o].high)))return"int64Data: integer|Long[] expected"}if(t.name!=null&&t.hasOwnProperty("name")&&!E.isString(t.name))return"name: string expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!E.isString(t.docString))return"docString: string expected";if(t.rawData!=null&&t.hasOwnProperty("rawData")&&!(t.rawData&&typeof t.rawData.length=="number"||E.isString(t.rawData)))return"rawData: buffer expected";if(t.externalData!=null&&t.hasOwnProperty("externalData")){if(!Array.isArray(t.externalData))return"externalData: array expected";for(var o=0;o<t.externalData.length;++o){var i=S.onnx.StringStringEntryProto.verify(t.externalData[o]);if(i)return"externalData."+i}}if(t.dataLocation!=null&&t.hasOwnProperty("dataLocation"))switch(t.dataLocation){default:return"dataLocation: enum value expected";case 0:case 1:break}if(t.doubleData!=null&&t.hasOwnProperty("doubleData")){if(!Array.isArray(t.doubleData))return"doubleData: array expected";for(var o=0;o<t.doubleData.length;++o)if(typeof t.doubleData[o]!="number")return"doubleData: number[] expected"}if(t.uint64Data!=null&&t.hasOwnProperty("uint64Data")){if(!Array.isArray(t.uint64Data))return"uint64Data: array expected";for(var o=0;o<t.uint64Data.length;++o)if(!E.isInteger(t.uint64Data[o])&&!(t.uint64Data[o]&&E.isInteger(t.uint64Data[o].low)&&E.isInteger(t.uint64Data[o].high)))return"uint64Data: integer|Long[] expected"}return null},e.fromObject=function(t){if(t instanceof S.onnx.TensorProto)return t;var o=new S.onnx.TensorProto;if(t.dims){if(!Array.isArray(t.dims))throw TypeError(".onnx.TensorProto.dims: array expected");o.dims=[];for(var i=0;i<t.dims.length;++i)E.Long?(o.dims[i]=E.Long.fromValue(t.dims[i])).unsigned=!1:typeof t.dims[i]=="string"?o.dims[i]=parseInt(t.dims[i],10):typeof t.dims[i]=="number"?o.dims[i]=t.dims[i]:typeof t.dims[i]=="object"&&(o.dims[i]=new E.LongBits(t.dims[i].low>>>0,t.dims[i].high>>>0).toNumber())}if(t.dataType!=null&&(o.dataType=t.dataType|0),t.segment!=null){if(typeof t.segment!="object")throw TypeError(".onnx.TensorProto.segment: object expected");o.segment=S.onnx.TensorProto.Segment.fromObject(t.segment)}if(t.floatData){if(!Array.isArray(t.floatData))throw TypeError(".onnx.TensorProto.floatData: array expected");o.floatData=[];for(var i=0;i<t.floatData.length;++i)o.floatData[i]=Number(t.floatData[i])}if(t.int32Data){if(!Array.isArray(t.int32Data))throw TypeError(".onnx.TensorProto.int32Data: array expected");o.int32Data=[];for(var i=0;i<t.int32Data.length;++i)o.int32Data[i]=t.int32Data[i]|0}if(t.stringData){if(!Array.isArray(t.stringData))throw TypeError(".onnx.TensorProto.stringData: array expected");o.stringData=[];for(var i=0;i<t.stringData.length;++i)typeof t.stringData[i]=="string"?E.base64.decode(t.stringData[i],o.stringData[i]=E.newBuffer(E.base64.length(t.stringData[i])),0):t.stringData[i].length>=0&&(o.stringData[i]=t.stringData[i])}if(t.int64Data){if(!Array.isArray(t.int64Data))throw TypeError(".onnx.TensorProto.int64Data: array expected");o.int64Data=[];for(var i=0;i<t.int64Data.length;++i)E.Long?(o.int64Data[i]=E.Long.fromValue(t.int64Data[i])).unsigned=!1:typeof t.int64Data[i]=="string"?o.int64Data[i]=parseInt(t.int64Data[i],10):typeof t.int64Data[i]=="number"?o.int64Data[i]=t.int64Data[i]:typeof t.int64Data[i]=="object"&&(o.int64Data[i]=new E.LongBits(t.int64Data[i].low>>>0,t.int64Data[i].high>>>0).toNumber())}if(t.name!=null&&(o.name=String(t.name)),t.docString!=null&&(o.docString=String(t.docString)),t.rawData!=null&&(typeof t.rawData=="string"?E.base64.decode(t.rawData,o.rawData=E.newBuffer(E.base64.length(t.rawData)),0):t.rawData.length>=0&&(o.rawData=t.rawData)),t.externalData){if(!Array.isArray(t.externalData))throw TypeError(".onnx.TensorProto.externalData: array expected");o.externalData=[];for(var i=0;i<t.externalData.length;++i){if(typeof t.externalData[i]!="object")throw TypeError(".onnx.TensorProto.externalData: object expected");o.externalData[i]=S.onnx.StringStringEntryProto.fromObject(t.externalData[i])}}switch(t.dataLocation){default:if(typeof t.dataLocation=="number"){o.dataLocation=t.dataLocation;break}break;case"DEFAULT":case 0:o.dataLocation=0;break;case"EXTERNAL":case 1:o.dataLocation=1;break}if(t.doubleData){if(!Array.isArray(t.doubleData))throw TypeError(".onnx.TensorProto.doubleData: array expected");o.doubleData=[];for(var i=0;i<t.doubleData.length;++i)o.doubleData[i]=Number(t.doubleData[i])}if(t.uint64Data){if(!Array.isArray(t.uint64Data))throw TypeError(".onnx.TensorProto.uint64Data: array expected");o.uint64Data=[];for(var i=0;i<t.uint64Data.length;++i)E.Long?(o.uint64Data[i]=E.Long.fromValue(t.uint64Data[i])).unsigned=!0:typeof t.uint64Data[i]=="string"?o.uint64Data[i]=parseInt(t.uint64Data[i],10):typeof t.uint64Data[i]=="number"?o.uint64Data[i]=t.uint64Data[i]:typeof t.uint64Data[i]=="object"&&(o.uint64Data[i]=new E.LongBits(t.uint64Data[i].low>>>0,t.uint64Data[i].high>>>0).toNumber(!0))}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.dims=[],i.floatData=[],i.int32Data=[],i.stringData=[],i.int64Data=[],i.doubleData=[],i.uint64Data=[],i.externalData=[]),o.defaults&&(i.dataType=0,i.segment=null,i.name="",o.bytes===String?i.rawData="":(i.rawData=[],o.bytes!==Array&&(i.rawData=E.newBuffer(i.rawData))),i.docString="",i.dataLocation=o.enums===String?"DEFAULT":0),t.dims&&t.dims.length){i.dims=[];for(var s=0;s<t.dims.length;++s)typeof t.dims[s]=="number"?i.dims[s]=o.longs===String?String(t.dims[s]):t.dims[s]:i.dims[s]=o.longs===String?E.Long.prototype.toString.call(t.dims[s]):o.longs===Number?new E.LongBits(t.dims[s].low>>>0,t.dims[s].high>>>0).toNumber():t.dims[s]}if(t.dataType!=null&&t.hasOwnProperty("dataType")&&(i.dataType=t.dataType),t.segment!=null&&t.hasOwnProperty("segment")&&(i.segment=S.onnx.TensorProto.Segment.toObject(t.segment,o)),t.floatData&&t.floatData.length){i.floatData=[];for(var s=0;s<t.floatData.length;++s)i.floatData[s]=o.json&&!isFinite(t.floatData[s])?String(t.floatData[s]):t.floatData[s]}if(t.int32Data&&t.int32Data.length){i.int32Data=[];for(var s=0;s<t.int32Data.length;++s)i.int32Data[s]=t.int32Data[s]}if(t.stringData&&t.stringData.length){i.stringData=[];for(var s=0;s<t.stringData.length;++s)i.stringData[s]=o.bytes===String?E.base64.encode(t.stringData[s],0,t.stringData[s].length):o.bytes===Array?Array.prototype.slice.call(t.stringData[s]):t.stringData[s]}if(t.int64Data&&t.int64Data.length){i.int64Data=[];for(var s=0;s<t.int64Data.length;++s)typeof t.int64Data[s]=="number"?i.int64Data[s]=o.longs===String?String(t.int64Data[s]):t.int64Data[s]:i.int64Data[s]=o.longs===String?E.Long.prototype.toString.call(t.int64Data[s]):o.longs===Number?new E.LongBits(t.int64Data[s].low>>>0,t.int64Data[s].high>>>0).toNumber():t.int64Data[s]}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.rawData!=null&&t.hasOwnProperty("rawData")&&(i.rawData=o.bytes===String?E.base64.encode(t.rawData,0,t.rawData.length):o.bytes===Array?Array.prototype.slice.call(t.rawData):t.rawData),t.doubleData&&t.doubleData.length){i.doubleData=[];for(var s=0;s<t.doubleData.length;++s)i.doubleData[s]=o.json&&!isFinite(t.doubleData[s])?String(t.doubleData[s]):t.doubleData[s]}if(t.uint64Data&&t.uint64Data.length){i.uint64Data=[];for(var s=0;s<t.uint64Data.length;++s)typeof t.uint64Data[s]=="number"?i.uint64Data[s]=o.longs===String?String(t.uint64Data[s]):t.uint64Data[s]:i.uint64Data[s]=o.longs===String?E.Long.prototype.toString.call(t.uint64Data[s]):o.longs===Number?new E.LongBits(t.uint64Data[s].low>>>0,t.uint64Data[s].high>>>0).toNumber(!0):t.uint64Data[s]}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.externalData&&t.externalData.length){i.externalData=[];for(var s=0;s<t.externalData.length;++s)i.externalData[s]=S.onnx.StringStringEntryProto.toObject(t.externalData[s],o)}return t.dataLocation!=null&&t.hasOwnProperty("dataLocation")&&(i.dataLocation=o.enums===String?S.onnx.TensorProto.DataLocation[t.dataLocation]===void 0?t.dataLocation:S.onnx.TensorProto.DataLocation[t.dataLocation]:t.dataLocation),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Je.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TensorProto"},e.DataType=function(){var n={},t=Object.create(n);return t[n[0]="UNDEFINED"]=0,t[n[1]="FLOAT"]=1,t[n[2]="UINT8"]=2,t[n[3]="INT8"]=3,t[n[4]="UINT16"]=4,t[n[5]="INT16"]=5,t[n[6]="INT32"]=6,t[n[7]="INT64"]=7,t[n[8]="STRING"]=8,t[n[9]="BOOL"]=9,t[n[10]="FLOAT16"]=10,t[n[11]="DOUBLE"]=11,t[n[12]="UINT32"]=12,t[n[13]="UINT64"]=13,t[n[14]="COMPLEX64"]=14,t[n[15]="COMPLEX128"]=15,t[n[16]="BFLOAT16"]=16,t[n[17]="FLOAT8E4M3FN"]=17,t[n[18]="FLOAT8E4M3FNUZ"]=18,t[n[19]="FLOAT8E5M2"]=19,t[n[20]="FLOAT8E5M2FNUZ"]=20,t}(),e.Segment=function(){function n(t){if(t)for(var o=Object.keys(t),i=0;i<o.length;++i)t[o[i]]!=null&&(this[o[i]]=t[o[i]])}return n.prototype.begin=E.Long?E.Long.fromBits(0,0,!1):0,n.prototype.end=E.Long?E.Long.fromBits(0,0,!1):0,n.create=function(o){return new n(o)},n.encode=function(o,i){return i||(i=pt.create()),o.begin!=null&&Object.hasOwnProperty.call(o,"begin")&&i.uint32(8).int64(o.begin),o.end!=null&&Object.hasOwnProperty.call(o,"end")&&i.uint32(16).int64(o.end),i},n.encodeDelimited=function(o,i){return this.encode(o,i).ldelim()},n.decode=function(o,i){o instanceof re||(o=re.create(o));for(var s=i===void 0?o.len:o.pos+i,a=new S.onnx.TensorProto.Segment;o.pos<s;){var u=o.uint32();switch(u>>>3){case 1:{a.begin=o.int64();break}case 2:{a.end=o.int64();break}default:o.skipType(u&7);break}}return a},n.decodeDelimited=function(o){return o instanceof re||(o=new re(o)),this.decode(o,o.uint32())},n.verify=function(o){return typeof o!="object"||o===null?"object expected":o.begin!=null&&o.hasOwnProperty("begin")&&!E.isInteger(o.begin)&&!(o.begin&&E.isInteger(o.begin.low)&&E.isInteger(o.begin.high))?"begin: integer|Long expected":o.end!=null&&o.hasOwnProperty("end")&&!E.isInteger(o.end)&&!(o.end&&E.isInteger(o.end.low)&&E.isInteger(o.end.high))?"end: integer|Long expected":null},n.fromObject=function(o){if(o instanceof S.onnx.TensorProto.Segment)return o;var i=new S.onnx.TensorProto.Segment;return o.begin!=null&&(E.Long?(i.begin=E.Long.fromValue(o.begin)).unsigned=!1:typeof o.begin=="string"?i.begin=parseInt(o.begin,10):typeof o.begin=="number"?i.begin=o.begin:typeof o.begin=="object"&&(i.begin=new E.LongBits(o.begin.low>>>0,o.begin.high>>>0).toNumber())),o.end!=null&&(E.Long?(i.end=E.Long.fromValue(o.end)).unsigned=!1:typeof o.end=="string"?i.end=parseInt(o.end,10):typeof o.end=="number"?i.end=o.end:typeof o.end=="object"&&(i.end=new E.LongBits(o.end.low>>>0,o.end.high>>>0).toNumber())),i},n.toObject=function(o,i){i||(i={});var s={};if(i.defaults){if(E.Long){var a=new E.Long(0,0,!1);s.begin=i.longs===String?a.toString():i.longs===Number?a.toNumber():a}else s.begin=i.longs===String?"0":0;if(E.Long){var a=new E.Long(0,0,!1);s.end=i.longs===String?a.toString():i.longs===Number?a.toNumber():a}else s.end=i.longs===String?"0":0}return o.begin!=null&&o.hasOwnProperty("begin")&&(typeof o.begin=="number"?s.begin=i.longs===String?String(o.begin):o.begin:s.begin=i.longs===String?E.Long.prototype.toString.call(o.begin):i.longs===Number?new E.LongBits(o.begin.low>>>0,o.begin.high>>>0).toNumber():o.begin),o.end!=null&&o.hasOwnProperty("end")&&(typeof o.end=="number"?s.end=i.longs===String?String(o.end):o.end:s.end=i.longs===String?E.Long.prototype.toString.call(o.end):i.longs===Number?new E.LongBits(o.end.low>>>0,o.end.high>>>0).toNumber():o.end),s},n.prototype.toJSON=function(){return this.constructor.toObject(this,Je.util.toJSONOptions)},n.getTypeUrl=function(o){return o===void 0&&(o="type.googleapis.com"),o+"/onnx.TensorProto.Segment"},n}(),e.DataLocation=function(){var n={},t=Object.create(n);return t[n[0]="DEFAULT"]=0,t[n[1]="EXTERNAL"]=1,t}(),e}(),r.SparseTensorProto=function(){function e(n){if(this.dims=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.values=null,e.prototype.indices=null,e.prototype.dims=E.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=pt.create()),t.values!=null&&Object.hasOwnProperty.call(t,"values")&&S.onnx.TensorProto.encode(t.values,o.uint32(10).fork()).ldelim(),t.indices!=null&&Object.hasOwnProperty.call(t,"indices")&&S.onnx.TensorProto.encode(t.indices,o.uint32(18).fork()).ldelim(),t.dims!=null&&t.dims.length){o.uint32(26).fork();for(var i=0;i<t.dims.length;++i)o.int64(t.dims[i]);o.ldelim()}return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof re||(t=re.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new S.onnx.SparseTensorProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.values=S.onnx.TensorProto.decode(t,t.uint32());break}case 2:{s.indices=S.onnx.TensorProto.decode(t,t.uint32());break}case 3:{if(s.dims&&s.dims.length||(s.dims=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.dims.push(t.int64());else s.dims.push(t.int64());break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof re||(t=new re(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.values!=null&&t.hasOwnProperty("values")){var o=S.onnx.TensorProto.verify(t.values);if(o)return"values."+o}if(t.indices!=null&&t.hasOwnProperty("indices")){var o=S.onnx.TensorProto.verify(t.indices);if(o)return"indices."+o}if(t.dims!=null&&t.hasOwnProperty("dims")){if(!Array.isArray(t.dims))return"dims: array expected";for(var i=0;i<t.dims.length;++i)if(!E.isInteger(t.dims[i])&&!(t.dims[i]&&E.isInteger(t.dims[i].low)&&E.isInteger(t.dims[i].high)))return"dims: integer|Long[] expected"}return null},e.fromObject=function(t){if(t instanceof S.onnx.SparseTensorProto)return t;var o=new S.onnx.SparseTensorProto;if(t.values!=null){if(typeof t.values!="object")throw TypeError(".onnx.SparseTensorProto.values: object expected");o.values=S.onnx.TensorProto.fromObject(t.values)}if(t.indices!=null){if(typeof t.indices!="object")throw TypeError(".onnx.SparseTensorProto.indices: object expected");o.indices=S.onnx.TensorProto.fromObject(t.indices)}if(t.dims){if(!Array.isArray(t.dims))throw TypeError(".onnx.SparseTensorProto.dims: array expected");o.dims=[];for(var i=0;i<t.dims.length;++i)E.Long?(o.dims[i]=E.Long.fromValue(t.dims[i])).unsigned=!1:typeof t.dims[i]=="string"?o.dims[i]=parseInt(t.dims[i],10):typeof t.dims[i]=="number"?o.dims[i]=t.dims[i]:typeof t.dims[i]=="object"&&(o.dims[i]=new E.LongBits(t.dims[i].low>>>0,t.dims[i].high>>>0).toNumber())}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.dims=[]),o.defaults&&(i.values=null,i.indices=null),t.values!=null&&t.hasOwnProperty("values")&&(i.values=S.onnx.TensorProto.toObject(t.values,o)),t.indices!=null&&t.hasOwnProperty("indices")&&(i.indices=S.onnx.TensorProto.toObject(t.indices,o)),t.dims&&t.dims.length){i.dims=[];for(var s=0;s<t.dims.length;++s)typeof t.dims[s]=="number"?i.dims[s]=o.longs===String?String(t.dims[s]):t.dims[s]:i.dims[s]=o.longs===String?E.Long.prototype.toString.call(t.dims[s]):o.longs===Number?new E.LongBits(t.dims[s].low>>>0,t.dims[s].high>>>0).toNumber():t.dims[s]}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Je.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.SparseTensorProto"},e}(),r.TensorShapeProto=function(){function e(n){if(this.dim=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.dim=E.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=pt.create()),t.dim!=null&&t.dim.length)for(var i=0;i<t.dim.length;++i)S.onnx.TensorShapeProto.Dimension.encode(t.dim[i],o.uint32(10).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof re||(t=re.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new S.onnx.TensorShapeProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.dim&&s.dim.length||(s.dim=[]),s.dim.push(S.onnx.TensorShapeProto.Dimension.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof re||(t=new re(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.dim!=null&&t.hasOwnProperty("dim")){if(!Array.isArray(t.dim))return"dim: array expected";for(var o=0;o<t.dim.length;++o){var i=S.onnx.TensorShapeProto.Dimension.verify(t.dim[o]);if(i)return"dim."+i}}return null},e.fromObject=function(t){if(t instanceof S.onnx.TensorShapeProto)return t;var o=new S.onnx.TensorShapeProto;if(t.dim){if(!Array.isArray(t.dim))throw TypeError(".onnx.TensorShapeProto.dim: array expected");o.dim=[];for(var i=0;i<t.dim.length;++i){if(typeof t.dim[i]!="object")throw TypeError(".onnx.TensorShapeProto.dim: object expected");o.dim[i]=S.onnx.TensorShapeProto.Dimension.fromObject(t.dim[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.dim=[]),t.dim&&t.dim.length){i.dim=[];for(var s=0;s<t.dim.length;++s)i.dim[s]=S.onnx.TensorShapeProto.Dimension.toObject(t.dim[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Je.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TensorShapeProto"},e.Dimension=function(){function n(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}n.prototype.dimValue=null,n.prototype.dimParam=null,n.prototype.denotation="";var t;return Object.defineProperty(n.prototype,"value",{get:E.oneOfGetter(t=["dimValue","dimParam"]),set:E.oneOfSetter(t)}),n.create=function(i){return new n(i)},n.encode=function(i,s){return s||(s=pt.create()),i.dimValue!=null&&Object.hasOwnProperty.call(i,"dimValue")&&s.uint32(8).int64(i.dimValue),i.dimParam!=null&&Object.hasOwnProperty.call(i,"dimParam")&&s.uint32(18).string(i.dimParam),i.denotation!=null&&Object.hasOwnProperty.call(i,"denotation")&&s.uint32(26).string(i.denotation),s},n.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},n.decode=function(i,s){i instanceof re||(i=re.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new S.onnx.TensorShapeProto.Dimension;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.dimValue=i.int64();break}case 2:{u.dimParam=i.string();break}case 3:{u.denotation=i.string();break}default:i.skipType(l&7);break}}return u},n.decodeDelimited=function(i){return i instanceof re||(i=new re(i)),this.decode(i,i.uint32())},n.verify=function(i){if(typeof i!="object"||i===null)return"object expected";var s={};if(i.dimValue!=null&&i.hasOwnProperty("dimValue")&&(s.value=1,!E.isInteger(i.dimValue)&&!(i.dimValue&&E.isInteger(i.dimValue.low)&&E.isInteger(i.dimValue.high))))return"dimValue: integer|Long expected";if(i.dimParam!=null&&i.hasOwnProperty("dimParam")){if(s.value===1)return"value: multiple values";if(s.value=1,!E.isString(i.dimParam))return"dimParam: string expected"}return i.denotation!=null&&i.hasOwnProperty("denotation")&&!E.isString(i.denotation)?"denotation: string expected":null},n.fromObject=function(i){if(i instanceof S.onnx.TensorShapeProto.Dimension)return i;var s=new S.onnx.TensorShapeProto.Dimension;return i.dimValue!=null&&(E.Long?(s.dimValue=E.Long.fromValue(i.dimValue)).unsigned=!1:typeof i.dimValue=="string"?s.dimValue=parseInt(i.dimValue,10):typeof i.dimValue=="number"?s.dimValue=i.dimValue:typeof i.dimValue=="object"&&(s.dimValue=new E.LongBits(i.dimValue.low>>>0,i.dimValue.high>>>0).toNumber())),i.dimParam!=null&&(s.dimParam=String(i.dimParam)),i.denotation!=null&&(s.denotation=String(i.denotation)),s},n.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.denotation=""),i.dimValue!=null&&i.hasOwnProperty("dimValue")&&(typeof i.dimValue=="number"?a.dimValue=s.longs===String?String(i.dimValue):i.dimValue:a.dimValue=s.longs===String?E.Long.prototype.toString.call(i.dimValue):s.longs===Number?new E.LongBits(i.dimValue.low>>>0,i.dimValue.high>>>0).toNumber():i.dimValue,s.oneofs&&(a.value="dimValue")),i.dimParam!=null&&i.hasOwnProperty("dimParam")&&(a.dimParam=i.dimParam,s.oneofs&&(a.value="dimParam")),i.denotation!=null&&i.hasOwnProperty("denotation")&&(a.denotation=i.denotation),a},n.prototype.toJSON=function(){return this.constructor.toObject(this,Je.util.toJSONOptions)},n.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TensorShapeProto.Dimension"},n}(),e}(),r.TypeProto=function(){function e(t){if(t)for(var o=Object.keys(t),i=0;i<o.length;++i)t[o[i]]!=null&&(this[o[i]]=t[o[i]])}e.prototype.tensorType=null,e.prototype.sequenceType=null,e.prototype.mapType=null,e.prototype.optionalType=null,e.prototype.sparseTensorType=null,e.prototype.denotation="";var n;return Object.defineProperty(e.prototype,"value",{get:E.oneOfGetter(n=["tensorType","sequenceType","mapType","optionalType","sparseTensorType"]),set:E.oneOfSetter(n)}),e.create=function(o){return new e(o)},e.encode=function(o,i){return i||(i=pt.create()),o.tensorType!=null&&Object.hasOwnProperty.call(o,"tensorType")&&S.onnx.TypeProto.Tensor.encode(o.tensorType,i.uint32(10).fork()).ldelim(),o.sequenceType!=null&&Object.hasOwnProperty.call(o,"sequenceType")&&S.onnx.TypeProto.Sequence.encode(o.sequenceType,i.uint32(34).fork()).ldelim(),o.mapType!=null&&Object.hasOwnProperty.call(o,"mapType")&&S.onnx.TypeProto.Map.encode(o.mapType,i.uint32(42).fork()).ldelim(),o.denotation!=null&&Object.hasOwnProperty.call(o,"denotation")&&i.uint32(50).string(o.denotation),o.sparseTensorType!=null&&Object.hasOwnProperty.call(o,"sparseTensorType")&&S.onnx.TypeProto.SparseTensor.encode(o.sparseTensorType,i.uint32(66).fork()).ldelim(),o.optionalType!=null&&Object.hasOwnProperty.call(o,"optionalType")&&S.onnx.TypeProto.Optional.encode(o.optionalType,i.uint32(74).fork()).ldelim(),i},e.encodeDelimited=function(o,i){return this.encode(o,i).ldelim()},e.decode=function(o,i){o instanceof re||(o=re.create(o));for(var s=i===void 0?o.len:o.pos+i,a=new S.onnx.TypeProto;o.pos<s;){var u=o.uint32();switch(u>>>3){case 1:{a.tensorType=S.onnx.TypeProto.Tensor.decode(o,o.uint32());break}case 4:{a.sequenceType=S.onnx.TypeProto.Sequence.decode(o,o.uint32());break}case 5:{a.mapType=S.onnx.TypeProto.Map.decode(o,o.uint32());break}case 9:{a.optionalType=S.onnx.TypeProto.Optional.decode(o,o.uint32());break}case 8:{a.sparseTensorType=S.onnx.TypeProto.SparseTensor.decode(o,o.uint32());break}case 6:{a.denotation=o.string();break}default:o.skipType(u&7);break}}return a},e.decodeDelimited=function(o){return o instanceof re||(o=new re(o)),this.decode(o,o.uint32())},e.verify=function(o){if(typeof o!="object"||o===null)return"object expected";var i={};if(o.tensorType!=null&&o.hasOwnProperty("tensorType")){i.value=1;{var s=S.onnx.TypeProto.Tensor.verify(o.tensorType);if(s)return"tensorType."+s}}if(o.sequenceType!=null&&o.hasOwnProperty("sequenceType")){if(i.value===1)return"value: multiple values";i.value=1;{var s=S.onnx.TypeProto.Sequence.verify(o.sequenceType);if(s)return"sequenceType."+s}}if(o.mapType!=null&&o.hasOwnProperty("mapType")){if(i.value===1)return"value: multiple values";i.value=1;{var s=S.onnx.TypeProto.Map.verify(o.mapType);if(s)return"mapType."+s}}if(o.optionalType!=null&&o.hasOwnProperty("optionalType")){if(i.value===1)return"value: multiple values";i.value=1;{var s=S.onnx.TypeProto.Optional.verify(o.optionalType);if(s)return"optionalType."+s}}if(o.sparseTensorType!=null&&o.hasOwnProperty("sparseTensorType")){if(i.value===1)return"value: multiple values";i.value=1;{var s=S.onnx.TypeProto.SparseTensor.verify(o.sparseTensorType);if(s)return"sparseTensorType."+s}}return o.denotation!=null&&o.hasOwnProperty("denotation")&&!E.isString(o.denotation)?"denotation: string expected":null},e.fromObject=function(o){if(o instanceof S.onnx.TypeProto)return o;var i=new S.onnx.TypeProto;if(o.tensorType!=null){if(typeof o.tensorType!="object")throw TypeError(".onnx.TypeProto.tensorType: object expected");i.tensorType=S.onnx.TypeProto.Tensor.fromObject(o.tensorType)}if(o.sequenceType!=null){if(typeof o.sequenceType!="object")throw TypeError(".onnx.TypeProto.sequenceType: object expected");i.sequenceType=S.onnx.TypeProto.Sequence.fromObject(o.sequenceType)}if(o.mapType!=null){if(typeof o.mapType!="object")throw TypeError(".onnx.TypeProto.mapType: object expected");i.mapType=S.onnx.TypeProto.Map.fromObject(o.mapType)}if(o.optionalType!=null){if(typeof o.optionalType!="object")throw TypeError(".onnx.TypeProto.optionalType: object expected");i.optionalType=S.onnx.TypeProto.Optional.fromObject(o.optionalType)}if(o.sparseTensorType!=null){if(typeof o.sparseTensorType!="object")throw TypeError(".onnx.TypeProto.sparseTensorType: object expected");i.sparseTensorType=S.onnx.TypeProto.SparseTensor.fromObject(o.sparseTensorType)}return o.denotation!=null&&(i.denotation=String(o.denotation)),i},e.toObject=function(o,i){i||(i={});var s={};return i.defaults&&(s.denotation=""),o.tensorType!=null&&o.hasOwnProperty("tensorType")&&(s.tensorType=S.onnx.TypeProto.Tensor.toObject(o.tensorType,i),i.oneofs&&(s.value="tensorType")),o.sequenceType!=null&&o.hasOwnProperty("sequenceType")&&(s.sequenceType=S.onnx.TypeProto.Sequence.toObject(o.sequenceType,i),i.oneofs&&(s.value="sequenceType")),o.mapType!=null&&o.hasOwnProperty("mapType")&&(s.mapType=S.onnx.TypeProto.Map.toObject(o.mapType,i),i.oneofs&&(s.value="mapType")),o.denotation!=null&&o.hasOwnProperty("denotation")&&(s.denotation=o.denotation),o.sparseTensorType!=null&&o.hasOwnProperty("sparseTensorType")&&(s.sparseTensorType=S.onnx.TypeProto.SparseTensor.toObject(o.sparseTensorType,i),i.oneofs&&(s.value="sparseTensorType")),o.optionalType!=null&&o.hasOwnProperty("optionalType")&&(s.optionalType=S.onnx.TypeProto.Optional.toObject(o.optionalType,i),i.oneofs&&(s.value="optionalType")),s},e.prototype.toJSON=function(){return this.constructor.toObject(this,Je.util.toJSONOptions)},e.getTypeUrl=function(o){return o===void 0&&(o="type.googleapis.com"),o+"/onnx.TypeProto"},e.Tensor=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.elemType=0,t.prototype.shape=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=pt.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&s.uint32(8).int32(i.elemType),i.shape!=null&&Object.hasOwnProperty.call(i,"shape")&&S.onnx.TensorShapeProto.encode(i.shape,s.uint32(18).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof re||(i=re.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new S.onnx.TypeProto.Tensor;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.elemType=i.int32();break}case 2:{u.shape=S.onnx.TensorShapeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof re||(i=new re(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")&&!E.isInteger(i.elemType))return"elemType: integer expected";if(i.shape!=null&&i.hasOwnProperty("shape")){var s=S.onnx.TensorShapeProto.verify(i.shape);if(s)return"shape."+s}return null},t.fromObject=function(i){if(i instanceof S.onnx.TypeProto.Tensor)return i;var s=new S.onnx.TypeProto.Tensor;if(i.elemType!=null&&(s.elemType=i.elemType|0),i.shape!=null){if(typeof i.shape!="object")throw TypeError(".onnx.TypeProto.Tensor.shape: object expected");s.shape=S.onnx.TensorShapeProto.fromObject(i.shape)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.elemType=0,a.shape=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=i.elemType),i.shape!=null&&i.hasOwnProperty("shape")&&(a.shape=S.onnx.TensorShapeProto.toObject(i.shape,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,Je.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Tensor"},t}(),e.Sequence=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.elemType=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=pt.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&S.onnx.TypeProto.encode(i.elemType,s.uint32(10).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof re||(i=re.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new S.onnx.TypeProto.Sequence;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.elemType=S.onnx.TypeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof re||(i=new re(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")){var s=S.onnx.TypeProto.verify(i.elemType);if(s)return"elemType."+s}return null},t.fromObject=function(i){if(i instanceof S.onnx.TypeProto.Sequence)return i;var s=new S.onnx.TypeProto.Sequence;if(i.elemType!=null){if(typeof i.elemType!="object")throw TypeError(".onnx.TypeProto.Sequence.elemType: object expected");s.elemType=S.onnx.TypeProto.fromObject(i.elemType)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.elemType=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=S.onnx.TypeProto.toObject(i.elemType,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,Je.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Sequence"},t}(),e.Map=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.keyType=0,t.prototype.valueType=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=pt.create()),i.keyType!=null&&Object.hasOwnProperty.call(i,"keyType")&&s.uint32(8).int32(i.keyType),i.valueType!=null&&Object.hasOwnProperty.call(i,"valueType")&&S.onnx.TypeProto.encode(i.valueType,s.uint32(18).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof re||(i=re.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new S.onnx.TypeProto.Map;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.keyType=i.int32();break}case 2:{u.valueType=S.onnx.TypeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof re||(i=new re(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.keyType!=null&&i.hasOwnProperty("keyType")&&!E.isInteger(i.keyType))return"keyType: integer expected";if(i.valueType!=null&&i.hasOwnProperty("valueType")){var s=S.onnx.TypeProto.verify(i.valueType);if(s)return"valueType."+s}return null},t.fromObject=function(i){if(i instanceof S.onnx.TypeProto.Map)return i;var s=new S.onnx.TypeProto.Map;if(i.keyType!=null&&(s.keyType=i.keyType|0),i.valueType!=null){if(typeof i.valueType!="object")throw TypeError(".onnx.TypeProto.Map.valueType: object expected");s.valueType=S.onnx.TypeProto.fromObject(i.valueType)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.keyType=0,a.valueType=null),i.keyType!=null&&i.hasOwnProperty("keyType")&&(a.keyType=i.keyType),i.valueType!=null&&i.hasOwnProperty("valueType")&&(a.valueType=S.onnx.TypeProto.toObject(i.valueType,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,Je.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Map"},t}(),e.Optional=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.elemType=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=pt.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&S.onnx.TypeProto.encode(i.elemType,s.uint32(10).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof re||(i=re.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new S.onnx.TypeProto.Optional;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.elemType=S.onnx.TypeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof re||(i=new re(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")){var s=S.onnx.TypeProto.verify(i.elemType);if(s)return"elemType."+s}return null},t.fromObject=function(i){if(i instanceof S.onnx.TypeProto.Optional)return i;var s=new S.onnx.TypeProto.Optional;if(i.elemType!=null){if(typeof i.elemType!="object")throw TypeError(".onnx.TypeProto.Optional.elemType: object expected");s.elemType=S.onnx.TypeProto.fromObject(i.elemType)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.elemType=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=S.onnx.TypeProto.toObject(i.elemType,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,Je.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Optional"},t}(),e.SparseTensor=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.elemType=0,t.prototype.shape=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=pt.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&s.uint32(8).int32(i.elemType),i.shape!=null&&Object.hasOwnProperty.call(i,"shape")&&S.onnx.TensorShapeProto.encode(i.shape,s.uint32(18).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof re||(i=re.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new S.onnx.TypeProto.SparseTensor;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.elemType=i.int32();break}case 2:{u.shape=S.onnx.TensorShapeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof re||(i=new re(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")&&!E.isInteger(i.elemType))return"elemType: integer expected";if(i.shape!=null&&i.hasOwnProperty("shape")){var s=S.onnx.TensorShapeProto.verify(i.shape);if(s)return"shape."+s}return null},t.fromObject=function(i){if(i instanceof S.onnx.TypeProto.SparseTensor)return i;var s=new S.onnx.TypeProto.SparseTensor;if(i.elemType!=null&&(s.elemType=i.elemType|0),i.shape!=null){if(typeof i.shape!="object")throw TypeError(".onnx.TypeProto.SparseTensor.shape: object expected");s.shape=S.onnx.TensorShapeProto.fromObject(i.shape)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.elemType=0,a.shape=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=i.elemType),i.shape!=null&&i.hasOwnProperty("shape")&&(a.shape=S.onnx.TensorShapeProto.toObject(i.shape,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,Je.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.SparseTensor"},t}(),e}(),r.OperatorSetIdProto=function(){function e(n){if(n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.domain="",e.prototype.version=E.Long?E.Long.fromBits(0,0,!1):0,e.create=function(t){return new e(t)},e.encode=function(t,o){return o||(o=pt.create()),t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(10).string(t.domain),t.version!=null&&Object.hasOwnProperty.call(t,"version")&&o.uint32(16).int64(t.version),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof re||(t=re.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new S.onnx.OperatorSetIdProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.domain=t.string();break}case 2:{s.version=t.int64();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof re||(t=new re(t)),this.decode(t,t.uint32())},e.verify=function(t){return typeof t!="object"||t===null?"object expected":t.domain!=null&&t.hasOwnProperty("domain")&&!E.isString(t.domain)?"domain: string expected":t.version!=null&&t.hasOwnProperty("version")&&!E.isInteger(t.version)&&!(t.version&&E.isInteger(t.version.low)&&E.isInteger(t.version.high))?"version: integer|Long expected":null},e.fromObject=function(t){if(t instanceof S.onnx.OperatorSetIdProto)return t;var o=new S.onnx.OperatorSetIdProto;return t.domain!=null&&(o.domain=String(t.domain)),t.version!=null&&(E.Long?(o.version=E.Long.fromValue(t.version)).unsigned=!1:typeof t.version=="string"?o.version=parseInt(t.version,10):typeof t.version=="number"?o.version=t.version:typeof t.version=="object"&&(o.version=new E.LongBits(t.version.low>>>0,t.version.high>>>0).toNumber())),o},e.toObject=function(t,o){o||(o={});var i={};if(o.defaults)if(i.domain="",E.Long){var s=new E.Long(0,0,!1);i.version=o.longs===String?s.toString():o.longs===Number?s.toNumber():s}else i.version=o.longs===String?"0":0;return t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),t.version!=null&&t.hasOwnProperty("version")&&(typeof t.version=="number"?i.version=o.longs===String?String(t.version):t.version:i.version=o.longs===String?E.Long.prototype.toString.call(t.version):o.longs===Number?new E.LongBits(t.version.low>>>0,t.version.high>>>0).toNumber():t.version),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Je.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.OperatorSetIdProto"},e}(),r.OperatorStatus=function(){var e={},n=Object.create(e);return n[e[0]="EXPERIMENTAL"]=0,n[e[1]="STABLE"]=1,n}(),r.FunctionProto=function(){function e(n){if(this.input=[],this.output=[],this.attribute=[],this.attributeProto=[],this.node=[],this.opsetImport=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.name="",e.prototype.input=E.emptyArray,e.prototype.output=E.emptyArray,e.prototype.attribute=E.emptyArray,e.prototype.attributeProto=E.emptyArray,e.prototype.node=E.emptyArray,e.prototype.docString="",e.prototype.opsetImport=E.emptyArray,e.prototype.domain="",e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=pt.create()),t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(10).string(t.name),t.input!=null&&t.input.length)for(var i=0;i<t.input.length;++i)o.uint32(34).string(t.input[i]);if(t.output!=null&&t.output.length)for(var i=0;i<t.output.length;++i)o.uint32(42).string(t.output[i]);if(t.attribute!=null&&t.attribute.length)for(var i=0;i<t.attribute.length;++i)o.uint32(50).string(t.attribute[i]);if(t.node!=null&&t.node.length)for(var i=0;i<t.node.length;++i)S.onnx.NodeProto.encode(t.node[i],o.uint32(58).fork()).ldelim();if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(66).string(t.docString),t.opsetImport!=null&&t.opsetImport.length)for(var i=0;i<t.opsetImport.length;++i)S.onnx.OperatorSetIdProto.encode(t.opsetImport[i],o.uint32(74).fork()).ldelim();if(t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(82).string(t.domain),t.attributeProto!=null&&t.attributeProto.length)for(var i=0;i<t.attributeProto.length;++i)S.onnx.AttributeProto.encode(t.attributeProto[i],o.uint32(90).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof re||(t=re.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new S.onnx.FunctionProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.name=t.string();break}case 4:{s.input&&s.input.length||(s.input=[]),s.input.push(t.string());break}case 5:{s.output&&s.output.length||(s.output=[]),s.output.push(t.string());break}case 6:{s.attribute&&s.attribute.length||(s.attribute=[]),s.attribute.push(t.string());break}case 11:{s.attributeProto&&s.attributeProto.length||(s.attributeProto=[]),s.attributeProto.push(S.onnx.AttributeProto.decode(t,t.uint32()));break}case 7:{s.node&&s.node.length||(s.node=[]),s.node.push(S.onnx.NodeProto.decode(t,t.uint32()));break}case 8:{s.docString=t.string();break}case 9:{s.opsetImport&&s.opsetImport.length||(s.opsetImport=[]),s.opsetImport.push(S.onnx.OperatorSetIdProto.decode(t,t.uint32()));break}case 10:{s.domain=t.string();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof re||(t=new re(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!E.isString(t.name))return"name: string expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var o=0;o<t.input.length;++o)if(!E.isString(t.input[o]))return"input: string[] expected"}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(var o=0;o<t.output.length;++o)if(!E.isString(t.output[o]))return"output: string[] expected"}if(t.attribute!=null&&t.hasOwnProperty("attribute")){if(!Array.isArray(t.attribute))return"attribute: array expected";for(var o=0;o<t.attribute.length;++o)if(!E.isString(t.attribute[o]))return"attribute: string[] expected"}if(t.attributeProto!=null&&t.hasOwnProperty("attributeProto")){if(!Array.isArray(t.attributeProto))return"attributeProto: array expected";for(var o=0;o<t.attributeProto.length;++o){var i=S.onnx.AttributeProto.verify(t.attributeProto[o]);if(i)return"attributeProto."+i}}if(t.node!=null&&t.hasOwnProperty("node")){if(!Array.isArray(t.node))return"node: array expected";for(var o=0;o<t.node.length;++o){var i=S.onnx.NodeProto.verify(t.node[o]);if(i)return"node."+i}}if(t.docString!=null&&t.hasOwnProperty("docString")&&!E.isString(t.docString))return"docString: string expected";if(t.opsetImport!=null&&t.hasOwnProperty("opsetImport")){if(!Array.isArray(t.opsetImport))return"opsetImport: array expected";for(var o=0;o<t.opsetImport.length;++o){var i=S.onnx.OperatorSetIdProto.verify(t.opsetImport[o]);if(i)return"opsetImport."+i}}return t.domain!=null&&t.hasOwnProperty("domain")&&!E.isString(t.domain)?"domain: string expected":null},e.fromObject=function(t){if(t instanceof S.onnx.FunctionProto)return t;var o=new S.onnx.FunctionProto;if(t.name!=null&&(o.name=String(t.name)),t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.FunctionProto.input: array expected");o.input=[];for(var i=0;i<t.input.length;++i)o.input[i]=String(t.input[i])}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.FunctionProto.output: array expected");o.output=[];for(var i=0;i<t.output.length;++i)o.output[i]=String(t.output[i])}if(t.attribute){if(!Array.isArray(t.attribute))throw TypeError(".onnx.FunctionProto.attribute: array expected");o.attribute=[];for(var i=0;i<t.attribute.length;++i)o.attribute[i]=String(t.attribute[i])}if(t.attributeProto){if(!Array.isArray(t.attributeProto))throw TypeError(".onnx.FunctionProto.attributeProto: array expected");o.attributeProto=[];for(var i=0;i<t.attributeProto.length;++i){if(typeof t.attributeProto[i]!="object")throw TypeError(".onnx.FunctionProto.attributeProto: object expected");o.attributeProto[i]=S.onnx.AttributeProto.fromObject(t.attributeProto[i])}}if(t.node){if(!Array.isArray(t.node))throw TypeError(".onnx.FunctionProto.node: array expected");o.node=[];for(var i=0;i<t.node.length;++i){if(typeof t.node[i]!="object")throw TypeError(".onnx.FunctionProto.node: object expected");o.node[i]=S.onnx.NodeProto.fromObject(t.node[i])}}if(t.docString!=null&&(o.docString=String(t.docString)),t.opsetImport){if(!Array.isArray(t.opsetImport))throw TypeError(".onnx.FunctionProto.opsetImport: array expected");o.opsetImport=[];for(var i=0;i<t.opsetImport.length;++i){if(typeof t.opsetImport[i]!="object")throw TypeError(".onnx.FunctionProto.opsetImport: object expected");o.opsetImport[i]=S.onnx.OperatorSetIdProto.fromObject(t.opsetImport[i])}}return t.domain!=null&&(o.domain=String(t.domain)),o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.input=[],i.output=[],i.attribute=[],i.node=[],i.opsetImport=[],i.attributeProto=[]),o.defaults&&(i.name="",i.docString="",i.domain=""),t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.input&&t.input.length){i.input=[];for(var s=0;s<t.input.length;++s)i.input[s]=t.input[s]}if(t.output&&t.output.length){i.output=[];for(var s=0;s<t.output.length;++s)i.output[s]=t.output[s]}if(t.attribute&&t.attribute.length){i.attribute=[];for(var s=0;s<t.attribute.length;++s)i.attribute[s]=t.attribute[s]}if(t.node&&t.node.length){i.node=[];for(var s=0;s<t.node.length;++s)i.node[s]=S.onnx.NodeProto.toObject(t.node[s],o)}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.opsetImport&&t.opsetImport.length){i.opsetImport=[];for(var s=0;s<t.opsetImport.length;++s)i.opsetImport[s]=S.onnx.OperatorSetIdProto.toObject(t.opsetImport[s],o)}if(t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),t.attributeProto&&t.attributeProto.length){i.attributeProto=[];for(var s=0;s<t.attributeProto.length;++s)i.attributeProto[s]=S.onnx.AttributeProto.toObject(t.attributeProto[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Je.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.FunctionProto"},e}(),r}();Ud.exports=S});function Gn(r,e){if(!r)throw new Error(typeof e=="string"?e:e())}function Oo(r){return new TextDecoder().decode(r)}var Qe,fn,$s,Bt,Vi,At,Wt,ae,Ao,pn,hn,mn,We=D(()=>{"use strict";Li();ls();Qe=zn(Un());gn();fn=class{static arraysEqual(e,n){if(e.length!==n.length)return!1;for(let t=0;t<e.length;t++)if(e[t]!==n[t])return!1;return!0}},$s=class{static preprocessInputShapes(e,n){let t=e.length===1?[1,e[0]]:e,o=n.length===1?[n[0],1]:n;return[t,o]}static postprocessOutputShape(e,n,t){n===1&&e.splice(e.length-2,1),t===1&&e.pop()}static calcMatMulShape(e,n){return e[1]!==n[0]?void 0:[e[0],n[1]]}},Bt=class r{static calcShape(e,n,t=!1){let o=e.length,i=n.length;if(o===0)return n;if(i===0)return e;let s=Math.max(e.length,n.length),a=new Array(s);if(t){if(o<2||i<2)return;let u=$s.calcMatMulShape([e[o-2],e[o-1]],[n[i-2],n[i-1]]);if(u===void 0)return;[a[s-2],a[s-1]]=u}for(let u=t?3:1;u<=s;u++){let l=o-u<0?1:e[o-u],d=i-u<0?1:n[i-u];if(l!==d&&l>1&&d>1)return;a[s-u]=Math.max(l,d)}return a}static index(e,n){let t=new Array(n.length);return r.fillIndex(e,n,t),t}static fillIndex(e,n,t){let o=e.length-n.length;for(let i=0;i<n.length;i++)t[i]=e[o+i]%n[i]}static calc(e,n,t,o,i){let s=r.calcShape(e.dims,n.dims);if(s){if(o&&!ae.areEqual(s,e.dims))return;let a=ae.size(s),u=o?e:new bt(s,i||e.type);if(s.length===0)u.set([],t(e.get([]),n.get([])));else{let l=new Array(s.length),d=new Array(e.dims.length),p=new Array(n.dims.length),h=0,g=0,y=!1,w=!1;e.dims.length===0&&(h=e.get([]),y=!0),n.dims.length===0&&(g=n.get([]),w=!0);let I;for(let T=0;T<a;T++){I=T;for(let $=s.length-1;$>=0;$--)l[$]=I%s[$],I=Math.floor(I/s[$]);y||(r.fillIndex(l,e.dims,d),h=e.get(d)),w||(r.fillIndex(l,n.dims,p),g=n.get(p)),u.set(l,t(h,g))}}return u}}static isValidBroadcast(e,n){let t=e.length,o=n.length;if(t>o)return!1;for(let i=1;i<=t;i++)if(e[t-i]!==1&&e[t-i]!==n[o-i])return!1;return!0}static getBroadcastDims(e,n){let t=e.length,o=[];for(let i=0;i<t;i++){let s=t-1-i,a=e[s]||1;(n[n.length-1-i]||1)>1&&a===1&&o.unshift(s)}return o}},Vi=class{static getShapeOfGemmResult(e,n,t,o,i){if(e.length!==2||t.length!==2)throw new Error("shape need to be of size 2");let s,a,u;n?(s=e[1],a=e[0]):(s=e[0],a=e[1]);let l=-1;if(o?(u=t[0],l=1):(u=t[1],l=0),t[l]!==a)throw new Error("dimension mismatch");if(s<=0||u<=0||a<=0)throw new Error("invalid shape specified");if(i&&!Bt.isValidBroadcast(i,[s,u]))throw new Error("gemm: invalid bias shape for broadcast");return[s,u,a]}},At=class r{static tensorDataTypeFromProto(e){switch(e){case Qe.onnx.TensorProto.DataType.INT8:return"int8";case Qe.onnx.TensorProto.DataType.UINT8:return"uint8";case Qe.onnx.TensorProto.DataType.BOOL:return"bool";case Qe.onnx.TensorProto.DataType.INT16:return"int16";case Qe.onnx.TensorProto.DataType.UINT16:return"uint16";case Qe.onnx.TensorProto.DataType.INT32:return"int32";case Qe.onnx.TensorProto.DataType.UINT32:return"uint32";case Qe.onnx.TensorProto.DataType.FLOAT:return"float32";case Qe.onnx.TensorProto.DataType.DOUBLE:return"float64";case Qe.onnx.TensorProto.DataType.STRING:return"string";case Qe.onnx.TensorProto.DataType.INT64:return"int32";case Qe.onnx.TensorProto.DataType.UINT64:return"uint32";default:throw new Error(`unsupported data type: ${Qe.onnx.TensorProto.DataType[e]}`)}}static tensorDataTypeStringToEnum(e){switch(e){case"int8":return Qe.onnx.TensorProto.DataType.INT8;case"uint8":return Qe.onnx.TensorProto.DataType.UINT8;case"bool":return Qe.onnx.TensorProto.DataType.BOOL;case"int16":return Qe.onnx.TensorProto.DataType.INT16;case"uint16":return Qe.onnx.TensorProto.DataType.UINT16;case"int32":return Qe.onnx.TensorProto.DataType.INT32;case"uint32":return Qe.onnx.TensorProto.DataType.UINT32;case"float32":return Qe.onnx.TensorProto.DataType.FLOAT;case"float64":return Qe.onnx.TensorProto.DataType.DOUBLE;case"string":return Qe.onnx.TensorProto.DataType.STRING;case"int64":return Qe.onnx.TensorProto.DataType.INT64;case"uint64":return Qe.onnx.TensorProto.DataType.UINT64;default:throw new Error(`unsupported data type: ${e}`)}}static tensorDimsFromProto(e){return e.map(n=>Mr.isLong(n)?n.toNumber():n)}static tensorValueTypeFromProto(e){return{tensorType:r.tensorDataTypeFromProto(e.elemType),shape:{dims:r.tensorDimsFromProto(e.shape.dim.map(n=>n.dimValue))}}}static tensorDimsFromORTFormat(e){let n=[];for(let t=0;t<e.dimsLength();t++)n.push(Wt.longToNumber(e.dims(t)));return n}static tensorAttributesFromORTFormat(e){let n=[];for(let t=0;t<e.attributesLength();t++)n.push(e.attributes(t));return n}},Wt=class{static longToNumber(e,n){return Mr.isLong(e)?e.toNumber():e instanceof k.Long?Mr.fromValue({low:e.low,high:e.high,unsigned:n??!1}).toNumber():e}static isLong(e){return Mr.isLong(e)||e instanceof k.Long}},ae=class r{static size(e){return r.getSizeFromDimensionRange(e,0,e.length)}static sizeFromDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,n,e.length)}static sizeToDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeToDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,0,n)}static getSizeFromDimensionRange(e,n,t){let o=1;for(let i=n;i<t;i++){if(e[i]<=0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.");o*=e[i]}return o}static computeStrides(e){let n=e.length;if(n===0)return[];if(n===1)return[1];let t=new Array(n);t[n-1]=1,t[n-2]=e[n-1];for(let o=n-3;o>=0;--o)t[o]=t[o+1]*e[o+1];return t}static transpose(e){return e.slice().reverse()}static indicesToOffset(e,n,t){t===void 0&&(t=e.length);let o=0;for(let i=0;i<t;++i)o+=n[i]*e[i];return o}static offsetToIndices(e,n){let t=n.length;if(t===0)return[];if(t===1)return[e*n[0]];let o=new Array(n.length);for(let i=0;i<o.length-1;++i)o[i]=Math.floor(e/n[i]),e-=o[i]*n[i];return o[o.length-1]=e,o}static normalizeAxis(e,n){if(e<-n&&e>=n)throw new Error("unsupported axis for this operation.");return e<0?e+n:e}static normalizeAxes(e,n){return e.map(t=>this.normalizeAxis(t,n))}static incrementIndex(e,n,t){if(n.length===0||e.length===0)throw new Error("Index incrementing unsupported for scalar Tensor");if(t===void 0)t=n.length;else if(t<=0||t>n.length)throw new Error("Incorrect axis to increment on");for(let o=t-1;o>=0&&(e[o]++,!(e[o]<n[o]));--o)e[o]=0}static calculateReshapedDims(e,n){if(n.length===0){if(e.length===0||r.size(e)===1)return[];throw new Error("cannot reshape to a scalar Tensor")}let t=n.length,o=new Array(t),i=-1,s=1;for(let u=0;u<t;u++){if(n[u]<-1)throw new Error("a dimension in shape hints cannot be less than -1");if(n[u]===-1){if(i!==-1)throw new Error("at most one dimension in shape hints can be -1");i=u}else{if(n[u]===0){if(u>=e.length)throw new Error("the dimension with value zero exceeds the dimension size of the input tensor");o[u]=e[u]}else o[u]=n[u];s*=o[u]}}let a=r.size(e);if(i!==-1){if(a%s!==0)throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${e}] Output shape: [${n}]`);o[i]=a/s}else if(s!==a)throw new Error("reshapedDims and originalDims don't have matching sizes");return o}static sortBasedOnPerm(e,n){return n?n.map(t=>e[t]):e.slice().reverse()}static padShape(e,n){let t=e.length;return e.map((o,i)=>o+n[i]+n[i+t])}static areEqual(e,n){return e.length!==n.length?!1:e.every((t,o)=>t===n[o])}static validateDimsAndCalcSize(e){if(e.length>6)throw new TypeError("Only rank 0 to 6 is supported for tensor shape.");let n=1;for(let t of e){if(!Number.isInteger(t))throw new TypeError(`Invalid shape: ${t} is not an integer`);if(t<0||t>2147483647)throw new TypeError(`Invalid shape: length ${t} is not allowed`);n*=t}return n}static flattenShape(e,n){n<0&&(n+=e.length);let t=e.reduce((s,a)=>s*a,1),o=e.slice(n).reduce((s,a)=>s*a,1);return[t/o,o]}static squeezeShape(e,n){let t=new Array;n=r.normalizeAxes(n,e.length);for(let o=0;o<e.length;o++){let i=n.indexOf(o)>=0;if(i&&e[o]!==1)throw new Error("squeeze an axis of size different than 1");(n.length===0&&e[o]>1||n.length>0&&!i)&&t.push(e[o])}return t}static unsqueezeShape(e,n){let t=new Array(e.length+n.length);t.fill(0);for(let i=0;i<n.length;i++){let s=r.normalizeAxis(n[i],t.length);if(s>=t.length)throw new Error("'axes' has an out of range axis");if(t[s]!==0)throw new Error("'axes' has a duplicate axis");t[s]=1}let o=0;for(let i=0;i<t.length;i++)t[i]===0&&(t[i]=e[o++]);if(o!==e.length)throw new Error("the unsqueezed dimension could not be established");return t}},Ao=class r{static splitShape(e,n,t,o){if(t.length===0){if(!o)throw new Error("need to know number of outputs when the 'split' attribute is not specified");r.determineSplit(e[n],o,t)}let i=[],s=[0];for(let a=0;a<t.length;++a){a!==0&&s.push(s[a-1]+t[a-1]);let u=e.slice();u[n]=t[a],i.push(u)}return[i,s]}static determineSplit(e,n,t){if(e%n!==0)throw new Error("cannot split tensor to equal sized parts");for(let o=0;o<n;++o)t.push(e/n)}},pn=class r{static adjustPoolAttributes(e,n,t,o,i,s){if(!e&&t.length!==n.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let a=0;a<n.length-2;a++)a>=t.length?t.push(n[a+2]):t[a]=n[a+2];for(let a=0;a<t.length;a++)if(a<o.length){if(o[a]<0)throw new Error("strides should be greater than or equal to 1")}else o.push(1);for(let a=0;a<t.length;a++)if(a<i.length){if(i[a]<0)throw new Error("dilations should be greater than or equal to 1")}else i.push(1);for(let a=0;a<t.length*2;a++)if(a<s.length){if(s[a]<0)throw new Error("pad should be greater than or equal to 1")}else s.push(0);for(let a=0;a<t.length;a++){if(t[a]<=0)throw new Error("kernel shapes need to be greater than 0");if(s[a]>=t[a]||s[a+t.length]>=t[a])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(e,n,t,o,i,s){if(s){if(i.length!==2*(e.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(n.length!==e.length-2)throw new Error("length of strides should be the length of data dimensions");if(o.length!==e.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let a=0;a<e.length-2;a++)r.adjustPadAndReturnShape(e[a+2],n[a],t[a],o[a],i,a,a+e.length-2,s)}}static computePoolOutputShape(e,n,t,o,i,s,a){if(n.length<=0)throw new Error("input shape must be of size greater than 0");let u=[n[0],n[1]];return r.computeShapeHelper(e,n,u,t,o,i,s,a),u}static computeConvOutputShape(e,n,t,o,i,s,a){if(e.length<=0||n.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let u=[e[0],n[0]];return r.computeShapeHelper(!1,e,u,t,o,i,s,a),u}static computeShapeHelper(e,n,t,o,i,s,a,u){if(e)for(let l=0;l<n.length-2;l++)t.push(1);else for(let l=0;l<n.length-2;l++)t.push(r.adjustPadAndReturnShape(n[l+2],o[l],i[l],s[l],a,l,l+n.length-2,u))}static adjustPadAndReturnShape(e,n,t,o,i,s,a,u){let l=t*(o-1)+1;if(u&&u!=="NOTSET")switch(u){case"VALID":return i[s]=0,i[a]=0,Math.floor((e-l)/n+1);case"SAME_LOWER":case"SAME_UPPER":if(t!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let p=((e+n-1)/n-1)*n+o-e;return i[s]=Math.floor(u==="SAME_LOWER"?(p+1)/2:p/2),i[a]=p-i[s],Math.floor((e+p-o)/n+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((e+i[s]+i[a]-l)/n+1)}},hn=-34028234663852886e22,mn=34028234663852886e22});function u0(r){switch(r){case"bool":case"int8":case"uint8":return 1;case"int16":case"uint16":return 2;case"int32":case"uint32":case"float32":return 4;case"float64":return 8;default:throw new Error(`cannot calculate sizeof() on type ${r}`)}}function Gd(r){switch(r){case Pe.onnx.TensorProto.DataType.UINT8:case Pe.onnx.TensorProto.DataType.INT8:case Pe.onnx.TensorProto.DataType.BOOL:return 1;case Pe.onnx.TensorProto.DataType.UINT16:case Pe.onnx.TensorProto.DataType.INT16:return 2;case Pe.onnx.TensorProto.DataType.FLOAT:case Pe.onnx.TensorProto.DataType.INT32:case Pe.onnx.TensorProto.DataType.UINT32:return 4;case Pe.onnx.TensorProto.DataType.INT64:case Pe.onnx.TensorProto.DataType.DOUBLE:case Pe.onnx.TensorProto.DataType.UINT64:return 8;default:throw new Error(`cannot calculate sizeof() on type ${Pe.onnx.TensorProto.DataType[r]}`)}}function l0(r,e){return new(qd(e))(r)}function qd(r){switch(r){case"bool":case"uint8":return Uint8Array;case"int8":return Int8Array;case"int16":return Int16Array;case"uint16":return Uint16Array;case"int32":return Int32Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"float32":return Float32Array;case"float64":return Float64Array;default:throw new Error("unspecified error")}}function Ss(r,e){if(e===Pe.onnx.TensorProto.DataType.INT64||e===_s.TensorDataType.INT64){if(r.greaterThanOrEqual(2147483648)||r.lessThan(-2147483648))throw new TypeError("int64 is not supported")}else if(e===Pe.onnx.TensorProto.DataType.UINT32||e===_s.TensorDataType.UINT32||e===Pe.onnx.TensorProto.DataType.UINT64||e===_s.TensorDataType.UINT64){if(r.greaterThanOrEqual(4294967296)||r.lessThan(0))throw new TypeError("uint64 is not supported")}else throw new TypeError(`not a LONG type: ${Pe.onnx.TensorProto.DataType[e]}`);return r.toNumber()}function Wd(r,e,n){switch(e){case Pe.onnx.TensorProto.DataType.BOOL:case Pe.onnx.TensorProto.DataType.UINT8:return r.getUint8(n);case Pe.onnx.TensorProto.DataType.INT8:return r.getInt8(n);case Pe.onnx.TensorProto.DataType.UINT16:return r.getUint16(n,!0);case Pe.onnx.TensorProto.DataType.INT16:return r.getInt16(n,!0);case Pe.onnx.TensorProto.DataType.FLOAT:return r.getFloat32(n,!0);case Pe.onnx.TensorProto.DataType.INT32:return r.getInt32(n,!0);case Pe.onnx.TensorProto.DataType.UINT32:return r.getUint32(n,!0);case Pe.onnx.TensorProto.DataType.INT64:return Ss(Mr.fromBits(r.getUint32(n,!0),r.getUint32(n+4,!0),!1),e);case Pe.onnx.TensorProto.DataType.DOUBLE:return r.getFloat64(n,!0);case Pe.onnx.TensorProto.DataType.UINT64:return Ss(Mr.fromBits(r.getUint32(n,!0),r.getUint32(n+4,!0),!0),e);default:throw new Error(`cannot read from DataView for type ${Pe.onnx.TensorProto.DataType[e]}`)}}var Hd,Pe,_s,bt,gn=D(()=>{"use strict";Hd=zn(Rl());ls();$o();Pe=zn(Un());We();_s=ce.experimental.fbs,bt=class r{constructor(e,n,t,o,i,s=Hd.Guid.create()){this.dims=e;this.type=n;this.dataProvider=t;this.asyncDataProvider=o;this.cache=i;this.dataId=s;this.size=ae.validateDimsAndCalcSize(e);let a=this.size,u=t===void 0&&o===void 0&&i===void 0;if(i!==void 0&&i.length!==a)throw new RangeError("Input dims doesn't match data length.");if(n==="string"){if(i!==void 0&&(!Array.isArray(i)||!i.every(l=>typeof l=="string")))throw new TypeError("cache should be a string array");u&&(this.cache=new Array(a))}else{if(i!==void 0){let l=qd(n);if(!(i instanceof l))throw new TypeError(`cache should be type ${l.name}`)}if(u){let l=new ArrayBuffer(a*u0(n));this.cache=l0(l,n)}}}get data(){if(this.cache===void 0){let e=this.dataProvider(this.dataId);if(e.length!==this.size)throw new Error("Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.");this.cache=e}return this.cache}get stringData(){if(this.type!=="string")throw new TypeError("data type is not string");return this.data}get integerData(){switch(this.type){case"uint8":case"int8":case"uint16":case"int16":case"int32":case"uint32":case"bool":return this.data;default:throw new TypeError("data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)")}}get floatData(){switch(this.type){case"float32":case"float64":return this.data;default:throw new TypeError("data type is not float (float32, float64)")}}get numberData(){if(this.type!=="string")return this.data;throw new TypeError("type cannot be non-number (string)")}get(e){return this.data[ae.indicesToOffset(e,this.strides)]}set(e,n){this.data[ae.indicesToOffset(e,this.strides)]=n}async getData(){return this.cache===void 0&&(this.cache=await this.asyncDataProvider(this.dataId)),this.cache}get strides(){return this._strides||(this._strides=ae.computeStrides(this.dims)),this._strides}static fromProto(e){if(!e)throw new Error("cannot construct Value from an empty tensor");let n=At.tensorDataTypeFromProto(e.dataType),t=At.tensorDimsFromProto(e.dims),o=new r(t,n);if(n==="string")e.stringData.forEach((i,s)=>{o.data[s]=Oo(i)});else if(e.rawData&&typeof e.rawData.byteLength=="number"&&e.rawData.byteLength>0){let i=o.data,s=new DataView(e.rawData.buffer,e.rawData.byteOffset,e.rawData.byteLength),a=Gd(e.dataType),u=e.rawData.byteLength/a;if(e.rawData.byteLength%a!==0)throw new Error("invalid buffer length");if(i.length!==u)throw new Error("buffer length mismatch");for(let l=0;l<u;l++){let d=Wd(s,e.dataType,l*a);i[l]=d}}else{let i;switch(e.dataType){case Pe.onnx.TensorProto.DataType.FLOAT:i=e.floatData;break;case Pe.onnx.TensorProto.DataType.INT32:case Pe.onnx.TensorProto.DataType.INT16:case Pe.onnx.TensorProto.DataType.UINT16:case Pe.onnx.TensorProto.DataType.INT8:case Pe.onnx.TensorProto.DataType.UINT8:case Pe.onnx.TensorProto.DataType.BOOL:i=e.int32Data;break;case Pe.onnx.TensorProto.DataType.INT64:i=e.int64Data;break;case Pe.onnx.TensorProto.DataType.DOUBLE:i=e.doubleData;break;case Pe.onnx.TensorProto.DataType.UINT32:case Pe.onnx.TensorProto.DataType.UINT64:i=e.uint64Data;break;default:throw new Error("unspecific error")}if(i==null)throw new Error("failed to populate data from a tensorproto value");let s=o.data;if(s.length!==i.length)throw new Error("array length mismatch");for(let a=0;a<i.length;a++){let u=i[a];Mr.isLong(u)?s[a]=Ss(u,e.dataType):s[a]=u}}return o}static fromData(e,n,t){return new r(n,t,void 0,void 0,e)}static fromOrtTensor(e){if(!e)throw new Error("cannot construct Value from an empty tensor");let n=At.tensorDimsFromORTFormat(e),t=At.tensorDataTypeFromProto(e.dataType()),o=new r(n,t);if(t==="string")for(let i=0;i<e.stringDataLength();i++)o.data[i]=e.stringData(i);else if(e.rawDataArray()&&typeof e.rawDataLength()=="number"&&e.rawDataLength()>0){let i=o.data,s=new DataView(e.rawDataArray().buffer,e.rawDataArray().byteOffset,e.rawDataLength()),a=Gd(e.dataType()),u=e.rawDataLength()/a;if(e.rawDataLength()%a!==0)throw new Error("invalid buffer length");if(i.length!==u)throw new Error("buffer length mismatch");for(let l=0;l<u;l++){let d=Wd(s,e.dataType(),l*a);i[l]=d}}return o}}});function pe(r){return r===1?d0:c0}function jd(r){let e=pe(r);return`${e.version}
      precision highp float;
      ${e.attribute} vec3 position;
      ${e.attribute} vec2 textureCoord;

      ${e.varyingVertex} vec2 TexCoords;

      void main()
      {
          gl_Position = vec4(position, 1.0);
          TexCoords = textureCoord;
      }`}function Kd(r){let e=pe(r);return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFrag} vec2 TexCoords;
    ${e.outputDeclaration}
    const vec2 halfCR = vec2(0.5, 0.5);

    // Custom vector types to handle higher dimenalities.
    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    `}function Yd(r,e){let n=pe(r);return`
  void main() {
    int indices[${e}];
    toVec(TexCoords, indices);
    vec4 result = vec4(process(indices));
    ${n.output} = result;
  }
  `}var d0,c0,nt=D(()=>{"use strict";d0={version:"",attribute:"attribute",varyingVertex:"varying",varyingFrag:"varying",texture2D:"texture2D",output:"gl_FragColor",outputDeclaration:""},c0={version:"#version 300 es",attribute:"in",varyingVertex:"out",varyingFrag:"in",texture2D:"texture",output:"outputColor",outputDeclaration:"out vec4 outputColor;"}});var Me=D(()=>{"use strict"});async function Is(r,e=t=>0,n){return new Promise((t,o)=>{let i=0,s=()=>{if(r()){t();return}i++;let a=e(i);if(n!=null&&i>=n){o();return}setTimeout(s,a)};s()})}function Ui(r){return Gn(typeof r<"u"&&r.length!==0,()=>"empty string found for sampler name"),"get"+r.charAt(0).toUpperCase()+r.slice(1)}function Xd(r){return Gn(typeof r<"u"&&r.length!==0,()=>"empty string found for sampler name"),"get"+r.charAt(0).toUpperCase()+r.slice(1)+"AtOutCoords"}function Wn(r,e){let n=JSON.parse(JSON.stringify(r));return n=e,n}function Hn(r,e){return e.map(n=>r[n]).join(", ")}function Lt(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function mr(r=6){return["x","y","z","w","u","v"].slice(0,r)}var xr=D(()=>{"use strict";We()});function f0(r,e){return mr(e).map(n=>`${r}.${n}`)}function qn(r,e){return e===1?[r]:f0(r,e)}function Tr(){return`
    float getChannel(vec4 frag, int dim) {
      int modCoord = imod(dim, 2);
      return modCoord == 0 ? frag.r : frag.g;
    }

    float getChannel(vec4 frag, vec2 innerDims) {
      vec2 modCoord = mod(innerDims, 2.);
      return modCoord.x == 0. ?
        (modCoord.y == 0. ? frag.r : frag.g) :
        (modCoord.y == 0. ? frag.b : frag.a);
    }
  `}var bn=D(()=>{"use strict";xr()});function h0(r,e,n){if(r===0)return"false";if(r===1)return`rc > ${e[0]}`;let t="";for(let o=r-2;o<r;o++)t+=`${n[o]} >= ${e[o-r+2]}`,o<r-1&&(t+="||");return t}function m0(r,e){let n=r.length;if(n===0)return"getA(), 0, 0, 0";if(n===1)return`getA(rc),
            rc + 1 >= ${r[0]} ? 0. : getA(rc + 1),
            0, 0`;let t="r, c",o="r, cp1",i="rp1, c",s="rp1, cp1",a="";if(n>2)for(let u=0;u<n-2;++u)a=a+`${e[u]},`;return`getA(${a}${t}),
          rEdge ? 0. : getA(${a}${i}),
          cEdge ? 0. : getA(${a}${o}),
          rEdge || cEdge ? 0. : getA(${a}${s})`}function g0(r,e,n,t){return r===0||r===1?"":`
    int r = ${e[r-2]};
    int c = ${e[r-1]};
    int rp1 = ${e[r-2]} + 1;
    int cp1 = ${e[r-1]} + 1;
    bool rEdge = rp1 >= ${t};
    bool cEdge = cp1 >= ${n};
    `}var Zd,p0,Jd,Qd=D(()=>{"use strict";nt();Me();xr();bn();Zd={name:"pack",inputNames:["A"],inputTypes:[1]},p0=(r,e)=>{let n=pe(r.session.backend.glContext.version),t=e.dims,o=t.length,i=e.dims.length,s=Lt(i),a=qn("rc",i),u=g0(i,a,t[t.length-2],t[t.length-1]),l;o===0?l=[1,1]:o===1?l=[t[0],1]:l=[t[i-1],t[i-2]];let d=h0(i,l,a),p=m0(t,a),h=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${d}) {
            ${n.output} = vec4(0);
          } else {
            ${u}

            ${n.output} = vec4(${p});
          }
        }
      `;return{...Zd,hasMain:!0,output:{dims:e.dims,type:e.type,textureType:2},shaderSource:h}},Jd=(r,e)=>({...Zd,get:()=>p0(r,e)})});function As(r){if(r.length===0)return[1,1,1];let e=1;for(let n=0;n<r.length-2;++n)e*=r[n];return[e,r.length>1?r[r.length-2]:1,r[r.length-1]]}function tc(r,e){let n=!1;return r.length===0||e.length===0?n=!0:r.length<2||e.length<2?n=r[r.length-1]===e[e.length-1]:n=r[r.length-1]===e[e.length-1]&&r[r.length-2]===e[e.length-2],n}function v0(r){let e=ae.computeStrides(r),n=["b","r","c"],t="index";return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e.map((i,s)=>{let a=`int ${n[s]} = ${t} / ${i}`,u=s===e.length-1?`int ${n[s+1]} = ${t} - ${n[s]} * ${i}`:`index -= ${n[s]} * ${i}`;return`${a}; ${u};`}).join("")}
      return ivec3(b, r, c);
    }
  `}function w0(r){let e=ae.computeStrides(r);return`
  int getFlattenedIndex(ivec3 coords) {
    // reverse y, z order
    return coords.x * ${e[0]} + coords.z * ${e[1]} + coords.y;
  }
`}var b0,y0,ec,rc=D(()=>{"use strict";We();nt();Me();bn();b0=r=>({name:"Reshape (packed)",inputTypes:[2],inputNames:["A"],cacheHint:`${r}`}),y0=(r,e,n,t)=>{let o=e.dims,i=t,s="";for(let l=0;l<4;l++){let d="";switch(l){case 0:d="outputCoords = rc;";break;case 1:d="outputCoords = ivec3(rc.x, rc.y+1, rc.z);";break;case 2:d="outputCoords = ivec3(rc.x, rc.y, rc.z+1);";break;case 3:d="outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);";break;default:throw new Error}s+=`
        ${d}
        ${l>0?"if(outputCoords.y < rows && outputCoords.z < cols){":""}
          int flattenedIndex = getFlattenedIndex(outputCoords);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);
          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${l}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);

        ${l>0?"}":""}
      `}let a=pe(r.session.backend.glContext.version),u=`
      ${v0(o)}
      ${w0(i)}
      ${Tr()}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.0);

        ivec3 outputCoords;
        int rows = ${i[2]};
        int cols = ${i[1]};

        ${s}
        ${a.output} = result;
      }
    `;return{...n,output:{dims:i,type:e.type,textureType:2},shaderSource:u,hasMain:!0}},ec=(r,e,n)=>{let t=b0(n);return{...t,get:()=>y0(r,e,t,n)}}});var Os,nc=D(()=>{"use strict";nt();Me();Os=(r,e)=>{let n=e.shape,t=pe(r.session.backend.glContext.version),o=`
    const float FLOAT_MAX = 1.70141184e38;
    const float FLOAT_MIN = 1.17549435e-38;

    bool isNaN(float val) {
      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;
    }

    highp vec4 encodeAsUint8(highp float v) {
      if (isNaN(v)) {
        return vec4(255, 255, 255, 255);
      }

      highp float av = abs(v);

      if(av < FLOAT_MIN) {
        return vec4(0.0, 0.0, 0.0, 0.0);
      } else if(v > FLOAT_MAX) {
        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
      } else if(v < -FLOAT_MAX) {
        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
      }

      highp vec4 c = vec4(0,0,0,0);

      highp float e = floor(log2(av));
      highp float m = exp2(fract(log2(av))) - 1.0;

      c[2] = floor(128.0 * m);
      m -= c[2] / 128.0;
      c[1] = floor(32768.0 * m);
      m -= c[1] / 32768.0;
      c[0] = floor(8388608.0 * m);

      highp float ebias = e + 127.0;
      c[3] = floor(ebias / 2.0);
      ebias -= c[3] * 2.0;
      c[2] += floor(ebias) * 128.0;

      c[3] += 128.0 * step(0.0, -v);

      return c / 255.0;
    }

    void main() {
      float value = ${t.texture2D}(X,TexCoords).r;
      ${t.output} = encodeAsUint8(value);
    }`,i={name:"Uint8Encode",inputTypes:[0],inputNames:["X"],output:{dims:n,type:e.tensor.type,textureType:3},shaderSource:o,hasMain:!0};return r.executeProgram(i,[e.tensor])}});function T0(r,e){if(r===1)return"rc";let n="";for(let t=0;t<r;t++)n+=e[t],t<r-1&&(n+=",");return n}var oc,x0,ic,ac=D(()=>{"use strict";nt();Me();xr();bn();oc={name:"unpack",inputNames:["A"],inputTypes:[2]},x0=(r,e)=>{let n=e.dims.length,t=qn("rc",n),o=t.slice(-2),i=Lt(n),s=Tr(),u=e.dims.length===0?"":T0(n,t),l=n<=1?"rc":`vec2(${o.join(",")})`,d=pe(r.session.backend.glContext.version),p=`
    ${s}
    void main() {
      ${i} rc = getOutputCoords();

       // Sample the texture with the coords to get the rgba channel value.
       vec4 packedInput = getA(${u});

       ${d.output} = vec4(getChannel(packedInput, ${l}), 0, 0, 0);
     }
   `;return{...oc,hasMain:!0,output:{dims:e.dims,type:e.type,textureType:0},shaderSource:p}},ic=(r,e)=>({...oc,get:()=>x0(r,e)})});var Gi,Eo,Wi,Co=D(()=>{"use strict";Zt();Gi=class{constructor(e,n=1){if(n===1)this.internalFormat=e.R32F,this.format=e.RED,this.textureType=e.FLOAT,this.channelSize=n;else if(n===4)this.internalFormat=e.RGBA32F,this.format=e.RGBA,this.textureType=e.FLOAT,this.channelSize=n;else throw new Error(`Invalid number of channels: ${n}`)}encode(e,n){let t,o;return e.constructor!==Float32Array&&(He.warning("Encoder","data was not of type Float32; creating new Float32Array"),o=new Float32Array(e)),n*this.channelSize>e.length?(He.warning("Encoder","Source data too small. Allocating larger array"),o=e,t=this.allocate(n*this.channelSize),o.forEach((i,s)=>t[s]=i)):(o=e,t=o),t}allocate(e){return new Float32Array(e*4)}decode(e,n){return this.channelSize===1?e.filter((o,i)=>i%4===0).subarray(0,n):e.subarray(0,n)}},Eo=class{constructor(e,n=1,t){if(n!==1&&n!==4)throw new Error(`Invalid number of channels: ${n}`);this.internalFormat=e.RGBA,this.format=e.RGBA,this.channelSize=n,this.textureType=t||e.FLOAT}encode(e,n){let t=e;return this.channelSize===1&&(He.verbose("Encoder","Exploding into a larger array"),t=this.allocate(n),e.forEach((o,i)=>t[i*4]=o)),t}allocate(e){return new Float32Array(e*4)}decode(e,n){return this.channelSize===1?e.filter((o,i)=>i%4===0).subarray(0,n):e.subarray(0,n)}},Wi=class{constructor(e,n=1){this.channelSize=4;if(n===1)this.internalFormat=e.ALPHA,this.format=e.ALPHA,this.textureType=e.UNSIGNED_BYTE,this.channelSize=n;else if(n===4)this.internalFormat=e.RGBA,this.format=e.RGBA,this.textureType=e.UNSIGNED_BYTE,this.channelSize=n;else throw new Error(`Invalid number of channels: ${n}`)}encode(e,n){return new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}allocate(e){return new Uint8Array(e*this.channelSize)}decode(e,n){if(e instanceof Uint8Array)return e.subarray(0,n);throw new Error(`Invalid array type: ${e.constructor}`)}}});var Po,sc,Es,uc=D(()=>{"use strict";We();Me();Po=(r,e,n)=>{let t=n===0||n===1?1:4,o=n===2,i=n===1||n===2,s=n===4?e.length-1:void 0,a=n===4?e.map((u,l)=>l===e.length-1?u*4:u):void 0;return Es(r,e,t,a,{isPacked:o,reverseWH:i,breakAxis:s})},sc=(r,e,n)=>{let t=Po(r,e,n);return[t.width,t.height]},Es=(r,e,n=1,t,o)=>{let i=!!(o&&o.isPacked),[s,a]=r.computeTextureWH(i&&t||e,o),u=e.length,l=e.slice(0);if(u===0&&(l=[1]),n===1)t=e;else if(i){if(n!==4)throw new Error("a packed texture must be 4-channel");t=e,u>0&&(l[u-1]=Math.ceil(l[u-1]/2)),u>1&&(l[u-2]=Math.ceil(l[u-2]/2))}else if(!t)throw new Error("Unpacked shape is needed when using channels > 1");return{width:s,height:a,channels:n,isPacked:i,shape:l,strides:ae.computeStrides(l),unpackedShape:t,reversedWH:o&&o.reverseWH}}});var _0,Hi,dc=D(()=>{"use strict";Zt();gn();We();Qd();rc();nc();ac();Co();uc();Me();_0=(r,e)=>{let n=e.map(o=>`${o.unpackedShape.join(",")};${o.width}x${o.height}`).join("_"),t=r.name;return r.cacheHint&&(t+="["+r.cacheHint+"]"),t+=":"+n,t},Hi=class{constructor(e){this.session=e;this.packedTextureDataCache=new Map,this.unpackedTextureDataCache=new Map}calculateTextureWidthAndHeight(e,n){return sc(this.session.layoutStrategy,e,n)}executeProgram(e,n){if(n.length<e.inputNames.length)throw new Error(`Input size mustn't be less than ${e.inputNames.length}.`);if(e.inputNames.length!==e.inputTypes.length)throw new Error("input names size does not match input types");let t=[];for(let l=0;l<e.inputNames.length;++l)t[l]=this.getOrCreateTextureData(n[l],e.inputTypes[l]);let o=_0(e,t),i=this.session.programManager.getArtifact(o),s=i?i.programInfo:typeof e.get=="function"?e.get():e,a=Po(this.session.layoutStrategy,s.output.dims,s.output.textureType),u=this.createTextureData(a,s.output.type);return i||(i=this.session.programManager.build(s,t,u),this.session.programManager.setArtifact(o,i)),this.runProgram(i,t,u),u}run(e,n){return this.executeProgram(e,n).tensor}runProgram(e,n,t){for(let o=0;o<n.length;++o)if(!!n[o].isPacked!=(e.programInfo.inputTypes[o]===2))throw new Error(`input[${o}] property packed inconsistent`);if(!!t.isPacked!=(e.programInfo.output.textureType===2))throw new Error("output property packed inconsistent");this.session.programManager.run(e,n,t)}getOrCreateTextureData(e,n){let t=this.getTextureData(e.dataId,n===2);if(!t&&(t=this.getTextureData(e.dataId,n!==2),t))return n===2?this.pack(t):this.unpack(t);if(!t){let o=Po(this.session.layoutStrategy,e.dims,n);if(n===4){let a=e.dims;if(a.length===4){let u=[a[0],Math.ceil(a[1]*a[2]*a[3]/4)],l=Po(this.session.layoutStrategy,u,n),d=e.numberData;if(a[1]*a[2]*a[3]%4!==0){let p=a[0],h=a[1]*a[2]*a[3],g=Math.ceil(h*1/4)*4,y=p*g;d=new Float32Array(y);for(let w=0;w<p;++w){let I=w*h,T=w*g+w%1*h;d.set(e.numberData.subarray(I,I+h),T)}}return this.createTextureData(l,e.type,d,e,1)}}if(n===2){let i=Es(this.session.layoutStrategy,e.dims,1,[],{reverseWH:!0}),s=this.createTextureData(i,e.type,e.numberData,e,1);t=this.pack(s)}else t=this.createTextureData(o,e.type,e.numberData,e,1)}return t}createTextureDataFromLayoutBindTensor(e,n,t,o){return this.createTextureData(e,n,t,o,1)}createTextureData(e,n,t,o,i){He.verbose("InferenceHandler",`Creating TextureData: layout:[${JSON.stringify(e)}]`);let s=this.session.textureManager.createTextureFromLayout(n,e,t,i);return this.createTextureDataFromTexture(e,n,s,o)}reshapeUnpacked(e,n){let t=this.getOrCreateTextureData(e,0),o={channels:t.channels,height:t.height,width:t.width,shape:n.length!==0?n:[1],strides:ae.computeStrides(n),unpackedShape:n};return this.createTextureDataFromTexture(o,e.type,t.texture).tensor}reshapePacked(e,n){let t=this.getOrCreateTextureData(e,2);if(tc(e.dims,n)){let l={channels:t.channels,height:t.height,width:t.width,shape:n.length!==0?n:[1],strides:ae.computeStrides(n),unpackedShape:n,isPacked:!0};return this.createTextureDataFromTexture(l,e.type,t.texture).tensor}let o=As(e.dims),i=As(n),s=this.reshapePacked(e,o),a=this.run(ec(this,s,i),[s]);return this.reshapePacked(a,n)}cast(e,n){let t=this.getOrCreateTextureData(e,0);return this.createTextureDataFromTexture(t,n,t.texture).tensor}createTextureDataFromTexture(e,n,t,o,i){let s={...e,tensor:o||new bt(e.unpackedShape,n,a=>this.readTexture(s),async a=>this.readTextureAsync(s),void 0,i),texture:t};return this.setTextureData(s.tensor.dataId,s,e.isPacked),s}getTextureData(e,n=!1){return this.session.isInitializer(e)?this.session.getTextureData(e,n):n?this.packedTextureDataCache.get(e):this.unpackedTextureDataCache.get(e)}setTextureData(e,n,t=!1){this.session.isInitializer(e)?this.session.setTextureData(e,n,t):(t?this.packedTextureDataCache:this.unpackedTextureDataCache).set(e,n)}isTextureLayoutCached(e,n=!1){return!!this.getTextureData(e.dataId,n)}dispose(){this.session.textureManager.clearActiveTextures(),this.packedTextureDataCache.forEach(e=>this.session.textureManager.releaseTexture(e)),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache.forEach(e=>this.session.textureManager.releaseTexture(e)),this.unpackedTextureDataCache=new Map}readTexture(e){return e.isPacked?this.readTexture(this.unpack(e)):this.session.backend.glContext.isFloat32DownloadSupported?this.session.textureManager.readTexture(e,e.tensor.type,e.channels):this.session.textureManager.readUint8TextureAsFloat(Os(this,e))}async readTextureAsync(e){return e.isPacked?this.readTextureAsync(this.unpack(e)):this.session.backend.glContext.isFloat32DownloadSupported?this.session.textureManager.readTextureAsync(e,e.tensor.type,e.channels):this.session.textureManager.readUint8TextureAsFloat(Os(this,e))}pack(e){return this.executeProgram(Jd(this,e.tensor),[e.tensor])}unpack(e){return this.executeProgram(ic(this,e.tensor),[e.tensor])}}});var Cs,Ie,St=D(()=>{"use strict";Cs=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},Ie=r=>new Cs(r)});var cc,fc,pc,S0,I0,hc=D(()=>{"use strict";St();nt();Me();cc={name:"BatchNormalization",inputNames:["A","Scale","B","Mean","Variance"],inputTypes:[0,0,0,0,0]},fc=(r,e,n)=>(I0(e),[r.run({...cc,cacheHint:n.cacheKey,get:()=>S0(r,e,n)},e)]),pc=r=>{let e=r.attributes.getFloat("epsilon",1e-5),n=r.attributes.getFloat("momentum",.9),t=r.attributes.getInt("spatial",1);return Ie({epsilon:e,momentum:n,spatial:t})},S0=(r,e,n)=>{let t=pe(r.session.backend.glContext.version),o=e[0].dims.length,[i,s]=r.calculateTextureWidthAndHeight(e[1].dims,0),a=`
  float process(int[${o}] indices) {
    vec2 position = offsetToCoords(indices[1], ${i}, ${s});
    float scale = getColorAsFloat(${t.texture2D}(Scale, position));
    float mean = getColorAsFloat(${t.texture2D}(Mean, position));
    float variance = getColorAsFloat(${t.texture2D}(Variance, position));
    float b = getColorAsFloat(${t.texture2D}(B, position));

    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${n.epsilon})) ) + b;
  }`;return{...cc,output:{dims:e[0].dims,type:e[0].type,textureType:0},shaderSource:a}},I0=r=>{if(!r||r.length!==5)throw new Error("BatchNormalization requires 5 inputs.");let e=r[0],n=r[1],t=r[2],o=r[3],i=r[4];if(e.dims.length<3||n.dims.length!==1||t.dims.length!==1||o.dims.length!==1||i.dims.length!==1)throw new Error("invalid input shape.");if(n.dims[0]!==e.dims[1]||t.dims[0]!==e.dims[1]||o.dims[0]!==e.dims[1]||i.dims[0]!==e.dims[1])throw new Error("invalid input shape.");if(e.type!=="float32"&&e.type!=="float64"||n.type!=="float32"&&n.type!=="float64"||t.type!=="float32"&&t.type!=="float64"||o.type!=="float32"&&o.type!=="float64"||i.type!=="float32"&&i.type!=="float64")throw new Error("invalid input tensor types.")}});var qi,tr,oe,ko,ji,zr=D(()=>{"use strict";qi=class{constructor(e,n,t,o){this.glContext=e;this.programInfo=n;this.inputTextureLayouts=t;this.outputTextureLayout=o}},tr=class{constructor(e){this.context=e}},oe=class{constructor(e,n){this.routineBody=e;this.dependencies=n}},ko=class{constructor(e,n,t){this.name=e;t?this.dependencies=t:this.dependencies=[],n&&(this.routineBody=n)}addDependency(e){e&&this.dependencies.push(e)}},ji=class{static returnOrderedNodes(e){if(!e||e.length===0)return[];if(e.length===1)return e;let n=new Set,t=new Set,o=new Array;return this.createOrderedNodes(e,n,t,o),o}static createOrderedNodes(e,n,t,o){for(let i=0;i<e.length;++i)this.dfsTraverse(e[i],n,t,o)}static dfsTraverse(e,n,t,o){if(!e||t.has(e.name))return;if(n.has(e.name))throw new Error("Cyclic dependency detected. Can't topologically sort routines needed for shader.");n.add(e.name);let i=e.dependencies;if(i&&i.length>0)for(let s=0;s<i.length;++s)this.dfsTraverse(i[s],n,t,o);o.push(e),t.add(e.name),n.delete(e.name)}}});function O0(){let r="add_";return{body:`
  float ${r}(float a, float b) {
    return a + b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 + v2;
  }
  `,name:r,type:0}}function E0(){let r="div_";return{body:`
  float ${r}(float a, float b) {
    return a / b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 / v2;
  }
  `,name:r,type:0}}function C0(){let r="mul_";return{body:`
  float ${r}(float a, float b) {
    return a * b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 * v2;
  }
  `,name:r,type:0}}function P0(){let r="sub_";return{body:`
  float ${r}(float a, float b) {
    return a - b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 - v2;
  }
  `,name:r,type:0}}function k0(){let r="equal_";return{body:`
  float ${r}(float a, float b) {
    return float(a == b);
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4(equal(v1, v2));
  }
  `,name:r,type:0}}function D0(){let r="greater_";return{body:`
  float ${r}(float a, float b) {
    return float(a > b);
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4( v1.r > v2.r ,
      v1.g > v2.g,
      v1.b > v2.b,
      v1.a > v2.a );
  }
  `,name:r,type:0}}function R0(){let r="less_";return{body:`
  float ${r}(float a, float b) {
    return float(a < b);
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4( v1.r < v2.r ,
                v1.g < v2.g,
                v1.b < v2.b,
                v1.a < v2.a );
  }
  `,name:r,type:0}}function B0(){let r="and_";return{body:`
  float ${r}(float a, float b) {
    return float( bool(a) && bool(b) );
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r && b2.r ,
                b1.g && b2.g,
                b1.b && b2.b,
                b1.a && b2.a );
  }
  `,name:r,type:0}}function L0(){let r="or_";return{body:`
  float ${r}(float a, float b) {
    return float( bool(a) || bool(b) );
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r || b2.r ,
                b1.g || b2.g,
                b1.b || b2.b,
                b1.a || b2.a );
  }
  `,name:r,type:0}}function M0(){let r="xor_";return{body:`
  float ${r}(float a, float b) {
    return float( bool(a) ^^ bool(b) );
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r ^^ b2.r ,
                b1.g ^^ b2.g,
                b1.b ^^ b2.b,
                b1.a ^^ b2.a );
  }
  `,name:r,type:0}}function z0(){return F0("pow")}function N0(){let r="prelu_";return{body:`
  float ${r}(float a, float b) {
    return a < 0.0 ? a * b: a;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4(
      v1.r < 0.0 ? v1.r * v2.r: v1.r,
      v1.g < 0.0 ? v1.g * v2.g: v1.g,
      v1.b < 0.0 ? v1.b * v2.b: v1.b,
      v1.a < 0.0 ? v1.a * v2.a: v1.a
      );
  }
  `,name:r,type:0}}function F0(r){let e=`${r}_`;return{body:`
  float ${e}(float a, float b) {
    return ${r}(a, b);
  }
  vec4 ${e}(vec4 v1, vec4 v2) {
    return ${r}(v1, v2);
  }
  `,name:e,type:0}}var rr,V0,mc,gc,bc,yc,vc,wc,xc,Tc,$c,_c,Sc,Ic,Ac=D(()=>{"use strict";We();zr();nt();Me();rr=(r,e,n,t=e[0].type,o)=>{let i=r.session.pack?2:0;return{name:n.name,inputNames:["A","B"],inputTypes:[i,i],cacheHint:o,get:()=>V0(r,e,n,t)}},V0=(r,e,n,t=e[0].type)=>{let o=r.session.pack?2:0,i=!ae.areEqual(e[0].dims,e[1].dims),s=e[0].dims,a=r.session.pack;if(i){let d=Bt.calcShape(e[0].dims,e[1].dims,!1);if(!d)throw new Error("Can't perform binary op on the given tensors");s=d;let p=s.length,h=e[0].dims.length!==0?e[0].dims.length:1,g=e[1].dims.length!==0?e[1].dims.length:1,y=e[0].dims.length!==0?"bcastIndices_A(indices, aindices);":"aindices[0] = 0;",w=e[1].dims.length!==0?"bcastIndices_B(indices, bindices);":"bindices[0] = 0;",I=pe(r.session.backend.glContext.version),T=a?`
      ${n.body}
      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();
        vec4 result = ${n.name}(a, b);
        ${I.output} = result;
      }`:`
      ${n.body}
      float process(int indices[${p}]) {
        int aindices[${h}];
        int bindices[${g}];
        ${y}
        ${w}
        return ${n.name}(_A(aindices), _B(bindices));
      }`;return{name:n.name,inputNames:["A","B"],inputTypes:[o,o],output:{dims:s,type:t,textureType:o},shaderSource:T,hasMain:a}}let u=pe(r.session.backend.glContext.version),l=`
    ${n.body}
    void main() {
      vec4 v1 = ${u.texture2D}(A, TexCoords);
      vec4 v2 = ${u.texture2D}(B, TexCoords);
      vec4 result = ${n.name}(v1, v2);
      ${u.output} = result;
    }
    `;return{name:n.name,inputNames:["A","B"],inputTypes:[o,o],output:{dims:e[0].dims,type:t,textureType:o},shaderSource:l,hasMain:!0}},mc=(r,e)=>[r.run(rr(r,e,O0()),e)],gc=(r,e)=>[r.run(rr(r,e,B0(),"bool"),e)],bc=(r,e)=>[r.run(rr(r,e,E0()),e)],yc=(r,e)=>[r.run(rr(r,e,k0(),"bool"),e)],vc=(r,e)=>[r.run(rr(r,e,D0(),"bool"),e)],wc=(r,e)=>[r.run(rr(r,e,R0(),"bool"),e)],xc=(r,e)=>[r.run(rr(r,e,C0()),e)],Tc=(r,e)=>[r.run(rr(r,e,L0(),"bool"),e)],$c=(r,e)=>[r.run(rr(r,e,z0()),e)],_c=(r,e)=>[r.run(rr(r,e,N0()),e)],Sc=(r,e)=>[r.run(rr(r,e,P0()),e)],Ic=(r,e)=>[r.run(rr(r,e,M0(),"bool"),e)]});var Oc,Ec,G0,Cc=D(()=>{"use strict";We();Oc=(r,e,n)=>(G0(e),[r.cast(e[0],n)]),Ec=r=>At.tensorDataTypeFromProto(r.attributes.getInt("to")),G0=r=>{if(!r||r.length!==1)throw new Error("Cast requires 1 input.");if(r[0].type==="string")throw new Error("Invalid input type.")}});var W0,H0,Pc,Ki,kc=D(()=>{"use strict";nt();Me();xr();bn();W0=(r,e)=>({name:"Concat (packed)",inputNames:Array.from({length:r},(n,t)=>`X${t}`),inputTypes:Array(r).fill(2),cacheHint:e}),H0=(r,e,n,t)=>{let o=n[0].dims.slice();if(t>=o.length||t<-1*o.length)throw new Error("axis specified for concat doesn't match input dimensionality");t<0&&(t=o.length+t);let i=o.slice(0);for(let M=1;M<n.length;M++){let R=n[M].dims.slice();for(let G=0;G<o.length;G++)if(G===t)i[t]+=R[G];else if(o[G]!==R[G])throw new Error("non concat dimensions must match")}let s=i.length,a=qn("coords",s),u=Lt(s),l=Tr(),d=n.map(M=>M.dims),p=mr(s),h=new Array(d.length-1);h[0]=d[0][t];for(let M=1;M<h.length;M++)h[M]=h[M-1]+d[M][t];let g=p[t],y=p.slice(-2),w=p.join(),I=`if (${g} < ${h[0]}) {
        return getChannel(
            getX0(${w}), vec2(${y.join()}));
        }`;for(let M=1;M<h.length;M++){let R=h[M-1];I+=`
            if (${g} < ${h[M]}  && ${g} >= ${h[M-1]}) {
              return getChannel(
                getX${M}(${Ki(p,g,R)}),
                vec2(${Ki(y,g,R)}));
            }`}let T=h.length,$=h[h.length-1];I+=`
            return getChannel(
              getX${T}(${Ki(p,g,$)}),
              vec2(${Ki(y,g,$)}));`;let O=pe(r.session.backend.glContext.version),C=`
          ${l}
          float getValue(${p.map(M=>"int "+M)}) {
            ${I}
          }

          void main() {
            ${u} coords = getOutputCoords();
            int lastDim = coords.${p[s-1]};
            coords.${p[s-1]} = coords.${p[s-2]};
            coords.${p[s-2]} = lastDim;

            vec4 result = vec4(getValue(${a}), 0., 0., 0.);

            ${a[s-1]} = ${a[s-1]} + 1;
            if (${a[s-1]} < ${i[s-1]}) {
              result.g = getValue(${a});
            }

            ${a[s-2]} = ${a[s-2]} + 1;
            if (${a[s-2]} < ${i[s-2]}) {
              result.a = getValue(${a});
            }

            ${a[s-1]} = ${a[s-1]} - 1;
            if (${a[s-2]} < ${i[s-2]} &&
                ${a[s-1]} < ${i[s-1]}) {
              result.b = getValue(${a});
            }
            ${O.output} = result;
          }
        `;return{...e,output:{dims:i,type:n[0].type,textureType:2},shaderSource:C,hasMain:!0}},Pc=(r,e,n)=>{let t=W0(e.length,n.cacheKey);return{...t,get:()=>H0(r,t,e,n.axis)}},Ki=(r,e,n)=>{let t=r.indexOf(e);return r.map((i,s)=>s===t?`${i} - ${n}`:i).join()}});var Dc,q0,j0,K0,Rc,Y0,X0,Z0,Bc,J0,Lc=D(()=>{"use strict";St();Me();kc();Dc=(r,e,n)=>(J0(e),r.session.pack&&e[0].dims.length>1?[r.run(Pc(r,e,n),e)]:[r.run(K0(r,e,n),e)]),q0=(r,e)=>({name:"Concat",inputNames:Array.from({length:r},(n,t)=>`X${t}`),inputTypes:Array(r).fill(0),cacheHint:e}),j0=(r,e,n,t)=>{let o=n[0].dims.slice();if(t>=o.length||t<-1*o.length)throw new Error("axis specified for concat doesn't match input dimensionality");t<0&&(t=o.length+t);let i=o.slice(0);for(let g=1;g<n.length;g++){let y=n[g].dims.slice();for(let w=0;w<o.length;w++)if(w===t)i[t]+=y[w];else if(o[w]!==y[w])throw new Error("non concat dimensions must match")}let s=i.length,a=new Array(n.length),u=0;for(let g=0;g<a.length;++g)u+=n[g].dims[t],a[g]=u;let l="";n.length<5?l=Rc(a):l=Y0(a);let d=X0(n.length,s),p=Z0(a),h=`
        ${d}
        ${p}
        ${l}
        float process(int indices[${s}]) {
          int textureIndex = getTextureWhereDataResides (indices[${t}]);

          if(textureIndex != 0) {
            indices[${t}] = indices[${t}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));
          }

          return fetchDataFromCorrectTexture(textureIndex, indices);
        }`;return{...e,output:{dims:i,type:n[0].type,textureType:0},shaderSource:h}},K0=(r,e,n)=>{let t=q0(e.length,n.cacheKey);return{...t,get:()=>j0(r,t,e,n.axis)}},Rc=r=>`int getTextureWhereDataResides(int index) {
      ${r.map((n,t)=>`if(index<${n}) {return ${t};}
`).join("")}
    }`,Y0=r=>Rc(r),X0=(r,e)=>{let n=[`float fetchDataFromCorrectTexture(int textureIndex, int indices[${e}]) {`];for(let t=0;t<r;++t)t===0?n.push(`	if (textureIndex == ${t}) { return _X${t}(indices); }`):t===r-1?n.push(`	else { return _X${t}(indices); }`):n.push(`	else if (textureIndex == ${t}) { return _X${t}(indices); }`);return n.push("	}"),n.join(`
`)},Z0=r=>{let e=["int getSizeInConcatAxisValueFromIndex(int index) {"];for(let n=0;n<r.length;++n)n===0?e.push(`	if (index == ${n}) { return ${r[n]}; }`):n===r.length-1?e.push(`	else { return ${r[n]}; }`):e.push(`	else if (index == ${n}) { return ${r[n]}; }`);return e.push("	}"),e.join(`
`)},Bc=r=>Ie({axis:r.attributes.getInt("axis")}),J0=r=>{if(!r||r.length<1)throw new Error("too few inputs");let e=r[0].type,n=r[0].dims.length;if(e==="string")throw new Error("string tensor is not supported yet");for(let t of r){if(t.type!==e)throw new Error("input tensors should be one type");if(t.dims.length!==n)throw new Error("input tensors should have the same shape")}}});function Q0(){return nr("abs")}function ev(){return nr("acos")}function tv(){return nr("asin")}function rv(){return nr("atan")}function nv(){return nr("ceil")}function ov(){return nr("cos")}function iv(r){let e="elu";return{body:`
  const float alpha = float(${r});

  float ${e}_(float a) {
    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;
  }
  vec4 ${e}_(vec4 v) {
    return vec4(${e}_(v.x), ${e}_(v.y), ${e}_(v.z), ${e}_(v.w));
  }
  `,name:e,type:0}}function av(){return nr("exp")}function sv(){return nr("floor")}function Ps(r,e){let n="clip";return{body:`
  const float min = float(${r});
  const float max = float(${e});

  float ${n}_(float a) {
    return clamp(a, min, max);
  }
  vec4 ${n}_(vec4 v) {
    return clamp(v, min, max);
  }
  `,name:n,type:0}}function uv(){let r="indentity";return{body:`
  float ${r}_(float a) {
    return a;
  }
  vec4 ${r}_(vec4 v) {
    return v;
  }
  `,name:r,type:0}}function lv(r){let e="leakyRelu";return{body:`
  const float alpha = float(${r});

  float ${e}_(float a) {
    return a < 0.0 ? a * alpha : a;
  }
  vec4 ${e}_(vec4 v) {
    return vec4(${e}_(v.x), ${e}_(v.y), ${e}_(v.z), ${e}_(v.w));
  }
  `,name:e,type:0}}function dv(){return nr("log")}function cv(){let r="neg";return{body:`
  float ${r}_(float a) {
    return -a;
  }
  vec4 ${r}_(vec4 v) {
    return -v;
  }
  `,name:r,type:0}}function fv(){let r="not";return{body:`
  float ${r}_(float a) {
    return float( ! bool(a) );
  }
  bool ${r}_(bool a) {
    return !a;
  }
  vec4 ${r}_(vec4 v) {
    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));
  }
  bvec4 ${r}_(bvec4 v) {
    return bvec4(!v.x, !v.y, !v.z, !v.w);
  }
  `,name:r,type:0}}function pv(){return nr("sin")}function ks(){let r="relu";return{body:`
  float ${r}_(float a) {
    return max( a, 0.0 );
  }
  vec4 ${r}_(vec4 v) {
    return max( v, 0.0 );
  }
  `,name:r,type:0}}function Ds(){let r="sigmoid";return{body:`
  float ${r}_(float a) {
    return 1.0 / (1.0 + exp(-a));
  }
  vec4 ${r}_(vec4 v) {
    return 1.0 / (1.0 + exp(-v));
  }
  `,name:r,type:0}}function hv(){return nr("sqrt")}function mv(){return nr("tan")}function gv(){let r="tanh";return{body:`
  float ${r}_(float a) {
    a = clamp(a, -10., 10.);
    a = exp(2.*a);
    return (a - 1.) / (a + 1.);
  }
  vec4 ${r}_(vec4 v) {
    v = clamp(v, -10., 10.);
    v = exp(2.*v);
    return (v - 1.) / (v + 1.);
  }
  `,name:r,type:0}}function nr(r){return{body:`
  float ${r}_(float a) {
    return ${r}(a);
  }
  vec4 ${r}_(vec4 v) {
    return ${r}(v);
  }
  `,name:r,type:0}}var bv,ht,Mc,zc,Nc,Fc,Rs,Vc,Uc,yv,Gc,Wc,Hc,qc,jc,Kc,Bs,Yc,Xc,Zc,Jc,Qc,ef,tf,rf,nf,of,af,Ls=D(()=>{"use strict";St();We();zr();nt();Me();bv=(r,e,n,t)=>{let o=r.session.pack?2:0,i=pe(r.session.backend.glContext.version);return{...e,output:{dims:n.dims,type:n.type,textureType:o},shaderSource:`
     ${t.body}
     void main() {
       vec4 v = ${i.texture2D}(A, TexCoords);
       v = ${t.name}_(v);
       ${i.output} = v;
     }
     `,hasMain:!0}},ht=(r,e,n,t)=>{let o=r.session.pack?2:0,i={name:n.name,inputTypes:[o],inputNames:["A"],cacheHint:t};return{...i,get:()=>bv(r,i,e,n)}},Mc=(r,e)=>[r.run(ht(r,e[0],Q0()),e)],zc=(r,e)=>[r.run(ht(r,e[0],ev()),e)],Nc=(r,e)=>[r.run(ht(r,e[0],tv()),e)],Fc=(r,e)=>[r.run(ht(r,e[0],rv()),e)],Rs=(r,e,n)=>[r.run(ht(r,e[0],Ps(n.min,n.max),n.cacheKey),e)],Vc=r=>Ie({min:r.attributes.getFloat("min",hn),max:r.attributes.getFloat("max",mn)}),Uc=(r,e)=>{let n=yv(r,e);return Rs(r,[e[0]],n)},yv=(r,e)=>{if(e.length>=3&&(!r.session.isInitializer(e[1].dataId)||!r.session.isInitializer(e[2].dataId)))throw new Error("dynamic clip attributes are not allowed");let n=e.length>=3?e[1].numberData[0]:hn,t=e.length>=3?e[2].numberData[0]:mn;return Ie({min:n,max:t})},Gc=(r,e)=>[r.run(ht(r,e[0],nv()),e)],Wc=(r,e)=>[r.run(ht(r,e[0],ov()),e)],Hc=(r,e,n)=>[r.run(ht(r,e[0],iv(n.alpha),n.cacheKey),e)],qc=r=>Ie({alpha:r.attributes.getFloat("alpha",1)}),jc=(r,e)=>[r.run(ht(r,e[0],av()),e)],Kc=(r,e)=>[r.run(ht(r,e[0],sv()),e)],Bs=(r,e)=>[r.run(ht(r,e[0],uv()),e)],Yc=(r,e,n)=>[r.run(ht(r,e[0],lv(n.alpha),n.cacheKey),e)],Xc=r=>Ie({alpha:r.attributes.getFloat("alpha",.01)}),Zc=(r,e)=>[r.run(ht(r,e[0],dv()),e)],Jc=(r,e)=>[r.run(ht(r,e[0],cv()),e)],Qc=(r,e)=>[r.run(ht(r,e[0],fv()),e)],ef=(r,e)=>[r.run(ht(r,e[0],ks()),e)],tf=(r,e)=>[r.run(ht(r,e[0],Ds()),e)],rf=(r,e)=>[r.run(ht(r,e[0],pv()),e)],nf=(r,e)=>[r.run(ht(r,e[0],hv()),e)],of=(r,e)=>[r.run(ht(r,e[0],mv()),e)],af=(r,e)=>[r.run(ht(r,e[0],gv()),e)]});function $r(r){let e;switch(r.activation){case"Relu":e=ks();break;case"Sigmoid":e=Ds();break;case"Clip":e=Ps(r.clipMin,r.clipMax);break;default:return{activationFunction:"",applyActivation:""}}let n=e.name,t=e.body,o=`value = ${n}_(value);`;return{activationFunction:t,applyActivation:o}}var jn,yn=D(()=>{"use strict";We();Ls();jn=r=>{let e=r.getString("activation","");if(e==="Clip"){let[n,t]=r.getFloats("activation_params",[hn,mn]);return{activation:e,clipMax:t,clipMin:n,activationCacheKey:`${e}:${n},${t}`}}return{activation:e,activationCacheKey:e}}});var wv,xv,sf,uf=D(()=>{"use strict";Zt();nt();Me();Yi();yn();wv=(r,e)=>({name:"GroupedConv",inputNames:r?["X","W","Bias"]:["X","W"],inputTypes:r?[0,0,0]:[0,0],cacheHint:e}),xv=(r,e,n,t)=>{let i=e.length>2?"value += getBias(output_channel);":"",s=e[0].dims.slice(),a=e[1].dims.slice(),u=a[0]/t.group;He.verbose("GroupedConv",`autpPad:${t.autoPad}, dilations:${t.dilations}, group:${t.group}, kernelShape:${t.kernelShape}, pads:${t.pads}, strides:${t.strides}`);let l=Kn(s,a,t.dilations,t.pads,t.strides),d=pe(r.session.backend.glContext.version),{activationFunction:p,applyActivation:h}=$r(t),g=`
  const ivec2 strides = ivec2(${t.strides[0]}, ${t.strides[1]});
  const ivec2 pads = ivec2(${t.pads[0]}, ${t.pads[1]});
  ${p}
  void main() {
    ivec4 coords = getOutputCoords();
    int batch = coords.x;
    int output_channel = coords.y;
    ivec2 xRCCorner = coords.zw * strides - pads;
    int group_id = output_channel / ${u};

    float value = 0.0;
    for (int wInChannel = 0; wInChannel < ${a[1]}; wInChannel++) {
      int input_channel = group_id * ${a[1]} + wInChannel;
      for (int wHeight = 0; wHeight < ${a[2]}; wHeight++) {
        int xHeight = xRCCorner.x + wHeight * ${t.dilations[0]};

        if (xHeight < 0 || xHeight >= ${s[2]}) {
          continue;
        }

        for (int wWidth = 0; wWidth < ${a[3]}; wWidth++) {
          int xWidth = xRCCorner.y + wWidth * ${t.dilations[1]};
          if (xWidth < 0 || xWidth >= ${s[3]}) {
            continue;
          }

          float xVal = getX(batch, input_channel, xWidth, xHeight);
          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);
          value += xVal*wVal;
        }
      }
    }
    ${i}
    ${h}
    ${d.output} = vec4(value, .0, .0, .0);
  }
`;return{...n,output:{dims:l,type:e[0].type,textureType:0},shaderSource:g,hasMain:!0}},sf=(r,e,n)=>{let t=wv(e.length>2,n.cacheKey);return{...t,get:()=>xv(r,e,t,n)}}});var Tv,$v,lf,df=D(()=>{"use strict";nt();Me();bn();Tv=r=>({name:"Im2Col (packed)",inputNames:["A"],inputTypes:[2],cacheHint:r}),$v=(r,e,n,t,o,i)=>{let s=n.dims,a=t.dims,u=2,l=3,d=o.length,p=[a[1]*a[2]*a[3],o[2]*o[3]],h=a[2]*a[3],g=Tr(),y=pe(r.session.backend.glContext.version),w="";for(let T=0;T<=1;T++)for(let $=0;$<=1;$++)w+=`
            blockIndex = rc.x + ${$};
            pos = rc.y + ${T};

            if(blockIndex < ${p[1]} && pos < ${p[0]}) {
              offsetY = int(blockIndex / (${o[d-1]})) * ${i.strides[0]} -
                ${i.pads[0]};
              d0 = offsetY + ${i.dilations[0]} * (imod(pos, ${h}) / ${a[2]});

              if(d0 < ${s[u]} && d0 >= 0) {
                offsetX = imod(blockIndex, ${o[d-1]}) * ${i.strides[1]} -
                  ${i.pads[1]};
                d1 = offsetX + ${i.dilations[1]} * imod(imod(pos, ${h}), ${a[2]});

                if(d1 < ${s[l]} && d1 >= 0) {

                  ch = int(float(pos)/ ${h}.);
                    innerDims = vec2(d0, d1);
                    result[${T*2+$}] = getChannel(
                      getA(0, ch, int(innerDims.x),
                      int(innerDims.y)), innerDims);
                }
              }
            }

          `;let I=`
      ${g}

      void main() {
        ivec2 rc = getOutputCoords();
          vec4 result = vec4(0.0);
          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
          vec2 innerDims;
          ${w}
          ${y.output} = result;
      }
            `;return{...e,output:{dims:p,type:n.type,textureType:2},shaderSource:I,hasMain:!0}},lf=(r,e,n,t,o)=>{let i=Tv(o.cacheKey);return{...i,get:()=>$v(r,i,e,n,t,o)}}});function Sv(r,e,n){let t=e[0].dims,o=e[1].dims,i=Bt.calcShape(t,o,!0);if(!i)throw new Error("Can't use matmul on the given tensors");let s=Lt(i.length),a=mr(),{activationFunction:u,applyActivation:l}=$r(n),d=e.length>2,p=d?"value += getBiasForMatmul();":"",h=d?`${zs(s,a,e[2].dims,i,!1)}`:"",g=i.length,y=t.length,w=o.length,I=t[t.length-1],T=`
    ${u}
    ${h}
    float process(int indices[${g}]) {
        int a[${y}];
        int b[${w}];
        bcastMatmulIndices_A(indices, a);
        bcastMatmulIndices_B(indices, b);

        float value;
        for (int k=0; k<${I}; ++k) {
            a[${y-1}] = k;
            b[${w-2}] = k;
            value += _A(a) * _B(b);
        }
        ${p}
        ${l}
        return value;
    }`;return{...r,output:{dims:i,type:e[0].type,textureType:0},shaderSource:T}}function Ms(r,e){let n=_v(r.length>2,e.activationCacheKey);return{...n,get:()=>Sv(n,r,e)}}function zs(r,e,n,t,o){let i="",s=n.length,a=t.length,u=a-s;a<2&&s>0?i="coords":i=n.map((w,I)=>`coords.${e[I+u]}`).join(", ");let d=Bt.getBroadcastDims(n,t).map(w=>`coords.${e[w+u]} = 0;`).join(`
`),h=ae.size(n)===1,g="vec4(outputValue.xx, outputValue.yy)";return h&&(g="vec4(outputValue.x)"),o?`
vec4 getBiasForMatmul() {
  ${r} coords = getOutputCoords();
  ${d}
  vec4 outputValue = getBias(${i});
  return ${g};
}`:`
float getBiasForMatmul() {
  ${r} coords = getOutputCoords();
  ${d}
  return getBias(coords.x);
}`}var cf,ff,_v,Iv,Xi=D(()=>{"use strict";We();Me();xr();yn();Ns();cf=(r,e,n)=>(Iv(e),r.session.pack?[r.run(Zi(r,e,n),e)]:[r.run(Ms(e,n),e)]),ff=r=>jn(r.attributes),_v=(r,e)=>({name:"MatMul",inputNames:r?["A","B","Bias"]:["A","B"],inputTypes:r?[0,0,0]:[0,0],cacheHint:e});Iv=r=>{if(!r||r.length!==2)throw new Error("MatMul requires 2 inputs.");if(r[0].dims[r[0].dims.length-1]!==r[1].dims[r[1].dims.length-2])throw new Error("shared dimension does not match.");if(r[0].type!=="float32"&&r[0].type!=="float64"||r[1].type!=="float32"&&r[1].type!=="float64")throw new Error("inputs should be float type");if(r[0].type!==r[1].type)throw new Error("inputs types should match")}});function Ev(r,e,n,t){let o=[],i=[],s=n[0].dims,a=n[1].dims,u=s.length,l=a.length,d=t.length,p=d-u,h=d-l;o=s.map((O,C)=>`coords.${e[C+p]}`),o[u-1]="i*2",o.join(", "),i=a.map((O,C)=>`coords.${e[C+h]}`),i[l-2]="i*2",i.join(", ");let g=Bt.getBroadcastDims(s,t),y=Bt.getBroadcastDims(a,t),w=g.map(O=>`coords.${e[O+p]} = 0;`).join(`
`),I=y.map(O=>`coords.${e[O+h]} = 0;`).join(`
`),T=`int lastDim = coords.${e[d-1]};
  coords.${e[d-1]} = coords.${e[d-2]};
  coords.${e[d-2]} = lastDim;`;return`
vec4 getAAtOutCoordsMatmul(int i) {
  ${r} coords = getOutputCoords();
  ${T}
  ${w}
  vec4 outputValue = getA(${o});
  return outputValue;
}

vec4 getBAtOutCoordsMatmul(int i) {
  ${r} coords = getOutputCoords();
  ${T}
  ${I}
  vec4 outputValue = getB(${i});
  return outputValue;
}`}function Cv(r,e){let n="";for(let t=0;t<e-2;t++)n+=`rc.${r[t]}, `;return n+=`rc.${r[e-2]}, i*2`,n}function Pv(r,e){let n="";for(let t=0;t<e-2;t++)n+=`rc.${r[t]}, `;return n+=`i*2, rc.${r[e-1]}`,n}var Av,Ov,Zi,Ns=D(()=>{"use strict";We();nt();Me();xr();yn();Xi();Av=(r,e)=>({name:"MatMul (packed)",inputNames:r?["A","B","Bias"]:["A","B"],inputTypes:r?[2,2,2]:[2,2],cacheHint:e}),Ov=(r,e,n,t)=>{let o=n.length>2,i=o?"value += getBiasForMatmul();":"",s=n[0].dims,a=n[1].dims,u=Bt.calcShape(s,a,!0),l=!ae.areEqual(n[0].dims,n[1].dims);if(!u)throw new Error("Can't use matmul on the given tensors");let d=s[s.length-1],p=Math.ceil(d/2),h=s.length,g=a.length,y=pe(r.session.backend.glContext.version),w=Lt(u.length),I=u.length,T=mr(),{activationFunction:$,applyActivation:O}=$r(t),C=o?`${zs(w,T,n[2].dims,u,!0)}`:"",M=l?`${Ev(w,T,n,u)}`:"",R=l?"getAAtOutCoordsMatmul(i)":`getA(${Cv(T,h)})`,G=l?"getBAtOutCoordsMatmul(i)":`getB(${Pv(T,g)})`,q=l?"":`${w} rc =
          getOutputCoords(); int lastDim = rc.${T[I-1]}; rc.${T[I-1]} =
          rc.${T[I-2]}; rc.${T[I-2]} = lastDim;
      `,X=`
            ${M}
            ${C}
            ${$}
            void main() {
              ${q}

              vec4 value = vec4(0);
              for (int i = 0; i < ${p}; i++) {
                vec4 a = ${R};
                vec4 b = ${G};

                value += (a.rrbb * b.rgrg);
                value += (a.ggaa * b.baba);
              }
              ${i}
              ${O}
              ${y.output} = value;
            }`;return{...e,output:{dims:u,type:n[0].type,textureType:2},shaderSource:X,hasMain:!0}},Zi=(r,e,n)=>{let t=Av(e.length>2,n.activationCacheKey);return{...t,get:()=>Ov(r,t,e,n)}}});var pf,hf=D(()=>{"use strict";Yi();df();Ns();pf=(r,e,n)=>{let t=e[0].dims,o=e[1].dims,i=Kn(t,o,n.dilations,n.pads,n.strides),s=r.run(lf(r,e[0],e[1],i,n),[e[0]]),a=r.reshapePacked(e[1],[o[0],o[1]*o[2]*o[3]]),u=e.length===3?[a,s,e[2]]:[a,s],l=r.run(Zi(r,u,n),u);return r.reshapePacked(l,i)}});var kv,Dv,mf,Fs,Vs=D(()=>{"use strict";Me();kv=r=>({name:"Im2Col",inputNames:["X"],inputTypes:[0],cacheHint:r}),Dv=(r,e,n,t,o,i)=>{let s=n.dims,a=t.dims,u=o.length,l=Fs(s,a,o,4),d=`
        const int XC = ${s[1]};
        const int XH = ${s[2]};
        const int XW = ${s[3]};
        const int KH = ${i.kernelShape[0]};
        const int KW = ${i.kernelShape[1]};
        const int dilationH = ${i.dilations[0]};
        const int dilationW = ${i.dilations[1]};
        const int strideH = ${i.strides[0]};
        const int strideW = ${i.strides[1]};
        const int padH = ${i.pads[0]};
        const int padW = ${i.pads[1]};
        const int KHKW = KH*KW;
        const int XCKHKW = XC * KHKW;
        const int outputChannels = 4;
        vec4 process(int indices[${u}]) {
          int b  = indices[0]; // batch size
          int oh = indices[1] * strideH - padH; //output height
          int ow = indices[2] * strideW - padW; //output width
          int p = indices[3] * outputChannels; //patch
          vec4 value = vec4(0.0);
          for(int i=0; i < outputChannels; ++i) {
            if(p < XCKHKW) {
              int patchC = p / KHKW;
              int patchH = (p - patchC*KHKW) / KW;
              int patchW = (p - patchC*KHKW) - patchH * KW;
              int xh2 = oh + patchH * dilationH;
              int xw2 = ow + patchW * dilationW;
              int x[${s.length}];
              x[0] = b;
              x[1] = patchC;
              x[2] = xh2;
              x[3] = xw2;
              if(xh2 >= 0 &&
                  xh2 < XH &&
                  xw2 >= 0 &&
                  xw2 < XW) {
                value[i] = _X(x);
              }
            }
            ++p;
          }
          return value;
        }
        `;return{...e,output:{dims:l,type:n.type,textureType:4},shaderSource:d}},mf=(r,e,n,t,o)=>{let i=kv(o.cacheKey);return{...i,get:()=>Dv(r,i,e,n,t,o)}},Fs=(r,e,n,t=4)=>[n[0],n[2],n[3],Math.ceil(r[1]*e[2]*e[3]/t)]});var Rv,Bv,gf,bf=D(()=>{"use strict";We();nt();Me();yn();Vs();Rv=(r,e)=>({name:"ConvDotProduct",inputNames:r?["Im2Col","K","B"]:["Im2Col","K"],inputTypes:r?[0,4,0]:[0,4],cacheKey:e.activationCacheKey}),Bv=(r,e,n,t,o)=>{let i=n[0].dims,s=n[1].dims,a=[s[0],Math.ceil(i[1]*s[2]*s[3]/4)],u=Fs(i,s,t),[l,d]=r.calculateTextureWidthAndHeight(a,4),p=ae.computeStrides(u),[h,g]=r.calculateTextureWidthAndHeight(u,4),y=t.length,w=n.length<3?"0.0":"_B(b)",I=Math.ceil(i[1]*s[2]*s[3]/4),{activationFunction:T,applyActivation:$}=$r(o),O=pe(r.session.backend.glContext.version),C=`
${T}
float process(int indices[${y}]) {
  int b[1];
  b[0] = indices[1];
  int im2col[4];
  im2col[0] = indices[0];
  im2col[1] = indices[2];
  im2col[2] = indices[3];
  int im2colOffset = im2col[0] * ${p[0]} + im2col[1] * ${p[1]} + im2col[2] * ${p[2]};
  int kernelOffset = indices[1] * ${a[1]};
  float value = ${w};
  for (int i = 0; i < ${I}; ++i) {
    vec2 im2colCoords = offsetToCoords(im2colOffset, ${h}, ${g});
    vec2 kernelCoords = offsetToCoords(kernelOffset, ${l}, ${d});
    value += dot(${O.texture2D}(Im2Col, im2colCoords), ${O.texture2D}(K, kernelCoords));
    ++im2colOffset;
    ++kernelOffset;
  }
  ${$}
  return value;
}`;return{...e,output:{dims:t,type:n[0].type,textureType:0},shaderSource:C}},gf=(r,e,n,t)=>{let o=Rv(e.length>2,t);return{...o,get:()=>Bv(r,o,e,n,t)}}});var Kn,Us,Lv,Mv,zv,Nv,Gs,Fv,Yi=D(()=>{"use strict";St();We();uf();hf();bf();yn();Vs();Xi();Kn=(r,e,n,t,o)=>{let i=r[0],s=r.slice(2),a=s.length,u=e[0],d=e.slice(2).map((y,w)=>y+(y-1)*(n[w]-1)),h=s.map((y,w)=>y+t[w]+t[w+a]).map((y,w)=>Math.floor((y-d[w]+o[w])/o[w]));return[i,u].concat(...h)},Us=(r,e,n)=>(Fv(e,n),Lv(r,e,n)),Lv=(r,e,n)=>{let t=Nv(n,e),o=r.session.pack,i=t.kernelShape[0]===1&&t.kernelShape[1]===1;return t.group>1?[r.run(sf(r,e,t),e)]:i&&o?[Mv(r,e,t)]:o&&e[0].dims.length===4&&e[0].dims[0]===1&&!i?[pf(r,e,t)]:[zv(r,e,t)]},Mv=(r,e,n)=>{let t=e[0].dims,o=e[1].dims,i=Kn(t,o,n.dilations,n.pads,n.strides),s=r.reshapeUnpacked(e[0],[t[1],t[2]*t[3]]),a=r.reshapeUnpacked(e[1],[o[0],o[1]]),u=e.length>2?[a,s,e[2]]:[a,s],l=r.run(Ms(u,n),u);return r.reshapeUnpacked(l,i)},zv=(r,e,n)=>{let t=e[0].dims,o=e[1].dims,i=Kn(t,o,n.dilations,n.pads,n.strides),s=r.run(mf(r,e[0],e[1],i,n),[e[0]]),a=e.length===3?[s,e[1],e[2]]:[s,e[1]];return r.run(gf(r,e,i,n),a)},Nv=(r,e)=>{let n=r.kernelShape.slice();if(r.kernelShape.length===0)for(let i=2;i<e[1].dims.length;++i)n.push(e[1].dims[i]);let t=r.pads.slice();pn.adjustPadsBasedOnAutoPad(e[0].dims,r.strides,r.dilations,n,t,r.autoPad);let o=Object.assign({},r);return Object.assign(o,{kernelShape:n,pads:t,cacheKey:r.cacheKey}),o},Gs=r=>{let e=r.attributes,n=jn(e),t=e.getString("auto_pad","NOTSET"),o=e.getInts("dilations",[1,1]),i=e.getInt("group",1),s=e.getInts("kernel_shape",[]),a=e.getInts("pads",[0,0,0,0]),u=e.getInts("strides",[1,1]);return Ie({autoPad:t,dilations:o,group:i,kernelShape:s,pads:a,strides:u,...n})},Fv=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4||r[1].dims.length!==4)throw new Error("currently only support 2-dimensional conv");let n=r[0].dims[1],t=r[1].dims[1]*e.group;if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(r.length===3&&(r[2].dims.length!==1||r[1].dims[0]!==r[2].dims[0]))throw new Error("invalid bias");let o=r[0].dims.length-2;if(e.dilations.length!==o)throw new Error(`dilations should be ${o}D`);if(e.strides.length!==o)throw new Error(`strides should be ${o}D`);if(e.pads.length!==o*2)throw new Error(`pads should be ${o*2}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape");if(r[0].type!=="float32"||r[1].type!=="float32")throw new Error("Conv input(X,W) should be float tensor");if(r.length===3&&r[2].type!=="float32")throw new Error("Conv input(bias) should be float tensor")}});var Vv,Uv,Gv,yf,Wv,Hv,qv,jv,Kv,Yv,vf,Xv,wf=D(()=>{"use strict";St();nt();Me();yn();Vv=(r,e,n,t,o,i)=>(r-1)*e+n+(t-1)*o+1-i,Uv=(r,e,n,t,o)=>{let i=Math.floor(r/2);e==="SAME_UPPER"?(n[t]=i,n[o]=r-i):e==="SAME_LOWER"&&(n[t]=r-i,n[o]=i)},Gv=(r,e,n,t,o,i,s,a)=>{let u=r.length-2,l=a.length===0;for(let d=0;d<u;++d){let p=l?r[d+2]*i[d]:a[d],h=Vv(r[d+2],i[d],o[d],e[d],n[d],p);Uv(h,t,o,d,d+u),l&&a.push(i[d]*(r[d+2]-1)+s[d]+(e[d]-1)*n[d]+1-o[d]-o[d+u])}},yf=(r,e,n)=>(Xv(e,n),Wv(r,e,n)),Wv=(r,e,n)=>{let t=Yv(n,e);return[Kv(r,e,t)]},Hv=(r,e)=>({name:"ConvTranspose",inputNames:r?["X","W","B"]:["X","W"],inputTypes:r?[0,0,0]:[0,0],cacheHint:e}),qv=(r,e,n,t)=>{let i=e.length>2?"getB(output_channel)":"0.0",s=e[0].dims,a=e[1].dims,u=a[1],l=a[0]/t.group,d=[e[0].dims[0],e[1].dims[1]*t.group,...t.outputShape],p=pe(r.session.backend.glContext.version),{activationFunction:h,applyActivation:g}=$r(t),y=`
  const ivec2 strides = ivec2(${t.strides[0]}, ${t.strides[1]});
  const ivec2 pads = ivec2(${t.pads[0]}, ${t.pads[1]});
  ${h}
  void main() {
    ivec4 coords = getOutputCoords();
    int batch = coords.x;
    int output_channel = coords.y;

    ivec2 loc = coords.zw + pads;

    int group_id = output_channel / ${u};
    int wOutChannel = output_channel - group_id * ${u};

    float value = ${i};
    for (int inChannelOffset = 0; inChannelOffset < ${l}; inChannelOffset++) {
      int input_channel = group_id * ${l} + inChannelOffset;
      for (int wWOff = 0; wWOff < ${a[2]}; wWOff++) {
        for (int wHOff = 0; wHOff < ${a[3]}; wHOff++) {
          ivec2 wOff = ivec2(wWOff * ${t.dilations[0]}, wHOff * ${t.dilations[1]});
          ivec2 wLoc = loc - wOff;
          ivec2 wLocIn = wLoc / strides;
          if (
            wLocIn * strides == wLoc &&
            wLocIn.x >= 0 && wLocIn.x < ${s[2]} &&
            wLocIn.y >= 0 && wLocIn.y < ${s[3]}
          ) {
            float xVal = getX(batch, input_channel, wLocIn.y, wLocIn.x);
            float wVal = getW(input_channel, wOutChannel, wHOff, wWOff);
            value += xVal * wVal;
          }
        }
      }
    }
    ${g}
    ${p.output} = vec4(value, .0, .0, .0);
  }
`;return{...n,output:{dims:d,type:e[0].type,textureType:0},shaderSource:y,hasMain:!0}},jv=(r,e,n)=>{let t=Hv(e.length>2,n.cacheKey);return{...t,get:()=>qv(r,e,t,n)}},Kv=(r,e,n)=>r.run(jv(r,e,n),e),Yv=(r,e)=>{let n=r.kernelShape.slice();if(r.kernelShape.length===0)for(let a=2;a<e[1].dims.length;++a)n.push(e[1].dims[a]);let t=r.pads.slice(),o=r.outputShape.slice(),i=e[0].dims;Gv(i,n,r.dilations,r.autoPad,t,r.strides,r.outputPadding,o);let s=Object.assign({},r);return Object.assign(s,{kernelShape:n,pads:t,outputShape:o,cacheKey:r.cacheKey}),s},vf=r=>{let e=r.attributes,n=jn(e),t=e.getString("auto_pad","NOTSET"),o=e.getInts("dilations",[1,1]),i=e.getInt("group",1),s=e.getInts("kernel_shape",[]),a=e.getInts("output_padding",[0,0]),u=e.getInts("output_shape",[]),l=e.getInts("pads",[0,0,0,0]),d=e.getInts("strides",[1,1]);return Ie({autoPad:t,dilations:o,group:i,kernelShape:s,outputPadding:a,outputShape:u,pads:l,strides:d,...n})},Xv=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4||r[1].dims.length!==4)throw new Error("currently only support 2-dimensional conv");let n=r[0].dims[1],t=r[1].dims[0];if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let o=r[1].dims[1]*e.group;if(r.length===3&&(r[2].dims.length!==1||r[2].dims[0]!==o))throw new Error("invalid bias");let i=r[0].dims.length-2;if(e.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(e.strides.length!==i)throw new Error(`strides should be ${i}D`);if(e.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(e.outputPadding.length!==i)throw new Error(`output_padding should be ${i}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape");if(e.outputShape.length!==0&&e.outputShape.length!==r[0].dims.length-2)throw new Error("invalid output shape");if(r[0].type!=="float32"||r[1].type!=="float32")throw new Error("ConvTranspose input(X,W) should be float tensor");if(r.length===3&&r[2].type!=="float32")throw new Error("ConvTranspose input(bias) should be float tensor")}});var xf,vn,Tf,Zv,$f,Jv,Qv,ew,Ji=D(()=>{"use strict";St();We();Me();xf={name:"Transpose",inputNames:["A"],inputTypes:[0]},vn=(r,e,n)=>(ew(e),[r.run({...xf,cacheHint:n.cacheKey,get:()=>Zv(r,e[0],n.perm)},e)]),Tf=r=>Ie({perm:r.attributes.getInts("perm",[])}),Zv=(r,e,n)=>{let t=e.dims;n=$f(t,n);let o=Jv(t,n),i=t.length,s=`
      ${Qv("perm",n,i)}
      float process(int indices[${i}]) {
        int a[${i}];
        perm(a, indices);
        return _A(a);
      }`;return{...xf,output:{dims:o,type:e.type,textureType:0},shaderSource:s}},$f=(r,e)=>(e&&e.length!==r.length&&(e=[...r.keys()].reverse()),e),Jv=(r,e)=>(e=$f(r,e),ae.sortBasedOnPerm(r,e)),Qv=(r,e,n)=>{let t=[];t.push(`void ${r}(out int a[${n}], int src[${n}]) {`);for(let o=0;o<n;++o)t.push(`	a[${e[o]}]=src[${o}];`);return t.push("	}"),t.join(`
`)},ew=r=>{if(!r||r.length!==1)throw new Error("Transpose requires 1 input.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("input should be float tensor")}});var _f,Sf,tw,If=D(()=>{"use strict";Ji();_f=(r,e,n)=>{tw(e);let t=n.blocksize,o=t*t,i=n.mode==="DCR"?[0,3,4,1,5,2]:[0,1,4,2,5,3],s=n.mode==="DCR"?[e[0].dims[0],t,t,e[0].dims[1]/o,e[0].dims[2],e[0].dims[3]]:[e[0].dims[0],e[0].dims[1]/o,t,t,e[0].dims[2],e[0].dims[3]],a=r.reshapeUnpacked(e[0],s),u={perm:i,cacheKey:`${i}`},[l]=vn(r,[a],u),d=[e[0].dims[0],e[0].dims[1]/o,e[0].dims[2]*t,e[0].dims[3]*t];return[r.reshapeUnpacked(l,d)]},Sf=r=>{let e=r.attributes.getInt("blocksize");if(e<1)throw new Error(`blocksize must be >= 1, but got : ${e} for DepthToSpace`);let n=r.attributes.getString("mode","DCR");if(n!=="DCR"&&n!=="CRD")throw new Error(`unrecognized mode: ${n} for DepthToSpace`);return{mode:n,blocksize:e}},tw=r=>{if(r.length!==1)throw new Error(`DepthToSpace expect 1 inputs, but got ${r.length}`);if(r[0].type==="string"||r[0].dims.length!==4)throw new TypeError("DepthToSpace input should be a 4-D numeric tensor")}});var Af,Of,rw,Ef=D(()=>{"use strict";We();Af=(r,e,n)=>{rw(e,n);let t=ae.flattenShape(e[0].dims,n);return[r.reshapeUnpacked(e[0],t)]},Of=r=>r.attributes.getInt("axis",1),rw=(r,e)=>{if(!r||r.length!==1)throw new Error("Flatten requires 1 input.");let n=r[0].dims.length;if(n===0)throw new Error("scalar tensor is not supported.");if(e<-n||e>n)throw new Error("Invalid axis");if(r[0].type==="string")throw new Error("string tensor is not supported.")}});var Xr,Do=D(()=>{"use strict";Xr=["float32","float64","int32","int16","int8","uint16","uint32","uint8"]});var Cf,Pf,nw,ow,iw,aw,kf=D(()=>{"use strict";St();Do();We();Me();Cf=(r,e,n)=>(aw(e,n.axis),[r.run(iw(r,e,n),e)]),Pf=r=>Ie({axis:r.attributes.getInt("axis",0)}),nw={name:"Gather",inputNames:["A","B"],inputTypes:[0,0]},ow=(r,e,n,t)=>{let o=n[0].dims.slice(),i=n[1].dims.slice(),s=new Array(o.length+i.length-1);t=ae.normalizeAxis(t,o.length);let a=[];for(let h=0;h<s.length;h++)h<t?(s[h]=o[h],a.push(`inputIdx[${h}] = outputIdx[${h}];`)):h<t+i.length?(s[h]=i[h-t],a.push(`indexDataIdx[${h-t}] = outputIdx[${h}];`)):(s[h]=o[h-i.length+1],a.push(`inputIdx[${h-i.length+1}] = outputIdx[${h}];`));let u=s.length||1,l=o.length,d=i.length||1,p=`
      float process(int outputIdx[${u}]) {
        int inputIdx[${l}];
        int indexDataIdx[${d}];
        indexDataIdx[0] = 0;
        ${a.join(`
        `)}
        int idx = int(_B(indexDataIdx));
        inputIdx[${t}] = idx < 0 ? idx + ${o[t]} : idx;
        return _A(inputIdx);
      }`;return{...e,output:{dims:s,type:n[0].type,textureType:0},shaderSource:p}},iw=(r,e,n)=>{let t={...nw,cacheHint:n.cacheKey};return{...t,get:()=>ow(r,t,e,n.axis)}},aw=(r,e)=>{if(!r||r.length!==2)throw new Error("Gather requires 2 inputs.");let n=r[0].dims.length;if(n<1)throw new Error("Invalid input shape.");if(e<-n||e>n-1)throw new Error("Invalid axis.");if(Xr.indexOf(r[0].type)===-1)throw new Error("Invaid input type.");if(r[1].type!=="int32"&&r[1].type!=="int16")throw new Error("Invaid input type.")}});var Ws,Df,Rf,Bf,sw,uw,lw,Lf=D(()=>{"use strict";St();We();Me();Ws=(r,e,n)=>(lw(e,n),[r.run(sw(e,n),e)]),Df=(r,e)=>{let n=r.attributes.getInt("transA",0)!==0,t=r.attributes.getInt("transB",0)!==0,o=r.attributes.getFloat("alpha",1),i=r.attributes.getFloat("beta",1);return Ie({transA:n,transB:t,alpha:o,beta:i,isOptionalC:e})},Rf=r=>Df(r,!1),Bf=r=>Df(r,!0),sw=(r,e)=>{let n={name:"Gemm",inputNames:r.length===3?["A","B","C"]:["A","B"],inputTypes:r.length===3?[0,0,0]:[0,0],key:e.cacheKey};return{...n,get:()=>uw(n,r,e)}},uw=(r,e,n)=>{let t=e[0].dims.slice(),o=e[1].dims.slice(),[i,s]=Vi.getShapeOfGemmResult(t,n.transA,o,n.transB,e.length===3?e[2].dims:void 0),a=[i,s];if(!a)throw new Error("Can't use gemm on the given tensors");let u=t[t.length-1],l="";n.transA&&(u=t[0]),n.transA&&n.transB?l="value += _A_T(a) * _B_T(b);":n.transA&&!n.transB?l="value += _A_T(a) * _B(b);":!n.transA&&n.transB?l="value += _A(a) * _B_T(b);":!n.transA&&!n.transB&&(l="value += _A(a) * _B(b);");let d=a.length,p=e.length===3?`int c[${e[2].dims.length}];`:"",h=e.length===3?"bcastIndices_C(indices, c);":"",g=e.length===3?"value += beta * _C(c);":"",y=`
      float process(int indices[${d}]) {
          int a[${d}];
          int b[${d}];
          ${p}

          copyVec(indices, a);
          copyVec(indices, b);
          ${h}

          float value = 0.0;
          for (int k=0; k<${u}; ++k) {
              a[${d-1}] = k;
              b[${d-2}] = k;
              ${l}
          }

          value = value * alpha;
          ${g}
          return value;
      }`;return{...r,output:{dims:a,type:e[0].type,textureType:0},variables:[{name:"alpha",type:"float",data:n.alpha},{name:"beta",type:"float",data:n.beta}],shaderSource:y}},lw=(r,e)=>{if(!r)throw new Error("Input is missing");if(e.isOptionalC&&(r.length<2||r.length>3))throw new Error("Invaid input shape.");if(!e.isOptionalC&&r.length!==3)throw new Error("Gemm requires 3 inputs");if(r.length===3&&r[2].dims.length!==1&&r[2].dims.length!==2)throw new Error("Invalid input shape of C");if(r[0].type!=="float32"&&r[0].type!=="float64"||r[1].type!=="float32"&&r[1].type!=="float64"||r.length===3&&r[2].type!=="float32"&&r[2].type!=="float64")throw new Error("Invalid input type.");if(r[0].type!==r[1].type||r.length===3&&r[0].type!==r[2].type)throw new Error("Input types are mismatched")}});var Mf,zf,dw,cw,fw,pw,hw,Nf=D(()=>{"use strict";St();Me();Mf=(r,e,n)=>(hw(e),[r.run(fw(r,e,n),e)]),zf=r=>{let e=r.attributes.getFloat("scale"),n=r.attributes.getFloats("bias");return Ie({scale:e,bias:n})},dw={name:"ImageScaler",inputNames:["X"],inputTypes:[0]},cw=(r,e,n,t)=>{let o=n[0].dims.slice(),i=o.length,a=`
      ${pw(t.bias.length)}
      float process(int indices[${i}]) {
        return _X(indices) * scale + getBias(bias, indices[1]);
      }`;return{...e,output:{dims:o,type:n[0].type,textureType:0},variables:[{name:"bias",type:"float",arrayLength:t.bias.length,data:t.bias},{name:"scale",type:"float",data:t.scale}],shaderSource:a}},fw=(r,e,n)=>{let t={...dw,cacheHint:n.cacheKey};return{...t,get:()=>cw(r,t,e,n)}},pw=r=>{let e=[`float getBias(float bias[${r}], int channel) {`];for(let n=0;n<r;++n)n===0?e.push(`	if (channel == ${n}) { return bias[${n}]; }`):n===r-1?e.push(`	else { return bias[${n}]; }`):e.push(`	else if (channel == ${n}) { return bias[${n}]; }`);return e.push("	}"),e.join(`
`)},hw=r=>{if(!r||r.length!==1)throw new Error("ImageScaler requires 1 input.");if(r[0].dims.length!==4)throw new Error("Invalid input shape.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.")}});var Vf,Uf,Ff,mw,gw,bw,yw,vw,ww,Gf=D(()=>{"use strict";nt();Me();Vf=(r,e,n)=>{ww(e);let t=r.run(gw(e[0]),e);return[r.run(vw(r,e[0],n,t.dims),[e[0],t,e[1],e[2]])]},Uf=r=>r.attributes.getFloat("epsilon",1e-5),Ff={name:"InstanceNormalization_MeanAndVariance",inputNames:["X"],inputTypes:[0]},mw=(r,e)=>{let n=e.dims.slice(),t=n[1],o=n[2]*n[3],i=[n[0],t],s=`
      vec4 process(int[2] indices) {
        vec4 v = vec4(0.0);
        int a[4];
        a[0] = indices[0];
        a[1] = indices[1];
        float temp = 0.0;
        for(int a2=0; a2<${n[2]}; a2++) {
          a[2] = a2;
          for(int a3=0; a3<${n[3]}; a3++) {
            a[3] = a3;
            float x = _X(a);
            temp += x;
          }
        }
        float mean = temp / float(${o});
        temp = 0.0;
        for(int a2=0; a2<${n[2]}; a2++) {
          a[2] = a2;
          for(int a3=0; a3<${n[3]}; a3++) {
            a[3] = a3;
            float x = _X(a);
            temp += (x - mean) * (x - mean);
          }
        }
        v.r = mean;
        v.g = temp / float(${o});

        return v;
      }`;return{...r,output:{dims:i,type:e.type,textureType:4},shaderSource:s}},gw=r=>({...Ff,get:()=>mw(Ff,r)}),bw={name:"InstanceNormalization_ComputeOutput",inputNames:["X","MeanAndVariance","Scale","B"],inputTypes:[0,4,0,0]},yw=(r,e,n,t,o)=>{let i=pe(r.session.backend.glContext.version),[s,a]=r.calculateTextureWidthAndHeight(o,4),[u,l]=[s/4,a],d=`
      vec4 get_MeanAndVariance(int[2] mv) {
        int offset = indicesToOffset_MeanAndVariance(mv);
        vec2 coords = offsetToCoords(offset, ${u}, ${l});
        return ${i.texture2D}(MeanAndVariance, coords);
      }

      float process(int[4] indices) {
        int mv[2];
        mv[0] = indices[0];
        mv[1] = indices[1];
        vec4 mean_and_variance = get_MeanAndVariance(mv);
        float mean = mean_and_variance.r;
        float variance = mean_and_variance.g;

        int sb[1];
        sb[0] = indices[1];
        float scale = _Scale(sb);
        float b = _B(sb);

        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;
      }`;return{...e,output:{dims:n.dims,type:n.type,textureType:0},variables:[{name:"epsilon",type:"float",data:t}],shaderSource:d}},vw=(r,e,n,t)=>{let o={...bw,cacheHint:`${n}`};return{...o,get:()=>yw(r,o,e,n,t)}},ww=r=>{if(!r||r.length!==3)throw new Error("InstanceNormalization requires 3 inputs.");let e=r[0],n=r[1],t=r[2];if(e.dims.length<3||n.dims.length!==1||t.dims.length!==1)throw new Error("Invalid input shape.");if(n.dims[0]!==e.dims[1]||t.dims[0]!==e.dims[1])throw new Error("Input shapes are mismatched.");if(e.type!=="float32"&&e.type!=="float64"||n.type!=="float32"&&n.type!=="float64"||t.type!=="float32"&&t.type!=="float64")throw new Error("Invalid input type.");if(r[0].dims.length!==4)throw new Error("Only support 4-D input shape.")}});function xw(r,e){let n=r[0].dims[1],t=r[0].dims.length,o=-Math.floor((e.size-1)/2),i=Math.ceil((e.size-1)/2),s=`float(${e.alpha}) / float(${e.size})`,a=`float(${e.bias})`,u=`float(${e.beta})`,l=`
    float process(int indices[${t}]) {
        int c = indices[1];
        float x = _X(indices);
        float square_sum = 0.0;

        for (int i = ${o}; i <= ${i}; i++) {
          int idx = c + i;
          if (c >= 0 && c < ${n}) {
            indices[1] = idx;
            float j = _X(indices);
            square_sum += j * j;
          }
        }
        return x / pow(${a} + ${s} * square_sum, ${u});
    }`;return{...qf,cacheHint:e.cacheKey,output:{dims:r[0].dims,type:r[0].type,textureType:0},shaderSource:l}}function Tw(r,e){return{...qf,cacheHint:e.cacheKey,get:()=>xw(r,e)}}var Wf,Hf,qf,$w,jf=D(()=>{"use strict";St();Me();Wf=(r,e,n)=>($w(e),[r.run(Tw(e,n),e)]),Hf=r=>{let e=r.attributes.getFloat("alpha",1e-4),n=r.attributes.getFloat("beta",.75),t=r.attributes.getFloat("bias",1),o=r.attributes.getInt("size");return Ie({alpha:e,beta:n,bias:t,size:o})},qf={name:"LRN",inputNames:["X"],inputTypes:[0]};$w=r=>{if(!r||r.length!==1)throw new Error("LRN requires 1 input.");if(r[0].dims.length!==4)throw new Error('currently only support LRN for input with "NCHW" format');if(r[0].type!=="float32")throw new Error("input should be float type")}});var _w,Hs,Kf,Yf,Xf,Sw,Iw,Aw,Ow,Ew,Cw,Pw,kw,Zf=D(()=>{"use strict";St();We();nt();Me();_w={name:"Pad",inputNames:["A"],inputTypes:[0]},Hs=(r,e,n)=>(Aw(e),[r.run({..._w,cacheHint:n.cacheKey,get:()=>Iw(r,e[0],n)},e)]),Kf=r=>{let e=r.attributes.getString("mode","constant"),n=r.attributes.getFloat("value",0),t=r.attributes.getInts("pads");return Ie({mode:e,value:n,pads:t})},Yf=(r,e,n)=>{Ow(e);let t=Sw(r,e,n);return Hs(r,[e[0]],t)},Xf=r=>r.attributes.getString("mode","constant"),Sw=(r,e,n)=>{if(!r.session.isInitializer(e[1].dataId)||e.length>=3&&!r.session.isInitializer(e[2].dataId))throw new Error("dynamic pad attributes are not allowed");let t=Array.from(e[1].integerData),o=e.length>=3?e[2].floatData[0]:0;return Ie({mode:n,pads:t,value:o})},Iw=(r,e,n)=>{let t=ae.padShape(e.dims.slice(),n.pads),o=t.length,s=`
      ${Ew(r,e,n)}
      float process(int[${o}] indices) {
          return padA(indices);
      }`;return{name:"Pad",inputNames:["A"],inputTypes:[0],output:{dims:t,type:e.type,textureType:0},shaderSource:s}},Aw=r=>{if(!r||r.length!==1)throw new Error("Pad requires 1 input");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.")},Ow=r=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Pad requires 2 or 3 inputs");if(r[1].type!=="int32")throw new Error("Invalid input type.");if(r.length>=3&&r[2].type==="string")throw new Error("Invalid input type.")},Ew=(r,e,n)=>{let t=pe(r.session.backend.glContext.version),[o,i]=r.calculateTextureWidthAndHeight(e.dims,0),s=ae.computeStrides(e.dims);switch(n.mode){case"constant":return Cw(t,e.dims,s,o,i,n.pads,n.value);case"reflect":return Pw(t,e.dims,s,o,i,n.pads);case"edge":return kw(t,e.dims,s,o,i,n.pads);default:throw new Error("Invalid mode")}},Cw=(r,e,n,t,o,i,s)=>{let a=e.length,u="";for(let l=a-1;l>=0;--l)u+=`
        k = m[${l}] - ${i[l]};
        if (k < 0)  return constant;
        if (k >= ${e[l]}) return constant;
        offset += k * ${n[l]};
        `;return`
      float padA(int m[${a}]) {
        const float constant = float(${s});
        int offset = 0;
        int k = 0;
        ${u}
        vec2 coords = offsetToCoords(offset, ${t}, ${o});
        float value = getColorAsFloat(${r.texture2D}(A, coords));
        return value;
      }
      `},Pw=(r,e,n,t,o,i)=>{let s=e.length,a="";for(let u=s-1;u>=0;--u)a+=`
        k = m[${u}] - ${i[u]};
        if (k < 0) { k = -k; }
        {
          const int _2n_1 = ${2*(e[u]-1)};
          k = int( mod( float(k), float(_2n_1) ) ) ;
          if(k >= ${e[u]}) { k = _2n_1 - k; }
        }
        offset += k * ${n[u]};
        `;return`
      float padA(int m[${s}]) {
        int offset = 0;
        int k = 0;
        ${a}
        vec2 coords = offsetToCoords(offset, ${t}, ${o});
        float value = getColorAsFloat(${r.texture2D}(A, coords));
        return value;
      }
      `},kw=(r,e,n,t,o,i)=>{let s=e.length,a="";for(let u=s-1;u>=0;--u)a+=`
        k = m[${u}] - ${i[u]};
        if (k < 0)  k = 0;
        if (k >= ${e[u]}) k = ${e[u]-1};
        offset += k * ${n[u]};
      `;return`
      float padA(int m[${s}]) {
        int offset = 0;
        int k = 0;
        ${a}
        vec2 coords = offsetToCoords(offset, ${t}, ${o});
        float value = getColorAsFloat(${r.texture2D}(A, coords));
        return value;
      }
      `}});var Qf,ep,tp,rp,np,op,ip,ap,sp,Dw,Jf,up,ea,lp,Qi,Rw,dp=D(()=>{"use strict";St();We();Me();Qf=(r,e,n)=>{ea(e);let t={name:"AveragePool",inputNames:["X"],inputTypes:[0],cacheHint:n.cacheKey};return[r.run({...t,get:()=>tp(e,t,!1,n)},e)]},ep=r=>{let e=r.attributes.getString("auto_pad","NOTSET"),n=r.attributes.getInt("ceil_mode",0),t=r.attributes.getInt("count_include_pad",0)!==0,o=r.attributes.getInts("kernel_shape"),i=r.attributes.getInts("strides",[]),s=r.attributes.getInts("pads",[]);if(n!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");return Ie({autoPad:e,ceilMode:n,countIncludePad:t,kernelShape:o,strides:i,pads:s})},tp=(r,e,n,t)=>{let[o,i]=sp(r,t,n),s=ae.size(o.kernelShape),a="value += _X(x);",u="";o.countIncludePad?u+=`value /= float(${s});`:u+=`value /= float(${s} - pad);`;let d=`
        ${lp(r[0].dims,o,a,u,"0.0")}
      `;return{...e,output:{dims:i,type:r[0].type,textureType:0},shaderSource:d}},rp=(r,e,n)=>{ea(e);let t={name:"GlobalAveragePool",inputNames:["X"],inputTypes:[0],cacheHint:`${n.countIncludePad}`};return[r.run({...t,get:()=>tp(e,t,!0,n)},e)]},np=r=>{let e=r.attributes.getInt("count_include_pad",0)!==0;return Ie({autoPad:"",ceilMode:0,countIncludePad:e,kernelShape:[],strides:[],pads:[]})},op=(r,e,n)=>{ea(e);let t={name:"MaxPool",inputNames:["X"],inputTypes:[0],cacheHint:n.cacheKey};return[r.run({...t,get:()=>ap(e,t,!1,n)},e)]},ip=r=>{let e=r.attributes.getString("auto_pad","NOTSET"),n=r.attributes.getInt("ceil_mode",0),t=r.attributes.getInts("kernel_shape"),o=r.attributes.getInts("strides",[]),i=r.attributes.getInts("pads",[]),s=r.attributes.getInt("storage_order",0),a=r.attributes.getInts("dilations",[]);if(s!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(n!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");return Ie({autoPad:e,ceilMode:n,countIncludePad:!1,kernelShape:t,strides:o,pads:i,storageOrder:s,dilations:a})},ap=(r,e,n,t)=>{let[o,i]=sp(r,t,n),s=`
      value = max(_X(x), value);
    `,a="",l=`
      ${lp(r[0].dims,o,s,a,"-1e5")}
    `;return{...e,output:{dims:i,type:r[0].type,textureType:0},shaderSource:l}},sp=(r,e,n)=>{let t=r[0].dims.slice(),o=Object.hasOwnProperty.call(e,"dilations"),i=e.kernelShape.slice(),s=e.strides.slice(),a=o?e.dilations.slice():[],u=e.pads.slice();pn.adjustPoolAttributes(n,t,i,s,a,u);let l=pn.computePoolOutputShape(n,t,s,a,i,u,e.autoPad),d=Object.assign({},e);return o?Object.assign(d,{kernelShape:i,strides:s,pads:u,dilations:a,cacheKey:e.cacheKey}):Object.assign(d,{kernelShape:i,strides:s,pads:u,cacheKey:e.cacheKey}),[d,l]},Dw={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:""},Jf={name:"GlobalMaxPool",inputNames:["X"],inputTypes:[0]},up=(r,e)=>(ea(e),[r.run({...Jf,get:()=>ap(e,Jf,!0,Dw)},e)]),ea=r=>{if(!r||r.length!==1)throw new Error("Pool ops requires 1 input.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.")},lp=(r,e,n,t,o)=>{let i=r.length;if(e.kernelShape.length<=2){let s=e.kernelShape[e.kernelShape.length-1],a=e.strides[e.strides.length-1],u=e.pads[e.pads.length/2-1],l=e.pads[e.pads.length-1],d=r[i-1],p="",h="",g="";if(u+l!==0?p=`
          for (int i = 0; i < ${s}; i++) {
            x[${i} - 1] = indices[${i} - 1] * ${a} - ${u} + i;
            if (x[${i} - 1] < 0 || x[${i} - 1] >= ${d}) {
              pad++;
              continue;
            }
            ${n}
          }`:p=`
          for (int i = 0; i < ${s}; i++) {
            x[${i} - 1] = indices[${i} - 1] * ${a} - ${u} + i;
            ${n}
          }`,e.kernelShape.length===2){let w=e.kernelShape[e.kernelShape.length-2],I=e.strides[e.strides.length-2],T=e.pads[e.pads.length/2-2],$=e.pads[e.pads.length-2],O=r[i-2];T+$!==0?h=`
            for (int j = 0; j < ${w}; j++) {
              x[${i} - 2] = indices[${i} - 2] * ${I} - ${T} + j;
              if (x[${i} - 2] < 0 || x[${i} - 2] >= ${O}) {
                pad+= ${s};
                continue;
              }
          `:h=`
            for (int j = 0; j < ${w}; j++) {
              x[${i} - 2] = indices[${i} - 2] * ${I} - ${T} + j;
            `,g=`
          }
        `}return`
        float process(int indices[${i}]) {
          int x[${i}];
          copyVec(indices, x);

          float value = ${o};
          int pad = 0;
          ${h}
          ${p}
          ${g}
          ${t}
          return value;
        }
      `}else{let s=ae.size(e.kernelShape),a=ae.computeStrides(e.kernelShape),u=a.length,l=e.pads.length,d=Rw(u),p=Qi(r,"inputDims"),h=Qi(e.pads,"pads"),g=Qi(a,"kernelStrides"),y=Qi(e.strides,"strides"),w=e.pads.reduce(($,O)=>$+O),I="";return w?I=`
            if (x[j] >= inputDims[j] || x[j] < 0) {
              pad++;
              isPad = true;
              break;
            }
          }
          if (!isPad) {
            ${n}
          }`:I=`
          }
          ${n}
        `,`
        ${d}
        float process(int indices[${i}]) {
          int x[${i}];
          copyVec(indices, x);
          int offset[${u}];
          int pads[${l}];
          int inputDims[${i}];
          int kernelStrides[${u}];
          int strides[${u}];
          ${h}
          ${p}
          ${y}
          ${g}

          float value = ${o};
          int pad = 0;
          bool isPad = false;
          for (int i = 0; i < ${s}; i++) {
            offsetToIndices(i, kernelStrides, offset);
            isPad = false;
            for (int j = ${i} - ${u}; j < ${i}; j++) {
              x[j] = indices[j] * strides[j - ${i} + ${u}]
                + offset[j - ${i} + ${u}] - pads[j - 2];
              ${I}
          }
          ${t}

          return value;
        }
      `}},Qi=(r,e)=>{let n="";for(let t=0;t<r.length;t++)n+=`
      ${e}[${t}] = ${r[t]};
    `;return n},Rw=r=>`
  void offsetToIndices(int offset, int[${r}] strides, out int[${r}] indices) {
    if (${r} == 0) {
      return;
    }
    for (int i = 0; i < ${r} - 1; ++i) {
      indices[i] = offset / strides[i];
      offset -= indices[i] * strides[i];
    }
    indices[${r} - 1] = offset;
  }`});var wn,Zr,Bw,Lw,cp,fp,pp,hp,mp,gp,bp,yp=D(()=>{"use strict";St();Do();We();Me();wn=(r,e,n,t,o)=>{Lw(e);let i={name:t,inputNames:["A"],inputTypes:[0]};return[r.run({...i,cacheHint:n.cacheKey,get:()=>Bw(r,e,n,t,o,i)},e)]},Zr=r=>{let e=r.attributes.getInts("axes",[]),n=r.attributes.getInt("keepdims",1)===1;return Ie({axes:e,keepDims:n})},Bw=(r,e,n,t,o,i)=>{let s=[],a=e[0].dims.length||1,u=[],l=ae.normalizeAxes(n.axes,e[0].dims.length),d=o(e,l),p=d[1];for(let y=0;y<e[0].dims.length;y++)l.indexOf(y)>=0||l.length===0?(n.keepDims&&s.push(1),p=`
          for(int j${y} = 0; j${y} < ${e[0].dims[y]}; j${y}++) {
            inputIdx[${y}] = j${y};
            ${p}
          }`):(u.push(`inputIdx[${y}] = outputIdx[${s.length}];`),s.push(e[0].dims[y]));let g=`
      float process(int outputIdx[${s.length||1}]) {
        float value;                 // final result
        int inputIdx[${a}];      // addressing input data
        ${u.join(`
`)}
        ${d[0]}       // init ops for reduce max/min
        ${p}
        ${d[2]}       // final computation for reduce mean
        return value;
      }`;return{...i,output:{dims:s,type:e[0].type,textureType:0},shaderSource:g}},Lw=r=>{if(!r||r.length!==1)throw new Error("Reduce op requires 1 input.");if(Xr.indexOf(r[0].type)===-1)throw new Error("Invalid input type.")},cp=(r,e,n)=>wn(r,e,n,"ReduceSum",()=>["value = 0.0;","value += _A(inputIdx);",""]),fp=(r,e,n)=>wn(r,e,n,"ReduceMean",(o,i)=>{let s=1;for(let a=0;a<o[0].dims.length;a++)(i.indexOf(a)>=0||i.length===0)&&(s*=o[0].dims[a]);return["value = 0.0;","value += _A(inputIdx);",`value /= ${s}.;`]}),pp=(r,e,n)=>wn(r,e,n,"ReduceMax",(o,i)=>{let s=[];for(let a=0;a<o[0].dims.length;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`inputIdx[${a}] = 0;`);return[`${s.join(`
`)}
value = _A(inputIdx);`,"value = max(value, _A(inputIdx));",""]}),hp=(r,e,n)=>wn(r,e,n,"ReduceMin",(o,i)=>{let s=[];for(let a=0;a<o[0].dims.length;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`inputIdx[${a}] = 0;`);return[`${s.join(`
`)}
value = _A(inputIdx);`,"value = min(value, _A(inputIdx));",""]}),mp=(r,e,n)=>wn(r,e,n,"ReduceProd",()=>["value = 1.0;","value *= _A(inputIdx);",""]),gp=(r,e,n)=>wn(r,e,n,"ReduceLogSum",()=>["value = 0.0;","value += _A(inputIdx);","value = log(value);"]),bp=(r,e,n)=>wn(r,e,n,"ReduceLogSumSquare",()=>["float t; value = 0.0;","t = _A(inputIdx); value += t * t;",""])});var vp,wp=D(()=>{"use strict";We();vp=(r,e)=>{let n=ae.calculateReshapedDims(e[0].dims,e[1].integerData);return r.session.pack?[r.reshapePacked(e[0],n)]:[r.reshapeUnpacked(e[0],n)]}});var xp,qs,Tp,$p,Ro,Mw,js,ta,Ks=D(()=>{"use strict";St();nt();Me();xp={name:"Upsample",inputNames:["X"],inputTypes:[0]},qs=(r,e,n)=>(js(e,n),[r.run({...xp,cacheHint:n.cacheKey,get:()=>Mw(r,e,n)},e)]),Tp=r=>Ro(r,7),$p=r=>Ro(r,9),Ro=(r,e)=>{let n=e>=10,t=r.attributes.getString("mode","nearest");if(t!=="nearest"&&t!=="linear"&&(e<11||t!=="cubic"))throw new Error(`unrecognized mode: ${t}`);let o=[];e<9&&(o=r.attributes.getFloats("scales"),ta(o,t,n));let i=r.attributes.getFloat("extrapolation_value",0),s=e>10?r.attributes.getString("coordinate_transformation_mode","half_pixel"):"asymmetric";if(["asymmetric","pytorch_half_pixel","tf_half_pixel_for_nn","align_corners","tf_crop_and_resize","half_pixel"].indexOf(s)===-1)throw new Error(`coordinate_transform_mode '${s}' is not supported`);let a=s==="tf_crop_and_resize",u=a,l=t==="nearest"&&e>=11?r.attributes.getString("nearest_mode","round_prefer_floor"):"";if(["round_prefer_floor","round_prefer_ceil","floor","ceil",""].indexOf(l)===-1)throw new Error(`nearest_mode '${l}' is not supported`);let d=r.attributes.getFloat("cubic_coeff_a",-.75),p=r.attributes.getInt("exclude_outside",0)!==0;if(p&&t!=="cubic")throw new Error("exclude_outside can be set to 1 only when mode is CUBIC.");let h=e<11?!0:t==="nearest"&&s==="asymmetric"&&l==="floor",g=0,y=0,w=0;return e>10?r.inputs.length>2?(g=1,y=2,w=3):(y=1,w=2):e===9&&(y=1),Ie({opset:e,isResize:n,mode:t,scales:o,extrapolationValue:i,coordinateTransformMode:s,useExtrapolation:u,needRoiInput:a,nearestMode:l,cubicCoefficientA:d,excludeOutside:p,useNearest2xOptimization:h,roiInputIdx:g,scalesInputIdx:y,sizesInputIdx:w})},Mw=(r,e,n)=>{let t=pe(r.session.backend.glContext.version),[o,i]=r.calculateTextureWidthAndHeight(e[0].dims,0),s=e[0].dims.map((w,I)=>Math.floor(w*n.scales[I])),[a,u]=r.calculateTextureWidthAndHeight(s,0),l=s.length,d=new Array(l),p=new Array(l),h=`
      int output_pitches[${l}];
      int input_pitches[${l}];
      `;for(let w=l-1;w>=0;w--)d[w]=w===l-1?1:d[w+1]*s[w+1],p[w]=w===l-1?1:p[w+1]*e[0].dims[w+1],h+=`
        output_pitches[${w}] = ${d[w]};
        input_pitches[${w}] = ${p[w]};
        `;let g=`
      float getInputFloat(int index) {
        vec2 coords = offsetToCoords(index, ${o}, ${i});
        float value = getColorAsFloat(${t.texture2D}(X, coords));
        return value;
      }
      `,y=n.mode==="nearest"?`
    ${g}
    float process(int indices[${l}]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${a}, ${u});

      ${h}

      int d, m;
      for (int dim = 0; dim < ${l}; ++dim) {
        d = output_index / output_pitches[dim];
        m = output_index - d * output_pitches[dim];
        output_index = m;

        if (scales[dim] != 1 && d > 0) {
          int d2 = d / scales[dim];
          m = d - d2 * scales[dim];
          d = d2;
        }
        input_index += input_pitches[dim] * d;
      }

      return getInputFloat(input_index);
    }`:l===4?`
    ${g}
    float process(int indices[4]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${a}, ${u});

      ${h}

      int m;
      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;
      index_of_dim0 = output_index / output_pitches[0];
      m = output_index - index_of_dim0 * output_pitches[0];
      index_of_dim1 = m / output_pitches[1];
      m = m - index_of_dim1 * output_pitches[1];
      index_of_dim2 = m / output_pitches[2];
      m = m - index_of_dim2 * output_pitches[2];
      index_of_dim3 = m;

      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;
      index_of_input_dim2 = index_of_dim2 / scales[2];
      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];
      index_of_input_dim3 = index_of_dim3 / scales[3];
      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];

      input_index = index_of_dim0 * input_pitches[0] +
            index_of_dim1 * input_pitches[1] +
            index_of_input_dim2 * input_pitches[2] +
            index_of_input_dim3;

      float x00 = getInputFloat(input_index);
      float x10, x01, x11;

      bool end_of_dim2 = false;
      if (index_of_input_dim2 == (${e[0].dims[2]} - 1)) {
        // It's the end in dimension 2
        x01 = x00;
        end_of_dim2 = true;
      } else {
        x01 = getInputFloat(input_index + input_pitches[2]);
      }

      if (index_of_input_dim3 == (input_pitches[2] - 1)) {
        // It's the end in dimension 3
        x10 = x00;
        x11 = x01;
      }
      else {
        x10 = getInputFloat(input_index + 1);
        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);
      }

      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);
      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);
      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);
    }`:`
    ${g}
    float process(int indices[2]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${a}, ${u});

      ${h}

      int m;
      int index_of_dim0, index_of_dim1;
      index_of_dim0 = output_index / output_pitches[0];
      m = output_index - index_of_dim0 * output_pitches[0];
      index_of_dim1 = m;

      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;
      index_of_input_dim0 = index_of_dim0 / scales[0];
      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];
      index_of_input_dim1 = index_of_dim1 / scales[1];
      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];

      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;

      float x00 = getInputFloat(input_index);
      float x10, x01, x11;

      bool end_of_dim0 = false;
      if (index_of_input_dim0 == (${e[0].dims[0]} - 1)) {
        // It's the end in dimension 0
        x01 = x00;
        end_of_dim0 = true;
      } else {
        x01 = getInputFloat(input_index + input_pitches[0]);
      }

      if (index_of_input_dim1 == (input_pitches[0] - 1)) {
        // It's the end in dimension 1
        x10 = x00;
        x11 = x01;
      }
      else {
        x10 = getInputFloat(input_index + 1);
        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);
      }

      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);
      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);
      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);
    }`;return{...xp,output:{dims:s,type:e[0].type,textureType:0},shaderSource:y,variables:[{name:"scales",type:"int",arrayLength:n.scales.length,data:n.scales.map(w=>Math.ceil(w))}]}},js=(r,e)=>{if(!r||e.opset<9&&r.length!==1||e.opset>=9&&e.opset<11&&r.length!==2||e.opset>=11&&r.length<2)throw new Error("invalid inputs.");if(e.scales.length>0&&r[0].dims.length!==e.scales.length)throw new Error("Invalid input shape.");if(r[0].type==="string")throw new Error("Invalid input tensor types.")},ta=(r,e,n)=>{if(n){for(let t of r)if(t<=0)throw new Error("Scale value should be greater than 0.")}else for(let t of r)if(t<1)throw new Error("Scale value should be greater than or equal to 1.");if((e==="linear"||e==="cubic")&&r.length!==2&&(r.length!==4||r[0]!==1||r[1]!==1))throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic')         or 4-D inputs with the corresponding outermost 2 scale values being 1         in the ${n?"Resize":"Upsample"} opeartor.`)}});var Ys,Xs,_p,Sp,zw,Nw,Fw,Vw,Ip=D(()=>{"use strict";nt();Me();xr();bn();Ks();Ys={name:"Resize",inputNames:["A"],inputTypes:[2]},Xs=(r,e,n)=>(js(e,n),[r.run({...Ys,cacheHint:n.cacheKey,get:()=>zw(r,e,n)},e)]),_p=r=>Ro(r,10),Sp=r=>Ro(r,11),zw=(r,e,n)=>{let t=pe(r.session.backend.glContext.version),[o,i]=Nw(e,n);if(o.every(O=>O===1)&&n.coordinateTransformMode!=="tf_crop_and_resize")return{...Ys,output:{dims:i,type:e[0].type,textureType:2},hasMain:!0,shaderSource:`void main() {
                    vec4 v = ${t.texture2D}(X, TexCoords);
                    ${t.output} = v;
                }`};let a=i.length;if(a<2)throw new Error(`output dimension should be at least 2, but got ${a}`);let u=i[a-2],l=i[a-1],d=e[0].dims;if(a!==d.length)throw new Error(`output dimension should match input ${d.length}, but got ${a}`);let p=d[a-2],h=d[a-1],g=o[a-2],y=o[a-1],w="";if(n.mode!=="linear")throw new Error(`resize (packed) does not support mode: '${n.mode}'`);switch(n.coordinateTransformMode){case"asymmetric":w=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        return vec4(coords) / scaleWHWH;
                    }
                `;break;case"half_pixel":w=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;
                    }
                `;break;case"pytorch_half_pixel":w=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        vec4 fcoords = vec4(coords);
                        return vec4(
                            ${l}.0 > 1.0 ? (fcoords.x + 0.5) / scaleWHWH.x - 0.5 : 0.0,
                            ${u}.0 > 1.0 ? (fcoords.y + 0.5) / scaleWHWH.y - 0.5 : 0.0,
                            ${l}.0 > 1.0 ? (fcoords.z + 0.5) / scaleWHWH.z - 0.5 : 0.0,
                            ${u}.0 > 1.0 ? (fcoords.w + 0.5) / scaleWHWH.w - 0.5 : 0.0
                          );
                    }
                `;break;case"align_corners":w=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        vec4 resized = vec4(${l}.0 - 1.0, ${u}.0 - 1.0, ${l}.0 - 1.0,
                            ${u}.0 - 1.0);
                        vec4 original = vec4(${h}.0 - 1.0, ${p}.0 - 1.0, ${h}.0 - 1.0,
                            ${p}.0 - 1.0);
                        vec4 new_scale = original / resized;
                        return vec4(coords) * new_scale;
                    }
                `;break;default:throw new Error(`resize (packed) does not support coordinateTransformMode:                                 '${n.coordinateTransformMode}'`)}let I=Lt(a),T=Tr(),$=`
            const vec2 inputWH = vec2(${p}.0, ${h}.0);
            const vec4 scaleWHWH = vec4(float(${g}), float(${y}), float(${g}), float(${y}));
            ${T}
            ${w}
            float getAValue(int x10, int r, int c, int d) {
                return getChannel(getA(x10, r, c, d), vec2(c, d));
            }
            void main() {
                ${I} rc = getOutputCoords();

                int batch = rc[0];
                int depth = rc[1];

                // retrieve the 4 coordinates that is used in the 4 packed output values.
                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);

                // calculate the source index in fraction
                vec4 sourceFrac = getSourceFracIndex(coords);

                // get the lower and upper bound of the 4 values that will be packed into one texel.
                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));
                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));
                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));
                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));

                bool hasNextRow = rc.w < ${u-1};
                bool hasNextCol = rc.z < ${l-1};

                // pack x00, x01, x10, x11's top-left corner into one vec4 structure
                vec4 topLeft = vec4(
                    getAValue(batch, depth, x00.x, x00.y),
                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);

                // pack x00, x01, x10, x11's top-right corner into one vec4 structure
                vec4 topRight = vec4(
                    getAValue(batch, depth, x00.x, x00.w),
                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);

                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure
                vec4 bottomLeft = vec4(
                    getAValue(batch, depth, x00.z, x00.y),
                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);

                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure
                vec4 bottomRight = vec4(
                    getAValue(batch, depth, x00.z, x00.w),
                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);

                // calculate the interpolation fraction on u and v direction
                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);
                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));

                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);
                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);
                vec4 newValue = mix(top, bottom, clampFrac.xxzz);

                ${t.output} = vec4(newValue);
            }
        `;return{...Ys,output:{dims:i,type:e[0].type,textureType:2},hasMain:!0,shaderSource:$}},Nw=(r,e)=>{let t=r[0].dims,o=e.scales,i;if(o.length===0){let a=r[e.scalesInputIdx];if(a&&a.size!==0){if(r[e.sizesInputIdx])throw new Error("Only one of scales or sizes must be provided as input.");o=Fw(a,e.mode,e.isResize)}else{let u=r[e.sizesInputIdx];if(!u||u.size===0)throw new Error("Either scales or sizes MUST be provided as input.");i=Array.from(u.integerData),o=Vw(i,t,e.mode,e.isResize)}}else if(r[e.sizesInputIdx])throw new Error("Only one of scales or sizes must be provided as input.");let s=i||t.map((a,u)=>Math.floor(a*o[u]));return[o,s]},Fw=(r,e,n)=>{let t=Array.from(r.floatData);return ta(t,e,n),t},Vw=(r,e,n,t)=>{let o=e.length,i=new Array(o);for(let s=0,a=o;s<a;s++)if(e[s]===0){if(r[s]!==0)throw new Error("Input dim is zero but required output dim is non-zero.");i[s]=1}else i[s]=r[s]/e[s];return ta(i,n,t),i}});var Ap,Uw,Op=D(()=>{"use strict";gn();Ap=(r,e)=>(Uw(e),[new bt([e[0].dims.length],"int32",void 0,void 0,new Int32Array(e[0].dims))]),Uw=r=>{if(!r||r.length!==1)throw new Error("Shape requires 1 input.")}});var Zs,Ep,Cp,Pp,Gw,kp,Ww,Hw,Dp=D(()=>{"use strict";St();Do();We();Me();Zs={name:"Slice",inputNames:["A"],inputTypes:[0]},Ep=(r,e,n)=>(Gw(e),[r.run({...Zs,cacheHint:n.cacheKey,get:()=>Pp(r,e[0],n)},e)]),Cp=r=>{let e=r.attributes.getInts("starts"),n=r.attributes.getInts("ends"),t=r.attributes.getInts("axes",[]);return Ie({starts:e,ends:n,axes:t})},Pp=(r,e,n)=>{let t=n.axes.length===0?e.dims.slice(0).map((p,h)=>h):n.axes,o=ae.normalizeAxes(t,e.dims.length),i=n.starts.map((p,h)=>p>e.dims[o[h]]-1?e.dims[o[h]]:ae.normalizeAxis(p,e.dims[o[h]])),s=n.ends.map((p,h)=>p>e.dims[o[h]]-1?e.dims[o[h]]:ae.normalizeAxis(p,e.dims[o[h]])),a=e.dims.slice(),u=[];for(let p=0;p<o.length;p++)a[o[p]]=s[p]-i[p],i[p]>0&&u.push(`outputIdx[${o[p]}] += ${i[p]};`);let d=`
      float process(int outputIdx[${a.length}]) {
        ${u.join(`
      `)}
        return _A(outputIdx);
      }`;return{...Zs,output:{dims:a,type:e.type,textureType:0},shaderSource:d}},Gw=r=>{if(!r||r.length!==1)throw new Error("Slice requires 1 input.");if(Xr.indexOf(r[0].type)===-1)throw new Error("Invalid input type.")},kp=(r,e)=>{Hw(e);let n=Ww(r,e);return[r.run({...Zs,cacheHint:n.cacheKey,get:()=>Pp(r,e[0],n)},[e[0]])]},Ww=(r,e)=>{if(!r.session.isInitializer(e[1].dataId)||!r.session.isInitializer(e[2].dataId)||e.length>=4&&!r.session.isInitializer(e[3].dataId)||e.length>=5&&!r.session.isInitializer(e[4].dataId))throw new Error("dynamic slice attributes are not allowed");if(e.length>=5&&e[4].integerData.some(s=>s!==1))throw new Error("currently non-1 steps is not supported for Slice");let n=Array.from(e[1].integerData),t=Array.from(e[2].integerData),o=e.length>=4?Array.from(e[3].integerData):[],i=`${o};${n};${t}`;return{starts:n,ends:t,axes:o,cacheKey:i}},Hw=r=>{if(!r||r.length<3||r.length>5)throw new Error("Invalid input number.");if(r[1].type!=="int32"||r[1].dims.length!==1)throw new Error("Invalid input type.");if(r[2].type!=="int32"||r[2].dims.length!==1)throw new Error("Invalid input type.");if(r.length>=4&&(r[3].type!=="int32"||r[3].dims.length!==1))throw new Error("Invalid input type.");if(r.length>=5&&(r[4].type!=="int32"||r[4].dims.length!==1))throw new Error("Invalid input type.")}});var Rp,Bp,Lp,Mp,zp,Np,Fp,Vp,qw,jw,Kw,Up,Gp=D(()=>{"use strict";St();We();nt();Me();Ji();Rp={name:"SoftmaxComputeMax",inputNames:["A"],inputTypes:[0]},Bp={name:"SoftmaxComputeScale",inputNames:["A","Max"],inputTypes:[0,0]},Lp={name:"SoftMax",inputNames:["A","Max","Norm"],inputTypes:[0,0,0]},Mp=(r,e,n)=>{Up(e);let t=e[0].dims.slice(),o=ae.normalizeAxis(n.axis,t.length),i=ae.sizeToDimension(t,o),s=ae.sizeFromDimension(t,o);return Vp(r,e,n,i,s)},zp=r=>Ie({axis:r.attributes.getInt("axis",1)}),Np=r=>Ie({axis:r.attributes.getInt("axis",-1)}),Fp=(r,e,n)=>{Up(e);let t=e[0].dims.slice(),o=ae.normalizeAxis(n.axis,t.length),i=t.length,s=o!==i-1,a=[],u=[],l=[],d;s&&(u=Array.from({length:i}).map((y,w)=>w),u[o]=i-1,u[i-1]=o,u.map(y=>a.push(t[y])),d=Ie({perm:u}),l=vn(r,e,d));let p=s?ae.sizeToDimension(a,i-1):ae.sizeToDimension(t,i-1),h=s?ae.sizeFromDimension(a,i-1):ae.sizeFromDimension(t,i-1),g=Vp(r,s?l:e,n,p,h);return s?vn(r,g,d):g},Vp=(r,e,n,t,o)=>{let i=qw(r,e[0],t,o,[t]),s=r.run({...Rp,cacheHint:n.cacheKey,get:()=>i},e),a=jw(r,e[0],t,o,i.output.dims,[t]),u=r.run({...Bp,cacheHint:n.cacheKey,get:()=>a},[e[0],s]),l=Kw(r,e[0],t,o,i.output.dims,a.output.dims);return[r.run({...Lp,cacheHint:n.cacheKey,get:()=>l},[e[0],s,u])]},qw=(r,e,n,t,o)=>{let[i,s]=r.calculateTextureWidthAndHeight(e.dims,0),a=o.length;if(n<1||t<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(o.length!==1)throw new Error("Dimensionality of the output should be 1");if(o[0]!==n)throw new Error("Shape of the output should be equal to logical row count");let u=pe(r.session.backend.glContext.version),l=`
      float process(int[${a}] indices) {
        int logical_row_start_offset = indices[0] * ${t};

        float max = getColorAsFloat(${u.texture2D}(A, offsetToCoords(logical_row_start_offset, ${i},
        ${s} )));
        for(int i=1; i<${t}; ++i)
        {
          float current = getColorAsFloat(${u.texture2D}(A, offsetToCoords(logical_row_start_offset + i,
            ${i}, ${s})));
          if(current > max)
          max = current;
        }

        return max;
      }`;return{...Rp,output:{dims:o,type:e.type,textureType:0},shaderSource:l}},jw=(r,e,n,t,o,i)=>{let[s,a]=r.calculateTextureWidthAndHeight(e.dims,0),u=i.length;if(n<1||t<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(i.length!==1)throw new Error("Dimensionality of the output should be 1");if(i[0]!==n)throw new Error("Shape of the output should be equal to logical row count");if(o.length!==1)throw new Error("Dimensionality of the intermediate results should be 1");if(o[0]!==n)throw new Error("Shape of the intermediate results should be equal to logical row count");let l=pe(r.session.backend.glContext.version),d=`
      float process(int[${u}] indices) {
        int logical_row_start_offset = indices[0] * ${t};

        float norm_factor = 0.0;
        float max = _Max(indices);
        for(int i=0; i<${t}; ++i)
        {
          norm_factor += exp(getColorAsFloat(${l.texture2D}(A, offsetToCoords(logical_row_start_offset + i,
            ${s}, ${a}))) - max);
        }

        return norm_factor;
      }`;return{...Bp,output:{dims:i,type:e.type,textureType:0},shaderSource:d}},Kw=(r,e,n,t,o,i)=>{let[s,a]=r.calculateTextureWidthAndHeight(e.dims,0),u=e.dims.length;if(n<1||t<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(o.length!==1||i.length!==1)throw new Error("Dimensionality of the intermediate results should be 1");if(o[0]!==n||i[0]!==n)throw new Error("Shape of the intermediate results should be equal to logical row count");let l=`
      float process(int[${u}] indices) {

      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)
      int offset = coordsToOffset(TexCoords, ${s}, ${a});

      //determine the logical row for this index
      int logical_row_index[1];
      logical_row_index[0] = offset / ${t};

      float norm_factor = _Norm(logical_row_index);

      // avoid possible division by 0
      // if norm_facor is 0, all elements are zero
      // if so, return 0
      if(norm_factor == 0.0)
        return 0.0;

      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;
    }`;return{...Lp,output:{dims:e.dims,type:e.type,textureType:0},shaderSource:l}},Up=r=>{if(!r||r.length!==1)throw new Error("Softmax requires 1 input.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type")}});var Wp,Hp,qp,Yw,Xw,Zw,jp=D(()=>{"use strict";St();We();Me();Wp={name:"Split",inputNames:["A"],inputTypes:[0]},Hp=(r,e,n)=>{Zw(e);let t=ae.normalizeAxis(n.axis,e[0].dims.length),o=Yw(r,e,t,n),i=[];for(let s=0;s<o;++s)i.push(r.run({...Wp,cacheHint:`${n.cacheKey};${s}`,get:()=>Xw(r,e[0],n,t,s)},e));return i},qp=r=>{let e=r.attributes.getInt("axis",0),n=r.attributes.getInts("split",[]),t=r.outputs.length;return Ie({axis:e,split:n,numOutputs:t})},Yw=(r,e,n,t)=>{let[,o]=Ao.splitShape(e[0].dims,n,t.split,t.numOutputs);return o.length},Xw=(r,e,n,t,o)=>{let[i,s]=Ao.splitShape(e.dims,t,n.split,n.numOutputs),a=s[o],u=i[o],d=`
      float process(int indices[${u.length}]) {
        indices[${t}] += ${a};
        return _A(indices);
      }
    `;return{...Wp,cacheHint:`${n.cacheKey}:${o}`,output:{dims:u,type:e.type,textureType:0},shaderSource:d}},Zw=r=>{if(!r||r.length!==1)throw new Error("Split requires one input.");if(r[0].type!=="int8"&&r[0].type!=="uint8"&&r[0].type!=="int16"&&r[0].type!=="uint16"&&r[0].type!=="int32"&&r[0].type!=="uint32"&&r[0].type!=="float32"&&r[0].type!=="float64"&&r[0].type!=="bool")throw new Error("Invalid input type.")}});var Js,Kp,Yp,Jw,Qw,Xp=D(()=>{"use strict";We();Js=(r,e,n)=>{Jw(e);let t=ae.squeezeShape(e[0].dims,n);return[r.reshapeUnpacked(e[0],t)]},Kp=(r,e)=>(Qw(e),Js(r,[e[0]],Array.from(e[1].integerData))),Yp=r=>r.attributes.getInts("axes"),Jw=r=>{if(!r||r.length!==1)throw new Error("Squeeze requires 1 input.");if(r[0].type==="string")throw new Error("invalid input tensor types.")},Qw=r=>{if(!r||r.length!==2)throw new Error("Squeeze requires 2 inputs.");if(r[1].type!=="int32")throw new Error("Invalid input type.")}});var Zp,ex,tx,Jp=D(()=>{"use strict";nt();Me();Zp=(r,e)=>{tx(e);let n={name:"Sum",inputNames:e.map((o,i)=>`X${i}`),inputTypes:new Array(e.length).fill(0)};return[r.run({...n,get:()=>ex(r,e,n)},e)]},ex=(r,e,n)=>{let t=pe(r.session.backend.glContext.version),o=e[0].dims.slice(),s=`
      void main() {
        vec4 result = ${e.map((a,u)=>`${t.texture2D}(X${u},TexCoords)`).join(" + ")};
        ${t.output} = result;
      }
    `;return{...n,output:{dims:o,type:e[0].type,textureType:0},hasMain:!0,shaderSource:s}},tx=r=>{if(!r||r.length===0)throw new Error("Sum requires inputs.");let e=r[0].dims.length;for(let n=1;n<r.length;n++){if(e!==r[n].dims.length)throw new Error("Input shapes are mismatched.");for(let t=0;t<e;t++)if(r[0].dims[t]!==r[n].dims[t])throw new Error("Input shapes are not matched.")}if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.");for(let n=1;n<r.length;n++)if(r[0].type!==r[n].type)throw new Error("Input types are not matched.")}});var Qp,rx,nx,eh=D(()=>{"use strict";Do();Me();Qp=(r,e)=>{nx(e);let n={name:"Tile",inputNames:["A"],inputTypes:[0]};return[r.run({...n,get:()=>rx(r,e,n)},e)]},rx=(r,e,n)=>{let t=e[0].dims.slice(),o=new Array(t.length),i=[];for(let u=0;u<t.length;u++)o[u]=t[u]*e[1].numberData[u],i.push(`inputIdx[${u}] = int(mod(float(outputIdx[${u}]), ${t[u]}.));`);let s=o.length,a=`
      float process(int outputIdx[${s}]) {
        int inputIdx[${s}];
        ${i.join(`
`)}
        return _A(inputIdx);
      }
    `;return{...n,output:{dims:o,type:e[0].type,textureType:0},shaderSource:a}},nx=r=>{if(!r||r.length!==2)throw new Error("Tile requires 2 input.");if(r[1].dims.length!==1)throw new Error("The second input shape must 1 dimension.");if(r[1].dims[0]!==r[0].dims.length)throw new Error("Invalid input shape.");if(Xr.indexOf(r[0].type)===-1)throw new Error("Invalid input type.");if(r[1].type!=="int32"&&r[1].type!=="int16")throw new Error("Invalid repeat type.")}});var Qs,th,rh,ox,ix,nh=D(()=>{"use strict";We();Qs=(r,e,n)=>{ox(e);let t=ae.unsqueezeShape(e[0].dims,n);return[r.reshapeUnpacked(e[0],t)]},th=(r,e)=>(ix(e),Qs(r,[e[0]],Array.from(e[1].integerData))),rh=r=>r.attributes.getInts("axes"),ox=r=>{if(!r||r.length!==1)throw new Error("Unsqueeze requires 1 input.");if(r[0].type==="string")throw new Error("invalid input tensor types.")},ix=r=>{if(!r||r.length!==2)throw new Error("Unsqueeze requires 2 inputs.");if(r[1].type!=="int32")throw new Error("Invalid input type.")}});var oh,ih=D(()=>{"use strict";hc();Ac();Cc();Lc();Yi();wf();If();Ef();kf();Lf();Nf();Gf();jf();Xi();Zf();dp();yp();wp();Ip();Op();Dp();Gp();jp();Xp();Jp();eh();Ji();Ls();nh();Ks();oh=[["Abs","","6+",Mc],["Acos","","7+",zc],["Add","","7+",mc],["And","","7+",gc],["Asin","","7+",Nc],["Atan","","7+",Fc],["AveragePool","","7+",Qf,ep],["BatchNormalization","","7+",fc,pc],["Cast","","6+",Oc,Ec],["Ceil","","6+",Gc],["Clip","","6-10",Rs,Vc],["Clip","","11+",Uc],["Concat","","4+",Dc,Bc],["Conv","","1+",Us,Gs],["ConvTranspose","","1+",yf,vf],["Cos","","7+",Wc],["Div","","7+",bc],["Dropout","","7+",Bs],["DepthToSpace","","1+",_f,Sf],["Equal","","7+",yc],["Elu","","6+",Hc,qc],["Exp","","6+",jc],["Flatten","","1+",Af,Of],["Floor","","6+",Kc],["FusedConv","com.microsoft","1+",Us,Gs],["Gather","","1+",Cf,Pf],["Gemm","","7-10",Ws,Rf],["Gemm","","11+",Ws,Bf],["GlobalAveragePool","","1+",rp,np],["GlobalMaxPool","","1+",up],["Greater","","7+",vc],["Identity","","1+",Bs],["ImageScaler","","1+",Mf,zf],["InstanceNormalization","","6+",Vf,Uf],["LeakyRelu","","6+",Yc,Xc],["Less","","7+",wc],["LRN","","1+",Wf,Hf],["Log","","6+",Zc],["MatMul","","1+",cf,ff],["MaxPool","","1+",op,ip],["Mul","","7+",xc],["Neg","","6+",Jc],["Not","","1+",Qc],["Or","","7+",Tc],["Pad","","2-10",Hs,Kf],["Pad","","11+",Yf,Xf],["Pow","","7+",$c],["PRelu","","7+",_c],["ReduceLogSum","","1+",gp,Zr],["ReduceMax","","1+",pp,Zr],["ReduceMean","","1+",fp,Zr],["ReduceMin","","1+",hp,Zr],["ReduceProd","","1+",mp,Zr],["ReduceSum","","1-12",cp,Zr],["ReduceSumSquare","","1+",bp,Zr],["Relu","","6+",ef],["Reshape","","5+",vp],["Resize","","10",Xs,_p],["Resize","","11+",Xs,Sp],["Shape","","1+",Ap],["Sigmoid","","6+",tf],["Sin","","7+",rf],["Slice","","10+",kp],["Slice","","1-9",Ep,Cp],["Softmax","","1-12",Mp,zp],["Softmax","","13+",Fp,Np],["Split","","2-12",Hp,qp],["Sqrt","","6+",nf],["Squeeze","","1-12",Js,Yp],["Squeeze","","13+",Kp],["Sub","","7+",Sc],["Sum","","6+",Zp],["Tan","","7+",of],["Tanh","","6+",af],["Tile","","6+",Qp],["Transpose","","1+",vn,Tf],["Upsample","","7-8",qs,Tp],["Upsample","","9",qs,$p],["Unsqueeze","","1-12",Qs,rh],["Unsqueeze","","13+",th],["Xor","","7+",Ic]]});function sh(r){let e={},n;for(;(n=ah.exec(r))!==null;){let t=n[3].split(",").map(o=>{let i=o.trim().split(" ");return i&&i.length===2?{type:i[0],name:i[1]}:null}).filter(o=>o!==null);e[n[2]]={params:t,body:n[4]}}for(let t in e){let o=ax.replace("__FUNC__",t),i=new RegExp(o,"gm");for(;(n=i.exec(r))!==null;){let s=n[1],a=n[2],u=n[3].split(","),l=s?`${s} ${a};`:"",d=e[t].body,p="";e[t].params.forEach((g,y)=>{g&&(p+=`${g.type} ${g.name} = ${u[y]};
`)}),d=`${p}
 ${d}`,d=d.replace("return",`${a} = `);let h=`
      ${l}
      {
        ${d}
      }
      `;r=r.replace(n[0],h)}}return r=r.replace(ah,""),r}var ah,ax,uh=D(()=>{"use strict";ah=/@inline[\s\n\r]+(\w+)[\s\n\r]+([0-9a-zA-Z_]+)\s*\(([^)]*)\)\s*{(([^}]|[\n\r])*)}/gm,ax="(\\w+)?\\s+([_0-9a-zA-Z]+)\\s+=\\s+__FUNC__\\((.*)\\)\\s*;"});function Yn(r,e){let n=[],t=[],o=e!=null&&Array.isArray(e)&&e.length===0,i=e==null||o?null:sx(e,r).sort(),s=0;for(let a=0;a<r.length;++a){if(i!=null){if(i[s]===a&&r[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${r[a]}' is not 1`);(i[s]==null||i[s]>a)&&r[a]===1&&(n.push(r[a]),t.push(a)),i[s]<=a&&s++}r[a]!==1&&(n.push(r[a]),t.push(a))}return{newShape:n,keptDims:t}}function sx(r,e){let n=e.length;return r=r==null?e.map((t,o)=>o):[].concat(r),Gn(r.every(t=>t>=-n&&t<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${r}`),Gn(r.every(ux),()=>`All values in axis param must be integers but got axis ${r}`),r.map(t=>t<0?n+t:t)}function ux(r){return r%1===0}function lx(r){if(r.length===0)return 1;let e=r[0];for(let n=1;n<r.length;n++)e*=r[n];return e}function lh(r){let e=Math.ceil(Math.sqrt(r));return[e,Math.ceil(r/e)]}var ra,eu=D(()=>{"use strict";Zt();We();ra=class{constructor(e){this.maxTextureSize=e}computeTextureWH(e,n){let t=this.computeTexture(e,n);return n&&n.isPacked&&(t[0]/=2,t[1]/=2),n&&n.reverseWH?[t[1],t[0]]:t}computeTexture(e,n){let t=n&&n.isPacked;if(e.length===0)return t?[2,2]:[1,1];let o=this.maxTextureSize;if(n&&n.breakAxis!==void 0){let a=n.breakAxis>=e.length?1:e.slice(n.breakAxis).reduce((l,d)=>l*d),u=n.breakAxis<=0?1:e.slice(0,n.breakAxis).reduce((l,d)=>l*d);if(a>o||u>o)He.verbose("TextureLayout",`Given width/height preferences were unattainable: shape:${e}, breakAxis:${n.breakAxis}`);else return[a,u]}let i=e.slice(0);t&&(o=o*2,i=i.map((a,u)=>u>=i.length-2?i[u]%2===0?i[u]:i[u]+1:i[u]),i.length===1&&(i=[2,i[0]])),i.length!==2&&(i=Yn(i).newShape);let s=lx(i);return i.length<=1&&s<=o?[1,s]:i.length===2&&i[0]<=o&&i[1]<=o?i:i.length===3&&i[0]*i[1]<=o&&i[2]<=o?[i[0]*i[1],i[2]]:i.length===3&&i[0]<=o&&i[1]*i[2]<=o?[i[0],i[1]*i[2]]:i.length===4&&i[0]*i[1]*i[2]<=o&&i[3]<=o?[i[0]*i[1]*i[2],i[3]]:i.length===4&&i[0]<=o&&i[1]*i[2]*i[3]<=o?[i[0],i[1]*i[2]*i[3]]:t?lh(s/4).map(a=>a*2):lh(s)}}});var na,dh=D(()=>{"use strict";We();zr();nt();eu();xr();na=class extends tr{constructor(n){super(n)}getFunctions(){return{...this.offsetToCoords(),...this.coordsToOffset(),...this.toVec(),...this.valueFrom(),...this.getCommonUtilFuncs(),...this.getInputsSamplingSnippets(),...this.getOutputSamplingSnippet()}}getCustomTypes(){return{}}offsetToCoords(){let n="offsetToCoords";return{offsetToCoords:new oe(`
      vec2 ${n}(int offset, int width, int height) {
        int t = offset / width;
        int s = offset - t*width;
        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);
        return coords;
      }
      `)}}coordsToOffset(){let n="coordsToOffset";return{coordsToOffset:new oe(`
      int ${n}(vec2 coords, int width, int height) {
        float s = coords.s * float(width);
        float t = coords.t * float(height);
        int offset = int(t) * width + int(s);
        return offset;
      }
      `)}}getOutputSamplingSnippet(){let n=this.context.outputTextureLayout;return n.isPacked?this.getPackedOutputSamplingSnippet(n):this.getUnpackedOutputSamplingSnippet(n)}getPackedOutputSamplingSnippet(n){let t=n.unpackedShape,o=[n.width,n.height],i={},s="getOutputCoords";switch(t.length){case 0:i[s]=this.getOutputScalarCoords();break;case 1:i[s]=this.getOutputPacked1DCoords(t,o);break;case 2:i[s]=this.getOutputPacked2DCoords(t,o);break;case 3:i[s]=this.getOutputPacked3DCoords(t,o);break;default:i[s]=this.getOutputPackedNDCoords(t,o)}let u=`
      void setOutput(vec4 val) {
        ${pe(this.context.glContext.version).output} = val;
      }
    `,l="floatTextureSetRGBA";return i[l]=new oe(u),i}getUnpackedOutputSamplingSnippet(n){let t=n.unpackedShape,o=[n.width,n.height],i={},s="getOutputCoords";switch(t.length){case 0:i[s]=this.getOutputScalarCoords();break;case 1:i[s]=this.getOutputUnpacked1DCoords(t,o);break;case 2:i[s]=this.getOutputUnpacked2DCoords(t,o);break;case 3:i[s]=this.getOutputUnpacked3DCoords(t,o);break;case 4:i[s]=this.getOutputUnpacked4DCoords(t,o);break;case 5:i[s]=this.getOutputUnpacked5DCoords(t,o);break;case 6:i[s]=this.getOutputUnpacked6DCoords(t,o);break;default:throw new Error(`Unsupported output dimensionality: ${t.length}`)}let u=`
        void setOutput(float val) {
          ${pe(this.context.glContext.version).output} = vec4(val, 0, 0, 0);
        }
    `,l="floatTextureSetR";return i[l]=new oe(u),i}getOutputScalarCoords(){return new oe(`
      int getOutputCoords() {
        return 0;
      }
    `)}getOutputPacked1DCoords(n,t){let o=t,i="";return o[0]===1?(i=`
          int getOutputCoords() {
            return 2 * int(TexCoords.y * ${o[1]}.0);
          }
        `,new oe(i)):o[1]===1?(i=`
          int getOutputCoords() {
            return 2 * int(TexCoords.x * ${o[0]}.0);
          }
        `,new oe(i)):(i=`
        int getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                 vec2(${o[0]}, ${o[1]}));
          return 2 * (resTexRC.y * ${o[0]} + resTexRC.x);
        }
      `,new oe(i))}getOutputPacked2DCoords(n,t){let o="";if(fn.arraysEqual(n,t))return o=`
        ivec2 getOutputCoords() {
          return 2 * ivec2(TexCoords.xy * vec2(${t[0]}, ${t[1]}));
        }
      `,new oe(o);let i=t,s=Math.ceil(n[1]/2);return o=`
        ivec2 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${i[0]}, ${i[1]}));

          int index = resTexRC.y * ${i[0]} + resTexRC.x;

          // reverse r and c order for packed texture
          int r = imod(index, ${s}) * 2;
          int c = 2 * (index / ${s});

          return ivec2(r, c);
        }
      `,new oe(o)}getOutputPacked3DCoords(n,t){let o=[t[0],t[1]],i=Math.ceil(n[2]/2),s=i*Math.ceil(n[1]/2),a=`
        ivec3 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${o[0]}, ${o[1]}));
          int index = resTexRC.y * ${o[0]} + resTexRC.x;

          int b = index / ${s};
          index -= b * ${s};

          // reverse r and c order for packed texture
          int r = imod(index, ${i}) * 2;
          int c = 2 * (index / ${i});

          return ivec3(b, r, c);
        }
      `;return new oe(a)}getOutputPackedNDCoords(n,t){let o=[t[0],t[1]],i=Math.ceil(n[n.length-1]/2),s=i*Math.ceil(n[n.length-2]/2),a=s,u="",l="b, r, c";for(let p=2;p<n.length-1;p++)a*=n[n.length-p-1],u=`
      int b${p} = index / ${a};
      index -= b${p} * ${a};
    `+u,l=`b${p}, `+l;let d=`
      ivec${n.length} getOutputCoords() {
        ivec2 resTexRC = ivec2(TexCoords.xy *
                              vec2(${o[0]}, ${o[1]}));
        int index = resTexRC.y * ${o[0]} + resTexRC.x;

        ${u}

        int b = index / ${s};
        index -= b * ${s};

        // reverse r and c order for packed texture
        int r = imod(index, ${i}) * 2;
        int c = 2 * (index / ${i});

        return ivec${n.length}(${l});
      }
    `;return new oe(d)}getOutputUnpacked1DCoords(n,t){let o=`
        int getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          return resTexRC.y * ${t[0]} + resTexRC.x;
        }
      `;return new oe(o)}getOutputUnpacked2DCoords(n,t){let o=`
        ivec2 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          int r = index / ${n[1]};
          int c = index - r * ${n[1]};
          return ivec2(r, c);
        }
      `;return new oe(o)}getOutputUnpacked3DCoords(n,t){let o="",i=n.length,s=null;i<2&&(s=[]),s=new Array(i-1),s[i-2]=n[i-1];for(let l=i-3;l>=0;--l)s[l]=s[l+1]*n[l+1];let a=["r","c","d"],u=s.map((l,d)=>{let p=`int ${a[d]} = index / ${l}`,h=d===s.length-1?`int ${a[d+1]} = index - ${a[d]} * ${l}`:`index -= ${a[d]} * ${l}`;return`${p}; ${h};`}).join("");return o=`
        ivec3 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          ${u}
          return ivec3(r, c, d);
        }
      `,new oe(o)}getOutputUnpacked4DCoords(n,t){let o="",i=n.length,s=null;i<2&&(s=[]),s=new Array(i-1),s[i-2]=n[i-1];for(let l=i-3;l>=0;--l)s[l]=s[l+1]*n[l+1];let a=["r","c","d","d2"],u=s.map((l,d)=>{let p=`int ${a[d]} = index / ${l}`,h=d===s.length-1?`int ${a[d+1]} = index - ${a[d]} * ${l}`:`index -= ${a[d]} * ${l}`;return`${p}; ${h};`}).join("");return o=`
      ivec4 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          ${u}
          return ivec4(r, c, d, d2);
        }
      `,new oe(o)}getOutputUnpacked5DCoords(n,t){let o="",i=n.length,s=null;i<2&&(s=[]),s=new Array(i-1),s[i-2]=n[i-1];for(let l=i-3;l>=0;--l)s[l]=s[l+1]*n[l+1];let a=["r","c","d","d2","d3"],u=s.map((l,d)=>{let p=`int ${a[d]} = index / ${l}`,h=d===s.length-1?`int ${a[d+1]} = index - ${a[d]} * ${l}`:`index -= ${a[d]} * ${l}`;return`${p}; ${h};`}).join("");return o=`
      ivec5 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          ${u}
          return ivec5(r, c, d, d2, d3);
        }
      `,new oe(o)}getOutputUnpacked6DCoords(n,t){let o="",i=n.length,s=null;i<2&&(s=[]),s=new Array(i-1),s[i-2]=n[i-1];for(let l=i-3;l>=0;--l)s[l]=s[l+1]*n[l+1];let a=["r","c","d","d2","d3","d4"],u=s.map((l,d)=>{let p=`int ${a[d]} = index / ${l}`,h=d===s.length-1?`int ${a[d+1]} = index - ${a[d]} * ${l}`:`index -= ${a[d]} * ${l}`;return`${p}; ${h};`}).join("");return o=`
     ivec6 getOutputCoords() {
         ivec2 resTexRC = ivec2(TexCoords.xy *
                               vec2(${t[0]}, ${t[1]}));
         int index = resTexRC.y * ${t[0]} + resTexRC.x;
         ${u}
         return ivec6(r, c, d, d2, d3, d4);
       }
     `,new oe(o)}getCommonUtilFuncs(){let n={},t="uvFromFlat";n[t]=new oe(`
    vec2 uvFromFlat(int texNumR, int texNumC, int index) {
      int texC = index / texNumR;
      int texR = index - texC * texNumR;
      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to
      //       v.
      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);
    }
    `),t="packedUVfrom1D",n[t]=new oe(`
      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
        int texelIndex = index / 2;
        int texR = texelIndex / texNumC;
        int texC = texelIndex - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),t="packedUVfrom2D",n[t]=new oe(`
      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {
        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
        int texR = texelIndex / texNumC;
        int texC = texelIndex - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),t="packedUVfrom3D",n[t]=new oe(`
      vec2 packedUVfrom3D(int texNumR, int texNumC,
          int texelsInBatch, int texelsInLogicalRow, int b,
          int row, int col) {
        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
        int texR = index / texNumC;
        int texC = index - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),t="sampleTexture";let o=pe(this.context.glContext.version);return n[t]=new oe(`
        float sampleTexture(sampler2D textureSampler, vec2 uv) {
            return ${o.texture2D}(textureSampler, uv).r;
        }`),n}getInputsSamplingSnippets(){let n={},t=this.context.outputTextureLayout;return this.context.programInfo.inputNames.forEach((o,i)=>{let s=this.context.inputTextureLayouts[i],a=Ui(o);s.isPacked?n[a]=this.getPackedSamplerFromInput(a,o,s):n[a]=this.getUnpackedSamplerFromInput(a,o,s);let u=Xd(o);s.unpackedShape.length<=t.unpackedShape.length&&(s.isPacked?n[u]=this.getPackedSamplerAtOutputCoords(u,s,t,o):n[u]=this.getUnpackedSamplerAtOutputCoords(u,s,t,o))}),n}getPackedSamplerAtOutputCoords(n,t,o,i){let s=t.unpackedShape,a=o.unpackedShape,l=Ui(i),d=s.length,p=a.length,h=Bt.getBroadcastDims(s,a),g=Lt(p),y=p-d,w,I=mr();d===0?w="":p<2&&h.length>=1?w="coords = 0;":w=h.map(X=>`coords.${I[X+y]} = 0;`).join(`
`);let T="";p<2&&d>0?T="coords":T=s.map((X,z)=>`coords.${I[z+y]}`).join(", ");let $="return outputValue;",C=ae.size(s)===1,R=ae.size(a)===1;if(d===1&&!C&&!R)$=`
        return vec4(outputValue.xy, outputValue.xy);
      `;else if(C&&!R)p===1?$=`
          return vec4(outputValue.x, outputValue.x, 0., 0.);
        `:$=`
          return vec4(outputValue.x);
        `;else if(h.length){let X=d-2,z=d-1;h.indexOf(X)>-1&&h.indexOf(z)>-1?$="return vec4(outputValue.x);":h.indexOf(X)>-1?$="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":h.indexOf(z)>-1&&($="return vec4(outputValue.xx, outputValue.zz);")}let G=`
        int lastDim = coords.${I[p-1]};
        coords.${I[p-1]} = coords.${I[p-2]};
        coords.${I[p-2]} = lastDim;
      `,q=`
      vec4 ${n}() {
        ${g} coords = getOutputCoords();
        ${G}
        ${w}
        vec4 outputValue = ${l}(${T});
        ${$}
      }
    `;return new oe(q,["coordinates.getOutputCoords"])}getUnpackedSamplerAtOutputCoords(n,t,o,i){let s=[o.width,o.height],a=[t.width,t.height],u=t.unpackedShape.length,l=o.unpackedShape.length,d=t.unpackedShape,p=o.unpackedShape,h=Ui(i);if(u===l&&fn.arraysEqual(a,s)){let C=`
          float ${n}() {
            return sampleTexture(${i}, TexCoords);
          }
        `;return new oe(C,["coordinates.sampleTexture"])}let g=Lt(l),y=Bt.getBroadcastDims(d,p),w=l-u,I,T=mr();u===0?I="":l<2&&y.length>=1?I="coords = 0;":I=y.map(C=>`coords.${T[C+w]} = 0;`).join(`
`);let $="";l<2&&u>0?$="coords":$=t.unpackedShape.map((C,M)=>`coords.${T[M+w]}`).join(", ");let O=`
        float ${n}() {
          ${g} coords = getOutputCoords();
          ${I}
          return ${h}(${$});
        }
      `;return new oe(O,["coordinates.getOutputCoords"])}getPackedSamplerFromInput(n,t,o){switch(o.unpackedShape.length){case 0:return this.getPackedSamplerScalar(n,t);case 1:return this.getPackedSampler1D(n,t,o);case 2:return this.getPackedSampler2D(n,t,o);case 3:return this.getPackedSampler3D(n,t,o);default:return this.getPackedSamplerND(n,t,o)}}getUnpackedSamplerFromInput(n,t,o){let i=o.unpackedShape;switch(i.length){case 0:return this.getUnpackedSamplerScalar(n,t,o);case 1:return this.getUnpackedSampler1D(n,t,o);case 2:return this.getUnpackedSampler2D(n,t,o);case 3:return this.getUnpackedSampler3D(n,t,o);case 4:return this.getUnpackedSampler4D(n,t,o);case 5:return this.getUnpackedSampler5D(n,t,o);case 6:return this.getUnpackedSampler6D(n,t,o);default:throw new Error(`Unsupported dimension ${i.length}-D`)}}getPackedSamplerScalar(n,t){let o=pe(this.context.glContext.version),i=`
          vec4 ${n}() {
            return ${o.texture2D}(${t}, halfCR);
          }
        `;return new oe(i)}getPackedSampler1D(n,t,o){let i=[o.width,o.height],s=[i[1],i[0]],a=pe(this.context.glContext.version),l=`vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
      ${s[0]}, ${s[1]}, index);
      return ${a.texture2D}(${t}, uv);
    }`;return new oe(l,["coordinates.packedUVfrom1D"])}getPackedSampler2D(n,t,o){let i=o.unpackedShape,s=[o.width,o.height],a=pe(this.context.glContext.version),u=s[0],l=s[1];if(s!=null&&fn.arraysEqual(i,s)){let y=`vec4 ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${l}.0, ${u}.0);
        return ${a.texture2D}(${t}, uv);
      }`;return new oe(y)}let d=s,p=Math.ceil(i[1]/2),g=`vec4 ${n}(int row, int col) {
      vec2 uv = packedUVfrom2D(${d[1]}, ${d[0]}, ${p}, row, col);
      return ${a.texture2D}(${t}, uv);
    }`;return new oe(g,["coordinates.packedUVfrom2D"])}getPackedSampler3D(n,t,o){let i=o.unpackedShape,s=[o.width,o.height],a=[s[0],s[1]],u=pe(this.context.glContext.version);if(i[0]===1){let w=i.slice(1),I=[1,2],T=Wn(i,w),$=["b","row","col"],O=JSON.parse(JSON.stringify(o));O.unpackedShape=T;let C=this.getPackedSamplerFromInput(n,t,O),R=`${C.routineBody}
      vec4 ${n}(int b, int row, int col) {
        return ${n}(${Hn($,I)});
      } `;return new oe(R,C.dependencies)}let l=a[0],d=a[1],p=Math.ceil(i[2]/2),h=p*Math.ceil(i[1]/2),y=`vec4 ${n}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${d}, ${l}, ${h}, ${p}, b, row, col);
      return ${u.texture2D}(${t}, uv);}`;return new oe(y,["coordinates.packedUVfrom3D"])}getPackedSamplerND(n,t,o){let i=o.unpackedShape,s=i.length,a=[o.width,o.height],u=pe(this.context.glContext.version),l=[a[0],a[1]],d=l[1],p=l[0],h=Math.ceil(i[s-1]/2),g=h*Math.ceil(i[s-2]/2),y="int b, int row, int col",w=`b * ${g} + (row / 2) * ${h} + (col / 2)`;for(let $=2;$<s-1;$++)y=`int b${$}, `+y,g*=i[s-$-1],w=`b${$} * ${g} + `+w;let T=`vec4 ${n}(${y}) {
      int index = ${w};
      int texR = index / ${p};
      int texC = index - texR * ${p};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}, ${d});
      return ${u.texture2D}(${t}, uv);
    }`;return new oe(T)}getUnpackedSamplerScalar(n,t,o){let[i,s]=[o.width,o.height];if(i===1&&s===1){let u=`
          float ${n}() {
            return sampleTexture(${t}, halfCR);
          }
        `;return new oe(u,["coordinates.sampleTexture"])}let a=`
        float ${n}() {
          int offset_${t} = coordsToOffset(TexCoords, ${i}, ${s});
          vec2 uv = uvFromFlat(${i}, ${s}, offset_${t});
          return sampleTexture(${t}, uv);
        }
      `;return new oe(a,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler1D(n,t,o){let i=o.width,s=o.height;if(s===1&&i===1){let u=`
        float ${n}(int index) {
          return sampleTexture(${t}, halfCR);
        }
      `;return new oe(u,["coordinates.sampleTexture"])}if(s===1){let u=`
          float ${n}(int index) {
            vec2 uv = vec2((float(index) + 0.5) / ${i}.0, 0.5);
            return sampleTexture(${t}, uv);
          }
        `;return new oe(u,["coordinates.sampleTexture"])}if(i===1){let u=`
          float ${n}(int index) {
            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${s}.0);
            return sampleTexture(${t}, uv);
          }
        `;return new oe(u,["coordinates.sampleTexture"])}let a=`
        float ${n}(int index) {
          vec2 uv = uvFromFlat(${i}, ${s}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new oe(a,["coordinates.uvFromFlat","coordinates.sampleTexture"])}getUnpackedSampler2D(n,t,o){let i=o.unpackedShape,s=[o.height,o.width];if(s!=null&&fn.arraysEqual(i,s)){let g=s[1],y=s[0],w=`
          float ${n}(int row, int col) {
            vec2 uv = (vec2(row, col) + halfCR) / vec2(${g}.0, ${y}.0);
            return sampleTexture(${t}, uv);
          }
        `;return new oe(w,["coordinates.sampleTexture"])}let{newShape:a,keptDims:u}=Yn(i),l=a;if(l.length<i.length){let g=Wn(i,l),y=JSON.parse(JSON.stringify(o));y.unpackedShape=g;let w=["col","row"],I=`
          ${this.getUnpackedSamplerFromInput(n,t,y).routineBody}
          float ${n}(int row, int col) {
            return ${n}(${Hn(w,u)});
          }
        `;return new oe(I,["coordinates.sampleTexture"])}let d=s[1],p=s[0];if(p===1){let g=`
          float ${n}(int row, int col) {
            int offset_${t} = coordsToOffset(TexCoords, ${d}, ${p});
            float index = dot(vec3(row, col, offset_${t}), vec3(${i[1]}, 1, 1));
            vec2 uv = vec2(0.5, (index + 0.5) / ${d}.0);
            return sampleTexture(${t}, uv);
          }
        `;return new oe(g,["coordinates.sampleTexture","coordinates.coordsToOffset"])}if(d===1){let g=`
          float ${n}(int row, int col) {
            int offset_${t} = coordsToOffset(TexCoords, ${d}, ${p});
            float index = dot(vec3(row, col, offset_${t}), vec3(${i[1]}, 1, 1));
            vec2 uv = vec2((index + 0.5) / ${p}.0, 0.5);
            return sampleTexture(${t}, uv);
          }
        `;return new oe(g,["coordinates.sampleTexture","coordinates.coordsToOffset"])}let h=`
        float ${n}(int row, int col) {
          int index = col * ${i[1]} + row;
          vec2 uv = uvFromFlat(${d}, ${p}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new oe(h,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler3D(n,t,o){let i=o.unpackedShape,s=i[1]*i[2],a=i[2],{newShape:u,keptDims:l}=Yn(i),d=u;if(d.length<i.length){let y=Wn(i,d),w=["batch","col","row"],I=JSON.parse(JSON.stringify(o));I.unpackedShape=y;let T=this.getUnpackedSamplerFromInput(n,t,I),$=l.reverse(),O=`
          ${T.routineBody}
          float ${n}(int batch, int row, int col) {
            return ${n}(${Hn(w,$)});
          }
        `;return new oe(O,T.dependencies)}let p=o.width,h=o.height,g=`
          float ${n}(int depth, int row, int col) {
            // Explicitly use integer operations as dot() only works on floats.
            int index = depth * ${s} + col * ${a} + row;
            vec2 uv = uvFromFlat(${p}, ${h}, index);
            return sampleTexture(${t}, uv);
          }
      `;return new oe(g,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler4D(n,t,o){let i=o.unpackedShape,s=i[3],a=i[2]*s,u=i[1]*a,l=o.width,d=o.height,p=`
        float ${n}(int row, int col, int depth, int depth2) {
          int index = row * ${u} + col * ${a} +
              depth2 * ${s} + depth;
          vec2 uv = uvFromFlat(${l}, ${d}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new oe(p,["coordinates.uvFromFlat","coordinates.sampleTexture"])}getUnpackedSampler5D(n,t,o){let i=o.unpackedShape,s=i[4],a=i[3]*s,u=i[2]*a,l=i[1]*u,{newShape:d,keptDims:p}=Yn(i);if(d.length<i.length){let w=Wn(i,d),I=["row","col","depth","depth2","depth3"],T=JSON.parse(JSON.stringify(o));T.unpackedShape=w;let $=`
          ${this.getUnpackedSamplerFromInput(n,t,T).routineBody}
          float ${n}(int row, int col, int depth, int depth2, int depth3) {
            return ${n}(${Hn(I,p)});
          }
        `;return new oe($,["coordinates.sampleTexture","coordinates.uvFromFlat"])}let h=o.width,g=o.height,y=`
        float ${n}(int row, int col, int depth, int depth2, int depth3) {
          int index = row * ${l} + col * ${u} + depth * ${a} +
          depth3 * ${s} + depth2;
          vec2 uv = uvFromFlat(${h}, ${g}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new oe(y,["coordinates.sampleTexture","coordinates.uvFromFlat"])}getUnpackedSampler6D(n,t,o){let i=o.unpackedShape,s=i[5],a=i[4]*s,u=i[3]*a,l=i[2]*u,d=i[1]*l,{newShape:p,keptDims:h}=Yn(i);if(p.length<i.length){let I=Wn(i,p),T=["row","col","depth","depth2","depth3","depth4"],$=JSON.parse(JSON.stringify(o));$.unpackedShape=I;let O=`
            ${this.getUnpackedSamplerFromInput(n,t,$).routineBody}
            float ${n}(int row, int col, int depth,
              int depth2, int depth3, int depth4) {
              return ${n}(${Hn(T,h)});
            }
          `;return new oe(O,["coordinates.sampleTexture","coordinates.uvFromFlat"])}let g=o.width,y=o.height,w=`
          float ${n}(int row, int col, int depth,
            int depth2, int depth3, int depth4) {
            int index = row * ${d} + col * ${l} + depth * ${u} +
            depth2 * ${a} + depth3 * ${s} + depth4;
            vec2 uv = uvFromFlat(${g}, ${y}, index);
            return sampleTexture(${t}, uv);
          }
        `;return new oe(w,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}toVec(){let n=this.context.outputTextureLayout,t=n.shape.length,o=n.strides,i=n.width,s=n.height,a=[];for(let l=0;l<t-1;++l)a.push(`
        c[${l}] = offset / ${o[l]};`),a.push(`
        offset -= c[${l}] * ${o[l]};`);a.push(`
        c[${t-1}] = offset;`);let u=`
      void toVec(vec2 texCoords, out int c[${t}]) {
        int offset = coordsToOffset(texCoords, ${i}, ${s});
        ${a.join("")}
      }
      void toVec(int offset, out int c[${t}]) {
        ${a.join("")}
      }
    `;return{toVec:new oe(u,["coordinates.coordsToOffset"])}}valueFrom(){let n={};return this.context.programInfo.inputNames.forEach((t,o)=>{let i=this.context.inputTextureLayouts[o],a=(i.unpackedShape.length>0?i.unpackedShape:i.shape).length,u=`_${t}`;n[u]=new oe(this.getValueFromSingle(t,a,i.width,i.height,!1),[`shapeUtils.indicesToOffset${u}`,"coordinates.offsetToCoords","fragcolor.getColorAsFloat"]),u=u+"_T",n[u]=new oe(this.getValueFromSingle(t,a,i.width,i.height,!0),[`shapeUtils.indicesToOffset${u}`,"coordinates.offsetToCoords","fragcolor.getColorAsFloat"])}),n}getValueFromSingle(n,t,o,i,s){let a=`_${n}`;s&&(a=a+"_T");let u=pe(this.context.glContext.version);return`
        float ${a}(int m[${t}]) {
          int offset = indicesToOffset${a}(m);
          vec2 coords = offsetToCoords(offset, ${o}, ${i});
          float value = getColorAsFloat(${u.texture2D}(${n}, coords));
          return value;
        }
        `}getPackedValueFrom(n,t,o,i,s){let a=`_${n}_Pack`;s&&(a=a+"_T");let u=pe(this.context.glContext.version);return`
        vec4 ${a}(int m[${t}]) {
          int offset = indicesToOffset_${n}(m);
          vec2 coords = offsetToCoords(offset, ${o}, ${i});
          return ${u.texture2D}(${n}, coords);
        }
        `}}});var oa,ch=D(()=>{"use strict";zr();oa=class r extends tr{constructor(e){super(e)}getFunctions(){return{...this.encodeFloat32(),...this.decodeFloat32()}}getCustomTypes(){return{}}encodeFloat32(){return{encode:new oe(`highp vec4 encode(highp float f) {
        return vec4(f, 0.0, 0.0, 0.0);
      }
        `)}}decodeFloat32(){return{decode:new oe(`highp float decode(highp vec4 rgba) {
        return rgba.r;
      }
        `)}}encodeUint8(){let e=r.isLittleEndian()?"rgba.rgba=rgba.abgr;":"";return{encode:new oe(`
      highp vec4 encode(highp float f) {
        highp float F = abs(f);
        highp float Sign = step(0.0,-f);
        highp float Exponent = floor(log2(F));
        highp float Mantissa = (exp2(- Exponent) * F);
        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));
        highp vec4 rgba;
        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));
        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);
        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));
        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));
        ${e}
        rgba = rgba / 255.0; // values need to be normalized to [0,1]
        return rgba;
    }
        `)}}decodeUint8(){let e=r.isLittleEndian()?"rgba.rgba=rgba.abgr;":"";return{decode:new oe(`
        highp float decode(highp vec4 rgba) {
          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]
          ${e}
          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;
          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;
          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);
          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));
          return Result;
      }
        `)}}static isLittleEndian(){let e=new ArrayBuffer(4),n=new Uint32Array(e),t=new Uint8Array(e);if(n[0]=3735928559,t[0]===239)return!0;if(t[0]===222)return!1;throw new Error("unknown endianness")}}});var ia,fh=D(()=>{"use strict";zr();nt();ia=class extends tr{constructor(e){super(e)}getFunctions(){return{...this.setFragColor(),...this.getColorAsFloat()}}getCustomTypes(){return{}}setFragColor(){let e=pe(this.context.glContext.version);return{setFragColor:new oe(`
        void setFragColor(float value) {
            ${e.output} = encode(value);
        }
        `,["encoding.encode"])}}getColorAsFloat(){return{getColorAsFloat:new oe(`
        float getColorAsFloat(vec4 color) {
            return decode(color);
        }
        `,["encoding.decode"])}}}});var aa,ph=D(()=>{"use strict";zr();aa=class r extends tr{constructor(e){super(e)}getFunctions(){return{...this.bcastIndex(),...this.bcastMatmulIndex(),...this.offsetToIndices(),...this.indicesToOffset(),...this.incrementIndices()}}getCustomTypes(){return{}}bcastIndex(){let e=this.context.outputTextureLayout.shape.length,n={};return this.context.programInfo.inputNames.forEach((t,o)=>{let i=this.context.inputTextureLayouts[o].unpackedShape;if(i.length<=e){let s=i.length,a=e-s,u=`bcastIndices_${t}`,l="";for(let p=0;p<s;++p)l+=`
          realIndices[${p}] = int( mod(float(bcastedIndices[${a+p}]), ${i[p]}.0) );
          `;let d=`
        void ${u} (int bcastedIndices[${e}], out int realIndices[${s}]) {
          ${l}
        }
        `;n[u]=new oe(d)}}),n}bcastMatmulIndex(){let e=this.context.outputTextureLayout.shape.length,n={};return this.context.programInfo.inputNames.forEach((t,o)=>{let i=this.context.inputTextureLayouts[o].shape;if(!(i.length<2||i.length>e)){let s=i.length,a=e-s,u=`bcastMatmulIndices_${t}`,l="";for(let p=0;p<s-2;++p)l+=`
          realIndices[${p}] = int( mod(float(bcastedIndices[${a+p}]), ${i[p]}.0) );
          `;let d=`
        void ${u}(int bcastedIndices[${e}], out int realIndices[${s}]) {
          ${l}
          realIndices[${s-1}] = bcastedIndices[${e-1}];
          realIndices[${s-2}] = bcastedIndices[${e-2}];
        }
        `;n[u]=new oe(d)}}),n}indicesToOffset(){let e={};return this.context.programInfo.inputNames.forEach((n,t)=>{let o=this.context.inputTextureLayouts[t].shape,i=this.context.inputTextureLayouts[t].strides,s=o.length,a=`indicesToOffset_${n}`;e[a]=new oe(r.indexToOffsetSingle(a,s,i)),a=`indicesToOffset_${n}_T`,e[a]=new oe(r.indexToOffsetSingle(a,s,i.slice().reverse()))}),e}static indexToOffsetSingle(e,n,t){let o="";for(let i=n-1;i>=0;--i)o+=`
        offset += indices[${i}] * ${t[i]};
        `;return`
      int ${e}(int indices[${n}]) {
        int offset = 0;
        ${o}
        return offset;
      }
      `}offsetToIndices(){let e={};return this.context.programInfo.inputNames.forEach((n,t)=>{let o=this.context.inputTextureLayouts[t].shape,i=this.context.inputTextureLayouts[t].strides,s=o.length,a=`offsetToIndices_${n}`;e[a]=new oe(r.offsetToIndicesSingle(a,s,i)),a=`offsetToIndices_${n}_T`,e[a]=new oe(r.offsetToIndicesSingle(a,s,i.slice().reverse()))}),e}static offsetToIndicesSingle(e,n,t){let o=[];for(let i=0;i<n-1;++i)o.push(`
      indices[${i}] = offset / ${t[i]};`),o.push(`
        offset -= indices[${i}] * ${t[i]};`);return o.push(`
      indices[${n-1}] = offset;`),`
      void ${e}(int offset, out int indices[${n}]) {
        ${o.join("")}
      }
      `}incrementIndices(){let e={};return this.context.programInfo.inputNames.forEach((n,t)=>{let o=this.context.inputTextureLayouts[t].shape,i=o.length,s=`incrementIndices_${n}`,a="";for(let l=0;l<i;++l)a+=`
        shape[${l}] = ${o[l]};`;let u=`
        void ${s}(int axis, out int indices[${i}]) {
          int shape[${i}];
          ${a};
          for(int i = ${i} -1 ; i >= 0; --i) {
            if(i > axis) continue;
            indices[i] += 1;
            if(indices[i] < shape[i]) {
              break;
            }
            indices[i] = 0;
          }
        }
        `;e[s]=new oe(u)}),e}}});var sa,hh=D(()=>{"use strict";zr();sa=class extends tr{constructor(e){super(e)}getCustomTypes(){return{}}getFunctions(){return{...this.binaryVecFunctions(),...this.copyVec(),...this.setVecItem(),...this.getVecItem()}}binaryVecFunctions(){let n=this.context.outputTextureLayout.shape.length,t={add:"+=",sub:"-=",mul:"*=",div:"/="},o={};for(let i in t){let s=`${i}Vec`,a="";for(let l=0;l<n;++l)a+=`
          dest[${l}] ${t[i]} src[${l}];
          `;let u=`
        void ${s}(int src[${n}], out int dest[${n}]) {
          ${a}
        }
        `;o[s]=new oe(u)}return o}copyVec(){let n=this.context.outputTextureLayout.shape.length,t="";for(let i=0;i<n;++i)t+=`
        dest[${i}] = src[${i}];
        `;let o=`
      void copyVec(int src[${n}], out int dest[${n}]) {
        ${t}
      }
      `;return{copyVec:new oe(o)}}setVecItem(){let n=this.context.outputTextureLayout.shape.length,t=`
        if(index < 0)
            index =${n} + index;
        if (index == 0)
            m[0] = value;
        `;for(let i=1;i<n-1;++i)t+=`
        else if (index == ${i})
            m[${i}] = value;
            `;t+=`
        else
            m[${n-1}] = value;
        `;let o=`
      void setVecItem(out int m[${n}], int index, int value) {
        ${t}
      }
        `;return{setVecItem:new oe(o)}}getVecItem(){let n=this.context.outputTextureLayout.shape.length,t=`
        if(index < 0)
            index = ${n} + index;
        if (index == 0)
            return m[0];
      `;for(let i=1;i<n-1;++i)t+=`
        else if (index == ${i})
            return m[${i}];
      `;t+=`
        else
            return m[${n-1}];
        `;let o=`
      int getVecItem(int m[${n}], int index) {
        ${t}
      }
    `;return{getVecItem:new oe(o)}}}});var tu,mh=D(()=>{"use strict";dh();ch();fh();ph();hh();tu={encoding:oa,fragcolor:ia,vec:sa,shapeUtils:aa,coordinates:na}});var ua,gh=D(()=>{"use strict";zr();uh();mh();nt();ua=class{constructor(e,n,t,o){this.libs={};this.glslLibRoutineDependencyGraph={};this.context=new qi(e,n,t,o),Object.keys(tu).forEach(s=>{let a=new tu[s](this.context);this.libs[s]=a});let i=this.glslLibRoutineDependencyGraph;for(let s in this.libs){let u=this.libs[s].getFunctions();for(let l in u){let d=s+"."+l,p;i[d]?(p=i[d],p.routineBody=u[l].routineBody):(p=new ko(d,u[l].routineBody),i[d]=p);let h=u[l].dependencies;if(h)for(let g=0;g<h.length;++g)if(i[h[g]])p.addDependency(i[h[g]]);else{let y=new ko(h[g]);i[h[g]]=y,p.addDependency(y)}}}}preprocess(){let e=this.context.programInfo,n=e.shaderSource;return this.context.programInfo.hasMain||(n=`${n}
      ${Yd(this.context.glContext.version,this.context.outputTextureLayout.shape.length)}`),n=sh(n),`${Kd(this.context.glContext.version)}
    ${this.getUniforms(e.inputNames,e.variables)}
    ${this.getImports(n)}
    ${n}`}getImports(e){let n=this.selectGlslLibRoutinesToBeIncluded(e);if(n.length===0)return"";let t="";for(let o=0;o<n.length;++o)if(n[o].routineBody)t+=n[o].routineBody+`
`;else throw new Error(`Missing body for the Glsl Library routine: ${n[o].name}`);return t}selectGlslLibRoutinesToBeIncluded(e){let n=[];return Object.keys(this.glslLibRoutineDependencyGraph).forEach(t=>{let o=t.split(".")[1];e.indexOf(o)!==-1&&n.push(this.glslLibRoutineDependencyGraph[t])}),ji.returnOrderedNodes(n)}getUniforms(e,n){let t=[];if(e)for(let o of e)t.push(`uniform sampler2D ${o};`);if(n)for(let o of n)t.push(`uniform ${o.type} ${o.name}${o.arrayLength?`[${o.arrayLength}]`:""};`);return t.join(`
`)}}});var la,bh=D(()=>{"use strict";Pt();Zt();gh();nt();la=class{constructor(e,n,t){this.profiler=e;this.glContext=n;this.textureLayoutStrategy=t;this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,n){this.repo.set(e,n)}run(e,n,t){this.profiler.event("op",`ProgramManager.run ${e.programInfo.name??"unknown kernel"}`,()=>{let o=this.glContext.gl,i=e.program;o.useProgram(i);try{this.bindOutput(t),this.attributesBound||this.bindAttributes(e.attribLocations),this.bindUniforms(e.uniformLocations,e.programInfo.variables??[],n)}catch(s){throw He.error("ProgramManager",e.programInfo.shaderSource),s}this.profiler.event("backend","GlContext.draw()",()=>{this.glContext.draw()})},this.glContext)}dispose(){this.vertexShader&&this.glContext.deleteShader(this.vertexShader),this.repo.forEach(e=>this.glContext.deleteProgram(e.program))}build(e,n,t){return this.profiler.event("backend","ProgramManager.build",()=>{let o=new ua(this.glContext,e,n,t),i=o.preprocess(),s=this.compile(i);return{programInfo:e,program:s,uniformLocations:this.getUniformLocations(s,o.context.programInfo.inputNames,o.context.programInfo.variables),attribLocations:this.getAttribLocations(s)}})}compile(e){if(!this.vertexShader){He.verbose("ProrgramManager","Compiling and caching Vertex shader for the first time");let o=jd(this.glContext.version);this.vertexShader=this.glContext.compileShader(o,this.glContext.gl.VERTEX_SHADER)}ye.debug&&He.verbose("ProrgramManager",`FragShader:
${e}
`);let n=this.glContext.compileShader(e,this.glContext.gl.FRAGMENT_SHADER),t=this.glContext.createProgram(this.vertexShader,n);return this.glContext.deleteShader(n),t}bindOutput(e){let n=e.width,t=e.height;He.verbose("ProrgramManager",`Binding output texture to Framebuffer: w/h=${n}/${t}, shape=${e.shape}, type=${e.tensor.type}`),this.glContext.attachFramebuffer(e.texture,n,t)}bindAttributes(e){let n=e.position,t=e.textureCoord;this.glContext.setVertexAttributes(n,t),this.attributesBound=!0}bindUniforms(e,n,t){let o=this.glContext.gl,i=0;for(let{name:s,type:a,location:u,arrayLength:l}of e){let d=n.find(p=>p.name===s)?.data;if(a!=="sampler2D"&&!d)throw new Error(`variable '${s}' does not have data defined in program info`);switch(a){case"sampler2D":this.bindTexture(t[i],u,i),i++;break;case"float":l?o.uniform1fv(u,d):o.uniform1f(u,d);break;case"int":l?o.uniform1iv(u,d):o.uniform1i(u,d);break;default:throw new Error(`Uniform not implemented: ${a}`)}}}bindTexture(e,n,t){this.glContext.bindTextureToUniform(e.texture,t,n)}getAttribLocations(e){return{position:this.getAttribLocation(e,"position"),textureCoord:this.getAttribLocation(e,"textureCoord")}}getUniformLocations(e,n,t){let o=[];if(n)for(let i of n)o.push({name:i,type:"sampler2D",location:this.getUniformLocation(e,i)});if(t)for(let i of t)o.push({...i,location:this.getUniformLocation(e,i.name)});return o}getUniformLocation(e,n){let o=this.glContext.gl.getUniformLocation(e,n);if(o===null)throw new Error(`Uniform ${n} not found.`);return o}getAttribLocation(e,n){return this.glContext.gl.getAttribLocation(e,n)}}});var da,yh=D(()=>{"use strict";Zt();Co();da=class{constructor(e,n,t,o){this.glContext=e;this.layoutStrategy=n;this.profiler=t;this.config=o;this.pendingRead=new Map;o.reuseTextures&&(this.inUseTextures=new Map,this.idleTextures=new Map,this.textureLookup=new Map)}createTextureFromLayout(e,n,t,o){let i=this.toEncoderType(e),s=this.glContext.getEncoder(i,n.channels||1,o);if(n.isPacked&&o===1)throw new Error("not implemented");let a=n.width,u=n.height,l,d;if(this.config.reuseTextures){l=`${a}x${u}_${s.format}_${s.internalFormat}_${s.textureType}`,d=this.inUseTextures.get(l),d||(d=[],this.inUseTextures.set(l,d));let h=this.idleTextures.get(l);if(h&&h.length>0){let g=h.pop();return d.push(g),o===1&&this.glContext.updateTexture(g,a,u,s,this.toTextureData(e,t)),g}}He.verbose("TextureManager",`Creating new texture of size ${n.width}x${n.height}`);let p=this.glContext.allocateTexture(a,u,s,this.toTextureData(e,t));return this.config.reuseTextures&&(d.push(p),this.textureLookup.set(p,l)),p}readTexture(e,n,t){return t||(t=1),this.profiler.event("backend","TextureManager.readTexture",()=>{let o=e.shape.reduce((s,a)=>s*a)*t,i=this.glContext.readTexture(e.texture,e.width,e.height,o,this.toEncoderType(n),t);return this.toTensorData(n,i)})}async readTextureAsync(e,n,t){let o=e.tensor.dataId;if(t||(t=1),this.pendingRead.has(o)){let i=this.pendingRead.get(o);return new Promise(s=>i?.push(s))}return this.profiler.event("backend","TextureManager.readTextureAsync",async()=>{this.pendingRead.set(o,[]);let i=e.shape.reduce((l,d)=>l*d)*t;await this.glContext.createAndWaitForFence();let s=this.glContext.readTexture(e.texture,e.width,e.height,i,this.toEncoderType(n),t),a=this.toTensorData(n,s),u=this.pendingRead.get(o);return this.pendingRead.delete(o),u?.forEach(l=>l(a)),a})}readUint8TextureAsFloat(e){return this.profiler.event("backend","TextureManager.readUint8TextureAsFloat",()=>{let n=e.shape.reduce((o,i)=>o*i),t=this.glContext.readTexture(e.texture,e.width,e.height,n*4,"byte",4);return new Float32Array(t.buffer,t.byteOffset,n)})}releaseTexture(e,n){let t;if(this.config.reuseTextures&&(t=this.textureLookup.get(e.texture),t)){n&&this.textureLookup.delete(t);let o=this.inUseTextures.get(t);if(o){let i=o.indexOf(e.texture);if(i!==-1){o.splice(i,1);let s=this.idleTextures.get(t);s||(s=[],this.idleTextures.set(t,s)),s.push(e.texture)}}}(!t||n)&&(He.verbose("TextureManager",`Deleting texture of size ${e.width}x${e.height}`),this.glContext.deleteTexture(e.texture))}toTensorData(e,n){switch(e){case"int16":return n instanceof Int16Array?n:Int16Array.from(n);case"int32":return n instanceof Int32Array?n:Int32Array.from(n);case"int8":return n instanceof Int8Array?n:Int8Array.from(n);case"uint16":return n instanceof Uint16Array?n:Uint16Array.from(n);case"uint32":return n instanceof Uint32Array?n:Uint32Array.from(n);case"uint8":case"bool":return n instanceof Uint8Array?n:Uint8Array.from(n);case"float32":return n instanceof Float32Array?n:Float32Array.from(n);case"float64":return n instanceof Float64Array?n:Float64Array.from(n);default:throw new Error(`TensorData type ${e} is not supported`)}}toTextureData(e,n){if(n)return n instanceof Float32Array?n:new Float32Array(n)}toEncoderType(e){return"float"}clearActiveTextures(){this.glContext.clearActiveTextures()}}});var ca,vh=D(()=>{"use strict";Zt();Dl();dc();ih();bh();eu();yh();ca=class{constructor(e,n){this.backend=e;this.context=n;this.layoutStrategy=new ra(e.glContext.maxTextureSize),this.programManager=new la(this.context.profiler,e.glContext,this.layoutStrategy),this.textureManager=new da(e.glContext,this.layoutStrategy,this.context.profiler,{reuseTextures:e.textureCacheMode==="full"}),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache=new Map,this.pack=e.pack,this.pack2unpackMap=new Map,this.unpack2packMap=new Map}createInferenceHandler(){return new Hi(this)}onGraphInitialized(e){let n=e.getValues().filter(t=>t.from===-1&&t.tensor).map(t=>t.tensor.dataId);this.initializers=new Set(n)}isInitializer(e){return this.initializers?this.initializers.has(e):!1}addInitializer(e){this.initializers.add(e)}getTextureData(e,n){return n?this.packedTextureDataCache.get(e):this.unpackedTextureDataCache.get(e)}setTextureData(e,n,t=!1){He.verbose("WebGLSessionHandler","Storing Texture data in cache"),t?this.packedTextureDataCache.set(e,n):this.unpackedTextureDataCache.set(e,n)}dispose(){this.programManager.dispose(),this.textureManager.clearActiveTextures(),this.packedTextureDataCache.forEach(e=>this.textureManager.releaseTexture(e,!0)),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache.forEach(e=>this.textureManager.releaseTexture(e,!0)),this.unpackedTextureDataCache=new Map}resolve(e,n,t){let o=kl(e,n,oh);return{impl:o.opImpl,context:o.opInit?o.opInit(e,t):e}}}});function dx(r){let e=0;for(;e<r.length&&r[e]();++e);return e-1}var Bo,wh=D(()=>{"use strict";Pt();Co();Co();xr();Bo=class{constructor(e,n){this.frameBufferBound=!1;this.itemsToPoll=[];this.gl=e,this.version=n,this.getExtensions(),this.vertexbuffer=this.createVertexbuffer(),this.framebuffer=this.createFramebuffer(),this.queryVitalParameters()}allocateTexture(e,n,t,o){let i=this.gl,s=i.createTexture();i.bindTexture(i.TEXTURE_2D,s),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE);let a=o?t.encode(o,e*n):null;return i.texImage2D(i.TEXTURE_2D,0,t.internalFormat,e,n,0,t.format,t.textureType,a),this.checkError(),s}updateTexture(e,n,t,o,i){let s=this.gl;s.bindTexture(s.TEXTURE_2D,e);let a=o.encode(i,n*t);s.texSubImage2D(s.TEXTURE_2D,0,0,0,n,t,o.format,o.textureType,a),this.checkError()}attachFramebuffer(e,n,t){let o=this.gl;o.bindTexture(o.TEXTURE_2D,e),o.bindFramebuffer(o.FRAMEBUFFER,this.framebuffer),o.framebufferTexture2D(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,e,0),this.checkError(),o.viewport(0,0,n,t),o.scissor(0,0,n,t)}readTexture(e,n,t,o,i,s){let a=this.gl;s||(s=1),this.frameBufferBound||this.attachFramebuffer(e,n,t);let u=this.getEncoder(i,s),l=u.allocate(n*t);return a.bindTexture(a.TEXTURE_2D,e),a.framebufferTexture2D(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,e,0),a.readPixels(0,0,n,t,a.RGBA,u.textureType,l),this.checkError(),u.decode(l,o)}isFramebufferReady(){return!0}getActiveTexture(){let e=this.gl;return`TEXTURE${e.getParameter(this.gl.ACTIVE_TEXTURE)-e.TEXTURE0}`}getTextureBinding(){return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D)}getFramebufferBinding(){return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING)}setVertexAttributes(e,n){let t=this.gl;t.vertexAttribPointer(e,3,t.FLOAT,!1,20,0),t.enableVertexAttribArray(e),n!==-1&&(t.vertexAttribPointer(n,2,t.FLOAT,!1,20,12),t.enableVertexAttribArray(n)),this.checkError()}createProgram(e,n){let t=this.gl,o=t.createProgram();return t.attachShader(o,e),t.attachShader(o,n),t.linkProgram(o),o}compileShader(e,n){let t=this.gl,o=t.createShader(n);if(!o)throw new Error(`createShader() returned null with type ${n}`);if(t.shaderSource(o,e),t.compileShader(o),t.getShaderParameter(o,t.COMPILE_STATUS)===!1)throw new Error(`Failed to compile shader: ${t.getShaderInfoLog(o)}
Shader source:
${e}`);return o}deleteShader(e){this.gl.deleteShader(e)}bindTextureToUniform(e,n,t){let o=this.gl;o.activeTexture(o.TEXTURE0+n),this.checkError(),o.bindTexture(o.TEXTURE_2D,e),this.checkError(),o.uniform1i(t,n),this.checkError()}draw(){this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4),this.checkError()}checkError(){if(ye.debug){let e=this.gl,n=e.getError(),t="";switch(n){case e.NO_ERROR:return;case e.INVALID_ENUM:t="INVALID_ENUM";break;case e.INVALID_VALUE:t="INVALID_VALUE";break;case e.INVALID_OPERATION:t="INVALID_OPERATION";break;case e.INVALID_FRAMEBUFFER_OPERATION:t="INVALID_FRAMEBUFFER_OPERATION";break;case e.OUT_OF_MEMORY:t="OUT_OF_MEMORY";break;case e.CONTEXT_LOST_WEBGL:t="CONTEXT_LOST_WEBGL";break;default:t=`Unknown WebGL Error: ${n.toString(16)}`}throw new Error(t)}}deleteTexture(e){this.gl.deleteTexture(e)}deleteProgram(e){this.gl.deleteProgram(e)}getEncoder(e,n,t=0){if(this.version===2)return new Gi(this.gl,n);switch(e){case"float":return t===1||this.isRenderFloat32Supported?new Eo(this.gl,n):new Eo(this.gl,n,this.textureHalfFloatExtension.HALF_FLOAT_OES);case"int":throw new Error("not implemented");case"byte":return new Wi(this.gl,n);default:throw new Error(`Invalid dataType: ${e}`)}}clearActiveTextures(){let e=this.gl;for(let n=0;n<this.maxTextureImageUnits;++n)e.activeTexture(e.TEXTURE0+n),e.bindTexture(e.TEXTURE_2D,null)}dispose(){if(this.disposed)return;let e=this.gl;e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteFramebuffer(this.framebuffer),e.bindBuffer(e.ARRAY_BUFFER,null),e.deleteBuffer(this.vertexbuffer),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null),e.finish(),this.disposed=!0}createDefaultGeometry(){return new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0])}createVertexbuffer(){let e=this.gl,n=e.createBuffer();if(!n)throw new Error("createBuffer() returned null");let t=this.createDefaultGeometry();return e.bindBuffer(e.ARRAY_BUFFER,n),e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW),this.checkError(),n}createFramebuffer(){let e=this.gl.createFramebuffer();if(!e)throw new Error("createFramebuffer returned null");return e}queryVitalParameters(){let e=this.gl;if(this.isFloatTextureAttachableToFrameBuffer=this.checkFloatTextureAttachableToFrameBuffer(),this.isRenderFloat32Supported=this.checkRenderFloat32(),this.isFloat32DownloadSupported=this.checkFloat32Download(),this.version===1&&!this.textureHalfFloatExtension&&!this.isRenderFloat32Supported)throw new Error("both float32 and float16 TextureType are not supported");this.isBlendSupported=!this.isRenderFloat32Supported||this.checkFloat32Blend(),this.maxTextureSize=e.getParameter(e.MAX_TEXTURE_SIZE),this.maxTextureImageUnits=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),this.version}getExtensions(){this.version===2?(this.colorBufferFloatExtension=this.gl.getExtension("EXT_color_buffer_float"),this.disjointTimerQueryWebgl2Extension=this.gl.getExtension("EXT_disjoint_timer_query_webgl2")):(this.textureFloatExtension=this.gl.getExtension("OES_texture_float"),this.textureHalfFloatExtension=this.gl.getExtension("OES_texture_half_float"))}checkFloatTextureAttachableToFrameBuffer(){let e=this.gl,n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let t=this.version===2?e.RGBA32F:e.RGBA;e.texImage2D(e.TEXTURE_2D,0,t,1,1,0,e.RGBA,e.FLOAT,null);let o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(o),i}checkRenderFloat32(){if(this.version===2){if(!this.colorBufferFloatExtension)return!1}else if(!this.textureFloatExtension)return!1;return this.isFloatTextureAttachableToFrameBuffer}checkFloat32Download(){if(this.version===2){if(!this.colorBufferFloatExtension)return!1}else if(!this.textureFloatExtension||!this.gl.getExtension("WEBGL_color_buffer_float"))return!1;return this.isFloatTextureAttachableToFrameBuffer}checkFloat32Blend(){let e=this.gl,n,t,o,i,s;try{n=e.createTexture(),t=e.createFramebuffer(),e.bindTexture(e.TEXTURE_2D,n);let a=this.version===2?e.RGBA32F:e.RGBA;return e.texImage2D(e.TEXTURE_2D,0,a,1,1,0,e.RGBA,e.FLOAT,null),e.bindFramebuffer(e.FRAMEBUFFER,t),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0),e.enable(e.BLEND),o=e.createShader(e.VERTEX_SHADER),!o||(e.shaderSource(o,"void main(){}"),e.compileShader(o),i=e.createShader(e.FRAGMENT_SHADER),!i)||(e.shaderSource(i,"precision highp float;void main(){gl_FragColor=vec4(0.5);}"),e.compileShader(i),s=e.createProgram(),!s)?!1:(e.attachShader(s,o),e.attachShader(s,i),e.linkProgram(s),e.useProgram(s),e.drawArrays(e.POINTS,0,1),e.getError()===e.NO_ERROR)}finally{e.disable(e.BLEND),s&&e.deleteProgram(s),o&&e.deleteShader(o),i&&e.deleteShader(i),t&&(e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteFramebuffer(t)),n&&(e.bindTexture(e.TEXTURE_2D,null),e.deleteTexture(n))}}beginTimer(){if(this.version===2&&this.disjointTimerQueryWebgl2Extension){let e=this.gl,n=this.disjointTimerQueryWebgl2Extension,t=e.createQuery();return e.beginQuery(n.TIME_ELAPSED_EXT,t),t}else throw new Error("WebGL1 profiling currently not supported.")}endTimer(){if(this.version===2&&this.disjointTimerQueryWebgl2Extension){let e=this.gl,n=this.disjointTimerQueryWebgl2Extension;e.endQuery(n.TIME_ELAPSED_EXT);return}else throw new Error("WebGL1 profiling currently not supported")}isTimerResultAvailable(e){let n=!1,t=!1;if(this.version===2&&this.disjointTimerQueryWebgl2Extension){let o=this.gl,i=this.disjointTimerQueryWebgl2Extension;n=o.getQueryParameter(e,o.QUERY_RESULT_AVAILABLE),t=o.getParameter(i.GPU_DISJOINT_EXT)}else throw new Error("WebGL1 profiling currently not supported");return n&&!t}getTimerResult(e){let n=0;if(this.version===2){let t=this.gl;n=t.getQueryParameter(e,t.QUERY_RESULT),t.deleteQuery(e)}else throw new Error("WebGL1 profiling currently not supported");return n/1e6}async waitForQueryAndGetTime(e){return await Is(()=>this.isTimerResultAvailable(e)),this.getTimerResult(e)}async createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let n,t=e,o=t.fenceSync(t.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),o===null?n=()=>!0:n=()=>{let i=t.clientWaitSync(o,0,0);return i===t.ALREADY_SIGNALED||i===t.CONDITION_SATISFIED},{query:o,isFencePassed:n}}async pollFence(e){return new Promise(n=>{this.addItemToPoll(()=>e.isFencePassed(),()=>n())})}pollItems(){let e=dx(this.itemsToPoll.map(n=>n.isDoneFn));for(let n=0;n<=e;++n){let{resolveFn:t}=this.itemsToPoll[n];t()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}async addItemToPoll(e,n){this.itemsToPoll.push({isDoneFn:e,resolveFn:n}),!(this.itemsToPoll.length>1)&&await Is(()=>(this.pollItems(),this.itemsToPoll.length===0))}}});function ru(r){let e;if((!r||r==="webgl2")&&"webgl2"in Xn?e=Xn.webgl2:(!r||r==="webgl")&&"webgl"in Xn&&(e=Xn.webgl),!e)try{let t=fx();e=xh(t,r)}catch{let o=cx();e=xh(o,r)}r=r||e.version===1?"webgl":"webgl2";let n=e.gl;return Xn[r]=e,n.isContextLost()?(delete Xn[r],ru(r)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),e)}function xh(r,e){let n={alpha:!1,depth:!1,antialias:!1,stencil:!1,preserveDrawingBuffer:!1,premultipliedAlpha:!1,failIfMajorPerformanceCaveat:!1},t,o=n;if((!e||e==="webgl2")&&(t=r.getContext("webgl2",o),t))try{return new Bo(t,2)}catch(i){He.warning("GlContextFactory",`failed to create WebGLContext using contextId 'webgl2'. Error: ${i}`)}if((!e||e==="webgl")&&(t=r.getContext("webgl",o)||r.getContext("experimental-webgl",o),t))try{return new Bo(t,1)}catch(i){He.warning("GlContextFactory",`failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${i}`)}throw new Error("WebGL is not supported")}function cx(){if(typeof document>"u")throw new TypeError("failed to create canvas: document is not supported");let r=document.createElement("canvas");return r.width=1,r.height=1,r}function fx(){if(typeof OffscreenCanvas>"u")throw new TypeError("failed to create offscreen canvas: OffscreenCanvas is not supported");return new OffscreenCanvas(1,1)}var Xn,Th=D(()=>{"use strict";Zt();wh();Xn={}});var fa,$h=D(()=>{"use strict";Pt();Zt();vh();Th();fa=class{get contextId(){return ye.webgl.contextId}set contextId(e){ye.webgl.contextId=e}get matmulMaxBatchSize(){return ye.webgl.matmulMaxBatchSize}set matmulMaxBatchSize(e){ye.webgl.matmulMaxBatchSize=e}get textureCacheMode(){return ye.webgl.textureCacheMode}set textureCacheMode(e){ye.webgl.textureCacheMode=e}get pack(){return ye.webgl.pack}set pack(e){ye.webgl.pack=e}get async(){return ye.webgl.async}set async(e){ye.webgl.async=e}initialize(){try{return this.glContext=ru(this.contextId),typeof this.matmulMaxBatchSize!="number"&&(this.matmulMaxBatchSize=16),typeof this.textureCacheMode!="string"&&(this.textureCacheMode="full"),typeof this.pack!="boolean"&&(this.pack=!1),typeof this.async!="boolean"&&(this.async=!1),He.setWithEnv(ye),ye.webgl.context||Object.defineProperty(ye.webgl,"context",{value:this.glContext.gl}),He.verbose("WebGLBackend",`Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${this.async}.`),!0}catch(e){return He.warning("WebGLBackend",`Unable to initialize WebGLBackend. ${e}`),!1}}createSessionHandler(e){return new ca(this,e)}dispose(){this.glContext.dispose()}}});async function nu(r){if(r){let e=typeof r=="string"?[r]:r;for(let n of e){let t=_h.get(n);if(t)return t;let o=await hx(n);if(o)return o}}else return nu(["webgl"]);throw new Error("no available backend to use")}async function hx(r){let e=px;if(typeof e[r]<"u"&&mx(e[r])){let n=e[r],t=n.initialize();if(typeof t=="object"&&"then"in t&&(t=await t),t)return _h.set(r,n),n}}function mx(r){let e=r;return"initialize"in e&&typeof e.initialize=="function"&&"createSessionHandler"in e&&typeof e.createSessionHandler=="function"&&"dispose"in e&&typeof e.dispose=="function"}var _h,px,Sh=D(()=>{"use strict";$h();_h=new Map,px={webgl:new fa}});var ou,pa,Ih=D(()=>{"use strict";Zt();ou=class{constructor(e,n){this.op=e;this.node=n}},pa=class{constructor(e,n,t){this.graph=e;this.profiler=t;this.initialize(n)}initialize(e){this.profiler.event("session","ExecutionPlan.initialize",()=>{let n=this.graph.getNodes();if(n.length!==e.length)throw new Error("The size of nodes and OPs do not match.");this._ops=e.map((t,o)=>new ou(t,n[o])),this.reset(),this._starter=[],this._ops.forEach((t,o)=>{let i=!0;for(let s of t.node.inputs)if(!this._values[s]&&this.graph.getInputIndices().indexOf(s)===-1){i=!1;break}i&&this._starter.push(o)})})}reset(){this._values=this.graph.getValues().map(e=>e.tensor)}async execute(e,n){return this.profiler.event("session","ExecutionPlan.execute",async()=>{this.reset();let t=e.createInferenceHandler(),o=this.graph.getInputIndices();if(n.length!==o.length)throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${n.length} expected: ${o.length}`);n.forEach((d,p)=>{let h=o[p];this._values[h]=d});let i=this._starter.slice(0),s=this.graph.getValues(),a=this.graph.getNodes(),u=0;for(;u<i.length;){let d=i[u++],p=this._ops[d],h=p.node.inputs.map(I=>this._values[I]);if(h.indexOf(void 0)!==-1)throw new Error(`unresolved input detected: op: ${p.node}`);let g=h;He.verbose("ExecPlan",`Runing op:${p.node.name} (${g.map((I,T)=>`'${p.node.inputs[T]}': ${I.type}[${I.dims.join(",")}]`).join(", ")})`);let y=await this.profiler.event("node",p.node.name,async()=>p.op.impl(t,g,p.op.context));if(y.length!==p.node.outputs.length)throw new Error("the size of output does not match model definition.");y.forEach((I,T)=>{let $=p.node.outputs[T];if(this._values[$])throw new Error(`output [${$}] already has value: op:${p.node.name}`);this._values[$]=I});let w=new Set;y.forEach((I,T)=>{let $=p.node.outputs[T];for(let O of s[$].to){let C=a[O],M=!0;for(let R of C.inputs)if(!this._values[R]){M=!1;break}M&&w.add(O)}}),i.push(...w)}let l=[];for(let d=0;d<this.graph.getOutputIndices().length;d++){let p=this.graph.getOutputIndices()[d],h=this._values[p];if(h===void 0)throw new Error(`required output [${p}] does not have value`);p===0?await h.getData():h.data,l.push(h)}return He.verbose("ExecPlan","disposing of inferenceHandler"),t.dispose(),l})}}});var Re,or,Lo,Ah=D(()=>{"use strict";$o();Re=zn(Un());gn();We();or=ce.experimental.fbs,Lo=class r{constructor(e){if(this._attributes=new Map,e!=null){for(let n of e)n instanceof Re.onnx.AttributeProto?this._attributes.set(n.name,[r.getValue(n),r.getType(n)]):n instanceof or.Attribute&&this._attributes.set(n.name(),[r.getValue(n),r.getType(n)]);if(this._attributes.size<e.length)throw new Error("duplicated attribute names")}}set(e,n,t){this._attributes.set(e,[t,n])}delete(e){this._attributes.delete(e)}getFloat(e,n){return this.get(e,"float",n)}getInt(e,n){return this.get(e,"int",n)}getString(e,n){return this.get(e,"string",n)}getTensor(e,n){return this.get(e,"tensor",n)}getFloats(e,n){return this.get(e,"floats",n)}getInts(e,n){return this.get(e,"ints",n)}getStrings(e,n){return this.get(e,"strings",n)}getTensors(e,n){return this.get(e,"tensors",n)}get(e,n,t){let o=this._attributes.get(e);if(o===void 0){if(t!==void 0)return t;throw new Error(`required attribute not found: ${e}`)}if(o[1]!==n)throw new Error(`type mismatch: expected ${n} but got ${o[1]}`);return o[0]}static getType(e){let n=e instanceof Re.onnx.AttributeProto?e.type:e.type();switch(n){case Re.onnx.AttributeProto.AttributeType.FLOAT:return"float";case Re.onnx.AttributeProto.AttributeType.INT:return"int";case Re.onnx.AttributeProto.AttributeType.STRING:return"string";case Re.onnx.AttributeProto.AttributeType.TENSOR:return"tensor";case Re.onnx.AttributeProto.AttributeType.FLOATS:return"floats";case Re.onnx.AttributeProto.AttributeType.INTS:return"ints";case Re.onnx.AttributeProto.AttributeType.STRINGS:return"strings";case Re.onnx.AttributeProto.AttributeType.TENSORS:return"tensors";default:throw new Error(`attribute type is not supported yet: ${Re.onnx.AttributeProto.AttributeType[n]}`)}}static getValue(e){let n=e instanceof Re.onnx.AttributeProto?e.type:e.type();if(n===Re.onnx.AttributeProto.AttributeType.GRAPH||n===Re.onnx.AttributeProto.AttributeType.GRAPHS)throw new Error("graph attribute is not supported yet");let t=this.getValueNoCheck(e);if(n===Re.onnx.AttributeProto.AttributeType.INT&&Wt.isLong(t))return Wt.longToNumber(t);if(n===Re.onnx.AttributeProto.AttributeType.INTS){let o=t,i=new Array(o.length);for(let s=0;s<o.length;s++){let a=o[s];i[s]=Wt.longToNumber(a)}return i}if(n===Re.onnx.AttributeProto.AttributeType.TENSOR)return e instanceof Re.onnx.AttributeProto?bt.fromProto(t):bt.fromOrtTensor(t);if(n===Re.onnx.AttributeProto.AttributeType.TENSORS){if(e instanceof Re.onnx.AttributeProto)return t.map(i=>bt.fromProto(i));if(e instanceof or.Attribute)return t.map(i=>bt.fromOrtTensor(i))}return n===Re.onnx.AttributeProto.AttributeType.STRING&&e instanceof Re.onnx.AttributeProto?Oo(t):n===Re.onnx.AttributeProto.AttributeType.STRINGS&&e instanceof Re.onnx.AttributeProto?t.map(Oo):t}static getValueNoCheck(e){return e instanceof Re.onnx.AttributeProto?this.getValueNoCheckFromOnnxFormat(e):this.getValueNoCheckFromOrtFormat(e)}static getValueNoCheckFromOnnxFormat(e){switch(e.type){case Re.onnx.AttributeProto.AttributeType.FLOAT:return e.f;case Re.onnx.AttributeProto.AttributeType.INT:return e.i;case Re.onnx.AttributeProto.AttributeType.STRING:return e.s;case Re.onnx.AttributeProto.AttributeType.TENSOR:return e.t;case Re.onnx.AttributeProto.AttributeType.GRAPH:return e.g;case Re.onnx.AttributeProto.AttributeType.FLOATS:return e.floats;case Re.onnx.AttributeProto.AttributeType.INTS:return e.ints;case Re.onnx.AttributeProto.AttributeType.STRINGS:return e.strings;case Re.onnx.AttributeProto.AttributeType.TENSORS:return e.tensors;case Re.onnx.AttributeProto.AttributeType.GRAPHS:return e.graphs;default:throw new Error(`unsupported attribute type: ${Re.onnx.AttributeProto.AttributeType[e.type]}`)}}static getValueNoCheckFromOrtFormat(e){switch(e.type()){case or.AttributeType.FLOAT:return e.f();case or.AttributeType.INT:return e.i();case or.AttributeType.STRING:return e.s();case or.AttributeType.TENSOR:return e.t();case or.AttributeType.GRAPH:return e.g();case or.AttributeType.FLOATS:return e.floatsArray();case or.AttributeType.INTS:{let n=[];for(let t=0;t<e.intsLength();t++)n.push(e.ints(t));return n}case or.AttributeType.STRINGS:{let n=[];for(let t=0;t<e.stringsLength();t++)n.push(e.strings(t));return n}case or.AttributeType.TENSORS:{let n=[];for(let t=0;t<e.tensorsLength();t++)n.push(e.tensors(t));return n}default:throw new Error(`unsupported attribute type: ${or.AttributeType[e.type()]}`)}}}});var au,ha,su,_r,ma,iu,Oh=D(()=>{"use strict";Ah();$o();au=zn(Un());gn();We();ha=ce.experimental.fbs,su={from:(r,e)=>new iu(r,e)},_r=class{constructor(e){this._from=void 0,this._to=[],this.tensor=void 0,this.type=void 0,e&&(this.type=At.tensorValueTypeFromProto(e.type.tensorType))}get from(){return this._from}get to(){return this._to}},ma=class{constructor(e,n){e instanceof au.onnx.NodeProto?(this.name=e.name,this.opType=e.opType,this.attributes=new Lo(e.attribute)):e instanceof ha.Node&&(this.name=n??e.name(),this.opType=e.opType(),this.attributes=new Lo(At.tensorAttributesFromORTFormat(e))),this.inputs=[],this.outputs=[],this.executeNode=!0}},iu=class{constructor(e,n){if(!e)throw new TypeError("graph is empty");this.buildGraph(e),this.transformGraph(n),this.checkIsAcyclic()}getInputIndices(){return this._allInputIndices}getInputNames(){return this._allInputNames}getOutputIndices(){return this._allOutputIndices}getOutputNames(){return this._allOutputNames}getValues(){return this._allData}getNodes(){return this._nodes}buildGraph(e){if(e instanceof au.onnx.GraphProto)this.buildGraphFromOnnxFormat(e);else if(e instanceof ha.Graph)this.buildGraphFromOrtFormat(e);else throw new TypeError("Graph type is not supported.")}buildGraphFromOnnxFormat(e){let n=new Map;this._allData=[],this._allInputIndices=[],this._allInputNames=[],this._allOutputIndices=[],this._allOutputNames=[],this._nodes=[];let t=new Map;if(!e.input)throw new Error("missing information in graph: input");let o=[];for(let i of e.input){if(n.has(i.name))throw new Error(`duplicated input name: ${i.name}`);let s=this._allData.push(new _r(i))-1;n.set(i.name,s),o.push(i.name)}if(!e.initializer)throw new Error("missing information in graph: initializer");for(let i of e.initializer){let s=n.get(i.name);if(s===void 0){let a=new _r;a.type={shape:{dims:At.tensorDimsFromProto(i.dims)},tensorType:At.tensorDataTypeFromProto(i.dataType)},s=this._allData.push(a)-1,n.set(i.name,s)}this._allData[s]._from=-1,this._allData[s].tensor=bt.fromProto(i)}for(let i=0;i<this._allData.length;i++)this._allData[i].tensor||(this._allInputIndices.push(i),this._allInputNames.push(o[i]));if(!e.output)throw new Error("missing information in graph: output");for(let i of e.output){if(n.has(i.name))throw new Error(`duplicated output name: ${i.name}`);let s=this._allData.push(new _r(i))-1;n.set(i.name,s),this._allOutputIndices.push(s),this._allOutputNames.push(i.name)}if(!e.node)throw new Error("missing information in graph: node");for(let i of e.node){if(!i.name)for(let a=0;;a++){let u=`unnamed_${i.opType}_${a}`;if(!t.has(u)){i.name=u;break}}if(t.has(i.name))throw new Error(`duplicated node name: ${i.name}`);let s=this._nodes.push(new ma(i))-1;t.set(i.name,s)}for(let i=0;i<this._nodes.length;i++){let s=this._nodes[i],a=e.node[i];if(!a.output)throw new Error(`missing output for node: ${a.name}`);for(let u of a.output){let l=n.get(u);if(typeof l>"u"&&(l=this._allData.push(new _r)-1,n.set(u,l)),s.outputs.push(l),this._allData[l]._from!==void 0)throw new Error(`multiple nodes output to one data value: ${l}`);if(this._allData[l]._from=i,a.opType==="Constant"){if(!a.attribute||a.attribute.length!==1||!a.attribute[0].t)throw new Error("missing attributes or missing tensor value in attributes for this Constant operator");if(!a.output||a.output.length!==1)throw new Error("missing output or incorrect number of outputs for this Constant operator");s.outputs.pop(),s.executeNode=!1,this._allData[l]._from=-1,this._allData[l].tensor=bt.fromProto(a.attribute[0].t)}}}for(let i=0;i<this._nodes.length;i++){let s=this._nodes[i],a=e.node[i];if(!a.input)throw new Error(`missing input for node: ${a.name}`);for(let u of a.input){let l=n.get(u);if(typeof l>"u"){if(u===""&&(a.input.length===3||a.input.length===4)&&a.opType==="Resize")continue;throw new Error(`unrecognized input '${u}' for node: ${a.name}`)}s.inputs.push(l),this._allData[l]._to.push(i)}}return!0}buildGraphFromOrtFormat(e){let n=new Map;this._allData=[],this._allInputIndices=[],this._allInputNames=[],this._allOutputIndices=[],this._allOutputNames=[],this._nodes=[];let t=new Map,o=[];for(let i=0;i<e.inputsLength();i++){let s=e.inputs(i);if(n.has(s))throw new Error(`duplicated input name: ${s}`);for(let a=0;a<e.nodeArgsLength();a++)if(e.nodeArgs(a)?.name()===s){let u=new _r;if(e.nodeArgs(a)?.type()?.valueType()!==ha.TypeInfoValue.tensor_type)throw new Error("Unexpected value type for the nodeArg.");let d=e.nodeArgs(a).type().value(new ha.TensorTypeAndShape),p=At.tensorDataTypeFromProto(d.elemType()),h=d.shape(),g=[];for(let w=0;w<h.dimLength();w++)g.push(Wt.longToNumber(h.dim(w).value().dimValue()));u.type={shape:{dims:g},tensorType:p};let y=this._allData.push(u)-1;n.set(s,y),o.push(s)}}for(let i=0;i<e.initializersLength();i++){let s=e.initializers(i),a=n.get(s.name());if(a===void 0){let u=new _r,l=At.tensorDimsFromORTFormat(s),d=At.tensorDataTypeFromProto(s.dataType());u.type={shape:{dims:l},tensorType:d},a=this._allData.push(u)-1,n.set(s.name(),a)}this._allData[a]._from=-1,this._allData[a].tensor=bt.fromOrtTensor(s)}for(let i=0;i<this._allData.length;i++)this._allData[i].tensor||(this._allInputIndices.push(i),this._allInputNames.push(o[i]));for(let i=0;i<e.outputsLength();i++){let s=e.outputs(i);if(n.has(s))throw new Error(`duplicated output name: ${s}`);let a=this._allData.push(new _r)-1;n.set(s,a),this._allOutputIndices.push(a),this._allOutputNames.push(s)}if(!e.nodes)throw new Error("missing information in graph: node");for(let i=0;i<e.nodesLength();i++){let s=e.nodes(i),a=s.name();if(!a)for(let l=0;a=`unnamed_${s.opType()}_${l}`,!!t.has(a);l++);if(t.has(a))throw new Error(`duplicated node name: ${a}`);let u=this._nodes.push(new ma(s,a))-1;t.set(a,u)}for(let i=0;i<this._nodes.length;i++){let s=this._nodes[i],a=e.nodes(i);if(a==null)throw new Error(`No node exists at index ${i}`);if(a?.outputsLength()===0)throw new Error(`missing output for node: ${a.name}`);for(let u=0;u<a?.outputsLength();u++){let l=a?.outputs(u),d=n.get(l);if(typeof d>"u"&&(d=this._allData.push(new _r)-1,n.set(l,d)),s.outputs.push(d),this._allData[d]._from!==void 0)throw new Error(`multiple nodes output to one data value: ${d}`);if(this._allData[d]._from=i,a.opType()==="Constant"){if(a.attributesLength()!==1||!a.attributes(0).t())throw new Error("missing attributes or missing tensor value in attributes for this Constant operator");if(a.outputsLength()!==1)throw new Error("missing output or incorrect number of outputs for this Constant operator");s.outputs.pop(),s.executeNode=!1,this._allData[d]._from=-1,this._allData[d].tensor=bt.fromOrtTensor(a.attributes(0).t())}}}for(let i=0;i<this._nodes.length;i++){let s=this._nodes[i],a=e.nodes(i);if(a.inputsLength()===0)throw new Error(`missing input for node: ${a.name}`);for(let u=0;u<a.inputsLength();u++){let l=a.inputs(u),d=n.get(l);if(typeof d>"u")throw new Error(`unrecognized input '${l}' for node: ${a.name()}`);s.inputs.push(d),this._allData[d]._to.push(i)}}}checkIsAcyclic(){let e=new Set;this._allInputIndices.forEach(o=>{this._allData[o]._to.forEach(s=>{e.add(s)})});let n=Array.from(e),t=new Array(this._nodes.length).fill("white");for(;n.length>0;){let o=n.pop();t[o]==="gray"?t[o]="black":(n.push(o),t[o]="gray",this._nodes[o].outputs.forEach(i=>{let s=this._allData[i];if(typeof s.tensor<"u")throw new Error("node outputs should not be initialized");if(s._from!==o)throw new Error("from property of the Value object doesn't match index of Node being processed");s._to.forEach(a=>{if(t[a]==="gray")throw new Error("model graph is cyclic");t[a]==="white"&&n.push(a)})}))}}transformGraph(e){this.removeAllIdentityNodes(),this.removeAllDropoutNodes(),this.fuseConvActivationNodes(),e&&e.transformGraph(this),this.finalizeGraph()}finalizeGraph(){let e=0,n=new Array(this._nodes.length,0),t=0;for(let o=0;o<this._nodes.length;o++)n[o]=t,this._nodes[o].executeNode?(t!==o&&(this._nodes[t]=this._nodes[o]),t++):this._nodes[o].outputs.forEach(i=>{this._allData[i]._from=-2});this._nodes.splice(t,this._nodes.length-t);for(let o=0;o<this._allData.length;o++){let i=this._allData[o];i._from!==void 0&&i._from!==-1&&i._from!==-2&&(i._from=n[i._from]);for(let s=0;s<i._to.length;s++)if(i._to[s]>=0)i._to[s]=n[i._to[s]];else throw new Error("Trying to update a removed node")}e=0;for(let o=0;o<this._allData.length;o++){if(this._allData[o].from===-2&&this._allOutputIndices.indexOf(o+e)===-1){e++,this._allData.splice(o,1),o--;continue}if(e>0){let i=-1;this._allData[o].from!==void 0&&this._allData[o].from!==-1?(i=this._nodes[this._allData[o].from].outputs.indexOf(o+e),i!==-1&&(this._nodes[this._allData[o].from].outputs[i]=o)):(i=this._allInputIndices.indexOf(o+e),i!==-1&&(this._allInputIndices[i]=o)),this._allData[o].to.forEach(s=>{i=this._nodes[s].inputs.indexOf(o+e),i!==-1&&(this._nodes[s].inputs[i]=o)}),this._allData[o].to.length===0&&(i=this._allOutputIndices.indexOf(o+e),i!==-1&&(this._allOutputIndices[i]=o))}}}deleteNode(e){let n=this._nodes[e];if(n.outputs.length>1){for(let a=1;a<n.outputs.length;a++)if(this._allData[n.outputs[a]].to.length>0)throw new Error("Node deletion with more than one output connected to other nodes is not supported. ")}n.executeNode=!1;let t=n.inputs[0],o=n.outputs[0],i=this._allData[o].to;for(let a=0;a<n.inputs.length;a++){let u=this._allData[n.inputs[a]].to.indexOf(e);if(u===-1)throw new Error("The Value object doesn't have the current Node in it's 'to' property ");this._allData[n.inputs[a]].to.splice(u,1)}this._allData[o]._to=[];let s=this._allOutputIndices.indexOf(o);if(s!==-1&&(this._allOutputIndices[s]=t),i&&i.length>0)for(let a of i){let u=this._nodes[a].inputs.indexOf(o);if(u===-1)throw new Error("The Node object doesn't have the output Value in it's 'inputs' property ");this._nodes[a].inputs[u]=t,this._allData[t].to.push(a)}}removeAllDropoutNodes(){let e=0;for(let n of this._nodes){if(n.opType==="Dropout"){if(n.inputs.length!==1)throw new Error("Dropout nodes should only contain one input. ");if(n.outputs.length!==1&&n.outputs.length!==2)throw new Error("Dropout nodes should contain either 1 or 2 output(s)");if(n.outputs.length===2&&this._allData[n.outputs[1]]._to.length!==0)throw new Error("Dropout nodes's second output should not be referenced by other nodes");this.deleteNode(e)}e++}}removeAllIdentityNodes(){let e=0;for(let n of this._nodes)n.opType==="Identity"&&this.deleteNode(e),e++}isActivation(e){switch(e.opType){case"Relu":case"Sigmoid":case"Clip":return!0;default:return!1}}fuseConvActivationNodes(){for(let e of this._nodes)if(e.opType==="Conv"){let n=this._allData[e.outputs[0]]._to;if(n.length===1&&this.isActivation(this._nodes[n[0]])){let t=this._nodes[n[0]];if(t.opType==="Clip")if(t.inputs.length===1)try{e.attributes.set("activation_params","floats",[t.attributes.getFloat("min"),t.attributes.getFloat("max")])}catch{e.attributes.set("activation_params","floats",[hn,mn])}else if(t.inputs.length>=3&&this._allData[t.inputs[1]].tensor!==void 0&&this._allData[t.inputs[2]].tensor!==void 0)e.attributes.set("activation_params","floats",[this._allData[t.inputs[1]].tensor.floatData[0],this._allData[t.inputs[2]].tensor.floatData[0]]);else continue;e.attributes.set("activation","string",t.opType),this.deleteNode(n[0])}}}}});var Eh,gx,ga,Ch=D(()=>{"use strict";Li();Oh();$o();Eh=zn(Un());We();gx=ce.experimental.fbs,ga=class{constructor(){}load(e,n,t){if(!t)try{this.loadFromOnnxFormat(e,n);return}catch(o){if(t!==void 0)throw o}this.loadFromOrtFormat(e,n)}loadFromOnnxFormat(e,n){let t=Eh.onnx.ModelProto.decode(e);if(Wt.longToNumber(t.irVersion)<3)throw new Error("only support ONNX model with IR_VERSION>=3");this._opsets=t.opsetImport.map(i=>({domain:i.domain,version:Wt.longToNumber(i.version)})),this._graph=su.from(t.graph,n)}loadFromOrtFormat(e,n){let t=new k.ByteBuffer(e),o=gx.InferenceSession.getRootAsInferenceSession(t).model();if(Wt.longToNumber(o.irVersion())<3)throw new Error("only support ONNX model with IR_VERSION>=3");this._opsets=[];for(let s=0;s<o.opsetImportLength();s++){let a=o.opsetImport(s);this._opsets.push({domain:a?.domain(),version:Wt.longToNumber(a.version())})}this._graph=su.from(o.graph(),n)}get graph(){return this._graph}get opsets(){return this._opsets}}});var ba,Ph=D(()=>{"use strict";Sh();Ih();Zt();Ch();ba=class{constructor(e={}){this._initialized=!1,this.backendHint=e.backendHint,this.profiler=Ri.create(e.profiler),this.context={profiler:this.profiler,graphInputTypes:[],graphInputDims:[]}}get inputNames(){return this._model.graph.getInputNames()}get outputNames(){return this._model.graph.getOutputNames()}startProfiling(){this.profiler.start()}endProfiling(){this.profiler.stop()}async loadModel(e,n,t){await this.profiler.event("session","Session.loadModel",async()=>{let o=await nu(this.backendHint);if(this.sessionHandler=o.createSessionHandler(this.context),this._model=new ga,typeof e=="string"){let i=e.endsWith(".ort");if(typeof process<"u"&&process.versions&&process.versions.node){let s=await(void 0)(e);this.initialize(s,i)}else{let a=await(await fetch(e)).arrayBuffer();this.initialize(new Uint8Array(a),i)}}else if(ArrayBuffer.isView(e))this.initialize(e);else{let i=new Uint8Array(e,n||0,t||e.byteLength);this.initialize(i)}})}initialize(e,n){if(this._initialized)throw new Error("already initialized");this.profiler.event("session","Session.initialize",()=>{let t=this.sessionHandler.transformGraph?this.sessionHandler:void 0;this._model.load(e,t,n),this.sessionHandler.onGraphInitialized&&this.sessionHandler.onGraphInitialized(this._model.graph),this.initializeOps(this._model.graph),this._executionPlan=new pa(this._model.graph,this._ops,this.profiler)}),this._initialized=!0}async run(e){if(!this._initialized)throw new Error("session not initialized yet");return this.profiler.event("session","Session.run",async()=>{let n=this.normalizeAndValidateInputs(e),t=await this._executionPlan.execute(this.sessionHandler,n);return this.createOutput(t)})}normalizeAndValidateInputs(e){let n=this._model.graph.getInputNames();if(Array.isArray(e)){if(e.length!==n.length)throw new Error(`incorrect input array length: expected ${n.length} but got ${e.length}`)}else{if(e.size!==n.length)throw new Error(`incorrect input map size: expected ${n.length} but got ${e.size}`);let t=new Array(e.size),o=0;for(let i=0;i<n.length;++i){let s=e.get(n[i]);if(!s)throw new Error(`missing input tensor for: '${name}'`);t[o++]=s}e=t}if(!this.context.graphInputTypes||this.context.graphInputTypes.length===0||!this.context.graphInputDims||this.context.graphInputDims.length===0){let t=this._model.graph.getInputIndices(),o=this._model.graph.getValues(),i=new Array(t.length);for(let s=0;s<t.length;++s){let a=o[t[s]];i[s]=a.type.shape.dims,this.context.graphInputTypes.push(a.type.tensorType),this.context.graphInputDims.push(e[s].dims)}this.validateInputTensorDims(i,e,!0)}else this.validateInputTensorDims(this.context.graphInputDims,e,!1);return this.validateInputTensorTypes(this.context.graphInputTypes,e),e}validateInputTensorTypes(e,n){for(let t=0;t<n.length;t++){let o=e[t],i=n[t].type;if(o!==i)throw new Error(`input tensor[${t}] check failed: expected type '${o}' but got ${i}`)}}validateInputTensorDims(e,n,t){for(let o=0;o<n.length;o++){let i=e[o],s=n[o].dims;if(!this.compareTensorDims(i,s,t))throw new Error(`input tensor[${o}] check failed: expected shape '[${i.join(",")}]' but got [${s.join(",")}]`)}}compareTensorDims(e,n,t){if(e.length!==n.length)return!1;for(let o=0;o<e.length;++o)if(e[o]!==n[o]&&(!t||e[o]!==0))return!1;return!0}createOutput(e){let n=this._model.graph.getOutputNames();if(e.length!==n.length)throw new Error("expected number of outputs do not match number of generated outputs");let t=new Map;for(let o=0;o<n.length;++o)t.set(n[o],e[o]);return t}initializeOps(e){let n=e.getNodes();this._ops=new Array(n.length);for(let t=0;t<n.length;t++)this._ops[t]=this.sessionHandler.resolve(n[t],this._model.opsets,e)}}});var ya,kh=D(()=>{"use strict";Pt();gn();ya=class{constructor(e){this.session=e;this.inputNames=this.session.inputNames,this.outputNames=this.session.outputNames}async dispose(){}async run(e,n,t){let o=new Map;for(let a in e)if(Object.hasOwnProperty.call(e,a)){let u=e[a];o.set(a,new bt(u.dims,u.type,void 0,void 0,u.data))}let i=await this.session.run(o),s={};return i.forEach((a,u)=>{s[u]=new wt(a.type,a.data,a.dims)}),s}startProfiling(){this.session.startProfiling()}endProfiling(){this.session.endProfiling()}}});var Dh={};Hr(Dh,{onnxjsBackend:()=>yx});var uu,yx,Rh=D(()=>{"use strict";Ph();kh();uu=class{async init(){}async createInferenceSessionHandler(e,n){let t=new ba(n);return typeof e=="string"?await t.loadModel(e):await t.loadModel(e),new ya(t)}},yx=new uu});var lu={};Hr(lu,{createReadStream:()=>Bh,readFile:()=>vx,readFileSync:()=>wx});var vx,wx,Bh,du=D(()=>{vx=void 0,wx=void 0,Bh=void 0});var cu={};Hr(cu,{join:()=>xx});var xx,fu=D(()=>{xx=void 0});var zh=Xe((Mh,pu)=>{"use strict";var Lh=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(e={}){var n=e,t,o;n.ready=new Promise((c,m)=>{t=c,o=m}),n.mountExternalData=(c,m)=>{(n.gb||(n.gb=new Map)).set(c,m)},n.unmountExternalData=()=>{delete n.gb},n.jsepInit=(c,m,v,_,P,F,j,ee)=>{n.Fb=c,n.vb=m,n.xb=v,n.ob=_,n.wb=P,n.Ra=F,n.yb=j,n.zb=ee,m=(te,Q,se)=>(...$e)=>{let ke=jt,B=Q?.();$e=te(...$e);let he=Q?.();return B!==he&&(te=he,se(B),Q=se=null),jt!=ke?ci():$e},v=te=>async(...Q)=>{try{if(n.fb)throw Error("Session already started");let se=n.fb={Ab:Q[0],errors:[]},$e=await te(...Q);if(n.fb!==se)throw Error("Session mismatch");c.flush();let ke=se.errors;if(0<ke.length){let B=await Promise.all(ke);if(B=B.filter(he=>he),0<B.length)throw Error(B.join(`
`))}return $e}finally{n.fb=null}},n._OrtRun=v(m(n._OrtRun,()=>n._OrtRun,te=>n._OrtRun=te)),n._OrtRunWithBinding=v(m(n._OrtRunWithBinding,()=>n._OrtRunWithBinding,te=>n._OrtRunWithBinding=te)),n._OrtBindInput=m(n._OrtBindInput,()=>n._OrtBindInput,te=>n._OrtBindInput=te),n.jsepRegisterBuffer=(te,Q,se,$e)=>c.registerBuffer(te,Q,se,$e),n.jsepUnregisterBuffers=te=>{c.unregisterBuffers(te)},n.jsepGetBuffer=te=>c.getBuffer(te),n.jsepCreateDownloader=(te,Q,se)=>c.createDownloader(te,Q,se)};var i=Object.assign({},n),s="./this.program",a=(c,m)=>{throw m},u=typeof window=="object",l=typeof importScripts=="function",d=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",p="",h,g,y;if(d){var w=(du(),Rr(lu)),I=(fu(),Rr(cu));p=l?I.dirname(p)+"/":__dirname+"/",h=(c,m)=>(c=de(c)?new URL(c):I.normalize(c),w.readFileSync(c,m?void 0:"utf8")),y=c=>(c=h(c,!0),c.buffer||(c=new Uint8Array(c)),c),g=(c,m,v,_=!0)=>{c=de(c)?new URL(c):I.normalize(c),w.readFile(c,_?void 0:"utf8",(P,F)=>{P?v(P):m(_?F.buffer:F)})},!n.thisProgram&&1<process.argv.length&&(s=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),a=(c,m)=>{throw process.exitCode=c,m},n.inspect=()=>"[Emscripten Module object]"}else(u||l)&&(l?p=self.location.href:typeof document<"u"&&document.currentScript&&(p=document.currentScript.src),r&&(p=r),p.indexOf("blob:")!==0?p=p.substr(0,p.replace(/[?#].*/,"").lastIndexOf("/")+1):p="",h=c=>{var m=new XMLHttpRequest;return m.open("GET",c,!1),m.send(null),m.responseText},l&&(y=c=>{var m=new XMLHttpRequest;return m.open("GET",c,!1),m.responseType="arraybuffer",m.send(null),new Uint8Array(m.response)}),g=(c,m,v)=>{var _=new XMLHttpRequest;_.open("GET",c,!0),_.responseType="arraybuffer",_.onload=()=>{_.status==200||_.status==0&&_.response?m(_.response):v()},_.onerror=v,_.send(null)});var T=console.log.bind(console),$=console.error.bind(console);Object.assign(n,i),i=null,typeof WebAssembly!="object"&&st("no native wasm support detected");var O,C=!1,M,R,G,q,X,z,V,ie,ue,le,Ye;function it(){var c=O.buffer;n.HEAP8=R=new Int8Array(c),n.HEAP16=q=new Int16Array(c),n.HEAPU8=G=new Uint8Array(c),n.HEAPU16=X=new Uint16Array(c),n.HEAP32=z=new Int32Array(c),n.HEAPU32=V=new Uint32Array(c),n.HEAPF32=ie=new Float32Array(c),n.HEAPF64=Ye=new Float64Array(c),n.HEAP64=ue=new BigInt64Array(c),n.HEAPU64=le=new BigUint64Array(c)}var Se=[],je=[],Oe=[],Ee=0,gt=null,at=null;function st(c){throw c="Aborted("+c+")",$(c),C=!0,M=1,c=new WebAssembly.RuntimeError(c+". Build with -sASSERTIONS for more info."),o(c),c}var Z=c=>c.startsWith("data:application/octet-stream;base64,"),de=c=>c.startsWith("file://"),Ce;if(Ce="ort-wasm-simd.wasm",!Z(Ce)){var zt=Ce;Ce=n.locateFile?n.locateFile(zt,p):p+zt}function Tt(c){if(y)return y(c);throw"both async and sync fetching of the wasm failed"}function ct(c){if(u||l){if(typeof fetch=="function"&&!de(c))return fetch(c,{credentials:"same-origin"}).then(m=>{if(!m.ok)throw"failed to load wasm binary file at '"+c+"'";return m.arrayBuffer()}).catch(()=>Tt(c));if(g)return new Promise((m,v)=>{g(c,_=>m(new Uint8Array(_)),v)})}return Promise.resolve().then(()=>Tt(c))}function lt(c,m,v){return ct(c).then(_=>WebAssembly.instantiate(_,m)).then(_=>_).then(v,_=>{$(`failed to asynchronously prepare wasm: ${_}`),st(_)})}function Nr(c,m){var v=Ce;return typeof WebAssembly.instantiateStreaming!="function"||Z(v)||de(v)||d||typeof fetch!="function"?lt(v,c,m):fetch(v,{credentials:"same-origin"}).then(_=>WebAssembly.instantiateStreaming(_,c).then(m,function(P){return $(`wasm streaming compile failed: ${P}`),$("falling back to ArrayBuffer instantiation"),lt(v,c,m)}))}var ar={944256:(c,m,v,_)=>{if(typeof n>"u"||!n.gb)return 1;if(c=$t(c>>>0),c.startsWith("./")&&(c=c.substring(2)),c=n.gb.get(c),!c)return 2;if(m>>>=0,v>>>=0,m+v>c.byteLength)return 3;try{return G.set(c.subarray(m,m+v),_>>>0>>>0),0}catch{return 4}},944757:c=>n.vb(c),944790:c=>n.xb(c),944822:(c,m,v)=>{n.ob(c,m,v,!0)},944861:(c,m,v)=>{n.ob(c,m,v)},944894:c=>{n.Ra("Abs",c,void 0)},944945:c=>{n.Ra("Neg",c,void 0)},944996:c=>{n.Ra("Floor",c,void 0)},945049:c=>{n.Ra("Ceil",c,void 0)},945101:c=>{n.Ra("Reciprocal",c,void 0)},945159:c=>{n.Ra("Sqrt",c,void 0)},945211:c=>{n.Ra("Exp",c,void 0)},945262:c=>{n.Ra("Erf",c,void 0)},945313:c=>{n.Ra("Sigmoid",c,void 0)},945368:c=>{n.Ra("Log",c,void 0)},945419:c=>{n.Ra("Sin",c,void 0)},945470:c=>{n.Ra("Cos",c,void 0)},945521:c=>{n.Ra("Tan",c,void 0)},945572:c=>{n.Ra("Asin",c,void 0)},945624:c=>{n.Ra("Acos",c,void 0)},945676:c=>{n.Ra("Atan",c,void 0)},945728:c=>{n.Ra("Sinh",c,void 0)},945780:c=>{n.Ra("Cosh",c,void 0)},945832:c=>{n.Ra("Asinh",c,void 0)},945885:c=>{n.Ra("Acosh",c,void 0)},945938:c=>{n.Ra("Atanh",c,void 0)},945991:c=>{n.Ra("Tanh",c,void 0)},946043:c=>{n.Ra("Not",c,void 0)},946094:(c,m,v)=>{n.Ra("Clip",c,{min:m,max:v})},946163:c=>{n.Ra("Clip",c,void 0)},946215:(c,m)=>{n.Ra("Elu",c,{alpha:m})},946273:c=>{n.Ra("Relu",c,void 0)},946325:(c,m)=>{n.Ra("LeakyRelu",c,{alpha:m})},946389:(c,m)=>{n.Ra("ThresholdedRelu",c,{alpha:m})},946459:(c,m)=>{n.Ra("Cast",c,{to:m})},946517:c=>{n.Ra("Add",c,void 0)},946568:c=>{n.Ra("Sub",c,void 0)},946619:c=>{n.Ra("Mul",c,void 0)},946670:c=>{n.Ra("Div",c,void 0)},946721:c=>{n.Ra("Pow",c,void 0)},946772:c=>{n.Ra("Equal",c,void 0)},946825:c=>{n.Ra("Greater",c,void 0)},946880:c=>{n.Ra("GreaterOrEqual",c,void 0)},946942:c=>{n.Ra("Less",c,void 0)},946994:c=>{n.Ra("LessOrEqual",c,void 0)},947053:(c,m,v,_,P)=>{n.Ra("ReduceMean",c,{keepDims:!!m,noopWithEmptyAxes:!!v,axes:_?Array.from(z.subarray(_>>>0,P>>>0)):[]})},947212:(c,m,v,_,P)=>{n.Ra("ReduceMax",c,{keepDims:!!m,noopWithEmptyAxes:!!v,axes:_?Array.from(z.subarray(_>>>0,P>>>0)):[]})},947370:(c,m,v,_,P)=>{n.Ra("ReduceMin",c,{keepDims:!!m,noopWithEmptyAxes:!!v,axes:_?Array.from(z.subarray(_>>>0,P>>>0)):[]})},947528:(c,m,v,_,P)=>{n.Ra("ReduceProd",c,{keepDims:!!m,noopWithEmptyAxes:!!v,axes:_?Array.from(z.subarray(_>>>0,P>>>0)):[]})},947687:(c,m,v,_,P)=>{n.Ra("ReduceSum",c,{keepDims:!!m,noopWithEmptyAxes:!!v,axes:_?Array.from(z.subarray(_>>>0,P>>>0)):[]})},947845:(c,m,v,_,P)=>{n.Ra("ReduceL1",c,{keepDims:!!m,noopWithEmptyAxes:!!v,axes:_?Array.from(z.subarray(_>>>0,P>>>0)):[]})},948002:(c,m,v,_,P)=>{n.Ra("ReduceL2",c,{keepDims:!!m,noopWithEmptyAxes:!!v,axes:_?Array.from(z.subarray(_>>>0,P>>>0)):[]})},948159:(c,m,v,_,P)=>{n.Ra("ReduceLogSum",c,{keepDims:!!m,noopWithEmptyAxes:!!v,axes:_?Array.from(z.subarray(_>>>0,P>>>0)):[]})},948320:(c,m,v,_,P)=>{n.Ra("ReduceSumSquare",c,{keepDims:!!m,noopWithEmptyAxes:!!v,axes:_?Array.from(z.subarray(_>>>0,P>>>0)):[]})},948484:(c,m,v,_,P)=>{n.Ra("ReduceLogSumExp",c,{keepDims:!!m,noopWithEmptyAxes:!!v,axes:_?Array.from(z.subarray(_>>>0,P>>>0)):[]})},948648:c=>{n.Ra("Where",c,void 0)},948701:(c,m,v)=>{n.Ra("Transpose",c,{perm:m?Array.from(z.subarray(m>>>0,v>>>0)):[]})},948809:(c,m,v,_,P,F,j,ee,te,Q,se,$e,ke,B,he)=>{n.Ra("ConvTranspose",c,{format:te?"NHWC":"NCHW",autoPad:m,dilations:[v],group:_,kernel_shape:[P],pads:[F,j],strides:[ee],wIsConst:()=>!!R[Q>>>0],outputPadding:se?Array.from(z.subarray(se>>>0,$e>>>0)):[],outputShape:ke?Array.from(z.subarray(ke>>>0,B>>>0)):[],activation:$t(he)})},949211:(c,m,v,_,P,F,j,ee,te,Q,se,$e,ke,B)=>{n.Ra("ConvTranspose",c,{format:ee?"NHWC":"NCHW",autoPad:m,dilations:Array.from(z.subarray(v>>>0,(v>>>0)+2>>>0)),group:_,kernelShape:Array.from(z.subarray(P>>>0,(P>>>0)+2>>>0)),pads:Array.from(z.subarray(F>>>0,(F>>>0)+4>>>0)),strides:Array.from(z.subarray(j>>>0,(j>>>0)+2>>>0)),wIsConst:()=>!!R[te>>>0],outputPadding:Q?Array.from(z.subarray(Q>>>0,se>>>0)):[],outputShape:$e?Array.from(z.subarray($e>>>0,ke>>>0)):[],activation:$t(B)})},949776:(c,m,v,_,P,F,j,ee,te,Q,se,$e,ke,B,he)=>{n.Ra("ConvTranspose",c,{format:te?"NHWC":"NCHW",autoPad:m,dilations:[v],group:_,kernel_shape:[P],pads:[F,j],strides:[ee],wIsConst:()=>!!R[Q>>>0],outputPadding:se?Array.from(z.subarray(se>>>0,$e>>>0)):[],outputShape:ke?Array.from(z.subarray(ke>>>0,B>>>0)):[],activation:$t(he)})},950178:(c,m,v,_,P,F,j,ee,te,Q,se,$e,ke,B)=>{n.Ra("ConvTranspose",c,{format:ee?"NHWC":"NCHW",autoPad:m,dilations:Array.from(z.subarray(v>>>0,(v>>>0)+2>>>0)),group:_,kernelShape:Array.from(z.subarray(P>>>0,(P>>>0)+2>>>0)),pads:Array.from(z.subarray(F>>>0,(F>>>0)+4>>>0)),strides:Array.from(z.subarray(j>>>0,(j>>>0)+2>>>0)),wIsConst:()=>!!R[te>>>0],outputPadding:Q?Array.from(z.subarray(Q>>>0,se>>>0)):[],outputShape:$e?Array.from(z.subarray($e>>>0,ke>>>0)):[],activation:$t(B)})},950743:(c,m)=>{n.Ra("GlobalAveragePool",c,{format:m?"NHWC":"NCHW"})},950834:(c,m,v,_,P,F,j,ee,te,Q,se,$e,ke,B,he,De)=>{n.Ra("AveragePool",c,{format:De?"NHWC":"NCHW",auto_pad:m,ceil_mode:v,count_include_pad:_,storage_order:P,dilations:[F,j],kernel_shape:[ee,te],pads:[Q,se,$e,ke],strides:[B,he]})},951118:(c,m)=>{n.Ra("GlobalAveragePool",c,{format:m?"NHWC":"NCHW"})},951209:(c,m,v,_,P,F,j,ee,te,Q,se,$e,ke,B,he,De)=>{n.Ra("AveragePool",c,{format:De?"NHWC":"NCHW",auto_pad:m,ceil_mode:v,count_include_pad:_,storage_order:P,dilations:[F,j],kernel_shape:[ee,te],pads:[Q,se,$e,ke],strides:[B,he]})},951493:(c,m)=>{n.Ra("GlobalMaxPool",c,{format:m?"NHWC":"NCHW"})},951580:(c,m,v,_,P,F,j,ee,te,Q,se,$e,ke,B,he,De)=>{n.Ra("MaxPool",c,{format:De?"NHWC":"NCHW",auto_pad:m,ceil_mode:v,count_include_pad:_,storage_order:P,dilations:[F,j],kernel_shape:[ee,te],pads:[Q,se,$e,ke],strides:[B,he]})},951860:(c,m)=>{n.Ra("GlobalMaxPool",c,{format:m?"NHWC":"NCHW"})},951947:(c,m,v,_,P,F,j,ee,te,Q,se,$e,ke,B,he,De)=>{n.Ra("MaxPool",c,{format:De?"NHWC":"NCHW",auto_pad:m,ceil_mode:v,count_include_pad:_,storage_order:P,dilations:[F,j],kernel_shape:[ee,te],pads:[Q,se,$e,ke],strides:[B,he]})},952227:(c,m,v,_,P)=>{n.Ra("Gemm",c,{alpha:m,beta:v,transA:_,transB:P})},952331:c=>{n.Ra("MatMul",c,void 0)},952385:(c,m,v,_)=>{n.Ra("ArgMax",c,{keepDims:!!m,selectLastIndex:!!v,axis:_})},952493:(c,m,v,_)=>{n.Ra("ArgMin",c,{keepDims:!!m,selectLastIndex:!!v,axis:_})},952601:(c,m)=>{n.Ra("Softmax",c,{axis:m})},952664:(c,m)=>{n.Ra("Concat",c,{axis:m})},952724:(c,m,v,_,P)=>{n.Ra("Split",c,{axis:m,numOutputs:v,splitSizes:_?Array.from(z.subarray(_>>>0,P>>>0)):[]})},952864:c=>{n.Ra("Expand",c,void 0)},952918:(c,m)=>{n.Ra("Gather",c,{axis:Number(m)})},952989:(c,m)=>{n.Ra("GatherElements",c,{axis:Number(m)})},953068:(c,m,v,_,P,F,j,ee,te,Q,se)=>{n.Ra("Resize",c,{antialias:m,axes:v?Array.from(z.subarray(v>>>0,_>>>0)):[],coordinateTransformMode:$t(P),cubicCoeffA:F,excludeOutside:j,extrapolationValue:ee,keepAspectRatioPolicy:$t(te),mode:$t(Q),nearestMode:$t(se)})},953414:(c,m,v,_,P,F,j)=>{n.Ra("Slice",c,{starts:m?Array.from(z.subarray(m>>>0,v>>>0)):[],ends:_?Array.from(z.subarray(_>>>0,P>>>0)):[],axes:F?Array.from(z.subarray(F>>>0,j>>>0)):[]})},953630:c=>{n.Ra("Tile",c,void 0)},953682:(c,m,v)=>{n.Ra("LayerNormalization",c,{axis:Number(m),epsilon:Number(v)})},953789:(c,m,v)=>{n.Ra("InstanceNormalization",c,{epsilon:m,format:v?"NHWC":"NCHW"})},953903:(c,m,v)=>{n.Ra("InstanceNormalization",c,{epsilon:m,format:v?"NHWC":"NCHW"})},954017:c=>{n.Ra("Range",c,void 0)},954070:(c,m)=>{n.Ra("Einsum",c,{equation:$t(m)})},954151:(c,m,v,_,P)=>{n.Ra("Pad",c,{mode:m,value:v,pads:_?Array.from(z.subarray(_>>>0,P>>>0)):[]})},954278:(c,m,v,_,P,F)=>{n.Ra("BatchNormalization",c,{epsilon:m,momentum:v,spatial:!!P,trainingMode:!!_,format:F?"NHWC":"NCHW"})},954447:(c,m,v,_,P,F)=>{n.Ra("BatchNormalization",c,{epsilon:m,momentum:v,spatial:!!P,trainingMode:!!_,format:F?"NHWC":"NCHW"})},954616:(c,m,v)=>{n.Ra("CumSum",c,{exclusive:Number(m),reverse:Number(v)})},954713:(c,m,v,_,P,F,j,ee,te)=>{n.Ra("Attention",c,{numHeads:m,isUnidirectional:v,maskFilterValue:_,scale:P,doRotary:F,qkvHiddenSizes:j?Array.from(z.subarray(Number(ee)>>>0,Number(ee)+j>>>0)):[],pastPresentShareBuffer:!!te})},954985:c=>{n.Ra("Gelu",c,void 0)},955037:(c,m,v,_,P,F)=>{n.Ra("MultiHeadAttention",c,{numHeads:m,isUnidirectional:v,maskFilterValue:_,scale:P,doRotary:F})},955196:c=>{n.Ra("BiasAdd",c,void 0)},955251:c=>{n.Ra("BiasSplitGelu",c,void 0)},955312:(c,m)=>{n.Ra("SkipLayerNormalization",c,{epsilon:m})},955393:(c,m,v,_,P,F,j,ee,te,Q,se,$e,ke)=>{n.Ra("Conv",c,{format:te?"NHWC":"NCHW",auto_pad:m,dilations:[v],group:_,kernel_shape:[P],pads:F?Array.from(z.subarray(F>>>0,j>>>0)):[],strides:[ee],w_is_const:()=>!!R[Q>>>0],activation:$t(se),activation_params:$e?Array.from(ie.subarray($e>>>0,ke>>>0)):[]})},955763:(c,m,v,_,P,F,j,ee,te,Q,se,$e,ke,B,he,De)=>{n.Ra("Conv",c,{format:$e?"NHWC":"NCHW",auto_pad:m,dilations:[v,_],group:P,kernel_shape:[F,j],pads:ee?Array.from(z.subarray(ee>>>0,te>>>0)):[],strides:[Q,se],w_is_const:()=>!!R[ke>>>0],activation:$t(B),activation_params:he?Array.from(ie.subarray(he>>>0,De>>>0)):[]})},956154:c=>{n.yb(c)},956188:(c,m)=>n.zb(c,m,n.fb.Ab,n.fb.errors)};function Fr(c){this.name="ExitStatus",this.message=`Program terminated with exit(${c})`,this.status=c}function $n(c){this.cb=c-24,this.rb=function(m){V[this.cb+4>>>2>>>0]=m},this.qb=function(m){V[this.cb+8>>>2>>>0]=m},this.kb=function(m,v){this.jb(),this.rb(m),this.qb(v)},this.jb=function(){V[this.cb+16>>>2>>>0]=0}}var Vr=0,jo=0,Ko=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,ro=(c,m,v)=>{m>>>=0;var _=m+v;for(v=m;c[v]&&!(v>=_);)++v;if(16<v-m&&c.buffer&&Ko)return Ko.decode(c.subarray(m,v));for(_="";m<v;){var P=c[m++];if(P&128){var F=c[m++]&63;if((P&224)==192)_+=String.fromCharCode((P&31)<<6|F);else{var j=c[m++]&63;P=(P&240)==224?(P&15)<<12|F<<6|j:(P&7)<<18|F<<12|j<<6|c[m++]&63,65536>P?_+=String.fromCharCode(P):(P-=65536,_+=String.fromCharCode(55296|P>>10,56320|P&1023))}}else _+=String.fromCharCode(P)}return _},$t=(c,m)=>(c>>>=0)?ro(G,c,m):"",sr=c=>{for(var m=0,v=0;v<c.length;++v){var _=c.charCodeAt(v);127>=_?m++:2047>=_?m+=2:55296<=_&&57343>=_?(m+=4,++v):m+=3}return m},Ur=(c,m,v,_)=>{if(v>>>=0,!(0<_))return 0;var P=v;_=v+_-1;for(var F=0;F<c.length;++F){var j=c.charCodeAt(F);if(55296<=j&&57343>=j){var ee=c.charCodeAt(++F);j=65536+((j&1023)<<10)|ee&1023}if(127>=j){if(v>=_)break;m[v++>>>0]=j}else{if(2047>=j){if(v+1>=_)break;m[v++>>>0]=192|j>>6}else{if(65535>=j){if(v+2>=_)break;m[v++>>>0]=224|j>>12}else{if(v+3>=_)break;m[v++>>>0]=240|j>>18,m[v++>>>0]=128|j>>12&63}m[v++>>>0]=128|j>>6&63}m[v++>>>0]=128|j&63}}return m[v>>>0]=0,v-P},_n=c=>{if(c===null)return"null";var m=typeof c;return m==="object"||m==="array"||m==="function"?c.toString():""+c},Sn,Nt=c=>{for(var m="";G[c>>>0];)m+=Sn[G[c++>>>0]];return m},ur={},In={},Yo={},rt;function Ya(c,m,v={}){var _=m.name;if(!c)throw new rt(`type "${_}" must have a positive integer typeid pointer`);if(In.hasOwnProperty(c)){if(v.tb)return;throw new rt(`Cannot register type '${_}' twice`)}In[c]=m,delete Yo[c],ur.hasOwnProperty(c)&&(m=ur[c],delete ur[c],m.forEach(P=>P()))}function ze(c,m,v={}){if(!("argPackAdvance"in m))throw new TypeError("registerType registeredInstance requires argPackAdvance");Ya(c,m,v)}var no=(c,m,v)=>{switch(m){case 1:return v?_=>R[_>>>0>>>0]:_=>G[_>>>0>>>0];case 2:return v?_=>q[_>>>1>>>0]:_=>X[_>>>1>>>0];case 4:return v?_=>z[_>>>2>>>0]:_=>V[_>>>2>>>0];case 8:return v?_=>ue[_>>>3]:_=>le[_>>>3];default:throw new TypeError(`invalid integer width (${m}): ${c}`)}};function An(){this.$a=[void 0],this.nb=[]}var Ot=new An;function oo(c){c>>>=0,c>=Ot.cb&&--Ot.get(c).pb===0&&Ot.jb(c)}var Et=c=>{if(!c)throw new rt("Cannot use deleted val. handle = "+c);return Ot.get(c).value},Yt=c=>{switch(c){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return Ot.kb({pb:1,value:c})}};function we(c){return this.fromWireType(z[c>>>2>>>0])}var On=(c,m)=>{switch(m){case 4:return function(v){return this.fromWireType(ie[v>>>2>>>0])};case 8:return function(v){return this.fromWireType(Ye[v>>>3>>>0])};default:throw new TypeError(`invalid float width (${m}): ${c}`)}};function Xo(c){return this.fromWireType(V[c>>>2>>>0])}var Zo=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Jo=(c,m)=>{for(var v=c>>1,_=v+m/2;!(v>=_)&&X[v>>>0];)++v;if(v<<=1,32<v-c&&Zo)return Zo.decode(G.subarray(c>>>0,v>>>0));for(v="",_=0;!(_>=m/2);++_){var P=q[c+2*_>>>1>>>0];if(P==0)break;v+=String.fromCharCode(P)}return v},Xa=(c,m,v)=>{if(v??=2147483647,2>v)return 0;v-=2;var _=m;v=v<2*c.length?v/2:c.length;for(var P=0;P<v;++P)q[m>>>1>>>0]=c.charCodeAt(P),m+=2;return q[m>>>1>>>0]=0,m-_},Qo=c=>2*c.length,ei=(c,m)=>{for(var v=0,_="";!(v>=m/4);){var P=z[c+4*v>>>2>>>0];if(P==0)break;++v,65536<=P?(P-=65536,_+=String.fromCharCode(55296|P>>10,56320|P&1023)):_+=String.fromCharCode(P)}return _},ti=(c,m,v)=>{if(m>>>=0,v??=2147483647,4>v)return 0;var _=m;v=_+v-4;for(var P=0;P<c.length;++P){var F=c.charCodeAt(P);if(55296<=F&&57343>=F){var j=c.charCodeAt(++P);F=65536+((F&1023)<<10)|j&1023}if(z[m>>>2>>>0]=F,m+=4,m+4>v)break}return z[m>>>2>>>0]=0,m-_},ri=c=>{for(var m=0,v=0;v<c.length;++v){var _=c.charCodeAt(v);55296<=_&&57343>=_&&++v,m+=4}return m},en=(c,m)=>{var v=In[c];if(v===void 0)throw c=on(c),v=Nt(c),Kt(c),new rt(m+" has unknown type "+v);return v},io=(c,m,v)=>{var _=[];return c=c.toWireType(_,v),_.length&&(V[m>>>2>>>0]=Yt(_)),c},tn=[],ni={},En=c=>{var m=ni[c];return m===void 0?Nt(c):m},ao=()=>typeof globalThis=="object"?globalThis:Function("return this")(),oi=c=>{var m=tn.length;return tn.push(c),m},ii=(c,m)=>{for(var v=Array(c),_=0;_<c;++_)v[_]=en(V[m+4*_>>>2>>>0],"parameter "+_);return v},so=(c,m)=>Object.defineProperty(m,"name",{value:c});function ai(c){var m=Function;if(!(m instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof m} which is not a function`);var v=so(m.name||"unknownFunctionName",function(){});return v.prototype=m.prototype,v=new v,c=m.apply(v,c),c instanceof Object?c:v}var Dr=c=>c%4===0&&(c%100!==0||c%400===0),uo=[0,31,60,91,121,152,182,213,244,274,305,335],lo=[0,31,59,90,120,151,181,212,243,273,304,334],co=c=>{var m=sr(c)+1,v=Ct(m);return v&&Ur(c,G,v,m),v},Cn=[],Pn=(c,m)=>{Cn.length=0;for(var v;v=G[c++>>>0];){var _=v!=105;_&=v!=112,m+=_&&m%8?4:0,Cn.push(v==112?V[m>>>2>>>0]:v==106?ue[m>>>3]:v==105?z[m>>>2>>>0]:Ye[m>>>3>>>0]),m+=_?8:4}return Cn},Gr={},kn=()=>{if(!yr){var c={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:s||"./this.program"},m;for(m in Gr)Gr[m]===void 0?delete c[m]:c[m]=Gr[m];var v=[];for(m in c)v.push(`${m}=${c[m]}`);yr=v}return yr},yr,si=[null,[],[]],fo=[31,29,31,30,31,30,31,31,30,31,30,31],po=[31,28,31,30,31,30,31,31,30,31,30,31];function ui(c){var m=Array(sr(c)+1);return Ur(c,m,0,m.length),m}function ho(c,m,v,_){function P(B,he,De){for(B=typeof B=="number"?B.toString():B||"";B.length<he;)B=De[0]+B;return B}function F(B,he){return P(B,he,"0")}function j(B,he){function De(vo){return 0>vo?-1:0<vo?1:0}var dr;return(dr=De(B.getFullYear()-he.getFullYear()))===0&&(dr=De(B.getMonth()-he.getMonth()))===0&&(dr=De(B.getDate()-he.getDate())),dr}function ee(B){switch(B.getDay()){case 0:return new Date(B.getFullYear()-1,11,29);case 1:return B;case 2:return new Date(B.getFullYear(),0,3);case 3:return new Date(B.getFullYear(),0,2);case 4:return new Date(B.getFullYear(),0,1);case 5:return new Date(B.getFullYear()-1,11,31);case 6:return new Date(B.getFullYear()-1,11,30)}}function te(B){var he=B.ab;for(B=new Date(new Date(B.bb+1900,0,1).getTime());0<he;){var De=B.getMonth(),dr=(Dr(B.getFullYear())?fo:po)[De];if(he>dr-B.getDate())he-=dr-B.getDate()+1,B.setDate(1),11>De?B.setMonth(De+1):(B.setMonth(0),B.setFullYear(B.getFullYear()+1));else{B.setDate(B.getDate()+he);break}}return De=new Date(B.getFullYear()+1,0,4),he=ee(new Date(B.getFullYear(),0,4)),De=ee(De),0>=j(he,B)?0>=j(De,B)?B.getFullYear()+1:B.getFullYear():B.getFullYear()-1}c>>>=0,m>>>=0,v>>>=0,_>>>=0;var Q=V[_+40>>>2>>>0];_={Db:z[_>>>2>>>0],Cb:z[_+4>>>2>>>0],hb:z[_+8>>>2>>>0],mb:z[_+12>>>2>>>0],ib:z[_+16>>>2>>>0],bb:z[_+20>>>2>>>0],Va:z[_+24>>>2>>>0],ab:z[_+28>>>2>>>0],Gb:z[_+32>>>2>>>0],Bb:z[_+36>>>2>>>0],Eb:Q?$t(Q):""},v=$t(v),Q={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var se in Q)v=v.replace(new RegExp(se,"g"),Q[se]);var $e="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),ke="January February March April May June July August September October November December".split(" ");Q={"%a":B=>$e[B.Va].substring(0,3),"%A":B=>$e[B.Va],"%b":B=>ke[B.ib].substring(0,3),"%B":B=>ke[B.ib],"%C":B=>F((B.bb+1900)/100|0,2),"%d":B=>F(B.mb,2),"%e":B=>P(B.mb,2," "),"%g":B=>te(B).toString().substring(2),"%G":B=>te(B),"%H":B=>F(B.hb,2),"%I":B=>(B=B.hb,B==0?B=12:12<B&&(B-=12),F(B,2)),"%j":B=>{for(var he=0,De=0;De<=B.ib-1;he+=(Dr(B.bb+1900)?fo:po)[De++]);return F(B.mb+he,3)},"%m":B=>F(B.ib+1,2),"%M":B=>F(B.Cb,2),"%n":()=>`
`,"%p":B=>0<=B.hb&&12>B.hb?"AM":"PM","%S":B=>F(B.Db,2),"%t":()=>"	","%u":B=>B.Va||7,"%U":B=>F(Math.floor((B.ab+7-B.Va)/7),2),"%V":B=>{var he=Math.floor((B.ab+7-(B.Va+6)%7)/7);if(2>=(B.Va+371-B.ab-2)%7&&he++,he)he==53&&(De=(B.Va+371-B.ab)%7,De==4||De==3&&Dr(B.bb)||(he=1));else{he=52;var De=(B.Va+7-B.ab-1)%7;(De==4||De==5&&Dr(B.bb%400-1))&&he++}return F(he,2)},"%w":B=>B.Va,"%W":B=>F(Math.floor((B.ab+7-(B.Va+6)%7)/7),2),"%y":B=>(B.bb+1900).toString().substring(2),"%Y":B=>B.bb+1900,"%z":B=>{B=B.Bb;var he=0<=B;return B=Math.abs(B)/60,(he?"+":"-")+("0000"+(B/60*100+B%60)).slice(-4)},"%Z":B=>B.Eb,"%%":()=>"%"},v=v.replace(/%%/g,"\0\0");for(se in Q)v.includes(se)&&(v=v.replace(new RegExp(se,"g"),Q[se](_)));return v=v.replace(/\0\0/g,"%"),se=ui(v),se.length>m?0:(R.set(se,c>>>0),se.length-1)}var Wr=c=>{try{c()}catch(m){st(m)}};function li(){var c=ve,m={};for(let[v,_]of Object.entries(c))m[v]=typeof _=="function"?function(){rn.push(v);try{return _.apply(null,arguments)}finally{C||(rn.pop(),jt&&Xt===1&&rn.length===0&&(Xt=0,Wr(gi),typeof Fibers<"u"&&Fibers.Hb()))}}:_;return m}var Xt=0,jt=null,Dn=0,rn=[],mo={},go={},di=0,Rn=null,Za=[];function ci(){return new Promise((c,m)=>{Rn={resolve:c,reject:m}})}function fi(){var c=Ct(65548),m=c+12;V[c>>>2>>>0]=m,V[c+4>>>2>>>0]=m+65536,m=rn[0];var v=mo[m];return v===void 0&&(v=di++,mo[m]=v,go[v]=m),z[c+8>>>2>>>0]=v,c}function pi(c){if(!C){if(Xt===0){var m=!1,v=!1;c((_=0)=>{if(!C&&(Dn=_,m=!0,v)){Xt=2,Wr(()=>bi(jt)),typeof Browser<"u"&&Browser.lb.sb&&Browser.lb.resume(),_=!1;try{var P=(0,ve[go[z[jt+8>>>2>>>0]]])()}catch(ee){P=ee,_=!0}var F=!1;if(!jt){var j=Rn;j&&(Rn=null,(_?j.reject:j.resolve)(P),F=!0)}if(_&&!F)throw P}}),v=!0,m||(Xt=1,jt=fi(),typeof Browser<"u"&&Browser.lb.sb&&Browser.lb.pause(),Wr(()=>Ln(jt)))}else Xt===2?(Xt=0,Wr(yi),Kt(jt),jt=null,Za.forEach(_=>{if(!C)try{_();try{M=M=_=M,n.onExit?.(_),C=!0,a(_,new Fr(_))}catch(P){P instanceof Fr||P=="unwind"||a(1,P)}}catch(P){P instanceof Fr||P=="unwind"||a(1,P)}})):st(`invalid state: ${Xt}`);return Dn}}function Ja(c){return pi(m=>{c().then(m)})}for(var hi=Array(256),nn=0;256>nn;++nn)hi[nn]=String.fromCharCode(nn);Sn=hi,rt=n.BindingError=class extends Error{constructor(c){super(c),this.name="BindingError"}},n.InternalError=class extends Error{constructor(c){super(c),this.name="InternalError"}},Object.assign(An.prototype,{get(c){return this.$a[c]},has(c){return this.$a[c]!==void 0},kb(c){var m=this.nb.pop()||this.$a.length;return this.$a[m]=c,m},jb(c){this.$a[c]=void 0,this.nb.push(c)}}),Ot.$a.push({value:void 0},{value:null},{value:!0},{value:!1}),Ot.cb=Ot.$a.length,n.count_emval_handles=()=>{for(var c=0,m=Ot.cb;m<Ot.$a.length;++m)Ot.$a[m]!==void 0&&++c;return c};var Bn={ha:function(c,m,v){return Ja(async()=>{await n.wb(c,m,v)})},a:function(c,m,v){throw c>>>=0,new $n(c).kb(m>>>0,v>>>0),Vr=c,jo++,Vr},v:function(){return 0},aa:function(){},N:function(){},P:function(){},ba:function(){return 0},_:function(){},V:function(){},Z:function(){},C:function(){},O:function(){},L:function(){},$:function(){},M:function(){},F:function(c,m,v,_,P){m>>>=0,m=Nt(m);var F=m.indexOf("u")!=-1;F&&(P=(1n<<64n)-1n),ze(c>>>0,{name:m,fromWireType:j=>j,toWireType:function(j,ee){if(typeof ee!="bigint"&&typeof ee!="number")throw new TypeError(`Cannot convert "${_n(ee)}" to ${this.name}`);if(ee<_||ee>P)throw new TypeError(`Passing a number "${_n(ee)}" from JS side to C/C++ side to an argument of type "${m}", which is outside the valid range [${_}, ${P}]!`);return ee},argPackAdvance:8,readValueFromPointer:no(m,v>>>0,!F),eb:null})},fa:function(c,m,v,_){m=Nt(m>>>0),ze(c>>>0,{name:m,fromWireType:function(P){return!!P},toWireType:function(P,F){return F?v:_},argPackAdvance:8,readValueFromPointer:function(P){return this.fromWireType(G[P>>>0])},eb:null})},ea:function(c,m){m=Nt(m>>>0),ze(c>>>0,{name:m,fromWireType:v=>{var _=Et(v);return oo(v),_},toWireType:(v,_)=>Yt(_),argPackAdvance:8,readValueFromPointer:we,eb:null})},E:function(c,m,v){m=Nt(m>>>0),ze(c>>>0,{name:m,fromWireType:_=>_,toWireType:(_,P)=>P,argPackAdvance:8,readValueFromPointer:On(m,v>>>0),eb:null})},r:function(c,m,v,_,P){if(c>>>=0,v>>>=0,m=Nt(m>>>0),P===-1&&(P=4294967295),P=ee=>ee,_===0){var F=32-8*v;P=ee=>ee<<F>>>F}var j=m.includes("unsigned")?function(ee,te){return te>>>0}:function(ee,te){return te};ze(c,{name:m,fromWireType:P,toWireType:j,argPackAdvance:8,readValueFromPointer:no(m,v,_!==0),eb:null})},m:function(c,m,v){function _(F){return new P(R.buffer,V[F+4>>>2>>>0],V[F>>>2>>>0])}var P=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][m];v=Nt(v>>>0),ze(c>>>0,{name:v,fromWireType:_,argPackAdvance:8,readValueFromPointer:_},{tb:!0})},G:function(c,m){m=Nt(m>>>0);var v=m==="std::string";ze(c>>>0,{name:m,fromWireType:function(_){var P=V[_>>>2>>>0],F=_+4;if(v)for(var j=F,ee=0;ee<=P;++ee){var te=F+ee;if(ee==P||G[te>>>0]==0){if(j=$t(j,te-j),Q===void 0)var Q=j;else Q+=String.fromCharCode(0),Q+=j;j=te+1}}else{for(Q=Array(P),ee=0;ee<P;++ee)Q[ee]=String.fromCharCode(G[F+ee>>>0]);Q=Q.join("")}return Kt(_),Q},toWireType:function(_,P){P instanceof ArrayBuffer&&(P=new Uint8Array(P));var F=typeof P=="string";if(!(F||P instanceof Uint8Array||P instanceof Uint8ClampedArray||P instanceof Int8Array))throw new rt("Cannot pass non-string to std::string");var j=v&&F?sr(P):P.length,ee=Ct(4+j+1),te=ee+4;if(V[ee>>>2>>>0]=j,v&&F)Ur(P,G,te,j+1);else if(F)for(F=0;F<j;++F){var Q=P.charCodeAt(F);if(255<Q)throw Kt(te),new rt("String has UTF-16 code units that do not fit in 8 bits");G[te+F>>>0]=Q}else for(F=0;F<j;++F)G[te+F>>>0]=P[F];return _!==null&&_.push(Kt,ee),ee},argPackAdvance:8,readValueFromPointer:Xo,eb(_){Kt(_)}})},x:function(c,m,v){if(m>>>=0,v>>>=0,v=Nt(v),m===2)var _=Jo,P=Xa,F=Qo,j=()=>X,ee=1;else m===4&&(_=ei,P=ti,F=ri,j=()=>V,ee=2);ze(c>>>0,{name:v,fromWireType:te=>{for(var Q=V[te>>>2>>>0],se=j(),$e,ke=te+4,B=0;B<=Q;++B){var he=te+4+B*m;(B==Q||se[he>>>ee]==0)&&(ke=_(ke,he-ke),$e===void 0?$e=ke:($e+=String.fromCharCode(0),$e+=ke),ke=he+m)}return Kt(te),$e},toWireType:(te,Q)=>{if(typeof Q!="string")throw new rt(`Cannot pass non-string to C++ string type ${v}`);var se=F(Q),$e=Ct(4+se+m);return V[$e>>>2]=se>>ee,P(Q,$e+4,se+m),te!==null&&te.push(Kt,$e),$e},argPackAdvance:8,readValueFromPointer:we,eb(te){Kt(te)}})},ga:function(c,m){m=Nt(m>>>0),ze(c>>>0,{ub:!0,name:m,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},ca:()=>1,p:function(c,m,v){return m>>>=0,v>>>=0,c=Et(c>>>0),m=en(m,"emval::as"),io(m,v,c)},z:function(c,m,v,_){return v>>>=0,_>>>=0,c=tn[c>>>0],m=Et(m>>>0),c(null,m,v,_)},k:function(c,m,v,_,P){return v>>>=0,_>>>=0,P>>>=0,c=tn[c>>>0],m=Et(m>>>0),v=En(v),c(m,m[v],_,P)},b:oo,y:function(c,m){return m>>>=0,c=Et(c>>>0),m=Et(m),c==m},t:function(c){return c>>>=0,c===0?Yt(ao()):(c=En(c),Yt(ao()[c]))},j:function(c,m,v){m=ii(c,m>>>0);var _=m.shift();c--;var P=`return function (obj, func, destructorsRef, args) {
`,F=0,j=[];v===0&&j.push("obj");for(var ee=["retType"],te=[_],Q=0;Q<c;++Q)j.push("arg"+Q),ee.push("argType"+Q),te.push(m[Q]),P+=`  var arg${Q} = argType${Q}.readValueFromPointer(args${F?"+"+F:""});
`,F+=m[Q].argPackAdvance;for(P+=`  var rv = ${v===1?"new func":"func.call"}(${j.join(", ")});
`,Q=0;Q<c;++Q)m[Q].deleteObject&&(P+=`  argType${Q}.deleteObject(arg${Q});
`);return _.ub||(ee.push("emval_returnValue"),te.push(io),P+=`  return emval_returnValue(retType, destructorsRef, rv);
`),ee.push(P+`};
`),c=ai(ee).apply(null,te),v=`methodCaller<(${m.map(se=>se.name).join(", ")}) => ${_.name}>`,oi(so(v,c))},q:function(c,m){return m>>>=0,c=Et(c>>>0),m=Et(m),Yt(c[m])},c:function(c){c>>>=0,4<c&&(Ot.get(c).pb+=1)},s:function(){return Yt([])},l:function(c){c=Et(c>>>0);for(var m=Array(c.length),v=0;v<c.length;v++)m[v]=c[v];return Yt(m)},e:function(c){return Yt(En(c>>>0))},i:function(){return Yt({})},h:function(c){c>>>=0;for(var m=Et(c);m.length;){var v=m.pop();m.pop()(v)}oo(c)},g:function(c,m,v){m>>>=0,v>>>=0,c=Et(c>>>0),m=Et(m),v=Et(v),c[m]=v},f:function(c,m){return m>>>=0,c=en(c>>>0,"_emval_take_value"),c=c.readValueFromPointer(m),Yt(c)},S:function(c,m){c=-9007199254740992>c||9007199254740992<c?NaN:Number(c),m>>>=0,c=new Date(1e3*c),z[m>>>2>>>0]=c.getUTCSeconds(),z[m+4>>>2>>>0]=c.getUTCMinutes(),z[m+8>>>2>>>0]=c.getUTCHours(),z[m+12>>>2>>>0]=c.getUTCDate(),z[m+16>>>2>>>0]=c.getUTCMonth(),z[m+20>>>2>>>0]=c.getUTCFullYear()-1900,z[m+24>>>2>>>0]=c.getUTCDay(),z[m+28>>>2>>>0]=(c.getTime()-Date.UTC(c.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},T:function(c,m){c=-9007199254740992>c||9007199254740992<c?NaN:Number(c),m>>>=0,c=new Date(1e3*c),z[m>>>2>>>0]=c.getSeconds(),z[m+4>>>2>>>0]=c.getMinutes(),z[m+8>>>2>>>0]=c.getHours(),z[m+12>>>2>>>0]=c.getDate(),z[m+16>>>2>>>0]=c.getMonth(),z[m+20>>>2>>>0]=c.getFullYear()-1900,z[m+24>>>2>>>0]=c.getDay(),z[m+28>>>2>>>0]=(Dr(c.getFullYear())?uo:lo)[c.getMonth()]+c.getDate()-1|0,z[m+36>>>2>>>0]=-(60*c.getTimezoneOffset());var v=new Date(c.getFullYear(),6,1).getTimezoneOffset(),_=new Date(c.getFullYear(),0,1).getTimezoneOffset();z[m+32>>>2>>>0]=(v!=_&&c.getTimezoneOffset()==Math.min(_,v))|0},U:function(c){c>>>=0;var m=new Date(z[c+20>>>2>>>0]+1900,z[c+16>>>2>>>0],z[c+12>>>2>>>0],z[c+8>>>2>>>0],z[c+4>>>2>>>0],z[c>>>2>>>0],0),v=z[c+32>>>2>>>0],_=m.getTimezoneOffset(),P=new Date(m.getFullYear(),6,1).getTimezoneOffset(),F=new Date(m.getFullYear(),0,1).getTimezoneOffset(),j=Math.min(F,P);return 0>v?z[c+32>>>2>>>0]=+(P!=F&&j==_):0<v!=(j==_)&&(P=Math.max(F,P),m.setTime(m.getTime()+6e4*((0<v?j:P)-_))),z[c+24>>>2>>>0]=m.getDay(),z[c+28>>>2>>>0]=(Dr(m.getFullYear())?uo:lo)[m.getMonth()]+m.getDate()-1|0,z[c>>>2>>>0]=m.getSeconds(),z[c+4>>>2>>>0]=m.getMinutes(),z[c+8>>>2>>>0]=m.getHours(),z[c+12>>>2>>>0]=m.getDate(),z[c+16>>>2>>>0]=m.getMonth(),z[c+20>>>2>>>0]=m.getYear(),c=m.getTime(),isNaN(c)?(z[lr()>>>2>>>0]=61,c=-1):c/=1e3,BigInt(c)},Q:function(){return-52},R:function(){},J:function(c,m,v){function _(te){return(te=te.toTimeString().match(/\(([A-Za-z ]+)\)$/))?te[1]:"GMT"}v>>>=0;var P=new Date().getFullYear(),F=new Date(P,0,1),j=new Date(P,6,1);P=F.getTimezoneOffset();var ee=j.getTimezoneOffset();V[c>>>0>>>2>>>0]=60*Math.max(P,ee),z[m>>>0>>>2>>>0]=+(P!=ee),c=_(F),m=_(j),c=co(c),m=co(m),ee<P?(V[v>>>2>>>0]=c,V[v+4>>>2>>>0]=m):(V[v>>>2>>>0]=m,V[v+4>>>2>>>0]=c)},u:()=>{st("")},d:function(c,m,v){return c>>>=0,m=Pn(m>>>0,v>>>0),ar[c].apply(null,m)},H:function(c,m,v){return c>>>=0,m=Pn(m>>>0,v>>>0),ar[c].apply(null,m)},D:()=>Date.now(),K:function(){return 4294901760},o:()=>performance.now(),I:function(c){c>>>=0;var m=G.length;if(4294901760<c)return!1;for(var v=1;4>=v;v*=2){var _=m*(1+.2/v);_=Math.min(_,c+100663296);var P=Math;_=Math.max(c,_);e:{P=(P.min.call(P,4294901760,_+(65536-_%65536)%65536)-O.buffer.byteLength+65535)/65536;try{O.grow(P),it();var F=1;break e}catch{}F=void 0}if(F)return!0}return!1},X:function(c,m){c>>>=0,m>>>=0;var v=0;return kn().forEach((_,P)=>{var F=m+v;for(P=V[c+4*P>>>2>>>0]=F,F=0;F<_.length;++F)R[P++>>>0>>>0]=_.charCodeAt(F);R[P>>>0>>>0]=0,v+=_.length+1}),0},Y:function(c,m){c>>>=0,m>>>=0;var v=kn();V[c>>>2>>>0]=v.length;var _=0;return v.forEach(P=>_+=P.length+1),V[m>>>2>>>0]=_,0},w:()=>52,B:function(){return 52},W:function(){return 70},A:function(c,m,v,_){m>>>=0,v>>>=0,_>>>=0;for(var P=0,F=0;F<v;F++){var j=V[m>>>2>>>0],ee=V[m+4>>>2>>>0];m+=8;for(var te=0;te<ee;te++){var Q=G[j+te>>>0],se=si[c];Q===0||Q===10?((c===1?T:$)(ro(se,0)),se.length=0):se.push(Q)}P+=ee}return V[_>>>2>>>0]=P,0},da:ho,n:function(c,m,v,_){return ho(c>>>0,m>>>0,v>>>0,_>>>0)}},ve=function(){function c(v){return ve=v.exports,ve=li(),ve=Qa(),O=ve.ia,it(),je.unshift(ve.ja),Ee--,Ee==0&&(gt!==null&&(clearInterval(gt),gt=null),at&&(v=at,at=null,v())),ve}var m={a:Bn};if(Ee++,n.instantiateWasm)try{return n.instantiateWasm(m,c)}catch(v){$(`Module.instantiateWasm callback failed with error: ${v}`),o(v)}return Nr(m,function(v){c(v.instance)}).catch(o),{}}();n._OrtInit=(c,m)=>(n._OrtInit=ve.ka)(c,m),n._OrtGetLastError=(c,m)=>(n._OrtGetLastError=ve.la)(c,m),n._OrtCreateSessionOptions=(c,m,v,_,P,F,j,ee,te,Q)=>(n._OrtCreateSessionOptions=ve.ma)(c,m,v,_,P,F,j,ee,te,Q),n._OrtAppendExecutionProvider=(c,m)=>(n._OrtAppendExecutionProvider=ve.na)(c,m),n._OrtAddFreeDimensionOverride=(c,m,v)=>(n._OrtAddFreeDimensionOverride=ve.oa)(c,m,v),n._OrtAddSessionConfigEntry=(c,m,v)=>(n._OrtAddSessionConfigEntry=ve.pa)(c,m,v),n._OrtReleaseSessionOptions=c=>(n._OrtReleaseSessionOptions=ve.qa)(c),n._OrtCreateSession=(c,m,v)=>(n._OrtCreateSession=ve.ra)(c,m,v),n._OrtReleaseSession=c=>(n._OrtReleaseSession=ve.sa)(c),n._OrtGetInputOutputCount=(c,m,v)=>(n._OrtGetInputOutputCount=ve.ta)(c,m,v),n._OrtGetInputName=(c,m)=>(n._OrtGetInputName=ve.ua)(c,m),n._OrtGetOutputName=(c,m)=>(n._OrtGetOutputName=ve.va)(c,m),n._OrtFree=c=>(n._OrtFree=ve.wa)(c),n._OrtCreateTensor=(c,m,v,_,P,F)=>(n._OrtCreateTensor=ve.xa)(c,m,v,_,P,F),n._OrtGetTensorData=(c,m,v,_,P)=>(n._OrtGetTensorData=ve.ya)(c,m,v,_,P),n._OrtReleaseTensor=c=>(n._OrtReleaseTensor=ve.za)(c),n._OrtCreateRunOptions=(c,m,v,_)=>(n._OrtCreateRunOptions=ve.Aa)(c,m,v,_),n._OrtAddRunConfigEntry=(c,m,v)=>(n._OrtAddRunConfigEntry=ve.Ba)(c,m,v),n._OrtReleaseRunOptions=c=>(n._OrtReleaseRunOptions=ve.Ca)(c),n._OrtCreateBinding=c=>(n._OrtCreateBinding=ve.Da)(c),n._OrtBindInput=(c,m,v)=>(n._OrtBindInput=ve.Ea)(c,m,v),n._OrtBindOutput=(c,m,v,_)=>(n._OrtBindOutput=ve.Fa)(c,m,v,_),n._OrtClearBoundOutputs=c=>(n._OrtClearBoundOutputs=ve.Ga)(c),n._OrtReleaseBinding=c=>(n._OrtReleaseBinding=ve.Ha)(c),n._OrtRunWithBinding=(c,m,v,_,P)=>(n._OrtRunWithBinding=ve.Ia)(c,m,v,_,P),n._OrtRun=(c,m,v,_,P,F,j,ee)=>(n._OrtRun=ve.Ja)(c,m,v,_,P,F,j,ee),n._OrtEndProfiling=c=>(n._OrtEndProfiling=ve.Ka)(c),n._JsepOutput=(c,m,v)=>(n._JsepOutput=ve.La)(c,m,v),n._JsepGetNodeName=c=>(n._JsepGetNodeName=ve.Ma)(c);var lr=()=>(lr=ve.Na)(),Ct=n._malloc=c=>(Ct=n._malloc=ve.Oa)(c),Kt=n._free=c=>(Kt=n._free=ve.Pa)(c),on=c=>(on=ve.Qa)(c),bo=()=>(bo=ve.Sa)(),yo=c=>(yo=ve.Ta)(c),mi=c=>(mi=ve.Ua)(c),Ln=c=>(Ln=ve.Wa)(c),gi=()=>(gi=ve.Xa)(),bi=c=>(bi=ve.Ya)(c),yi=()=>(yi=ve.Za)();n.___start_em_js=956300,n.___stop_em_js=956461;function Qa(){var c=ve;c=Object.assign({},c);var m=_=>()=>_()>>>0,v=_=>P=>_(P)>>>0;return c.Na=m(c.Na),c.Oa=v(c.Oa),c.Qa=v(c.Qa),c.Sa=m(c.Sa),c.Ua=v(c.Ua),c}n.stackAlloc=mi,n.stackSave=bo,n.stackRestore=yo,n.UTF8ToString=$t,n.stringToUTF8=(c,m,v)=>Ur(c,G,m,v),n.lengthBytesUTF8=sr;var Mn;at=function c(){Mn||vi(),Mn||(at=c)};function vi(){if(!(0<Ee)){if(n.preRun)for(typeof n.preRun=="function"&&(n.preRun=[n.preRun]);n.preRun.length;){var c=n.preRun.shift();Se.unshift(c)}for(;0<Se.length;)Se.shift()(n);if(!(0<Ee||Mn||(Mn=!0,n.calledRun=!0,C))){for(;0<je.length;)je.shift()(n);for(t(n);0<Oe.length;)Oe.shift()(n)}}}return vi(),e.ready}})();typeof Mh=="object"&&typeof pu=="object"?pu.exports=Lh:typeof define=="function"&&define.amd&&define([],()=>Lh)});var Nh=Xe(()=>{});var Fh=Xe(()=>{});var Vh={};Hr(Vh,{cpus:()=>Tx});var Tx,Uh=D(()=>{Tx=void 0});var Hh=Xe((Wh,hu)=>{"use strict";var Gh=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(e={}){function n(){return ue.buffer!=Se.buffer&&st(),Se}function t(){return ue.buffer!=Se.buffer&&st(),je}function o(){return ue.buffer!=Se.buffer&&st(),Oe}function i(){return ue.buffer!=Se.buffer&&st(),Ee}function s(){return ue.buffer!=Se.buffer&&st(),gt}function a(){return ue.buffer!=Se.buffer&&st(),at}var u=e,l,d;u.ready=new Promise((f,b)=>{l=f,d=b}),u.mountExternalData=(f,b)=>{(u.cb||(u.cb=new Map)).set(f,b)},u.unmountExternalData=()=>{delete u.cb},u.jsepInit=(f,b,x,A,L,U,K,be)=>{u.Mb=f,u.wb=b,u.yb=x,u.kb=A,u.xb=L,u.Ea=U,u.zb=K,u.Ab=be,b=(me,ge,Te)=>(...Ne)=>{let Ke=Ct,N=ge?.();Ne=me(...Ne);let _e=ge?.();return N!==_e&&(me=_e,Te(N),ge=Te=null),Ct!=Ke?bi():Ne},x=me=>async(...ge)=>{try{if(u.bb)throw Error("Session already started");let Te=u.bb={Cb:ge[0],errors:[]},Ne=await me(...ge);if(u.bb!==Te)throw Error("Session mismatch");f.flush();let Ke=Te.errors;if(0<Ke.length){let N=await Promise.all(Ke);if(N=N.filter(_e=>_e),0<N.length)throw Error(N.join(`
`))}return Ne}finally{u.bb=null}},u._OrtRun=x(b(u._OrtRun,()=>u._OrtRun,me=>u._OrtRun=me)),u._OrtRunWithBinding=x(b(u._OrtRunWithBinding,()=>u._OrtRunWithBinding,me=>u._OrtRunWithBinding=me)),u._OrtBindInput=b(u._OrtBindInput,()=>u._OrtBindInput,me=>u._OrtBindInput=me),u.jsepRegisterBuffer=(me,ge,Te,Ne)=>f.registerBuffer(me,ge,Te,Ne),u.jsepUnregisterBuffers=me=>{f.unregisterBuffers(me)},u.jsepGetBuffer=me=>f.getBuffer(me),u.jsepCreateDownloader=(me,ge,Te)=>f.createDownloader(me,ge,Te)};var p=Object.assign({},u),h="./this.program",g=(f,b)=>{throw b},y=typeof window=="object",w=typeof importScripts=="function",I=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",T=u.ENVIRONMENT_IS_PTHREAD||!1,$="";function O(f){return u.locateFile?u.locateFile(f,$):$+f}var C,M,R;if(I){var G=(du(),Rr(lu)),q=(fu(),Rr(cu));$=w?q.dirname($)+"/":__dirname+"/",C=(b,x)=>(b=$n(b)?new URL(b):q.normalize(b),G.readFileSync(b,x?void 0:"utf8")),R=b=>(b=C(b,!0),b.buffer||(b=new Uint8Array(b)),b),M=(b,x,A,L=!0)=>{b=$n(b)?new URL(b):q.normalize(b),G.readFile(b,L?void 0:"utf8",(U,K)=>{U?A(U):x(L?K.buffer:K)})},!u.thisProgram&&1<process.argv.length&&(h=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),g=(b,x)=>{throw process.exitCode=b,x},u.inspect=()=>"[Emscripten Module object]";let f;try{f=Nh()}catch(b){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),b}global.Worker=f.Worker}else(y||w)&&(w?$=self.location.href:typeof document<"u"&&document.currentScript&&($=document.currentScript.src),typeof r<"u"&&r&&($=r),$.indexOf("blob:")!==0?$=$.substr(0,$.replace(/[?#].*/,"").lastIndexOf("/")+1):$="",I||(C=f=>{var b=new XMLHttpRequest;return b.open("GET",f,!1),b.send(null),b.responseText},w&&(R=f=>{var b=new XMLHttpRequest;return b.open("GET",f,!1),b.responseType="arraybuffer",b.send(null),new Uint8Array(b.response)}),M=(f,b,x)=>{var A=new XMLHttpRequest;A.open("GET",f,!0),A.responseType="arraybuffer",A.onload=()=>{A.status==200||A.status==0&&A.response?b(A.response):x()},A.onerror=x,A.send(null)}));I&&typeof performance>"u"&&(global.performance=Fh().performance);var X=console.log.bind(console),z=console.error.bind(console);I&&(X=(...f)=>G.writeSync(1,f.join(" ")+`
`),z=(...f)=>G.writeSync(2,f.join(" ")+`
`));var V=X,ie=z;Object.assign(u,p),p=null,typeof WebAssembly!="object"&&ar("no native wasm support detected");var ue,le,Ye=!1,it,Se,je,Oe,Ee,gt,at;function st(){var f=ue.buffer;u.HEAP8=Se=new Int8Array(f),u.HEAP16=new Int16Array(f),u.HEAPU8=je=new Uint8Array(f),u.HEAPU16=new Uint16Array(f),u.HEAP32=Oe=new Int32Array(f),u.HEAPU32=Ee=new Uint32Array(f),u.HEAPF32=gt=new Float32Array(f),u.HEAPF64=at=new Float64Array(f)}var Z=16777216;if(T)ue=u.wasmMemory;else if(u.wasmMemory)ue=u.wasmMemory;else if(ue=new WebAssembly.Memory({initial:Z/65536,maximum:65536,shared:!0}),!(ue.buffer instanceof SharedArrayBuffer))throw ie("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),I&&ie("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");st(),Z=ue.buffer.byteLength;var de=[],Ce=[],zt=[],Tt=0,ct=null,lt=null;function Nr(){if(Tt--,Tt==0&&(ct!==null&&(clearInterval(ct),ct=null),lt)){var f=lt;lt=null,f()}}function ar(f){throw f="Aborted("+f+")",ie(f),Ye=!0,it=1,f=new WebAssembly.RuntimeError(f+". Build with -sASSERTIONS for more info."),d(f),f}var Fr=f=>f.startsWith("data:application/octet-stream;base64,"),$n=f=>f.startsWith("file://"),Vr;Vr="ort-wasm-simd-threaded.wasm",Fr(Vr)||(Vr=O(Vr));function jo(f){if(R)return R(f);throw"both async and sync fetching of the wasm failed"}function Ko(f){if(y||w){if(typeof fetch=="function"&&!$n(f))return fetch(f,{credentials:"same-origin"}).then(b=>{if(!b.ok)throw"failed to load wasm binary file at '"+f+"'";return b.arrayBuffer()}).catch(()=>jo(f));if(M)return new Promise((b,x)=>{M(f,A=>b(new Uint8Array(A)),x)})}return Promise.resolve().then(()=>jo(f))}function ro(f,b,x){return Ko(f).then(A=>WebAssembly.instantiate(A,b)).then(A=>A).then(x,A=>{ie(`failed to asynchronously prepare wasm: ${A}`),ar(A)})}function $t(f,b){var x=Vr;return typeof WebAssembly.instantiateStreaming!="function"||Fr(x)||$n(x)||I||typeof fetch!="function"?ro(x,f,b):fetch(x,{credentials:"same-origin"}).then(A=>WebAssembly.instantiateStreaming(A,f).then(b,function(L){return ie(`wasm streaming compile failed: ${L}`),ie("falling back to ArrayBuffer instantiation"),ro(x,f,b)}))}var sr,Ur={1360172:(f,b,x,A)=>{if(typeof u>"u"||!u.cb)return 1;if(f=rt(f>>>0),f.startsWith("./")&&(f=f.substring(2)),f=u.cb.get(f),!f)return 2;if(b>>>=0,x>>>=0,A>>>=0,b+x>f.byteLength)return 3;try{return t().set(f.subarray(b,b+x),A>>>0),0}catch{return 4}},1360673:f=>u.wb(f),1360706:f=>u.yb(f),1360738:(f,b,x)=>{u.kb(f,b,x,!0)},1360777:(f,b,x)=>{u.kb(f,b,x)},1360810:f=>{u.Ea("Abs",f,void 0)},1360861:f=>{u.Ea("Neg",f,void 0)},1360912:f=>{u.Ea("Floor",f,void 0)},1360965:f=>{u.Ea("Ceil",f,void 0)},1361017:f=>{u.Ea("Reciprocal",f,void 0)},1361075:f=>{u.Ea("Sqrt",f,void 0)},1361127:f=>{u.Ea("Exp",f,void 0)},1361178:f=>{u.Ea("Erf",f,void 0)},1361229:f=>{u.Ea("Sigmoid",f,void 0)},1361284:f=>{u.Ea("Log",f,void 0)},1361335:f=>{u.Ea("Sin",f,void 0)},1361386:f=>{u.Ea("Cos",f,void 0)},1361437:f=>{u.Ea("Tan",f,void 0)},1361488:f=>{u.Ea("Asin",f,void 0)},1361540:f=>{u.Ea("Acos",f,void 0)},1361592:f=>{u.Ea("Atan",f,void 0)},1361644:f=>{u.Ea("Sinh",f,void 0)},1361696:f=>{u.Ea("Cosh",f,void 0)},1361748:f=>{u.Ea("Asinh",f,void 0)},1361801:f=>{u.Ea("Acosh",f,void 0)},1361854:f=>{u.Ea("Atanh",f,void 0)},1361907:f=>{u.Ea("Tanh",f,void 0)},1361959:f=>{u.Ea("Not",f,void 0)},1362010:(f,b,x)=>{u.Ea("Clip",f,{min:b,max:x})},1362079:f=>{u.Ea("Clip",f,void 0)},1362131:(f,b)=>{u.Ea("Elu",f,{alpha:b})},1362189:f=>{u.Ea("Relu",f,void 0)},1362241:(f,b)=>{u.Ea("LeakyRelu",f,{alpha:b})},1362305:(f,b)=>{u.Ea("ThresholdedRelu",f,{alpha:b})},1362375:(f,b)=>{u.Ea("Cast",f,{to:b})},1362433:f=>{u.Ea("Add",f,void 0)},1362484:f=>{u.Ea("Sub",f,void 0)},1362535:f=>{u.Ea("Mul",f,void 0)},1362586:f=>{u.Ea("Div",f,void 0)},1362637:f=>{u.Ea("Pow",f,void 0)},1362688:f=>{u.Ea("Equal",f,void 0)},1362741:f=>{u.Ea("Greater",f,void 0)},1362796:f=>{u.Ea("GreaterOrEqual",f,void 0)},1362858:f=>{u.Ea("Less",f,void 0)},1362910:f=>{u.Ea("LessOrEqual",f,void 0)},1362969:(f,b,x,A,L)=>{u.Ea("ReduceMean",f,{keepDims:!!b,noopWithEmptyAxes:!!x,axes:A?Array.from(o().subarray(A>>>0,L>>>0)):[]})},1363128:(f,b,x,A,L)=>{u.Ea("ReduceMax",f,{keepDims:!!b,noopWithEmptyAxes:!!x,axes:A?Array.from(o().subarray(A>>>0,L>>>0)):[]})},1363286:(f,b,x,A,L)=>{u.Ea("ReduceMin",f,{keepDims:!!b,noopWithEmptyAxes:!!x,axes:A?Array.from(o().subarray(A>>>0,L>>>0)):[]})},1363444:(f,b,x,A,L)=>{u.Ea("ReduceProd",f,{keepDims:!!b,noopWithEmptyAxes:!!x,axes:A?Array.from(o().subarray(A>>>0,L>>>0)):[]})},1363603:(f,b,x,A,L)=>{u.Ea("ReduceSum",f,{keepDims:!!b,noopWithEmptyAxes:!!x,axes:A?Array.from(o().subarray(A>>>0,L>>>0)):[]})},1363761:(f,b,x,A,L)=>{u.Ea("ReduceL1",f,{keepDims:!!b,noopWithEmptyAxes:!!x,axes:A?Array.from(o().subarray(A>>>0,L>>>0)):[]})},1363918:(f,b,x,A,L)=>{u.Ea("ReduceL2",f,{keepDims:!!b,noopWithEmptyAxes:!!x,axes:A?Array.from(o().subarray(A>>>0,L>>>0)):[]})},1364075:(f,b,x,A,L)=>{u.Ea("ReduceLogSum",f,{keepDims:!!b,noopWithEmptyAxes:!!x,axes:A?Array.from(o().subarray(A>>>0,L>>>0)):[]})},1364236:(f,b,x,A,L)=>{u.Ea("ReduceSumSquare",f,{keepDims:!!b,noopWithEmptyAxes:!!x,axes:A?Array.from(o().subarray(A>>>0,L>>>0)):[]})},1364400:(f,b,x,A,L)=>{u.Ea("ReduceLogSumExp",f,{keepDims:!!b,noopWithEmptyAxes:!!x,axes:A?Array.from(o().subarray(A>>>0,L>>>0)):[]})},1364564:f=>{u.Ea("Where",f,void 0)},1364617:(f,b,x)=>{u.Ea("Transpose",f,{perm:b?Array.from(o().subarray(b>>>0,x>>>0)):[]})},1364725:(f,b,x,A,L,U,K,be,me,ge,Te,Ne,Ke,N,_e)=>{u.Ea("ConvTranspose",f,{format:me?"NHWC":"NCHW",autoPad:b,dilations:[x],group:A,kernel_shape:[L],pads:[U,K],strides:[be],wIsConst:()=>!!n()[ge>>>0],outputPadding:Te?Array.from(o().subarray(Te>>>0,Ne>>>0)):[],outputShape:Ke?Array.from(o().subarray(Ke>>>0,N>>>0)):[],activation:rt(_e)})},1365127:(f,b,x,A,L,U,K,be,me,ge,Te,Ne,Ke,N)=>{u.Ea("ConvTranspose",f,{format:be?"NHWC":"NCHW",autoPad:b,dilations:Array.from(o().subarray(x>>>0,(x>>>0)+2>>>0)),group:A,kernelShape:Array.from(o().subarray(L>>>0,(L>>>0)+2>>>0)),pads:Array.from(o().subarray(U>>>0,(U>>>0)+4>>>0)),strides:Array.from(o().subarray(K>>>0,(K>>>0)+2>>>0)),wIsConst:()=>!!n()[me>>>0],outputPadding:ge?Array.from(o().subarray(ge>>>0,Te>>>0)):[],outputShape:Ne?Array.from(o().subarray(Ne>>>0,Ke>>>0)):[],activation:rt(N)})},1365692:(f,b,x,A,L,U,K,be,me,ge,Te,Ne,Ke,N,_e)=>{u.Ea("ConvTranspose",f,{format:me?"NHWC":"NCHW",autoPad:b,dilations:[x],group:A,kernel_shape:[L],pads:[U,K],strides:[be],wIsConst:()=>!!n()[ge>>>0],outputPadding:Te?Array.from(o().subarray(Te>>>0,Ne>>>0)):[],outputShape:Ke?Array.from(o().subarray(Ke>>>0,N>>>0)):[],activation:rt(_e)})},1366094:(f,b,x,A,L,U,K,be,me,ge,Te,Ne,Ke,N)=>{u.Ea("ConvTranspose",f,{format:be?"NHWC":"NCHW",autoPad:b,dilations:Array.from(o().subarray(x>>>0,(x>>>0)+2>>>0)),group:A,kernelShape:Array.from(o().subarray(L>>>0,(L>>>0)+2>>>0)),pads:Array.from(o().subarray(U>>>0,(U>>>0)+4>>>0)),strides:Array.from(o().subarray(K>>>0,(K>>>0)+2>>>0)),wIsConst:()=>!!n()[me>>>0],outputPadding:ge?Array.from(o().subarray(ge>>>0,Te>>>0)):[],outputShape:Ne?Array.from(o().subarray(Ne>>>0,Ke>>>0)):[],activation:rt(N)})},1366659:(f,b)=>{u.Ea("GlobalAveragePool",f,{format:b?"NHWC":"NCHW"})},1366750:(f,b,x,A,L,U,K,be,me,ge,Te,Ne,Ke,N,_e,Ue)=>{u.Ea("AveragePool",f,{format:Ue?"NHWC":"NCHW",auto_pad:b,ceil_mode:x,count_include_pad:A,storage_order:L,dilations:[U,K],kernel_shape:[be,me],pads:[ge,Te,Ne,Ke],strides:[N,_e]})},1367034:(f,b)=>{u.Ea("GlobalAveragePool",f,{format:b?"NHWC":"NCHW"})},1367125:(f,b,x,A,L,U,K,be,me,ge,Te,Ne,Ke,N,_e,Ue)=>{u.Ea("AveragePool",f,{format:Ue?"NHWC":"NCHW",auto_pad:b,ceil_mode:x,count_include_pad:A,storage_order:L,dilations:[U,K],kernel_shape:[be,me],pads:[ge,Te,Ne,Ke],strides:[N,_e]})},1367409:(f,b)=>{u.Ea("GlobalMaxPool",f,{format:b?"NHWC":"NCHW"})},1367496:(f,b,x,A,L,U,K,be,me,ge,Te,Ne,Ke,N,_e,Ue)=>{u.Ea("MaxPool",f,{format:Ue?"NHWC":"NCHW",auto_pad:b,ceil_mode:x,count_include_pad:A,storage_order:L,dilations:[U,K],kernel_shape:[be,me],pads:[ge,Te,Ne,Ke],strides:[N,_e]})},1367776:(f,b)=>{u.Ea("GlobalMaxPool",f,{format:b?"NHWC":"NCHW"})},1367863:(f,b,x,A,L,U,K,be,me,ge,Te,Ne,Ke,N,_e,Ue)=>{u.Ea("MaxPool",f,{format:Ue?"NHWC":"NCHW",auto_pad:b,ceil_mode:x,count_include_pad:A,storage_order:L,dilations:[U,K],kernel_shape:[be,me],pads:[ge,Te,Ne,Ke],strides:[N,_e]})},1368143:(f,b,x,A,L)=>{u.Ea("Gemm",f,{alpha:b,beta:x,transA:A,transB:L})},1368247:f=>{u.Ea("MatMul",f,void 0)},1368301:(f,b,x,A)=>{u.Ea("ArgMax",f,{keepDims:!!b,selectLastIndex:!!x,axis:A})},1368409:(f,b,x,A)=>{u.Ea("ArgMin",f,{keepDims:!!b,selectLastIndex:!!x,axis:A})},1368517:(f,b)=>{u.Ea("Softmax",f,{axis:b})},1368580:(f,b)=>{u.Ea("Concat",f,{axis:b})},1368640:(f,b,x,A,L)=>{u.Ea("Split",f,{axis:b,numOutputs:x,splitSizes:A?Array.from(o().subarray(A>>>0,L>>>0)):[]})},1368780:f=>{u.Ea("Expand",f,void 0)},1368834:(f,b)=>{u.Ea("Gather",f,{axis:Number(b)})},1368905:(f,b)=>{u.Ea("GatherElements",f,{axis:Number(b)})},1368984:(f,b,x,A,L,U,K,be,me,ge,Te)=>{u.Ea("Resize",f,{antialias:b,axes:x?Array.from(o().subarray(x>>>0,A>>>0)):[],coordinateTransformMode:rt(L),cubicCoeffA:U,excludeOutside:K,extrapolationValue:be,keepAspectRatioPolicy:rt(me),mode:rt(ge),nearestMode:rt(Te)})},1369330:(f,b,x,A,L,U,K)=>{u.Ea("Slice",f,{starts:b?Array.from(o().subarray(b>>>0,x>>>0)):[],ends:A?Array.from(o().subarray(A>>>0,L>>>0)):[],axes:U?Array.from(o().subarray(U>>>0,K>>>0)):[]})},1369546:f=>{u.Ea("Tile",f,void 0)},1369598:(f,b,x)=>{u.Ea("LayerNormalization",f,{axis:Number(b),epsilon:Number(x)})},1369705:(f,b,x)=>{u.Ea("InstanceNormalization",f,{epsilon:b,format:x?"NHWC":"NCHW"})},1369819:(f,b,x)=>{u.Ea("InstanceNormalization",f,{epsilon:b,format:x?"NHWC":"NCHW"})},1369933:f=>{u.Ea("Range",f,void 0)},1369986:(f,b)=>{u.Ea("Einsum",f,{equation:rt(b)})},1370067:(f,b,x,A,L)=>{u.Ea("Pad",f,{mode:b,value:x,pads:A?Array.from(o().subarray(A>>>0,L>>>0)):[]})},1370194:(f,b,x,A,L,U)=>{u.Ea("BatchNormalization",f,{epsilon:b,momentum:x,spatial:!!L,trainingMode:!!A,format:U?"NHWC":"NCHW"})},1370363:(f,b,x,A,L,U)=>{u.Ea("BatchNormalization",f,{epsilon:b,momentum:x,spatial:!!L,trainingMode:!!A,format:U?"NHWC":"NCHW"})},1370532:(f,b,x)=>{u.Ea("CumSum",f,{exclusive:Number(b),reverse:Number(x)})},1370629:(f,b,x,A,L,U,K,be,me)=>{u.Ea("Attention",f,{numHeads:b,isUnidirectional:x,maskFilterValue:A,scale:L,doRotary:U,qkvHiddenSizes:K?Array.from(o().subarray(Number(be)>>>0,Number(be)+K>>>0)):[],pastPresentShareBuffer:!!me})},1370901:f=>{u.Ea("Gelu",f,void 0)},1370953:(f,b,x,A,L,U)=>{u.Ea("MultiHeadAttention",f,{numHeads:b,isUnidirectional:x,maskFilterValue:A,scale:L,doRotary:U})},1371112:f=>{u.Ea("BiasAdd",f,void 0)},1371167:f=>{u.Ea("BiasSplitGelu",f,void 0)},1371228:(f,b)=>{u.Ea("SkipLayerNormalization",f,{epsilon:b})},1371309:(f,b,x,A,L,U,K,be,me,ge,Te,Ne,Ke)=>{u.Ea("Conv",f,{format:me?"NHWC":"NCHW",auto_pad:b,dilations:[x],group:A,kernel_shape:[L],pads:U?Array.from(o().subarray(U>>>0,K>>>0)):[],strides:[be],w_is_const:()=>!!n()[ge>>>0],activation:rt(Te),activation_params:Ne?Array.from(s().subarray(Ne>>>0,Ke>>>0)):[]})},1371679:(f,b,x,A,L,U,K,be,me,ge,Te,Ne,Ke,N,_e,Ue)=>{u.Ea("Conv",f,{format:Ne?"NHWC":"NCHW",auto_pad:b,dilations:[x,A],group:L,kernel_shape:[U,K],pads:be?Array.from(o().subarray(be>>>0,me>>>0)):[],strides:[ge,Te],w_is_const:()=>!!n()[Ke>>>0],activation:rt(N),activation_params:_e?Array.from(s().subarray(_e>>>0,Ue>>>0)):[]})},1372070:f=>{u.zb(f)},1372104:(f,b)=>u.Ab(f,b,u.bb.Cb,u.bb.errors)};function _n(f){this.name="ExitStatus",this.message=`Program terminated with exit(${f})`,this.status=f}var Sn=f=>{f.terminate(),f.onmessage=()=>{}},Nt=f=>{we.Ya.length==0&&(Et(),we.lb(we.Ya[0]));var b=we.Ya.pop();if(!b)return 6;we.Za.push(b),we.Qa[f.Xa]=b,b.Xa=f.Xa;var x={cmd:"run",start_routine:f.Db,arg:f.tb,pthread_ptr:f.Xa};return I&&b.unref(),b.postMessage(x,f.Jb),0},ur=0,In=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Yo=(f,b,x)=>{b>>>=0;var A=b+x;for(x=b;f[x]&&!(x>=A);)++x;if(16<x-b&&f.buffer&&In)return In.decode(f.buffer instanceof SharedArrayBuffer?f.slice(b,x):f.subarray(b,x));for(A="";b<x;){var L=f[b++];if(L&128){var U=f[b++]&63;if((L&224)==192)A+=String.fromCharCode((L&31)<<6|U);else{var K=f[b++]&63;L=(L&240)==224?(L&15)<<12|U<<6|K:(L&7)<<18|U<<12|K<<6|f[b++]&63,65536>L?A+=String.fromCharCode(L):(L-=65536,A+=String.fromCharCode(55296|L>>10,56320|L&1023))}}else A+=String.fromCharCode(L)}return A},rt=(f,b)=>(f>>>=0)?Yo(t(),f,b):"",Ya=f=>{var b=he();return f=f(),De(b),f};function ze(f,b){var x=arguments.length-2,A=arguments;return Ya(()=>{for(var L=dr(8*x),U=L>>>3,K=0;K<x;K++){var be=A[2+K];a()[U+K>>>0]=be}return te(f,x,L,b)})}function no(f){if(T)return ze(0,1,f);it=f,0<ur||(we.Eb(),u.onExit?.(f),Ye=!0),g(f,new _n(f))}var An=f=>{if(it=f,T)throw Xo(f),"unwind";no(f)},Ot=f=>{f instanceof _n||f=="unwind"||g(1,f)};function oo(){for(var f=u.numThreads;f--;)Et();de.unshift(()=>{Tt++,Yt(()=>Nr())})}function Et(){var f=O("ort-wasm-simd-threaded.worker.js");f=new Worker(f),we.Ya.push(f)}function Yt(f){T?f():Promise.all(we.Ya.map(we.lb)).then(f)}var we={Ya:[],Za:[],pb:[],Qa:{},hb(){T?(we.receiveObjectTransfer=we.Bb,we.threadInitTLS=we.ob,we.setExitStatus=we.nb):oo()},nb:f=>it=f,Nb:["$terminateWorker"],Eb:()=>{for(var f of we.Za)Sn(f);for(f of we.Ya)Sn(f);we.Ya=[],we.Za=[],we.Qa=[]},mb:f=>{var b=f.Xa;delete we.Qa[b],we.Ya.push(f),we.Za.splice(we.Za.indexOf(f),1),f.Xa=0,Q(b)},Bb(){},ob(){we.pb.forEach(f=>f())},lb:f=>new Promise(b=>{f.onmessage=U=>{U=U.data;var K=U.cmd;if(U.targetThread&&U.targetThread!=P()){var be=we.Qa[U.targetThread];be?be.postMessage(U,U.transferList):ie(`Internal error! Worker sent a message "${K}" to target pthread ${U.targetThread}, but that thread no longer exists!`)}else K==="checkMailbox"?Gr():K==="spawnThread"?Nt(U):K==="cleanupThread"?we.mb(we.Qa[U.thread]):K==="killThread"?(U=U.thread,K=we.Qa[U],delete we.Qa[U],Sn(K),Q(U),we.Za.splice(we.Za.indexOf(K),1),K.Xa=0):K==="cancelThread"?we.Qa[U.thread].postMessage({cmd:"cancel"}):K==="loaded"?(f.loaded=!0,I&&!f.Xa&&f.unref(),b(f)):K==="alert"?alert(`Thread ${U.threadId}: ${U.text}`):U.target==="setimmediate"?f.postMessage(U):K==="callHandler"?u[U.handler](...U.args):K&&ie(`worker sent an unknown command ${K}`)},f.onerror=U=>{throw ie(`worker sent an error! ${U.filename}:${U.lineno}: ${U.message}`),U},I&&(f.on("message",U=>f.onmessage({data:U})),f.on("error",U=>f.onerror(U)));var x=[],A=["onExit"],L;for(L of A)u.hasOwnProperty(L)&&x.push(L);f.postMessage({cmd:"load",handlers:x,urlOrBlob:u.mainScriptUrlOrBlob||r,wasmMemory:ue,wasmModule:le})})};u.PThread=we;var On=f=>{for(;0<f.length;)f.shift()(u)};u.establishStackSpace=()=>{var f=P(),b=i()[f+52>>>2>>>0];f=i()[f+56>>>2>>>0],B(b,b-f),De(b)};function Xo(f){if(T)return ze(1,0,f);An(f)}u.invokeEntryPoint=(f,b)=>{f=vo.apply(null,[f,b]),0<ur?we.nb(f):se(f)};function Zo(f){this.gb=f-24,this.sb=function(b){i()[this.gb+4>>>2>>>0]=b},this.rb=function(b){i()[this.gb+8>>>2>>>0]=b},this.hb=function(b,x){this.qb(),this.sb(b),this.rb(x)},this.qb=function(){i()[this.gb+16>>>2>>>0]=0}}var Jo=0,Xa=0;function Qo(f,b,x,A){return T?ze(2,1,f,b,x,A):ei(f,b,x,A)}function ei(f,b,x,A){if(f>>>=0,b>>>=0,x>>>=0,A>>>=0,typeof SharedArrayBuffer>"u")return ie("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var L=[];return T&&L.length===0?Qo(f,b,x,A):(f={Db:x,Xa:f,tb:A,Jb:L},T?(f.Lb="spawnThread",postMessage(f,L),0):Nt(f))}function ti(f,b,x){return T?ze(3,1,f,b,x):0}function ri(f,b){if(T)return ze(4,1,f,b)}var en=f=>{for(var b=0,x=0;x<f.length;++x){var A=f.charCodeAt(x);127>=A?b++:2047>=A?b+=2:55296<=A&&57343>=A?(b+=4,++x):b+=3}return b},io=(f,b,x,A)=>{if(x>>>=0,!(0<A))return 0;var L=x;A=x+A-1;for(var U=0;U<f.length;++U){var K=f.charCodeAt(U);if(55296<=K&&57343>=K){var be=f.charCodeAt(++U);K=65536+((K&1023)<<10)|be&1023}if(127>=K){if(x>=A)break;b[x++>>>0]=K}else{if(2047>=K){if(x+1>=A)break;b[x++>>>0]=192|K>>6}else{if(65535>=K){if(x+2>=A)break;b[x++>>>0]=224|K>>12}else{if(x+3>=A)break;b[x++>>>0]=240|K>>18,b[x++>>>0]=128|K>>12&63}b[x++>>>0]=128|K>>6&63}b[x++>>>0]=128|K&63}}return b[x>>>0]=0,x-L},tn=(f,b,x)=>io(f,t(),b,x);function ni(f,b){if(T)return ze(5,1,f,b)}function En(f,b,x){if(T)return ze(6,1,f,b,x)}function ao(f,b,x){return T?ze(7,1,f,b,x):0}function oi(f,b){if(T)return ze(8,1,f,b)}function ii(f,b,x){if(T)return ze(9,1,f,b,x)}function so(f,b,x,A){if(T)return ze(10,1,f,b,x,A)}function ai(f,b,x,A){if(T)return ze(11,1,f,b,x,A)}function Dr(f,b,x,A){if(T)return ze(12,1,f,b,x,A)}function uo(f){if(T)return ze(13,1,f)}function lo(f,b){if(T)return ze(14,1,f,b)}function co(f,b,x){if(T)return ze(15,1,f,b,x)}var Cn=()=>{if(!(0<ur))try{T?se(it):An(it)}catch(f){Ot(f)}};function Pn(f){f>>>=0,typeof Atomics.Kb=="function"&&(Atomics.Kb(o(),f>>>2,f).value.then(Gr),f+=128,Atomics.store(o(),f>>>2,1))}u.__emscripten_thread_mailbox_await=Pn;var Gr=()=>{var f=P();if(f&&(Pn(f),!Ye))try{$e(),Cn()}catch(b){Ot(b)}};u.checkMailbox=Gr;var kn=[],yr=f=>f%4===0&&(f%100!==0||f%400===0),si=[0,31,60,91,121,152,182,213,244,274,305,335],fo=[0,31,59,90,120,151,181,212,243,273,304,334];function po(f,b,x,A,L,U,K,be){return T?ze(16,1,f,b,x,A,L,U,K,be):-52}function ui(f,b,x,A,L,U,K){if(T)return ze(17,1,f,b,x,A,L,U,K)}var ho=f=>{var b=en(f)+1,x=F(b);return x&&tn(f,x,b),x},Wr=[],li=(f,b)=>{Wr.length=0;for(var x;x=t()[f++>>>0];){var A=x!=105;A&=x!=112,b+=A&&b%8?4:0,Wr.push(x==112?i()[b>>>2>>>0]:x==105?o()[b>>>2>>>0]:a()[b>>>3>>>0]),b+=A?8:4}return Wr},Xt={},jt=()=>{if(!Dn){var f={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:h||"./this.program"},b;for(b in Xt)Xt[b]===void 0?delete f[b]:f[b]=Xt[b];var x=[];for(b in f)x.push(`${b}=${f[b]}`);Dn=x}return Dn},Dn;function rn(f,b){if(T)return ze(18,1,f,b);f>>>=0,b>>>=0;var x=0;return jt().forEach((A,L)=>{var U=b+x;for(L=i()[f+4*L>>>2>>>0]=U,U=0;U<A.length;++U)n()[L++>>>0>>>0]=A.charCodeAt(U);n()[L>>>0>>>0]=0,x+=A.length+1}),0}function mo(f,b){if(T)return ze(19,1,f,b);f>>>=0,b>>>=0;var x=jt();i()[f>>>2>>>0]=x.length;var A=0;return x.forEach(L=>A+=L.length+1),i()[b>>>2>>>0]=A,0}function go(f){return T?ze(20,1,f):52}function di(f,b,x,A){return T?ze(21,1,f,b,x,A):52}function Rn(f,b,x,A,L){return T?ze(22,1,f,b,x,A,L):70}var Za=[null,[],[]];function ci(f,b,x,A){if(T)return ze(23,1,f,b,x,A);b>>>=0,x>>>=0,A>>>=0;for(var L=0,U=0;U<x;U++){var K=i()[b>>>2>>>0],be=i()[b+4>>>2>>>0];b+=8;for(var me=0;me<be;me++){var ge=t()[K+me>>>0],Te=Za[f];ge===0||ge===10?((f===1?V:ie)(Yo(Te,0)),Te.length=0):Te.push(ge)}L+=be}return i()[A>>>2>>>0]=L,0}var fi=[31,29,31,30,31,30,31,31,30,31,30,31],pi=[31,28,31,30,31,30,31,31,30,31,30,31];function Ja(f){var b=Array(en(f)+1);return io(f,b,0,b.length),b}var hi=(f,b)=>{n().set(f,b>>>0)};function nn(f,b,x,A){function L(N,_e,Ue){for(N=typeof N=="number"?N.toString():N||"";N.length<_e;)N=Ue[0]+N;return N}function U(N,_e){return L(N,_e,"0")}function K(N,_e){function Ue(el){return 0>el?-1:0<el?1:0}var an;return(an=Ue(N.getFullYear()-_e.getFullYear()))===0&&(an=Ue(N.getMonth()-_e.getMonth()))===0&&(an=Ue(N.getDate()-_e.getDate())),an}function be(N){switch(N.getDay()){case 0:return new Date(N.getFullYear()-1,11,29);case 1:return N;case 2:return new Date(N.getFullYear(),0,3);case 3:return new Date(N.getFullYear(),0,2);case 4:return new Date(N.getFullYear(),0,1);case 5:return new Date(N.getFullYear()-1,11,31);case 6:return new Date(N.getFullYear()-1,11,30)}}function me(N){var _e=N.$a;for(N=new Date(new Date(N.ab+1900,0,1).getTime());0<_e;){var Ue=N.getMonth(),an=(yr(N.getFullYear())?fi:pi)[Ue];if(_e>an-N.getDate())_e-=an-N.getDate()+1,N.setDate(1),11>Ue?N.setMonth(Ue+1):(N.setMonth(0),N.setFullYear(N.getFullYear()+1));else{N.setDate(N.getDate()+_e);break}}return Ue=new Date(N.getFullYear()+1,0,4),_e=be(new Date(N.getFullYear(),0,4)),Ue=be(Ue),0>=K(_e,N)?0>=K(Ue,N)?N.getFullYear()+1:N.getFullYear():N.getFullYear()-1}f>>>=0,b>>>=0,x>>>=0,A>>>=0;var ge=i()[A+40>>>2>>>0];A={Hb:o()[A>>>2>>>0],Gb:o()[A+4>>>2>>>0],eb:o()[A+8>>>2>>>0],jb:o()[A+12>>>2>>>0],fb:o()[A+16>>>2>>>0],ab:o()[A+20>>>2>>>0],Wa:o()[A+24>>>2>>>0],$a:o()[A+28>>>2>>>0],Ob:o()[A+32>>>2>>>0],Fb:o()[A+36>>>2>>>0],Ib:ge?rt(ge):""},x=rt(x),ge={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var Te in ge)x=x.replace(new RegExp(Te,"g"),ge[Te]);var Ne="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Ke="January February March April May June July August September October November December".split(" ");ge={"%a":N=>Ne[N.Wa].substring(0,3),"%A":N=>Ne[N.Wa],"%b":N=>Ke[N.fb].substring(0,3),"%B":N=>Ke[N.fb],"%C":N=>U((N.ab+1900)/100|0,2),"%d":N=>U(N.jb,2),"%e":N=>L(N.jb,2," "),"%g":N=>me(N).toString().substring(2),"%G":N=>me(N),"%H":N=>U(N.eb,2),"%I":N=>(N=N.eb,N==0?N=12:12<N&&(N-=12),U(N,2)),"%j":N=>{for(var _e=0,Ue=0;Ue<=N.fb-1;_e+=(yr(N.ab+1900)?fi:pi)[Ue++]);return U(N.jb+_e,3)},"%m":N=>U(N.fb+1,2),"%M":N=>U(N.Gb,2),"%n":()=>`
`,"%p":N=>0<=N.eb&&12>N.eb?"AM":"PM","%S":N=>U(N.Hb,2),"%t":()=>"	","%u":N=>N.Wa||7,"%U":N=>U(Math.floor((N.$a+7-N.Wa)/7),2),"%V":N=>{var _e=Math.floor((N.$a+7-(N.Wa+6)%7)/7);if(2>=(N.Wa+371-N.$a-2)%7&&_e++,_e)_e==53&&(Ue=(N.Wa+371-N.$a)%7,Ue==4||Ue==3&&yr(N.ab)||(_e=1));else{_e=52;var Ue=(N.Wa+7-N.$a-1)%7;(Ue==4||Ue==5&&yr(N.ab%400-1))&&_e++}return U(_e,2)},"%w":N=>N.Wa,"%W":N=>U(Math.floor((N.$a+7-(N.Wa+6)%7)/7),2),"%y":N=>(N.ab+1900).toString().substring(2),"%Y":N=>N.ab+1900,"%z":N=>{N=N.Fb;var _e=0<=N;return N=Math.abs(N)/60,(_e?"+":"-")+("0000"+(N/60*100+N%60)).slice(-4)},"%Z":N=>N.Ib,"%%":()=>"%"},x=x.replace(/%%/g,"\0\0");for(Te in ge)x.includes(Te)&&(x=x.replace(new RegExp(Te,"g"),ge[Te](A)));return x=x.replace(/\0\0/g,"%"),Te=Ja(x),Te.length>b?0:(hi(Te,f),Te.length-1)}var Bn=f=>{try{f()}catch(b){ar(b)}};function ve(){var f=v,b={};for(let[x,A]of Object.entries(f))b[x]=typeof A=="function"?function(){on.push(x);try{return A.apply(null,arguments)}finally{Ye||(on.pop(),Ct&&lr===1&&on.length===0&&(lr=0,ur+=1,Bn(Xu),typeof Fibers<"u"&&Fibers.Pb()))}}:A;return b}var lr=0,Ct=null,Kt=0,on=[],bo={},yo={},mi=0,Ln=null,gi=[];function bi(){return new Promise((f,b)=>{Ln={resolve:f,reject:b}})}function yi(){var f=F(65548),b=f+12;i()[f>>>2>>>0]=b,i()[f+4>>>2>>>0]=b+65536,b=on[0];var x=bo[b];return x===void 0&&(x=mi++,bo[b]=x,yo[x]=b),b=x,o()[f+8>>>2>>>0]=b,f}function Qa(){var f=o()[Ct+8>>>2>>>0];return f=v[yo[f]],--ur,f()}function Mn(f){if(!Ye){if(lr===0){var b=!1,x=!1;f((A=0)=>{if(!Ye&&(Kt=A,b=!0,x)){lr=2,Bn(()=>Zu(Ct)),typeof Browser<"u"&&Browser.ib.vb&&Browser.ib.resume(),A=!1;try{var L=Qa()}catch(be){L=be,A=!0}var U=!1;if(!Ct){var K=Ln;K&&(Ln=null,(A?K.reject:K.resolve)(L),U=!0)}if(A&&!U)throw L}}),x=!0,b||(lr=1,Ct=yi(),typeof Browser<"u"&&Browser.ib.vb&&Browser.ib.pause(),Bn(()=>Yu(Ct)))}else lr===2?(lr=0,Bn(Ju),j(Ct),Ct=null,gi.forEach(A=>{if(!Ye)try{A(),Cn()}catch(L){Ot(L)}})):ar(`invalid state: ${lr}`);return Kt}}function vi(f){return Mn(b=>{f().then(b)})}we.hb();var c=[no,Xo,Qo,ti,ri,ni,En,ao,oi,ii,so,ai,Dr,uo,lo,co,po,ui,rn,mo,go,di,Rn,ci],m={r:function(f,b,x){return vi(async()=>{await u.xb(f,b,x)})},b:function(f,b,x){throw f>>>=0,new Zo(f).hb(b>>>0,x>>>0),Jo=f,Xa++,Jo},O:function(f){ee(f>>>0,!w,1,!y,131072,!1),we.ob()},n:function(f){f>>>=0,T?postMessage({cmd:"cleanupThread",thread:f}):we.mb(we.Qa[f])},K:ei,i:ti,U:ri,G:ni,I:En,y:ao,S:oi,M:ii,R:so,p:ai,H:Dr,E:uo,T:lo,F:co,q:()=>1,C:function(f,b){f>>>=0,f==b>>>0?setTimeout(()=>Gr()):T?postMessage({targetThread:f,cmd:"checkMailbox"}):(f=we.Qa[f])&&f.postMessage({cmd:"checkMailbox"})},L:function(f,b,x,A){b>>>=0,kn.length=x,A=A>>>0>>>3;for(var L=0;L<x;L++)kn[L]=a()[A+L>>>0];return f=0>f?Ur[-f-1]:c[f],we.ub=b,b=f.apply(null,kn),we.ub=0,b},N:Pn,W:function(f){I&&we.Qa[f>>>0].ref()},u:function(f,b,x){f=b+2097152>>>0<4194305-!!f?(f>>>0)+4294967296*b:NaN,x>>>=0,f=new Date(1e3*f),o()[x>>>2>>>0]=f.getUTCSeconds(),o()[x+4>>>2>>>0]=f.getUTCMinutes(),o()[x+8>>>2>>>0]=f.getUTCHours(),o()[x+12>>>2>>>0]=f.getUTCDate(),o()[x+16>>>2>>>0]=f.getUTCMonth(),o()[x+20>>>2>>>0]=f.getUTCFullYear()-1900,o()[x+24>>>2>>>0]=f.getUTCDay(),f=(f.getTime()-Date.UTC(f.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,o()[x+28>>>2>>>0]=f},v:function(f,b,x){f=b+2097152>>>0<4194305-!!f?(f>>>0)+4294967296*b:NaN,x>>>=0,f=new Date(1e3*f),o()[x>>>2>>>0]=f.getSeconds(),o()[x+4>>>2>>>0]=f.getMinutes(),o()[x+8>>>2>>>0]=f.getHours(),o()[x+12>>>2>>>0]=f.getDate(),o()[x+16>>>2>>>0]=f.getMonth(),o()[x+20>>>2>>>0]=f.getFullYear()-1900,o()[x+24>>>2>>>0]=f.getDay(),b=(yr(f.getFullYear())?si:fo)[f.getMonth()]+f.getDate()-1|0,o()[x+28>>>2>>>0]=b,o()[x+36>>>2>>>0]=-(60*f.getTimezoneOffset()),b=new Date(f.getFullYear(),6,1).getTimezoneOffset();var A=new Date(f.getFullYear(),0,1).getTimezoneOffset();f=(b!=A&&f.getTimezoneOffset()==Math.min(A,b))|0,o()[x+32>>>2>>>0]=f},w:function(f){f>>>=0;var b=new Date(o()[f+20>>>2>>>0]+1900,o()[f+16>>>2>>>0],o()[f+12>>>2>>>0],o()[f+8>>>2>>>0],o()[f+4>>>2>>>0],o()[f>>>2>>>0],0),x=o()[f+32>>>2>>>0],A=b.getTimezoneOffset(),L=new Date(b.getFullYear(),6,1).getTimezoneOffset(),U=new Date(b.getFullYear(),0,1).getTimezoneOffset(),K=Math.min(U,L);return 0>x?o()[f+32>>>2>>>0]=+(L!=U&&K==A):0<x!=(K==A)&&(L=Math.max(U,L),b.setTime(b.getTime()+6e4*((0<x?K:L)-A))),o()[f+24>>>2>>>0]=b.getDay(),x=(yr(b.getFullYear())?si:fo)[b.getMonth()]+b.getDate()-1|0,o()[f+28>>>2>>>0]=x,o()[f>>>2>>>0]=b.getSeconds(),o()[f+4>>>2>>>0]=b.getMinutes(),o()[f+8>>>2>>>0]=b.getHours(),o()[f+12>>>2>>>0]=b.getDate(),o()[f+16>>>2>>>0]=b.getMonth(),o()[f+20>>>2>>>0]=b.getYear(),f=b.getTime(),isNaN(f)?(o()[_()>>>2>>>0]=61,f=-1):f/=1e3,ke((sr=f,1<=+Math.abs(sr)?0<sr?+Math.floor(sr/4294967296)>>>0:~~+Math.ceil((sr-+(~~sr>>>0))/4294967296)>>>0:0)),f>>>0},s:po,t:ui,B:function(f,b,x){function A(ge){return(ge=ge.toTimeString().match(/\(([A-Za-z ]+)\)$/))?ge[1]:"GMT"}f>>>=0,b>>>=0,x>>>=0;var L=new Date().getFullYear(),U=new Date(L,0,1),K=new Date(L,6,1);L=U.getTimezoneOffset();var be=K.getTimezoneOffset(),me=Math.max(L,be);i()[f>>>2>>>0]=60*me,o()[b>>>2>>>0]=+(L!=be),f=A(U),b=A(K),f=ho(f),b=ho(b),be<L?(i()[x>>>2>>>0]=f,i()[x+4>>>2>>>0]=b):(i()[x>>>2>>>0]=b,i()[x+4>>>2>>>0]=f)},d:()=>{ar("")},c:function(f,b,x){return f>>>=0,b=li(b>>>0,x>>>0),Ur[f].apply(null,b)},k:function(f,b,x){return f>>>=0,b=li(b>>>0,x>>>0),Ur[f].apply(null,b)},o:()=>{},j:()=>Date.now(),V:()=>{throw ur+=1,"unwind"},D:function(){return 4294901760},f:()=>performance.timeOrigin+performance.now(),g:()=>I?(Uh(),Rr(Vh)).cpus().length:navigator.hardwareConcurrency,A:function(f){f>>>=0;var b=t().length;if(f<=b||4294901760<f)return!1;for(var x=1;4>=x;x*=2){var A=b*(1+.2/x);A=Math.min(A,f+100663296);var L=Math;A=Math.max(f,A);e:{L=(L.min.call(L,4294901760,A+(65536-A%65536)%65536)-ue.buffer.byteLength+65535)/65536;try{ue.grow(L),st();var U=1;break e}catch{}U=void 0}if(U)return!0}return!1},P:rn,Q:mo,J:An,h:go,m:di,x:Rn,l:ci,a:ue||u.wasmMemory,z:nn,e:function(f,b,x,A){return nn(f>>>0,b>>>0,x>>>0,A>>>0)}},v=function(){function f(x,A){return v=x.exports,v=ve(),v=Vy(),we.pb.push(v.Da),Ce.unshift(v.X),le=A,Nr(),v}var b={a:m};if(Tt++,u.instantiateWasm)try{return u.instantiateWasm(b,f)}catch(x){ie(`Module.instantiateWasm callback failed with error: ${x}`),d(x)}return $t(b,function(x){f(x.instance,x.module)}).catch(d),{}}();u._OrtInit=(f,b)=>(u._OrtInit=v.Y)(f,b),u._OrtGetLastError=(f,b)=>(u._OrtGetLastError=v.Z)(f,b),u._OrtCreateSessionOptions=(f,b,x,A,L,U,K,be,me,ge)=>(u._OrtCreateSessionOptions=v._)(f,b,x,A,L,U,K,be,me,ge),u._OrtAppendExecutionProvider=(f,b)=>(u._OrtAppendExecutionProvider=v.$)(f,b),u._OrtAddFreeDimensionOverride=(f,b,x)=>(u._OrtAddFreeDimensionOverride=v.aa)(f,b,x),u._OrtAddSessionConfigEntry=(f,b,x)=>(u._OrtAddSessionConfigEntry=v.ba)(f,b,x),u._OrtReleaseSessionOptions=f=>(u._OrtReleaseSessionOptions=v.ca)(f),u._OrtCreateSession=(f,b,x)=>(u._OrtCreateSession=v.da)(f,b,x),u._OrtReleaseSession=f=>(u._OrtReleaseSession=v.ea)(f),u._OrtGetInputOutputCount=(f,b,x)=>(u._OrtGetInputOutputCount=v.fa)(f,b,x),u._OrtGetInputName=(f,b)=>(u._OrtGetInputName=v.ga)(f,b),u._OrtGetOutputName=(f,b)=>(u._OrtGetOutputName=v.ha)(f,b),u._OrtFree=f=>(u._OrtFree=v.ia)(f),u._OrtCreateTensor=(f,b,x,A,L,U)=>(u._OrtCreateTensor=v.ja)(f,b,x,A,L,U),u._OrtGetTensorData=(f,b,x,A,L)=>(u._OrtGetTensorData=v.ka)(f,b,x,A,L),u._OrtReleaseTensor=f=>(u._OrtReleaseTensor=v.la)(f),u._OrtCreateRunOptions=(f,b,x,A)=>(u._OrtCreateRunOptions=v.ma)(f,b,x,A),u._OrtAddRunConfigEntry=(f,b,x)=>(u._OrtAddRunConfigEntry=v.na)(f,b,x),u._OrtReleaseRunOptions=f=>(u._OrtReleaseRunOptions=v.oa)(f),u._OrtCreateBinding=f=>(u._OrtCreateBinding=v.pa)(f),u._OrtBindInput=(f,b,x)=>(u._OrtBindInput=v.qa)(f,b,x),u._OrtBindOutput=(f,b,x,A)=>(u._OrtBindOutput=v.ra)(f,b,x,A),u._OrtClearBoundOutputs=f=>(u._OrtClearBoundOutputs=v.sa)(f),u._OrtReleaseBinding=f=>(u._OrtReleaseBinding=v.ta)(f),u._OrtRunWithBinding=(f,b,x,A,L)=>(u._OrtRunWithBinding=v.ua)(f,b,x,A,L),u._OrtRun=(f,b,x,A,L,U,K,be)=>(u._OrtRun=v.va)(f,b,x,A,L,U,K,be),u._OrtEndProfiling=f=>(u._OrtEndProfiling=v.wa)(f),u._JsepOutput=(f,b,x)=>(u._JsepOutput=v.xa)(f,b,x),u._JsepGetNodeName=f=>(u._JsepGetNodeName=v.ya)(f);var _=()=>(_=v.za)(),P=u._pthread_self=()=>(P=u._pthread_self=v.Aa)(),F=u._malloc=f=>(F=u._malloc=v.Ba)(f),j=u._free=f=>(j=u._free=v.Ca)(f);u.__emscripten_tls_init=()=>(u.__emscripten_tls_init=v.Da)();var ee=u.__emscripten_thread_init=(f,b,x,A,L,U)=>(ee=u.__emscripten_thread_init=v.Fa)(f,b,x,A,L,U);u.__emscripten_thread_crashed=()=>(u.__emscripten_thread_crashed=v.Ga)();var te=(f,b,x,A)=>(te=v.Ha)(f,b,x,A),Q=f=>(Q=v.Ia)(f),se=u.__emscripten_thread_exit=f=>(se=u.__emscripten_thread_exit=v.Ja)(f),$e=()=>($e=v.Ka)(),ke=f=>(ke=v.La)(f),B=(f,b)=>(B=v.Ma)(f,b),he=()=>(he=v.Na)(),De=f=>(De=v.Oa)(f),dr=f=>(dr=v.Pa)(f),vo=u.dynCall_ii=(f,b)=>(vo=u.dynCall_ii=v.Ra)(f,b),Yu=f=>(Yu=v.Sa)(f),Xu=()=>(Xu=v.Ta)(),Zu=f=>(Zu=v.Ua)(f),Ju=()=>(Ju=v.Va)();u.___start_em_js=1372216,u.___stop_em_js=1372377;function Vy(){var f=v;f=Object.assign({},f);var b=A=>()=>A()>>>0,x=A=>L=>A(L)>>>0;return f.za=b(f.za),f.Aa=b(f.Aa),f.Ba=x(f.Ba),f.emscripten_main_runtime_thread_id=b(f.emscripten_main_runtime_thread_id),f.Na=b(f.Na),f.Pa=x(f.Pa),f}u.wasmMemory=ue,u.stackAlloc=dr,u.stackSave=he,u.stackRestore=De,u.keepRuntimeAlive=()=>0<ur,u.UTF8ToString=rt,u.stringToUTF8=tn,u.lengthBytesUTF8=en,u.ExitStatus=_n,u.PThread=we;var wi;lt=function f(){wi||Qu(),wi||(lt=f)};function Qu(){if(!(0<Tt))if(T)l(u),T||On(Ce),startWorker(u);else{if(u.preRun)for(typeof u.preRun=="function"&&(u.preRun=[u.preRun]);u.preRun.length;)de.unshift(u.preRun.shift());On(de),0<Tt||wi||(wi=!0,u.calledRun=!0,Ye||(T||On(Ce),l(u),T||On(zt)))}}return Qu(),e.ready}})();typeof Wh=="object"&&typeof hu=="object"?hu.exports=Gh:typeof define=="function"&&define.amd&&define([],()=>Gh)});var qh=Xe((tP,$x)=>{$x.exports='"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs"),vm=require("vm");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,"utf8"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed?.(),a}}self.onmessage=handleMessage;\n'});var Kh,_x,mu,gu,va,jh,Sx,Ix,Ax,Yh,dt,Zn=D(()=>{"use strict";Kh=zh();_x=Hh(),gu=!1,va=!1,jh=!1,Sx=r=>{if(r===1)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+r+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+r+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},Ix=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Ax=(r,e)=>r?e?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":e?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Yh=async r=>{if(gu)return Promise.resolve();if(va)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(jh)throw new Error("previous call to 'initializeWebAssembly()' failed.");va=!0;let e=r.initTimeout,n=r.numThreads,t=r.simd,o=Sx(n),i=t&&Ix(),s=r.wasmPaths,a=typeof s=="string"?s:void 0,u=Ax(i,o),l=typeof s=="object"?s[u]:void 0,d=!1,p=[];if(e>0&&p.push(new Promise(h=>{setTimeout(()=>{d=!0,h()},e)})),p.push(new Promise((h,g)=>{let y=o?_x:Kh,w={locateFile:(I,T)=>{if(o&&I.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([qh()],{type:"text/javascript"}));if(I.endsWith(".wasm")){if(l)return l;let $=a??T;return u==="ort-wasm-simd.wasm"?$+"ort-wasm-simd.jsep.wasm":u==="ort-wasm-simd-threaded.wasm"?$+"ort-wasm-simd-threaded.jsep.wasm":$+u}return T+I}};if(o)if(w.numThreads=n,typeof Blob>"u")w.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let I=`var ortWasmThreaded=${y.toString()};`;w.mainScriptUrlOrBlob=new Blob([I],{type:"text/javascript"})}y(w).then(I=>{va=!1,gu=!0,mu=I,h()},I=>{va=!1,jh=!0,g(I)})})),await Promise.race(p),d)throw new Error(`WebAssembly backend initializing failed due to timeout: ${e}ms`)},dt=()=>{if(gu&&mu)return mu;throw new Error("WebAssembly is not initialized yet.")}});var mt,Mo,et,wa=D(()=>{"use strict";Zn();mt=(r,e)=>{let n=dt(),t=n.lengthBytesUTF8(r)+1,o=n._malloc(t);return n.stringToUTF8(r,o,t),e.push(o),o},Mo=(r,e,n,t)=>{if(typeof r=="object"&&r!==null){if(n.has(r))throw new Error("Circular reference in options");n.add(r)}Object.entries(r).forEach(([o,i])=>{let s=e?e+o:o;if(typeof i=="object")Mo(i,s+".",n,t);else if(typeof i=="string"||typeof i=="number")t(s,i.toString());else if(typeof i=="boolean")t(s,i?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof i}`)})},et=r=>{let e=dt(),n=e.stackSave();try{let t=e.stackAlloc(8);e._OrtGetLastError(t,t+4);let o=e.HEAP32[t/4],i=e.HEAPU32[t/4+1],s=i?e.UTF8ToString(i):"";throw new Error(`${r} ERROR_CODE: ${o}, ERROR_MESSAGE: ${s}`)}finally{e.stackRestore(n)}}});var Xh,Zh=D(()=>{"use strict";Zn();wa();Xh=r=>{let e=dt(),n=0,t=[],o=r||{};try{if(r?.logSeverityLevel===void 0)o.logSeverityLevel=2;else if(typeof r.logSeverityLevel!="number"||!Number.isInteger(r.logSeverityLevel)||r.logSeverityLevel<0||r.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${r.logSeverityLevel}`);if(r?.logVerbosityLevel===void 0)o.logVerbosityLevel=0;else if(typeof r.logVerbosityLevel!="number"||!Number.isInteger(r.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${r.logVerbosityLevel}`);r?.terminate===void 0&&(o.terminate=!1);let i=0;return r?.tag!==void 0&&(i=mt(r.tag,t)),n=e._OrtCreateRunOptions(o.logSeverityLevel,o.logVerbosityLevel,!!o.terminate,i),n===0&&et("Can't create run options."),r?.extra!==void 0&&Mo(r.extra,"",new WeakSet,(s,a)=>{let u=mt(s,t),l=mt(a,t);e._OrtAddRunConfigEntry(n,u,l)!==0&&et(`Can't set a run config entry: ${s} - ${a}.`)}),[n,t]}catch(i){throw n!==0&&e._OrtReleaseRunOptions(n),t.forEach(s=>e._free(s)),i}}});var Ox,Ex,Cx,Px,Jh,Qh=D(()=>{"use strict";Zn();wa();Ox=r=>{switch(r){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${r}`)}},Ex=r=>{switch(r){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${r}`)}},Cx=r=>{r.extra||(r.extra={}),r.extra.session||(r.extra.session={});let e=r.extra.session;e.use_ort_model_bytes_directly||(e.use_ort_model_bytes_directly="1"),r.executionProviders&&r.executionProviders.some(n=>(typeof n=="string"?n:n.name)==="webgpu")&&(r.enableMemPattern=!1)},Px=(r,e,n)=>{for(let t of e){let o=typeof t=="string"?t:t.name;switch(o){case"webnn":if(o="WEBNN",typeof t!="string"){let s=t;if(s?.deviceType){let a=mt("deviceType",n),u=mt(s.deviceType,n);dt()._OrtAddSessionConfigEntry(r,a,u)!==0&&et(`Can't set a session config entry: 'deviceType' - ${s.deviceType}.`)}if(s?.numThreads){let a=s.numThreads;(typeof a!="number"||!Number.isInteger(a)||a<0)&&(a=0);let u=mt("numThreads",n),l=mt(a.toString(),n);dt()._OrtAddSessionConfigEntry(r,u,l)!==0&&et(`Can't set a session config entry: 'numThreads' - ${s.numThreads}.`)}if(s?.powerPreference){let a=mt("powerPreference",n),u=mt(s.powerPreference,n);dt()._OrtAddSessionConfigEntry(r,a,u)!==0&&et(`Can't set a session config entry: 'powerPreference' - ${s.powerPreference}.`)}}break;case"webgpu":if(o="JS",typeof t!="string"){let s=t;if(s?.preferredLayout){if(s.preferredLayout!=="NCHW"&&s.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${s.preferredLayout}`);let a=mt("preferredLayout",n),u=mt(s.preferredLayout,n);dt()._OrtAddSessionConfigEntry(r,a,u)!==0&&et(`Can't set a session config entry: 'preferredLayout' - ${s.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${o}`)}let i=mt(o,n);dt()._OrtAppendExecutionProvider(r,i)!==0&&et(`Can't append execution provider: ${o}.`)}},Jh=r=>{let e=dt(),n=0,t=[],o=r||{};Cx(o);try{let i=Ox(o.graphOptimizationLevel??"all"),s=Ex(o.executionMode??"sequential"),a=typeof o.logId=="string"?mt(o.logId,t):0,u=o.logSeverityLevel??2;if(!Number.isInteger(u)||u<0||u>4)throw new Error(`log serverity level is not valid: ${u}`);let l=o.logVerbosityLevel??0;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log verbosity level is not valid: ${l}`);let d=typeof o.optimizedModelFilePath=="string"?mt(o.optimizedModelFilePath,t):0;if(n=e._OrtCreateSessionOptions(i,!!o.enableCpuMemArena,!!o.enableMemPattern,s,!!o.enableProfiling,0,a,u,l,d),n===0&&et("Can't create session options."),o.executionProviders&&Px(n,o.executionProviders,t),o.freeDimensionOverrides)for(let[p,h]of Object.entries(o.freeDimensionOverrides)){if(typeof p!="string")throw new Error(`free dimension override name must be a string: ${p}`);if(typeof h!="number"||!Number.isInteger(h)||h<0)throw new Error(`free dimension override value must be a non-negative integer: ${h}`);let g=mt(p,t);e._OrtAddFreeDimensionOverride(n,g,h)!==0&&et(`Can't set a free dimension override: ${p} - ${h}.`)}return o.extra!==void 0&&Mo(o.extra,"",new WeakSet,(p,h)=>{let g=mt(p,t),y=mt(h,t);e._OrtAddSessionConfigEntry(n,g,y)!==0&&et(`Can't set a session config entry: ${p} - ${h}.`)}),[n,t]}catch(i){throw n!==0&&e._OrtReleaseSessionOptions(n),t.forEach(s=>e._free(s)),i}}});var bu,Ht,zo,xa,No,Ta,yu,ut=D(()=>{"use strict";bu=r=>{switch(r){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${r}`)}},Ht=r=>{switch(r){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${r}`)}},zo=r=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][r],xa=r=>{switch(r){case"float16":return Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${r}`)}},No=r=>{switch(r){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${r}`)}},Ta=r=>r==="float32"||r==="int32"||r==="int64"||r==="bool"||r==="float16"||r==="uint32",yu=r=>{switch(r){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${r}`)}}});var Fo,vu=D(()=>{"use strict";Fo=async r=>{if(typeof r=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(r))}catch(e){if(e.code==="ERR_FS_FILE_TOO_LARGE"){let n=(void 0)(r),t=[];for await(let o of n)t.push(o);return new Uint8Array(Buffer.concat(t))}throw e}else{let e=await fetch(r);if(!e.ok)throw new Error(`failed to load external data file: ${r}`);let n=e.headers.get("Content-Length"),t=n?parseInt(n,10):0;if(t<1073741824)return new Uint8Array(await e.arrayBuffer());{if(!e.body)throw new Error(`failed to load external data file: ${r}, no response body.`);let o=e.body.getReader(),i;try{i=new ArrayBuffer(t)}catch(a){if(a instanceof RangeError){let u=Math.ceil(t/65536);i=new WebAssembly.Memory({initial:u,maximum:u}).buffer}else throw a}let s=0;for(;;){let{done:a,value:u}=await o.read();if(a)break;let l=u.byteLength;new Uint8Array(i,s,l).set(u),s+=l}return new Uint8Array(i,0,t)}}else return r instanceof Blob?new Uint8Array(await r.arrayBuffer()):r instanceof Uint8Array?r:new Uint8Array(r)}});var kx,Dx,em,tm,rm,Rx,ot,Jr=D(()=>{"use strict";ut();kx=["V","I","W","E","F"],Dx=(r,e)=>{console.log(`[${kx[r]},${new Date().toISOString()}]${e}`)},rm=(r,e)=>{em=r,tm=e},Rx=(r,e)=>{let n=No(r),t=No(em);n>=t&&Dx(n,typeof e=="function"?e():e)},ot=(...r)=>{tm&&Rx(...r)}});var nm,om=D(()=>{"use strict";ut();nm=(r,e)=>new(xa(e))(r)});var $a=D(()=>{"use strict"});var _a,Bx,im,xu,wu,sm,um=D(()=>{"use strict";Jr();$a();_a=r=>Math.ceil(r/16)*16,Bx=1,im=()=>Bx++,xu=async(r,e,n,t)=>{let o=_a(n),i=r.device.createBuffer({size:o,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let s=r.getCommandEncoder();r.endComputePass(),s.copyBufferToBuffer(e,0,i,0,o),r.flush(),await i.mapAsync(GPUMapMode.READ);let a=i.getMappedRange();if(t){let u=t();return u.set(new Uint8Array(a,0,n)),u}else return new Uint8Array(a.slice(0,n))}finally{i.destroy()}},wu=class{constructor(e){this.backend=e;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map}upload(e,n){let t=n.buffer,o=n.byteOffset,i=n.byteLength,s=_a(i),a=this.storageCache.get(e);if(!a)throw new Error("gpu data for uploading does not exist");if(a.originalSize!==i)throw new Error(`inconsistent data size. gpu data size=${a.originalSize}, data size=${i}`);let u=this.backend.device.createBuffer({mappedAtCreation:!0,size:s,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),l=u.getMappedRange();new Uint8Array(l).set(new Uint8Array(t,o,i)),u.unmap();let d=this.backend.getCommandEncoder();this.backend.endComputePass(),d.copyBufferToBuffer(u,0,a.gpuData.buffer,0,s),ot("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`),this.buffersForUploadingPending.push(u)}memcpy(e,n){let t=this.storageCache.get(e);if(!t)throw new Error("source gpu data for memcpy does not exist");let o=this.storageCache.get(n);if(!o)throw new Error("destination gpu data for memcpy does not exist");if(t.originalSize!==o.originalSize)throw new Error("inconsistent source and destination gpu data size");let i=_a(t.originalSize),s=this.backend.getCommandEncoder();this.backend.endComputePass(),s.copyBufferToBuffer(t.gpuData.buffer,0,o.gpuData.buffer,0,i)}registerExternalBuffer(e,n,t){let o;if(t){if(o=this.externalBuffers.get(t),o===void 0)throw new Error("previous buffer is not registered");if(e===t)return ot("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${n}) => id=${o}, buffer is the same, skip.`),o;this.externalBuffers.delete(t)}else o=im();return this.storageCache.set(o,{gpuData:{id:o,type:0,buffer:e},originalSize:n}),this.externalBuffers.set(e,o),ot("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${n}) => id=${o}, registered.`),o}unregisterExternalBuffer(e){let n=this.externalBuffers.get(e);n!==void 0&&(this.storageCache.delete(n),this.externalBuffers.delete(e),ot("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${n}`))}create(e,n=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let t=_a(e),o,i=(n&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,s=(n&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(i||s){let u=i?this.freeBuffers:this.freeUniformBuffers,l=u.get(t);l||(l=[],u.set(t,l)),l.length>0?o=l.pop():o=this.backend.device.createBuffer({size:t,usage:n})}else o=this.backend.device.createBuffer({size:t,usage:n});let a={id:im(),type:0,buffer:o};return this.storageCache.set(a.id,{gpuData:a,originalSize:e}),ot("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${a.id}`),a}get(e){return this.storageCache.get(e)?.gpuData}release(e){let n=this.storageCache.get(e);if(!n)throw new Error("releasing data does not exist");return ot("verbose",()=>`[WebGPU] GpuDataManager.release(id=${e}), gpuDataId=${n.gpuData.id}`),this.storageCache.delete(e),this.buffersPending.push(n.gpuData.buffer),n.originalSize}async download(e,n){let t=this.storageCache.get(e);if(!t)throw new Error("data does not exist");await xu(this.backend,t.gpuData.buffer,t.originalSize,n)}refreshPendingBuffers(){for(let e of this.buffersForUploadingPending)e.destroy();this.buffersForUploadingPending=[];for(let e of this.buffersPending)(e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(e.size).push(e):(e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(e.size).push(e):e.destroy();this.buffersPending=[]}dispose(){this.freeBuffers.forEach(e=>{e.forEach(n=>{n.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(n=>{n.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map}},sm=(...r)=>new wu(...r)});var Tu,Ae,xt=D(()=>{"use strict";Tu=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},Ae=r=>new Tu(r)});var $u,Sr,H,xn,Sa,Ia,Aa,Le=D(()=>{"use strict";$u=class{static calcMatMulShape(e,n){return e[1]!==n[0]?void 0:[e[0],n[1]]}},Sr=class{static calcShape(e,n,t=!1){let o=e.length,i=n.length;if(o===0)return n;if(i===0)return e;let s=Math.max(e.length,n.length),a=new Array(s);if(t){if(o<2||i<2)return;let u=$u.calcMatMulShape([e[o-2],e[o-1]],[n[i-2],n[i-1]]);if(u===void 0)return;[a[s-2],a[s-1]]=u}for(let u=t?3:1;u<=s;u++){let l=o-u<0?1:e[o-u],d=i-u<0?1:n[i-u];if(l!==d&&l>1&&d>1)return;a[s-u]=Math.max(l,d)}return a}static isValidBroadcast(e,n){let t=e.length,o=n.length;if(t>o)return!1;for(let i=1;i<=t;i++)if(e[t-i]!==1&&e[t-i]!==n[o-i])return!1;return!0}},H=class r{static size(e){return r.getSizeFromDimensionRange(e,0,e.length)}static sizeFromDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,n,e.length)}static sizeToDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeToDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,0,n)}static getSizeFromDimensionRange(e,n,t){let o=1;for(let i=n;i<t;i++){if(e[i]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");o*=e[i]}return o}static computeStrides(e){let n=e.length;if(n===0)return[];if(n===1)return[1];let t=new Array(n);t[n-1]=1,t[n-2]=e[n-1];for(let o=n-3;o>=0;--o)t[o]=t[o+1]*e[o+1];return t}static normalizeAxis(e,n){if(e<-n&&e>=n)throw new Error("unsupported axis for this operation.");return e<0?e+n:e}static normalizeAxes(e,n){return e.map(t=>this.normalizeAxis(t,n??e.length))}static sortBasedOnPerm(e,n){return n?n.map(t=>e[t]):e.slice().reverse()}static padShape(e,n){let t=e.length;return e.map((o,i)=>o+n[i]+n[i+t])}static areEqual(e,n){return e.length!==n.length?!1:e.every((t,o)=>t===n[o])}},xn=class r{static adjustPoolAttributes(e,n,t,o,i,s){if(!e&&t.length!==n.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let a=0;a<n.length-2;a++)a>=t.length?t.push(n[a+2]):t[a]=n[a+2];for(let a=0;a<t.length;a++)if(a<o.length){if(o[a]<0)throw new Error("strides should be greater than or equal to 1")}else o.push(1);for(let a=0;a<t.length;a++)if(a<i.length){if(i[a]<0)throw new Error("dilations should be greater than or equal to 1")}else i.push(1);for(let a=0;a<t.length*2;a++)if(a<s.length){if(s[a]<0)throw new Error("pad should be greater than or equal to 1")}else s.push(0);for(let a=0;a<t.length;a++){if(t[a]<=0)throw new Error("kernel shapes need to be greater than 0");if(s[a]>=t[a]||s[a+t.length]>=t[a])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(e,n,t,o,i,s,a){if(a){if(i.length!==2*(e.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(n.length!==e.length-2)throw new Error("length of strides should be the length of data dimensions");if(o.length!==e.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let u=0;u<e.length-2;u++)r.adjustPadAndReturnShape(e[u+(s?1:2)],n[u],t[u],o[u],i,u,u+e.length-2,a)}}static computePoolOutputShape(e,n,t,o,i,s,a){if(n.length<=0)throw new Error("input shape must be of size greater than 0");let u=[n[0],n[1]];return r.computeShapeHelper(e,n,u,t,o,i,s,a),u}static computeConvOutputShape(e,n,t,o,i,s,a){if(e.length<=0||n.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let u=[e[0],n[0]];return r.computeShapeHelper(!1,e,u,t,o,i,s,a),u}static computeShapeHelper(e,n,t,o,i,s,a,u){if(e)for(let l=0;l<n.length-2;l++)t.push(1);else for(let l=0;l<n.length-2;l++)t.push(r.adjustPadAndReturnShape(n[l+2],o[l],i[l],s[l],a,l,l+n.length-2,u))}static adjustPadAndReturnShape(e,n,t,o,i,s,a,u){let l=t*(o-1)+1;if(u&&u!=="NOTSET")switch(u){case"VALID":return i[s]=0,i[a]=0,Math.floor((e-l)/n+1);case"SAME_LOWER":case"SAME_UPPER":if(t!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let p=((e+n-1)/n-1)*n+o-e;return i[s]=Math.floor(u==="SAME_LOWER"?(p+1)/2:p/2),i[a]=p-i[s],Math.floor((e+p-o)/n+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((e+i[s]+i[a]-l)/n+1)}},Sa=class{static getShapeOfGemmResult(e,n,t,o,i){if(e.length!==2||t.length!==2)throw new Error("shape need to be of size 2");let s,a,u;n?(s=e[1],a=e[0]):(s=e[0],a=e[1]);let l=-1;if(o?(u=t[0],l=1):(u=t[1],l=0),t[l]!==a)throw new Error("dimension mismatch");if(s<=0||u<=0||a<=0)throw new Error("invalid shape specified");if(i&&!Sr.isValidBroadcast(i,[s,u]))throw new Error("gemm: invalid bias shape for broadcast");return[s,u,a]}},Ia=-34028234663852886e22,Aa=34028234663852886e22});var Lx,Su,yt,Ir,J,vt,Dt,gr,qt,xe,Iu,W,ne,Oa,_u,lm,Jn,tt,Be=D(()=>{"use strict";ut();Le();Lx=64,Su=(r,e)=>{if(e===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(r){case 10:return e>1?`vec${e}<f16>`:"f16";case 1:return e>1?`vec${e}<f32>`:"f32";case 6:return e>1?`vec${e}<i32>`:"i32";case 12:return e>1?`vec${e}<u32>`:"u32";case 7:if(e>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(e>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(e!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${r}`)}},yt=(r,e=1)=>{let n=Su(r,e);return typeof n=="string"?n:n[0]},Ir=(r,e=1)=>{let n=Su(r,e);return typeof n=="string"?n:n[1]},J=r=>r.length===0?[]:[{type:"uint32",data:r},{type:"uint32",data:H.computeStrides(r)}],vt=r=>r%4===0?4:r%2===0?2:1,Dt=(r="f32",e,n="0")=>!e||e===1?`${r}(${n})`:`vec${e}<${r}>(${n})`,gr=(r,e,n)=>r==="f32"?n:e===1?`f32(${n})`:`vec${e}f(${n})`,qt=(r,e)=>e===4?`(${r}.x + ${r}.y + ${r}.z + ${r}.w)`:e===2?`(${r}.x + ${r}.y)`:e===3?`(${r}.x + ${r}.y + ${r}.z)`:r,xe=(r,e,n)=>r.startsWith("uniforms.")&&n>4?typeof e=="string"?`${r}[(${e}) / 4][(${e}) % 4]`:`${r}[${Math.floor(e/4)}][${e%4}]`:n>1?`${r}[${e}]`:r,Iu=(r,e,n,t,o)=>{let i=typeof n=="number",s=i?n:n.length,a=[...new Array(s).keys()],u=s<2?"u32":s<=4?`vec${s}<u32>`:`array<u32, ${s}>`,l=Su(e,o),d=typeof l=="string"?l:l[1],p=typeof l=="string"?l:l[0],h={indices:u,value:d,storage:p,tensor:e},g=Z=>typeof Z=="string"?Z:`${Z}u`,y={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},w=i?"uniforms.":"",I=`${w}${r}_shape`,T=`${w}${r}_strides`,$="";for(let Z=0;Z<s-1;Z++)$+=`
    let dim${Z} = current / ${xe(T,Z,s)};
    let rest${Z} = current % ${xe(T,Z,s)};
    indices[${Z}] = dim${Z};
    current = rest${Z};
    `;$+=`indices[${s-1}] = current;`;let O=s<2?"":`
  fn o2i_${r}(offset: u32) -> ${h.indices} {
    var indices: ${h.indices};
    var current = offset;
    ${$}
    return indices;
  }`,C=Z=>(y.offsetToIndices=!0,s<2?Z:`o2i_${r}(${Z})`),M=[];if(s>=2)for(let Z=s-1;Z>=0;Z--)M.push(`${xe(T,Z,s)} * (indices[${Z}])`);let R=s<2?"":`
  fn i2o_${r}(indices: ${h.indices}) -> u32 {
    return ${M.join("+")};
  }`,G=Z=>(y.indicesToOffset=!0,s<2?Z:`i2o_${r}(${Z})`),q=(...Z)=>s===0?"0u":`${h.indices}(${Z.map(g).join(",")})`,X=(Z,de)=>s<2?`${Z}`:`${xe(Z,de,s)}`,z=(Z,de,Ce)=>s<2?`${Z}=${Ce};`:`${xe(Z,de,s)}=${Ce};`,V={},ie=(Z,de)=>{y.broadcastedIndicesToOffset=!0;let Ce=`${de.name}broadcastedIndicesTo${r}Offset`;if(Ce in V)return`${Ce}(${Z})`;let zt=[];for(let Tt=s-1;Tt>=0;Tt--){let ct=de.indicesGet("outputIndices",Tt+de.rank-s);zt.push(`${X(T,Tt)} * (${ct} % ${X(I,Tt)})`)}return V[Ce]=`fn ${Ce}(outputIndices: ${de.type.indices}) -> u32 {
             return ${zt.length>0?zt.join("+"):"0u"};
           }`,`${Ce}(${Z})`},ue=(Z,de)=>(()=>{if(h.storage===h.value)return`${r}[${Z}]=${de};`;if(h.storage==="vec2<u32>"&&h.value==="i32")return`${r}[${Z}]=vec2<u32>(u32(${de}), select(0u, 0xFFFFFFFFu, ${de} < 0));`;if(h.storage==="vec2<u32>"&&h.value==="u32")return`${r}[${Z}]=vec2<u32>(u32(${de}), 0u);`;if(h.storage==="u32"&&h.value==="vec4<bool>")return`${r}[${Z}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${de}));`;throw new Error(`not supported combination of storage type ${h.storage} and value type ${h.value} yet`)})(),le=Z=>(()=>{if(h.storage===h.value)return`${r}[${Z}]`;if(h.storage==="vec2<u32>"&&h.value==="i32")return`i32(${r}[${Z}].x)`;if(h.storage==="vec2<u32>"&&h.value==="u32")return`u32(${r}[${Z}].x)`;if(h.storage==="u32"&&h.value==="vec4<bool>")return`vec4<bool>(bool(${r}[${Z}] & 0xFFu), bool(${r}[${Z}] & 0xFF00u), bool(${r}[${Z}] & 0xFF0000u), bool(${r}[${Z}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${h.storage} and value type ${h.value} yet`)})(),Ye=s<2?"":`
  fn get_${r}ByIndices(indices: ${h.indices}) -> ${d} {
    return ${le(`i2o_${r}(indices)`)};
  }`,it=s<2?"":(()=>{let Z=a.map(Ce=>`d${Ce}: u32`).join(", "),de=a.map(Ce=>`d${Ce}`).join(", ");return`
  fn get_${r}(${Z}) -> ${d} {
    return get_${r}ByIndices(${q(de)});
  }`})(),Se=(...Z)=>{if(Z.length!==s)throw new Error(`indices length must be ${s}`);let de=Z.map(g).join(",");return s===0?le("0u"):s===1?le(de[0]):(y.get=!0,y.getByIndices=!0,y.indicesToOffset=!0,`get_${r}(${de})`)},je=Z=>s<2?le(Z):(y.getByIndices=!0,y.indicesToOffset=!0,`get_${r}ByIndices(${Z})`),Oe=s<2?"":`
  fn set_${r}ByIndices(indices: ${h.indices}, value: ${d}) {
    ${ue(`i2o_${r}(indices)`,"value")}
  }`,Ee=s<2?"":(()=>{let Z=a.map(Ce=>`d${Ce}: u32`).join(", "),de=a.map(Ce=>`d${Ce}`).join(", ");return`
  fn set_${r}(${Z}, value: ${d}) {
    set_${r}ByIndices(${q(de)}, value);
  }`})();return{impl:()=>{let Z=[],de=!1;return y.offsetToIndices&&(Z.push(O),de=!0),y.indicesToOffset&&(Z.push(R),de=!0),y.broadcastedIndicesToOffset&&(Object.values(V).forEach(Ce=>Z.push(Ce)),de=!0),y.set&&(Z.push(Ee),de=!0),y.setByIndices&&(Z.push(Oe),de=!0),y.get&&(Z.push(it),de=!0),y.getByIndices&&(Z.push(Ye),de=!0),!i&&de&&Z.unshift(`const ${I} = ${h.indices}(${n.join(",")});`,`const ${T} = ${h.indices}(${H.computeStrides(n).join(",")});`),Z.join(`
`)},type:h,offsetToIndices:C,indicesToOffset:G,broadcastedIndicesToOffset:ie,indices:q,indicesGet:X,indicesSet:z,set:(...Z)=>{if(Z.length!==s+1)throw new Error(`indices length must be ${s}`);let de=Z[s];if(typeof de!="string")throw new Error("value must be string");let Ce=Z.slice(0,s).map(g).join(",");return s===0?ue("0u",de):s===1?ue(Ce[0],de):(y.set=!0,y.setByIndices=!0,y.indicesToOffset=!0,`set_${r}(${Ce}, ${de})`)},setByOffset:ue,setByIndices:(Z,de)=>s<2?ue(Z,de):(y.setByIndices=!0,y.indicesToOffset=!0,`set_${r}ByIndices(${Z}, ${de});`),get:Se,getByOffset:le,getByIndices:je,usage:t,name:r,strides:T,shape:I,rank:s}},W=(r,e,n,t=1)=>Iu(r,e,n,"input",t),ne=(r,e,n,t=1)=>Iu(r,e,n,"output",t),Oa=(r,e,n,t=1)=>Iu(r,e,n,"internal",t),_u=class{constructor(e){this.normalizedDispatchGroup=e;this.internalVariables=[];this.variables=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e=="number"?`${e}u`:e}) { return; }`}mainStart(e=Lx){let n=typeof e=="number"?e:e[0],t=typeof e=="number"?1:e[1],o=typeof e=="number"?1:e[2],i=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,s=i?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,a=i?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${n*t*o}u + local_idx;`;return`@compute @workgroup_size(${n}, ${t}, ${o})
  fn main(${s}) {
    ${a}
  `}appendVariableUniforms(e){e.rank!==0&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,n){if(e.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let t=e.usage==="input"?"read":"read_write",o=e.type.storage;return`@group(0) @binding(${n}) var<storage, ${t}> ${e.name}: array<${o}>;`}declareVariables(...e){return e.map(n=>this.declareVariable(n,this.variableIndex++)).join(`
`)}registerInternalVariable(e){if(e.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach(n=>this.registerInternalVariable(n)),this}registerUniform(e,n,t=1){return this.uniforms.push({name:e,type:n,length:t}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let e=[];for(let{name:n,type:t,length:o}of this.uniforms)if(o&&o>4)e.push(`${n}:array<vec4<${t}>, ${Math.ceil(o/4)}>`);else{let i=o==null||o===1?t:`vec${o}<${t}>`;e.push(`${n}:${i}`)}return`
      struct Uniforms { ${e.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(e=>e.impl()).join(`
`)+this.internalVariables.map(e=>e.impl()).join(`
`)}},lm=r=>new _u(r),Jn=(r,e)=>{let n=r.length,t=[];for(let o=0;o<n;o++){let i=n-1-o,s=r[i]||1;(e[e.length-1-o]||1)>1&&s===1&&t.unshift(i)}return t},tt=r=>!0});var Mx,dm,zx,Nx,br,cm,fm,Qn=D(()=>{"use strict";Le();xt();Be();Mx=r=>{if(!r||r.length!==1)throw new Error("Transpose requires 1 input.")},dm=(r,e)=>e&&e.length!==r?[...new Array(r).keys()].reverse():e,zx=(r,e)=>H.sortBasedOnPerm(r,dm(r.length,e)),Nx=(r,e,n,t)=>{let o=[];o.push(`fn perm(i: ${t.type.indices}) -> ${n.type.indices} {
    var a: ${n.type.indices};`);for(let i=0;i<e;++i)o.push(n.indicesSet("a",r[i],`i[${i}]`));return o.push("return a;}"),o.join(`
`)},br=(r,e)=>{let n=r.dataType,t=r.dims.length,o=dm(t,e),i=tt(t),s=zx(r.dims,o),a=i?s.length:s,u=i?t:r.dims,l=ne("output",n,a),d=W("a",n,u),p=h=>`
  ${h.registerUniform("output_size","u32").declareVariables(d,l)}

  ${Nx(o,t,d,l)}

  ${h.mainStart()}
    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${l.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${l.setByOffset("global_idx",d.getByIndices("aIndices"))}
  }`;return{name:"Transpose",shaderCache:{hint:`${e}`,inputDependencies:i?["rank"]:["dims"]},getRunData:h=>{let g=H.size(s);return{outputs:[{dims:s,dataType:h[0].dataType}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:i?[{type:"uint32",data:g},...J(h[0].dims),...J(s)]:[{type:"uint32",data:g}]}},getShaderSource:p}},cm=(r,e)=>{Mx(r.inputs),r.compute(br(r.inputs[0],e.perm))},fm=r=>Ae({perm:r.perm})});var Fx,Vx,Ux,Gx,Wx,Hx,qx,jx,Kx,Yx,Ar,pm,hm,mm,gm,bm,ym,vm,wm,xm,Tm,$m=D(()=>{"use strict";Le();Be();Ea();Qn();Fx={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},Vx={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},Ux={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},Gx={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},Wx=(r,e)=>{let n=[];for(let t=e-r;t<e;++t)n.push(t);return n},Hx=(r,e)=>{let n=[],t=r.length;for(let i=0;i<t;i++)e.indexOf(i)===-1&&n.push(r[i]);let o=e.map(i=>r[i]);return[n,o]},qx=(r,e)=>{let n=r.length+e.length,t=[],o=0;for(let i=0;i<n;i++)e.indexOf(i)===-1?t.push(r[o++]):t.push(1);return t},jx=(r,e)=>{for(let n=0;n<r.length;++n)if(r[r.length-n-1]!==e-1-n)return!1;return!0},Kx=(r,e)=>{let n=[];if(!jx(r,e)){for(let t=0;t<e;++t)r.indexOf(t)===-1&&n.push(t);r.forEach(t=>n.push(t))}return n},Yx=(r,e,n,t,o,i,s)=>{let a=n[0].dims,u=H.size(i),l=H.size(s),d=W("_A",n[0].dataType,a),p=ne("output",o,i),h=32,g=`
          var<workgroup> aBestValues : array<${p.type.storage}, ${h}>;
       `;return{name:r,shaderCache:e,getShaderSource:w=>`
        ${w.registerUniform("reduceSize","u32").declareVariables(d,p)}
        ${g}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${w.mainStart(h)}

          let outputIndex = global_idx / ${h};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = ${p.type.storage}(${Ux[t]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${h}) {
           let candidate = ${p.type.storage}(${d.getByOffset("offset + k")});
           bestValue = ${Fx[t]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${h}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${Vx[t]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${p.setByOffset("outputIndex",`${t==="mean"?`bestValue / ${p.type.storage}(uniforms.reduceSize)`:`${Gx[t]}`}`)};
         }
        }`,getRunData:()=>({outputs:[{dims:i,dataType:o}],dispatchGroup:{x:u},programUniforms:[{type:"uint32",data:l}]})}},Ar=(r,e,n,t)=>{let o=r.inputs.length===1?n:Au(r.inputs,n),i=o.axes;i.length===0&&!o.noopWithEmptyAxes&&(i=r.inputs[0].dims.map((g,y)=>y));let s=H.normalizeAxes(i,r.inputs[0].dims.length),a=s,u=r.inputs[0],l=Kx(a,r.inputs[0].dims.length);l.length>0&&(u=r.compute(br(r.inputs[0],l),{inputs:[0],outputs:[-1]})[0],a=Wx(a.length,u.dims.length));let[d,p]=Hx(u.dims,a),h=d;o.keepDims&&(h=qx(d,s)),r.compute(Yx(e,{hint:o.cacheKey,inputDependencies:["type"]},[u],t,r.inputs[0].dataType,h,p),{inputs:[u]})},pm=(r,e)=>{Ar(r,"ReduceMeanShared",e,"mean")},hm=(r,e)=>{Ar(r,"ReduceL1Shared",e,"l1")},mm=(r,e)=>{Ar(r,"ReduceL2Shared",e,"l2")},gm=(r,e)=>{Ar(r,"ReduceLogSumExpShared",e,"logSumExp")},bm=(r,e)=>{Ar(r,"ReduceMaxShared",e,"max")},ym=(r,e)=>{Ar(r,"ReduceMinShared",e,"min")},vm=(r,e)=>{Ar(r,"ReduceProdShared",e,"prod")},wm=(r,e)=>{Ar(r,"ReduceSumShared",e,"sum")},xm=(r,e)=>{Ar(r,"ReduceSumSquareShared",e,"sumSquare")},Tm=(r,e)=>{Ar(r,"ReduceLogSumShared",e,"logSum")}});var Or,Xx,Ca,Au,Er,Zx,Jx,Qx,e2,t2,r2,n2,o2,i2,a2,Cr,_m,Sm,Im,Am,Om,Em,Cm,Pm,km,Dm,Ea=D(()=>{"use strict";Le();xt();Be();$m();Or=r=>{if(!r||r.length===0||r.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(r.length===2&&r[1].dims.length!==1)throw new Error("Invalid axes input dims.")},Xx=r=>["","",`var value = ${r.getByIndices("input_indices")};`,""],Ca=(r,e,n,t,o,i,s=!1,a=!1)=>{let u=[],l=n[0].dims,d=l.length,p=H.normalizeAxes(o,d),h=!a&&p.length===0;l.forEach((I,T)=>{h||p.indexOf(T)>=0?s&&u.push(1):u.push(I)});let g=u.length,y=H.size(u);return{name:r,shaderCache:e,getShaderSource:I=>{let T=[],$=W("_A",n[0].dataType,d),O=ne("output",i,g),C=t($,O,p),M=C[2];for(let R=0,G=0;R<d;R++)h||p.indexOf(R)>=0?(s&&G++,M=`for(var j${R}: u32 = 0; j${R} < ${l[R]}; j${R}++) {
                  ${C[2].includes("last_index")?`let last_index = j${R};`:""}
                  ${$.indicesSet("input_indices",R,`j${R}`)}
                  ${M}
                }`):(T.push(`${$.indicesSet("input_indices",R,O.indicesGet("output_indices",G))};`),G++);return`

        ${I.registerUniform("output_size","u32").declareVariables($,O)}

        ${I.mainStart()}
          ${I.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${$.type.indices};
          let output_indices = ${O.offsetToIndices("global_idx")};

          ${T.join(`
`)}
          ${C[0]}       // init ops for reduce max/min
          ${C[1]}
          ${M}
          ${C[3]}
          ${C.length===4?O.setByOffset("global_idx","value"):C.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:u,dataType:i}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:[{type:"uint32",data:y},...J(l),...J(u)]})}},Au=(r,e)=>{let n=[];return r[1].dims[0]>0&&r[1].getBigInt64Array().forEach(t=>n.push(Number(t))),Ae({axes:n,keepDims:e.keepDims,noopWithEmptyAxes:e.noopWithEmptyAxes})},Er=(r,e,n,t)=>{let o=r.inputs,i=o.length===1?n:Au(o,n);r.compute(Ca(e,{hint:i.cacheKey,inputDependencies:["rank"]},[o[0]],i.noopWithEmptyAxes&&i.axes.length===0?Xx:t,i.axes,o[0].dataType,i.keepDims,i.noopWithEmptyAxes),{inputs:[0]})},Zx=(r,e)=>{Or(r.inputs),Er(r,"ReduceLogSum",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,"value = log(value);"])},Jx=(r,e)=>{Or(r.inputs),Er(r,"ReduceL1",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += abs(${t.getByIndices("input_indices")});`,""])},Qx=(r,e)=>{Or(r.inputs),Er(r,"ReduceL2",e,(t,o)=>[`var t = ${o.type.value}(0); var value = ${o.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},e2=(r,e)=>{Or(r.inputs),Er(r,"ReduceLogSumExp",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += exp(${t.getByIndices("input_indices")});`,"value = log(value);"])},t2=(r,e)=>{Or(r.inputs),Er(r,"ReduceMax",e,(t,o,i)=>{let s=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(t.indicesSet("input_indices",a,0));return[`${s.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = max(value, ${t.getByIndices("input_indices")});`,""]})},r2=(r,e)=>{Or(r.inputs),Er(r,"ReduceMean",e,(t,o,i)=>{let s=1;for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&(s*=r.inputs[0].dims[a]);return["var sum = f32(0);","",`sum += f32(${t.getByIndices("input_indices")});`,`let value = ${o.type.value}(sum / ${s});`]})},n2=(r,e)=>{Or(r.inputs),Er(r,"ReduceMin",e,(t,o,i)=>{let s=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`input_indices[${a}] = 0;`);return[`${s.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = min(value, ${t.getByIndices("input_indices")});`,""]})},o2=(r,e)=>{Or(r.inputs),Er(r,"ReduceProd",e,(t,o)=>[`var value = ${o.type.storage}(1);`,"",`value *= ${t.getByIndices("input_indices")};`,""])},i2=(r,e)=>{Or(r.inputs),Er(r,"ReduceSum",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,""])},a2=(r,e)=>{Or(r.inputs),Er(r,"ReduceSumSquare",e,(t,o)=>[`var t = ${o.type.value}(0); var value = ${o.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += t * t;`,""])},Cr=(r,e,n)=>{if(e.length===0)return n;let t=1,o=1;for(let i=0;i<e.length;i++)e.indexOf(i)===-1?t*=r[i]:o*=r[i];return o<32&&t>1024},_m=(r,e)=>{Cr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?r2(r,e):pm(r,e)},Sm=(r,e)=>{Cr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Jx(r,e):hm(r,e)},Im=(r,e)=>{Cr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Qx(r,e):mm(r,e)},Am=(r,e)=>{Cr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?e2(r,e):gm(r,e)},Om=(r,e)=>{Cr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?t2(r,e):bm(r,e)},Em=(r,e)=>{Cr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?n2(r,e):ym(r,e)},Cm=(r,e)=>{Cr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?o2(r,e):vm(r,e)},Pm=(r,e)=>{Cr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?i2(r,e):wm(r,e)},km=(r,e)=>{Cr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?a2(r,e):xm(r,e)},Dm=(r,e)=>{Cr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Zx(r,e):Tm(r,e)}});var Rm,Bm,Lm,Ou,Mm=D(()=>{"use strict";ut();xt();Ea();Rm=r=>{if(!r||r.length===0||r.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(r[0].dataType!==1)throw new Error("Invalid input type.")},Bm=(r,e)=>{Rm(r.inputs);let n=(t,o,i)=>{let s=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`input_indices[${a}] = 0;`);return[`${s.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${t.getByIndices("input_indices")} ${e.selectLastIndex>0?"<=":"<"} value) {
         value = ${t.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",o.setByOffset("global_idx","best_index")]};r.compute(Ca("ArgMin",{hint:e.cacheKey,inputDependencies:["rank"]},[r.inputs[0]],n,[e.axis],7,e.keepDims),{inputs:[0]})},Lm=(r,e)=>{Rm(r.inputs);let n=(t,o,i)=>{let s=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`input_indices[${a}] = 0;`);return[`${s.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${t.getByIndices("input_indices")} ${e.selectLastIndex>0?">=":">"} value) {
         value = ${t.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",o.setByOffset("global_idx","best_index")]};r.compute(Ca("argMax",{hint:e.cacheKey,inputDependencies:["rank"]},[r.inputs[0]],n,[e.axis],7,e.keepDims),{inputs:[0]})},Ou=r=>Ae(r)});var s2,u2,l2,d2,Pa,c2,zm,Eu=D(()=>{"use strict";ut();$a();Be();s2=(r,e)=>{let n=r[0],t=r[1],o=r[2],i=r[3],s=r[4],a=r[5];if(s&&a)throw new Error("Attention cannot have both past and relative_position_bias");if(n.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let u=n.dims[0],l=n.dims[1],d=n.dims[2];if(o.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(t.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(t.dims[0]!==d)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(o.dims[0]!==t.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let p=o.dims[0]/3,h=p,g=h;if(e.qkvHiddenSizes.length>0){if(e.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let O of e.qkvHiddenSizes)if(O%e.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");p=e.qkvHiddenSizes[0],h=e.qkvHiddenSizes[1],g=e.qkvHiddenSizes[2]}let y=l;if(p!==h)throw new Error("qkv_hidden_sizes first element should be same as the second");if(o.dims[0]!==p+h+g)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let w=0;if(s){if(h!==g)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(s.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(s.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(s.dims[1]!==u)throw new Error('Input "past" second dimension must be batch_size');if(s.dims[2]!==e.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(s.dims[4]!==h/e.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');e.pastPresentShareBuffer||(w=s.dims[3])}let I=y+w,T=-1,$=0;if(i)throw new Error("Mask not supported");if(s)throw new Error("past is not supported");if(a)throw new Error("relativePositionBias is not supported");return{batchSize:u,sequenceLength:l,pastSequenceLength:w,kvSequenceLength:y,totalSequenceLength:I,maxSequenceLength:T,inputHiddenSize:d,hiddenSize:p,vHiddenSize:g,headSize:Math.floor(p/e.numHeads),vHeadSize:Math.floor(g/e.numHeads),numHeads:e.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:e.maskFilterValue,maskType:$,scale:e.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},u2=(r,e,n,t)=>{let o=vt(t),i=64,s=t/o;s<i?i=1:s/8<64&&(i=Math.ceil(s/8));let a=Math.ceil(t/o/i),l=[{type:Ht(e.dataType),data:1/t},{type:"uint32",data:s},{type:"uint32",data:a}],d=yt(e.dataType,o),p=h=>{let g=ne("x",e.dataType,e.dims,o),y="thread_max_vector";o===2?y="max(thread_max_vector.x, thread_max_vector.y)":o===4&&(y="max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))");let w=Ir(e.dataType),I=[{name:"d_inv",type:w},{name:"d_comp",type:"u32"},{name:"elements_per_wg",type:"u32"}];return`
  var<workgroup> wgMax: array<f32, ${i}>;
  var<workgroup> wgSum: array<f32, ${i}>;
  ${h.registerUniforms(I).declareVariables(g)}
  ${h.mainStart([i,1,1])}
    let localOffset = local_idx * uniforms.elements_per_wg;
    let offset: u32 = workgroup_id.x * uniforms.d_comp + localOffset;

    var thread_max_vector = ${Dt("f32",o,"-3.402823e+38f")};
    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
      thread_max_vector = max(${gr(w,o,"x[offset + i]")}, thread_max_vector);
    }
    wgMax[local_idx] = ${y};
    workgroupBarrier();

    var maxValue = -3.402823e+38f;
    for (var i = 0u; i < ${i}; i++) {
      maxValue = max(wgMax[i], maxValue);
    }

    var sumVector = ${Dt("f32",o,"0")};
    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
      sumVector += exp(${gr(w,o,"x[offset + i]")} - maxValue);
    }
    wgSum[local_idx] = ${qt("sumVector",o)};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${i}; i++) {
      sum += wgSum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
        x[offset + i] = ${Dt("f32",o,"uniforms.d_inv")};
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
        let f32input = ${gr(w,o,"x[offset + i]")};
        x[offset + i] = ${g.type.value}(exp(f32input - maxValue) / sum);
      }
    }
  }`};r.compute({name:"AttentionProbsSoftmax",shaderCache:{hint:`${i};${d};${o}`},getShaderSource:p,getRunData:()=>({outputs:[],dispatchGroup:{x:n},programUniforms:l})},{inputs:[e],outputs:[]})},l2=(r,e,n,t,o,i)=>{let s=[o.batchSize,o.numHeads,o.sequenceLength,o.kvSequenceLength+o.pastSequenceLength],a=i.scale===0?1/Math.sqrt(o.headSize):i.scale,u=vt(o.headSize),l=o.headSize/u,d=12,p={x:Math.ceil(o.totalSequenceLength/d),y:Math.ceil(o.sequenceLength/d),z:o.batchSize*o.numHeads},h=Ht(e.dataType),g=[{type:"uint32",data:o.sequenceLength},{type:"uint32",data:l},{type:"uint32",data:o.totalSequenceLength},{type:"uint32",data:o.kvSequenceLength},{type:h,data:a}],y=[e,n],w=T=>{let $=W("q",e.dataType,e.dims,u),O=W("key",n.dataType,n.dims,u),C=ne("output",e.dataType,s),M=yt(e.dataType),R=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"alpha",type:M}];return`
  const beta: ${M} = 1.0;
  const TILE_SIZE = ${d}u;

  var<workgroup> tileQ: array<${$.type.storage}, ${d*d}>;
  var<workgroup> tileK: array<${$.type.storage}, ${d*d}>;
  ${T.registerUniforms(R).declareVariables($,O,C)}
  ${T.mainStart([d,d,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let lm = m + local_id.y;
    let ln = n + local_id.x;

    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;
    let kOffset = uniforms.kv_sequence_length * uniforms.K * headIdx + n * uniforms.K;

    var value = ${Dt(M,u)};
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m + local_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k];
      }

      workgroupBarrier();
    }

    let headOffset = headIdx * uniforms.M * uniforms.N;
    if (lm < uniforms.M && ln < uniforms.N) {
      let outputIdx = headOffset + lm * uniforms.N + ln;
      output[outputIdx] = ${qt("value",u)} * uniforms.alpha;
    }
  }`},I=r.compute({name:"AttentionProbs",shaderCache:{hint:`${u}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:s,dataType:e.dataType,gpuDataType:0}],dispatchGroup:p,programUniforms:g}),getShaderSource:w},{inputs:y,outputs:[-1]})[0];return u2(r,I,o.batchSize*o.numHeads*o.sequenceLength,o.totalSequenceLength),I},d2=(r,e,n,t)=>{let o=[t.batchSize,t.sequenceLength,t.vHiddenSize],i=12,s={x:Math.ceil(t.vHeadSize/i),y:Math.ceil(t.sequenceLength/i),z:t.batchSize*t.numHeads},a=[{type:"uint32",data:t.sequenceLength},{type:"uint32",data:t.totalSequenceLength},{type:"uint32",data:t.vHeadSize},{type:"uint32",data:t.numHeads},{type:"uint32",data:t.vHiddenSize}],u=l=>{let d=W("probs",e.dataType,e.dims),p=W("v",n.dataType,n.dims),h=ne("output",e.dataType,o),g=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`
  const TILE_SIZE = ${i}u;
  var<workgroup> tileQ: array<${d.type.value}, ${i*i}>;
  var<workgroup> tileK: array<${d.type.value}, ${i*i}>;
  ${l.registerUniforms(g).declareVariables(d,p,h)}
  ${l.mainStart([i,i,1])}
   let headIdx = workgroup_id.z;
   let m = workgroup_id.y * TILE_SIZE + local_id.y;
   let n = workgroup_id.x * TILE_SIZE + local_id.x;

   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;
   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;

   var value = ${d.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
     if (m < uniforms.M && w + local_id.x < uniforms.K) {
       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
     }
     if (n < uniforms.N && w + local_id.y < uniforms.K) {
       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];
     }
     workgroupBarrier();
     for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;
   let headOffset = (batchIdx * uniforms.M * uniforms.num_heads + currentBatchHeadNumber) * uniforms.N;
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M *uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + currentBatchHeadNumber * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return r.compute({name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:o,dataType:e.dataType,gpuDataType:0}],dispatchGroup:s,programUniforms:a}),getShaderSource:u},{inputs:[e,n],outputs:[0]})[0]},Pa=(r,e,n,t,o,i,s,a,u,l,d)=>{let p=l2(r,e,n,u,l,d);d2(r,p,t,l)},c2=(r,e)=>{let n=[e.batchSize,e.numHeads,e.sequenceLength,e.headSize],t=e.sequenceLength,o=e.inputHiddenSize,i=e.headSize,s=12,a={x:Math.ceil(e.headSize/s),y:Math.ceil(e.sequenceLength/s),z:e.batchSize*e.numHeads},u=[r.inputs[0],r.inputs[1],r.inputs[2]],l=[{type:"uint32",data:t},{type:"uint32",data:o},{type:"uint32",data:i},{type:"uint32",data:e.numHeads},{type:"uint32",data:e.headSize},{type:"uint32",data:e.hiddenSize},{type:"uint32",data:e.hiddenSize+e.hiddenSize+e.vHiddenSize}],d=p=>{let h=ne("output_q",u[0].dataType,n),g=ne("output_k",u[0].dataType,n),y=ne("output_v",u[0].dataType,n),w=W("input",u[0].dataType,u[0].dims),I=W("weight",u[1].dataType,u[1].dims),T=W("bias",u[2].dataType,u[2].dims),$=w.type.storage,O=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${s}u;
  var<workgroup> tileInput: array<${$}, ${s*s}>;
  var<workgroup> tileWeightQ: array<${$}, ${s*s}>;
  var<workgroup> tileWeightK: array<${$}, ${s*s}>;
  var<workgroup> tileWeightV: array<${$}, ${s*s}>;
  ${p.registerUniforms(O).declareVariables(w,I,T,h,g,y)}
  ${p.mainStart([s,s,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE + local_id.y;
    let n = workgroup_id.x * TILE_SIZE + local_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${$}(0);
    var valueK = ${$}(0);
    var valueV = ${$}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return r.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:n,dataType:r.inputs[0].dataType,gpuDataType:0},{dims:n,dataType:r.inputs[0].dataType,gpuDataType:0},{dims:n,dataType:r.inputs[0].dataType,gpuDataType:0}],dispatchGroup:a,programUniforms:l}),getShaderSource:d},{inputs:u,outputs:[-1,-1,-1]})},zm=(r,e)=>{let n=s2(r.inputs,e),[t,o,i]=c2(r,n);return Pa(r,t,o,i,r.inputs[4],void 0,void 0,void 0,r.inputs[5],n,e)}});var f2,p2,h2,Nm,Fm=D(()=>{"use strict";Pt();Le();xt();Be();f2=(r,e)=>{if(!r||r.length!==5)throw new Error("BatchNormalization requires 5 inputs");let n=(t,o,i)=>{let s=o.length;if(s!==t.length)throw new Error(`${i}: num dimensions != ${s}`);o.forEach((a,u)=>{if(a!==t[u])throw new Error(`${i}: dim[${u}] do not match`)})};if(r[0].dims.length>1){let t=e.format==="NHWC"?e.spatial?r[0].dims.slice(-1):r[0].dims.slice(-1).concat(r[0].dims.slice(1,r[0].dims.length-1)):r[0].dims.slice(1,e.spatial?2:void 0);n(r[1].dims,t,"Invalid input scale"),n(r[2].dims,t,"Invalid input B"),n(r[3].dims,t,"Invalid input mean"),n(r[4].dims,t,"Invalid input var")}else n(r[1].dims,[1],"Invalid input scale"),n(r[2].dims,[1],"Invalid input B"),n(r[3].dims,[1],"Invalid input mean"),n(r[4].dims,[1],"Invalid input var")},p2=(r,e)=>{let{epsilon:n,spatial:t,format:o}=e,i=r[0].dims,s=t?vt(i[i.length-1]):1,a=o==="NHWC"&&i.length>1?s:1,u=H.size(i)/s,l=tt(i.length)&&t,d=l?i.length:i,p=W("x",r[0].dataType,r[0].dims,s),h=W("scale",r[1].dataType,r[1].dims,a),g=W("bias",r[2].dataType,r[2].dims,a),y=W("inputMean",r[3].dataType,r[3].dims,a),w=W("inputVar",r[4].dataType,r[4].dims,a),I=ne("y",r[0].dataType,d,s),T=()=>{let O="";if(t)O=`let cOffset = ${i.length===1?"0u":o==="NHWC"?`outputIndices[${i.length-1}] / ${s}`:"outputIndices[1]"};`;else if(o==="NCHW")O=`
            ${I.indicesSet("outputIndices","0","0")}
            let cOffset = ${I.indicesToOffset("outputIndices")};`;else{O=`var cIndices = ${h.type.indices}(0);
                       cIndices[0] = outputIndices[${i.length-1}];`;for(let C=1;C<h.rank;C++)O+=`cIndices[${C}] = outputIndices[${C}];`;O+=`let cOffset = ${h.indicesToOffset("cIndices")};`}return O},$=O=>`
  const epsilon = ${n};
  ${O.registerUniform("outputSize","u32").declareVariables(p,h,g,y,w,I)}
  ${O.mainStart()}
  ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${I.offsetToIndices(`global_idx * ${s}`)};
    ${T()}
    let scale = ${h.getByOffset("cOffset")};
    let bias = ${g.getByOffset("cOffset")};
    let inputMean = ${y.getByOffset("cOffset")};
    let inputVar = ${w.getByOffset("cOffset")};
    let x = ${p.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${I.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${e.epsilon}_${e.format}_${t}_${s}`,inputDependencies:l?["rank","type","type","type","type"]:void 0},getShaderSource:$,getRunData:()=>({outputs:[{dims:r[0].dims,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:l?[{type:"uint32",data:u},...J(i)]:[{type:"uint32",data:u}]})}},h2=r=>Ae(r),Nm=(r,e)=>{let{inputs:n,outputCount:t}=r,o=h2({...e,outputCount:t});if(ye.webgpu.validateInputContent&&f2(n,o),e.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");r.compute(p2(n,o))}});var m2,g2,Vm,Um=D(()=>{"use strict";Le();Be();m2=r=>{if(r[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(r[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(r[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(r[0].dims[2]!==r[1].dims[0])throw new Error("last dimension of input and bias are not the same")},g2=r=>{let e=r[0].dims,n=r[0].dims[2],t=H.size(e)/4,o=r[0].dataType,i=W("input",o,e,4),s=W("bias",o,[n],4),a=W("residual",o,e,4),u=ne("output",o,e,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:e,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(t/64)}}),getShaderSource:d=>`
  const channels = ${n}u / 4;
  ${d.declareVariables(i,s,a,u)}

  ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes(t)}
    let value = ${i.getByOffset("global_idx")}
      + ${s.getByOffset("global_idx % channels")} + ${a.getByOffset("global_idx")};
    ${u.setByOffset("global_idx","value")}
  }`}},Vm=r=>{m2(r.inputs),r.compute(g2(r.inputs))}});var b2,qe,Gm,Wm,Hm,qm,jm,Km,Ym,Xm,Zm,y2,Jm,Qm,eg,tg,ka,rg,Da,ng,og,ig,ag,sg,ug,lg,dg,cg,fg,pg,hg,mg,gg,bg,yg,vg,Cu=D(()=>{"use strict";ut();Le();xt();Be();b2=(r,e,n,t,o,i)=>{let s=Math.ceil(e/4),a="";typeof o=="string"?a=`${o}(a)`:a=o("a");let u=W("inputData",n,[s],4),l=ne("outputData",t,[s],4);return`
      ${r.registerUniform("vec_size","u32").declareVariables(u,l)}

  ${i??""}

  ${r.mainStart()}
    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${u.getByOffset("global_idx")};
    ${l.setByOffset("global_idx",a)}
  }`},qe=(r,e,n,t,o,i=r.dataType)=>({name:e,shaderCache:{hint:o,inputDependencies:["type"]},getShaderSource:s=>b2(s,H.size(r.dims),r.dataType,i,n,t),getRunData:s=>({outputs:[{dims:r.dims,dataType:i}],dispatchGroup:{x:Math.ceil(H.size(s[0].dims)/64/4)},programUniforms:[{type:"uint32",data:Math.ceil(H.size(r.dims)/4)}]})}),Gm=r=>{r.compute(qe(r.inputs[0],"Abs","abs"))},Wm=r=>{r.compute(qe(r.inputs[0],"Acos","acos"))},Hm=r=>{r.compute(qe(r.inputs[0],"Acosh","acosh"))},qm=r=>{r.compute(qe(r.inputs[0],"Asin","asin"))},jm=r=>{r.compute(qe(r.inputs[0],"Asinh","asinh"))},Km=r=>{r.compute(qe(r.inputs[0],"Atan","atan"))},Ym=r=>{r.compute(qe(r.inputs[0],"Atanh","atanh"))},Xm=r=>Ae(r),Zm=(r,e)=>{let n;switch(e.to){case 10:n="vec4<f16>";break;case 1:n="vec4<f32>";break;case 12:n="vec4<u32>";break;case 6:n="vec4<i32>";break;case 9:n="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${e.to}`)}r.compute(qe(r.inputs[0],"Cast",n,void 0,e.cacheKey,e.to))},y2=r=>{let e=r.length>=2&&r[1].data!==0?r[1].getFloat32Array()[0]:Ia,n=r.length>=3&&r[2].data!==0?r[2].getFloat32Array()[0]:Aa;return Ae({min:e,max:n})},Jm=(r,e)=>{let n=r.inputs.length===1?e:y2(r.inputs),t=Ir(r.inputs[0].dataType);r.compute(qe(r.inputs[0],"Clip",o=>`clamp(${o}, clip_min_, clip_max_)`,`
    const clip_min_: vec4<${t}> = vec4(${t}(${n.min}));
    const clip_max_: vec4<${t}> = vec4(${t}(${n.max}));
`,n.cacheKey),{inputs:[0]})},Qm=r=>{r.compute(qe(r.inputs[0],"Ceil","ceil"))},eg=r=>{r.compute(qe(r.inputs[0],"Cos","cos"))},tg=r=>{r.compute(qe(r.inputs[0],"Cosh","cosh"))},ka=r=>Ae(r),rg=(r,e)=>{let n=Ir(r.inputs[0].dataType);r.compute(qe(r.inputs[0],"Elu",t=>`elu_vf32(${t})`,`
  const elu_alpha_ = ${n}(${e.alpha});

  fn elu_f32(a: ${n}) -> ${n} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${n}>) -> vec4<${n}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,e.cacheKey))},Da=(r,e="f32")=>`
const r0: ${e} = 0.3275911;
const r1: ${e} = 0.254829592;
const r2: ${e} = -0.284496736;
const r3: ${e} = 1.421413741;
const r4: ${e} = -1.453152027;
const r5: ${e} = 1.061405429;

fn erf_vf32(v: ${r}) -> ${r} {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,ng=r=>{let e=Ir(r.inputs[0].dataType);r.compute(qe(r.inputs[0],"Erf",n=>`erf_vf32(${n})`,Da(`vec4<${e}>`,e)))},og=r=>{r.compute(qe(r.inputs[0],"Exp","exp"))},ig=r=>{r.compute(qe(r.inputs[0],"Floor","floor"))},ag=r=>{let e=Ir(r.inputs[0].dataType);r.compute(qe(r.inputs[0],"Gelu",n=>`0.5 * ${n} * (1.0 + erf_vf32(${n} * 0.7071067811865475))`,Da(`vec4<${e}>`,e)))},sg=(r,e)=>{let n=Ir(r.inputs[0].dataType);r.compute(qe(r.inputs[0],"LeakyRelu",t=>`select(leaky_relu_alpha_ * ${t}, ${t}, ${t} >= vec4<${n}>(0.0))`,`const leaky_relu_alpha_ = ${n}(${e.alpha});`,e.cacheKey))},ug=r=>{r.compute(qe(r.inputs[0],"Not",e=>`!${e}`))},lg=r=>{r.compute(qe(r.inputs[0],"Neg",e=>`-${e}`))},dg=r=>{r.compute(qe(r.inputs[0],"Reciprocal",e=>`1.0/${e}`))},cg=r=>{let e=Ir(r.inputs[0].dataType);r.compute(qe(r.inputs[0],"Relu",n=>`select(vec4<${e}>(0.0), ${n}, ${n} > vec4<${e}>(0.0))`))},fg=r=>{r.compute(qe(r.inputs[0],"Sigmoid",e=>`(1.0 / (1.0 + exp(-${e})))`))},pg=r=>{r.compute(qe(r.inputs[0],"Sin","sin"))},hg=r=>{r.compute(qe(r.inputs[0],"Sinh","sinh"))},mg=r=>{r.compute(qe(r.inputs[0],"Sqrt","sqrt"))},gg=r=>{r.compute(qe(r.inputs[0],"Tan","tan"))},bg=r=>{r.compute(qe(r.inputs[0],"Tanh","tanh"))},yg=(r,e)=>{let n=Ir(r.inputs[0].dataType);return r.compute(qe(r.inputs[0],"ThresholdedRelu",t=>`select(vec4<${n}>(0.0), ${t}, ${t} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${n}>(${e.alpha});`,e.cacheKey)),0},vg=r=>{r.compute(qe(r.inputs[0],"Log","log"))}});var w2,x2,wg,xg=D(()=>{"use strict";Le();Be();Cu();w2=r=>{if(r[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(r[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(r[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(r[0].dims[2]!==r[1].dims[0])throw new Error("last dimension of input and bias are not the same")},x2=r=>{let e=r[0].dims.slice();e[2]=e[2]/2;let n=W("input",r[0].dataType,r[0].dims,4),t=W("bias",r[0].dataType,[r[0].dims[2]],4),o=ne("output",r[0].dataType,e,4),i=H.size(e)/4,s=yt(r[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:e,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)}}),getShaderSource:u=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${r[0].dims[2]/4/2}u;

  ${u.declareVariables(n,t,o)}

  ${Da(`vec4<${s}>`,s)}

  ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes(i)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${o.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},wg=r=>{w2(r.inputs),r.compute(x2(r.inputs))}});var T2,$2,Pr,Tg,$g,_g,Sg,Ig,Ag,Og,Eg,Cg,Pg,kg=D(()=>{"use strict";ut();Le();Be();T2=(r,e,n,t,o,i,s,a,u,l,d,p,h)=>{let g,y;typeof a=="string"?g=y=(R,G)=>`${a}((${R}),(${G}))`:typeof a=="function"?g=y=a:(g=a.scalar,y=a.vector);let w=p?e.length:e,I=p?n.length:n,T=p?t.length:t,$=ne("outputData",d,T,4),O=W("aData",u,w,4),C=W("bData",l,I,4),M;if(o)if(i){let R=H.size(e)===1,G=H.size(n)===1,q=e.length>0&&e[e.length-1]%4===0,X=n.length>0&&n[n.length-1]%4===0;R||G?M=$.setByOffset("global_idx",y(R?`${O.type.value}(${O.getByOffset("0")}.x)`:O.getByOffset("global_idx"),G?`${C.type.value}(${C.getByOffset("0")}.x)`:C.getByOffset("global_idx"))):M=`
            let outputIndices = ${$.offsetToIndices("global_idx * 4u")};
            let offsetA = ${O.broadcastedIndicesToOffset("outputIndices",$)};
            let offsetB = ${C.broadcastedIndicesToOffset("outputIndices",$)};
            ${$.setByOffset("global_idx",y(s||q?O.getByOffset("offsetA / 4u"):`${O.type.value}(${O.getByOffset("offsetA / 4u")}[offsetA % 4u])`,s||X?C.getByOffset("offsetB / 4u"):`${C.type.value}(${C.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else M=$.setByOffset("global_idx",y(O.getByOffset("global_idx"),C.getByOffset("global_idx")));else{if(!i)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let R=(G,q,X="")=>{let z=`aData[indexA${q}][componentA${q}]`,V=`bData[indexB${q}][componentB${q}]`;return`
            let outputIndices${q} = ${$.offsetToIndices(`global_idx * 4u + ${q}u`)};
            let offsetA${q} = ${O.broadcastedIndicesToOffset(`outputIndices${q}`,$)};
            let offsetB${q} = ${C.broadcastedIndicesToOffset(`outputIndices${q}`,$)};
            let indexA${q} = offsetA${q} / 4u;
            let indexB${q} = offsetB${q} / 4u;
            let componentA${q} = offsetA${q} % 4u;
            let componentB${q} = offsetB${q} % 4u;
            ${G}[${q}] = ${X}(${g(z,V)});
          `};d===9?M=`
            var data = vec4<u32>(0);
            ${R("data",0,"u32")}
            ${R("data",1,"u32")}
            ${R("data",2,"u32")}
            ${R("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:M=`
            ${R("outputData[global_idx]",0)}
            ${R("outputData[global_idx]",1)}
            ${R("outputData[global_idx]",2)}
            ${R("outputData[global_idx]",3)}
          `}return`
        ${r.registerUniform("vec_size","u32").declareVariables(O,C,$)}

        ${h??""}

        ${r.mainStart()}
        ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${M}
      }`},$2=(r,e,n,t,o,i,s=n.dataType)=>{let a=!H.areEqual(n.dims,t.dims),u=n.dims,l=H.size(n.dims),d=!1,p=!1,h=[a];if(a){let y=Sr.calcShape(n.dims,t.dims,!1);if(!y)throw new Error("Can't perform binary op on the given tensors");u=y,l=H.size(u);let w=H.size(n.dims)===1,I=H.size(t.dims)===1,T=n.dims.length>0&&n.dims[n.dims.length-1]%4===0,$=t.dims.length>0&&t.dims[t.dims.length-1]%4===0;h.push(w),h.push(I),h.push(T),h.push($);let O=1;for(let C=1;C<u.length;C++){let M=n.dims[n.dims.length-C]??1,R=t.dims[t.dims.length-C]??1;if(M===R)O*=M;else break}O%4===0?(p=!0,d=!0):(w||I||T||$)&&(d=!0)}else d=!0;h.push(d);let g=tt(n.dims.length)&&tt(t.dims.length)&&tt(u.length);return{name:r,shaderCache:{hint:e+h.map(y=>y.toString()).join("_"),inputDependencies:g?["rank","rank"]:["dims","dims"]},getShaderSource:y=>T2(y,n.dims,t.dims,u,d,a,p,o,n.dataType,t.dataType,s,g,i),getRunData:()=>({outputs:[{dims:u,dataType:s}],dispatchGroup:{x:Math.ceil(l/64/4)},programUniforms:g?[{type:"uint32",data:Math.ceil(H.size(u)/4)},...J(n.dims),...J(t.dims),...J(u)]:[{type:"uint32",data:Math.ceil(H.size(u)/4)}]})}},Pr=(r,e,n,t,o,i)=>{r.compute($2(e,o??"",r.inputs[0],r.inputs[1],n,t,i))},Tg=r=>{Pr(r,"Add",(e,n)=>`${e}+${n}`)},$g=r=>{Pr(r,"Div",(e,n)=>`${e}/${n}`)},_g=r=>{Pr(r,"Equal",{scalar:(e,n)=>`u32(${e}==${n})`,vector:(e,n)=>`vec4<u32>(${e}==${n})`},void 0,void 0,9)},Sg=r=>{Pr(r,"Mul",(e,n)=>`${e}*${n}`)},Ig=r=>{let e=W("input",r.inputs[0].dataType,r.inputs[0].dims).type.value;Pr(r,"Pow",{scalar:(t,o)=>`pow_custom(${t},${o})`,vector:(t,o)=>`pow_vector_custom(${t},${o})`},`
    fn pow_custom(a : ${e}, b : ${e}) -> ${e} {
      if (b == ${e}(0.0)) {
        return ${e}(1.0);
      } else if (a < ${e}(0.0) && f32(b) != floor(f32(b))) {
        return ${e}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${e}(1.0), round(f32(abs(b) % ${e}(2.0))) != 1.0) * ${e}(${e==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${e}>, b : vec4<${e}>) -> vec4<${e}> {
      // TODO: implement vectorized pow
      return vec4<${e}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},Ag=r=>{Pr(r,"Sub",(e,n)=>`${e}-${n}`)},Og=r=>{Pr(r,"Greater",{scalar:(e,n)=>`u32(${e}>${n})`,vector:(e,n)=>`vec4<u32>(${e}>${n})`},void 0,void 0,9)},Eg=r=>{Pr(r,"Less",{scalar:(e,n)=>`u32(${e}<${n})`,vector:(e,n)=>`vec4<u32>(${e}<${n})`},void 0,void 0,9)},Cg=r=>{Pr(r,"GreaterOrEqual",{scalar:(e,n)=>`u32(${e}>=${n})`,vector:(e,n)=>`vec4<u32>(${e}>=${n})`},void 0,void 0,9)},Pg=r=>{Pr(r,"LessOrEqual",{scalar:(e,n)=>`u32(${e}<=${n})`,vector:(e,n)=>`vec4<u32>(${e}<=${n})`},void 0,void 0,9)}});var S2,I2,A2,O2,Dg,Rg,Bg=D(()=>{"use strict";Le();xt();Be();S2=r=>{if(!r||r.length<1)throw new Error("too few inputs");let e=r[0].dataType,n=r[0].dims.length;for(let t of r){if(t.dataType!==e)throw new Error("input tensors should be one type");if(t.dims.length!==n)throw new Error("input tensors should have the same shape")}},I2=(r,e)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${r}u>(${e});
    for (var i: u32 = 0u; i < ${r}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${r}u;
  }`,A2=(r,e)=>{let n=r.length,t=[];for(let o=0;o<n;++o){let i=e.setByOffset("global_idx",r[o].getByIndices("indices"));n===1?t.push(i):o===0?t.push(`if (inputIndex == ${o}u) { ${i} }`):o===n-1?t.push(`else { ${i} }`):t.push(`else if (inputIndex == ${o}) { ${i} }`)}return t.join(`
`)},O2=(r,e)=>{let n=r[0].dims.slice();if(e>=n.length||e<-1*n.length)throw new Error("axis specified for concat doesn't match input dimensionality");let t=e<0?n.length+e:e,o=n.slice(0);for(let C=1;C<r.length;C++){let M=r[C].dims.slice();for(let R=0;R<n.length;R++)if(R===t)o[t]+=M[R];else if(n[R]!==M[R])throw new Error("non concat dimensions must match")}let i=H.size(o),s=new Array(r.length),a=new Array(r.length),u=r[0].dataType,l=0,d=[],p=[],h=[],g=[{type:"uint32",data:i}];for(let C=0;C<r.length;++C)l+=r[C].dims[t],s[C]=l,h.push(tt(r[C].dims.length)),p.push(h[C]?r[C].dims.length:r[C].dims),a[C]=W(`input${C}`,u,p[C]),d.push(h[C]?"rank":"dims"),g.push({type:"uint32",data:s[C]});for(let C=0;C<r.length;++C)h[C]&&g.push(...J(r[C].dims));let y=tt(o.length);y&&g.push(...J(o));let w=y?o.length:o,I=ne("output",u,w),T=I.indicesGet("indices",t),$=Array.from(Array(s.length).keys()).map(C=>`uniforms.sizeInConcatAxis${C}`).join(","),O=C=>`

  ${(()=>{C.registerUniform("outputSize","u32");for(let M=0;M<r.length;M++)C.registerUniform(`sizeInConcatAxis${M}`,"u32");return C.declareVariables(...a,I)})()}

  ${I2(s.length,$)}

  ${C.mainStart()}
    ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${I.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${T});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${s.length}u>(${$});
      ${T} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${A2(a,I)}
  }`;return{name:"Concat",shaderCache:{hint:`${e}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:o,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:g}),getShaderSource:O}},Dg=(r,e)=>{S2(r.inputs),r.compute(O2(r.inputs,e.axis))},Rg=r=>Ae({axis:r.axis})});var kr,Ra,Qr=D(()=>{"use strict";Le();kr=(r,e)=>{switch(r.activation){case"Relu":return{activationFunction:"",applyActivation:`value = max(value, ${e}(0.0));`};case"Sigmoid":return{activationFunction:"",applyActivation:`value = (${e}(1.0) / (${e}(1.0) + exp(-value)));`};case"Clip":return{activationFunction:`const clip_min_=${e}(${r.clipMin});const clip_max_=${e}(${r.clipMax});`,applyActivation:"value = clamp(value, clip_min_, clip_max_);"};default:return{activationFunction:"",applyActivation:""}}},Ra=r=>{let e=r?.activation||"";if(e==="Clip"){let[n,t]=r?.activation_params||[Ia,Aa];return{activation:e,clipMax:t,clipMin:n,activationCacheKey:`${e}:${n},${t}`}}return{activation:e,activationCacheKey:e}}});var It,Ba,La=D(()=>{"use strict";It=(r,e)=>{switch(r){case 1:return e;case 2:return`vec2<${e}>`;case 3:return`vec3<${e}>`;case 4:return`vec4<${e}>`;default:throw new Error(`${r}-component is not supported.`)}},Ba=r=>`
      ${r?"value = value + getBiasByOutputCoords(coords);":""}
      `});var Ma,Pu=D(()=>{"use strict";Ma=r=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${r}.x), i32(${r}.y), i32(${r}.z), 1));
}
`});var E2,C2,Vo,Lg,P2,Uo,k2,za,Go=D(()=>{"use strict";Le();Be();Qr();La();E2=(r,e)=>r?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${e?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${e?", batchIndices":""});
        `,C2=(r,e)=>r?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${e===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${e===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${e===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,Vo=(r,e,n="f32",t,o=!1,i=32,s=!1,a=32)=>{let u=e[1]*r[1],l=e[0]*r[0],d=o?u:i,p=o?i:u,h=d/e[0],g=i/e[1];if(!((o&&h===4&&r[1]===4||!o&&(h===3||h===4))&&d%e[0]===0&&i%e[1]===0&&r[0]===4))throw new Error(`If transposeA ${o} is true, innerElementSize ${h} and workPerThread[1] ${r[1]} must be 4.
      Otherwise, innerElementSize ${h} must be 3 or 4.
  tileAWidth ${d} must be divisible by workgroupSize[0]${e[0]}. tileInner ${i} must be divisible by workgroupSize[1] ${e[1]}. colPerThread ${r[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${h}<${n}>, ${d/h}>, ${p}>;
var<workgroup> mm_Bsub: array<array<vec4<${n}>, ${l/r[0]}>, ${i}>;

const rowPerThread = ${r[1]};
const colPerThread = ${r[0]};
const innerElementSize = ${h};
const tileInner = ${i};

@compute @workgroup_size(${e[0]}, ${e[1]}, ${e[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${s?"0":"i32(globalId.z)"};
  ${t?`let batchIndices = ${t.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${u};

  let numTiles = ${s?`${Math.ceil(a/i)}`:"(uniforms.dimInner - 1) / tileInner + 1"};
  var kStart = ${s?`i32(globalId.z) * ${a}`:"0"};

  var acc: array<vec4<${n}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${g};
  for (var t = 0; t < numTiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${E2(o,t)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${g}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${t?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${h===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${C2(o,h)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},Lg=(r,e)=>r?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${e?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${e?", batchIndices":""});
            `,P2=r=>r?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Uo=(r,e,n="f32",t,o=!1,i=32,s=!1,a=32,u=!1)=>{let l=r[1]*e[1],d=r[0]*e[0],p=o?l:i,h=o?i:l;if(!(h%e[1]===0&&p%e[0]===0&&i%e[1]===0))throw new Error(`tileAHight ${h} must be divisible by workgroupSize[1]${e[1]}, tileAWidth ${p} must be divisible by workgroupSize[0]${e[0]}, tileInner ${i} must be divisible by workgroupSize[1]${e[1]}`);let g=h/e[1],y=p/e[0],w=i/e[1],I=u?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${l};
    let globalColStart = i32(workgroupId.x) * ${d};

    // Loop over shared dimension.
    for (var t = 0; t < numTiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${h}; inputRow = inputRow + ${e[1]}) {
        for (var inputCol = localCol; inputCol < ${p}; inputCol = inputCol + ${e[0]}) {
          ${Lg(o,t)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${i}; inputRow = inputRow + ${e[1]}) {
            for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${e[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${t?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${n}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${e[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${o?`mm_Asub[k][localRow + innerRow * ${e[1]}];`:`mm_Asub[localRow + innerRow * ${e[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${e[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${e[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${l};

let tileRowA = i32(localId.y) * ${g};
let tileColA = i32(localId.x) * ${y};
let tileRowB = i32(localId.y) * ${w};
// Loop over shared dimension.
for (var t = 0; t < numTiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${g}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${y}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${Lg(o,t)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${w}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${t?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${n}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${P2(o)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${n}, ${p}>, ${h}>;
  var<workgroup> mm_Bsub : array<array<${n}, ${d}>, ${i}>;
  const rowPerThread = ${r[1]};
  const colPerThread = ${r[0]};
  const tileInner = ${i};

@compute @workgroup_size(${e[0]}, ${e[1]}, ${e[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${s?"0":"i32(globalId.z)"};
    ${t?`let batchIndices = ${t.offsetToIndices("u32(batch)")};`:""}
    let numTiles = ${s?`${Math.ceil(a/i)}`:"(uniforms.dimInner - 1) / tileInner + 1"};
    var kStart = ${s?`i32(globalId.z) * ${a}`:"0"};

    var acc : array<array<${n}, colPerThread>, rowPerThread>;

    // Without this initialization strange values show up in acc.
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = 0.0;
      }
    }
    ${I}
  }
`},k2=(r,e,n,t,o,i=!1)=>{let[s,a,u]=o,[l,d,p,h]=t,g=Jn(s,u),y=Jn(a,u),w=yt(t[0].type.tensor),I=()=>{let O=d.rank,C=l.rank,M=`var aIndices: ${d.type.indices};`;for(let R=O-2-1,G=C-1;R>=0;R--,G--)M+=`
aIndices[${R}] = ${C>1?`batchIndices[${G}]`:"batchIndices"};`;return g.forEach(R=>{M+=`
aIndices[${R}] = 0;`}),M+=`
aIndices[${O-2}] = u32(row);
                   aIndices[${O-1}] = u32(colIn);`,M},T=()=>{let O=p.rank,C=l.rank,M=`var bIndices: ${p.type.indices};`;for(let R=O-2-1,G=C-1;R>=0;R--,G--)M+=`
bIndices[${R}] = ${C>1?`batchIndices[${G}]`:"batchIndices"};`;return y.forEach(R=>{M+=`
bIndices[${R}] = 0;`}),M+=`
bIndices[${O-2}] = u32(row);
                   bIndices[${O-1}] = u32(colIn);`,M};return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${l.type.indices}) -> ${It(r,w)} {
      var value = ${It(r,w)}(0.0);
      let col = colIn * ${r};
      if(row < uniforms.dimAOuter && col < uniforms.dimInner)
      {
        ${I()}
        value = ${d.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${l.type.indices}) -> ${It(r,w)} {
      var value = ${It(r,w)}(0.0);
      let col = colIn * ${r};
      if(row < uniforms.dimInner && col < uniforms.dimBOuter)
      {
        ${T()}
        value = ${p.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${It(r,w)}) {
      let col = colIn * ${r};
      if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${e?`value = value + ${i?"bias[colIn]":`${It(r,w)}(bias[row])`};`:""}
        ${n}
        ${h.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},za=(r,e,n,t,o=!1)=>{let i=r[0].dims,s=r[1].dims,a=i.slice(0,-2),u=s.slice(0,-2),l=t?t.slice(0,-2):n.slice(0,-2),d=tt(l.length),p=d?l.length:l,h=Oa("batchDims",r[0].dataType,p,1),g=H.size(l),y=i[i.length-2],w=i[i.length-1],I=s[s.length-1],T=w%4===0&&I%4===0,$=y<=8?[4,1,1]:[4,4,1],O=[8,8,1],C=[Math.ceil(I/O[0]/$[0]),Math.ceil(y/O[1]/$[1]),Math.ceil(g/O[2]/$[2])],M=yt(r[0].dataType),R=T?4:1,G=[...a,y,w/R],q=tt(G.length),X=q?G.length:G,z=[...u,w,I/R],V=tt(z.length),ie=V?z.length:z,ue=[g,y,I/R],le=W("a",r[0].dataType,X,R),Ye=W("b",r[1].dataType,ie,R),it=ne("result",r[0].dataType,ue.length,R),Se=[le,Ye],je=[{type:"int32",data:y},{type:"int32",data:I},{type:"int32",data:w}];d&&je.push(...J(l)),q&&je.push(...J(G)),V&&je.push(...J(z));let Oe=[];Oe.push(q?"rank":"dims"),Oe.push(V?"rank":"dims");let Ee=r.length>2,{activationFunction:gt,applyActivation:at}=kr(e,it.type.value),st=k2(R,Ee,at,[h,le,Ye,it],[a,u,l],o);if(Ee){let de=o?R:1;Se.push(W("bias",r[2].dataType,r[2].dims.length,de)),je.push(...J(r[2].dims)),Oe.push("rank")}je.push(...J(ue));let Z=de=>`
  ${de.registerUniform("dimAOuter","i32").registerUniform("dimBOuter","i32").registerUniform("dimInner","i32").registerInternalVariables(h).declareVariables(...Se,it)}
  ${gt}
  ${st}
  ${T?Vo($,O,M,h):Uo($,O,M,h)}
                   `;return{name:"MatMul",shaderCache:{hint:e.activationCacheKey+`${$}${T}${o}`,inputDependencies:Oe},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:C[0],y:C[1],z:C[2]},programUniforms:je}),getShaderSource:Z}}});var D2,Mg,zg=D(()=>{"use strict";Jr();Be();Qr();La();Pu();Go();D2=(r,e,n,t,o=!1,i,s=4,a=4,u=4,l="f32")=>{let d=V=>{switch(V){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${l}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${V} is not supported.`)}},p=V=>{switch(V){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${V} is not supported.`)}},h=r?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,g=r?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,y=r?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",w=r?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",I=r?"row":"col",T=r?"col":"row",$=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${r?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${I} / outWidth;
    let outCol = ${I} % outWidth;

    let WRow = ${T} / (filterDims[1] * inChannels);
    let WCol = ${T} / inChannels % filterDims[1];
    let xRow = outRow * stride[0] + dilation[0] * WRow - pad[0];
    let xCol = outCol * stride[1] + dilation[1] * WCol - pad[1];
    let xCh = ${T} % inChannels;
    var resData = ${It(s,l)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${y} && xCol >= 0 && xCol < ${w}) {
      ${h}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${d(s)}
    }
    return resData;`,O=r?e&&t?`
    let col = colIn * ${s};
    ${$}`:`
    let col = colIn * ${s};
    if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      ${$}
    }
    return ${It(s,l)}(0.0);`:t&&n?`
    let col = colIn * ${s};
    ${$}`:`
    let col = colIn * ${s};
    if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
      ${$}
    }
    return ${It(s,l)}(0.0);`,C=`${p(a)}`,M=It(u,l),R=r?It(s,l):It(a,l),G=r?It(a,l):It(s,l),{activationFunction:q,applyActivation:X}=kr(i,M);return`
    ${q}
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${R} {
      ${r?O:C}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${G} {
      ${r?C:O}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${M}) {
      let col = colIn * ${u};
      if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
      {
      var value = valueIn;
      let outWidth = ${r?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${g}
      ${Ba(o)}
      ${X}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},Mg=(r,e,n,t,o,i,s,a)=>{let u=e.format==="NHWC",l=u?r[0].dims[3]:r[0].dims[1],d=n[0],p=u?n[2]:n[3],h=u?n[1]:n[2],g=u?n[3]:n[1],y=u&&(l%4===0||l%3===0)&&g%4===0,w=u?g:p*h,I=u?p*h:g,T=[8,8,1],$=t<=8?[4,1,1]:[4,4,1],O=[Math.ceil(w/T[0]/$[0]),Math.ceil(I/T[1]/$[1]),Math.ceil(d/T[2]/$[2])];ot("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${O}`);let C=y?u&&l%4!==0?3:4:1,M=T[1]*$[1],R=T[0]*$[0],G=Math.max(T[0]*C,T[1]),q=t%M===0,X=o%R===0,z=i%G===0,V=y?[C,4,4]:[1,1,1],ie=yt(r[0].dataType),ue=y?4:1,le=[{type:"int32",data:t},{type:"int32",data:o},{type:"int32",data:i}],Ye=W("x",r[0].dataType,r[0].dims.length,C===3?1:C),it=W("w",r[1].dataType,r[1].dims.length,ue),Se=[Ye,it];le.push(...J(r[0].dims)),le.push(...J(r[1].dims));let je=`
      fn setOutputAtIndex(flatIndex : i32, value : ${y?`vec4<${ie}>`:ie}) {
        result[flatIndex] = ${y?`vec4<${ie}>`:ie}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${y?`vec4<${ie}>`:ie}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${y?"/ 4":""}, value);
      }`;if(s){let Ee=W("bias",r[2].dataType,r[2].dims.length,ue);Se.push(Ee),le.push(...J(r[2].dims)),je+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${y?`vec4<${ie}>`:ie} {
          return bias[coords.${u?"w":"y"}${y?"/ 4":""}];
        }`}let Oe=ne("result",r[0].dataType,n.length,ue);return le.push(...J(n)),{name:"Conv2DMatMul",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:O[0],y:O[1],z:O[2]},programUniforms:le}),getShaderSource:Ee=>`
        ${Ma("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${Ee.registerUniform("dimAOuter","i32").registerUniform("dimBOuter","i32").registerUniform("dimInner","i32").declareVariables(...Se,Oe)}
        const filterDims : vec2<i32> = vec2<i32>(${e.kernelShape[0]}, ${e.kernelShape[1]});
        const pad : vec2<i32> = vec2<i32>(${e.pads[0]}, ${e.pads[1]});
        const stride : vec2<i32> = vec2<i32>(${e.strides[0]}, ${e.strides[1]});
        const dilation : vec2<i32> = vec2<i32>(${e.dilations[0]}, ${e.dilations[1]});
        ${je}
        ${D2(u,q,X,z,s,e,V[0],V[1],V[2],ie)}
            ${y?Vo($,T,ie,void 0,!u,G):Uo($,T,ie,void 0,!u,G,!1,void 0,a)}`}}});var ku,Ng=D(()=>{"use strict";Le();Be();Ru();Qr();ku=(r,e,n)=>{let t=r.length>2,o=t?"value += b[output_channel];":"",i=r[0].dims,s=r[1].dims,a=s[0]/e.group,u=e.format==="NHWC",l=Du(i,s,e.dilations,e.pads,e.strides,u),d=H.size(l),p=ne("output",r[0].dataType,l),{activationFunction:h,applyActivation:g}=kr(e,p.type.value),y=W("x",r[0].dataType,i),w=W("w",r[1].dataType,s),I=[y,w];t&&I.push(W("b",r[2].dataType,r[2].dims));let T=$=>`
  const strides: vec2<u32> = vec2(${e.strides[0]}u, ${e.strides[1]}u);
  const pads: vec2<u32> = vec2(${e.pads[0]}u, ${e.pads[1]}u);

  ${$.declareVariables(...I,p)}

  ${h}

  ${$.mainStart()}
    ${$.guardAgainstOutOfBoundsWorkgroupSizes(d)}

    let outputIndices = ${p.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${u?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${u?1:2}], outputIndices[${u?2:3}]) * strides - pads;
    let group_id: u32 = output_channel / ${a}u;

    var value: ${p.type.value} = ${p.type.value}(0);
    for (var wInChannel: u32 = 0u; wInChannel < ${s[1]}u; wInChannel++) {
      let input_channel = group_id * ${s[1]}u + wInChannel;
      for (var wHeight: u32 = 0u; wHeight < ${s[2]}u; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * ${e.dilations[0]}u;

        if (xHeight < 0u || xHeight >= ${i[u?1:2]}u) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < ${s[3]}u; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * ${e.dilations[1]}u;
          if (xWidth < 0u || xWidth >= ${i[u?2:3]}u) {
            continue;
          }

          let xVal = ${u?y.get("batch","xHeight","xWidth","input_channel"):y.get("batch","input_channel","xHeight","xWidth")};
          let wVal = ${w.get("output_channel","wInChannel","wHeight","wWidth")};
          value += xVal*wVal;
        }
      }
    }
    ${o}
    ${g}
    ${p.setByOffset("global_idx","value")}
  }`;return{name:"GroupedConv",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:n?n(l):l,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)}}),getShaderSource:T}}});var Bu,R2,Fg,Lu=D(()=>{"use strict";Le();Go();Be();Qr();Bu=(r,e,n,t,o=!1)=>{let i=r[0].dims,s=r[1].dims,a=i[i.length-2],u=s[s.length-1],l=i[i.length-1],d=vt(u),p=vt(l),h=vt(a),g=H.size(n)/d/h,y=r.length>2,w=t?t.slice(0,-2):n.slice(0,-2),T=[H.size(w),a,u],$=[{type:"uint32",data:g},{type:"uint32",data:a},{type:"uint32",data:u},{type:"uint32",data:l},...J(w),...J(i),...J(s)];y&&$.push(...J(r[2].dims)),$.push(...J(T));let O=C=>{let M=Oa("batch_dims",r[0].dataType,w.length),R=W("a",r[0].dataType,i.length,p),G=W("b",r[1].dataType,s.length,d),q=ne("output",r[0].dataType,T.length,d),{activationFunction:X,applyActivation:z}=kr(e,q.type.value),V=[R,G],ie="";if(y){let Oe=o?d:1;V.push(W("bias",r[2].dataType,r[2].dims.length,Oe)),ie=`${o?`value += bias[col / ${Oe}];`:`value += ${q.type.value}(bias[row + i]);`}`}let ue=i.slice(0,-2),le=s.slice(0,-2),Ye=Jn(ue,w),it=Jn(le,w),Se=(Oe,Ee)=>{let gt=Oe.rank,at=Oe.name;if(gt===2)return`var ${at}_indices = ${Oe.type.indices}(0u, 0u);`;let st=M.rank,Z=`var ${at}_indices: ${Oe.type.indices};`;for(let de=gt-2-1,Ce=st-1;de>=0;de--,Ce--)Z+=`
${at}_indices[${de}] = ${st>1?`batch_indices[${Ce}]`:"batch_indices"};`;return Ee.forEach(de=>{Z+=`
${at}_indices[${de}] = 0;`}),Z+=`${at}_indices[${gt-2}] = 0u;
                     ${at}_indices[${gt-1}] = 0u;`,Z},je=()=>{let Oe=`var a_data: ${R.type.value};`;for(let Ee=0;Ee<p;Ee++)Oe+=`
              let b_data${Ee} = b[(b_offset + (k + ${Ee}) * uniforms.N + col) / ${d}];`;for(let Ee=0;Ee<h;Ee++){Oe+=`a_data = a[(a_offset + (row + ${Ee}) * uniforms.K + k) / ${p}];`;for(let gt=0;gt<p;gt++)Oe+=`
            values[${Ee}] = fma(${G.type.value}(a_data${p===1?"":`[${gt}]`}), b_data${gt}, values[${Ee}]);
`}return Oe};return`
  ${C.registerUniform("outputSize","u32").registerUniform("M","u32").registerUniform("N","u32").registerUniform("K","u32").registerInternalVariables(M).declareVariables(...V,q)}
  ${X}
  ${C.mainStart()}
    ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    let col = (global_idx % (uniforms.N / ${d})) * ${d};
    var index1 = global_idx / (uniforms.N / ${d});
    let stride1 = uniforms.M / ${h};
    let row = (index1 % stride1) * ${h};
    let batch = index1 / stride1;

    ${n.length===2?"":`let batch_indices = ${M.offsetToIndices("batch")};`}
    ${Se(R,Ye)}
    let a_offset = ${R.indicesToOffset("a_indices")};
    ${Se(G,it)}
    let b_offset = ${G.indicesToOffset("b_indices")};
    var values: array<${q.type.value}, ${h}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${p}) {
      ${je()}
    }
    for (var i = 0u; i < ${h}u; i++) {
      var value = values[i];
      ${ie}
      ${z}
      let cur_indices = ${q.type.indices}(batch, row + i, col);
      let offset = ${q.indicesToOffset("cur_indices")};
      ${q.setByOffset(`offset / ${d}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${e.activationCacheKey}_${d}_${p}_${h}_${o}`,inputDependencies:y?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:$}),getShaderSource:O}},R2=r=>{if(!r||r.length!==2)throw new Error("MatMul requires 2 inputs.");if(r[0].dims[r[0].dims.length-1]!==r[1].dims[r[1].dims.length-2])throw new Error("shared dimension does not match.")},Fg=r=>{R2(r.inputs);let e=Sr.calcShape(r.inputs[0].dims,r.inputs[1].dims,!0);if(!e)throw new Error("Can't use matmul on the given tensors");let n=e[e.length-1],t=r.inputs[0].dims[r.inputs[0].dims.length-1];n<8&&t<8?r.compute(Bu(r.inputs,{activation:"",activationCacheKey:""},e)):r.compute(za(r.inputs,{activation:"",activationCacheKey:""},e))}});var Du,Vg,B2,Ug,Mu,L2,M2,zu,Ru=D(()=>{"use strict";Le();xt();zg();Go();Ng();Qr();Lu();Qn();Du=(r,e,n,t,o,i)=>{let s=r[0],a=r.slice(i?1:2,i?3:4),u=a.length,l=e[0],p=e.slice(2).map((y,w)=>y+(y-1)*(n[w]-1)),g=a.map((y,w)=>y+t[w]+t[w+u]).map((y,w)=>Math.floor((y-p[w]+o[w])/o[w]));return g.splice(0,0,s),g.splice(i?3:1,0,l),g},Vg=[2,3,1,0],B2=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4&&r[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(r[0].dims.length!==r[1].dims.length)throw new Error("filter does not have same dimension as input");let n=r[0].dims[e.format==="NHWC"?r[0].dims.length-1:1],t=r[1].dims[1]*e.group;if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(r.length===3&&(r[2].dims.length!==1||r[1].dims[0]!==r[2].dims[0]))throw new Error("invalid bias");let o=r[0].dims.length-2;if(e.dilations.length!==o)throw new Error(`dilations should be ${o}D`);if(e.strides.length!==o)throw new Error(`strides should be ${o}D`);if(e.pads.length!==o*2)throw new Error(`pads should be ${o*2}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape")},Ug=(r,e)=>{let n=r.kernelShape.slice();for(let i=2;i<e[1].dims.length;++i)n[i-2]===0&&(n[i-2]=e[1].dims[i]);let t=r.pads.slice();xn.adjustPadsBasedOnAutoPad(e[0].dims,r.strides,r.dilations,n,t,r.format==="NHWC",r.autoPad);let o=Object.assign({},r);return Object.assign(o,{kernelShape:n,pads:t,cacheKey:r.cacheKey}),o},Mu=r=>{let e=Ra(r),n=r.format,t=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][r.auto_pad],o=r.dilations,i=r.group,s=r.kernel_shape,a=r.pads,u=r.strides,l=r.w_is_const();return Ae({autoPad:t,format:n,dilations:o,group:i,kernelShape:s,pads:a,strides:u,wIsConst:l,...e})},L2=(r,e,n)=>{let t=Ug(n,e),o=n.format==="NHWC";if(n.group!==1){r.compute(ku(e,t));return}let i=e.length===3,s=e[0].dims[o?1:2],a=e[0].dims[o?2:3],u=e[0].dims[o?3:1],l=e[1].dims[2],d=e[1].dims[3],p=Du(e[0].dims,e[1].dims,n.dilations,t.pads,n.strides,o),h=p[o?1:2],g=p[o?2:3],y=p[o?3:1],w=o&&l===s&&d===a&&n.pads[0]===0&&n.pads[1]===0;if(w||l===1&&d===1&&n.dilations[0]===1&&n.dilations[1]===1&&n.strides[0]===1&&n.strides[1]===1&&n.pads[0]===0&&n.pads[1]===0){let R=p[0],G,q,X,z=[];if(o){let ue=r.kernelCustomData.wT??r.compute(br(e[1],Vg),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];if(n.wIsConst&&!r.kernelCustomData.wT&&(r.kernelCustomData.wT=ue),w){let le=s*a*u;G=e[0].reshape([1,R,le]),q=ue.reshape([1,le,y]),X=[1,R,y]}else G=e[0].reshape([R,s*a,u]),q=ue.reshape([1,u,y]),X=[R,h*g,y];z.push(G),z.push(q)}else G=e[0].reshape([R,u,s*a]),q=e[1].reshape([1,y,u]),X=[R,y,h*g],z.push(q),z.push(G);i&&z.push(e[2]);let V=X[2],ie=z[0].dims[z[0].dims.length-1];V<8&&ie<8?r.compute(Bu(z,t,p,X,o),{inputs:z}):r.compute(za(z,t,p,X,o),{inputs:z});return}let I=!0,T=r.kernelCustomData.wT??r.compute(br(e[1],Vg),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!r.kernelCustomData.wT&&(r.kernelCustomData.wT=T);let $=[e[0],T];i&&$.push(e[2]);let O=o?h*g:y,C=o?y:h*g,M=l*d*u;r.compute(Mg($,t,p,O,C,M,i,I),{inputs:$})},M2=(r,e)=>{let n=e.format==="NHWC",t=[r.inputs[0].reshape(n?[r.inputs[0].dims[0],1,r.inputs[0].dims[1],r.inputs[0].dims[2]]:[r.inputs[0].dims[0],r.inputs[0].dims[1],1,r.inputs[0].dims[2]]),r.inputs[1].reshape([r.inputs[1].dims[0],r.inputs[1].dims[1],1,r.inputs[1].dims[2]])];r.inputs.length===3&&t.push(r.inputs[2]);let o=[0,e.pads[0],0,e.pads[1]],i=[1].concat(e.strides),s=[1].concat(e.dilations),a=[1].concat(e.kernelShape),u=Ug({...e,pads:o,strides:i,dilations:s,kernelShape:a},t);r.compute(ku(t,u,l=>n?[l[0],l[2],l[3]]:[]))},zu=(r,e)=>{B2(r.inputs,e),r.inputs[0].dims.length===3?M2(r,e):L2(r,r.inputs,e)}});var z2,Gg,Wg=D(()=>{"use strict";Jr();Be();Qr();La();Pu();Go();z2=(r,e=!1,n,t=4)=>{let o=It(t,"f32"),i=$=>{switch($){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];
            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];
            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];
            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${$} is not supported.`)}},s=r?`
      let coord = vec4<i32>(batch, iXR, iXC, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, iXR, iXC);
      `,a=r?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,u=r?"outBackprop[1]":"outBackprop[2]",l=r?"outBackprop[2]":"outBackprop[3]",d=r?"row":"col",p=r?"col":"row",h=`
      let inChannels = ${r?"outBackprop[3]":"outBackprop[1]"};
      let outWidth = ${r?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      let outRow = ${d} / outWidth;
      let outCol = ${d} % outWidth;

      let WRow = ${p} / (filterDims[1] * inChannels);
      let WCol = ${p} / inChannels % filterDims[1];
      let xR = f32(outRow - pads[0] + dilation[0] * WRow) / f32(strides[0]);
      let xC = f32(outCol - pads[1] + dilation[1] * WCol) / f32(strides[1]);
      if (xR < 0.0 || xR >= f32(${u}) || fract(xR) > 0.0) {
        return ${o}(0.0);
      }
      if (xC < 0.0 || xC >= f32(${l}) || fract(xC) > 0.0) {
        return ${o}(0.0);
      }
      let iXR = i32(xR);
      let iXC = i32(xC);
      let xCh = ${p} % inChannels;
      ${s}
      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${t}];`,g=r?`
      let col = colIn * ${t};
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${h}
      }
      return ${o}(0.0);`:`
      let col = colIn * ${t};
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${h}
      }
      return ${o}(0.0);`,y=`
      let col = colIn * ${t};
      let inChannels = ${r?"outBackprop[3]":"outBackprop[1]"};
      let coordX = filterDims.x - 1 - row / (filterDims[1] * inChannels);
      let coordY = filterDims.y - 1 - (row / inChannels) % filterDims[1];
      if (${r?"row < uniforms.dimInner && col < uniforms.dimBOuter":"row < uniforms.dimInner && col < uniforms.dimAOuter"}  && coordX >= 0 && coordY >= 0) {
        let rowInner = row % inChannels;
        let coord = vec4<i32>(coordX, coordY, col, rowInner);
        ${i(t)}
      }
      return ${o}(0.0);
      `,{activationFunction:w,applyActivation:I}=kr(n,o);return`
      ${w}
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${o} {
    ${r?g:y}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${o} {
    ${r?y:g}
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${o}) {
    let col = colIn * ${t};
    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
      var value = valueInput;
      let outWidth = ${r?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${a}
      ${Ba(e)}
      ${I}
      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${t}] = value;
    }
  }`},Gg=(r,e,n,t,o,i,s,a)=>{let u=e.format==="NHWC",l=u?r[0].dims[3]:r[0].dims[1],d=n[0],p=u?n[2]:n[3],h=u?n[1]:n[2],g=u?n[3]:n[1],y=u?l%4===0&&g%4===0:p%4===0&&g%4===0,w=u?g:p*h,I=u?p*h:g,T=y?[8,8,1]:[w<=4||I<=4?4:16,w>4&&I<=4?4:16,1],$=y?[4,4,1]:[w<=4?1:4,w>4&&I<=4?1:4,1],O=[Math.ceil(w/T[0]/$[0]),Math.ceil(I/T[1]/$[1]),Math.ceil(d/T[2]/$[2])];ot("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${O}`);let C=y?4:1,M=Math.max(T[0]*C,T[1]),R=y?4:1,G=[{type:"int32",data:t},{type:"int32",data:o},{type:"int32",data:i}],q=W("x",r[0].dataType,r[0].dims.length,R),X=W("w",r[1].dataType,r[1].dims.length,1),z=ne("result",r[0].dataType,n.length,R),V=[q,X];G.push(...J(r[0].dims)),G.push(...J(r[1].dims));let ie="";if(s){let ue=W("bias",r[2].dataType,r[2].dims.length,R);V.push(ue),G.push(...J(r[2].dims)),ie+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${y?"vec4<f32>":"f32"} {
          return bias[coords.${u?"w":"y"}${y?"/ 4":""}];
        }`}return G.push(...J(n)),{name:"Conv2DTransposeMatMul",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:O[0],y:O[1],z:O[2]},programUniforms:G}),getShaderSource:ue=>`
        ${Ma("uniforms.result_strides")}
        ${ue.registerUniform("dimAOuter","i32").registerUniform("dimBOuter","i32").registerUniform("dimInner","i32").declareVariables(...V,z)};
        const outBackprop : vec4<i32> = vec4<i32>(${r[0].dims.join(",")});
        const filterDims : vec2<i32> = vec2<i32>(${e.kernelShape[u?1:2]}, ${e.kernelShape[u?2:3]});
        const effectiveFilterDims : vec2<i32> = filterDims + vec2<i32>(
              ${e.dilations[0]<=1?0:(e.kernelShape[u?1:2]-1)*(e.dilations[0]-1)},
              ${e.dilations[1]<=1?0:(e.kernelShape[u?2:3]-1)*(e.dilations[1]-1)});
        const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${e.pads[0]+e.pads[2]})/2,
                                         i32(effectiveFilterDims[1]) - 1 - (${e.pads[1]+e.pads[3]})/2);
        const strides : vec2<i32> = vec2<i32>(${e.strides[0]}, ${e.strides[1]});
        const dilation : vec2<i32> = vec2<i32>(${e.dilations[0]}, ${e.dilations[1]});
        const dimAOuter : i32 = ${t};
        const dimBOuter : i32 = ${o};
        const dimInner : i32 = ${i};
        ${ie}
        ${z2(u,s,e,C)}
        ${y?Vo($,T,"f32",void 0,!u,M):Uo($,T,"f32",void 0,!u,M,!1,void 0,a)}`}}});var N2,Nu,Hg=D(()=>{"use strict";Jr();Le();Be();N2=(r,e,n,t,o,i,s=!1,a)=>{let u=n.format==="NHWC",l=u?1:2,d=u?2:3,p=u?3:1,h=H.size(t),g=s?2:1,y=n.group,w=e[1].dims,I=w[0]/y,T=w[1],$=`
  fn setOutputAtIndex(flatIndex : u32, value : ${s?`vec4<${a}>`:a}) {
    result[flatIndex] = ${s?`vec4<${a}>`:a}(value);
  }`;o&&($+=`
    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${s?`vec4<${a}>`:a} {
      return bias[coords.${u?"w":"y"}${s?"/ 4":""}];
    }`);let O=s?4:1,C=W("W",e[1].dataType,e[1].dims,O),M=W("Dy",e[0].dataType,e[0].dims,O),R=[M,C];o&&R.push(W("bias",e[2].dataType,[t[p]],O));let G=ne("result",e[0].dataType,t,O),q=`{
        let batch: u32 = ${i?"global_id.z":"workgroup_id.z"} / outShape[1];
        let r = ${i?"global_id.z":"workgroup_id.z"} % outShape[1];
        let c = ${i?"global_id.y":"workgroup_id.y"} * ${g};
        let d1: u32 = ${i?"global_id.x":"workgroup_id.x"} * 4;

        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(pads);

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd: array<vec4<${a}>, ${g}>;
        for (var i = 0; i < ${g}; i++) {
          dotProd[i] = vec4<${a}>(0.0);
        }
        for (var wR: u32 = 0; wR < filterDims[0]; wR = wR + 1) {
          var dyR = (${a}(dyCorner.x) + ${a}(wR)) / ${a}(strides.x);
          let wRPerm = filterDims[0] - 1 - wR;
          if (dyR < 0.0 || dyR >= ${a}(outBackprop[1]) ||
              fract(dyR) > 0.0 || wRPerm < 0) {
            continue;
          }
          let idyR: u32 = u32(dyR);

          for (var wC: u32 = 0; wC < filterDims[1]; wC = wC + 1) {
            let dyC = (${a}(dyCorner.y) + ${a}(wC)) / ${a}(strides.y);
            let dyC2 = (${a}(dyCorner.y) + 1.0 + ${a}(wC)) / ${a}(strides.y);
            let wCPerm = filterDims[1] - 1 - wC;
            if (wCPerm < 0) {
              continue;
            }
            var bDyCVal = true;
            var bDyCVal2 = true;
            if (dyC < 0.0 || dyC >= ${a}(outBackprop[2]) ||
                fract(dyC) > 0.0) {
              bDyCVal = false;
            }
            if (dyC2 < 0.0 || dyC2 >= ${a}(outBackprop[2]) ||
                fract(dyC2) > 0.0) {
              bDyCVal2 = false;
            }

            let idyC: u32 = u32(dyC);
            let idyC2: u32 = u32(dyC2);
            if (bDyCVal && bDyCVal2) {
              let d2Length = outBackprop[3];
              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${M.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${a}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;

                xValue =  ${M.get("batch","idyR","idyC2","d2")};

                dotProd[1] = dotProd[1] + vec4<${a}>(dot(xValue, wValue0),
                                                    dot(xValue, wValue1),
                                                    dot(xValue, wValue2),
                                                    dot(xValue, wValue3));
              }
            } else if (bDyCVal) {
              let d2Length = outBackprop[${p}];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${M.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${a}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;
              }
            } else if (bDyCVal2) {
              let d2Length = outBackprop[3];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${M.get("batch","idyR","idyC2","d2")};
                let tmpval = vec4<${a}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[1] = dotProd[1] + tmpval;
              }
            }
          }
        }

        for (var i: u32 = 0; i < ${g}; i = i + 1) {
          let value = dotProd[i] + ${o?"bias[c+i]":`vec4<${a}>(0.0)`};
          ${G.set("batch","r","c + i","d1","value")};
        }
      }`,X=`
          let outputIndices = ${G.offsetToIndices("global_idx")};
          let batch = ${G.indicesGet("outputIndices",0)};
          let d1 = ${G.indicesGet("outputIndices",p)};
          let r = ${G.indicesGet("outputIndices",l)};
          let c = ${G.indicesGet("outputIndices",d)};
          let dyCorner = vec2<i32>(i32(r), i32(c)) - pads;
          let dyRCorner = dyCorner.x;
          let dyCCorner = dyCorner.y;
          let groupId = d1 / ${T};
          let wOutChannel = d1 - groupId * ${T};
          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
          // ? = to be determined. : = across all values in that axis.
          var dotProd = ${a}(0.0);
          for (var wR: u32 = 0; wR < effectiveFilterDims.x; wR = wR + 1) {
            if (wR % dilations.x != 0) {
              continue;
            }
            let dyR = (${a}(dyRCorner) + ${a}(wR)) / ${a}(strides[0]);
            let wRPerm = filterDims.x - 1 - wR / dilations.x;
            if (dyR < 0.0 || dyR >= ${a}(outBackprop[${l}]) || fract(dyR) > 0.0 ||
                wRPerm < 0) {
              continue;
            }
            let idyR: u32 = u32(dyR);

            for (var wC: u32 = 0; wC < effectiveFilterDims.y; wC = wC + 1) {
              if (wC % dilations.y != 0) {
                continue;
              }
              let dyC = (${a}(dyCCorner) + ${a}(wC)) / ${a}(strides.y);
              let wCPerm = filterDims.y - 1 - wC / dilations.y;
              if (dyC < 0.0 || dyC >= ${a}(outBackprop[${d}]) ||
                  fract(dyC) > 0.0 || wCPerm < 0) {
                continue;
              }
              let idyC: u32 = u32(dyC);
              var inputChannel = groupId * ${I};
              for (var d2: u32 = 0; d2 < ${I}; d2 = d2 + 1) {
                let xValue = ${u?M.get("batch","idyR","idyC","inputChannel"):M.get("batch","inputChannel","idyR","idyC")};
                let wValue = ${C.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};
                dotProd = dotProd + xValue * wValue;
                inputChannel = inputChannel + 1;
              }
            }
          }
          let value = dotProd + ${o?"bias[d1]":`${a}(0.0)`};
          ${G.setByOffset("global_idx","value")};
        `;return`
  ${r.declareVariables(...R,G)}
  ${$}
  const outShape : vec4<u32> = vec4<u32>(${t.join(",")});
  const outBackprop : vec4<u32> = vec4<u32>(${e[0].dims.join(",")});
  const strides : vec2<u32> = vec2<u32>(${n.strides[0]}, ${n.strides[1]});
  const filterDims : vec2<u32> = vec2<u32>(${n.kernelShape[u?1:2]}, ${n.kernelShape[u?2:3]});
  const dilations : vec2<u32> = vec2<u32>(${n.dilations[0]}, ${n.dilations[1]});
  const effectiveFilterDims : vec2<u32> = filterDims + vec2<u32>(
          ${n.dilations[0]<=1?0:(n.kernelShape[u?1:2]-1)*(n.dilations[0]-1)},
          ${n.dilations[1]<=1?0:(n.kernelShape[u?2:3]-1)*(n.dilations[1]-1)});
  const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${n.pads[0]+n.pads[2]})/2,
                                     i32(effectiveFilterDims[1]) - 1 - (${n.pads[1]+n.pads[3]})/2);
    ${r.mainStart()}
    ${r.guardAgainstOutOfBoundsWorkgroupSizes(h)};
  ${s?q:X}}`},Nu=(r,e,n)=>{let t=r.length>2,o=e.outputShape,i=H.size(o),s=[Math.ceil(i/64),1,1];ot("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${s}`);let a=yt(r[0].dataType);return{name:"ConvTranspose2D",shaderCache:{hint:e.cacheKey},getRunData:()=>({dispatchGroup:{x:s[0],y:s[1],z:s[2]},outputs:[{dims:n?n(o):o,dataType:r[0].dataType}]}),getShaderSource:u=>N2(u,r,e,o,t,s[1]===1&&s[2]===1,!1,a)}}});var F2,V2,U2,qg,jg,G2,W2,H2,q2,Kg,Yg=D(()=>{"use strict";xt();Wg();Hg();Qr();Qn();F2=(r,e,n,t,o,i)=>(r-1)*e+n+(t-1)*o+1-i,V2=(r,e,n,t,o)=>{let i=Math.floor(r/2);e==="SAME_UPPER"?(n[t]=i,n[o]=r-i):e==="SAME_LOWER"&&(n[t]=r-i,n[o]=i)},U2=(r,e,n,t,o,i,s,a,u,l)=>{let d=r.length-2,p=l.length===0;if(u.length===0)for(let y=0;y<d;++y)u.push(0);let h=r[0],g=e[a?3:1]*o;for(let y=0,w=r.length-d-(a?1:0);y<d;++y,++w){let I=r[w],T=p?I*s[y]:l[y],$=F2(I,s[y],i[y],e[w],n[y],T);V2($,t,i,y,y+d),p&&l.push(s[y]*(I-1)+u[y]+(e[w]-1)*n[y]+1-i[y]-i[y+d])}l.splice(0,0,h),l.splice(a?3:1,0,g)},qg=(r,e)=>{let n=r.kernelShape.slice();if(r.kernelShape.length===0||r.kernelShape.reduce((h,g)=>h*g,1)===0){n.length=0;for(let h=2;h<e[1].dims.length;++h)n.push(e[1].dims[h])}let t=r.format==="NHWC";n.splice(0,0,e[1].dims[0]),n.splice(t?3:1,0,e[1].dims[1]);let o=r.pads.slice(),i=r.outputShape.slice(),s=r.outputPadding.slice(),a=e[0].dims,u=r.dilations.slice();if(u.reduce((h,g)=>h+g,0)===0){let h=e[0].dims.length-2;u=new Array(h).fill(1)}let l=r.strides.slice();if(l.reduce((h,g)=>h+g,0)===0){let h=e[0].dims.length-2;l=new Array(h).fill(1)}U2(a,n,u,r.autoPad,r.group,o,l,t,s,i);let d=Object.assign({},r),p=r.cacheKey+[n.join("n,"),o.join(","),l.join(","),s.join(","),i.join(","),u.join(",")].join("_");return Object.assign(d,{kernelShape:n,pads:o,outputPadding:s,outputShape:i,dilations:u,strides:l,cacheKey:p}),d},jg=r=>{let e=Ra(r),n=r.format,t=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof r.autoPad>"u"?0:r.autoPad],o=r.dilations,i=r.group,s=r.kernelShape,a=r.pads,u=r.strides,l=r.wIsConst(),d=r.outputPadding,p=r.outputShape;return Ae({autoPad:t,format:n,dilations:o,group:i,kernelShape:s,outputPadding:d,outputShape:p,pads:a,strides:u,wIsConst:l,...e})},G2=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4&&r[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(r[0].dims.length!==r[1].dims.length)throw new Error("filter does not have same dimension as input");let n=r[0].dims[e.format==="NHWC"?r[0].dims.length-1:1],t=r[1].dims[0];if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let o=r[1].dims[1]*e.group;if(r.length===3&&(r[2].dims.length!==1||r[2].dims[0]!==o))throw new Error("invalid bias");let i=r[0].dims.length-2;if(e.dilations.reduce((d,p)=>d+p,0)>0&&e.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(e.strides.reduce((d,p)=>d+p,0)>0&&e.strides.length!==i)throw new Error(`strides should be ${i}D`);if(e.pads.reduce((d,p)=>d+p,0)>0&&e.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(e.outputPadding.length!==i&&e.outputPadding.length!==0)throw new Error(`output_padding should be ${i}D`);if(e.kernelShape.reduce((d,p)=>d+p,0)>0&&e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape");if(e.outputShape.length!==0&&e.outputShape.length!==r[0].dims.length-2)throw new Error("invalid output shape")},W2=[2,3,1,0],H2=(r,e,n)=>{let t=qg(n,e),o=n.format==="NHWC",i=t.outputShape,s=i[o?3:1],a=e[0].dims[o?3:1];if(t.group!==1||s===1&&a===1){r.compute(Nu(e,t));return}let u=i[o?1:2],l=i[o?2:3],d=e[1].dims[2],p=e[1].dims[3],h=o?u*l:s,g=o?s:u*l,y=d*p*a,w=!0,I=r.kernelCustomData.wT??r.compute(br(e[1],W2),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!r.kernelCustomData.wT&&(r.kernelCustomData.wT=I);let T=[e[0],I],$=e.length===3;$&&(!o&&e[2].dims.length===1?T.push(e[2].reshape([e[2].dims[0],1,1])):T.push(e[2])),r.compute(Gg(T,t,i,h,g,y,$,w),{inputs:T})},q2=(r,e)=>{let n=e.format==="NHWC",t=[r.inputs[0].reshape(n?[r.inputs[0].dims[0],1,r.inputs[0].dims[1],r.inputs[0].dims[2]]:[r.inputs[0].dims[0],r.inputs[0].dims[1],1,r.inputs[0].dims[2]]),r.inputs[1].reshape([r.inputs[1].dims[0],r.inputs[1].dims[1],1,r.inputs[1].dims[2]])];t.length===3&&t.push(r.inputs[2]);let o=e.kernelShape;(o.length===0||o[0]===0)&&(o=[r.inputs[1].dims[2]]);let i=e.dilations;(i.length===0||i[0]===0)&&(i=[1]);let s=e.strides;(s.length===0||s[0]===0)&&(s=[1]);let a=e.pads;a.length===0&&(a=[0,0]),a=[0,a[0],0,a[1]],s=[1].concat(s),i=[1].concat(i),o=[1].concat(o);let u=qg({...e,pads:a,strides:s,dilations:i,kernelShape:o},t);r.compute(Nu(t,u,l=>n?[l[0],l[2],l[3]]:[l[0],l[1],l[3]]))},Kg=(r,e)=>{G2(r.inputs,e),r.inputs[0].dims.length===3?q2(r,e):H2(r,r.inputs,e)}});var j2,Xg,Zg,Jg=D(()=>{"use strict";ut();Le();xt();Be();j2=(r,e,n,t)=>{let o=H.size(e),i=e.length,s=W("input",r,i),a=ne("output",r,i),u=n.dataType===6?n.getInt32Array()[0]:Number(n.getBigInt64Array()[0]),l=H.normalizeAxis(u,i),d=p=>{let h=` i32(${s.indicesGet("inputIndices","uniforms.axis")}) `,g=xe("uniforms.input_shape","uniforms.axis",i),y=t.reverse?h+(t.exclusive?" + 1":""):"0",w=t.reverse?g:h+(t.exclusive?"":" + 1");return`
                ${p.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(s,a)}
                ${p.mainStart()}
                  ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${a.offsetToIndices("global_idx")};
                  var sum = ${a.type.value}(0);
                  let first : i32 = ${y};
                  let last : i32 = ${w};
                  for (var i : i32 = first; i < last; i++) {
                    ${s.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${s.getByIndices("inputIndices")};
                  }
                  ${a.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:e,dataType:r}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:[{type:"uint32",data:o},{type:"int32",data:l},...J(e),...J(e)]}),getShaderSource:d}},Xg=(r,e)=>{let n=r.inputs[0].dims,t=r.inputs[0].dataType,o=r.inputs[1];r.compute(j2(t,n,o,e),{inputs:[0]})},Zg=r=>{let e=r.exclusive===1,n=r.reverse===1;return Ae({exclusive:e,reverse:n})}});var Fu,Na,Qg,K2,Y2,Vu,Uu,eb,X2,tb,rb,nb=D(()=>{"use strict";Le();xt();Be();Fu="[a-zA-Z]|\\.\\.\\.",Na="("+Fu+")+",Qg="^"+Na+"$",K2="("+Na+",)*"+Na,Y2="^"+K2+"$",Vu=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,n){let t=this.symbolToIndices.get(e);t===void 0?t=[n]:t.push(n),this.symbolToIndices.set(e,t)}},Uu=class{constructor(e,n){this.equation=n;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[t,o]=n.includes("->")?n.split("->",2):[n,""];if(!t.match(RegExp(Y2)))throw new Error("Invalid LHS term");if(t.split(",").forEach((a,u)=>{let l=e[u].dims.slice();if(!a.match(RegExp(Qg)))throw new Error("Invalid LHS term");let d=this.processTerm(a,!0,l,u);this.lhs.push(d)}),o==="")o+=[...this.symbolToInfo.entries()].filter(([a,u])=>u.count===1||a==="...").map(([a])=>a).join("");else if(!o.match(RegExp(Na)))throw new Error("Invalid RHS");o.match(RegExp(Fu,"g"))?.forEach(a=>{if(a==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let u=this.symbolToInfo.get(a);if(u===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(u.dimValue)}}),this.rhs=this.processTerm(o,!1,this.outputDims)}addSymbol(e,n,t){let o=this.symbolToInfo.get(e);if(o!==void 0){if(o.dimValue!==n&&o.count!==1)throw new Error("Dimension mismatch");o.count++,o.inputIndices.push(t)}else o={count:1,dimValue:n,inputIndices:[t]};this.symbolToInfo.set(e,o)}processTerm(e,n,t,o=-1){let i=t.length,s=!1,a=[],u=0;if(!e.match(RegExp(Qg))&&!n&&e!=="")throw new Error("Invalid LHS term");let l=e.match(RegExp(Fu,"g")),d=new Vu(o);return l?.forEach((p,h)=>{if(p==="..."){if(s)throw new Error("Only one ellipsis is allowed per input term");s=!0;let g=i-l.length+1;if(g<0)throw new Error("Ellipsis out of bounds");if(a=t.slice(u,u+g),this.hasEllipsis){if(this.ellipsisDims.length!==a.length||this.ellipsisDims.toString()!==a.toString())throw new Error("Ellipsis dimensions mismatch")}else if(n)this.hasEllipsis=!0,this.ellipsisDims=a;else throw new Error("Ellipsis must be specified in the LHS");for(let y=0;y<a.length;y++){let w=String.fromCharCode("0".charCodeAt(0)+y);d.addSymbol(w,h+y),this.addSymbol(w,t[u++],o)}}else d.addSymbol(p,h+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(p,t[u++],o)}),d}},eb=r=>r+"_max",X2=(r,e,n,t,o)=>{let s=e.map((g,y)=>r[y]?g.length:g).map((g,y)=>W(`input${y}`,n,g)),a=H.size(o),u=tt(o.length),l=u?o.length:o,d=ne("output",n,l),p=[...t.symbolToInfo.keys()].filter(g=>!t.rhs.symbolToIndices.has(g)),h=g=>{let y=[],w="var prod = 1.0;",I="var sum = 0.0;",T="sum += prod;",$=[],O=[],C=[],M=[],R=t.symbolToInfo.size===t.rhs.symbolToIndices.size;t.symbolToInfo.forEach((q,X)=>{if(t.rhs.symbolToIndices.has(X)){let z=t.rhs.symbolToIndices.get(X)?.[0];z!==void 0&&t.lhs.forEach((V,ie)=>{if(q.inputIndices.includes(ie)){let ue=V.symbolToIndices.get(X);if(ue===void 0)throw new Error("Invalid symbol error");ue.forEach(le=>{y.push(`${s[ie].indicesSet(`input${ie}Indices`,le,d.indicesGet("outputIndices",z))}`)})}})}else t.lhs.forEach((z,V)=>{if(q.inputIndices.includes(V)){let ie=z.symbolToIndices.get(X);if(ie===void 0)throw new Error("Invalid symbol error");ie.forEach(ue=>{$.push(`${s[V].indicesSet(`input${V}Indices`,ue,`${X}`)}`)}),M.push(`prod *= ${s[V].getByIndices(`input${V}Indices`)};`)}}),O.push(`for(var ${X}: u32 = 0; ${X} < uniforms.${eb(X)}; ${X}++) {`),C.push("}")});let G=R?[...y,`let sum = ${s.map((q,X)=>q.getByIndices(`input${X}Indices`)).join(" * ")};`]:[...y,I,...O,...$,w,...M,T,...C];return`
            ${g.registerUniforms(p.map(q=>({name:`${eb(q)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...s,d)}

            ${g.mainStart()}
            ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${d.offsetToIndices("global_idx")};
            ${s.map((q,X)=>`var input${X}Indices: ${s[X].type.indices};`).join(`
`)}
            ${G.join(`
`)};
            ${d.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:t.equation,inputDependencies:r.map(g=>g?"rank":"dims")},getRunData:()=>{let g=p.filter(w=>t.symbolToInfo.has(w)).map(w=>({type:"uint32",data:t.symbolToInfo.get(w)?.dimValue||0}));g.push({type:"uint32",data:a});let y=e.filter((w,I)=>r[I]).map((w,I)=>[...J(w)]).reduce((w,I)=>w.concat(I),g);return u&&y.push(...J(o)),{outputs:[{dims:o,dataType:n}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:y}},getShaderSource:h}},tb=(r,e)=>{let n=new Uu(r.inputs,e.equation),t=r.inputs.map((s,a)=>tt(s.dims.length)),o=n.outputDims,i=r.inputs.map((s,a)=>s.dims);r.compute(X2(t,i,r.inputs[0].dataType,n,o))},rb=r=>{let e=r.equation.replace(/\s+/g,"");return Ae({equation:e})}});var Z2,ob,J2,Q2,ib,ab=D(()=>{"use strict";ut();Le();Be();Z2=r=>{if(!r||r.length!==2)throw new Error("Expand requires 2 input.");let e=r[0].dims,n=Array.from(r[1].getBigInt64Array(),Number),t=n.length<e.length?0:n.length-e.length,o=e.length<n.length?0:e.length-n.length;for(;t<n.length&&o<e.length;++t,++o)if(n[t]!==e[o]&&n[t]!==1&&e[o]!==1)throw new Error("Expand requires shape to be broadcastable to input")},ob=(r,e)=>{let n=r.length-e.length,t=[];for(let o=0;o<n;++o)t.push(r[o]);for(let o=0;o<e.length;++o)t.push(e[o]===1?r[o+n]:e[o]);return t},J2=(r,e)=>r.length>e.length?ob(r,e):ob(e,r),Q2=r=>{let e=r[0].dims,n=Array.from(r[1].getBigInt64Array(),Number),t=J2(e,n),o=r[0].dataType,i=o===9?4:1,s=Math.ceil(H.size(t)/i),a=tt(e.length),u=tt(t.length),l=p=>{let h=a?e.length:e,g=u?t.length:t,y=W("input",o,h,i),w=ne("output",o,g,i),I;if(o===9){let T=($,O,C="")=>`
          let outputIndices${O} = ${w.offsetToIndices(`outputOffset + ${O}u`)};
          let offset${O} = ${y.broadcastedIndicesToOffset(`outputIndices${O}`,w)};
          let index${O} = offset${O} / 4u;
          let component${O} = offset${O} % 4u;
          ${$}[${O}] = ${C}(${y.getByOffset(`index${O}`)}[component${O}]);
        `;I=`
        let outputOffset = global_idx * ${i};
        var data = vec4<u32>(0);
        ${T("data",0,"u32")}
        ${T("data",1,"u32")}
        ${T("data",2,"u32")}
        ${T("data",3,"u32")}
        ${w.setByOffset("global_idx","data")}
      }`}else I=`
        let outputIndices = ${w.offsetToIndices("global_idx")};
        let inputOffset = ${y.broadcastedIndicesToOffset("outputIndices",w)};
        ${w.setByOffset("global_idx",y.getByOffset("inputOffset"))}
      }`;return`
    ${p.registerUniform("vec_size","u32").declareVariables(y,w)}
    ${p.mainStart()}
    ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${I}`},d=[{type:"uint32",data:s}];return a&&d.push(...J(e)),u&&d.push(...J(t)),{name:"Expand",shaderCache:{hint:`${t.length}`,inputDependencies:[a?"rank":"dims"]},getShaderSource:l,getRunData:()=>({outputs:[{dims:t,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:d})}},ib=r=>{Z2(r.inputs),r.compute(Q2(r.inputs),{inputs:[0]})}});var e1,t1,sb,ub,lb=D(()=>{"use strict";ut();Le();xt();Be();e1=r=>{if(!r||r.length!==2)throw new Error("Gather requires 2 inputs.")},t1=(r,e)=>{let n=r[0].dims,t=r[1].dims,o=n.length,i=H.normalizeAxis(e.axis,o),s=n.slice(0);s.splice(i,1,...t);let a=n[i],u=r[0].dataType===9?4:1,l=Math.ceil(H.size(s)/u),d=tt(r[0].dims.length),p=d?r[0].dims.length:r[0].dims,h=tt(r[1].dims.length),g=h?r[1].dims.length:r[1].dims,y=tt(s.length),w=y?s.length:s,I=[{type:"uint32",data:l},{type:"int32",data:a},{type:"uint32",data:i}];d&&I.push(...J(r[0].dims)),h&&I.push(...J(r[1].dims)),y&&I.push(...J(s));let T=[];T.push(d?"rank":"dims"),T.push(h?"rank":"dims");let $=O=>{let C=W("data",r[0].dataType,p,u),M=W("inputIndices",r[1].dataType,g),R=ne("output",r[0].dataType,w,u),G=X=>{let z=t.length,V=`var indicesIndices${X}  = ${M.type.indices}(0);`;for(let ie=0;ie<z;ie++)V+=`${z>1?`indicesIndices${X}[${ie}]`:`indicesIndices${X}`} = ${s.length>1?`outputIndices${X}[uniforms.axis + ${ie}]`:`outputIndices${X}`};`;V+=`
          var idx${X} = ${M.getByIndices(`indicesIndices${X}`)};
          if (idx${X} < 0) {
            idx${X} = idx${X} + uniforms.axisDimLimit;
          }
          var dataIndices${X} = ${C.type.indices}(0);
        `;for(let ie=0,ue=0;ie<o;ie++)ie===i?(V+=`${o>1?`dataIndices${X}[${ie}]`:`dataIndices${X}`} = u32(idx${X});`,ue+=z):(V+=`${o>1?`dataIndices${X}[${ie}]`:`dataIndices${X}`} = ${s.length>1?`outputIndices${X}[${ue}]`:`outputIndices${X}`};`,ue++);return V},q;if(r[0].dataType===9){let X=(z,V,ie="")=>`
          let outputIndices${V} = ${R.offsetToIndices(`outputOffset + ${V}u`)};
          ${G(V)};
          let offset${V} = ${C.indicesToOffset(`dataIndices${V}`)};
          let index${V} = offset${V} / 4u;
          let component${V} = offset${V} % 4u;
          ${z}[${V}] = ${ie}(${C.getByOffset(`index${V}`)}[component${V}]);
        `;q=`
        let outputOffset = global_idx * ${u};
        var value = vec4<u32>(0);
        ${X("value",0,"u32")}
        ${X("value",1,"u32")}
        ${X("value",2,"u32")}
        ${X("value",3,"u32")}
        ${R.setByOffset("global_idx","value")}
      `}else q=`
      let outputIndices = ${R.offsetToIndices("global_idx")};
      ${G("")};
      let value = ${C.getByIndices("dataIndices")};
      ${R.setByOffset("global_idx","value")};
      `;return`
      ${O.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(C,M,R)}
      ${O.mainStart()}
        ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${q}
      }`};return{name:"Gather",shaderCache:{hint:e.cacheKey,inputDependencies:T},getRunData:()=>({outputs:[{dims:s,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:I}),getShaderSource:$}},sb=r=>Ae({axis:r.axis}),ub=(r,e)=>{let n=r.inputs;e1(n),r.compute(t1(r.inputs,e))}});var r1,n1,db,cb,fb=D(()=>{"use strict";Le();xt();Be();r1=r=>{if(!r||r.length!==2)throw new Error("GatherElements requires 2 inputs.");if(r[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(r[0].dims.length!==r[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},n1=(r,e)=>{let n=r[0].dims,t=r[0].dataType,o=n.length,i=r[1].dims,s=r[1].dataType,a=H.normalizeAxis(e.axis,o),u=n[a],l=i.slice(0),d=H.size(l),p=W("input",t,o),h=W("indicesInput",s,i.length),g=ne("output",t,l.length),y=[{type:"uint32",data:d},{type:"int32",data:u},{type:"uint32",data:a}];return y.push(...J(n)),y.push(...J(i)),y.push(...J(l)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:l,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:y}),getShaderSource:T=>`
      ${T.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(p,h,g)}
      ${T.mainStart()}
      ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${g.offsetToIndices("global_idx")};

      var idx = ${h.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${p.type.indices}(outputIndices);
      ${p.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${p.getByIndices("inputIndices")};

      ${g.setByOffset("global_idx","value")};
  }`}},db=r=>Ae({axis:r.axis}),cb=(r,e)=>{let n=r.inputs;r1(n),r.compute(n1(r.inputs,e))}});var o1,i1,pb,hb,mb=D(()=>{"use strict";Le();Be();o1=r=>{if(!r)throw new Error("Input is missing");if(r.length<2||r.length>3)throw new Error("Invaid input number.");if(r.length===3&&r[2].dims.length>2)throw new Error("Invalid input shape of C");if(r[0].dataType!==r[1].dataType||r.length===3&&r[0].dataType!==r[2].dataType)throw new Error("Input types are mismatched")},i1=(r,e)=>{let n=r[0].dims.slice(),t=r[1].dims.slice(),[o,i,s]=Sa.getShapeOfGemmResult(n,e.transA,t,e.transB,r.length===3?r[2].dims:void 0),a=[o,i];if(!a)throw new Error("Can't use gemm on the given tensors");let u=H.size(a),l=[{type:"uint32",data:u},{type:"uint32",data:o},{type:"uint32",data:i},{type:"uint32",data:s},{type:"float32",data:e.alpha},{type:"float32",data:e.beta}],d=["type","type"];r.length===3&&(l.push(...J(r[2].dims)),d.push("rank")),l.push(...J(a));let p=h=>{let g="";e.transA&&e.transB?g="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":e.transA&&!e.transB?g="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!e.transA&&e.transB?g="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!e.transA&&!e.transB&&(g="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let y=e.alpha===1?"":"value *= uniforms.alpha;",w=W("a",r[0].dataType,r[0].dims),I=W("b",r[1].dataType,r[1].dims),T=w.type.value,$=null,O=[w,I];r.length===3&&($=W("c",r[2].dataType,r[2].dims.length),O.push($));let C=ne("output",r[0].dataType,a.length);O.push(C);let M=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${h.registerUniforms(M).declareVariables(...O)}

  ${h.mainStart()}
    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${T}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${g}
    }

    ${y}
    ${(()=>$!=null?`let cOffset = ${$.broadcastedIndicesToOffset("vec2(m, n)",C)}; value += ${T}(uniforms.beta) * ${$.getByOffset("cOffset")};`:"")()}
    output[global_idx] = value;
  }`};return{name:"Gemm",shaderCache:{hint:`${e.cacheKey}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:a,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:l}),getShaderSource:p}},pb=r=>{let e=r.transA,n=r.transB,t=r.alpha,o=r.beta;return{transA:e,transB:n,alpha:t,beta:o,cacheKey:`${r.transA};${r.transB};${r.alpha===1}`}},hb=(r,e)=>{o1(r.inputs),r.compute(i1(r.inputs,e))}});var a1,s1,u1,gb,bb=D(()=>{"use strict";ut();Le();Be();a1=(r,e)=>{let n=r[0].dims,t=n,o=2,i=H.sizeToDimension(n,o),s=H.sizeFromDimension(n,o),a=vt(s),u=s/a,l=[n[0],n[1],u],d=["rank","type","type"],p=[{type:"uint32",data:s},{type:"uint32",data:u}];p.push(...J(l),...J(l));let h=g=>{let y=W("x",r[0].dataType,l.length,a),w=W("scale",r[1].dataType,r[1].dims),I=W("bias",r[2].dataType,r[2].dims),T=ne("output",r[0].dataType,l.length,a),$=[y,w,I,T],O=y.type.value,C=a===1?"f32":`vec${a}<f32>`,M=64,R=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`
  var<workgroup> meanShared : f32;
  var<workgroup> squaredNormShared : f32;
  var<workgroup> workgroupShared : array<${C}, ${M}>;
  const workgroupSize = ${M}u;
  ${g.registerUniforms(R).declareVariables(...$)}
  ${g.mainStart(M)}
    let norm = global_idx / workgroupSize;
    let batch = norm / uniforms.x_shape[1];
    let channel = norm % uniforms.x_shape[1];
    let localIndex = local_id.x;

    // initialize workgroup memory
    var initial = ${C}(0);
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      initial = initial + ${C}(${y.get("batch","channel","h")});
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the mean of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      meanShared = ${qt("workgroupShared[0]",a)} / f32(uniforms.normSize);
    }
    workgroupBarrier();

    // reinitialize workgroup memory.
    initial = ${C}(0);
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      let deviation =  ${C}(${y.get("batch","channel","h")}) - ${C}(meanShared);
      initial = initial + deviation * deviation;
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the sum of square of deviation of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      squaredNormShared = ${qt("workgroupShared[0]",a)};
    }
    workgroupBarrier();

    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${e.epsilon}));
    let channelScale = invStdDev * f32(${w.getByOffset("channel")});
    let channelShift = f32(${I.getByOffset("channel")}) - meanShared * channelScale;
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      let value = ${y.get("batch","channel","h")} * ${O}(${C}(channelScale)) + ${O}(${C}(channelShift));
      ${T.set("batch","channel","h","value")};
    }
  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${e.epsilon};${a}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:t,dataType:r[0].dataType}],dispatchGroup:{x:i},programUniforms:p}),getShaderSource:h}},s1=(r,e,n,t,o,i,s,a)=>{let u=vt(s),l=64,d=u===1?"vec2f":`mat2x${u}f`,p=u===1?"f32":`vec${u}f`,h=(R,G)=>`${d}(${R}, ${G})`,g=o*s/u,y=Math.ceil(i/l),w=["type"],I=[{type:"uint32",data:y},{type:"uint32",data:i},{type:"uint32",data:Math.floor(s/u)},{type:"uint32",data:Math.floor(i*s/u)}],T=R=>{let G=W("input",e.dataType,e.dims,u);return`
  ${R.declareVariables(G)}
  @group(0) @binding(1) var<storage, read_write> output : array<${d}>;
  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};
  @group(0) @binding(2) var<uniform> uniforms: Uniforms;

  ${R.mainStart(l)}
    let currentImageNumber = global_idx / ${l} / uniforms.C;
    let currentChannelNumber = (global_idx / ${l}) % uniforms.C;
    let wgId = global_idx % ${l};
    let wgOffset = wgId * uniforms.wg_size;
    if (wgOffset >= uniforms.H) {
        return;
    }
    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);

    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;
    var sum = ${Dt("f32",u)};
    var squaredSum = ${Dt("f32",u)};
    for (var i: u32 = wgOffset; i < wgMax; i++) {
        let value = ${p}(input[offset + i * uniforms.C]);
        sum += value;
        squaredSum += value * value;
    }
    output[global_idx] = ${h("sum","squaredSum")};
  }`},$=r.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${u}`,inputDependencies:w},getRunData:()=>({outputs:[{dims:[o,s,l,2],dataType:1}],dispatchGroup:{x:o*s/u},programUniforms:I}),getShaderSource:T},{inputs:[e],outputs:[-1]})[0],O=[{type:"uint32",data:g},{type:"uint32",data:i},{type:"uint32",data:Math.floor(s/u)},{type:"uint32",data:Math.floor(l*s/u)}],C=["type","type","type"],M=R=>{let G=W("scale",n.dataType,n.dims,u),q=W("bias",t.dataType,t.dims,u);return`
  @group(0) @binding(0) var<storage, read> input : array<${d}>;
  @group(0) @binding(1) var<storage, read> scale : array<${G.type.storage}>;
  @group(0) @binding(2) var<storage, read> bias : array<${q.type.storage}>;
  @group(0) @binding(3) var<storage, read_write> output : array<${d}>;
  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};
  @group(0) @binding(4) var<uniform> uniforms: Uniforms;

  ${R.mainStart()}
    ${R.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}
    let currentImageNumber = global_idx / uniforms.C;
    let currentChannelNumber = global_idx % uniforms.C;

    let offset = currentImageNumber * uniforms.image_size;
    var sum = ${Dt("f32",u)};
    var squaredSum = ${Dt("f32",u)};
    for (var i: u32 = 0; i < ${l}; i++) {
        let value = input[offset + i + currentChannelNumber * ${l}];
        sum += value[0];
        squaredSum += value[1];
    }
    sum = sum / f32(uniforms.H);
    squaredSum = squaredSum / f32(uniforms.H);
    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${a}));
    let channelScale = invStdDev * ${p}(scale[currentChannelNumber]);
    let channelShift = ${p}(bias[currentChannelNumber]) - sum * channelScale;

    output[global_idx] = ${h("channelScale","channelShift")};
  }`};return r.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${u};${a}`,inputDependencies:C},getRunData:()=>({outputs:[{dims:[o,s,2],dataType:1}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:O}),getShaderSource:M},{inputs:[$,n,t],outputs:[-1]})[0]},u1=(r,e,n)=>{let t=e[0].dims,o=t,i=t[0],s=t[t.length-1],a=H.sizeFromDimension(t,1)/s,u=vt(s),l=H.size(o)/u,d=[{type:"uint32",data:a},{type:"uint32",data:Math.floor(s/u)}],p=["type","type"],h=s1(r,e[0],e[1],e[2],i,a,s,n.epsilon),g=y=>{let w=yt(e[0].dataType),I=u===1?"vec2f":`mat2x${u}f`,T=u===1?w:`vec${u}<${w}>`,$=W("input",e[0].dataType,e[0].dims,u),O=ne("output",e[0].dataType,o,u);return`
  @group(0) @binding(0) var<storage, read> input : array<${$.type.storage}>;
  @group(0) @binding(1) var<storage, read> scaleInput : array<${I}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${O.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${y.mainStart()}
    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);
    let currentChannelNumber = global_idx % uniforms.C;

    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;
    let scale = scaleInput[scaleOffset];
    output[global_idx] = fma(input[global_idx], ${T}(scale[0]), ${T}(scale[1]));
  }`};r.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${u}`,inputDependencies:p},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:d}),getShaderSource:g},{inputs:[e[0],h]})},gb=(r,e)=>{e.format==="NHWC"?u1(r,r.inputs,e):r.compute(a1(r.inputs,e))}});var l1,d1,yb,vb=D(()=>{"use strict";ut();Le();Be();l1=r=>{if(!r||r.length<2)throw new Error("layerNorm requires at least 2 inputs.")},d1=(r,e,n)=>{let t=r[0].dims,o=r[1],i=r[2],s=t,a=H.normalizeAxis(e.axis,t.length),u=H.sizeToDimension(t,a),l=H.sizeFromDimension(t,a),d=H.size(o.dims),p=i?H.size(i.dims):0;if(d!==l||i&&p!==l)throw new Error(`Size of X.shape()[axis:] == ${l}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${d} and bias size of ${p}`);let h=[];for(let C=0;C<t.length;++C)C<a?h.push(t[C]):h.push(1);let g=vt(l),y=["type","type"],w=[{type:"uint32",data:u},{type:"float32",data:l},{type:"uint32",data:Math.floor(l/g)},{type:"float32",data:e.epsilon}];i&&y.push("type");let I=n>1,T=n>2,$=C=>{let M=yt(r[0].dataType),R=[W("x",r[0].dataType,r[0].dims,g),W("scale",o.dataType,o.dims,g)];i&&R.push(W("bias",i.dataType,i.dims,g)),R.push(ne("output",r[0].dataType,s,g)),I&&R.push(ne("mean_data_output",1,h)),T&&R.push(ne("inv_std_output",1,h));let G=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${C.registerUniforms(G).declareVariables(...R)}
  ${C.mainStart()}
    ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var meanVector = ${Dt("f32",g)};
    var meanSquareVector = ${Dt("f32",g)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${gr(M,g,"x[h + offset]")};
      meanVector += value;
      meanSquareVector += value * value;
    }
    let mean = ${qt("meanVector",g)} / uniforms.norm_size;
    let invStdDev =
        inverseSqrt(${qt("meanSquareVector",g)} / uniforms.norm_size - mean * mean + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${gr(M,g,"x[j + offset]")};
      let f32scale = ${gr(M,g,"scale[j]")};
      output[j + offset] = ${R[0].type.value}((f32input - mean) * invStdDev * f32scale
        ${i?`+ ${gr(M,g,"bias[j]")}`:""}
      );
    }

    ${I?"mean_data_output[global_idx] = mean":""};
    ${T?"inv_std_output[global_idx] = invStdDev":""};
  }`},O=[{dims:s,dataType:r[0].dataType}];return I&&O.push({dims:h,dataType:1}),T&&O.push({dims:h,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${g};${n}`,inputDependencies:y},getRunData:()=>({outputs:O,dispatchGroup:{x:Math.ceil(u/64)},programUniforms:w}),getShaderSource:$}},yb=(r,e)=>{l1(r.inputs),r.compute(d1(r.inputs,e,r.outputCount))}});var c1,xb,wb,f1,Gu,Tb,$b=D(()=>{"use strict";Le();xt();$a();Eu();Be();Qn();c1=(r,e)=>{let n=r[0],t=r[1],o=r[2],i=r[3],s=r[4],a=r[5],u=r[6],l=r[7];if(n.dims.length!==3&&n.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let d=!1,p=n.dims[0],h=n.dims[1],g=n.dims.length===3?d?n.dims[2]/3:n.dims[2]:e.numHeads*n.dims[4],y=h,w=0,I=0,T=Math.floor(g/e.numHeads);if(u&&l){if(u.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(l.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');w=u.dims[2],I=u.dims[2]}else if(u||l)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let $;if(t){if(n.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(t.dims.length<3||t.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(n.dims[0]!==t.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(t.dims.length===3){if(t.dims[2]!==n.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');$=2,y=t.dims[1]}else if(t.dims.length===5){if(t.dims[2]!==e.numHeads||t.dims[3]!==2||t.dims[4]!==T)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(o)throw new Error('Expect "value" be none when "key" has packed kv format.');$=5,y=t.dims[1]}else{if(t.dims[1]!==e.numHeads||t.dims[3]!==T)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');$=0,y=t.dims[2]}}else{if(n.dims.length!==3&&n.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(n.dims.length===5&&(n.dims[2]!==e.numHeads||n.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');$=3}if(i){if(i.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(o&&n.dims.length===5&&n.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let O=0;if(s){O=8;let q=s.dims;throw q.length===1?q[0]===p?O=1:q[0]===3*p+2&&(O=3):q.length===2&&q[0]===p&&q[1]===y&&(O=5),O===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)'):new Error("Mask not supported")}let C=!1,M=g;if(o){if(o.dims.length!==3&&o.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(n.dims[0]!==o.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(o.dims.length===3){if(y!==o.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');M=o.dims[2]}else{if(y!==o.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');M=o.dims[1]*o.dims[3],C=!0}}let R=w+y,G=!1;if(s)throw new Error("Key padding mask is not supported");if(a)throw new Error("extraAddQk is not supported");if(u)throw new Error("pastKey is not supported");if(l)throw new Error("pastValue is not supported");return{batchSize:p,sequenceLength:h,pastSequenceLength:w,kvSequenceLength:y,totalSequenceLength:R,maxSequenceLength:I,inputHiddenSize:0,hiddenSize:g,vHiddenSize:M,headSize:T,vHeadSize:Math.floor(M/e.numHeads),numHeads:e.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:e.maskFilterValue,maskType:O,scale:e.scale,broadcastResPosBias:G,passPastInKv:C,qkvFormat:$}},xb=r=>Ae({...r}),wb=Ae({perm:[0,2,1,3]}),f1=(r,e,n,t,o,i,s)=>{let a=[t,o,i],u=H.size(a),l=[{type:"uint32",data:u},{type:"uint32",data:s},{type:"uint32",data:i}],d=p=>{let h=ne("qkv_with_bias",e.dataType,a),g=W("qkv",e.dataType,a),y=W("bias",n.dataType,a),w=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${p.registerUniforms(w).declareVariables(g,y,h)}
  ${p.mainStart()}
    ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return r.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:a,dataType:e.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:l}),getShaderSource:d},{inputs:[e,n],outputs:[-1]})[0]},Gu=(r,e,n,t,o,i,s,a)=>{let u=i;if(s){if(t===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return u=f1(r,i,s,e,t,n*o,a),u=u.reshape([e,t,n,o]),r.compute(br(u,wb.perm),{inputs:[u],outputs:[-1]})[0]}else return i.dims.length===3&&(u=i.reshape([e,t,n,o])),r.compute(br(u,wb.perm),{inputs:[u],outputs:[-1]})[0]},Tb=(r,e)=>{let n=c1(r.inputs,e);if(r.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(r.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let t=r.inputs[1]&&r.inputs[2]&&r.inputs[1].dims.length===4&&r.inputs[2].dims.length===4,o=Gu(r,n.batchSize,n.numHeads,n.sequenceLength,n.headSize,r.inputs[0],r.inputs[3],0);if(t)return Pa(r,o,r.inputs[1],r.inputs[2],r.inputs[4],void 0,void 0,void 0,r.inputs[5],n,e);let i=Gu(r,n.batchSize,n.numHeads,n.kvSequenceLength,n.headSize,r.inputs[1],r.inputs[3],n.hiddenSize),s=Gu(r,n.batchSize,n.numHeads,n.kvSequenceLength,n.vHeadSize,r.inputs[2],r.inputs[3],2*n.hiddenSize);Pa(r,o,i,s,r.inputs[4],void 0,r.inputs[6],r.inputs[7],r.inputs[5],n,e)}});var p1,h1,m1,g1,b1,y1,v1,w1,_b,Sb=D(()=>{"use strict";ut();Le();Be();p1=r=>{if(!r||r.length<1)throw new Error("Too few inputs");if(r[0].dataType!==1)throw new Error("Input type must be float.");if(r.length>=2){let e=r[0].dims.length*2===r[1].dims[0];if(r.length===4&&(e=r[3].dims[0]*2===r[1].dims[0]),!e)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},h1=(r,e,n)=>{let t="";for(let o=e-1;o>=0;--o)t+=`
            k = i32(${r.indicesGet("indices",o)}) - ${xe("uniforms.pads",o,n)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${xe("uniforms.x_shape",o,e)})) {
              break;
            }
            offset += k * i32(${xe("uniforms.x_strides",o,e)});
        `;return`
          value = ${r.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${t}
            value = x[offset];
          }
      `},m1=(r,e,n)=>{let t="";for(let o=e-1;o>=0;--o)t+=`
                k = i32(${r.indicesGet("indices",o)}) - ${xe("uniforms.pads",o,n)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${xe("uniforms.x_shape",o,e)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${xe("uniforms.x_shape",o,e)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${xe("uniforms.x_strides",o,e)});
            `;return`
              var offset = 0;
              var k = 0;
              ${t}
              value = x[offset];
          `},g1=(r,e,n)=>{let t="";for(let o=e-1;o>=0;--o)t+=`
                k = i32(${r.indicesGet("indices",o)}) - ${xe("uniforms.pads",o,n)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${xe("uniforms.x_shape",o,e)})) {
                  k = i32(${xe("uniforms.x_shape",o,e)}) - 1;
                }
                offset += k * i32(${xe("uniforms.x_strides",o,e)});
            `;return`
              var offset = 0;
              var k = 0;
              ${t}
              value = x[offset];
          `},b1=(r,e,n)=>{let t="";for(let o=e-1;o>=0;--o)t+=`
                k = i32(${r.indicesGet("indices",o)}) - ${xe("uniforms.pads",o,n)};
                if (k < 0)  {
                  k += i32(${xe("uniforms.x_shape",o,e)}]);
                }
                if (k >= i32(${xe("uniforms.x_shape",o,e)})) {
                  k -= i32(${xe("uniforms.x_shape",o,e)});
                }
                offset += k * i32(${xe("uniforms.x_strides",o,e)});
            `;return`
              var offset = 0;
              var k = 0;
              ${t}
              value = x[offset];
          `},y1=(r,e,n)=>{switch(n.mode){case 0:return h1(r,e,n.pads.length);case 1:return m1(r,e,n.pads.length);case 2:return g1(r,e,n.pads.length);case 3:return b1(r,e,n.pads.length);default:throw new Error("Invalid mode")}},v1=(r,e)=>{let n=H.padShape(r[0].dims.slice(),e.pads),t=r[0].dims,i=[{type:"uint32",data:H.size(n)},{type:"uint32",data:e.pads}];if(e.mode===0){let u=Ht(r[0].dataType);i.push({type:u,data:e.value})}i.push(...J(r[0].dims),...J(n));let s=["rank"],a=u=>{let l=ne("output",r[0].dataType,n.length),d=W("x",r[0].dataType,t.length),p=d.type.value,h=y1(l,t.length,e),g=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:e.pads.length}];return e.mode===0&&g.push({name:"constant_value",type:p}),`
            ${u.registerUniforms(g).declareVariables(d,l)}
            ${u.mainStart()}
            ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${l.offsetToIndices("global_idx")};

            var value = ${p}(0);
            ${h}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${e.mode}`,inputDependencies:s},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(H.size(n)/64)},programUniforms:i}),getShaderSource:a}},w1=(r,e)=>{if(r.length>1){let n=r[1].getBigInt64Array(),t=r.length>=3&&r[2].data?r[2].getFloat32Array()[0]:0,o=r[0].dims.length,i=new Int32Array(2*o).fill(0);if(r.length>=4){let a=r[3].getBigInt64Array();for(let u=0;u<a.length;u++)i[Number(a[u])]=Number(n[u]),i[Number(a[u])+o]=Number(n[u+a.length])}else n.forEach((a,u)=>i[Number(u)]=Number(a));let s=[];return i.forEach(a=>s.push(a)),{mode:e.mode,value:t,pads:s}}else return e},_b=(r,e)=>{p1(r.inputs);let n=w1(r.inputs,e);r.compute(v1(r.inputs,n),{inputs:[0]})}});var Fa,Ib,Ab,Ob,Eb,x1,T1,Cb,Pb,kb,Db,Rb,Bb,Lb,Mb,zb,Nb,Fb,Vb,Ub=D(()=>{"use strict";Pt();Le();Be();Fa=r=>{if(ye.webgpu.validateInputContent&&(!r||r.length!==1))throw new Error("Pool ops requires 1 input.")},Ib=(r,e,n)=>{let t=e.format==="NHWC",o=r.dims.slice();t&&o.splice(1,0,o.pop());let i=Object.hasOwnProperty.call(e,"dilations"),s=e.kernelShape.slice(),a=e.strides.slice(),u=i?e.dilations.slice():[],l=e.pads.slice();xn.adjustPoolAttributes(n,o,s,a,u,l);let d=xn.computePoolOutputShape(n,o,a,u,s,l,e.autoPad),p=Object.assign({},e);i?Object.assign(p,{kernelShape:s,strides:a,pads:l,dilations:u,cacheKey:e.cacheKey}):Object.assign(p,{kernelShape:s,strides:a,pads:l,cacheKey:e.cacheKey});let h=d.slice();return h.push(h.splice(1,1)[0]),[p,t?h:d]},Ab=(r,e)=>{let n=e.format==="NHWC",t=H.size(r),o=H.size(e.kernelShape),i=[{type:"uint32",data:t},{type:"uint32",data:o}],s=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(e.kernelShape.length<=2){let a=e.kernelShape[e.kernelShape.length-1],u=e.strides[e.strides.length-1],l=e.pads[e.pads.length/2-1],d=e.pads[e.pads.length-1],p=!!(l+d);i.push({type:"uint32",data:a},{type:"uint32",data:u},{type:"uint32",data:l},{type:"uint32",data:d}),s.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let h=!1;if(e.kernelShape.length===2){let g=e.kernelShape[e.kernelShape.length-2],y=e.strides[e.strides.length-2],w=e.pads[e.pads.length/2-2],I=e.pads[e.pads.length-2];h=!!(w+I),i.push({type:"uint32",data:g},{type:"uint32",data:y},{type:"uint32",data:w},{type:"uint32",data:I}),s.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[i,s,!0,p,h]}else{if(n)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let a=H.computeStrides(e.kernelShape);i.push({type:"uint32",data:a},{type:"uint32",data:e.pads},{type:"uint32",data:e.strides}),s.push({name:"kernelStrides",type:"u32",length:a.length},{name:"pads",type:"u32",length:e.pads.length},{name:"strides",type:"u32",length:e.strides.length});let u=e.pads.reduce((l,d)=>l+d);return[i,s,!!u,!1,!1]}},Ob=(r,e,n,t,o,i,s,a,u,l,d,p)=>{let h=o.format==="NHWC",g=e.type.value,y=ne("output",e.type.tensor,t);if(o.kernelShape.length<=2){let w="",I="",T="",$=n-(h?2:1);if(d?w=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${$}] = indices[${$}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${$}] < 0 || xIndices[${$}]
                      >= uniforms.x_shape[${$}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${e.indicesToOffset("xIndices")}];
                  ${i}
                }`:w=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${$}] = indices[${$}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${e.indicesToOffset("xIndices")}];
                  ${i}
                }`,o.kernelShape.length===2){let C=n-(h?3:2);p?I=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${C}] = indices[${C}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${C}] < 0 || xIndices[${C}] >= uniforms.x_shape[${C}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:I=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${C}] = indices[${C}] * uniforms.sh - uniforms.phStart + j;
                `,T=`
              }
            `}return`
            ${r.registerUniforms(u).declareVariables(e,y)}

            ${r.mainStart()}
              ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${y.offsetToIndices("global_idx")};
              var xIndices = ${y.offsetToIndices("global_idx")};

              var value = ${g}(${a});
              var pad = 0;
              ${I}
              ${w}
              ${T}
              ${s}

              output[global_idx] = value;
            }`}else{if(h)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let w=o.kernelShape.length,I=o.pads.length,T="";return l?T=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${e.indicesToOffset("xIndices")}];
                ${i}
              }`:T=`
              }
              let x_val = x[${e.indicesToOffset("xIndices")}];
              ${i}
            `,`
            ${r.registerUniforms(u).declareVariables(e,y)}

            ${r.mainStart()}
              ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${y.offsetToIndices("global_idx")};
              var xIndices = ${y.offsetToIndices("global_idx")};

              var offsets: array<u32, ${w}>;

              var value = ${g}(${a});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${w-1}u; j++) {
                  offsets[j] = offset / ${xe("uniforms.kernelStrides","j",w)};
                  offset -= offsets[j] * ${xe("uniforms.kernelStrides","j",w)};
                }
                offsets[${w-1}] = offset;

                isPad = false;
                for (var j = ${n-w}u; j < ${n}u; j++) {
                  xIndices[j] = indices[j] * ${xe("uniforms.strides",`j - ${n-w}u`,w)}
                    + offsets[j - ${n-w}u] - ${xe("uniforms.pads","j - 2u",I)};
                  ${T}
              }
              ${s}

              output[global_idx] = value;
            }`}},Eb=r=>`${r.format};${r.ceilMode};${r.autoPad};${r.kernelShape.length}`,x1=r=>`${Eb(r)};${r.countIncludePad}`,T1=r=>`${Eb(r)};${r.storageOrder};${r.dilations}`,Cb=r=>({format:r.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][r.auto_pad],ceilMode:r.ceil_mode,kernelShape:r.kernel_shape,strides:r.strides,pads:r.pads}),Pb=(r,e,n,t)=>{let[o,i]=Ib(e,t,n),s=W("x",e.dataType,e.dims.length),a=s.type.value,u="value += x_val;",l="";o.countIncludePad?l+=`value /= ${a}(uniforms.kernelSize);`:l+=`value /= ${a}(i32(uniforms.kernelSize) - pad);`;let[d,p,h,g,y]=Ab(i,o);d.push(...J(e.dims),...J(i));let w=["rank"];return{name:r,shaderCache:{hint:`${t.cacheKey};${h};${g};${y}`,inputDependencies:w},getRunData:()=>({outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(H.size(i)/64)},programUniforms:d}),getShaderSource:I=>Ob(I,s,e.dims.length,i.length,o,u,l,0,p,h,g,y)}},kb=r=>{let e=r.count_include_pad!==0,n=Cb(r);if(n.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let t={countIncludePad:e,...n,cacheKey:""};return{...t,cacheKey:x1(t)}},Db=(r,e)=>{Fa(r.inputs),r.compute(Pb("AveragePool",r.inputs[0],!1,e))},Rb={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},Bb=r=>{let e=r.format;return{format:e,...Rb,cacheKey:e}},Lb=(r,e)=>{Fa(r.inputs),r.compute(Pb("GlobalAveragePool",r.inputs[0],!0,e))},Mb=(r,e,n,t)=>{let[o,i]=Ib(e,t,n),s=`
      value = max(x_val, value);
    `,a="",u=W("x",e.dataType,e.dims.length),l=["rank"],[d,p,h,g,y]=Ab(i,o);return d.push(...J(e.dims),...J(i)),{name:r,shaderCache:{hint:`${t.cacheKey};${h};${g};${y}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(H.size(i)/64)},programUniforms:d}),getShaderSource:w=>Ob(w,u,e.dims.length,i.length,o,s,a,-1e5,p,h,g,y)}},zb=(r,e)=>{Fa(r.inputs),r.compute(Mb("MaxPool",r.inputs[0],!1,e))},Nb=r=>{let e=r.storage_order,n=r.dilations,t=Cb(r);if(e!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(t.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let o={storageOrder:e,dilations:n,...t,cacheKey:""};return{...o,cacheKey:T1(o)}},Fb=r=>{let e=r.format;return{format:e,...Rb,cacheKey:e}},Vb=(r,e)=>{Fa(r.inputs),r.compute(Mb("GlobalMaxPool",r.inputs[0],!0,e))}});var _1,S1,Gb,Wb=D(()=>{"use strict";Pt();ut();Be();_1=(r,e,n)=>{let t=r===e,o=r<e&&n<0,i=r>e&&n>0;if(t||o||i)throw new Error("Range these inputs' contents are invalid.")},S1=(r,e,n,t)=>{let o=Math.abs(Math.ceil((e-r)/n)),i=[o],s=o,a=Ht(t),u=[{type:"uint32",data:s},{type:a,data:r},{type:a,data:n},...J(i)],l=d=>{let p=ne("output",t,i.length),h=p.type.value,g=[{name:"outputSize",type:"u32"},{name:"start",type:h},{name:"delta",type:h}];return`
        ${d.registerUniforms(g).declareVariables(p)}
        ${d.mainStart()}
        ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${h}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${t}`},getShaderSource:l,getRunData:()=>({outputs:[{dims:i,dataType:t}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:u})}},Gb=r=>{let e=0,n=0,t=0;r.inputs[0].dataType===6?(e=r.inputs[0].getInt32Array()[0],n=r.inputs[1].getInt32Array()[0],t=r.inputs[2].getInt32Array()[0]):r.inputs[0].dataType===1&&(e=r.inputs[0].getFloat32Array()[0],n=r.inputs[1].getFloat32Array()[0],t=r.inputs[2].getFloat32Array()[0]),ye.webgpu.validateInputContent&&_1(e,n,t),r.compute(S1(e,n,t,r.inputs[0].dataType),{inputs:[]})}});var I1,A1,O1,E1,C1,P1,k1,D1,R1,B1,L1,Hb,M1,z1,N1,F1,V1,qb,jb,Kb=D(()=>{"use strict";Le();xt();Be();I1=(r,e)=>{if(r.every(n=>n>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),r.length>0){if(e.mode==="linear"){if(!(r.length===2||r.length===3||r.length===4&&r[0]===1&&r[1]===1||r.length===4&&r[0]===1&&r[3]===1||r.length===5&&r[0]===1&&r[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(e.mode==="cubic"&&!(r.length===2||r.length===4&&r[0]===1&&r[1]===1||r.length===4&&r[0]===1&&r[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},A1=(r,e,n)=>{e.every(o=>o>=0&&o<n||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let t=new Array(n).fill(1);return e.forEach((o,i)=>t[o]=r[i]),t},O1=(r,e,n,t,o,i)=>{let[s,a,u]=n>10?[1,2,3]:[-1,r.length>1?1:-1,-1],l=r[0].dims.length;if(s>0&&r.length>s&&r[s].dims.length>0)r[s].getFloat32Array().forEach(d=>i.push(d));else if(e.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(a>0&&r.length>a&&r[a].dims.length>0){if(r[a].getFloat32Array().forEach(d=>t.push(d)),t.length!==0&&t.length!==l&&n>=18&&t.length!==e.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");I1(t,e),e.axes.length>0&&A1(t,e.axes,l).forEach((d,p)=>t[p]=d)}if(u>0&&r.length>u&&(r[u].getBigInt64Array().forEach(d=>o.push(Number(d))),o.length!==l||n>=18&&o.length===e.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(e.axes.length>0){if(t.length!==e.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(o.length!==e.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof t<"u"&&typeof o<"u"&&t.length>0&&o.length>l)throw new Error("Resize requires only of scales or sizes to be specified")},E1=(r,e)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${e} { `+(()=>{switch(r){case"asymmetric":return`return ${e}(xResized) / ${e}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${e}(xResized) + 0.5) / ${e}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${e}(xResized) + 0.5) / ${e}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating
                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
                    // offset-by-one error later in floor().
                    let whole = ${e}(xResized * (lengthOriginal - 1) / (lengthResized - 1));
                    let fract =
                        ${e}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${e}(lengthResized - 1);
                    return whole + fract;
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${e}(roiStart) * ${e}(lengthOriginal - 1) +
                        (${e}(xResized) * ${e}(roiEnd - roiStart) * ${e}(lengthOriginal - 1)) /
                        ${e}(lengthResized - 1);
                  } else {
                    return 0.5 * ${e}(roiStart + roiEnd) * ${e}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${e}xScale * ${e}(lengthResized);
                  const adjustment = ${e}(lengthResized) / outputWidth;
                  const center = ${e}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${e}(xResized) + 0.5) / ${e}(xScale)) - 0.5;`;case"half_pixel":return`return ((${e}(xResized) + 0.5) / ${e}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${r} is not supported`)}})()+"}",C1=(r,e,n)=>`fn getNearestPixelFromOriginal(xOriginal: ${n}, isDownSample: bool) -> ${n} {`+(()=>{switch(r){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(e<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${r} is not supported`)}})()+"}",P1=(r,e,n)=>{let t=new Array(n).fill(0).concat(new Array(n).fill(1)),o=r.length===0?t:r.slice();return e.length>0?(e.forEach((i,s)=>{t[i]=o[s],t[s+n]=o[e.length+s]}),t):o},k1=(r,e,n,t)=>{let o=[];if(n.length>0)if(t.length>0){if(r.forEach(i=>o.push(i)),Math.max(...t)>r.length)throw new Error("axes is out of bound");t.forEach((i,s)=>o[i]=n[s])}else n.forEach(i=>o.push(i));else{if(e.length===0)throw new Error("Resize requires either scales or sizes.");o=r.map((i,s)=>Math.round(i*e[s]))}return o},D1=(r,e,n)=>{let t=(()=>{switch(n.keepAspectRatioPolicy){case"not_larger":return n.axes.length>0?Math.min(...n.axes.map(i=>e[i]),Number.MAX_VALUE):Math.min(...e,Number.MAX_VALUE);case"not_smaller":return n.axes.length>0?Math.max(...n.axes.map(i=>e[i]),Number.MIN_VALUE):Math.max(...e,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${n.keepAspectRatioPolicy} is not supported`)}})();e.fill(1,0,e.length);let o=r.slice();return n.axes.length>0?(n.axes.forEach(i=>e[i]=t),n.axes.forEach(i=>o[i]=Math.round(r[i]*e[i]))):(e.fill(t,0,e.length),o.forEach((i,s)=>o[s]=Math.round(i*e[s]))),o},R1=(r,e,n,t,o)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${r.type.indices}) -> array<${r.type.value}, ${n.length}> {
      var original_indices: array<${r.type.value}, ${n.length}>;
      for (var i:u32 = 0; i < ${n.length}; i++) {
        var output_index = ${r.indicesGet("output_indices","i")};
        var scale = ${xe("uniforms.scales","i",t)};
        var roi_low = ${xe("uniforms.roi","i",o)};
        var roi_hi = ${xe("uniforms.roi",`i + ${e.length}`,o)};
        if (scale == 1.0) {
          original_indices[i] = ${r.type.value}(output_index);
        } else {
          var input_shape_i = ${xe("uniforms.input_shape","i",e.length)};
          var output_shape_i = ${xe("uniforms.output_shape","i",n.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,B1=(r,e,n,t,o,i,s)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> ${r.type.indices} {
      var input_indices: ${r.type.indices};
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${xe("uniforms.scales","i",o)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${xe("uniforms.roi","i",i)};
          var roi_hi = ${xe("uniforms.roi",`i + ${n.length}`,i)};
          var input_shape_i = ${xe("uniforms.input_shape","i",n.length)};
          var output_shape_i = ${xe("uniforms.output_shape","i",t.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${s} || (original_idx >= 0 && original_idx < ${e.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${e.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${r.indicesSet("input_indices","i"," input_index")}
      }
      return input_indices;
    }`,L1=(r,e)=>`
    fn checkInputIndices(input_indices: ${r.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${e.length}; i++) {
        var input_index = ${r.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${xe("uniforms.input_shape","i",e.length)}) {
          return false;
        }
      }
      return true;
    }`,Hb=(r,e,n,t)=>r.rank>t?`
    ${r.indicesSet("input_indices",e,"channel")};
    ${r.indicesSet("input_indices",n,"batch")};
`:"",M1=(r,e,n,t,o)=>{let[s,a,u,l]=n.length===2?[-1,0,1,-1]:[0,2,3,1],d=r.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${d} {
      var input_indices: ${r.type.indices};
      ${r.indicesSet("input_indices",a,`max(0, min(row, ${n[a]} - 1))`)};
      ${r.indicesSet("input_indices",u,`max(0, min(col, ${n[u]} - 1))`)};
      ${Hb(r,l,s,2)}
      return ${r.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${e.type.indices}) -> ${d} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${d} = originalIndices[${a}];
      var col:${d} = originalIndices[${u}];
      ${t?`if (row < 0 || row > (${n[a]} - 1) || col < 0 || col > (${n[u]} - 1)) {
        return ${o};
      }`:""};
      row = max(0, min(row, ${n[a]} - 1));
      col = max(0, min(col, ${n[u]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${n.length>2?`u32(originalIndices[${l}])`:"0"};
      var batch: u32 =  ${n.length>2?`u32(originalIndices[${s}])`:"0"};
      var x11: ${d} = getInputValue(batch, channel, row1, col1);
      var x12: ${d} = getInputValue(batch, channel, row1, col2);
      var x21: ${d} = getInputValue(batch, channel, row2, col1);
      var x22: ${d} = getInputValue(batch, channel, row2, col2);
      var dx1: ${d} = abs(row - ${d}(row1));
      var dx2: ${d} = abs(${d}(row2) - row);
      var dy1: ${d} = abs(col - ${d}(col1));
      var dy2: ${d} = abs(${d}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},z1=(r,e,n,t,o,i,s,a,u,l)=>{let d=n.length===2,p=!0,[h,g]=d?[0,1]:p?[2,3]:[1,2],y=r.type.value,w=I=>{let T=I===h?"row":"col";return`
      fn ${T}CubicInterpolation(input_indices: ${r.type.indices}, output_indices: ${e.type.indices}) -> ${y} {
        var output_index = ${e.indicesGet("output_indices",I)};
        var originalIdx: ${y} = getOriginalCoordinateFromResizedCoordinate(output_index, ${o[I]},
        ${t[I]}, ${n[I]}, ${i[I]}, ${i[I]} + ${n.length});
        var fractOriginalIdx: ${y} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${a} && (originalIdx < 0 || originalIdx > (${n[I]} - 1))) {
          return ${u};
        }
        var data: array<${y}, 4> = array<${y}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${T}: ${y} = originalIdx + ${y}(i);
          if (${T} < 0 || ${T} >= ${n[I]}) {
            ${(()=>l?`coefs[i + 1] = 0.0;
                        continue;`:a?`return ${u};`:`${T} = max(0, min(${T}, ${n[I]} - 1));`)()};
          }
        var input_indices_copy: ${r.type.indices} = input_indices;
          ${r.indicesSet("input_indices_copy",I,`u32(${T})`)};
          data[i + 1] = ${I===h?r.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${w(h)};
    ${w(g)};
  fn getCubicInterpolationCoefs(s: ${y}) -> array<${y}, 4> {
    var absS = abs(s);
    var coeffs: array<${y}, 4> = array<${y}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${y} = 1.0 - absS;
    var twoMinusAbsS: ${y} = 2.0 - absS;
    var onePlusAbsS: ${y} = 1.0 + absS;
    coeffs[0] = ((${s} * onePlusAbsS - 5 * ${s}) * onePlusAbsS + 8 * ${s}) * onePlusAbsS - 4 * ${s};
    coeffs[1] = ((${s} + 2) * absS - (${s} + 3)) * absS * absS + 1;
    coeffs[2] = ((${s} + 2) * oneMinusAbsS - (${s} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${s} * twoMinusAbsS - 5 * ${s}) * twoMinusAbsS + 8 * ${s}) * twoMinusAbsS - 4 * ${s};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${y}, 4>, coefs: array<${y}, 4>) -> ${y} {
    var coefsSum: ${y} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${e.type.indices}) -> ${y} {
    var input_indices: ${r.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},N1=(r,e,n,t,o)=>{let[s,a,u,l,d]=n.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],p=r.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${p} {
      var input_indices: ${r.type.indices};
      ${r.indicesSet("input_indices",a,`max(0, min(depth, ${n[a]} - 1))`)};
      ${r.indicesSet("input_indices",u,`max(0, min(height, ${n[u]} - 1))`)};
      ${r.indicesSet("input_indices",l,`max(0, min(width, ${n[l]} - 1))`)};
      ${Hb(r,d,s,3)}
      return ${r.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${e.type.indices}) -> ${p} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${p} = originalIndices[${a}];
      var height:${p} = originalIndices[${u}];
      var width:${p} = originalIndices[${l}];
      ${t?`if (depth < 0 || depth > (${n[a]} - 1) || height < 0 || height > (${n[u]} - 1) || width < 0 || (width > ${n[l]} - 1)) {
      return ${o};
        }`:""};

    depth = max(0, min(depth, ${n[a]} - 1));
      height = max(0, min(height, ${n[u]} - 1));
      width = max(0, min(width, ${n[l]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${n.length>3?`u32(originalIndices[${d}])`:"0"};
      var batch: u32 =  ${n.length>3?`u32(originalIndices[${s}])`:"0"};

      var x111: ${p} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${p} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${p} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${p} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${p} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${p} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${p} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${p} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${p} = abs(depth - ${p}(depth1));
      var dx2: ${p} = abs(${p}(depth2) - depth);
      var dy1: ${p} = abs(height - ${p}(height1));
      var dy2: ${p} = abs(${p}(height2) - height);
      var dz1: ${p} = abs(width - ${p}(width1));
      var dz2: ${p} = abs(${p}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},F1=(r,e,n,t,o,i)=>{let s=r.dims,a=P1(i,e.axes,s.length),u=k1(s,t,o,e.axes),l=t.slice();t.length===0&&(l=s.map(($,O)=>$===0?1:u[O]/$),e.keepAspectRatioPolicy!=="stretch"&&(u=D1(s,l,e)));let d=ne("output",r.dataType,u.length),p=W("input",r.dataType,s.length),h=H.size(u),g=s.length===u.length&&s.every(($,O)=>$===u[O]),y=e.coordinateTransformMode==="tf_crop_and_resize",w=e.extrapolationValue,I=p.type.value,T=$=>`
      ${g?"":`
      ${E1(e.coordinateTransformMode,I)};
      ${(()=>{switch(e.mode){case"nearest":return`
              ${L1(p,s)};
              ${C1(e.nearestMode,n,I)};
              ${B1(p,d,s,u,l.length,a.length,y)};
              `;case"linear":return`
              ${R1(d,s,u,l.length,a.length)};
              ${(()=>{if(s.length===2||s.length===4)return`${M1(p,d,s,y,w)}`;if(s.length===3||s.length===5)return`${N1(p,d,s,y,w)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(s.length===2||s.length===4)return`${z1(p,d,s,u,l,a,e.cubicCoeffA,y,e.extrapolationValue,e.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${$.registerUniform("output_size","u32").registerUniform("scales","f32",l.length).registerUniform("roi","f32",a.length).declareVariables(p,d)}
      ${$.mainStart()}
        ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${g?"output[global_idx] = input[global_idx];":`
        let output_indices = ${d.offsetToIndices("global_idx")};
        var input_indices: ${p.type.indices};
        ${(()=>{switch(e.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${p.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${e.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${s.length===2||s.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${e.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${e.cacheKey}|${n}|${l.length>0?l:""}|${o.length>0?o:""}|${a.length>0?a:""}|${g}|${s}`,inputDependencies:["rank"]},getShaderSource:T,getRunData:()=>({outputs:[{dims:u,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:[{type:"uint32",data:h},{type:"float32",data:l},{type:"float32",data:a},...J(s),...J(u)]})}},V1=r=>{let e=r.customDataBuffer;return new Uint32Array(e,e.byteOffset,1)[0]},qb=(r,e)=>{let n=[],t=[],o=[],i=V1(r);if(e.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");O1(r.inputs,e,i,n,t,o),r.compute(F1(r.inputs[0],e,i,n,t,o),{inputs:[0]})},jb=r=>{let e=r.antialias,n=r.axes,t=r.coordinateTransformMode,o=r.cubicCoeffA,i=r.excludeOutside!==0,s=r.extrapolationValue,a=r.keepAspectRatioPolicy,u=r.mode,l=r.nearestMode===""?"simple":r.nearestMode;return Ae({antialias:e,axes:n,coordinateTransformMode:t,cubicCoeffA:o,excludeOutside:i,extrapolationValue:s,keepAspectRatioPolicy:a,mode:u,nearestMode:l})}});var U1,G1,Yb,Xb,Zb=D(()=>{"use strict";ut();Le();xt();Be();U1=r=>{if(!r||r.length<3)throw new Error("layerNorm requires at least 3 inputs.");let e=r[0],n=r[1],t=r[2];if(e.dataType!==n.dataType||e.dataType!==t.dataType)throw new Error("All inputs must have the same data type");if(e.dims.length!==3&&e.dims.length!==2)throw new Error("Input must be 2D or 3D");if(n.dims.length!==3&&n.dims.length!==2)throw new Error("Skip must be 2D or 3D");let o=e.dims[e.dims.length-1],i=e.dims[e.dims.length-2];if(n.dims[n.dims.length-1]!==o)throw new Error("Skip must have the same hidden size as input");if(n.dims[n.dims.length-2]!==i)throw new Error("Skip must have the same sequence length as input");if(t.dims.length!==1)throw new Error("Gamma must be 1D");if(t.dims[t.dims.length-1]!==o)throw new Error("Gamma must have the same hidden size as input");if(r.length>3){let s=r[3];if(s.dims.length!==1)throw new Error("Beta must be 1D");if(s.dims[s.dims.length-1]!==o)throw new Error("Beta must have the same hidden size as input")}if(r.length>4){let s=r[4];if(s.dims.length!==1)throw new Error("Bias must be 1D");if(s.dims[s.dims.length-1]!==o)throw new Error("Bias must have the same hidden size as input")}},G1=(r,e,n,t)=>{let o=r[0].dims,i=H.size(o),s=o,a=i,u=o.slice(-1)[0],l=t?o.slice(0,-1).concat(1):[],d=r.length>3,p=r.length>4,h=t&&n>1,g=t&&n>2,y=n>3,w=vt(u),I=[W("x",r[0].dataType,r[0].dims,w),W("skip",r[1].dataType,r[1].dims,w),W("gamma",r[2].dataType,r[2].dims,w)];d&&I.push(W("beta",r[3].dataType,r[3].dims,w)),p&&I.push(W("bias",r[4].dataType,r[4].dims,w)),I.push(ne("output",r[0].dataType,s,w)),h&&I.push(ne("meanOutput",1,l)),g&&I.push(ne("invStdOutput",1,l)),y&&I.push(ne("inputSkipBiasSum",r[0].dataType,s,w));let T=yt(r[0].dataType),$=C=>`
      const hiddenSize: f32 = ${u};
      const hiddenSizeVectorized: u32 = ${u/w};
      const epsilon: f32 = ${e.epsilon};

      ${C.declareVariables(...I)}

      ${C.mainStart()}
        ${C.guardAgainstOutOfBoundsWorkgroupSizes(a/u)}
        let offset = global_idx * hiddenSizeVectorized;
        var sum = ${Dt("f32",w)};
        var squareSum = ${Dt("f32",w)};
        for (var i: u32 = 0; i < hiddenSizeVectorized; i++) {
          let skipValue = skip[offset + i];
          let biasValue = ${p?"bias[i]":"0.0"};
          let inputValue = x[offset + i];
          let value = inputValue + skipValue + biasValue;
          ${y?"inputSkipBiasSum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32Value = ${gr(T,w,"value")};
          sum += f32Value;
          squareSum += f32Value * f32Value;
        }
        let mean = ${qt("sum",w)} / hiddenSize;
        let invStdDev = inverseSqrt(${qt("squareSum",w)} / hiddenSize - mean * mean + epsilon);
        ${h?"meanOutput[global_idx] = mean;":""}
        ${g?"invStdOutput[global_idx] = invStdDev;":""}
        for (var i: u32 = 0; i < hiddenSizeVectorized; i++) {
          output[offset + i] = (output[offset + i] - ${T}(mean)) * ${T}(invStdDev) * gamma[i]
           + ${d?"beta[i]":"0.0"};
        }
      }`,O=[{dims:s,dataType:r[0].dataType}];return n>1&&O.push({dims:l,dataType:1}),n>2&&O.push({dims:l,dataType:1}),n>3&&O.push({dims:o,dataType:r[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:e.cacheKey},getShaderSource:$,getRunData:()=>({outputs:O,dispatchGroup:{x:Math.ceil(a/u/64)}})}},Yb=(r,e)=>{U1(r.inputs);let t=[0];r.outputCount>1&&t.push(-3),r.outputCount>2&&t.push(-3),r.outputCount>3&&t.push(3),r.compute(G1(r.inputs,e,r.outputCount,!1),{outputs:t})},Xb=r=>{let e=r.epsilon;return Ae({epsilon:e})}});var W1,Va,H1,Jb,q1,j1,Qb,ey,ty=D(()=>{"use strict";ut();Le();xt();Be();W1=(r,e)=>{if(!r||r.length<1)throw new Error("too few inputs");if(e.axes.length!==0){if(e.axes.length!==e.starts.length||e.axes.length!==e.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(e.starts.length!==e.ends.length)throw new Error("starts and ends must have the same length");r.slice(1).forEach((n,t)=>{if(r[t+1].dataType!==6&&r[t+1].dataType!==7)throw new Error(`Input ${t} must be an array of int32 or int64`)})},Va=(r,e)=>{let n=[];if(r.length>e)if(r[e].dataType===7)r[e].getBigInt64Array().forEach(t=>n.push(Number(t)));else if(r[e].dataType===6)r[e].getInt32Array().forEach(t=>n.push(Number(t)));else throw new Error(`Input ${e} must be an array of int32 or int64`);return n},H1=(r,e)=>{if(r.length>1){let n=Va(r,1),t=Va(r,2),o=Va(r,3);return o.length===0&&(o=[...Array(r[0].dims.length).keys()]),Ae({starts:n,ends:t,axes:o})}else return e},Jb=(r,e,n,t,o)=>{let i=r;return r<0&&(i+=n[t[e]]),o[e]<0?Math.max(0,Math.min(i,n[t[e]]-1)):Math.max(0,Math.min(i,n[t[e]]))},q1=(r,e,n)=>`fn calculateInputIndices(output_indices: ${e.type.indices}) -> ${r.type.indices} {
          var input_indices: ${r.type.indices};
          var carry = 0u;
          for (var i = ${n.length}; i >= 0; i--) {
            let input_shape_i = ${xe("uniforms.input_shape","i",n.length)};
            let steps_i = ${xe("uniforms.steps","i",n.length)};
            let signs_i = ${xe("uniforms.signs","i",n.length)};
            let starts_i = ${xe("uniforms.starts","i",n.length)};
            var output_index = ${e.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${r.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,j1=(r,e)=>{let n=r[0].dims,t=H.size(n),o=e.axes.length>0?H.normalizeAxes(e.axes,n.length):[...Array(n.length).keys()],i=Va(r,4);i.forEach(T=>T!==0||(()=>{throw new Error("step cannot be 0")})),i.length===0&&(i=Array(o.length).fill(1));let s=e.starts.map((T,$)=>Jb(T,$,n,o,i)),a=e.ends.map((T,$)=>Jb(T,$,n,o,i));if(o.length!==s.length||o.length!==a.length)throw new Error("start, ends and axes should have the same number of elements");if(o.length!==n.length)for(let T=0;T<n.length;++T)o.includes(T)||(s.splice(T,0,0),a.splice(T,0,n[T]),i.splice(T,0,1));let u=i.map(T=>Math.sign(T));i.forEach((T,$,O)=>{if(T<0){let C=(a[$]-s[$])/T,M=s[$],R=M+C*i[$];s[$]=R,a[$]=M,O[$]=-T}});let l=n.slice(0);o.forEach((T,$)=>{l[T]=Math.ceil((a[T]-s[T])/i[T])});let d={dims:l,dataType:r[0].dataType},p=ne("output",r[0].dataType,l.length),h=W("input",r[0].dataType,r[0].dims.length),g=H.size(l),y=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:s.length},{name:"signs",type:"i32",length:u.length},{name:"steps",type:"u32",length:i.length}],w=[{type:"uint32",data:g},{type:"uint32",data:s},{type:"int32",data:u},{type:"uint32",data:i},...J(r[0].dims),...J(l)],I=T=>`
      ${T.registerUniforms(y).declareVariables(h,p)}
        ${q1(h,p,n)}
        ${T.mainStart()}
          ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${p.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${p.setByOffset("global_idx",h.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${u.length}_${s.length}_${i.length}`,inputDependencies:["rank"]},getShaderSource:I,getRunData:()=>({outputs:[d],dispatchGroup:{x:Math.ceil(t/64)},programUniforms:w})}},Qb=(r,e)=>{W1(r.inputs,e);let n=H1(r.inputs,e);r.compute(j1(r.inputs,n),{inputs:[0]})},ey=r=>{let e=r.starts,n=r.ends,t=r.axes;return Ae({starts:e,ends:n,axes:t})}});var K1,Y1,ry,ny,oy=D(()=>{"use strict";Le();xt();Be();K1=r=>{if(!r||r.length!==1)throw new Error("Softmax op requires 1 input.")},Y1=(r,e)=>{let n=r.dims,t=H.size(n),o=64,i=e.axis;if(i<0&&(i=n.length+i),i<n.length-1)throw new Error("softmax only supports last axis for now.");let s=n[i],a=t/s,u=vt(s),l=s/u,d=(I,T)=>T===4?`max(max(${I}.x, ${I}.y), max(${I}.z, ${I}.w))`:T===2?`max(${I}.x, ${I}.y)`:T===3?`max(max(${I}.x, ${I}.y), ${I}.z)`:I,p=W("x",r.dataType,r.dims,u),h=ne("result",r.dataType,r.dims,u),g=p.type.value,y=yt(r.dataType)==="f32"?`var threadMax = ${g}(-3.402823e+38f);`:`var threadMax = ${g}(-65504.0h);`,w=I=>`
      var<workgroup> rowMaxShared : ${g};
      var<workgroup> rowSumShared : ${g};
      var<workgroup> threadShared : array<${g}, ${o}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${g} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${g}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${I.registerUniform("packedCols","i32").declareVariables(p,h)}
      ${I.mainStart()}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${o};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${y}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${g}(${d("threadShared[0]",u)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${g}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${g}(${qt("threadShared[0]",u)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`;return{name:"Softmax",shaderCache:{hint:`${u}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:n,dataType:r.dataType}],dispatchGroup:{x:a},programUniforms:[{type:"uint32",data:l}]}),getShaderSource:w}},ry=(r,e)=>{K1(r.inputs),r.compute(Y1(r.inputs[0],e))},ny=r=>Ae({axis:r.axis})});var X1,Z1,J1,Q1,eT,iy,ay,sy=D(()=>{"use strict";Le();xt();Be();X1=r=>{if(!r||r.length<1)throw new Error("too few inputs")},Z1=(r,e)=>{let n=[],t=e.numOutputs;return r[1].dims[0]>0&&(r[1].getBigInt64Array().forEach(o=>n.push(Number(o))),t=n.length),Ae({numOutputs:t,axis:e.axis,splitSizes:n})},J1=r=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${r}u; i += 1u ) {
    if (index < ${xe("uniforms.size_in_split_axis","i",r)}) {
        return i;
    }
    }
    return ${r}u;
}`,Q1=r=>{let e=r.length,n=[];for(let t=0;t<e;++t){let o=r[t].setByIndices("indices","input[global_idx]");e===1?n.push(o):t===0?n.push(`if (output_number == ${t}u) { ${o} }`):t===e-1?n.push(`else { ${o} }`):n.push(`else if (output_number == ${t}) { ${o} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${r[0].type.indices}, global_idx: u32) {
        ${n.join(`
`)}
      }`},eT=(r,e)=>{let n=r[0].dims,t=H.size(n),o=r[0].dataType,i=H.normalizeAxis(e.axis,n.length),s=new Array(e.numOutputs),a=W("input",o,n),u=new Array(e.numOutputs),l=[],d=[],p=0,h=[{type:"uint32",data:t}];for(let y=0;y<e.numOutputs;y++){p+=e.splitSizes[y],u[y]=p;let w=n.slice();w[e.axis]=e.splitSizes[y],d.push(w),s[y]=ne(`output${y}`,o,w),l.push({dims:d[y],dataType:r[0].dataType})}h.push({type:"uint32",data:u}),h.push(...J(n)),d.forEach(y=>h.push(...J(y)));let g=y=>`
  ${y.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",u.length).declareVariables(a,...s)}
  ${J1(u.length)}
  ${Q1(s)}

  ${y.mainStart()}
    ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${a.offsetToIndices("global_idx")};
    var index = ${a.indicesGet("indices",i)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${xe("uniforms.size_in_split_axis","output_number - 1u",u.length)};
      ${a.indicesSet("indices",i,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:e.cacheKey,inputDependencies:["rank"]},getShaderSource:g,getRunData:()=>({outputs:l,dispatchGroup:{x:Math.ceil(t/64)},programUniforms:h})}},iy=(r,e)=>{X1(r.inputs);let n=r.inputs.length===1?e:Z1(r.inputs,e);r.compute(eT(r.inputs,n),{inputs:[0]})},ay=r=>{let e=r.axis,n=r.splitSizes,t=r.numOutputs<0?n.length:r.numOutputs;if(t!==n.length)throw new Error("numOutputs and splitSizes lengh must be equal");return Ae({axis:e,numOutputs:t,splitSizes:n})}});var uy,tT,rT,nT,ly,dy=D(()=>{"use strict";ut();Le();Be();uy=r=>Array.from(r.getBigInt64Array(),Number),tT=r=>{if(!r||r.length!==2)throw new Error("Tile requires 2 inputs.");if(r[0].dataType!==1&&r[0].dataType!==6&&r[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(r[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(r[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(uy(r[1]).length!==r[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},rT=(r,e)=>{let n=[];for(let t=0;t<r.length;++t)n.push(r[t]*e[t]);return n},nT=r=>{let e=r[0].dims,n=uy(r[1]),t=rT(e,n),o=H.size(t),i=r[0].dataType,s=W("input",i,e.length),a=ne("output",i,t.length),u=l=>`
      const inputShape = ${s.indices(...e)};
      ${l.registerUniform("output_size","u32").declareVariables(s,a)}
      ${l.mainStart()}
      ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${a.offsetToIndices("global_idx")};
      var input_indices: ${s.type.indices};
      for (var i = 0; i < ${e.length}; i++) {
        let input_dim_i = ${s.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${a.indicesGet("output_indices","i")}  % input_dim_i;

        ${s.indicesSet("input_indices","i","input_dim_value")}
      }
      ${a.setByOffset("global_idx",s.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${n}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:[{type:"uint32",data:o},...J(r[0].dims),...J(t)]}),getShaderSource:u}},ly=r=>{tT(r.inputs),r.compute(nT(r.inputs),{inputs:[0]})}});var oT,iT,cy,fy=D(()=>{"use strict";ut();Le();Be();oT=(r,e,n,t,o)=>{let i=ne("output_data",o,n.length,4),s=W("a_data",e[1].dataType,e[1].dims.length,4),a=W("b_data",e[2].dataType,e[2].dims.length,4),u=W("c_data",e[0].dataType,e[0].dims.length,4),l,d=(p,h,g)=>`select(${h}, ${p}, ${g})`;if(!t)l=i.setByOffset("global_idx",d(s.getByOffset("global_idx"),a.getByOffset("global_idx"),u.getByOffset("global_idx")));else{let p=(h,g,y="")=>{let w=`a_data[index_a${g}][component_a${g}]`,I=`b_data[index_b${g}][component_b${g}]`,T=`bool(c_data[index_c${g}] & ${4278190080>>>(3-g)*8}u)`;return`
            let output_indices${g} = ${i.offsetToIndices(`global_idx * 4u + ${g}u`)};
            let offset_a${g} = ${s.broadcastedIndicesToOffset(`output_indices${g}`,i)};
            let offset_b${g} = ${a.broadcastedIndicesToOffset(`output_indices${g}`,i)};
            let offset_c${g} = ${u.broadcastedIndicesToOffset(`output_indices${g}`,i)};
            let index_a${g} = offset_a${g} / 4u;
            let index_b${g} = offset_b${g} / 4u;
            let index_c${g} = offset_c${g} / 4u;
            let component_a${g} = offset_a${g} % 4u;
            let component_b${g} = offset_b${g} % 4u;
            ${h}[${g}] = ${y}(${d(w,I,T)});
          `};o===9?l=`
            var data = vec4<u32>(0);
            ${p("data",0,"u32")}
            ${p("data",1,"u32")}
            ${p("data",2,"u32")}
            ${p("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:l=`
            ${p("output_data[global_idx]",0)}
            ${p("output_data[global_idx]",1)}
            ${p("output_data[global_idx]",2)}
            ${p("output_data[global_idx]",3)}
          `}return`
        ${r.registerUniform("vec_size","u32").declareVariables(u,s,a,i)}
        ${r.mainStart()}
        ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${l}
      }`},iT=r=>{let e=r[1].dims,n=r[2].dims,t=r[0].dims,o=r[1].dataType,i=!(H.areEqual(e,n)&&H.areEqual(n,t)),s=e,a=H.size(e);if(i){let l=Sr.calcShape(Sr.calcShape(e,n,!1),t,!1);if(!l)throw new Error("Can't perform where op on the given tensors");s=l,a=H.size(s)}let u=Math.ceil(a/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:l=>oT(l,r,s,i,o),getRunData:()=>({outputs:[{dims:s,dataType:o}],dispatchGroup:{x:Math.ceil(a/64/4)},programUniforms:[{type:"uint32",data:u},...J(t),...J(e),...J(n),...J(s)]})}},cy=r=>{r.compute(iT(r.inputs))}});var py,hy=D(()=>{"use strict";Mm();Eu();Fm();Um();xg();kg();Bg();Ru();Yg();Jg();nb();ab();lb();fb();mb();bb();vb();Lu();$b();Sb();Ub();Wb();Ea();Kb();Zb();ty();oy();sy();dy();Qn();Cu();fy();py=new Map([["Abs",[Gm]],["Acos",[Wm]],["Acosh",[Hm]],["Add",[Tg]],["ArgMax",[Lm,Ou]],["ArgMin",[Bm,Ou]],["Asin",[qm]],["Asinh",[jm]],["Atan",[Km]],["Atanh",[Ym]],["Attention",[zm]],["AveragePool",[Db,kb]],["BatchNormalization",[Nm]],["BiasAdd",[Vm]],["BiasSplitGelu",[wg]],["Cast",[Zm,Xm]],["Ceil",[Qm]],["Clip",[Jm]],["Concat",[Dg,Rg]],["Conv",[zu,Mu]],["ConvTranspose",[Kg,jg]],["Cos",[eg]],["Cosh",[tg]],["CumSum",[Xg,Zg]],["Div",[$g]],["Einsum",[tb,rb]],["Elu",[rg,ka]],["Equal",[_g]],["Erf",[ng]],["Exp",[og]],["Expand",[ib]],["Floor",[ig]],["FusedConv",[zu,Mu]],["Gather",[ub,sb]],["GatherElements",[cb,db]],["Gelu",[ag]],["Gemm",[hb,pb]],["GlobalAveragePool",[Lb,Bb]],["GlobalMaxPool",[Vb,Fb]],["Greater",[Og]],["GreaterOrEqual",[Cg]],["InstanceNormalization",[gb]],["LayerNormalization",[yb]],["LeakyRelu",[sg,ka]],["Less",[Eg]],["LessOrEqual",[Pg]],["Log",[vg]],["MatMul",[Fg]],["MaxPool",[zb,Nb]],["Mul",[Sg]],["MultiHeadAttention",[Tb,xb]],["Neg",[lg]],["Not",[ug]],["Pad",[_b]],["Pow",[Ig]],["Range",[Gb]],["Reciprocal",[dg]],["ReduceMin",[Em]],["ReduceMean",[_m]],["ReduceMax",[Om]],["ReduceSum",[Pm]],["ReduceProd",[Cm]],["ReduceL1",[Sm]],["ReduceL2",[Im]],["ReduceLogSum",[Dm]],["ReduceLogSumExp",[Am]],["ReduceSumSquare",[km]],["Relu",[cg]],["Resize",[qb,jb]],["Sigmoid",[fg]],["Sin",[pg]],["Sinh",[hg]],["Slice",[Qb,ey]],["SkipLayerNormalization",[Yb,Xb]],["Split",[iy,ay]],["Sqrt",[mg]],["Softmax",[ry,ny]],["Sub",[Ag]],["Tan",[gg]],["Tanh",[bg]],["ThresholdedRelu",[yg,ka]],["Tile",[ly]],["Transpose",[cm,fm]],["Where",[cy]]])});var Ua,my=D(()=>{"use strict";Pt();Jr();Be();Ua=class{constructor(e){this.backend=e;this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,n){this.repo.set(e,n)}run(e,n,t,o,i){Ft(e.programInfo.name);let s=this.backend.device,a=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2),a.setPipeline(e.computePipeline);let u=[];for(let d of n)u.push({binding:u.length,resource:{buffer:d.buffer}});for(let d of t)u.push({binding:u.length,resource:{buffer:d.buffer}});i&&u.push({binding:u.length,resource:i});let l=s.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:u,label:e.programInfo.name});a.setBindGroup(0,l),a.dispatchWorkgroups(...o),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Vt(e.programInfo.name)}dispose(){}build(e,n){Ft(e.name);let t=this.backend.device,o=[];t.features.has("shader-f16")&&o.push("enable f16;");let i=lm(n),s=e.getShaderSource(i),a=`${o.join(`
`)}
${i.additionalImplementations}
${s}`,u=t.createShaderModule({code:a,label:e.name});ot("verbose",()=>`[WebGPU] ${e.name} shader code: ${a}`);let l=t.createComputePipeline({compute:{module:u,entryPoint:"main"},layout:"auto",label:e.name});return Vt(e.name),{programInfo:e,computePipeline:l}}normalizeDispatchGroupSize(e){let n=typeof e=="number"?e:e.x,t=typeof e=="number"?1:e.y||1,o=typeof e=="number"?1:e.z||1,i=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(n<=i&&t<=i&&o<=i)return[n,t,o];let s=n*t*o,a=Math.ceil(Math.sqrt(s));if(a>i){if(a=Math.ceil(Math.cbrt(s)),a>i)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[a,a,a]}else return[a,a,1]}}});var aT,sT,Ga,gy=D(()=>{"use strict";Pt();ut();Jr();om();um();hy();my();aT=(r,e)=>{if(e.length!==r.length)throw new Error(`inputDependencies length ${e.length} is not equal to inputTensors length ${r.length}.`);let n=[];for(let t=0;t<r.length;++t){let o=r[t].dataType;switch(e[t]){case"none":{n.push("");break}case"type":{n.push(`${o}`);break}case"rank":{let i=r[t].dims.length;n.push(`${o};${i}`);break}case"dims":{let i=r[t].dims.join(",");n.push(`${o};${i}`);break}default:throw new Error(`unsupported input dependency: ${e[t]}`)}}return n.join("|")},sT=(r,e,n)=>{let t=r.name;return r.shaderCache?.hint&&(t+="["+r.shaderCache.hint+"]"),t+=":"+n+`:${aT(e,r.shaderCache?.inputDependencies??new Array(e.length).fill("dims"))}`,t},Ga=class{constructor(){this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.maxDispatchNumber=16;this.pendingDispatchNumber=0;this.pendingKernels=[];this.pendingQueries=new Map;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,n){this.env=e;let t=[],o={requiredLimits:{maxComputeWorkgroupStorageSize:n.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:n.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:n.limits.maxStorageBufferBindingSize,maxBufferSize:n.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:n.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:n.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:n.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:n.limits.maxComputeWorkgroupSizeZ},requiredFeatures:t};n.features.has("chromium-experimental-timestamp-query-inside-passes")?t.push("chromium-experimental-timestamp-query-inside-passes"):n.features.has("timestamp-query")&&t.push("timestamp-query"),n.features.has("shader-f16")&&t.push("shader-f16"),this.device=await n.requestDevice(o),this.gpuDataManager=sm(this),this.programManager=new Ua(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,rm(e.logLevel,!!e.debug),this.device.onuncapturederror=i=>{i.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${i.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder(),this.setQueryType(),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE}))),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e={};this.queryType==="at-passes"&&(e.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=this.getCommandEncoder().beginComputePass(e)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;Ft(),this.endComputePass();let e;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),e=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&e.mapAsync(GPUMapMode.READ).then(()=>{let n=new BigUint64Array(e.getMappedRange()),t=this.pendingQueries.get(e);for(let o=0;o<n.length/2;o++){let i=t[o],s=i.kernelId,a=this.kernels.get(s),u=a.kernelType,l=a.kernelName,d=i.programName,p=i.inputTensorViews,h=i.outputTensorViews,g=n[o*2],y=n[o*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=g);let w=Number(g-this.queryTimeBase),I=Number(y-this.queryTimeBase);if(!Number.isSafeInteger(w)||!Number.isSafeInteger(I))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:p.map(T=>({dims:T.dims,dataType:Ht(T.dataType)})),outputsMetadata:h.map(T=>({dims:T.dims,dataType:Ht(T.dataType)})),kernelId:s,kernelType:u,kernelName:l,programName:d,startTime:w,endTime:I});else{let T="";p.forEach((O,C)=>{T+=`input[${C}]: [${O.dims}] | ${Ht(O.dataType)}, `});let $="";h.forEach((O,C)=>{$+=`output[${C}]: [${O.dims}] | ${Ht(O.dataType)}, `}),console.log(`[profiling] kernel "${s}|${u}|${l}|${d}" ${T}${$}execution time: ${I-w} ns`)}xo("GPU",`${d}::${g}::${y}`)}e.unmap(),this.pendingQueries.delete(e)}),Vt()}run(e,n,t,o,i){Ft(e.name);let s=[];for(let $=0;$<n.length;++$){let O=this.gpuDataManager.get(n[$].data);if(!O)throw new Error(`no GPU data for input: ${n[$].data}`);s[$]=O}let{outputs:a,dispatchGroup:u,programUniforms:l}=e.getRunData(n),d=t.length===0?a.map(($,O)=>O):t;if(d.length!==a.length)throw new Error(`Output size ${d.length} must be equal to ${a.length}.`);let p=[],h=[];for(let $=0;$<a.length;++$){if(!Number.isInteger(d[$])||d[$]<-3||d[$]>=a.length)throw new Error(`Invalid output index: ${d[$]}`);if(d[$]===-3)continue;let O=d[$]===-1,C=d[$]===-2,M=O||C?i(a[$].dataType,a[$].dims):o(d[$],a[$].dataType,a[$].dims),R=this.gpuDataManager.get(M.data);if(!R)throw new Error(`no GPU data for output: ${M.data}`);if(O&&this.temporaryData.push(R),C){let G=this.kernelPersistentData.get(this.currentKernelId);G||(G=[],this.kernelPersistentData.set(this.currentKernelId,G)),G.push(R)}p.push(M),h.push(R)}let g;if(l){let $=0,O=[];l.forEach(G=>{let q=typeof G.data=="number"?[G.data]:G.data;if(q.length===0)return;let X=q.length<=2?q.length*4:16;$=Math.ceil($/X)*X,O.push($),$+=q.length>4?Math.ceil(q.length/4)*16:q.length*4});let C=16;$=Math.ceil($/C)*C;let M=new ArrayBuffer($);l.forEach((G,q)=>{let X=O[q],z=typeof G.data=="number"?[G.data]:G.data;G.type==="int32"?new Int32Array(M,X,z.length).set(z):G.type==="uint32"?new Uint32Array(M,X,z.length).set(z):new Float32Array(M,X,z.length).set(z)});let R=this.gpuDataManager.create($,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(R.buffer,0,M,0,$),this.gpuDataManager.release(R.id),g={offset:0,size:$,buffer:R.buffer}}let y=this.programManager.normalizeDispatchGroupSize(u),w=y[1]===1&&y[2]===1,I=sT(e,n,w),T=this.programManager.getArtifact(I);if(T||(T=this.programManager.build(e,y),this.programManager.setArtifact(I,T),ot("info",()=>`[artifact] key: ${I}, programName: ${e.name}`)),ot("info",()=>`[ProgramManager] run "${e.name}" (key=${I}) with ${y[0]}x${y[1]}x${y[2]}`),this.queryType!=="none"){let $={kernelId:this.currentKernelId,programName:T.programInfo.name,inputTensorViews:n,outputTensorViews:p};this.pendingKernels.push($)}return this.programManager.run(T,s,h,y,g),Vt(e.name),p}upload(e,n){this.gpuDataManager.upload(e,n)}memcpy(e,n){this.gpuDataManager.memcpy(e,n)}async download(e,n){await this.gpuDataManager.download(e,n)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,n,t,o){let i=py.get(e);if(!i)throw new Error(`kernel not implemented: ${e}`);let s={kernelType:e,kernelName:o,kernelEntry:i[0],attributes:[i[1],t]};this.kernels.set(n,s)}releaseKernel(e){let n=this.kernelPersistentData.get(e);if(n){for(let t of n)this.gpuDataManager.release(t.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,n,t){let o=this.kernels.get(e);if(!o)throw new Error(`kernel not created: ${e}`);let i=o.kernelType,s=o.kernelName,a=o.kernelEntry,u=o.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${i}] ${s}" is not allowed to be called recursively`);this.currentKernelId=e,u[0]&&(u[1]=u[0](u[1]),u[0]=void 0),ot("info",()=>`[WebGPU] Start to run kernel "[${i}] ${s}"...`);let l=this.env.debug;this.temporaryData=[];try{return l&&this.device.pushErrorScope("validation"),a(n,u[1]),0}catch(d){return t.push(Promise.resolve(`[WebGPU] Kernel "[${i}] ${s}" failed. ${d}`)),1}finally{l&&t.push(this.device.popErrorScope().then(d=>d?`GPU validation error for kernel "[${i}] ${s}": ${d.message}`:null));for(let d of this.temporaryData)this.gpuDataManager.release(d.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,n,t,o){let i=this.sessionExternalDataMapping.get(e);i||(i=new Map,this.sessionExternalDataMapping.set(e,i));let s=i.get(n),a=this.gpuDataManager.registerExternalBuffer(t,o,s?.[1]);return i.set(n,[a,t]),a}unregisterBuffers(e){let n=this.sessionExternalDataMapping.get(e);n&&(n.forEach(t=>this.gpuDataManager.unregisterExternalBuffer(t[1])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let n=this.gpuDataManager.get(e);if(!n)throw new Error(`no GPU data for buffer: ${e}`);return n.buffer}createDownloader(e,n,t){return async()=>{let o=await xu(this,e,n);return nm(o.buffer,t)}}writeTimestamp(e){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||this.env.wasm.trace)&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"))}}});var by={};Hr(by,{init:()=>uT});var Wo,Wu,uT,yy=D(()=>{"use strict";ut();gy();Jr();Le();Wo=class r{constructor(e,n,t,o){this.module=e;this.dataType=n;this.data=t;this.dims=o}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let e=H.size(this.dims);return e===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,e)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let e=H.size(this.dims);return e===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,e)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let e=H.size(this.dims);return e===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,e)}reshape(e){if(H.size(e)!==H.size(this.dims))throw new Error("Invalid new shape");return new r(this.module,this.dataType,this.data,e)}},Wu=class{constructor(e,n,t){this.module=e;this.backend=n;this.customDataOffset=0;this.customDataSize=0;let o=e.HEAPU32,i=t>>>2;this.opKernelContext=o[i++];let s=o[i++];this.outputCount=o[i++],this.customDataOffset=o[i++],this.customDataSize=o[i++];let a=[];for(let u=0;u<s;u++){let l=o[i++],d=o[i++],p=o[i++],h=[];for(let g=0;g<p;g++)h.push(o[i++]);a.push(new Wo(e,l,d,h))}this.inputs=a}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(e,n){let t=n?.inputs?.map(a=>typeof a=="number"?this.inputs[a]:a)??this.inputs,o=n?.outputs??[],i=(a,u,l)=>new Wo(this.module,u,this.output(a,l),l),s=(a,u)=>{let l=zo(a);if(!l)throw new Error(`Unsupported data type: ${a}`);let d=l*H.size(u);return new Wo(this.module,a,this.backend.gpuDataManager.create(d).id,u)};return this.backend.run(e,t,o,i,s)}output(e,n){let t=this.module.stackSave();try{let o=this.module.stackAlloc((1+n.length)*4),i=o>>2;this.module.HEAPU32[i++]=n.length;for(let s=0;s<n.length;s++)this.module.HEAPU32[i++]=n[s];return this.module._JsepOutput(this.opKernelContext,e,o)}catch(o){throw new Error(`Failed to generate kernel's output[${e}] with dims [${n}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${o}`)}finally{this.module.stackRestore(t)}}},uT=async(r,e,n)=>{let t=r.jsepInit;if(!t)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");let o=new Ga;await o.initialize(e,n),t(o,i=>o.alloc(i),i=>o.free(i),(i,s,a,u=!1)=>{if(u)ot("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${i}, dst=${s}, size=${a}`),o.memcpy(i,s);else{ot("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${i}, gpuDataId=${s}, size=${a}`);let l=r.HEAPU8.subarray(i>>>0,(i>>>0)+a);o.upload(s,l)}},async(i,s,a)=>{ot("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${i}, dataOffset=${s}, size=${a}`),await o.download(i,()=>r.HEAPU8.subarray(s>>>0,(s>>>0)+a))},(i,s,a)=>o.createKernel(i,s,a,r.UTF8ToString(r._JsepGetNodeName(s))),i=>o.releaseKernel(i),(i,s,a,u)=>{ot("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${a}, kernel=${i}, contextDataOffset=${s}`);let l=new Wu(r,o,s);return o.computeKernel(i,l,u)})}});var lT,wy,xy,Ho,dT,Hu,Ty,$y,vy,_y,Sy,Iy,Ay=D(()=>{"use strict";Zh();Qh();ut();Zn();wa();vu();lT=(r,e)=>{dt()._OrtInit(r,e)!==0&&et("Can't initialize onnxruntime.")},wy=async r=>{lT(r.wasm.numThreads,No(r.logLevel))},xy=async(r,e)=>{if(e==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let n=await navigator.gpu.requestAdapter();if(!n)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.');if(!r.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");let t=(yy(),Rr(by)).init;await t(dt(),r,n)}},Ho=new Map,dT=r=>{let e=dt(),n=e.stackSave();try{let t=e.stackAlloc(8);return e._OrtGetInputOutputCount(r,t,t+4)!==0&&et("Can't get session input/output count."),[e.HEAP32[t/4],e.HEAP32[t/4+1]]}finally{e.stackRestore(n)}},Hu=r=>{let e=dt(),n=e._malloc(r.byteLength);if(n===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${r.byteLength}.`);return e.HEAPU8.set(r,n),[n,r.byteLength]},Ty=async(r,e)=>{let n,t,o=dt();Array.isArray(r)?[n,t]=r:r.buffer===o.HEAPU8.buffer?[n,t]=[r.byteOffset,r.byteLength]:[n,t]=Hu(r);let i=0,s=0,a=0,u=[],l=[],d=[];try{if([s,u]=Jh(e),e?.externalData&&o.mountExternalData){let T=[];for(let $ of e.externalData){let O=typeof $=="string"?$:$.path;T.push(Fo(typeof $=="string"?$:$.data).then(C=>{o.mountExternalData(O,C)}))}await Promise.all(T)}i=o._OrtCreateSession(n,t,s),i===0&&et("Can't create a session.");let[p,h]=dT(i),g=[],y=[],w=[];for(let T=0;T<p;T++){let $=o._OrtGetInputName(i,T);$===0&&et("Can't get an input name."),l.push($),g.push(o.UTF8ToString($))}for(let T=0;T<h;T++){let $=o._OrtGetOutputName(i,T);$===0&&et("Can't get an output name."),d.push($);let O=o.UTF8ToString($);y.push(O);{let C=typeof e?.preferredOutputLocation=="string"?e.preferredOutputLocation:e?.preferredOutputLocation?.[O]??"cpu";if(C!=="cpu"&&C!=="cpu-pinned"&&C!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${C}.`);w.push(C)}}let I=null;return w.some(T=>T==="gpu-buffer")&&(a=o._OrtCreateBinding(i),a===0&&et("Can't create IO binding."),I={handle:a,outputPreferredLocations:w,outputPreferredLocationsEncoded:w.map(T=>yu(T))}),Ho.set(i,[i,l,d,I]),[i,g,y]}catch(p){throw l.forEach(h=>o._OrtFree(h)),d.forEach(h=>o._OrtFree(h)),a!==0&&o._OrtReleaseBinding(a),i!==0&&o._OrtReleaseSession(i),p}finally{o._free(n),s!==0&&o._OrtReleaseSessionOptions(s),u.forEach(p=>o._free(p)),o.unmountExternalData?.()}},$y=r=>{let e=dt(),n=Ho.get(r);if(!n)throw new Error(`cannot release session. invalid session id: ${r}`);let[t,o,i,s]=n;s&&e._OrtReleaseBinding(s.handle),e.jsepUnregisterBuffers?.(r),o.forEach(a=>e._OrtFree(a)),i.forEach(a=>e._OrtFree(a)),e._OrtReleaseSession(t),Ho.delete(r)},vy=(r,e,n,t,o)=>{if(!r){e.push(0);return}let i=dt(),s=r[0],a=r[1],u=r[3],l,d;if(s==="string"&&u==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(u==="gpu-buffer"){let g=r[2].gpuBuffer,y=zo(bu(s));d=a.reduce((w,I)=>w*I,1)*y,l=i.jsepRegisterBuffer(t,o,g,d)}else{let g=r[2];if(Array.isArray(g)){d=4*g.length,l=i._malloc(d),n.push(l);let y=l/4;for(let w=0;w<g.length;w++){if(typeof g[w]!="string")throw new TypeError(`tensor data at index ${w} is not a string`);i.HEAPU32[y++]=mt(g[w],n)}}else d=g.byteLength,l=i._malloc(d),n.push(l),i.HEAPU8.set(new Uint8Array(g.buffer,g.byteOffset,d),l)}let p=i.stackSave(),h=i.stackAlloc(4*a.length);try{let g=h/4;a.forEach(w=>i.HEAP32[g++]=w);let y=i._OrtCreateTensor(bu(s),l,d,h,a.length,yu(u));y===0&&et(`Can't create tensor for input/output. session=${t}, index=${o}.`),e.push(y)}finally{i.stackRestore(p)}},_y=async(r,e,n,t,o,i)=>{let s=dt(),a=Ho.get(r);if(!a)throw new Error(`cannot run inference. invalid session id: ${r}`);let[u,l,d,p]=a,h=e.length,g=t.length,y=0,w=[],I=[],T=[],$=[],O=s.stackSave(),C=s.stackAlloc(h*4),M=s.stackAlloc(h*4),R=s.stackAlloc(g*4),G=s.stackAlloc(g*4);try{[y,w]=Xh(i);for(let le=0;le<h;le++)vy(n[le],I,$,r,e[le]);for(let le=0;le<g;le++)vy(o[le],T,$,r,h+t[le]);let q=C/4,X=M/4,z=R/4,V=G/4;for(let le=0;le<h;le++)s.HEAPU32[q++]=I[le],s.HEAPU32[X++]=l[e[le]];for(let le=0;le<g;le++)s.HEAPU32[z++]=T[le],s.HEAPU32[V++]=d[t[le]];if(p){let{handle:le,outputPreferredLocations:Ye,outputPreferredLocationsEncoded:it}=p;if(l.length!==h)throw new Error(`input count from feeds (${h}) is expected to be always equal to model's input count (${l.length}).`);for(let Se=0;Se<h;Se++){let je=e[Se];await s._OrtBindInput(le,l[je],I[Se])!==0&&et(`Can't bind input[${Se}] for session=${r}.`)}for(let Se=0;Se<g;Se++){let je=t[Se];o[Se]?.[3]?s._OrtBindOutput(le,d[je],T[Se],0)!==0&&et(`Can't bind pre-allocated output[${Se}] for session=${r}.`):s._OrtBindOutput(le,d[je],0,it[je])!==0&&et(`Can't bind output[${Se}] to ${Ye[Se]} for session=${r}.`)}}let ie;p?ie=await s._OrtRunWithBinding(u,p.handle,g,R,y):ie=await s._OrtRun(u,M,C,h,G,g,R,y),ie!==0&&et("failed to call OrtRun().");let ue=[];for(let le=0;le<g;le++){let Ye=s.HEAPU32[R/4+le];if(Ye===T[le]){ue.push(o[le]);continue}let it=s.stackSave(),Se=s.stackAlloc(4*4),je=!1,Oe,Ee=0;try{s._OrtGetTensorData(Ye,Se,Se+4,Se+8,Se+12)!==0&&et(`Can't access output tensor data on index ${le}.`);let at=Se/4,st=s.HEAPU32[at++];Ee=s.HEAPU32[at++];let Z=s.HEAPU32[at++],de=s.HEAPU32[at++],Ce=[];for(let ct=0;ct<de;ct++)Ce.push(s.HEAPU32[Z/4+ct]);s._OrtFree(Z);let zt=Ce.reduce((ct,lt)=>ct*lt,1);Oe=Ht(st);let Tt=p?.outputPreferredLocations[t[le]];if(Oe==="string"){if(Tt==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let ct=[],lt=Ee/4;for(let Nr=0;Nr<zt;Nr++){let ar=s.HEAPU32[lt++],Fr=Nr===zt-1?void 0:s.HEAPU32[lt]-ar;ct.push(s.UTF8ToString(ar,Fr))}ue.push([Oe,Ce,ct,"cpu"])}else if(Tt==="gpu-buffer"&&zt>0){let ct=s.jsepGetBuffer(Ee),lt=zo(st);if(lt===void 0||!Ta(Oe))throw new Error(`Unsupported data type: ${Oe}`);je=!0,ue.push([Oe,Ce,{gpuBuffer:ct,download:s.jsepCreateDownloader(ct,zt*lt,Oe),dispose:()=>{s._OrtReleaseTensor(Ye)}},"gpu-buffer"])}else{let ct=xa(Oe),lt=new ct(zt);new Uint8Array(lt.buffer,lt.byteOffset,lt.byteLength).set(s.HEAPU8.subarray(Ee,Ee+lt.byteLength)),ue.push([Oe,Ce,lt,"cpu"])}}finally{s.stackRestore(it),Oe==="string"&&Ee&&s._free(Ee),je||s._OrtReleaseTensor(Ye)}}return p&&s._OrtClearBoundOutputs(p.handle),ue}finally{s.stackRestore(O),I.forEach(q=>s._OrtReleaseTensor(q)),T.forEach(q=>s._OrtReleaseTensor(q)),$.forEach(q=>s._free(q)),y!==0&&s._OrtReleaseRunOptions(y),w.forEach(q=>s._free(q))}},Sy=r=>{let e=dt(),n=Ho.get(r);if(!n)throw new Error("invalid session id");let t=n[0],o=e._OrtEndProfiling(t);o===0&&et("Can't get an profile file name."),e._OrtFree(o)},Iy=r=>{let e=[];for(let n of r){let t=n[2];!Array.isArray(t)&&"buffer"in t&&e.push(t.buffer)}return e}});var Oy=Xe((CL,fT)=>{fT.exports='/*!\n * ONNX Runtime Web v1.18.0\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n"use strict";(()=>{var Hn=Object.defineProperty;var Lu=Object.getOwnPropertyDescriptor;var Fu=Object.getOwnPropertyNames;var ju=Object.prototype.hasOwnProperty;var X=(e,t)=>()=>(e&&(t=e(e=0)),t);var Ir=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),dn=(e,t)=>{for(var r in t)Hn(e,r,{get:t[r],enumerable:!0})},qu=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of Fu(t))!ju.call(e,n)&&n!==r&&Hn(e,n,{get:()=>t[n],enumerable:!(o=Lu(t,n))||o.enumerable});return e};var or=e=>qu(Hn({},"__esModule",{value:!0}),e);var Gn={};dn(Gn,{createReadStream:()=>Do,readFile:()=>Ku,readFileSync:()=>Yu});var Ku,Yu,Do,Ln=X(()=>{Ku=void 0,Yu=void 0,Do=void 0});var Fn={};dn(Fn,{join:()=>Zu});var Zu,jn=X(()=>{Zu=void 0});var Uo=Ir((zo,qn)=>{"use strict";var Mo=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){var r=t,o,n;r.ready=new Promise((i,c)=>{o=i,n=c}),r.mountExternalData=(i,c)=>{(r.gb||(r.gb=new Map)).set(i,c)},r.unmountExternalData=()=>{delete r.gb},r.jsepInit=(i,c,m,w,I,D,H,K)=>{r.Fb=i,r.vb=c,r.xb=m,r.ob=w,r.wb=I,r.Ra=D,r.yb=H,r.zb=K,c=(Y,q,ee)=>(...pe)=>{let we=ot,O=q?.();pe=Y(...pe);let oe=q?.();return O!==oe&&(Y=oe,ee(O),q=ee=null),ot!=we?Jr():pe},m=Y=>async(...q)=>{try{if(r.fb)throw Error("Session already started");let ee=r.fb={Ab:q[0],errors:[]},pe=await Y(...q);if(r.fb!==ee)throw Error("Session mismatch");i.flush();let we=ee.errors;if(0<we.length){let O=await Promise.all(we);if(O=O.filter(oe=>oe),0<O.length)throw Error(O.join(`\n`))}return pe}finally{r.fb=null}},r._OrtRun=m(c(r._OrtRun,()=>r._OrtRun,Y=>r._OrtRun=Y)),r._OrtRunWithBinding=m(c(r._OrtRunWithBinding,()=>r._OrtRunWithBinding,Y=>r._OrtRunWithBinding=Y)),r._OrtBindInput=c(r._OrtBindInput,()=>r._OrtBindInput,Y=>r._OrtBindInput=Y),r.jsepRegisterBuffer=(Y,q,ee,pe)=>i.registerBuffer(Y,q,ee,pe),r.jsepUnregisterBuffers=Y=>{i.unregisterBuffers(Y)},r.jsepGetBuffer=Y=>i.getBuffer(Y),r.jsepCreateDownloader=(Y,q,ee)=>i.createDownloader(Y,q,ee)};var u=Object.assign({},r),l="./this.program",d=(i,c)=>{throw c},a=typeof window=="object",f=typeof importScripts=="function",g=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",y="",v,$,b;if(g){var C=(Ln(),or(Gn)),A=(jn(),or(Fn));y=f?A.dirname(y)+"/":__dirname+"/",v=(i,c)=>(i=ne(i)?new URL(i):A.normalize(i),C.readFileSync(i,c?void 0:"utf8")),b=i=>(i=v(i,!0),i.buffer||(i=new Uint8Array(i)),i),$=(i,c,m,w=!0)=>{i=ne(i)?new URL(i):A.normalize(i),C.readFile(i,w?void 0:"utf8",(I,D)=>{I?m(I):c(w?D.buffer:D)})},!r.thisProgram&&1<process.argv.length&&(l=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),d=(i,c)=>{throw process.exitCode=i,c},r.inspect=()=>"[Emscripten Module object]"}else(a||f)&&(f?y=self.location.href:typeof document<"u"&&document.currentScript&&(y=document.currentScript.src),e&&(y=e),y.indexOf("blob:")!==0?y=y.substr(0,y.replace(/[?#].*/,"").lastIndexOf("/")+1):y="",v=i=>{var c=new XMLHttpRequest;return c.open("GET",i,!1),c.send(null),c.responseText},f&&(b=i=>{var c=new XMLHttpRequest;return c.open("GET",i,!1),c.responseType="arraybuffer",c.send(null),new Uint8Array(c.response)}),$=(i,c,m)=>{var w=new XMLHttpRequest;w.open("GET",i,!0),w.responseType="arraybuffer",w.onload=()=>{w.status==200||w.status==0&&w.response?c(w.response):m()},w.onerror=m,w.send(null)});var S=console.log.bind(console),_=console.error.bind(console);Object.assign(r,u),u=null,typeof WebAssembly!="object"&&Me("no native wasm support detected");var E,T=!1,V,k,U,W,Z,B,F,J,te,re,Ee;function Be(){var i=E.buffer;r.HEAP8=k=new Int8Array(i),r.HEAP16=W=new Int16Array(i),r.HEAPU8=U=new Uint8Array(i),r.HEAPU16=Z=new Uint16Array(i),r.HEAP32=B=new Int32Array(i),r.HEAPU32=F=new Uint32Array(i),r.HEAPF32=J=new Float32Array(i),r.HEAPF64=Ee=new Float64Array(i),r.HEAP64=te=new BigInt64Array(i),r.HEAPU64=re=new BigUint64Array(i)}var fe=[],Ae=[],ge=[],ye=0,He=null,De=null;function Me(i){throw i="Aborted("+i+")",_(i),T=!0,V=1,i=new WebAssembly.RuntimeError(i+". Build with -sASSERTIONS for more info."),n(i),i}var L=i=>i.startsWith("data:application/octet-stream;base64,"),ne=i=>i.startsWith("file://"),be;if(be="ort-wasm-simd.wasm",!L(be)){var et=be;be=r.locateFile?r.locateFile(et,y):y+et}function je(i){if(b)return b(i);throw"both async and sync fetching of the wasm failed"}function Ne(i){if(a||f){if(typeof fetch=="function"&&!ne(i))return fetch(i,{credentials:"same-origin"}).then(c=>{if(!c.ok)throw"failed to load wasm binary file at \'"+i+"\'";return c.arrayBuffer()}).catch(()=>je(i));if($)return new Promise((c,m)=>{$(i,w=>c(new Uint8Array(w)),m)})}return Promise.resolve().then(()=>je(i))}function ze(i,c,m){return Ne(i).then(w=>WebAssembly.instantiate(w,c)).then(w=>w).then(m,w=>{_(`failed to asynchronously prepare wasm: ${w}`),Me(w)})}function Ct(i,c){var m=be;return typeof WebAssembly.instantiateStreaming!="function"||L(m)||ne(m)||g||typeof fetch!="function"?ze(m,i,c):fetch(m,{credentials:"same-origin"}).then(w=>WebAssembly.instantiateStreaming(w,i).then(c,function(I){return _(`wasm streaming compile failed: ${I}`),_("falling back to ArrayBuffer instantiation"),ze(m,i,c)}))}var ut={944256:(i,c,m,w)=>{if(typeof r>"u"||!r.gb)return 1;if(i=qe(i>>>0),i.startsWith("./")&&(i=i.substring(2)),i=r.gb.get(i),!i)return 2;if(c>>>=0,m>>>=0,c+m>i.byteLength)return 3;try{return U.set(i.subarray(c,c+m),w>>>0>>>0),0}catch{return 4}},944757:i=>r.vb(i),944790:i=>r.xb(i),944822:(i,c,m)=>{r.ob(i,c,m,!0)},944861:(i,c,m)=>{r.ob(i,c,m)},944894:i=>{r.Ra("Abs",i,void 0)},944945:i=>{r.Ra("Neg",i,void 0)},944996:i=>{r.Ra("Floor",i,void 0)},945049:i=>{r.Ra("Ceil",i,void 0)},945101:i=>{r.Ra("Reciprocal",i,void 0)},945159:i=>{r.Ra("Sqrt",i,void 0)},945211:i=>{r.Ra("Exp",i,void 0)},945262:i=>{r.Ra("Erf",i,void 0)},945313:i=>{r.Ra("Sigmoid",i,void 0)},945368:i=>{r.Ra("Log",i,void 0)},945419:i=>{r.Ra("Sin",i,void 0)},945470:i=>{r.Ra("Cos",i,void 0)},945521:i=>{r.Ra("Tan",i,void 0)},945572:i=>{r.Ra("Asin",i,void 0)},945624:i=>{r.Ra("Acos",i,void 0)},945676:i=>{r.Ra("Atan",i,void 0)},945728:i=>{r.Ra("Sinh",i,void 0)},945780:i=>{r.Ra("Cosh",i,void 0)},945832:i=>{r.Ra("Asinh",i,void 0)},945885:i=>{r.Ra("Acosh",i,void 0)},945938:i=>{r.Ra("Atanh",i,void 0)},945991:i=>{r.Ra("Tanh",i,void 0)},946043:i=>{r.Ra("Not",i,void 0)},946094:(i,c,m)=>{r.Ra("Clip",i,{min:c,max:m})},946163:i=>{r.Ra("Clip",i,void 0)},946215:(i,c)=>{r.Ra("Elu",i,{alpha:c})},946273:i=>{r.Ra("Relu",i,void 0)},946325:(i,c)=>{r.Ra("LeakyRelu",i,{alpha:c})},946389:(i,c)=>{r.Ra("ThresholdedRelu",i,{alpha:c})},946459:(i,c)=>{r.Ra("Cast",i,{to:c})},946517:i=>{r.Ra("Add",i,void 0)},946568:i=>{r.Ra("Sub",i,void 0)},946619:i=>{r.Ra("Mul",i,void 0)},946670:i=>{r.Ra("Div",i,void 0)},946721:i=>{r.Ra("Pow",i,void 0)},946772:i=>{r.Ra("Equal",i,void 0)},946825:i=>{r.Ra("Greater",i,void 0)},946880:i=>{r.Ra("GreaterOrEqual",i,void 0)},946942:i=>{r.Ra("Less",i,void 0)},946994:i=>{r.Ra("LessOrEqual",i,void 0)},947053:(i,c,m,w,I)=>{r.Ra("ReduceMean",i,{keepDims:!!c,noopWithEmptyAxes:!!m,axes:w?Array.from(B.subarray(w>>>0,I>>>0)):[]})},947212:(i,c,m,w,I)=>{r.Ra("ReduceMax",i,{keepDims:!!c,noopWithEmptyAxes:!!m,axes:w?Array.from(B.subarray(w>>>0,I>>>0)):[]})},947370:(i,c,m,w,I)=>{r.Ra("ReduceMin",i,{keepDims:!!c,noopWithEmptyAxes:!!m,axes:w?Array.from(B.subarray(w>>>0,I>>>0)):[]})},947528:(i,c,m,w,I)=>{r.Ra("ReduceProd",i,{keepDims:!!c,noopWithEmptyAxes:!!m,axes:w?Array.from(B.subarray(w>>>0,I>>>0)):[]})},947687:(i,c,m,w,I)=>{r.Ra("ReduceSum",i,{keepDims:!!c,noopWithEmptyAxes:!!m,axes:w?Array.from(B.subarray(w>>>0,I>>>0)):[]})},947845:(i,c,m,w,I)=>{r.Ra("ReduceL1",i,{keepDims:!!c,noopWithEmptyAxes:!!m,axes:w?Array.from(B.subarray(w>>>0,I>>>0)):[]})},948002:(i,c,m,w,I)=>{r.Ra("ReduceL2",i,{keepDims:!!c,noopWithEmptyAxes:!!m,axes:w?Array.from(B.subarray(w>>>0,I>>>0)):[]})},948159:(i,c,m,w,I)=>{r.Ra("ReduceLogSum",i,{keepDims:!!c,noopWithEmptyAxes:!!m,axes:w?Array.from(B.subarray(w>>>0,I>>>0)):[]})},948320:(i,c,m,w,I)=>{r.Ra("ReduceSumSquare",i,{keepDims:!!c,noopWithEmptyAxes:!!m,axes:w?Array.from(B.subarray(w>>>0,I>>>0)):[]})},948484:(i,c,m,w,I)=>{r.Ra("ReduceLogSumExp",i,{keepDims:!!c,noopWithEmptyAxes:!!m,axes:w?Array.from(B.subarray(w>>>0,I>>>0)):[]})},948648:i=>{r.Ra("Where",i,void 0)},948701:(i,c,m)=>{r.Ra("Transpose",i,{perm:c?Array.from(B.subarray(c>>>0,m>>>0)):[]})},948809:(i,c,m,w,I,D,H,K,Y,q,ee,pe,we,O,oe)=>{r.Ra("ConvTranspose",i,{format:Y?"NHWC":"NCHW",autoPad:c,dilations:[m],group:w,kernel_shape:[I],pads:[D,H],strides:[K],wIsConst:()=>!!k[q>>>0],outputPadding:ee?Array.from(B.subarray(ee>>>0,pe>>>0)):[],outputShape:we?Array.from(B.subarray(we>>>0,O>>>0)):[],activation:qe(oe)})},949211:(i,c,m,w,I,D,H,K,Y,q,ee,pe,we,O)=>{r.Ra("ConvTranspose",i,{format:K?"NHWC":"NCHW",autoPad:c,dilations:Array.from(B.subarray(m>>>0,(m>>>0)+2>>>0)),group:w,kernelShape:Array.from(B.subarray(I>>>0,(I>>>0)+2>>>0)),pads:Array.from(B.subarray(D>>>0,(D>>>0)+4>>>0)),strides:Array.from(B.subarray(H>>>0,(H>>>0)+2>>>0)),wIsConst:()=>!!k[Y>>>0],outputPadding:q?Array.from(B.subarray(q>>>0,ee>>>0)):[],outputShape:pe?Array.from(B.subarray(pe>>>0,we>>>0)):[],activation:qe(O)})},949776:(i,c,m,w,I,D,H,K,Y,q,ee,pe,we,O,oe)=>{r.Ra("ConvTranspose",i,{format:Y?"NHWC":"NCHW",autoPad:c,dilations:[m],group:w,kernel_shape:[I],pads:[D,H],strides:[K],wIsConst:()=>!!k[q>>>0],outputPadding:ee?Array.from(B.subarray(ee>>>0,pe>>>0)):[],outputShape:we?Array.from(B.subarray(we>>>0,O>>>0)):[],activation:qe(oe)})},950178:(i,c,m,w,I,D,H,K,Y,q,ee,pe,we,O)=>{r.Ra("ConvTranspose",i,{format:K?"NHWC":"NCHW",autoPad:c,dilations:Array.from(B.subarray(m>>>0,(m>>>0)+2>>>0)),group:w,kernelShape:Array.from(B.subarray(I>>>0,(I>>>0)+2>>>0)),pads:Array.from(B.subarray(D>>>0,(D>>>0)+4>>>0)),strides:Array.from(B.subarray(H>>>0,(H>>>0)+2>>>0)),wIsConst:()=>!!k[Y>>>0],outputPadding:q?Array.from(B.subarray(q>>>0,ee>>>0)):[],outputShape:pe?Array.from(B.subarray(pe>>>0,we>>>0)):[],activation:qe(O)})},950743:(i,c)=>{r.Ra("GlobalAveragePool",i,{format:c?"NHWC":"NCHW"})},950834:(i,c,m,w,I,D,H,K,Y,q,ee,pe,we,O,oe,ve)=>{r.Ra("AveragePool",i,{format:ve?"NHWC":"NCHW",auto_pad:c,ceil_mode:m,count_include_pad:w,storage_order:I,dilations:[D,H],kernel_shape:[K,Y],pads:[q,ee,pe,we],strides:[O,oe]})},951118:(i,c)=>{r.Ra("GlobalAveragePool",i,{format:c?"NHWC":"NCHW"})},951209:(i,c,m,w,I,D,H,K,Y,q,ee,pe,we,O,oe,ve)=>{r.Ra("AveragePool",i,{format:ve?"NHWC":"NCHW",auto_pad:c,ceil_mode:m,count_include_pad:w,storage_order:I,dilations:[D,H],kernel_shape:[K,Y],pads:[q,ee,pe,we],strides:[O,oe]})},951493:(i,c)=>{r.Ra("GlobalMaxPool",i,{format:c?"NHWC":"NCHW"})},951580:(i,c,m,w,I,D,H,K,Y,q,ee,pe,we,O,oe,ve)=>{r.Ra("MaxPool",i,{format:ve?"NHWC":"NCHW",auto_pad:c,ceil_mode:m,count_include_pad:w,storage_order:I,dilations:[D,H],kernel_shape:[K,Y],pads:[q,ee,pe,we],strides:[O,oe]})},951860:(i,c)=>{r.Ra("GlobalMaxPool",i,{format:c?"NHWC":"NCHW"})},951947:(i,c,m,w,I,D,H,K,Y,q,ee,pe,we,O,oe,ve)=>{r.Ra("MaxPool",i,{format:ve?"NHWC":"NCHW",auto_pad:c,ceil_mode:m,count_include_pad:w,storage_order:I,dilations:[D,H],kernel_shape:[K,Y],pads:[q,ee,pe,we],strides:[O,oe]})},952227:(i,c,m,w,I)=>{r.Ra("Gemm",i,{alpha:c,beta:m,transA:w,transB:I})},952331:i=>{r.Ra("MatMul",i,void 0)},952385:(i,c,m,w)=>{r.Ra("ArgMax",i,{keepDims:!!c,selectLastIndex:!!m,axis:w})},952493:(i,c,m,w)=>{r.Ra("ArgMin",i,{keepDims:!!c,selectLastIndex:!!m,axis:w})},952601:(i,c)=>{r.Ra("Softmax",i,{axis:c})},952664:(i,c)=>{r.Ra("Concat",i,{axis:c})},952724:(i,c,m,w,I)=>{r.Ra("Split",i,{axis:c,numOutputs:m,splitSizes:w?Array.from(B.subarray(w>>>0,I>>>0)):[]})},952864:i=>{r.Ra("Expand",i,void 0)},952918:(i,c)=>{r.Ra("Gather",i,{axis:Number(c)})},952989:(i,c)=>{r.Ra("GatherElements",i,{axis:Number(c)})},953068:(i,c,m,w,I,D,H,K,Y,q,ee)=>{r.Ra("Resize",i,{antialias:c,axes:m?Array.from(B.subarray(m>>>0,w>>>0)):[],coordinateTransformMode:qe(I),cubicCoeffA:D,excludeOutside:H,extrapolationValue:K,keepAspectRatioPolicy:qe(Y),mode:qe(q),nearestMode:qe(ee)})},953414:(i,c,m,w,I,D,H)=>{r.Ra("Slice",i,{starts:c?Array.from(B.subarray(c>>>0,m>>>0)):[],ends:w?Array.from(B.subarray(w>>>0,I>>>0)):[],axes:D?Array.from(B.subarray(D>>>0,H>>>0)):[]})},953630:i=>{r.Ra("Tile",i,void 0)},953682:(i,c,m)=>{r.Ra("LayerNormalization",i,{axis:Number(c),epsilon:Number(m)})},953789:(i,c,m)=>{r.Ra("InstanceNormalization",i,{epsilon:c,format:m?"NHWC":"NCHW"})},953903:(i,c,m)=>{r.Ra("InstanceNormalization",i,{epsilon:c,format:m?"NHWC":"NCHW"})},954017:i=>{r.Ra("Range",i,void 0)},954070:(i,c)=>{r.Ra("Einsum",i,{equation:qe(c)})},954151:(i,c,m,w,I)=>{r.Ra("Pad",i,{mode:c,value:m,pads:w?Array.from(B.subarray(w>>>0,I>>>0)):[]})},954278:(i,c,m,w,I,D)=>{r.Ra("BatchNormalization",i,{epsilon:c,momentum:m,spatial:!!I,trainingMode:!!w,format:D?"NHWC":"NCHW"})},954447:(i,c,m,w,I,D)=>{r.Ra("BatchNormalization",i,{epsilon:c,momentum:m,spatial:!!I,trainingMode:!!w,format:D?"NHWC":"NCHW"})},954616:(i,c,m)=>{r.Ra("CumSum",i,{exclusive:Number(c),reverse:Number(m)})},954713:(i,c,m,w,I,D,H,K,Y)=>{r.Ra("Attention",i,{numHeads:c,isUnidirectional:m,maskFilterValue:w,scale:I,doRotary:D,qkvHiddenSizes:H?Array.from(B.subarray(Number(K)>>>0,Number(K)+H>>>0)):[],pastPresentShareBuffer:!!Y})},954985:i=>{r.Ra("Gelu",i,void 0)},955037:(i,c,m,w,I,D)=>{r.Ra("MultiHeadAttention",i,{numHeads:c,isUnidirectional:m,maskFilterValue:w,scale:I,doRotary:D})},955196:i=>{r.Ra("BiasAdd",i,void 0)},955251:i=>{r.Ra("BiasSplitGelu",i,void 0)},955312:(i,c)=>{r.Ra("SkipLayerNormalization",i,{epsilon:c})},955393:(i,c,m,w,I,D,H,K,Y,q,ee,pe,we)=>{r.Ra("Conv",i,{format:Y?"NHWC":"NCHW",auto_pad:c,dilations:[m],group:w,kernel_shape:[I],pads:D?Array.from(B.subarray(D>>>0,H>>>0)):[],strides:[K],w_is_const:()=>!!k[q>>>0],activation:qe(ee),activation_params:pe?Array.from(J.subarray(pe>>>0,we>>>0)):[]})},955763:(i,c,m,w,I,D,H,K,Y,q,ee,pe,we,O,oe,ve)=>{r.Ra("Conv",i,{format:pe?"NHWC":"NCHW",auto_pad:c,dilations:[m,w],group:I,kernel_shape:[D,H],pads:K?Array.from(B.subarray(K>>>0,Y>>>0)):[],strides:[q,ee],w_is_const:()=>!!k[we>>>0],activation:qe(O),activation_params:oe?Array.from(J.subarray(oe>>>0,ve>>>0)):[]})},956154:i=>{r.yb(i)},956188:(i,c)=>r.zb(i,c,r.fb.Ab,r.fb.errors)};function It(i){this.name="ExitStatus",this.message=`Program terminated with exit(${i})`,this.status=i}function Gt(i){this.cb=i-24,this.rb=function(c){F[this.cb+4>>>2>>>0]=c},this.qb=function(c){F[this.cb+8>>>2>>>0]=c},this.kb=function(c,m){this.jb(),this.rb(c),this.qb(m)},this.jb=function(){F[this.cb+16>>>2>>>0]=0}}var At=0,Dr=0,Mr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,lr=(i,c,m)=>{c>>>=0;var w=c+m;for(m=c;i[m]&&!(m>=w);)++m;if(16<m-c&&i.buffer&&Mr)return Mr.decode(i.subarray(c,m));for(w="";c<m;){var I=i[c++];if(I&128){var D=i[c++]&63;if((I&224)==192)w+=String.fromCharCode((I&31)<<6|D);else{var H=i[c++]&63;I=(I&240)==224?(I&15)<<12|D<<6|H:(I&7)<<18|D<<12|H<<6|i[c++]&63,65536>I?w+=String.fromCharCode(I):(I-=65536,w+=String.fromCharCode(55296|I>>10,56320|I&1023))}}else w+=String.fromCharCode(I)}return w},qe=(i,c)=>(i>>>=0)?lr(U,i,c):"",lt=i=>{for(var c=0,m=0;m<i.length;++m){var w=i.charCodeAt(m);127>=w?c++:2047>=w?c+=2:55296<=w&&57343>=w?(c+=4,++m):c+=3}return c},Tt=(i,c,m,w)=>{if(m>>>=0,!(0<w))return 0;var I=m;w=m+w-1;for(var D=0;D<i.length;++D){var H=i.charCodeAt(D);if(55296<=H&&57343>=H){var K=i.charCodeAt(++D);H=65536+((H&1023)<<10)|K&1023}if(127>=H){if(m>=w)break;c[m++>>>0]=H}else{if(2047>=H){if(m+1>=w)break;c[m++>>>0]=192|H>>6}else{if(65535>=H){if(m+2>=w)break;c[m++>>>0]=224|H>>12}else{if(m+3>=w)break;c[m++>>>0]=240|H>>18,c[m++>>>0]=128|H>>12&63}c[m++>>>0]=128|H>>6&63}c[m++>>>0]=128|H&63}}return c[m>>>0]=0,m-I},Lt=i=>{if(i===null)return"null";var c=typeof i;return c==="object"||c==="array"||c==="function"?i.toString():""+i},Ft,tt=i=>{for(var c="";U[i>>>0];)c+=Ft[U[i++>>>0]];return c},dt={},jt={},zr={},Re;function zn(i,c,m={}){var w=c.name;if(!i)throw new Re(`type "${w}" must have a positive integer typeid pointer`);if(jt.hasOwnProperty(i)){if(m.tb)return;throw new Re(`Cannot register type \'${w}\' twice`)}jt[i]=c,delete zr[i],dt.hasOwnProperty(i)&&(c=dt[i],delete dt[i],c.forEach(I=>I()))}function xe(i,c,m={}){if(!("argPackAdvance"in c))throw new TypeError("registerType registeredInstance requires argPackAdvance");zn(i,c,m)}var dr=(i,c,m)=>{switch(c){case 1:return m?w=>k[w>>>0>>>0]:w=>U[w>>>0>>>0];case 2:return m?w=>W[w>>>1>>>0]:w=>Z[w>>>1>>>0];case 4:return m?w=>B[w>>>2>>>0]:w=>F[w>>>2>>>0];case 8:return m?w=>te[w>>>3]:w=>re[w>>>3];default:throw new TypeError(`invalid integer width (${c}): ${i}`)}};function qt(){this.$a=[void 0],this.nb=[]}var Ye=new qt;function cr(i){i>>>=0,i>=Ye.cb&&--Ye.get(i).pb===0&&Ye.jb(i)}var Ze=i=>{if(!i)throw new Re("Cannot use deleted val. handle = "+i);return Ye.get(i).value},it=i=>{switch(i){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return Ye.kb({pb:1,value:i})}};function le(i){return this.fromWireType(B[i>>>2>>>0])}var Kt=(i,c)=>{switch(c){case 4:return function(m){return this.fromWireType(J[m>>>2>>>0])};case 8:return function(m){return this.fromWireType(Ee[m>>>3>>>0])};default:throw new TypeError(`invalid float width (${c}): ${i}`)}};function Ur(i){return this.fromWireType(F[i>>>2>>>0])}var Vr=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Nr=(i,c)=>{for(var m=i>>1,w=m+c/2;!(m>=w)&&Z[m>>>0];)++m;if(m<<=1,32<m-i&&Vr)return Vr.decode(U.subarray(i>>>0,m>>>0));for(m="",w=0;!(w>=c/2);++w){var I=W[i+2*w>>>1>>>0];if(I==0)break;m+=String.fromCharCode(I)}return m},Un=(i,c,m)=>{if(m??=2147483647,2>m)return 0;m-=2;var w=c;m=m<2*i.length?m/2:i.length;for(var I=0;I<m;++I)W[c>>>1>>>0]=i.charCodeAt(I),c+=2;return W[c>>>1>>>0]=0,c-w},Wr=i=>2*i.length,Hr=(i,c)=>{for(var m=0,w="";!(m>=c/4);){var I=B[i+4*m>>>2>>>0];if(I==0)break;++m,65536<=I?(I-=65536,w+=String.fromCharCode(55296|I>>10,56320|I&1023)):w+=String.fromCharCode(I)}return w},Gr=(i,c,m)=>{if(c>>>=0,m??=2147483647,4>m)return 0;var w=c;m=w+m-4;for(var I=0;I<i.length;++I){var D=i.charCodeAt(I);if(55296<=D&&57343>=D){var H=i.charCodeAt(++I);D=65536+((D&1023)<<10)|H&1023}if(B[c>>>2>>>0]=D,c+=4,c+4>m)break}return B[c>>>2>>>0]=0,c-w},Lr=i=>{for(var c=0,m=0;m<i.length;++m){var w=i.charCodeAt(m);55296<=w&&57343>=w&&++m,c+=4}return c},kt=(i,c)=>{var m=jt[i];if(m===void 0)throw i=zt(i),m=tt(i),at(i),new Re(c+" has unknown type "+m);return m},pr=(i,c,m)=>{var w=[];return i=i.toWireType(w,m),w.length&&(F[c>>>2>>>0]=it(w)),i},Bt=[],Fr={},Yt=i=>{var c=Fr[i];return c===void 0?tt(i):c},mr=()=>typeof globalThis=="object"?globalThis:Function("return this")(),jr=i=>{var c=Bt.length;return Bt.push(i),c},qr=(i,c)=>{for(var m=Array(i),w=0;w<i;++w)m[w]=kt(F[c+4*w>>>2>>>0],"parameter "+w);return m},fr=(i,c)=>Object.defineProperty(c,"name",{value:i});function Kr(i){var c=Function;if(!(c instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof c} which is not a function`);var m=fr(c.name||"unknownFunctionName",function(){});return m.prototype=c.prototype,m=new m,i=c.apply(m,i),i instanceof Object?i:m}var _t=i=>i%4===0&&(i%100!==0||i%400===0),hr=[0,31,60,91,121,152,182,213,244,274,305,335],gr=[0,31,59,90,120,151,181,212,243,273,304,334],yr=i=>{var c=lt(i)+1,m=Qe(c);return m&&Tt(i,U,m,c),m},Zt=[],Qt=(i,c)=>{Zt.length=0;for(var m;m=U[i++>>>0];){var w=m!=105;w&=m!=112,c+=w&&c%8?4:0,Zt.push(m==112?F[c>>>2>>>0]:m==106?te[c>>>3]:m==105?B[c>>>2>>>0]:Ee[c>>>3>>>0]),c+=w?8:4}return Zt},Et={},Xt=()=>{if(!ht){var i={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:l||"./this.program"},c;for(c in Et)Et[c]===void 0?delete i[c]:i[c]=Et[c];var m=[];for(c in i)m.push(`${c}=${i[c]}`);ht=m}return ht},ht,Yr=[null,[],[]],br=[31,29,31,30,31,30,31,31,30,31,30,31],wr=[31,28,31,30,31,30,31,31,30,31,30,31];function Zr(i){var c=Array(lt(i)+1);return Tt(i,c,0,c.length),c}function vr(i,c,m,w){function I(O,oe,ve){for(O=typeof O=="number"?O.toString():O||"";O.length<oe;)O=ve[0]+O;return O}function D(O,oe){return I(O,oe,"0")}function H(O,oe){function ve(Cr){return 0>Cr?-1:0<Cr?1:0}var pt;return(pt=ve(O.getFullYear()-oe.getFullYear()))===0&&(pt=ve(O.getMonth()-oe.getMonth()))===0&&(pt=ve(O.getDate()-oe.getDate())),pt}function K(O){switch(O.getDay()){case 0:return new Date(O.getFullYear()-1,11,29);case 1:return O;case 2:return new Date(O.getFullYear(),0,3);case 3:return new Date(O.getFullYear(),0,2);case 4:return new Date(O.getFullYear(),0,1);case 5:return new Date(O.getFullYear()-1,11,31);case 6:return new Date(O.getFullYear()-1,11,30)}}function Y(O){var oe=O.ab;for(O=new Date(new Date(O.bb+1900,0,1).getTime());0<oe;){var ve=O.getMonth(),pt=(_t(O.getFullYear())?br:wr)[ve];if(oe>pt-O.getDate())oe-=pt-O.getDate()+1,O.setDate(1),11>ve?O.setMonth(ve+1):(O.setMonth(0),O.setFullYear(O.getFullYear()+1));else{O.setDate(O.getDate()+oe);break}}return ve=new Date(O.getFullYear()+1,0,4),oe=K(new Date(O.getFullYear(),0,4)),ve=K(ve),0>=H(oe,O)?0>=H(ve,O)?O.getFullYear()+1:O.getFullYear():O.getFullYear()-1}i>>>=0,c>>>=0,m>>>=0,w>>>=0;var q=F[w+40>>>2>>>0];w={Db:B[w>>>2>>>0],Cb:B[w+4>>>2>>>0],hb:B[w+8>>>2>>>0],mb:B[w+12>>>2>>>0],ib:B[w+16>>>2>>>0],bb:B[w+20>>>2>>>0],Va:B[w+24>>>2>>>0],ab:B[w+28>>>2>>>0],Gb:B[w+32>>>2>>>0],Bb:B[w+36>>>2>>>0],Eb:q?qe(q):""},m=qe(m),q={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var ee in q)m=m.replace(new RegExp(ee,"g"),q[ee]);var pe="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),we="January February March April May June July August September October November December".split(" ");q={"%a":O=>pe[O.Va].substring(0,3),"%A":O=>pe[O.Va],"%b":O=>we[O.ib].substring(0,3),"%B":O=>we[O.ib],"%C":O=>D((O.bb+1900)/100|0,2),"%d":O=>D(O.mb,2),"%e":O=>I(O.mb,2," "),"%g":O=>Y(O).toString().substring(2),"%G":O=>Y(O),"%H":O=>D(O.hb,2),"%I":O=>(O=O.hb,O==0?O=12:12<O&&(O-=12),D(O,2)),"%j":O=>{for(var oe=0,ve=0;ve<=O.ib-1;oe+=(_t(O.bb+1900)?br:wr)[ve++]);return D(O.mb+oe,3)},"%m":O=>D(O.ib+1,2),"%M":O=>D(O.Cb,2),"%n":()=>`\n`,"%p":O=>0<=O.hb&&12>O.hb?"AM":"PM","%S":O=>D(O.Db,2),"%t":()=>"	","%u":O=>O.Va||7,"%U":O=>D(Math.floor((O.ab+7-O.Va)/7),2),"%V":O=>{var oe=Math.floor((O.ab+7-(O.Va+6)%7)/7);if(2>=(O.Va+371-O.ab-2)%7&&oe++,oe)oe==53&&(ve=(O.Va+371-O.ab)%7,ve==4||ve==3&&_t(O.bb)||(oe=1));else{oe=52;var ve=(O.Va+7-O.ab-1)%7;(ve==4||ve==5&&_t(O.bb%400-1))&&oe++}return D(oe,2)},"%w":O=>O.Va,"%W":O=>D(Math.floor((O.ab+7-(O.Va+6)%7)/7),2),"%y":O=>(O.bb+1900).toString().substring(2),"%Y":O=>O.bb+1900,"%z":O=>{O=O.Bb;var oe=0<=O;return O=Math.abs(O)/60,(oe?"+":"-")+("0000"+(O/60*100+O%60)).slice(-4)},"%Z":O=>O.Eb,"%%":()=>"%"},m=m.replace(/%%/g,"\\0\\0");for(ee in q)m.includes(ee)&&(m=m.replace(new RegExp(ee,"g"),q[ee](w)));return m=m.replace(/\\0\\0/g,"%"),ee=Zr(m),ee.length>c?0:(k.set(ee,i>>>0),ee.length-1)}var Ot=i=>{try{i()}catch(c){Me(c)}};function Qr(){var i=ue,c={};for(let[m,w]of Object.entries(i))c[m]=typeof w=="function"?function(){Dt.push(m);try{return w.apply(null,arguments)}finally{T||(Dt.pop(),ot&&st===1&&Dt.length===0&&(st=0,Ot(on),typeof Fibers<"u"&&Fibers.Hb()))}}:w;return c}var st=0,ot=null,Jt=0,Dt=[],$r={},Sr={},Xr=0,er=null,Vn=[];function Jr(){return new Promise((i,c)=>{er={resolve:i,reject:c}})}function en(){var i=Qe(65548),c=i+12;F[i>>>2>>>0]=c,F[i+4>>>2>>>0]=c+65536,c=Dt[0];var m=$r[c];return m===void 0&&(m=Xr++,$r[c]=m,Sr[m]=c),B[i+8>>>2>>>0]=m,i}function tn(i){if(!T){if(st===0){var c=!1,m=!1;i((w=0)=>{if(!T&&(Jt=w,c=!0,m)){st=2,Ot(()=>an(ot)),typeof Browser<"u"&&Browser.lb.sb&&Browser.lb.resume(),w=!1;try{var I=(0,ue[Sr[B[ot+8>>>2>>>0]]])()}catch(K){I=K,w=!0}var D=!1;if(!ot){var H=er;H&&(er=null,(w?H.reject:H.resolve)(I),D=!0)}if(w&&!D)throw I}}),m=!0,c||(st=1,ot=en(),typeof Browser<"u"&&Browser.lb.sb&&Browser.lb.pause(),Ot(()=>rr(ot)))}else st===2?(st=0,Ot(sn),at(ot),ot=null,Vn.forEach(w=>{if(!T)try{w();try{V=V=w=V,r.onExit?.(w),T=!0,d(w,new It(w))}catch(I){I instanceof It||I=="unwind"||d(1,I)}}catch(I){I instanceof It||I=="unwind"||d(1,I)}})):Me(`invalid state: ${st}`);return Jt}}function Nn(i){return tn(c=>{i().then(c)})}for(var rn=Array(256),Mt=0;256>Mt;++Mt)rn[Mt]=String.fromCharCode(Mt);Ft=rn,Re=r.BindingError=class extends Error{constructor(i){super(i),this.name="BindingError"}},r.InternalError=class extends Error{constructor(i){super(i),this.name="InternalError"}},Object.assign(qt.prototype,{get(i){return this.$a[i]},has(i){return this.$a[i]!==void 0},kb(i){var c=this.nb.pop()||this.$a.length;return this.$a[c]=i,c},jb(i){this.$a[i]=void 0,this.nb.push(i)}}),Ye.$a.push({value:void 0},{value:null},{value:!0},{value:!1}),Ye.cb=Ye.$a.length,r.count_emval_handles=()=>{for(var i=0,c=Ye.cb;c<Ye.$a.length;++c)Ye.$a[c]!==void 0&&++i;return i};var tr={ha:function(i,c,m){return Nn(async()=>{await r.wb(i,c,m)})},a:function(i,c,m){throw i>>>=0,new Gt(i).kb(c>>>0,m>>>0),At=i,Dr++,At},v:function(){return 0},aa:function(){},N:function(){},P:function(){},ba:function(){return 0},_:function(){},V:function(){},Z:function(){},C:function(){},O:function(){},L:function(){},$:function(){},M:function(){},F:function(i,c,m,w,I){c>>>=0,c=tt(c);var D=c.indexOf("u")!=-1;D&&(I=(1n<<64n)-1n),xe(i>>>0,{name:c,fromWireType:H=>H,toWireType:function(H,K){if(typeof K!="bigint"&&typeof K!="number")throw new TypeError(`Cannot convert "${Lt(K)}" to ${this.name}`);if(K<w||K>I)throw new TypeError(`Passing a number "${Lt(K)}" from JS side to C/C++ side to an argument of type "${c}", which is outside the valid range [${w}, ${I}]!`);return K},argPackAdvance:8,readValueFromPointer:dr(c,m>>>0,!D),eb:null})},fa:function(i,c,m,w){c=tt(c>>>0),xe(i>>>0,{name:c,fromWireType:function(I){return!!I},toWireType:function(I,D){return D?m:w},argPackAdvance:8,readValueFromPointer:function(I){return this.fromWireType(U[I>>>0])},eb:null})},ea:function(i,c){c=tt(c>>>0),xe(i>>>0,{name:c,fromWireType:m=>{var w=Ze(m);return cr(m),w},toWireType:(m,w)=>it(w),argPackAdvance:8,readValueFromPointer:le,eb:null})},E:function(i,c,m){c=tt(c>>>0),xe(i>>>0,{name:c,fromWireType:w=>w,toWireType:(w,I)=>I,argPackAdvance:8,readValueFromPointer:Kt(c,m>>>0),eb:null})},r:function(i,c,m,w,I){if(i>>>=0,m>>>=0,c=tt(c>>>0),I===-1&&(I=4294967295),I=K=>K,w===0){var D=32-8*m;I=K=>K<<D>>>D}var H=c.includes("unsigned")?function(K,Y){return Y>>>0}:function(K,Y){return Y};xe(i,{name:c,fromWireType:I,toWireType:H,argPackAdvance:8,readValueFromPointer:dr(c,m,w!==0),eb:null})},m:function(i,c,m){function w(D){return new I(k.buffer,F[D+4>>>2>>>0],F[D>>>2>>>0])}var I=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][c];m=tt(m>>>0),xe(i>>>0,{name:m,fromWireType:w,argPackAdvance:8,readValueFromPointer:w},{tb:!0})},G:function(i,c){c=tt(c>>>0);var m=c==="std::string";xe(i>>>0,{name:c,fromWireType:function(w){var I=F[w>>>2>>>0],D=w+4;if(m)for(var H=D,K=0;K<=I;++K){var Y=D+K;if(K==I||U[Y>>>0]==0){if(H=qe(H,Y-H),q===void 0)var q=H;else q+=String.fromCharCode(0),q+=H;H=Y+1}}else{for(q=Array(I),K=0;K<I;++K)q[K]=String.fromCharCode(U[D+K>>>0]);q=q.join("")}return at(w),q},toWireType:function(w,I){I instanceof ArrayBuffer&&(I=new Uint8Array(I));var D=typeof I=="string";if(!(D||I instanceof Uint8Array||I instanceof Uint8ClampedArray||I instanceof Int8Array))throw new Re("Cannot pass non-string to std::string");var H=m&&D?lt(I):I.length,K=Qe(4+H+1),Y=K+4;if(F[K>>>2>>>0]=H,m&&D)Tt(I,U,Y,H+1);else if(D)for(D=0;D<H;++D){var q=I.charCodeAt(D);if(255<q)throw at(Y),new Re("String has UTF-16 code units that do not fit in 8 bits");U[Y+D>>>0]=q}else for(D=0;D<H;++D)U[Y+D>>>0]=I[D];return w!==null&&w.push(at,K),K},argPackAdvance:8,readValueFromPointer:Ur,eb(w){at(w)}})},x:function(i,c,m){if(c>>>=0,m>>>=0,m=tt(m),c===2)var w=Nr,I=Un,D=Wr,H=()=>Z,K=1;else c===4&&(w=Hr,I=Gr,D=Lr,H=()=>F,K=2);xe(i>>>0,{name:m,fromWireType:Y=>{for(var q=F[Y>>>2>>>0],ee=H(),pe,we=Y+4,O=0;O<=q;++O){var oe=Y+4+O*c;(O==q||ee[oe>>>K]==0)&&(we=w(we,oe-we),pe===void 0?pe=we:(pe+=String.fromCharCode(0),pe+=we),we=oe+c)}return at(Y),pe},toWireType:(Y,q)=>{if(typeof q!="string")throw new Re(`Cannot pass non-string to C++ string type ${m}`);var ee=D(q),pe=Qe(4+ee+c);return F[pe>>>2]=ee>>K,I(q,pe+4,ee+c),Y!==null&&Y.push(at,pe),pe},argPackAdvance:8,readValueFromPointer:le,eb(Y){at(Y)}})},ga:function(i,c){c=tt(c>>>0),xe(i>>>0,{ub:!0,name:c,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},ca:()=>1,p:function(i,c,m){return c>>>=0,m>>>=0,i=Ze(i>>>0),c=kt(c,"emval::as"),pr(c,m,i)},z:function(i,c,m,w){return m>>>=0,w>>>=0,i=Bt[i>>>0],c=Ze(c>>>0),i(null,c,m,w)},k:function(i,c,m,w,I){return m>>>=0,w>>>=0,I>>>=0,i=Bt[i>>>0],c=Ze(c>>>0),m=Yt(m),i(c,c[m],w,I)},b:cr,y:function(i,c){return c>>>=0,i=Ze(i>>>0),c=Ze(c),i==c},t:function(i){return i>>>=0,i===0?it(mr()):(i=Yt(i),it(mr()[i]))},j:function(i,c,m){c=qr(i,c>>>0);var w=c.shift();i--;var I=`return function (obj, func, destructorsRef, args) {\n`,D=0,H=[];m===0&&H.push("obj");for(var K=["retType"],Y=[w],q=0;q<i;++q)H.push("arg"+q),K.push("argType"+q),Y.push(c[q]),I+=`  var arg${q} = argType${q}.readValueFromPointer(args${D?"+"+D:""});\n`,D+=c[q].argPackAdvance;for(I+=`  var rv = ${m===1?"new func":"func.call"}(${H.join(", ")});\n`,q=0;q<i;++q)c[q].deleteObject&&(I+=`  argType${q}.deleteObject(arg${q});\n`);return w.ub||(K.push("emval_returnValue"),Y.push(pr),I+=`  return emval_returnValue(retType, destructorsRef, rv);\n`),K.push(I+`};\n`),i=Kr(K).apply(null,Y),m=`methodCaller<(${c.map(ee=>ee.name).join(", ")}) => ${w.name}>`,jr(fr(m,i))},q:function(i,c){return c>>>=0,i=Ze(i>>>0),c=Ze(c),it(i[c])},c:function(i){i>>>=0,4<i&&(Ye.get(i).pb+=1)},s:function(){return it([])},l:function(i){i=Ze(i>>>0);for(var c=Array(i.length),m=0;m<i.length;m++)c[m]=i[m];return it(c)},e:function(i){return it(Yt(i>>>0))},i:function(){return it({})},h:function(i){i>>>=0;for(var c=Ze(i);c.length;){var m=c.pop();c.pop()(m)}cr(i)},g:function(i,c,m){c>>>=0,m>>>=0,i=Ze(i>>>0),c=Ze(c),m=Ze(m),i[c]=m},f:function(i,c){return c>>>=0,i=kt(i>>>0,"_emval_take_value"),i=i.readValueFromPointer(c),it(i)},S:function(i,c){i=-9007199254740992>i||9007199254740992<i?NaN:Number(i),c>>>=0,i=new Date(1e3*i),B[c>>>2>>>0]=i.getUTCSeconds(),B[c+4>>>2>>>0]=i.getUTCMinutes(),B[c+8>>>2>>>0]=i.getUTCHours(),B[c+12>>>2>>>0]=i.getUTCDate(),B[c+16>>>2>>>0]=i.getUTCMonth(),B[c+20>>>2>>>0]=i.getUTCFullYear()-1900,B[c+24>>>2>>>0]=i.getUTCDay(),B[c+28>>>2>>>0]=(i.getTime()-Date.UTC(i.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},T:function(i,c){i=-9007199254740992>i||9007199254740992<i?NaN:Number(i),c>>>=0,i=new Date(1e3*i),B[c>>>2>>>0]=i.getSeconds(),B[c+4>>>2>>>0]=i.getMinutes(),B[c+8>>>2>>>0]=i.getHours(),B[c+12>>>2>>>0]=i.getDate(),B[c+16>>>2>>>0]=i.getMonth(),B[c+20>>>2>>>0]=i.getFullYear()-1900,B[c+24>>>2>>>0]=i.getDay(),B[c+28>>>2>>>0]=(_t(i.getFullYear())?hr:gr)[i.getMonth()]+i.getDate()-1|0,B[c+36>>>2>>>0]=-(60*i.getTimezoneOffset());var m=new Date(i.getFullYear(),6,1).getTimezoneOffset(),w=new Date(i.getFullYear(),0,1).getTimezoneOffset();B[c+32>>>2>>>0]=(m!=w&&i.getTimezoneOffset()==Math.min(w,m))|0},U:function(i){i>>>=0;var c=new Date(B[i+20>>>2>>>0]+1900,B[i+16>>>2>>>0],B[i+12>>>2>>>0],B[i+8>>>2>>>0],B[i+4>>>2>>>0],B[i>>>2>>>0],0),m=B[i+32>>>2>>>0],w=c.getTimezoneOffset(),I=new Date(c.getFullYear(),6,1).getTimezoneOffset(),D=new Date(c.getFullYear(),0,1).getTimezoneOffset(),H=Math.min(D,I);return 0>m?B[i+32>>>2>>>0]=+(I!=D&&H==w):0<m!=(H==w)&&(I=Math.max(D,I),c.setTime(c.getTime()+6e4*((0<m?H:I)-w))),B[i+24>>>2>>>0]=c.getDay(),B[i+28>>>2>>>0]=(_t(c.getFullYear())?hr:gr)[c.getMonth()]+c.getDate()-1|0,B[i>>>2>>>0]=c.getSeconds(),B[i+4>>>2>>>0]=c.getMinutes(),B[i+8>>>2>>>0]=c.getHours(),B[i+12>>>2>>>0]=c.getDate(),B[i+16>>>2>>>0]=c.getMonth(),B[i+20>>>2>>>0]=c.getYear(),i=c.getTime(),isNaN(i)?(B[ct()>>>2>>>0]=61,i=-1):i/=1e3,BigInt(i)},Q:function(){return-52},R:function(){},J:function(i,c,m){function w(Y){return(Y=Y.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?Y[1]:"GMT"}m>>>=0;var I=new Date().getFullYear(),D=new Date(I,0,1),H=new Date(I,6,1);I=D.getTimezoneOffset();var K=H.getTimezoneOffset();F[i>>>0>>>2>>>0]=60*Math.max(I,K),B[c>>>0>>>2>>>0]=+(I!=K),i=w(D),c=w(H),i=yr(i),c=yr(c),K<I?(F[m>>>2>>>0]=i,F[m+4>>>2>>>0]=c):(F[m>>>2>>>0]=c,F[m+4>>>2>>>0]=i)},u:()=>{Me("")},d:function(i,c,m){return i>>>=0,c=Qt(c>>>0,m>>>0),ut[i].apply(null,c)},H:function(i,c,m){return i>>>=0,c=Qt(c>>>0,m>>>0),ut[i].apply(null,c)},D:()=>Date.now(),K:function(){return 4294901760},o:()=>performance.now(),I:function(i){i>>>=0;var c=U.length;if(4294901760<i)return!1;for(var m=1;4>=m;m*=2){var w=c*(1+.2/m);w=Math.min(w,i+100663296);var I=Math;w=Math.max(i,w);e:{I=(I.min.call(I,4294901760,w+(65536-w%65536)%65536)-E.buffer.byteLength+65535)/65536;try{E.grow(I),Be();var D=1;break e}catch{}D=void 0}if(D)return!0}return!1},X:function(i,c){i>>>=0,c>>>=0;var m=0;return Xt().forEach((w,I)=>{var D=c+m;for(I=F[i+4*I>>>2>>>0]=D,D=0;D<w.length;++D)k[I++>>>0>>>0]=w.charCodeAt(D);k[I>>>0>>>0]=0,m+=w.length+1}),0},Y:function(i,c){i>>>=0,c>>>=0;var m=Xt();F[i>>>2>>>0]=m.length;var w=0;return m.forEach(I=>w+=I.length+1),F[c>>>2>>>0]=w,0},w:()=>52,B:function(){return 52},W:function(){return 70},A:function(i,c,m,w){c>>>=0,m>>>=0,w>>>=0;for(var I=0,D=0;D<m;D++){var H=F[c>>>2>>>0],K=F[c+4>>>2>>>0];c+=8;for(var Y=0;Y<K;Y++){var q=U[H+Y>>>0],ee=Yr[i];q===0||q===10?((i===1?S:_)(lr(ee,0)),ee.length=0):ee.push(q)}I+=K}return F[w>>>2>>>0]=I,0},da:vr,n:function(i,c,m,w){return vr(i>>>0,c>>>0,m>>>0,w>>>0)}},ue=function(){function i(m){return ue=m.exports,ue=Qr(),ue=Wn(),E=ue.ia,Be(),Ae.unshift(ue.ja),ye--,ye==0&&(He!==null&&(clearInterval(He),He=null),De&&(m=De,De=null,m())),ue}var c={a:tr};if(ye++,r.instantiateWasm)try{return r.instantiateWasm(c,i)}catch(m){_(`Module.instantiateWasm callback failed with error: ${m}`),n(m)}return Ct(c,function(m){i(m.instance)}).catch(n),{}}();r._OrtInit=(i,c)=>(r._OrtInit=ue.ka)(i,c),r._OrtGetLastError=(i,c)=>(r._OrtGetLastError=ue.la)(i,c),r._OrtCreateSessionOptions=(i,c,m,w,I,D,H,K,Y,q)=>(r._OrtCreateSessionOptions=ue.ma)(i,c,m,w,I,D,H,K,Y,q),r._OrtAppendExecutionProvider=(i,c)=>(r._OrtAppendExecutionProvider=ue.na)(i,c),r._OrtAddFreeDimensionOverride=(i,c,m)=>(r._OrtAddFreeDimensionOverride=ue.oa)(i,c,m),r._OrtAddSessionConfigEntry=(i,c,m)=>(r._OrtAddSessionConfigEntry=ue.pa)(i,c,m),r._OrtReleaseSessionOptions=i=>(r._OrtReleaseSessionOptions=ue.qa)(i),r._OrtCreateSession=(i,c,m)=>(r._OrtCreateSession=ue.ra)(i,c,m),r._OrtReleaseSession=i=>(r._OrtReleaseSession=ue.sa)(i),r._OrtGetInputOutputCount=(i,c,m)=>(r._OrtGetInputOutputCount=ue.ta)(i,c,m),r._OrtGetInputName=(i,c)=>(r._OrtGetInputName=ue.ua)(i,c),r._OrtGetOutputName=(i,c)=>(r._OrtGetOutputName=ue.va)(i,c),r._OrtFree=i=>(r._OrtFree=ue.wa)(i),r._OrtCreateTensor=(i,c,m,w,I,D)=>(r._OrtCreateTensor=ue.xa)(i,c,m,w,I,D),r._OrtGetTensorData=(i,c,m,w,I)=>(r._OrtGetTensorData=ue.ya)(i,c,m,w,I),r._OrtReleaseTensor=i=>(r._OrtReleaseTensor=ue.za)(i),r._OrtCreateRunOptions=(i,c,m,w)=>(r._OrtCreateRunOptions=ue.Aa)(i,c,m,w),r._OrtAddRunConfigEntry=(i,c,m)=>(r._OrtAddRunConfigEntry=ue.Ba)(i,c,m),r._OrtReleaseRunOptions=i=>(r._OrtReleaseRunOptions=ue.Ca)(i),r._OrtCreateBinding=i=>(r._OrtCreateBinding=ue.Da)(i),r._OrtBindInput=(i,c,m)=>(r._OrtBindInput=ue.Ea)(i,c,m),r._OrtBindOutput=(i,c,m,w)=>(r._OrtBindOutput=ue.Fa)(i,c,m,w),r._OrtClearBoundOutputs=i=>(r._OrtClearBoundOutputs=ue.Ga)(i),r._OrtReleaseBinding=i=>(r._OrtReleaseBinding=ue.Ha)(i),r._OrtRunWithBinding=(i,c,m,w,I)=>(r._OrtRunWithBinding=ue.Ia)(i,c,m,w,I),r._OrtRun=(i,c,m,w,I,D,H,K)=>(r._OrtRun=ue.Ja)(i,c,m,w,I,D,H,K),r._OrtEndProfiling=i=>(r._OrtEndProfiling=ue.Ka)(i),r._JsepOutput=(i,c,m)=>(r._JsepOutput=ue.La)(i,c,m),r._JsepGetNodeName=i=>(r._JsepGetNodeName=ue.Ma)(i);var ct=()=>(ct=ue.Na)(),Qe=r._malloc=i=>(Qe=r._malloc=ue.Oa)(i),at=r._free=i=>(at=r._free=ue.Pa)(i),zt=i=>(zt=ue.Qa)(i),xr=()=>(xr=ue.Sa)(),_r=i=>(_r=ue.Ta)(i),nn=i=>(nn=ue.Ua)(i),rr=i=>(rr=ue.Wa)(i),on=()=>(on=ue.Xa)(),an=i=>(an=ue.Ya)(i),sn=()=>(sn=ue.Za)();r.___start_em_js=956300,r.___stop_em_js=956461;function Wn(){var i=ue;i=Object.assign({},i);var c=w=>()=>w()>>>0,m=w=>I=>w(I)>>>0;return i.Na=c(i.Na),i.Oa=m(i.Oa),i.Qa=m(i.Qa),i.Sa=c(i.Sa),i.Ua=m(i.Ua),i}r.stackAlloc=nn,r.stackSave=xr,r.stackRestore=_r,r.UTF8ToString=qe,r.stringToUTF8=(i,c,m)=>Tt(i,U,c,m),r.lengthBytesUTF8=lt;var nr;De=function i(){nr||un(),nr||(De=i)};function un(){if(!(0<ye)){if(r.preRun)for(typeof r.preRun=="function"&&(r.preRun=[r.preRun]);r.preRun.length;){var i=r.preRun.shift();fe.unshift(i)}for(;0<fe.length;)fe.shift()(r);if(!(0<ye||nr||(nr=!0,r.calledRun=!0,T))){for(;0<Ae.length;)Ae.shift()(r);for(o(r);0<ge.length;)ge.shift()(r)}}}return un(),t.ready}})();typeof zo=="object"&&typeof qn=="object"?qn.exports=Mo:typeof define=="function"&&define.amd&&define([],()=>Mo)});var Vo=Ir(()=>{});var No=Ir(()=>{});var Wo={};dn(Wo,{cpus:()=>Qu});var Qu,Ho=X(()=>{Qu=void 0});var Fo=Ir((Lo,Kn)=>{"use strict";var Go=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){function r(){return te.buffer!=fe.buffer&&Me(),fe}function o(){return te.buffer!=fe.buffer&&Me(),Ae}function n(){return te.buffer!=fe.buffer&&Me(),ge}function u(){return te.buffer!=fe.buffer&&Me(),ye}function l(){return te.buffer!=fe.buffer&&Me(),He}function d(){return te.buffer!=fe.buffer&&Me(),De}var a=t,f,g;a.ready=new Promise((s,p)=>{f=s,g=p}),a.mountExternalData=(s,p)=>{(a.cb||(a.cb=new Map)).set(s,p)},a.unmountExternalData=()=>{delete a.cb},a.jsepInit=(s,p,h,x,P,M,G,se)=>{a.Mb=s,a.wb=p,a.yb=h,a.kb=x,a.xb=P,a.Ea=M,a.zb=G,a.Ab=se,p=(ae,ie,ce)=>(..._e)=>{let Te=Qe,R=ie?.();_e=ae(..._e);let me=ie?.();return R!==me&&(ae=me,ce(R),ie=ce=null),Qe!=Te?an():_e},h=ae=>async(...ie)=>{try{if(a.bb)throw Error("Session already started");let ce=a.bb={Cb:ie[0],errors:[]},_e=await ae(...ie);if(a.bb!==ce)throw Error("Session mismatch");s.flush();let Te=ce.errors;if(0<Te.length){let R=await Promise.all(Te);if(R=R.filter(me=>me),0<R.length)throw Error(R.join(`\n`))}return _e}finally{a.bb=null}},a._OrtRun=h(p(a._OrtRun,()=>a._OrtRun,ae=>a._OrtRun=ae)),a._OrtRunWithBinding=h(p(a._OrtRunWithBinding,()=>a._OrtRunWithBinding,ae=>a._OrtRunWithBinding=ae)),a._OrtBindInput=p(a._OrtBindInput,()=>a._OrtBindInput,ae=>a._OrtBindInput=ae),a.jsepRegisterBuffer=(ae,ie,ce,_e)=>s.registerBuffer(ae,ie,ce,_e),a.jsepUnregisterBuffers=ae=>{s.unregisterBuffers(ae)},a.jsepGetBuffer=ae=>s.getBuffer(ae),a.jsepCreateDownloader=(ae,ie,ce)=>s.createDownloader(ae,ie,ce)};var y=Object.assign({},a),v="./this.program",$=(s,p)=>{throw p},b=typeof window=="object",C=typeof importScripts=="function",A=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",S=a.ENVIRONMENT_IS_PTHREAD||!1,_="";function E(s){return a.locateFile?a.locateFile(s,_):_+s}var T,V,k;if(A){var U=(Ln(),or(Gn)),W=(jn(),or(Fn));_=C?W.dirname(_)+"/":__dirname+"/",T=(p,h)=>(p=Gt(p)?new URL(p):W.normalize(p),U.readFileSync(p,h?void 0:"utf8")),k=p=>(p=T(p,!0),p.buffer||(p=new Uint8Array(p)),p),V=(p,h,x,P=!0)=>{p=Gt(p)?new URL(p):W.normalize(p),U.readFile(p,P?void 0:"utf8",(M,G)=>{M?x(M):h(P?G.buffer:G)})},!a.thisProgram&&1<process.argv.length&&(v=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),$=(p,h)=>{throw process.exitCode=p,h},a.inspect=()=>"[Emscripten Module object]";let s;try{s=Vo()}catch(p){throw console.error(\'The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?\'),p}global.Worker=s.Worker}else(b||C)&&(C?_=self.location.href:typeof document<"u"&&document.currentScript&&(_=document.currentScript.src),typeof e<"u"&&e&&(_=e),_.indexOf("blob:")!==0?_=_.substr(0,_.replace(/[?#].*/,"").lastIndexOf("/")+1):_="",A||(T=s=>{var p=new XMLHttpRequest;return p.open("GET",s,!1),p.send(null),p.responseText},C&&(k=s=>{var p=new XMLHttpRequest;return p.open("GET",s,!1),p.responseType="arraybuffer",p.send(null),new Uint8Array(p.response)}),V=(s,p,h)=>{var x=new XMLHttpRequest;x.open("GET",s,!0),x.responseType="arraybuffer",x.onload=()=>{x.status==200||x.status==0&&x.response?p(x.response):h()},x.onerror=h,x.send(null)}));A&&typeof performance>"u"&&(global.performance=No().performance);var Z=console.log.bind(console),B=console.error.bind(console);A&&(Z=(...s)=>U.writeSync(1,s.join(" ")+`\n`),B=(...s)=>U.writeSync(2,s.join(" ")+`\n`));var F=Z,J=B;Object.assign(a,y),y=null,typeof WebAssembly!="object"&&ut("no native wasm support detected");var te,re,Ee=!1,Be,fe,Ae,ge,ye,He,De;function Me(){var s=te.buffer;a.HEAP8=fe=new Int8Array(s),a.HEAP16=new Int16Array(s),a.HEAPU8=Ae=new Uint8Array(s),a.HEAPU16=new Uint16Array(s),a.HEAP32=ge=new Int32Array(s),a.HEAPU32=ye=new Uint32Array(s),a.HEAPF32=He=new Float32Array(s),a.HEAPF64=De=new Float64Array(s)}var L=16777216;if(S)te=a.wasmMemory;else if(a.wasmMemory)te=a.wasmMemory;else if(te=new WebAssembly.Memory({initial:L/65536,maximum:65536,shared:!0}),!(te.buffer instanceof SharedArrayBuffer))throw J("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),A&&J("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");Me(),L=te.buffer.byteLength;var ne=[],be=[],et=[],je=0,Ne=null,ze=null;function Ct(){if(je--,je==0&&(Ne!==null&&(clearInterval(Ne),Ne=null),ze)){var s=ze;ze=null,s()}}function ut(s){throw s="Aborted("+s+")",J(s),Ee=!0,Be=1,s=new WebAssembly.RuntimeError(s+". Build with -sASSERTIONS for more info."),g(s),s}var It=s=>s.startsWith("data:application/octet-stream;base64,"),Gt=s=>s.startsWith("file://"),At;At="ort-wasm-simd-threaded.wasm",It(At)||(At=E(At));function Dr(s){if(k)return k(s);throw"both async and sync fetching of the wasm failed"}function Mr(s){if(b||C){if(typeof fetch=="function"&&!Gt(s))return fetch(s,{credentials:"same-origin"}).then(p=>{if(!p.ok)throw"failed to load wasm binary file at \'"+s+"\'";return p.arrayBuffer()}).catch(()=>Dr(s));if(V)return new Promise((p,h)=>{V(s,x=>p(new Uint8Array(x)),h)})}return Promise.resolve().then(()=>Dr(s))}function lr(s,p,h){return Mr(s).then(x=>WebAssembly.instantiate(x,p)).then(x=>x).then(h,x=>{J(`failed to asynchronously prepare wasm: ${x}`),ut(x)})}function qe(s,p){var h=At;return typeof WebAssembly.instantiateStreaming!="function"||It(h)||Gt(h)||A||typeof fetch!="function"?lr(h,s,p):fetch(h,{credentials:"same-origin"}).then(x=>WebAssembly.instantiateStreaming(x,s).then(p,function(P){return J(`wasm streaming compile failed: ${P}`),J("falling back to ArrayBuffer instantiation"),lr(h,s,p)}))}var lt,Tt={1360172:(s,p,h,x)=>{if(typeof a>"u"||!a.cb)return 1;if(s=Re(s>>>0),s.startsWith("./")&&(s=s.substring(2)),s=a.cb.get(s),!s)return 2;if(p>>>=0,h>>>=0,x>>>=0,p+h>s.byteLength)return 3;try{return o().set(s.subarray(p,p+h),x>>>0),0}catch{return 4}},1360673:s=>a.wb(s),1360706:s=>a.yb(s),1360738:(s,p,h)=>{a.kb(s,p,h,!0)},1360777:(s,p,h)=>{a.kb(s,p,h)},1360810:s=>{a.Ea("Abs",s,void 0)},1360861:s=>{a.Ea("Neg",s,void 0)},1360912:s=>{a.Ea("Floor",s,void 0)},1360965:s=>{a.Ea("Ceil",s,void 0)},1361017:s=>{a.Ea("Reciprocal",s,void 0)},1361075:s=>{a.Ea("Sqrt",s,void 0)},1361127:s=>{a.Ea("Exp",s,void 0)},1361178:s=>{a.Ea("Erf",s,void 0)},1361229:s=>{a.Ea("Sigmoid",s,void 0)},1361284:s=>{a.Ea("Log",s,void 0)},1361335:s=>{a.Ea("Sin",s,void 0)},1361386:s=>{a.Ea("Cos",s,void 0)},1361437:s=>{a.Ea("Tan",s,void 0)},1361488:s=>{a.Ea("Asin",s,void 0)},1361540:s=>{a.Ea("Acos",s,void 0)},1361592:s=>{a.Ea("Atan",s,void 0)},1361644:s=>{a.Ea("Sinh",s,void 0)},1361696:s=>{a.Ea("Cosh",s,void 0)},1361748:s=>{a.Ea("Asinh",s,void 0)},1361801:s=>{a.Ea("Acosh",s,void 0)},1361854:s=>{a.Ea("Atanh",s,void 0)},1361907:s=>{a.Ea("Tanh",s,void 0)},1361959:s=>{a.Ea("Not",s,void 0)},1362010:(s,p,h)=>{a.Ea("Clip",s,{min:p,max:h})},1362079:s=>{a.Ea("Clip",s,void 0)},1362131:(s,p)=>{a.Ea("Elu",s,{alpha:p})},1362189:s=>{a.Ea("Relu",s,void 0)},1362241:(s,p)=>{a.Ea("LeakyRelu",s,{alpha:p})},1362305:(s,p)=>{a.Ea("ThresholdedRelu",s,{alpha:p})},1362375:(s,p)=>{a.Ea("Cast",s,{to:p})},1362433:s=>{a.Ea("Add",s,void 0)},1362484:s=>{a.Ea("Sub",s,void 0)},1362535:s=>{a.Ea("Mul",s,void 0)},1362586:s=>{a.Ea("Div",s,void 0)},1362637:s=>{a.Ea("Pow",s,void 0)},1362688:s=>{a.Ea("Equal",s,void 0)},1362741:s=>{a.Ea("Greater",s,void 0)},1362796:s=>{a.Ea("GreaterOrEqual",s,void 0)},1362858:s=>{a.Ea("Less",s,void 0)},1362910:s=>{a.Ea("LessOrEqual",s,void 0)},1362969:(s,p,h,x,P)=>{a.Ea("ReduceMean",s,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:x?Array.from(n().subarray(x>>>0,P>>>0)):[]})},1363128:(s,p,h,x,P)=>{a.Ea("ReduceMax",s,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:x?Array.from(n().subarray(x>>>0,P>>>0)):[]})},1363286:(s,p,h,x,P)=>{a.Ea("ReduceMin",s,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:x?Array.from(n().subarray(x>>>0,P>>>0)):[]})},1363444:(s,p,h,x,P)=>{a.Ea("ReduceProd",s,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:x?Array.from(n().subarray(x>>>0,P>>>0)):[]})},1363603:(s,p,h,x,P)=>{a.Ea("ReduceSum",s,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:x?Array.from(n().subarray(x>>>0,P>>>0)):[]})},1363761:(s,p,h,x,P)=>{a.Ea("ReduceL1",s,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:x?Array.from(n().subarray(x>>>0,P>>>0)):[]})},1363918:(s,p,h,x,P)=>{a.Ea("ReduceL2",s,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:x?Array.from(n().subarray(x>>>0,P>>>0)):[]})},1364075:(s,p,h,x,P)=>{a.Ea("ReduceLogSum",s,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:x?Array.from(n().subarray(x>>>0,P>>>0)):[]})},1364236:(s,p,h,x,P)=>{a.Ea("ReduceSumSquare",s,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:x?Array.from(n().subarray(x>>>0,P>>>0)):[]})},1364400:(s,p,h,x,P)=>{a.Ea("ReduceLogSumExp",s,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:x?Array.from(n().subarray(x>>>0,P>>>0)):[]})},1364564:s=>{a.Ea("Where",s,void 0)},1364617:(s,p,h)=>{a.Ea("Transpose",s,{perm:p?Array.from(n().subarray(p>>>0,h>>>0)):[]})},1364725:(s,p,h,x,P,M,G,se,ae,ie,ce,_e,Te,R,me)=>{a.Ea("ConvTranspose",s,{format:ae?"NHWC":"NCHW",autoPad:p,dilations:[h],group:x,kernel_shape:[P],pads:[M,G],strides:[se],wIsConst:()=>!!r()[ie>>>0],outputPadding:ce?Array.from(n().subarray(ce>>>0,_e>>>0)):[],outputShape:Te?Array.from(n().subarray(Te>>>0,R>>>0)):[],activation:Re(me)})},1365127:(s,p,h,x,P,M,G,se,ae,ie,ce,_e,Te,R)=>{a.Ea("ConvTranspose",s,{format:se?"NHWC":"NCHW",autoPad:p,dilations:Array.from(n().subarray(h>>>0,(h>>>0)+2>>>0)),group:x,kernelShape:Array.from(n().subarray(P>>>0,(P>>>0)+2>>>0)),pads:Array.from(n().subarray(M>>>0,(M>>>0)+4>>>0)),strides:Array.from(n().subarray(G>>>0,(G>>>0)+2>>>0)),wIsConst:()=>!!r()[ae>>>0],outputPadding:ie?Array.from(n().subarray(ie>>>0,ce>>>0)):[],outputShape:_e?Array.from(n().subarray(_e>>>0,Te>>>0)):[],activation:Re(R)})},1365692:(s,p,h,x,P,M,G,se,ae,ie,ce,_e,Te,R,me)=>{a.Ea("ConvTranspose",s,{format:ae?"NHWC":"NCHW",autoPad:p,dilations:[h],group:x,kernel_shape:[P],pads:[M,G],strides:[se],wIsConst:()=>!!r()[ie>>>0],outputPadding:ce?Array.from(n().subarray(ce>>>0,_e>>>0)):[],outputShape:Te?Array.from(n().subarray(Te>>>0,R>>>0)):[],activation:Re(me)})},1366094:(s,p,h,x,P,M,G,se,ae,ie,ce,_e,Te,R)=>{a.Ea("ConvTranspose",s,{format:se?"NHWC":"NCHW",autoPad:p,dilations:Array.from(n().subarray(h>>>0,(h>>>0)+2>>>0)),group:x,kernelShape:Array.from(n().subarray(P>>>0,(P>>>0)+2>>>0)),pads:Array.from(n().subarray(M>>>0,(M>>>0)+4>>>0)),strides:Array.from(n().subarray(G>>>0,(G>>>0)+2>>>0)),wIsConst:()=>!!r()[ae>>>0],outputPadding:ie?Array.from(n().subarray(ie>>>0,ce>>>0)):[],outputShape:_e?Array.from(n().subarray(_e>>>0,Te>>>0)):[],activation:Re(R)})},1366659:(s,p)=>{a.Ea("GlobalAveragePool",s,{format:p?"NHWC":"NCHW"})},1366750:(s,p,h,x,P,M,G,se,ae,ie,ce,_e,Te,R,me,Ce)=>{a.Ea("AveragePool",s,{format:Ce?"NHWC":"NCHW",auto_pad:p,ceil_mode:h,count_include_pad:x,storage_order:P,dilations:[M,G],kernel_shape:[se,ae],pads:[ie,ce,_e,Te],strides:[R,me]})},1367034:(s,p)=>{a.Ea("GlobalAveragePool",s,{format:p?"NHWC":"NCHW"})},1367125:(s,p,h,x,P,M,G,se,ae,ie,ce,_e,Te,R,me,Ce)=>{a.Ea("AveragePool",s,{format:Ce?"NHWC":"NCHW",auto_pad:p,ceil_mode:h,count_include_pad:x,storage_order:P,dilations:[M,G],kernel_shape:[se,ae],pads:[ie,ce,_e,Te],strides:[R,me]})},1367409:(s,p)=>{a.Ea("GlobalMaxPool",s,{format:p?"NHWC":"NCHW"})},1367496:(s,p,h,x,P,M,G,se,ae,ie,ce,_e,Te,R,me,Ce)=>{a.Ea("MaxPool",s,{format:Ce?"NHWC":"NCHW",auto_pad:p,ceil_mode:h,count_include_pad:x,storage_order:P,dilations:[M,G],kernel_shape:[se,ae],pads:[ie,ce,_e,Te],strides:[R,me]})},1367776:(s,p)=>{a.Ea("GlobalMaxPool",s,{format:p?"NHWC":"NCHW"})},1367863:(s,p,h,x,P,M,G,se,ae,ie,ce,_e,Te,R,me,Ce)=>{a.Ea("MaxPool",s,{format:Ce?"NHWC":"NCHW",auto_pad:p,ceil_mode:h,count_include_pad:x,storage_order:P,dilations:[M,G],kernel_shape:[se,ae],pads:[ie,ce,_e,Te],strides:[R,me]})},1368143:(s,p,h,x,P)=>{a.Ea("Gemm",s,{alpha:p,beta:h,transA:x,transB:P})},1368247:s=>{a.Ea("MatMul",s,void 0)},1368301:(s,p,h,x)=>{a.Ea("ArgMax",s,{keepDims:!!p,selectLastIndex:!!h,axis:x})},1368409:(s,p,h,x)=>{a.Ea("ArgMin",s,{keepDims:!!p,selectLastIndex:!!h,axis:x})},1368517:(s,p)=>{a.Ea("Softmax",s,{axis:p})},1368580:(s,p)=>{a.Ea("Concat",s,{axis:p})},1368640:(s,p,h,x,P)=>{a.Ea("Split",s,{axis:p,numOutputs:h,splitSizes:x?Array.from(n().subarray(x>>>0,P>>>0)):[]})},1368780:s=>{a.Ea("Expand",s,void 0)},1368834:(s,p)=>{a.Ea("Gather",s,{axis:Number(p)})},1368905:(s,p)=>{a.Ea("GatherElements",s,{axis:Number(p)})},1368984:(s,p,h,x,P,M,G,se,ae,ie,ce)=>{a.Ea("Resize",s,{antialias:p,axes:h?Array.from(n().subarray(h>>>0,x>>>0)):[],coordinateTransformMode:Re(P),cubicCoeffA:M,excludeOutside:G,extrapolationValue:se,keepAspectRatioPolicy:Re(ae),mode:Re(ie),nearestMode:Re(ce)})},1369330:(s,p,h,x,P,M,G)=>{a.Ea("Slice",s,{starts:p?Array.from(n().subarray(p>>>0,h>>>0)):[],ends:x?Array.from(n().subarray(x>>>0,P>>>0)):[],axes:M?Array.from(n().subarray(M>>>0,G>>>0)):[]})},1369546:s=>{a.Ea("Tile",s,void 0)},1369598:(s,p,h)=>{a.Ea("LayerNormalization",s,{axis:Number(p),epsilon:Number(h)})},1369705:(s,p,h)=>{a.Ea("InstanceNormalization",s,{epsilon:p,format:h?"NHWC":"NCHW"})},1369819:(s,p,h)=>{a.Ea("InstanceNormalization",s,{epsilon:p,format:h?"NHWC":"NCHW"})},1369933:s=>{a.Ea("Range",s,void 0)},1369986:(s,p)=>{a.Ea("Einsum",s,{equation:Re(p)})},1370067:(s,p,h,x,P)=>{a.Ea("Pad",s,{mode:p,value:h,pads:x?Array.from(n().subarray(x>>>0,P>>>0)):[]})},1370194:(s,p,h,x,P,M)=>{a.Ea("BatchNormalization",s,{epsilon:p,momentum:h,spatial:!!P,trainingMode:!!x,format:M?"NHWC":"NCHW"})},1370363:(s,p,h,x,P,M)=>{a.Ea("BatchNormalization",s,{epsilon:p,momentum:h,spatial:!!P,trainingMode:!!x,format:M?"NHWC":"NCHW"})},1370532:(s,p,h)=>{a.Ea("CumSum",s,{exclusive:Number(p),reverse:Number(h)})},1370629:(s,p,h,x,P,M,G,se,ae)=>{a.Ea("Attention",s,{numHeads:p,isUnidirectional:h,maskFilterValue:x,scale:P,doRotary:M,qkvHiddenSizes:G?Array.from(n().subarray(Number(se)>>>0,Number(se)+G>>>0)):[],pastPresentShareBuffer:!!ae})},1370901:s=>{a.Ea("Gelu",s,void 0)},1370953:(s,p,h,x,P,M)=>{a.Ea("MultiHeadAttention",s,{numHeads:p,isUnidirectional:h,maskFilterValue:x,scale:P,doRotary:M})},1371112:s=>{a.Ea("BiasAdd",s,void 0)},1371167:s=>{a.Ea("BiasSplitGelu",s,void 0)},1371228:(s,p)=>{a.Ea("SkipLayerNormalization",s,{epsilon:p})},1371309:(s,p,h,x,P,M,G,se,ae,ie,ce,_e,Te)=>{a.Ea("Conv",s,{format:ae?"NHWC":"NCHW",auto_pad:p,dilations:[h],group:x,kernel_shape:[P],pads:M?Array.from(n().subarray(M>>>0,G>>>0)):[],strides:[se],w_is_const:()=>!!r()[ie>>>0],activation:Re(ce),activation_params:_e?Array.from(l().subarray(_e>>>0,Te>>>0)):[]})},1371679:(s,p,h,x,P,M,G,se,ae,ie,ce,_e,Te,R,me,Ce)=>{a.Ea("Conv",s,{format:_e?"NHWC":"NCHW",auto_pad:p,dilations:[h,x],group:P,kernel_shape:[M,G],pads:se?Array.from(n().subarray(se>>>0,ae>>>0)):[],strides:[ie,ce],w_is_const:()=>!!r()[Te>>>0],activation:Re(R),activation_params:me?Array.from(l().subarray(me>>>0,Ce>>>0)):[]})},1372070:s=>{a.zb(s)},1372104:(s,p)=>a.Ab(s,p,a.bb.Cb,a.bb.errors)};function Lt(s){this.name="ExitStatus",this.message=`Program terminated with exit(${s})`,this.status=s}var Ft=s=>{s.terminate(),s.onmessage=()=>{}},tt=s=>{le.Ya.length==0&&(Ze(),le.lb(le.Ya[0]));var p=le.Ya.pop();if(!p)return 6;le.Za.push(p),le.Qa[s.Xa]=p,p.Xa=s.Xa;var h={cmd:"run",start_routine:s.Db,arg:s.tb,pthread_ptr:s.Xa};return A&&p.unref(),p.postMessage(h,s.Jb),0},dt=0,jt=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,zr=(s,p,h)=>{p>>>=0;var x=p+h;for(h=p;s[h]&&!(h>=x);)++h;if(16<h-p&&s.buffer&&jt)return jt.decode(s.buffer instanceof SharedArrayBuffer?s.slice(p,h):s.subarray(p,h));for(x="";p<h;){var P=s[p++];if(P&128){var M=s[p++]&63;if((P&224)==192)x+=String.fromCharCode((P&31)<<6|M);else{var G=s[p++]&63;P=(P&240)==224?(P&15)<<12|M<<6|G:(P&7)<<18|M<<12|G<<6|s[p++]&63,65536>P?x+=String.fromCharCode(P):(P-=65536,x+=String.fromCharCode(55296|P>>10,56320|P&1023))}}else x+=String.fromCharCode(P)}return x},Re=(s,p)=>(s>>>=0)?zr(o(),s,p):"",zn=s=>{var p=oe();return s=s(),ve(p),s};function xe(s,p){var h=arguments.length-2,x=arguments;return zn(()=>{for(var P=pt(8*h),M=P>>>3,G=0;G<h;G++){var se=x[2+G];d()[M+G>>>0]=se}return Y(s,h,P,p)})}function dr(s){if(S)return xe(0,1,s);Be=s,0<dt||(le.Eb(),a.onExit?.(s),Ee=!0),$(s,new Lt(s))}var qt=s=>{if(Be=s,S)throw Ur(s),"unwind";dr(s)},Ye=s=>{s instanceof Lt||s=="unwind"||$(1,s)};function cr(){for(var s=a.numThreads;s--;)Ze();ne.unshift(()=>{je++,it(()=>Ct())})}function Ze(){var s=E("ort-wasm-simd-threaded.worker.js");s=new Worker(s),le.Ya.push(s)}function it(s){S?s():Promise.all(le.Ya.map(le.lb)).then(s)}var le={Ya:[],Za:[],pb:[],Qa:{},hb(){S?(le.receiveObjectTransfer=le.Bb,le.threadInitTLS=le.ob,le.setExitStatus=le.nb):cr()},nb:s=>Be=s,Nb:["$terminateWorker"],Eb:()=>{for(var s of le.Za)Ft(s);for(s of le.Ya)Ft(s);le.Ya=[],le.Za=[],le.Qa=[]},mb:s=>{var p=s.Xa;delete le.Qa[p],le.Ya.push(s),le.Za.splice(le.Za.indexOf(s),1),s.Xa=0,q(p)},Bb(){},ob(){le.pb.forEach(s=>s())},lb:s=>new Promise(p=>{s.onmessage=M=>{M=M.data;var G=M.cmd;if(M.targetThread&&M.targetThread!=I()){var se=le.Qa[M.targetThread];se?se.postMessage(M,M.transferList):J(`Internal error! Worker sent a message "${G}" to target pthread ${M.targetThread}, but that thread no longer exists!`)}else G==="checkMailbox"?Et():G==="spawnThread"?tt(M):G==="cleanupThread"?le.mb(le.Qa[M.thread]):G==="killThread"?(M=M.thread,G=le.Qa[M],delete le.Qa[M],Ft(G),q(M),le.Za.splice(le.Za.indexOf(G),1),G.Xa=0):G==="cancelThread"?le.Qa[M.thread].postMessage({cmd:"cancel"}):G==="loaded"?(s.loaded=!0,A&&!s.Xa&&s.unref(),p(s)):G==="alert"?alert(`Thread ${M.threadId}: ${M.text}`):M.target==="setimmediate"?s.postMessage(M):G==="callHandler"?a[M.handler](...M.args):G&&J(`worker sent an unknown command ${G}`)},s.onerror=M=>{throw J(`worker sent an error! ${M.filename}:${M.lineno}: ${M.message}`),M},A&&(s.on("message",M=>s.onmessage({data:M})),s.on("error",M=>s.onerror(M)));var h=[],x=["onExit"],P;for(P of x)a.hasOwnProperty(P)&&h.push(P);s.postMessage({cmd:"load",handlers:h,urlOrBlob:a.mainScriptUrlOrBlob||e,wasmMemory:te,wasmModule:re})})};a.PThread=le;var Kt=s=>{for(;0<s.length;)s.shift()(a)};a.establishStackSpace=()=>{var s=I(),p=u()[s+52>>>2>>>0];s=u()[s+56>>>2>>>0],O(p,p-s),ve(p)};function Ur(s){if(S)return xe(1,0,s);qt(s)}a.invokeEntryPoint=(s,p)=>{s=Cr.apply(null,[s,p]),0<dt?le.nb(s):ee(s)};function Vr(s){this.gb=s-24,this.sb=function(p){u()[this.gb+4>>>2>>>0]=p},this.rb=function(p){u()[this.gb+8>>>2>>>0]=p},this.hb=function(p,h){this.qb(),this.sb(p),this.rb(h)},this.qb=function(){u()[this.gb+16>>>2>>>0]=0}}var Nr=0,Un=0;function Wr(s,p,h,x){return S?xe(2,1,s,p,h,x):Hr(s,p,h,x)}function Hr(s,p,h,x){if(s>>>=0,p>>>=0,h>>>=0,x>>>=0,typeof SharedArrayBuffer>"u")return J("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var P=[];return S&&P.length===0?Wr(s,p,h,x):(s={Db:h,Xa:s,tb:x,Jb:P},S?(s.Lb="spawnThread",postMessage(s,P),0):tt(s))}function Gr(s,p,h){return S?xe(3,1,s,p,h):0}function Lr(s,p){if(S)return xe(4,1,s,p)}var kt=s=>{for(var p=0,h=0;h<s.length;++h){var x=s.charCodeAt(h);127>=x?p++:2047>=x?p+=2:55296<=x&&57343>=x?(p+=4,++h):p+=3}return p},pr=(s,p,h,x)=>{if(h>>>=0,!(0<x))return 0;var P=h;x=h+x-1;for(var M=0;M<s.length;++M){var G=s.charCodeAt(M);if(55296<=G&&57343>=G){var se=s.charCodeAt(++M);G=65536+((G&1023)<<10)|se&1023}if(127>=G){if(h>=x)break;p[h++>>>0]=G}else{if(2047>=G){if(h+1>=x)break;p[h++>>>0]=192|G>>6}else{if(65535>=G){if(h+2>=x)break;p[h++>>>0]=224|G>>12}else{if(h+3>=x)break;p[h++>>>0]=240|G>>18,p[h++>>>0]=128|G>>12&63}p[h++>>>0]=128|G>>6&63}p[h++>>>0]=128|G&63}}return p[h>>>0]=0,h-P},Bt=(s,p,h)=>pr(s,o(),p,h);function Fr(s,p){if(S)return xe(5,1,s,p)}function Yt(s,p,h){if(S)return xe(6,1,s,p,h)}function mr(s,p,h){return S?xe(7,1,s,p,h):0}function jr(s,p){if(S)return xe(8,1,s,p)}function qr(s,p,h){if(S)return xe(9,1,s,p,h)}function fr(s,p,h,x){if(S)return xe(10,1,s,p,h,x)}function Kr(s,p,h,x){if(S)return xe(11,1,s,p,h,x)}function _t(s,p,h,x){if(S)return xe(12,1,s,p,h,x)}function hr(s){if(S)return xe(13,1,s)}function gr(s,p){if(S)return xe(14,1,s,p)}function yr(s,p,h){if(S)return xe(15,1,s,p,h)}var Zt=()=>{if(!(0<dt))try{S?ee(Be):qt(Be)}catch(s){Ye(s)}};function Qt(s){s>>>=0,typeof Atomics.Kb=="function"&&(Atomics.Kb(n(),s>>>2,s).value.then(Et),s+=128,Atomics.store(n(),s>>>2,1))}a.__emscripten_thread_mailbox_await=Qt;var Et=()=>{var s=I();if(s&&(Qt(s),!Ee))try{pe(),Zt()}catch(p){Ye(p)}};a.checkMailbox=Et;var Xt=[],ht=s=>s%4===0&&(s%100!==0||s%400===0),Yr=[0,31,60,91,121,152,182,213,244,274,305,335],br=[0,31,59,90,120,151,181,212,243,273,304,334];function wr(s,p,h,x,P,M,G,se){return S?xe(16,1,s,p,h,x,P,M,G,se):-52}function Zr(s,p,h,x,P,M,G){if(S)return xe(17,1,s,p,h,x,P,M,G)}var vr=s=>{var p=kt(s)+1,h=D(p);return h&&Bt(s,h,p),h},Ot=[],Qr=(s,p)=>{Ot.length=0;for(var h;h=o()[s++>>>0];){var x=h!=105;x&=h!=112,p+=x&&p%8?4:0,Ot.push(h==112?u()[p>>>2>>>0]:h==105?n()[p>>>2>>>0]:d()[p>>>3>>>0]),p+=x?8:4}return Ot},st={},ot=()=>{if(!Jt){var s={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:v||"./this.program"},p;for(p in st)st[p]===void 0?delete s[p]:s[p]=st[p];var h=[];for(p in s)h.push(`${p}=${s[p]}`);Jt=h}return Jt},Jt;function Dt(s,p){if(S)return xe(18,1,s,p);s>>>=0,p>>>=0;var h=0;return ot().forEach((x,P)=>{var M=p+h;for(P=u()[s+4*P>>>2>>>0]=M,M=0;M<x.length;++M)r()[P++>>>0>>>0]=x.charCodeAt(M);r()[P>>>0>>>0]=0,h+=x.length+1}),0}function $r(s,p){if(S)return xe(19,1,s,p);s>>>=0,p>>>=0;var h=ot();u()[s>>>2>>>0]=h.length;var x=0;return h.forEach(P=>x+=P.length+1),u()[p>>>2>>>0]=x,0}function Sr(s){return S?xe(20,1,s):52}function Xr(s,p,h,x){return S?xe(21,1,s,p,h,x):52}function er(s,p,h,x,P){return S?xe(22,1,s,p,h,x,P):70}var Vn=[null,[],[]];function Jr(s,p,h,x){if(S)return xe(23,1,s,p,h,x);p>>>=0,h>>>=0,x>>>=0;for(var P=0,M=0;M<h;M++){var G=u()[p>>>2>>>0],se=u()[p+4>>>2>>>0];p+=8;for(var ae=0;ae<se;ae++){var ie=o()[G+ae>>>0],ce=Vn[s];ie===0||ie===10?((s===1?F:J)(zr(ce,0)),ce.length=0):ce.push(ie)}P+=se}return u()[x>>>2>>>0]=P,0}var en=[31,29,31,30,31,30,31,31,30,31,30,31],tn=[31,28,31,30,31,30,31,31,30,31,30,31];function Nn(s){var p=Array(kt(s)+1);return pr(s,p,0,p.length),p}var rn=(s,p)=>{r().set(s,p>>>0)};function Mt(s,p,h,x){function P(R,me,Ce){for(R=typeof R=="number"?R.toString():R||"";R.length<me;)R=Ce[0]+R;return R}function M(R,me){return P(R,me,"0")}function G(R,me){function Ce(Bo){return 0>Bo?-1:0<Bo?1:0}var Ut;return(Ut=Ce(R.getFullYear()-me.getFullYear()))===0&&(Ut=Ce(R.getMonth()-me.getMonth()))===0&&(Ut=Ce(R.getDate()-me.getDate())),Ut}function se(R){switch(R.getDay()){case 0:return new Date(R.getFullYear()-1,11,29);case 1:return R;case 2:return new Date(R.getFullYear(),0,3);case 3:return new Date(R.getFullYear(),0,2);case 4:return new Date(R.getFullYear(),0,1);case 5:return new Date(R.getFullYear()-1,11,31);case 6:return new Date(R.getFullYear()-1,11,30)}}function ae(R){var me=R.$a;for(R=new Date(new Date(R.ab+1900,0,1).getTime());0<me;){var Ce=R.getMonth(),Ut=(ht(R.getFullYear())?en:tn)[Ce];if(me>Ut-R.getDate())me-=Ut-R.getDate()+1,R.setDate(1),11>Ce?R.setMonth(Ce+1):(R.setMonth(0),R.setFullYear(R.getFullYear()+1));else{R.setDate(R.getDate()+me);break}}return Ce=new Date(R.getFullYear()+1,0,4),me=se(new Date(R.getFullYear(),0,4)),Ce=se(Ce),0>=G(me,R)?0>=G(Ce,R)?R.getFullYear()+1:R.getFullYear():R.getFullYear()-1}s>>>=0,p>>>=0,h>>>=0,x>>>=0;var ie=u()[x+40>>>2>>>0];x={Hb:n()[x>>>2>>>0],Gb:n()[x+4>>>2>>>0],eb:n()[x+8>>>2>>>0],jb:n()[x+12>>>2>>>0],fb:n()[x+16>>>2>>>0],ab:n()[x+20>>>2>>>0],Wa:n()[x+24>>>2>>>0],$a:n()[x+28>>>2>>>0],Ob:n()[x+32>>>2>>>0],Fb:n()[x+36>>>2>>>0],Ib:ie?Re(ie):""},h=Re(h),ie={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var ce in ie)h=h.replace(new RegExp(ce,"g"),ie[ce]);var _e="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Te="January February March April May June July August September October November December".split(" ");ie={"%a":R=>_e[R.Wa].substring(0,3),"%A":R=>_e[R.Wa],"%b":R=>Te[R.fb].substring(0,3),"%B":R=>Te[R.fb],"%C":R=>M((R.ab+1900)/100|0,2),"%d":R=>M(R.jb,2),"%e":R=>P(R.jb,2," "),"%g":R=>ae(R).toString().substring(2),"%G":R=>ae(R),"%H":R=>M(R.eb,2),"%I":R=>(R=R.eb,R==0?R=12:12<R&&(R-=12),M(R,2)),"%j":R=>{for(var me=0,Ce=0;Ce<=R.fb-1;me+=(ht(R.ab+1900)?en:tn)[Ce++]);return M(R.jb+me,3)},"%m":R=>M(R.fb+1,2),"%M":R=>M(R.Gb,2),"%n":()=>`\n`,"%p":R=>0<=R.eb&&12>R.eb?"AM":"PM","%S":R=>M(R.Hb,2),"%t":()=>"	","%u":R=>R.Wa||7,"%U":R=>M(Math.floor((R.$a+7-R.Wa)/7),2),"%V":R=>{var me=Math.floor((R.$a+7-(R.Wa+6)%7)/7);if(2>=(R.Wa+371-R.$a-2)%7&&me++,me)me==53&&(Ce=(R.Wa+371-R.$a)%7,Ce==4||Ce==3&&ht(R.ab)||(me=1));else{me=52;var Ce=(R.Wa+7-R.$a-1)%7;(Ce==4||Ce==5&&ht(R.ab%400-1))&&me++}return M(me,2)},"%w":R=>R.Wa,"%W":R=>M(Math.floor((R.$a+7-(R.Wa+6)%7)/7),2),"%y":R=>(R.ab+1900).toString().substring(2),"%Y":R=>R.ab+1900,"%z":R=>{R=R.Fb;var me=0<=R;return R=Math.abs(R)/60,(me?"+":"-")+("0000"+(R/60*100+R%60)).slice(-4)},"%Z":R=>R.Ib,"%%":()=>"%"},h=h.replace(/%%/g,"\\0\\0");for(ce in ie)h.includes(ce)&&(h=h.replace(new RegExp(ce,"g"),ie[ce](x)));return h=h.replace(/\\0\\0/g,"%"),ce=Nn(h),ce.length>p?0:(rn(ce,s),ce.length-1)}var tr=s=>{try{s()}catch(p){ut(p)}};function ue(){var s=m,p={};for(let[h,x]of Object.entries(s))p[h]=typeof x=="function"?function(){zt.push(h);try{return x.apply(null,arguments)}finally{Ee||(zt.pop(),Qe&&ct===1&&zt.length===0&&(ct=0,dt+=1,tr(Oo),typeof Fibers<"u"&&Fibers.Pb()))}}:x;return p}var ct=0,Qe=null,at=0,zt=[],xr={},_r={},nn=0,rr=null,on=[];function an(){return new Promise((s,p)=>{rr={resolve:s,reject:p}})}function sn(){var s=D(65548),p=s+12;u()[s>>>2>>>0]=p,u()[s+4>>>2>>>0]=p+65536,p=zt[0];var h=xr[p];return h===void 0&&(h=nn++,xr[p]=h,_r[h]=p),p=h,n()[s+8>>>2>>>0]=p,s}function Wn(){var s=n()[Qe+8>>>2>>>0];return s=m[_r[s]],--dt,s()}function nr(s){if(!Ee){if(ct===0){var p=!1,h=!1;s((x=0)=>{if(!Ee&&(at=x,p=!0,h)){ct=2,tr(()=>Po(Qe)),typeof Browser<"u"&&Browser.ib.vb&&Browser.ib.resume(),x=!1;try{var P=Wn()}catch(se){P=se,x=!0}var M=!1;if(!Qe){var G=rr;G&&(rr=null,(x?G.reject:G.resolve)(P),M=!0)}if(x&&!M)throw P}}),h=!0,p||(ct=1,Qe=sn(),typeof Browser<"u"&&Browser.ib.vb&&Browser.ib.pause(),tr(()=>Eo(Qe)))}else ct===2?(ct=0,tr(Ro),H(Qe),Qe=null,on.forEach(x=>{if(!Ee)try{x(),Zt()}catch(P){Ye(P)}})):ut(`invalid state: ${ct}`);return at}}function un(s){return nr(p=>{s().then(p)})}le.hb();var i=[dr,Ur,Wr,Gr,Lr,Fr,Yt,mr,jr,qr,fr,Kr,_t,hr,gr,yr,wr,Zr,Dt,$r,Sr,Xr,er,Jr],c={r:function(s,p,h){return un(async()=>{await a.xb(s,p,h)})},b:function(s,p,h){throw s>>>=0,new Vr(s).hb(p>>>0,h>>>0),Nr=s,Un++,Nr},O:function(s){K(s>>>0,!C,1,!b,131072,!1),le.ob()},n:function(s){s>>>=0,S?postMessage({cmd:"cleanupThread",thread:s}):le.mb(le.Qa[s])},K:Hr,i:Gr,U:Lr,G:Fr,I:Yt,y:mr,S:jr,M:qr,R:fr,p:Kr,H:_t,E:hr,T:gr,F:yr,q:()=>1,C:function(s,p){s>>>=0,s==p>>>0?setTimeout(()=>Et()):S?postMessage({targetThread:s,cmd:"checkMailbox"}):(s=le.Qa[s])&&s.postMessage({cmd:"checkMailbox"})},L:function(s,p,h,x){p>>>=0,Xt.length=h,x=x>>>0>>>3;for(var P=0;P<h;P++)Xt[P]=d()[x+P>>>0];return s=0>s?Tt[-s-1]:i[s],le.ub=p,p=s.apply(null,Xt),le.ub=0,p},N:Qt,W:function(s){A&&le.Qa[s>>>0].ref()},u:function(s,p,h){s=p+2097152>>>0<4194305-!!s?(s>>>0)+4294967296*p:NaN,h>>>=0,s=new Date(1e3*s),n()[h>>>2>>>0]=s.getUTCSeconds(),n()[h+4>>>2>>>0]=s.getUTCMinutes(),n()[h+8>>>2>>>0]=s.getUTCHours(),n()[h+12>>>2>>>0]=s.getUTCDate(),n()[h+16>>>2>>>0]=s.getUTCMonth(),n()[h+20>>>2>>>0]=s.getUTCFullYear()-1900,n()[h+24>>>2>>>0]=s.getUTCDay(),s=(s.getTime()-Date.UTC(s.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,n()[h+28>>>2>>>0]=s},v:function(s,p,h){s=p+2097152>>>0<4194305-!!s?(s>>>0)+4294967296*p:NaN,h>>>=0,s=new Date(1e3*s),n()[h>>>2>>>0]=s.getSeconds(),n()[h+4>>>2>>>0]=s.getMinutes(),n()[h+8>>>2>>>0]=s.getHours(),n()[h+12>>>2>>>0]=s.getDate(),n()[h+16>>>2>>>0]=s.getMonth(),n()[h+20>>>2>>>0]=s.getFullYear()-1900,n()[h+24>>>2>>>0]=s.getDay(),p=(ht(s.getFullYear())?Yr:br)[s.getMonth()]+s.getDate()-1|0,n()[h+28>>>2>>>0]=p,n()[h+36>>>2>>>0]=-(60*s.getTimezoneOffset()),p=new Date(s.getFullYear(),6,1).getTimezoneOffset();var x=new Date(s.getFullYear(),0,1).getTimezoneOffset();s=(p!=x&&s.getTimezoneOffset()==Math.min(x,p))|0,n()[h+32>>>2>>>0]=s},w:function(s){s>>>=0;var p=new Date(n()[s+20>>>2>>>0]+1900,n()[s+16>>>2>>>0],n()[s+12>>>2>>>0],n()[s+8>>>2>>>0],n()[s+4>>>2>>>0],n()[s>>>2>>>0],0),h=n()[s+32>>>2>>>0],x=p.getTimezoneOffset(),P=new Date(p.getFullYear(),6,1).getTimezoneOffset(),M=new Date(p.getFullYear(),0,1).getTimezoneOffset(),G=Math.min(M,P);return 0>h?n()[s+32>>>2>>>0]=+(P!=M&&G==x):0<h!=(G==x)&&(P=Math.max(M,P),p.setTime(p.getTime()+6e4*((0<h?G:P)-x))),n()[s+24>>>2>>>0]=p.getDay(),h=(ht(p.getFullYear())?Yr:br)[p.getMonth()]+p.getDate()-1|0,n()[s+28>>>2>>>0]=h,n()[s>>>2>>>0]=p.getSeconds(),n()[s+4>>>2>>>0]=p.getMinutes(),n()[s+8>>>2>>>0]=p.getHours(),n()[s+12>>>2>>>0]=p.getDate(),n()[s+16>>>2>>>0]=p.getMonth(),n()[s+20>>>2>>>0]=p.getYear(),s=p.getTime(),isNaN(s)?(n()[w()>>>2>>>0]=61,s=-1):s/=1e3,we((lt=s,1<=+Math.abs(lt)?0<lt?+Math.floor(lt/4294967296)>>>0:~~+Math.ceil((lt-+(~~lt>>>0))/4294967296)>>>0:0)),s>>>0},s:wr,t:Zr,B:function(s,p,h){function x(ie){return(ie=ie.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?ie[1]:"GMT"}s>>>=0,p>>>=0,h>>>=0;var P=new Date().getFullYear(),M=new Date(P,0,1),G=new Date(P,6,1);P=M.getTimezoneOffset();var se=G.getTimezoneOffset(),ae=Math.max(P,se);u()[s>>>2>>>0]=60*ae,n()[p>>>2>>>0]=+(P!=se),s=x(M),p=x(G),s=vr(s),p=vr(p),se<P?(u()[h>>>2>>>0]=s,u()[h+4>>>2>>>0]=p):(u()[h>>>2>>>0]=p,u()[h+4>>>2>>>0]=s)},d:()=>{ut("")},c:function(s,p,h){return s>>>=0,p=Qr(p>>>0,h>>>0),Tt[s].apply(null,p)},k:function(s,p,h){return s>>>=0,p=Qr(p>>>0,h>>>0),Tt[s].apply(null,p)},o:()=>{},j:()=>Date.now(),V:()=>{throw dt+=1,"unwind"},D:function(){return 4294901760},f:()=>performance.timeOrigin+performance.now(),g:()=>A?(Ho(),or(Wo)).cpus().length:navigator.hardwareConcurrency,A:function(s){s>>>=0;var p=o().length;if(s<=p||4294901760<s)return!1;for(var h=1;4>=h;h*=2){var x=p*(1+.2/h);x=Math.min(x,s+100663296);var P=Math;x=Math.max(s,x);e:{P=(P.min.call(P,4294901760,x+(65536-x%65536)%65536)-te.buffer.byteLength+65535)/65536;try{te.grow(P),Me();var M=1;break e}catch{}M=void 0}if(M)return!0}return!1},P:Dt,Q:$r,J:qt,h:Sr,m:Xr,x:er,l:Jr,a:te||a.wasmMemory,z:Mt,e:function(s,p,h,x){return Mt(s>>>0,p>>>0,h>>>0,x>>>0)}},m=function(){function s(h,x){return m=h.exports,m=ue(),m=Gu(),le.pb.push(m.Da),be.unshift(m.X),re=x,Ct(),m}var p={a:c};if(je++,a.instantiateWasm)try{return a.instantiateWasm(p,s)}catch(h){J(`Module.instantiateWasm callback failed with error: ${h}`),g(h)}return qe(p,function(h){s(h.instance,h.module)}).catch(g),{}}();a._OrtInit=(s,p)=>(a._OrtInit=m.Y)(s,p),a._OrtGetLastError=(s,p)=>(a._OrtGetLastError=m.Z)(s,p),a._OrtCreateSessionOptions=(s,p,h,x,P,M,G,se,ae,ie)=>(a._OrtCreateSessionOptions=m._)(s,p,h,x,P,M,G,se,ae,ie),a._OrtAppendExecutionProvider=(s,p)=>(a._OrtAppendExecutionProvider=m.$)(s,p),a._OrtAddFreeDimensionOverride=(s,p,h)=>(a._OrtAddFreeDimensionOverride=m.aa)(s,p,h),a._OrtAddSessionConfigEntry=(s,p,h)=>(a._OrtAddSessionConfigEntry=m.ba)(s,p,h),a._OrtReleaseSessionOptions=s=>(a._OrtReleaseSessionOptions=m.ca)(s),a._OrtCreateSession=(s,p,h)=>(a._OrtCreateSession=m.da)(s,p,h),a._OrtReleaseSession=s=>(a._OrtReleaseSession=m.ea)(s),a._OrtGetInputOutputCount=(s,p,h)=>(a._OrtGetInputOutputCount=m.fa)(s,p,h),a._OrtGetInputName=(s,p)=>(a._OrtGetInputName=m.ga)(s,p),a._OrtGetOutputName=(s,p)=>(a._OrtGetOutputName=m.ha)(s,p),a._OrtFree=s=>(a._OrtFree=m.ia)(s),a._OrtCreateTensor=(s,p,h,x,P,M)=>(a._OrtCreateTensor=m.ja)(s,p,h,x,P,M),a._OrtGetTensorData=(s,p,h,x,P)=>(a._OrtGetTensorData=m.ka)(s,p,h,x,P),a._OrtReleaseTensor=s=>(a._OrtReleaseTensor=m.la)(s),a._OrtCreateRunOptions=(s,p,h,x)=>(a._OrtCreateRunOptions=m.ma)(s,p,h,x),a._OrtAddRunConfigEntry=(s,p,h)=>(a._OrtAddRunConfigEntry=m.na)(s,p,h),a._OrtReleaseRunOptions=s=>(a._OrtReleaseRunOptions=m.oa)(s),a._OrtCreateBinding=s=>(a._OrtCreateBinding=m.pa)(s),a._OrtBindInput=(s,p,h)=>(a._OrtBindInput=m.qa)(s,p,h),a._OrtBindOutput=(s,p,h,x)=>(a._OrtBindOutput=m.ra)(s,p,h,x),a._OrtClearBoundOutputs=s=>(a._OrtClearBoundOutputs=m.sa)(s),a._OrtReleaseBinding=s=>(a._OrtReleaseBinding=m.ta)(s),a._OrtRunWithBinding=(s,p,h,x,P)=>(a._OrtRunWithBinding=m.ua)(s,p,h,x,P),a._OrtRun=(s,p,h,x,P,M,G,se)=>(a._OrtRun=m.va)(s,p,h,x,P,M,G,se),a._OrtEndProfiling=s=>(a._OrtEndProfiling=m.wa)(s),a._JsepOutput=(s,p,h)=>(a._JsepOutput=m.xa)(s,p,h),a._JsepGetNodeName=s=>(a._JsepGetNodeName=m.ya)(s);var w=()=>(w=m.za)(),I=a._pthread_self=()=>(I=a._pthread_self=m.Aa)(),D=a._malloc=s=>(D=a._malloc=m.Ba)(s),H=a._free=s=>(H=a._free=m.Ca)(s);a.__emscripten_tls_init=()=>(a.__emscripten_tls_init=m.Da)();var K=a.__emscripten_thread_init=(s,p,h,x,P,M)=>(K=a.__emscripten_thread_init=m.Fa)(s,p,h,x,P,M);a.__emscripten_thread_crashed=()=>(a.__emscripten_thread_crashed=m.Ga)();var Y=(s,p,h,x)=>(Y=m.Ha)(s,p,h,x),q=s=>(q=m.Ia)(s),ee=a.__emscripten_thread_exit=s=>(ee=a.__emscripten_thread_exit=m.Ja)(s),pe=()=>(pe=m.Ka)(),we=s=>(we=m.La)(s),O=(s,p)=>(O=m.Ma)(s,p),oe=()=>(oe=m.Na)(),ve=s=>(ve=m.Oa)(s),pt=s=>(pt=m.Pa)(s),Cr=a.dynCall_ii=(s,p)=>(Cr=a.dynCall_ii=m.Ra)(s,p),Eo=s=>(Eo=m.Sa)(s),Oo=()=>(Oo=m.Ta)(),Po=s=>(Po=m.Ua)(s),Ro=()=>(Ro=m.Va)();a.___start_em_js=1372216,a.___stop_em_js=1372377;function Gu(){var s=m;s=Object.assign({},s);var p=x=>()=>x()>>>0,h=x=>P=>x(P)>>>0;return s.za=p(s.za),s.Aa=p(s.Aa),s.Ba=h(s.Ba),s.emscripten_main_runtime_thread_id=p(s.emscripten_main_runtime_thread_id),s.Na=p(s.Na),s.Pa=h(s.Pa),s}a.wasmMemory=te,a.stackAlloc=pt,a.stackSave=oe,a.stackRestore=ve,a.keepRuntimeAlive=()=>0<dt,a.UTF8ToString=Re,a.stringToUTF8=Bt,a.lengthBytesUTF8=kt,a.ExitStatus=Lt,a.PThread=le;var ln;ze=function s(){ln||ko(),ln||(ze=s)};function ko(){if(!(0<je))if(S)f(a),S||Kt(be),startWorker(a);else{if(a.preRun)for(typeof a.preRun=="function"&&(a.preRun=[a.preRun]);a.preRun.length;)ne.unshift(a.preRun.shift());Kt(ne),0<je||ln||(ln=!0,a.calledRun=!0,Ee||(S||Kt(be),f(a),S||Kt(et)))}}return ko(),t.ready}})();typeof Lo=="object"&&typeof Kn=="object"?Kn.exports=Go:typeof define=="function"&&define.amd&&define([],()=>Go)});var jo=Ir((Yc,Xu)=>{Xu.exports=\'"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs"),vm=require("vm");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,"utf8"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed?.(),a}}self.onmessage=handleMessage;\\n\'});var Qn,rt,Tr,pn,Er,Xo,Xn,Ve=X(()=>{"use strict";Qn=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},rt=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},Tr=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],pn=e=>{switch(e){case"float16":return Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},Er=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},Xo=e=>e==="float32"||e==="int32"||e==="int64"||e==="bool"||e==="float16"||e==="uint32",Xn=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}});var mn=X(()=>{});var ea=X(()=>{mn()});var ta,ra=X(()=>{ta="1.18.0"});var na,Vt,Jn=X(()=>{ra();na="warning",Vt={wasm:{},webgl:{},webgpu:{},versions:{common:ta},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);na=e}},get logLevel(){return na}};Object.defineProperty(Vt,"logLevel",{enumerable:!0})});var ar,oa=X(()=>{Jn();ar=Vt});var aa=X(()=>{});var ia=X(()=>{fn()});var ua=X(()=>{});var la=X(()=>{fn()});var fn=X(()=>{aa();ia();ua();la()});var hn=X(()=>{fn()});var eo,da,Nt,Wt,to=X(()=>{Jn();eo=(e,t)=>{Vt.wasm.trace&&console.timeStamp(`${e}::ORT::${t}`)},da=(e,t)=>{let r=new Error().stack?.split(/\\r\\n|\\r|\\n/g)||[],o=!1;for(let n=0;n<r.length;n++){if(o&&!r[n].includes("TRACE_FUNC")){let u=`FUNC_${e}::${r[n].trim().split(" ")[1]}`;t&&(u+=`::${t}`),eo("CPU",u);return}r[n].includes("TRACE_FUNC")&&(o=!0)}},Nt=e=>{Vt.wasm.trace&&da("BEGIN",e)},Wt=e=>{Vt.wasm.trace&&da("END",e)}});var ca=X(()=>{mn();hn();to()});var pa=X(()=>{ca()});var ma=X(()=>{});var fa=X(()=>{mn();hn()});var ha=X(()=>{fa()});var ir=X(()=>{ea();oa();pa();hn();to();ma();ha()});var ll,dl,ga,ya,ba,cl,ke,Pt=X(()=>{"use strict";Ve();ll=["V","I","W","E","F"],dl=(e,t)=>{console.log(`[${ll[e]},${new Date().toISOString()}]${t}`)},ba=(e,t)=>{ga=e,ya=t},cl=(e,t)=>{let r=Er(e),o=Er(ga);r>=o&&dl(r,typeof t=="function"?t():t)},ke=(...e)=>{ya&&cl(...e)}});var wa,va=X(()=>{"use strict";Ve();wa=(e,t)=>new(pn(t))(e)});var gn=X(()=>{"use strict"});var yn,pl,$a,no,ro,xa,_a=X(()=>{"use strict";Pt();gn();yn=e=>Math.ceil(e/16)*16,pl=1,$a=()=>pl++,no=async(e,t,r,o)=>{let n=yn(r),u=e.device.createBuffer({size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let l=e.getCommandEncoder();e.endComputePass(),l.copyBufferToBuffer(t,0,u,0,n),e.flush(),await u.mapAsync(GPUMapMode.READ);let d=u.getMappedRange();if(o){let a=o();return a.set(new Uint8Array(d,0,r)),a}else return new Uint8Array(d.slice(0,r))}finally{u.destroy()}},ro=class{constructor(t){this.backend=t;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map}upload(t,r){let o=r.buffer,n=r.byteOffset,u=r.byteLength,l=yn(u),d=this.storageCache.get(t);if(!d)throw new Error("gpu data for uploading does not exist");if(d.originalSize!==u)throw new Error(`inconsistent data size. gpu data size=${d.originalSize}, data size=${u}`);let a=this.backend.device.createBuffer({mappedAtCreation:!0,size:l,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),f=a.getMappedRange();new Uint8Array(f).set(new Uint8Array(o,n,u)),a.unmap();let g=this.backend.getCommandEncoder();this.backend.endComputePass(),g.copyBufferToBuffer(a,0,d.gpuData.buffer,0,l),ke("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${t})`),this.buffersForUploadingPending.push(a)}memcpy(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("source gpu data for memcpy does not exist");let n=this.storageCache.get(r);if(!n)throw new Error("destination gpu data for memcpy does not exist");if(o.originalSize!==n.originalSize)throw new Error("inconsistent source and destination gpu data size");let u=yn(o.originalSize),l=this.backend.getCommandEncoder();this.backend.endComputePass(),l.copyBufferToBuffer(o.gpuData.buffer,0,n.gpuData.buffer,0,u)}registerExternalBuffer(t,r,o){let n;if(o){if(n=this.externalBuffers.get(o),n===void 0)throw new Error("previous buffer is not registered");if(t===o)return ke("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${n}, buffer is the same, skip.`),n;this.externalBuffers.delete(o)}else n=$a();return this.storageCache.set(n,{gpuData:{id:n,type:0,buffer:t},originalSize:r}),this.externalBuffers.set(t,n),ke("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${n}, registered.`),n}unregisterExternalBuffer(t){let r=this.externalBuffers.get(t);r!==void 0&&(this.storageCache.delete(r),this.externalBuffers.delete(t),ke("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${r}`))}create(t,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let o=yn(t),n,u=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,l=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(u||l){let a=u?this.freeBuffers:this.freeUniformBuffers,f=a.get(o);f||(f=[],a.set(o,f)),f.length>0?n=f.pop():n=this.backend.device.createBuffer({size:o,usage:r})}else n=this.backend.device.createBuffer({size:o,usage:r});let d={id:$a(),type:0,buffer:n};return this.storageCache.set(d.id,{gpuData:d,originalSize:t}),ke("verbose",()=>`[WebGPU] GpuDataManager.create(size=${t}) => id=${d.id}`),d}get(t){return this.storageCache.get(t)?.gpuData}release(t){let r=this.storageCache.get(t);if(!r)throw new Error("releasing data does not exist");return ke("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${r.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(r.gpuData.buffer),r.originalSize}async download(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("data does not exist");await no(this.backend,o.gpuData.buffer,o.originalSize,r)}refreshPendingBuffers(){for(let t of this.buffersForUploadingPending)t.destroy();this.buffersForUploadingPending=[];for(let t of this.buffersPending)(t.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(t.size).push(t):(t.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(t.size).push(t):t.destroy();this.buffersPending=[]}dispose(){this.freeBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map}},xa=(...e)=>new ro(...e)});var oo,he,Fe=X(()=>{"use strict";oo=class{constructor(t){Object.assign(this,t)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(t=>`${this[t]}`).join(";")),this.key}},he=e=>new oo(e)});var ao,gt,N,Ht,bn,wn,vn,Se=X(()=>{"use strict";ao=class{static calcMatMulShape(t,r){return t[1]!==r[0]?void 0:[t[0],r[1]]}},gt=class{static calcShape(t,r,o=!1){let n=t.length,u=r.length;if(n===0)return r;if(u===0)return t;let l=Math.max(t.length,r.length),d=new Array(l);if(o){if(n<2||u<2)return;let a=ao.calcMatMulShape([t[n-2],t[n-1]],[r[u-2],r[u-1]]);if(a===void 0)return;[d[l-2],d[l-1]]=a}for(let a=o?3:1;a<=l;a++){let f=n-a<0?1:t[n-a],g=u-a<0?1:r[u-a];if(f!==g&&f>1&&g>1)return;d[l-a]=Math.max(f,g)}return d}static isValidBroadcast(t,r){let o=t.length,n=r.length;if(o>n)return!1;for(let u=1;u<=o;u++)if(t[o-u]!==1&&t[o-u]!==r[n-u])return!1;return!0}},N=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,o){let n=1;for(let u=r;u<o;u++){if(t[u]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");n*=t[u]}return n}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let o=new Array(r);o[r-1]=1,o[r-2]=t[r-1];for(let n=r-3;n>=0;--n)o[n]=o[n+1]*t[n+1];return o}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(o=>this.normalizeAxis(o,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(o=>t[o]):t.slice().reverse()}static padShape(t,r){let o=t.length;return t.map((n,u)=>n+r[u]+r[u+o])}static areEqual(t,r){return t.length!==r.length?!1:t.every((o,n)=>o===r[n])}},Ht=class e{static adjustPoolAttributes(t,r,o,n,u,l){if(!t&&o.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let d=0;d<r.length-2;d++)d>=o.length?o.push(r[d+2]):o[d]=r[d+2];for(let d=0;d<o.length;d++)if(d<n.length){if(n[d]<0)throw new Error("strides should be greater than or equal to 1")}else n.push(1);for(let d=0;d<o.length;d++)if(d<u.length){if(u[d]<0)throw new Error("dilations should be greater than or equal to 1")}else u.push(1);for(let d=0;d<o.length*2;d++)if(d<l.length){if(l[d]<0)throw new Error("pad should be greater than or equal to 1")}else l.push(0);for(let d=0;d<o.length;d++){if(o[d]<=0)throw new Error("kernel shapes need to be greater than 0");if(l[d]>=o[d]||l[d+o.length]>=o[d])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,o,n,u,l,d){if(d){if(u.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(n.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let a=0;a<t.length-2;a++)e.adjustPadAndReturnShape(t[a+(l?1:2)],r[a],o[a],n[a],u,a,a+t.length-2,d)}}static computePoolOutputShape(t,r,o,n,u,l,d){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let a=[r[0],r[1]];return e.computeShapeHelper(t,r,a,o,n,u,l,d),a}static computeConvOutputShape(t,r,o,n,u,l,d){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let a=[t[0],r[0]];return e.computeShapeHelper(!1,t,a,o,n,u,l,d),a}static computeShapeHelper(t,r,o,n,u,l,d,a){if(t)for(let f=0;f<r.length-2;f++)o.push(1);else for(let f=0;f<r.length-2;f++)o.push(e.adjustPadAndReturnShape(r[f+2],n[f],u[f],l[f],d,f,f+r.length-2,a))}static adjustPadAndReturnShape(t,r,o,n,u,l,d,a){let f=o*(n-1)+1;if(a&&a!=="NOTSET")switch(a){case"VALID":return u[l]=0,u[d]=0,Math.floor((t-f)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(o!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let y=((t+r-1)/r-1)*r+n-t;return u[l]=Math.floor(a==="SAME_LOWER"?(y+1)/2:y/2),u[d]=y-u[l],Math.floor((t+y-n)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+u[l]+u[d]-f)/r+1)}},bn=class{static getShapeOfGemmResult(t,r,o,n,u){if(t.length!==2||o.length!==2)throw new Error("shape need to be of size 2");let l,d,a;r?(l=t[1],d=t[0]):(l=t[0],d=t[1]);let f=-1;if(n?(a=o[0],f=1):(a=o[1],f=0),o[f]!==d)throw new Error("dimension mismatch");if(l<=0||a<=0||d<=0)throw new Error("invalid shape specified");if(u&&!gt.isValidBroadcast(u,[l,a]))throw new Error("gemm: invalid bias shape for broadcast");return[l,a,d]}},wn=-34028234663852886e22,vn=34028234663852886e22});var ml,so,Ge,yt,j,Le,Xe,mt,nt,de,uo,z,Q,$n,io,Ca,sr,Pe,$e=X(()=>{"use strict";Ve();Se();ml=64,so=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}},Ge=(e,t=1)=>{let r=so(e,t);return typeof r=="string"?r:r[0]},yt=(e,t=1)=>{let r=so(e,t);return typeof r=="string"?r:r[1]},j=e=>e.length===0?[]:[{type:"uint32",data:e},{type:"uint32",data:N.computeStrides(e)}],Le=e=>e%4===0?4:e%2===0?2:1,Xe=(e="f32",t,r="0")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,mt=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}f(${r})`,nt=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,de=(e,t,r)=>e.startsWith("uniforms.")&&r>4?typeof t=="string"?`${e}[(${t}) / 4][(${t}) % 4]`:`${e}[${Math.floor(t/4)}][${t%4}]`:r>1?`${e}[${t}]`:e,uo=(e,t,r,o,n)=>{let u=typeof r=="number",l=u?r:r.length,d=[...new Array(l).keys()],a=l<2?"u32":l<=4?`vec${l}<u32>`:`array<u32, ${l}>`,f=so(t,n),g=typeof f=="string"?f:f[1],y=typeof f=="string"?f:f[0],v={indices:a,value:g,storage:y,tensor:t},$=L=>typeof L=="string"?L:`${L}u`,b={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},C=u?"uniforms.":"",A=`${C}${e}_shape`,S=`${C}${e}_strides`,_="";for(let L=0;L<l-1;L++)_+=`\n    let dim${L} = current / ${de(S,L,l)};\n    let rest${L} = current % ${de(S,L,l)};\n    indices[${L}] = dim${L};\n    current = rest${L};\n    `;_+=`indices[${l-1}] = current;`;let E=l<2?"":`\n  fn o2i_${e}(offset: u32) -> ${v.indices} {\n    var indices: ${v.indices};\n    var current = offset;\n    ${_}\n    return indices;\n  }`,T=L=>(b.offsetToIndices=!0,l<2?L:`o2i_${e}(${L})`),V=[];if(l>=2)for(let L=l-1;L>=0;L--)V.push(`${de(S,L,l)} * (indices[${L}])`);let k=l<2?"":`\n  fn i2o_${e}(indices: ${v.indices}) -> u32 {\n    return ${V.join("+")};\n  }`,U=L=>(b.indicesToOffset=!0,l<2?L:`i2o_${e}(${L})`),W=(...L)=>l===0?"0u":`${v.indices}(${L.map($).join(",")})`,Z=(L,ne)=>l<2?`${L}`:`${de(L,ne,l)}`,B=(L,ne,be)=>l<2?`${L}=${be};`:`${de(L,ne,l)}=${be};`,F={},J=(L,ne)=>{b.broadcastedIndicesToOffset=!0;let be=`${ne.name}broadcastedIndicesTo${e}Offset`;if(be in F)return`${be}(${L})`;let et=[];for(let je=l-1;je>=0;je--){let Ne=ne.indicesGet("outputIndices",je+ne.rank-l);et.push(`${Z(S,je)} * (${Ne} % ${Z(A,je)})`)}return F[be]=`fn ${be}(outputIndices: ${ne.type.indices}) -> u32 {\n             return ${et.length>0?et.join("+"):"0u"};\n           }`,`${be}(${L})`},te=(L,ne)=>(()=>{if(v.storage===v.value)return`${e}[${L}]=${ne};`;if(v.storage==="vec2<u32>"&&v.value==="i32")return`${e}[${L}]=vec2<u32>(u32(${ne}), select(0u, 0xFFFFFFFFu, ${ne} < 0));`;if(v.storage==="vec2<u32>"&&v.value==="u32")return`${e}[${L}]=vec2<u32>(u32(${ne}), 0u);`;if(v.storage==="u32"&&v.value==="vec4<bool>")return`${e}[${L}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${ne}));`;throw new Error(`not supported combination of storage type ${v.storage} and value type ${v.value} yet`)})(),re=L=>(()=>{if(v.storage===v.value)return`${e}[${L}]`;if(v.storage==="vec2<u32>"&&v.value==="i32")return`i32(${e}[${L}].x)`;if(v.storage==="vec2<u32>"&&v.value==="u32")return`u32(${e}[${L}].x)`;if(v.storage==="u32"&&v.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${L}] & 0xFFu), bool(${e}[${L}] & 0xFF00u), bool(${e}[${L}] & 0xFF0000u), bool(${e}[${L}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${v.storage} and value type ${v.value} yet`)})(),Ee=l<2?"":`\n  fn get_${e}ByIndices(indices: ${v.indices}) -> ${g} {\n    return ${re(`i2o_${e}(indices)`)};\n  }`,Be=l<2?"":(()=>{let L=d.map(be=>`d${be}: u32`).join(", "),ne=d.map(be=>`d${be}`).join(", ");return`\n  fn get_${e}(${L}) -> ${g} {\n    return get_${e}ByIndices(${W(ne)});\n  }`})(),fe=(...L)=>{if(L.length!==l)throw new Error(`indices length must be ${l}`);let ne=L.map($).join(",");return l===0?re("0u"):l===1?re(ne[0]):(b.get=!0,b.getByIndices=!0,b.indicesToOffset=!0,`get_${e}(${ne})`)},Ae=L=>l<2?re(L):(b.getByIndices=!0,b.indicesToOffset=!0,`get_${e}ByIndices(${L})`),ge=l<2?"":`\n  fn set_${e}ByIndices(indices: ${v.indices}, value: ${g}) {\n    ${te(`i2o_${e}(indices)`,"value")}\n  }`,ye=l<2?"":(()=>{let L=d.map(be=>`d${be}: u32`).join(", "),ne=d.map(be=>`d${be}`).join(", ");return`\n  fn set_${e}(${L}, value: ${g}) {\n    set_${e}ByIndices(${W(ne)}, value);\n  }`})();return{impl:()=>{let L=[],ne=!1;return b.offsetToIndices&&(L.push(E),ne=!0),b.indicesToOffset&&(L.push(k),ne=!0),b.broadcastedIndicesToOffset&&(Object.values(F).forEach(be=>L.push(be)),ne=!0),b.set&&(L.push(ye),ne=!0),b.setByIndices&&(L.push(ge),ne=!0),b.get&&(L.push(Be),ne=!0),b.getByIndices&&(L.push(Ee),ne=!0),!u&&ne&&L.unshift(`const ${A} = ${v.indices}(${r.join(",")});`,`const ${S} = ${v.indices}(${N.computeStrides(r).join(",")});`),L.join(`\n`)},type:v,offsetToIndices:T,indicesToOffset:U,broadcastedIndicesToOffset:J,indices:W,indicesGet:Z,indicesSet:B,set:(...L)=>{if(L.length!==l+1)throw new Error(`indices length must be ${l}`);let ne=L[l];if(typeof ne!="string")throw new Error("value must be string");let be=L.slice(0,l).map($).join(",");return l===0?te("0u",ne):l===1?te(be[0],ne):(b.set=!0,b.setByIndices=!0,b.indicesToOffset=!0,`set_${e}(${be}, ${ne})`)},setByOffset:te,setByIndices:(L,ne)=>l<2?te(L,ne):(b.setByIndices=!0,b.indicesToOffset=!0,`set_${e}ByIndices(${L}, ${ne});`),get:fe,getByOffset:re,getByIndices:Ae,usage:o,name:e,strides:S,shape:A,rank:l}},z=(e,t,r,o=1)=>uo(e,t,r,"input",o),Q=(e,t,r,o=1)=>uo(e,t,r,"output",o),$n=(e,t,r,o=1)=>uo(e,t,r,"internal",o),io=class{constructor(t){this.normalizedDispatchGroup=t;this.internalVariables=[];this.variables=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(t){return`if (global_idx >= ${typeof t=="number"?`${t}u`:t}) { return; }`}mainStart(t=ml){let r=typeof t=="number"?t:t[0],o=typeof t=="number"?1:t[1],n=typeof t=="number"?1:t[2],u=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,l=u?`@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(local_invocation_id) local_id : vec3<u32>,\n    @builtin(local_invocation_index) local_idx : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(num_workgroups) num_workgroups : vec3<u32>`,d=u?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +\n          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${r*o*n}u + local_idx;`;return`@compute @workgroup_size(${r}, ${o}, ${n})\n  fn main(${l}) {\n    ${d}\n  `}appendVariableUniforms(t){t.rank!==0&&(t.shape.startsWith("uniforms.")&&this.uniforms.push({name:t.shape.replace("uniforms.",""),type:"u32",length:t.rank}),t.strides.startsWith("uniforms.")&&this.uniforms.push({name:t.strides.replace("uniforms.",""),type:"u32",length:t.rank}))}declareVariable(t,r){if(t.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(t),this.appendVariableUniforms(t);let o=t.usage==="input"?"read":"read_write",n=t.type.storage;return`@group(0) @binding(${r}) var<storage, ${o}> ${t.name}: array<${n}>;`}declareVariables(...t){return t.map(r=>this.declareVariable(r,this.variableIndex++)).join(`\n`)}registerInternalVariable(t){if(t.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(t),this.appendVariableUniforms(t)}registerInternalVariables(...t){return t.forEach(r=>this.registerInternalVariable(r)),this}registerUniform(t,r,o=1){return this.uniforms.push({name:t,type:r,length:o}),this}registerUniforms(t){return this.uniforms=this.uniforms.concat(t),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let t=[];for(let{name:r,type:o,length:n}of this.uniforms)if(n&&n>4)t.push(`${r}:array<vec4<${o}>, ${Math.ceil(n/4)}>`);else{let u=n==null||n===1?o:`vec${n}<${o}>`;t.push(`${r}:${u}`)}return`\n      struct Uniforms { ${t.join(", ")} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(t=>t.impl()).join(`\n`)+this.internalVariables.map(t=>t.impl()).join(`\n`)}},Ca=e=>new io(e),sr=(e,t)=>{let r=e.length,o=[];for(let n=0;n<r;n++){let u=r-1-n,l=e[u]||1;(t[t.length-1-n]||1)>1&&l===1&&o.unshift(u)}return o},Pe=e=>!0});var fl,Ia,hl,gl,ft,Aa,Ta,ur=X(()=>{"use strict";Se();Fe();$e();fl=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},Ia=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,hl=(e,t)=>N.sortBasedOnPerm(e,Ia(e.length,t)),gl=(e,t,r,o)=>{let n=[];n.push(`fn perm(i: ${o.type.indices}) -> ${r.type.indices} {\n    var a: ${r.type.indices};`);for(let u=0;u<t;++u)n.push(r.indicesSet("a",e[u],`i[${u}]`));return n.push("return a;}"),n.join(`\n`)},ft=(e,t)=>{let r=e.dataType,o=e.dims.length,n=Ia(o,t),u=Pe(o),l=hl(e.dims,n),d=u?l.length:l,a=u?o:e.dims,f=Q("output",r,d),g=z("a",r,a),y=v=>`\n  ${v.registerUniform("output_size","u32").declareVariables(g,f)}\n\n  ${gl(n,o,g,f)}\n\n  ${v.mainStart()}\n    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${f.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${f.setByOffset("global_idx",g.getByIndices("aIndices"))}\n  }`;return{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:u?["rank"]:["dims"]},getRunData:v=>{let $=N.size(l);return{outputs:[{dims:l,dataType:v[0].dataType}],dispatchGroup:{x:Math.ceil($/64)},programUniforms:u?[{type:"uint32",data:$},...j(v[0].dims),...j(l)]:[{type:"uint32",data:$}]}},getShaderSource:y}},Aa=(e,t)=>{fl(e.inputs),e.compute(ft(e.inputs[0],t.perm))},Ta=e=>he({perm:e.perm})});var yl,bl,wl,vl,$l,Sl,xl,_l,Cl,Il,bt,Ea,Oa,Pa,Ra,ka,Ba,Da,Ma,za,Ua,Va=X(()=>{"use strict";Se();$e();Sn();ur();yl={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},bl={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},wl={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},vl={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},$l=(e,t)=>{let r=[];for(let o=t-e;o<t;++o)r.push(o);return r},Sl=(e,t)=>{let r=[],o=e.length;for(let u=0;u<o;u++)t.indexOf(u)===-1&&r.push(e[u]);let n=t.map(u=>e[u]);return[r,n]},xl=(e,t)=>{let r=e.length+t.length,o=[],n=0;for(let u=0;u<r;u++)t.indexOf(u)===-1?o.push(e[n++]):o.push(1);return o},_l=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},Cl=(e,t)=>{let r=[];if(!_l(e,t)){for(let o=0;o<t;++o)e.indexOf(o)===-1&&r.push(o);e.forEach(o=>r.push(o))}return r},Il=(e,t,r,o,n,u,l)=>{let d=r[0].dims,a=N.size(u),f=N.size(l),g=z("_A",r[0].dataType,d),y=Q("output",n,u),v=32,$=`\n          var<workgroup> aBestValues : array<${y.type.storage}, ${v}>;\n       `;return{name:e,shaderCache:t,getShaderSource:C=>`\n        ${C.registerUniform("reduceSize","u32").declareVariables(g,y)}\n        ${$}\n        fn DIV_CEIL(a : u32, b : u32) -> u32 {\n          return ((a - 1u) / b + 1u);\n         }\n         ${C.mainStart(v)}\n\n          let outputIndex = global_idx / ${v};\n          let offset = outputIndex * uniforms.reduceSize;\n\n          var bestValue = ${y.type.storage}(${wl[o]});\n          let Length = uniforms.reduceSize;\n          for (var k = local_idx; k < Length; k = k + ${v}) {\n           let candidate = ${y.type.storage}(${g.getByOffset("offset + k")});\n           bestValue = ${yl[o]};\n          }\n          aBestValues[local_idx] = bestValue;\n          workgroupBarrier();\n\n         var reduceSize = min(Length, ${v}u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (local_idx < currentSize) {\n            let candidate = aBestValues[local_idx + interval];\n            bestValue = ${bl[o]};\n            aBestValues[local_idx] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (local_idx == 0u) {\n          ${y.setByOffset("outputIndex",`${o==="mean"?`bestValue / ${y.type.storage}(uniforms.reduceSize)`:`${vl[o]}`}`)};\n         }\n        }`,getRunData:()=>({outputs:[{dims:u,dataType:n}],dispatchGroup:{x:a},programUniforms:[{type:"uint32",data:f}]})}},bt=(e,t,r,o)=>{let n=e.inputs.length===1?r:lo(e.inputs,r),u=n.axes;u.length===0&&!n.noopWithEmptyAxes&&(u=e.inputs[0].dims.map(($,b)=>b));let l=N.normalizeAxes(u,e.inputs[0].dims.length),d=l,a=e.inputs[0],f=Cl(d,e.inputs[0].dims.length);f.length>0&&(a=e.compute(ft(e.inputs[0],f),{inputs:[0],outputs:[-1]})[0],d=$l(d.length,a.dims.length));let[g,y]=Sl(a.dims,d),v=g;n.keepDims&&(v=xl(g,l)),e.compute(Il(t,{hint:n.cacheKey,inputDependencies:["type"]},[a],o,e.inputs[0].dataType,v,y),{inputs:[a]})},Ea=(e,t)=>{bt(e,"ReduceMeanShared",t,"mean")},Oa=(e,t)=>{bt(e,"ReduceL1Shared",t,"l1")},Pa=(e,t)=>{bt(e,"ReduceL2Shared",t,"l2")},Ra=(e,t)=>{bt(e,"ReduceLogSumExpShared",t,"logSumExp")},ka=(e,t)=>{bt(e,"ReduceMaxShared",t,"max")},Ba=(e,t)=>{bt(e,"ReduceMinShared",t,"min")},Da=(e,t)=>{bt(e,"ReduceProdShared",t,"prod")},Ma=(e,t)=>{bt(e,"ReduceSumShared",t,"sum")},za=(e,t)=>{bt(e,"ReduceSumSquareShared",t,"sumSquare")},Ua=(e,t)=>{bt(e,"ReduceLogSumShared",t,"logSum")}});var wt,Al,xn,lo,vt,Tl,El,Ol,Pl,Rl,kl,Bl,Dl,Ml,zl,$t,Na,Wa,Ha,Ga,La,Fa,ja,qa,Ka,Ya,Sn=X(()=>{"use strict";Se();Fe();$e();Va();wt=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},Al=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],xn=(e,t,r,o,n,u,l=!1,d=!1)=>{let a=[],f=r[0].dims,g=f.length,y=N.normalizeAxes(n,g),v=!d&&y.length===0;f.forEach((A,S)=>{v||y.indexOf(S)>=0?l&&a.push(1):a.push(A)});let $=a.length,b=N.size(a);return{name:e,shaderCache:t,getShaderSource:A=>{let S=[],_=z("_A",r[0].dataType,g),E=Q("output",u,$),T=o(_,E,y),V=T[2];for(let k=0,U=0;k<g;k++)v||y.indexOf(k)>=0?(l&&U++,V=`for(var j${k}: u32 = 0; j${k} < ${f[k]}; j${k}++) {\n                  ${T[2].includes("last_index")?`let last_index = j${k};`:""}\n                  ${_.indicesSet("input_indices",k,`j${k}`)}\n                  ${V}\n                }`):(S.push(`${_.indicesSet("input_indices",k,E.indicesGet("output_indices",U))};`),U++);return`\n\n        ${A.registerUniform("output_size","u32").declareVariables(_,E)}\n\n        ${A.mainStart()}\n          ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var input_indices: ${_.type.indices};\n          let output_indices = ${E.offsetToIndices("global_idx")};\n\n          ${S.join(`\n`)}\n          ${T[0]}       // init ops for reduce max/min\n          ${T[1]}\n          ${V}\n          ${T[3]}\n          ${T.length===4?E.setByOffset("global_idx","value"):T.slice(4).join(`\n`)}\n        }`},getRunData:()=>({outputs:[{dims:a,dataType:u}],dispatchGroup:{x:Math.ceil(b/64)},programUniforms:[{type:"uint32",data:b},...j(f),...j(a)]})}},lo=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(o=>r.push(Number(o))),he({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},vt=(e,t,r,o)=>{let n=e.inputs,u=n.length===1?r:lo(n,r);e.compute(xn(t,{hint:u.cacheKey,inputDependencies:["rank"]},[n[0]],u.noopWithEmptyAxes&&u.axes.length===0?Al:o,u.axes,n[0].dataType,u.keepDims,u.noopWithEmptyAxes),{inputs:[0]})},Tl=(e,t)=>{wt(e.inputs),vt(e,"ReduceLogSum",t,(o,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,"value = log(value);"])},El=(e,t)=>{wt(e.inputs),vt(e,"ReduceL1",t,(o,n)=>[`var value = ${n.type.storage}(0);`,"",`value += abs(${o.getByIndices("input_indices")});`,""])},Ol=(e,t)=>{wt(e.inputs),vt(e,"ReduceL2",t,(o,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},Pl=(e,t)=>{wt(e.inputs),vt(e,"ReduceLogSumExp",t,(o,n)=>[`var value = ${n.type.storage}(0);`,"",`value += exp(${o.getByIndices("input_indices")});`,"value = log(value);"])},Rl=(e,t)=>{wt(e.inputs),vt(e,"ReduceMax",t,(o,n,u)=>{let l=[];for(let d=0;d<o.rank;d++)(u.indexOf(d)>=0||u.length===0)&&l.push(o.indicesSet("input_indices",d,0));return[`${l.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = max(value, ${o.getByIndices("input_indices")});`,""]})},kl=(e,t)=>{wt(e.inputs),vt(e,"ReduceMean",t,(o,n,u)=>{let l=1;for(let d=0;d<o.rank;d++)(u.indexOf(d)>=0||u.length===0)&&(l*=e.inputs[0].dims[d]);return["var sum = f32(0);","",`sum += f32(${o.getByIndices("input_indices")});`,`let value = ${n.type.value}(sum / ${l});`]})},Bl=(e,t)=>{wt(e.inputs),vt(e,"ReduceMin",t,(o,n,u)=>{let l=[];for(let d=0;d<o.rank;d++)(u.indexOf(d)>=0||u.length===0)&&l.push(`input_indices[${d}] = 0;`);return[`${l.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = min(value, ${o.getByIndices("input_indices")});`,""]})},Dl=(e,t)=>{wt(e.inputs),vt(e,"ReduceProd",t,(o,n)=>[`var value = ${n.type.storage}(1);`,"",`value *= ${o.getByIndices("input_indices")};`,""])},Ml=(e,t)=>{wt(e.inputs),vt(e,"ReduceSum",t,(o,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,""])},zl=(e,t)=>{wt(e.inputs),vt(e,"ReduceSumSquare",t,(o,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += t * t;`,""])},$t=(e,t,r)=>{if(t.length===0)return r;let o=1,n=1;for(let u=0;u<t.length;u++)t.indexOf(u)===-1?o*=e[u]:n*=e[u];return n<32&&o>1024},Na=(e,t)=>{$t(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?kl(e,t):Ea(e,t)},Wa=(e,t)=>{$t(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?El(e,t):Oa(e,t)},Ha=(e,t)=>{$t(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ol(e,t):Pa(e,t)},Ga=(e,t)=>{$t(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Pl(e,t):Ra(e,t)},La=(e,t)=>{$t(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Rl(e,t):ka(e,t)},Fa=(e,t)=>{$t(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Bl(e,t):Ba(e,t)},ja=(e,t)=>{$t(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Dl(e,t):Da(e,t)},qa=(e,t)=>{$t(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ml(e,t):Ma(e,t)},Ka=(e,t)=>{$t(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?zl(e,t):za(e,t)},Ya=(e,t)=>{$t(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Tl(e,t):Ua(e,t)}});var Za,Qa,Xa,co,Ja=X(()=>{"use strict";Ve();Fe();Sn();Za=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},Qa=(e,t)=>{Za(e.inputs);let r=(o,n,u)=>{let l=[];for(let d=0;d<o.rank;d++)(u.indexOf(d)>=0||u.length===0)&&l.push(`input_indices[${d}] = 0;`);return[`${l.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {\n         value = ${o.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",n.setByOffset("global_idx","best_index")]};e.compute(xn("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},Xa=(e,t)=>{Za(e.inputs);let r=(o,n,u)=>{let l=[];for(let d=0;d<o.rank;d++)(u.indexOf(d)>=0||u.length===0)&&l.push(`input_indices[${d}] = 0;`);return[`${l.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {\n         value = ${o.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",n.setByOffset("global_idx","best_index")]};e.compute(xn("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},co=e=>he(e)});var Ul,Vl,Nl,Wl,_n,Hl,ei,po=X(()=>{"use strict";Ve();gn();$e();Ul=(e,t)=>{let r=e[0],o=e[1],n=e[2],u=e[3],l=e[4],d=e[5];if(l&&d)throw new Error("Attention cannot have both past and relative_position_bias");if(r.dims.length!==3)throw new Error(\'Input "input" must have 3 dimensions\');let a=r.dims[0],f=r.dims[1],g=r.dims[2];if(n.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimensions\');if(o.dims.length!==2)throw new Error(\'Input "weights" is expected to have 2 dimensions\');if(o.dims[0]!==g)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(n.dims[0]!==o.dims[1])throw new Error(\'Input "bias" dimension 0 should have same length as dimension 1 of input "weights"\');let y=n.dims[0]/3,v=y,$=v;if(t.qkvHiddenSizes.length>0){if(t.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let E of t.qkvHiddenSizes)if(E%t.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");y=t.qkvHiddenSizes[0],v=t.qkvHiddenSizes[1],$=t.qkvHiddenSizes[2]}let b=f;if(y!==v)throw new Error("qkv_hidden_sizes first element should be same as the second");if(n.dims[0]!==y+v+$)throw new Error(\'Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes\');let C=0;if(l){if(v!==$)throw new Error(\'Input "past" expect k_hidden_size == v_hidden_size\');if(l.dims.length!==5)throw new Error(\'Input "past" must have 5 dimensions\');if(l.dims[0]!==2)throw new Error(\'Input "past" first dimension must be 2\');if(l.dims[1]!==a)throw new Error(\'Input "past" second dimension must be batch_size\');if(l.dims[2]!==t.numHeads)throw new Error(\'Input "past" third dimension must be num_heads\');if(l.dims[4]!==v/t.numHeads)throw new Error(\'Input "past" fifth dimension must be k_hidden_size / num_heads\');t.pastPresentShareBuffer||(C=l.dims[3])}let A=b+C,S=-1,_=0;if(u)throw new Error("Mask not supported");if(l)throw new Error("past is not supported");if(d)throw new Error("relativePositionBias is not supported");return{batchSize:a,sequenceLength:f,pastSequenceLength:C,kvSequenceLength:b,totalSequenceLength:A,maxSequenceLength:S,inputHiddenSize:g,hiddenSize:y,vHiddenSize:$,headSize:Math.floor(y/t.numHeads),vHeadSize:Math.floor($/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:_,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},Vl=(e,t,r,o)=>{let n=Le(o),u=64,l=o/n;l<u?u=1:l/8<64&&(u=Math.ceil(l/8));let d=Math.ceil(o/n/u),f=[{type:rt(t.dataType),data:1/o},{type:"uint32",data:l},{type:"uint32",data:d}],g=Ge(t.dataType,n),y=v=>{let $=Q("x",t.dataType,t.dims,n),b="thread_max_vector";n===2?b="max(thread_max_vector.x, thread_max_vector.y)":n===4&&(b="max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))");let C=yt(t.dataType),A=[{name:"d_inv",type:C},{name:"d_comp",type:"u32"},{name:"elements_per_wg",type:"u32"}];return`\n  var<workgroup> wgMax: array<f32, ${u}>;\n  var<workgroup> wgSum: array<f32, ${u}>;\n  ${v.registerUniforms(A).declareVariables($)}\n  ${v.mainStart([u,1,1])}\n    let localOffset = local_idx * uniforms.elements_per_wg;\n    let offset: u32 = workgroup_id.x * uniforms.d_comp + localOffset;\n\n    var thread_max_vector = ${Xe("f32",n,"-3.402823e+38f")};\n    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n      thread_max_vector = max(${mt(C,n,"x[offset + i]")}, thread_max_vector);\n    }\n    wgMax[local_idx] = ${b};\n    workgroupBarrier();\n\n    var maxValue = -3.402823e+38f;\n    for (var i = 0u; i < ${u}; i++) {\n      maxValue = max(wgMax[i], maxValue);\n    }\n\n    var sumVector = ${Xe("f32",n,"0")};\n    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n      sumVector += exp(${mt(C,n,"x[offset + i]")} - maxValue);\n    }\n    wgSum[local_idx] = ${nt("sumVector",n)};\n    workgroupBarrier();\n\n    var sum: f32 = 0;\n    for (var i = 0u; i < ${u}; i++) {\n      sum += wgSum[i];\n    }\n\n    if (sum == 0) {\n      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n        x[offset + i] = ${Xe("f32",n,"uniforms.d_inv")};\n      }\n    } else {\n      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n        let f32input = ${mt(C,n,"x[offset + i]")};\n        x[offset + i] = ${$.type.value}(exp(f32input - maxValue) / sum);\n      }\n    }\n  }`};e.compute({name:"AttentionProbsSoftmax",shaderCache:{hint:`${u};${g};${n}`},getShaderSource:y,getRunData:()=>({outputs:[],dispatchGroup:{x:r},programUniforms:f})},{inputs:[t],outputs:[]})},Nl=(e,t,r,o,n,u)=>{let l=[n.batchSize,n.numHeads,n.sequenceLength,n.kvSequenceLength+n.pastSequenceLength],d=u.scale===0?1/Math.sqrt(n.headSize):u.scale,a=Le(n.headSize),f=n.headSize/a,g=12,y={x:Math.ceil(n.totalSequenceLength/g),y:Math.ceil(n.sequenceLength/g),z:n.batchSize*n.numHeads},v=rt(t.dataType),$=[{type:"uint32",data:n.sequenceLength},{type:"uint32",data:f},{type:"uint32",data:n.totalSequenceLength},{type:"uint32",data:n.kvSequenceLength},{type:v,data:d}],b=[t,r],C=S=>{let _=z("q",t.dataType,t.dims,a),E=z("key",r.dataType,r.dims,a),T=Q("output",t.dataType,l),V=Ge(t.dataType),k=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"alpha",type:V}];return`\n  const beta: ${V} = 1.0;\n  const TILE_SIZE = ${g}u;\n\n  var<workgroup> tileQ: array<${_.type.storage}, ${g*g}>;\n  var<workgroup> tileK: array<${_.type.storage}, ${g*g}>;\n  ${S.registerUniforms(k).declareVariables(_,E,T)}\n  ${S.mainStart([g,g,1])}\n    // x holds the N and y holds the M\n    let headIdx = workgroup_id.z;\n    let m = workgroup_id.y * TILE_SIZE;\n    let n = workgroup_id.x * TILE_SIZE;\n    let lm = m + local_id.y;\n    let ln = n + local_id.x;\n\n    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;\n    let kOffset = uniforms.kv_sequence_length * uniforms.K * headIdx + n * uniforms.K;\n\n    var value = ${Xe(V,a)};\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m + local_id.y < uniforms.M && w + local_id.x < uniforms.K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {\n        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      workgroupBarrier();\n\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = headIdx * uniforms.M * uniforms.N;\n    if (lm < uniforms.M && ln < uniforms.N) {\n      let outputIdx = headOffset + lm * uniforms.N + ln;\n      output[outputIdx] = ${nt("value",a)} * uniforms.alpha;\n    }\n  }`},A=e.compute({name:"AttentionProbs",shaderCache:{hint:`${a}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:l,dataType:t.dataType,gpuDataType:0}],dispatchGroup:y,programUniforms:$}),getShaderSource:C},{inputs:b,outputs:[-1]})[0];return Vl(e,A,n.batchSize*n.numHeads*n.sequenceLength,n.totalSequenceLength),A},Wl=(e,t,r,o)=>{let n=[o.batchSize,o.sequenceLength,o.vHiddenSize],u=12,l={x:Math.ceil(o.vHeadSize/u),y:Math.ceil(o.sequenceLength/u),z:o.batchSize*o.numHeads},d=[{type:"uint32",data:o.sequenceLength},{type:"uint32",data:o.totalSequenceLength},{type:"uint32",data:o.vHeadSize},{type:"uint32",data:o.numHeads},{type:"uint32",data:o.vHiddenSize}],a=f=>{let g=z("probs",t.dataType,t.dims),y=z("v",r.dataType,r.dims),v=Q("output",t.dataType,n),$=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`\n  const TILE_SIZE = ${u}u;\n  var<workgroup> tileQ: array<${g.type.value}, ${u*u}>;\n  var<workgroup> tileK: array<${g.type.value}, ${u*u}>;\n  ${f.registerUniforms($).declareVariables(g,y,v)}\n  ${f.mainStart([u,u,1])}\n   let headIdx = workgroup_id.z;\n   let m = workgroup_id.y * TILE_SIZE + local_id.y;\n   let n = workgroup_id.x * TILE_SIZE + local_id.x;\n\n   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;\n   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;\n\n   var value = ${g.type.storage}(0);\n   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n     if (m < uniforms.M && w + local_id.x < uniforms.K) {\n       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];\n     }\n     if (n < uniforms.N && w + local_id.y < uniforms.K) {\n       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];\n     }\n     workgroupBarrier();\n     for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];\n     }\n     workgroupBarrier();\n   }\n\n   // we need to transpose output from BNSH_v to BSND_v\n   let batchIdx = workgroup_id.z / uniforms.num_heads;\n   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;\n   let headOffset = (batchIdx * uniforms.M * uniforms.num_heads + currentBatchHeadNumber) * uniforms.N;\n   if (m < uniforms.M && n < uniforms.N) {\n     let outputIdx = batchIdx * uniforms.M *uniforms.v_hidden_size + m * uniforms.v_hidden_size\n       + currentBatchHeadNumber * uniforms.N + n;\n     output[outputIdx] = value;\n   }\n  }`};return e.compute({name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:n,dataType:t.dataType,gpuDataType:0}],dispatchGroup:l,programUniforms:d}),getShaderSource:a},{inputs:[t,r],outputs:[0]})[0]},_n=(e,t,r,o,n,u,l,d,a,f,g)=>{let y=Nl(e,t,r,a,f,g);Wl(e,y,o,f)},Hl=(e,t)=>{let r=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],o=t.sequenceLength,n=t.inputHiddenSize,u=t.headSize,l=12,d={x:Math.ceil(t.headSize/l),y:Math.ceil(t.sequenceLength/l),z:t.batchSize*t.numHeads},a=[e.inputs[0],e.inputs[1],e.inputs[2]],f=[{type:"uint32",data:o},{type:"uint32",data:n},{type:"uint32",data:u},{type:"uint32",data:t.numHeads},{type:"uint32",data:t.headSize},{type:"uint32",data:t.hiddenSize},{type:"uint32",data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}],g=y=>{let v=Q("output_q",a[0].dataType,r),$=Q("output_k",a[0].dataType,r),b=Q("output_v",a[0].dataType,r),C=z("input",a[0].dataType,a[0].dims),A=z("weight",a[1].dataType,a[1].dims),S=z("bias",a[2].dataType,a[2].dims),_=C.type.storage,E=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`\n  const TILE_SIZE = ${l}u;\n  var<workgroup> tileInput: array<${_}, ${l*l}>;\n  var<workgroup> tileWeightQ: array<${_}, ${l*l}>;\n  var<workgroup> tileWeightK: array<${_}, ${l*l}>;\n  var<workgroup> tileWeightV: array<${_}, ${l*l}>;\n  ${y.registerUniforms(E).declareVariables(C,A,S,v,$,b)}\n  ${y.mainStart([l,l,1])}\n    let batchIndex = workgroup_id.z / uniforms.num_heads;\n    let headNumber = workgroup_id.z % uniforms.num_heads;\n    let m = workgroup_id.y * TILE_SIZE + local_id.y;\n    let n = workgroup_id.x * TILE_SIZE + local_id.x;\n\n    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;\n    let biasOffsetQ = headNumber * uniforms.head_size;\n    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;\n    let biasOffsetV = uniforms.hidden_size + biasOffsetK;\n\n    var valueQ = ${_}(0);\n    var valueK = ${_}(0);\n    var valueV = ${_}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\n        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];\n      }\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\n        let offset = n + (w + local_id.y) * uniforms.ldb;\n        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];\n        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];\n        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];\n      }\n      workgroupBarrier();\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        let inputTileOffset = TILE_SIZE * local_id.y + k;\n        let weightTileOffset = TILE_SIZE * k + local_id.x;\n        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];\n        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];\n        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = (m * uniforms.N + n) % uniforms.head_size;\n    valueQ += bias[headOffset + biasOffsetQ];\n    valueK += bias[headOffset + biasOffsetK];\n    valueV += bias[headOffset + biasOffsetV];\n\n    let offset = workgroup_id.z * uniforms.M * uniforms.N;\n    if (m < uniforms.M && n < uniforms.N) {\n      let outputIdx = offset + m * uniforms.N + n;\n      output_q[outputIdx] = valueQ;\n      output_k[outputIdx] = valueK;\n      output_v[outputIdx] = valueV;\n    }\n  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:d,programUniforms:f}),getShaderSource:g},{inputs:a,outputs:[-1,-1,-1]})},ei=(e,t)=>{let r=Ul(e.inputs,t),[o,n,u]=Hl(e,r);return _n(e,o,n,u,e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t)}});var Gl,Ll,Fl,ti,ri=X(()=>{"use strict";ir();Se();Fe();$e();Gl=(e,t)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let r=(o,n,u)=>{let l=n.length;if(l!==o.length)throw new Error(`${u}: num dimensions != ${l}`);n.forEach((d,a)=>{if(d!==o[a])throw new Error(`${u}: dim[${a}] do not match`)})};if(e[0].dims.length>1){let o=t.format==="NHWC"?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);r(e[1].dims,o,"Invalid input scale"),r(e[2].dims,o,"Invalid input B"),r(e[3].dims,o,"Invalid input mean"),r(e[4].dims,o,"Invalid input var")}else r(e[1].dims,[1],"Invalid input scale"),r(e[2].dims,[1],"Invalid input B"),r(e[3].dims,[1],"Invalid input mean"),r(e[4].dims,[1],"Invalid input var")},Ll=(e,t)=>{let{epsilon:r,spatial:o,format:n}=t,u=e[0].dims,l=o?Le(u[u.length-1]):1,d=n==="NHWC"&&u.length>1?l:1,a=N.size(u)/l,f=Pe(u.length)&&o,g=f?u.length:u,y=z("x",e[0].dataType,e[0].dims,l),v=z("scale",e[1].dataType,e[1].dims,d),$=z("bias",e[2].dataType,e[2].dims,d),b=z("inputMean",e[3].dataType,e[3].dims,d),C=z("inputVar",e[4].dataType,e[4].dims,d),A=Q("y",e[0].dataType,g,l),S=()=>{let E="";if(o)E=`let cOffset = ${u.length===1?"0u":n==="NHWC"?`outputIndices[${u.length-1}] / ${l}`:"outputIndices[1]"};`;else if(n==="NCHW")E=`\n            ${A.indicesSet("outputIndices","0","0")}\n            let cOffset = ${A.indicesToOffset("outputIndices")};`;else{E=`var cIndices = ${v.type.indices}(0);\n                       cIndices[0] = outputIndices[${u.length-1}];`;for(let T=1;T<v.rank;T++)E+=`cIndices[${T}] = outputIndices[${T}];`;E+=`let cOffset = ${v.indicesToOffset("cIndices")};`}return E},_=E=>`\n  const epsilon = ${r};\n  ${E.registerUniform("outputSize","u32").declareVariables(y,v,$,b,C,A)}\n  ${E.mainStart()}\n  ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n    var outputIndices = ${A.offsetToIndices(`global_idx * ${l}`)};\n    ${S()}\n    let scale = ${v.getByOffset("cOffset")};\n    let bias = ${$.getByOffset("cOffset")};\n    let inputMean = ${b.getByOffset("cOffset")};\n    let inputVar = ${C.getByOffset("cOffset")};\n    let x = ${y.getByOffset("global_idx")};\n    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;\n    ${A.setByOffset("global_idx","value")}\n  }`;return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${o}_${l}`,inputDependencies:f?["rank","type","type","type","type"]:void 0},getShaderSource:_,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:f?[{type:"uint32",data:a},...j(u)]:[{type:"uint32",data:a}]})}},Fl=e=>he(e),ti=(e,t)=>{let{inputs:r,outputCount:o}=e,n=Fl({...t,outputCount:o});if(ar.webgpu.validateInputContent&&Gl(r,n),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(Ll(r,n))}});var jl,ql,ni,oi=X(()=>{"use strict";Se();$e();jl=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},ql=e=>{let t=e[0].dims,r=e[0].dims[2],o=N.size(t)/4,n=e[0].dataType,u=z("input",n,t,4),l=z("bias",n,[r],4),d=z("residual",n,t,4),a=Q("output",n,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:g=>`\n  const channels = ${r}u / 4;\n  ${g.declareVariables(u,l,d,a)}\n\n  ${g.mainStart()}\n    ${g.guardAgainstOutOfBoundsWorkgroupSizes(o)}\n    let value = ${u.getByOffset("global_idx")}\n      + ${l.getByOffset("global_idx % channels")} + ${d.getByOffset("global_idx")};\n    ${a.setByOffset("global_idx","value")}\n  }`}},ni=e=>{jl(e.inputs),e.compute(ql(e.inputs))}});var Kl,Ie,ai,ii,si,ui,li,di,ci,pi,mi,Yl,fi,hi,gi,yi,Cn,bi,In,wi,vi,$i,Si,xi,_i,Ci,Ii,Ai,Ti,Ei,Oi,Pi,Ri,ki,Bi,Di,mo=X(()=>{"use strict";Ve();Se();Fe();$e();Kl=(e,t,r,o,n,u)=>{let l=Math.ceil(t/4),d="";typeof n=="string"?d=`${n}(a)`:d=n("a");let a=z("inputData",r,[l],4),f=Q("outputData",o,[l],4);return`\n      ${e.registerUniform("vec_size","u32").declareVariables(a,f)}\n\n  ${u??""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n\n    let a = ${a.getByOffset("global_idx")};\n    ${f.setByOffset("global_idx",d)}\n  }`},Ie=(e,t,r,o,n,u=e.dataType)=>({name:t,shaderCache:{hint:n,inputDependencies:["type"]},getShaderSource:l=>Kl(l,N.size(e.dims),e.dataType,u,r,o),getRunData:l=>({outputs:[{dims:e.dims,dataType:u}],dispatchGroup:{x:Math.ceil(N.size(l[0].dims)/64/4)},programUniforms:[{type:"uint32",data:Math.ceil(N.size(e.dims)/4)}]})}),ai=e=>{e.compute(Ie(e.inputs[0],"Abs","abs"))},ii=e=>{e.compute(Ie(e.inputs[0],"Acos","acos"))},si=e=>{e.compute(Ie(e.inputs[0],"Acosh","acosh"))},ui=e=>{e.compute(Ie(e.inputs[0],"Asin","asin"))},li=e=>{e.compute(Ie(e.inputs[0],"Asinh","asinh"))},di=e=>{e.compute(Ie(e.inputs[0],"Atan","atan"))},ci=e=>{e.compute(Ie(e.inputs[0],"Atanh","atanh"))},pi=e=>he(e),mi=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute \'to\' from \'Cast\' operator): ${t.to}`)}e.compute(Ie(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},Yl=e=>{let t=e.length>=2&&e[1].data!==0?e[1].getFloat32Array()[0]:wn,r=e.length>=3&&e[2].data!==0?e[2].getFloat32Array()[0]:vn;return he({min:t,max:r})},fi=(e,t)=>{let r=e.inputs.length===1?t:Yl(e.inputs),o=yt(e.inputs[0].dataType);e.compute(Ie(e.inputs[0],"Clip",n=>`clamp(${n}, clip_min_, clip_max_)`,`\n    const clip_min_: vec4<${o}> = vec4(${o}(${r.min}));\n    const clip_max_: vec4<${o}> = vec4(${o}(${r.max}));\n`,r.cacheKey),{inputs:[0]})},hi=e=>{e.compute(Ie(e.inputs[0],"Ceil","ceil"))},gi=e=>{e.compute(Ie(e.inputs[0],"Cos","cos"))},yi=e=>{e.compute(Ie(e.inputs[0],"Cosh","cosh"))},Cn=e=>he(e),bi=(e,t)=>{let r=yt(e.inputs[0].dataType);e.compute(Ie(e.inputs[0],"Elu",o=>`elu_vf32(${o})`,`\n  const elu_alpha_ = ${r}(${t.alpha});\n\n  fn elu_f32(a: ${r}) -> ${r} {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<${r}>) -> vec4<${r}> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,t.cacheKey))},In=(e,t="f32")=>`\nconst r0: ${t} = 0.3275911;\nconst r1: ${t} = 0.254829592;\nconst r2: ${t} = -0.284496736;\nconst r3: ${t} = 1.421413741;\nconst r4: ${t} = -1.453152027;\nconst r5: ${t} = 1.061405429;\n\nfn erf_vf32(v: ${e}) -> ${e} {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,wi=e=>{let t=yt(e.inputs[0].dataType);e.compute(Ie(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,In(`vec4<${t}>`,t)))},vi=e=>{e.compute(Ie(e.inputs[0],"Exp","exp"))},$i=e=>{e.compute(Ie(e.inputs[0],"Floor","floor"))},Si=e=>{let t=yt(e.inputs[0].dataType);e.compute(Ie(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,In(`vec4<${t}>`,t)))},xi=(e,t)=>{let r=yt(e.inputs[0].dataType);e.compute(Ie(e.inputs[0],"LeakyRelu",o=>`select(leaky_relu_alpha_ * ${o}, ${o}, ${o} >= vec4<${r}>(0.0))`,`const leaky_relu_alpha_ = ${r}(${t.alpha});`,t.cacheKey))},_i=e=>{e.compute(Ie(e.inputs[0],"Not",t=>`!${t}`))},Ci=e=>{e.compute(Ie(e.inputs[0],"Neg",t=>`-${t}`))},Ii=e=>{e.compute(Ie(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},Ai=e=>{let t=yt(e.inputs[0].dataType);e.compute(Ie(e.inputs[0],"Relu",r=>`select(vec4<${t}>(0.0), ${r}, ${r} > vec4<${t}>(0.0))`))},Ti=e=>{e.compute(Ie(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},Ei=e=>{e.compute(Ie(e.inputs[0],"Sin","sin"))},Oi=e=>{e.compute(Ie(e.inputs[0],"Sinh","sinh"))},Pi=e=>{e.compute(Ie(e.inputs[0],"Sqrt","sqrt"))},Ri=e=>{e.compute(Ie(e.inputs[0],"Tan","tan"))},ki=e=>{e.compute(Ie(e.inputs[0],"Tanh","tanh"))},Bi=(e,t)=>{let r=yt(e.inputs[0].dataType);return e.compute(Ie(e.inputs[0],"ThresholdedRelu",o=>`select(vec4<${r}>(0.0), ${o}, ${o} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${r}>(${t.alpha});`,t.cacheKey)),0},Di=e=>{e.compute(Ie(e.inputs[0],"Log","log"))}});var Ql,Xl,Mi,zi=X(()=>{"use strict";Se();$e();mo();Ql=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Xl=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=z("input",e[0].dataType,e[0].dims,4),o=z("bias",e[0].dataType,[e[0].dims[2]],4),n=Q("output",e[0].dataType,t,4),u=N.size(t)/4,l=Ge(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)}}),getShaderSource:a=>`\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${e[0].dims[2]/4/2}u;\n\n  ${a.declareVariables(r,o,n)}\n\n  ${In(`vec4<${l}>`,l)}\n\n  ${a.mainStart()}\n    ${a.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${n.setByOffset("global_idx","valueLeft * geluRight")}\n  }`}},Mi=e=>{Ql(e.inputs),e.compute(Xl(e.inputs))}});var Jl,ed,St,Ui,Vi,Ni,Wi,Hi,Gi,Li,Fi,ji,qi,Ki=X(()=>{"use strict";Ve();Se();$e();Jl=(e,t,r,o,n,u,l,d,a,f,g,y,v)=>{let $,b;typeof d=="string"?$=b=(k,U)=>`${d}((${k}),(${U}))`:typeof d=="function"?$=b=d:($=d.scalar,b=d.vector);let C=y?t.length:t,A=y?r.length:r,S=y?o.length:o,_=Q("outputData",g,S,4),E=z("aData",a,C,4),T=z("bData",f,A,4),V;if(n)if(u){let k=N.size(t)===1,U=N.size(r)===1,W=t.length>0&&t[t.length-1]%4===0,Z=r.length>0&&r[r.length-1]%4===0;k||U?V=_.setByOffset("global_idx",b(k?`${E.type.value}(${E.getByOffset("0")}.x)`:E.getByOffset("global_idx"),U?`${T.type.value}(${T.getByOffset("0")}.x)`:T.getByOffset("global_idx"))):V=`\n            let outputIndices = ${_.offsetToIndices("global_idx * 4u")};\n            let offsetA = ${E.broadcastedIndicesToOffset("outputIndices",_)};\n            let offsetB = ${T.broadcastedIndicesToOffset("outputIndices",_)};\n            ${_.setByOffset("global_idx",b(l||W?E.getByOffset("offsetA / 4u"):`${E.type.value}(${E.getByOffset("offsetA / 4u")}[offsetA % 4u])`,l||Z?T.getByOffset("offsetB / 4u"):`${T.type.value}(${T.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}\n          `}else V=_.setByOffset("global_idx",b(E.getByOffset("global_idx"),T.getByOffset("global_idx")));else{if(!u)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let k=(U,W,Z="")=>{let B=`aData[indexA${W}][componentA${W}]`,F=`bData[indexB${W}][componentB${W}]`;return`\n            let outputIndices${W} = ${_.offsetToIndices(`global_idx * 4u + ${W}u`)};\n            let offsetA${W} = ${E.broadcastedIndicesToOffset(`outputIndices${W}`,_)};\n            let offsetB${W} = ${T.broadcastedIndicesToOffset(`outputIndices${W}`,_)};\n            let indexA${W} = offsetA${W} / 4u;\n            let indexB${W} = offsetB${W} / 4u;\n            let componentA${W} = offsetA${W} % 4u;\n            let componentB${W} = offsetB${W} % 4u;\n            ${U}[${W}] = ${Z}(${$(B,F)});\n          `};g===9?V=`\n            var data = vec4<u32>(0);\n            ${k("data",0,"u32")}\n            ${k("data",1,"u32")}\n            ${k("data",2,"u32")}\n            ${k("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:V=`\n            ${k("outputData[global_idx]",0)}\n            ${k("outputData[global_idx]",1)}\n            ${k("outputData[global_idx]",2)}\n            ${k("outputData[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(E,T,_)}\n\n        ${v??""}\n\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${V}\n      }`},ed=(e,t,r,o,n,u,l=r.dataType)=>{let d=!N.areEqual(r.dims,o.dims),a=r.dims,f=N.size(r.dims),g=!1,y=!1,v=[d];if(d){let b=gt.calcShape(r.dims,o.dims,!1);if(!b)throw new Error("Can\'t perform binary op on the given tensors");a=b,f=N.size(a);let C=N.size(r.dims)===1,A=N.size(o.dims)===1,S=r.dims.length>0&&r.dims[r.dims.length-1]%4===0,_=o.dims.length>0&&o.dims[o.dims.length-1]%4===0;v.push(C),v.push(A),v.push(S),v.push(_);let E=1;for(let T=1;T<a.length;T++){let V=r.dims[r.dims.length-T]??1,k=o.dims[o.dims.length-T]??1;if(V===k)E*=V;else break}E%4===0?(y=!0,g=!0):(C||A||S||_)&&(g=!0)}else g=!0;v.push(g);let $=Pe(r.dims.length)&&Pe(o.dims.length)&&Pe(a.length);return{name:e,shaderCache:{hint:t+v.map(b=>b.toString()).join("_"),inputDependencies:$?["rank","rank"]:["dims","dims"]},getShaderSource:b=>Jl(b,r.dims,o.dims,a,g,d,y,n,r.dataType,o.dataType,l,$,u),getRunData:()=>({outputs:[{dims:a,dataType:l}],dispatchGroup:{x:Math.ceil(f/64/4)},programUniforms:$?[{type:"uint32",data:Math.ceil(N.size(a)/4)},...j(r.dims),...j(o.dims),...j(a)]:[{type:"uint32",data:Math.ceil(N.size(a)/4)}]})}},St=(e,t,r,o,n,u)=>{e.compute(ed(t,n??"",e.inputs[0],e.inputs[1],r,o,u))},Ui=e=>{St(e,"Add",(t,r)=>`${t}+${r}`)},Vi=e=>{St(e,"Div",(t,r)=>`${t}/${r}`)},Ni=e=>{St(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},Wi=e=>{St(e,"Mul",(t,r)=>`${t}*${r}`)},Hi=e=>{let t=z("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;St(e,"Pow",{scalar:(o,n)=>`pow_custom(${o},${n})`,vector:(o,n)=>`pow_vector_custom(${o},${n})`},`\n    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {\n      if (b == ${t}(0.0)) {\n        return ${t}(1.0);\n      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {\n        return ${t}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {\n      // TODO: implement vectorized pow\n      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `)},Gi=e=>{St(e,"Sub",(t,r)=>`${t}-${r}`)},Li=e=>{St(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},Fi=e=>{St(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},ji=e=>{St(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},qi=e=>{St(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}});var rd,nd,od,ad,Yi,Zi,Qi=X(()=>{"use strict";Se();Fe();$e();rd=e=>{if(!e||e.length<1)throw new Error("too few inputs");let t=e[0].dataType,r=e[0].dims.length;for(let o of e){if(o.dataType!==t)throw new Error("input tensors should be one type");if(o.dims.length!==r)throw new Error("input tensors should have the same shape")}},nd=(e,t)=>`\n  fn calculateInputIndex(index: u32) -> u32 {\n    let sizeInConcatAxis = array<u32, ${e}u>(${t});\n    for (var i: u32 = 0u; i < ${e}; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${e}u;\n  }`,od=(e,t)=>{let r=e.length,o=[];for(let n=0;n<r;++n){let u=t.setByOffset("global_idx",e[n].getByIndices("indices"));r===1?o.push(u):n===0?o.push(`if (inputIndex == ${n}u) { ${u} }`):n===r-1?o.push(`else { ${u} }`):o.push(`else if (inputIndex == ${n}) { ${u} }`)}return o.join(`\n`)},ad=(e,t)=>{let r=e[0].dims.slice();if(t>=r.length||t<-1*r.length)throw new Error("axis specified for concat doesn\'t match input dimensionality");let o=t<0?r.length+t:t,n=r.slice(0);for(let T=1;T<e.length;T++){let V=e[T].dims.slice();for(let k=0;k<r.length;k++)if(k===o)n[o]+=V[k];else if(r[k]!==V[k])throw new Error("non concat dimensions must match")}let u=N.size(n),l=new Array(e.length),d=new Array(e.length),a=e[0].dataType,f=0,g=[],y=[],v=[],$=[{type:"uint32",data:u}];for(let T=0;T<e.length;++T)f+=e[T].dims[o],l[T]=f,v.push(Pe(e[T].dims.length)),y.push(v[T]?e[T].dims.length:e[T].dims),d[T]=z(`input${T}`,a,y[T]),g.push(v[T]?"rank":"dims"),$.push({type:"uint32",data:l[T]});for(let T=0;T<e.length;++T)v[T]&&$.push(...j(e[T].dims));let b=Pe(n.length);b&&$.push(...j(n));let C=b?n.length:n,A=Q("output",a,C),S=A.indicesGet("indices",o),_=Array.from(Array(l.length).keys()).map(T=>`uniforms.sizeInConcatAxis${T}`).join(","),E=T=>`\n\n  ${(()=>{T.registerUniform("outputSize","u32");for(let V=0;V<e.length;V++)T.registerUniform(`sizeInConcatAxis${V}`,"u32");return T.declareVariables(...d,A)})()}\n\n  ${nd(l.length,_)}\n\n  ${T.mainStart()}\n    ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n    var indices = ${A.offsetToIndices("global_idx")};\n\n    let inputIndex = calculateInputIndex(${S});\n    if (inputIndex != 0u) {\n      let sizeInConcatAxis = array<u32, ${l.length}u>(${_});\n      ${S} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${od(d,A)}\n  }`;return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:g},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:$}),getShaderSource:E}},Yi=(e,t)=>{rd(e.inputs),e.compute(ad(e.inputs,t.axis))},Zi=e=>he({axis:e.axis})});var xt,An,Rt=X(()=>{"use strict";Se();xt=(e,t)=>{switch(e.activation){case"Relu":return{activationFunction:"",applyActivation:`value = max(value, ${t}(0.0));`};case"Sigmoid":return{activationFunction:"",applyActivation:`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`};case"Clip":return{activationFunction:`const clip_min_=${t}(${e.clipMin});const clip_max_=${t}(${e.clipMax});`,applyActivation:"value = clamp(value, clip_min_, clip_max_);"};default:return{activationFunction:"",applyActivation:""}}},An=e=>{let t=e?.activation||"";if(t==="Clip"){let[r,o]=e?.activation_params||[wn,vn];return{activation:t,clipMax:o,clipMin:r,activationCacheKey:`${t}:${r},${o}`}}return{activation:t,activationCacheKey:t}}});var Ke,Tn,En=X(()=>{"use strict";Ke=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},Tn=e=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      `});var On,fo=X(()=>{"use strict";On=e=>`\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));\n}\n`});var id,sd,Or,Xi,ud,Pr,ld,Pn,Rr=X(()=>{"use strict";Se();$e();Rt();En();id=(e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `,sd=(e,t)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`,Or=(e,t,r="f32",o,n=!1,u=32,l=!1,d=32)=>{let a=t[1]*e[1],f=t[0]*e[0],g=n?a:u,y=n?u:a,v=g/t[0],$=u/t[1];if(!((n&&v===4&&e[1]===4||!n&&(v===3||v===4))&&g%t[0]===0&&u%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${n} is true, innerElementSize ${v} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${v} must be 3 or 4.\n  tileAWidth ${g} must be divisible by workgroupSize[0]${t[0]}. tileInner ${u} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub: array<array<vec${v}<${r}>, ${g/v}>, ${y}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${r}>, ${f/e[0]}>, ${u}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${v};\nconst tileInner = ${u};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${l?"0":"i32(globalId.z)"};\n  ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n  let globalRowStart = i32(workgroupId.y) * ${a};\n\n  let numTiles = ${l?`${Math.ceil(d/u)}`:"(uniforms.dimInner - 1) / tileInner + 1"};\n  var kStart = ${l?`i32(globalId.z) * ${d}`:"0"};\n\n  var acc: array<vec4<${r}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${$};\n  for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${id(n,o)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${$}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${o?", batchIndices":""});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${v===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${sd(n,v)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`},Xi=(e,t)=>e?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${t?", batchIndices":""});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${t?", batchIndices":""});\n            `,ud=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Pr=(e,t,r="f32",o,n=!1,u=32,l=!1,d=32,a=!1)=>{let f=e[1]*t[1],g=e[0]*t[0],y=n?f:u,v=n?u:f;if(!(v%t[1]===0&&y%t[0]===0&&u%t[1]===0))throw new Error(`tileAHight ${v} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${y} must be divisible by workgroupSize[0]${t[0]}, tileInner ${u} must be divisible by workgroupSize[1]${t[1]}`);let $=v/t[1],b=y/t[0],C=u/t[1],A=a?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${f};\n    let globalColStart = i32(workgroupId.x) * ${g};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${v}; inputRow = inputRow + ${t[1]}) {\n        for (var inputCol = localCol; inputCol < ${y}; inputCol = inputCol + ${t[0]}) {\n          ${Xi(n,o)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${u}; inputRow = inputRow + ${t[1]}) {\n            for (var inputCol = localCol; inputCol < ${g}; inputCol = inputCol + ${t[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${o?", batchIndices":""});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${r}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${n?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${f};\n\nlet tileRowA = i32(localId.y) * ${$};\nlet tileColA = i32(localId.x) * ${b};\nlet tileRowB = i32(localId.y) * ${C};\n// Loop over shared dimension.\nfor (var t = 0; t < numTiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${$}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${b}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${Xi(n,o)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${C}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${o?", batchIndices":""});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${r}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${ud(n)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<${r}, ${y}>, ${v}>;\n  var<workgroup> mm_Bsub : array<array<${r}, ${g}>, ${u}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${u};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${l?"0":"i32(globalId.z)"};\n    ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n    let numTiles = ${l?`${Math.ceil(d/u)}`:"(uniforms.dimInner - 1) / tileInner + 1"};\n    var kStart = ${l?`i32(globalId.z) * ${d}`:"0"};\n\n    var acc : array<array<${r}, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${A}\n  }\n`},ld=(e,t,r,o,n,u=!1)=>{let[l,d,a]=n,[f,g,y,v]=o,$=sr(l,a),b=sr(d,a),C=Ge(o[0].type.tensor),A=()=>{let E=g.rank,T=f.rank,V=`var aIndices: ${g.type.indices};`;for(let k=E-2-1,U=T-1;k>=0;k--,U--)V+=`\naIndices[${k}] = ${T>1?`batchIndices[${U}]`:"batchIndices"};`;return $.forEach(k=>{V+=`\naIndices[${k}] = 0;`}),V+=`\naIndices[${E-2}] = u32(row);\n                   aIndices[${E-1}] = u32(colIn);`,V},S=()=>{let E=y.rank,T=f.rank,V=`var bIndices: ${y.type.indices};`;for(let k=E-2-1,U=T-1;k>=0;k--,U--)V+=`\nbIndices[${k}] = ${T>1?`batchIndices[${U}]`:"batchIndices"};`;return b.forEach(k=>{V+=`\nbIndices[${k}] = 0;`}),V+=`\nbIndices[${E-2}] = u32(row);\n                   bIndices[${E-1}] = u32(colIn);`,V};return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${f.type.indices}) -> ${Ke(e,C)} {\n      var value = ${Ke(e,C)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dimAOuter && col < uniforms.dimInner)\n      {\n        ${A()}\n        value = ${g.getByIndices("aIndices")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${f.type.indices}) -> ${Ke(e,C)} {\n      var value = ${Ke(e,C)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dimInner && col < uniforms.dimBOuter)\n      {\n        ${S()}\n        value = ${y.getByIndices("bIndices")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${Ke(e,C)}) {\n      let col = colIn * ${e};\n      if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${t?`value = value + ${u?"bias[colIn]":`${Ke(e,C)}(bias[row])`};`:""}\n        ${r}\n        ${v.setByIndices("vec3<u32>(coords)","value")}\n      }\n    }\n    `},Pn=(e,t,r,o,n=!1)=>{let u=e[0].dims,l=e[1].dims,d=u.slice(0,-2),a=l.slice(0,-2),f=o?o.slice(0,-2):r.slice(0,-2),g=Pe(f.length),y=g?f.length:f,v=$n("batchDims",e[0].dataType,y,1),$=N.size(f),b=u[u.length-2],C=u[u.length-1],A=l[l.length-1],S=C%4===0&&A%4===0,_=b<=8?[4,1,1]:[4,4,1],E=[8,8,1],T=[Math.ceil(A/E[0]/_[0]),Math.ceil(b/E[1]/_[1]),Math.ceil($/E[2]/_[2])],V=Ge(e[0].dataType),k=S?4:1,U=[...d,b,C/k],W=Pe(U.length),Z=W?U.length:U,B=[...a,C,A/k],F=Pe(B.length),J=F?B.length:B,te=[$,b,A/k],re=z("a",e[0].dataType,Z,k),Ee=z("b",e[1].dataType,J,k),Be=Q("result",e[0].dataType,te.length,k),fe=[re,Ee],Ae=[{type:"int32",data:b},{type:"int32",data:A},{type:"int32",data:C}];g&&Ae.push(...j(f)),W&&Ae.push(...j(U)),F&&Ae.push(...j(B));let ge=[];ge.push(W?"rank":"dims"),ge.push(F?"rank":"dims");let ye=e.length>2,{activationFunction:He,applyActivation:De}=xt(t,Be.type.value),Me=ld(k,ye,De,[v,re,Ee,Be],[d,a,f],n);if(ye){let ne=n?k:1;fe.push(z("bias",e[2].dataType,e[2].dims.length,ne)),Ae.push(...j(e[2].dims)),ge.push("rank")}Ae.push(...j(te));let L=ne=>`\n  ${ne.registerUniform("dimAOuter","i32").registerUniform("dimBOuter","i32").registerUniform("dimInner","i32").registerInternalVariables(v).declareVariables(...fe,Be)}\n  ${He}\n  ${Me}\n  ${S?Or(_,E,V,v):Pr(_,E,V,v)}\n                   `;return{name:"MatMul",shaderCache:{hint:t.activationCacheKey+`${_}${S}${n}`,inputDependencies:ge},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:T[0],y:T[1],z:T[2]},programUniforms:Ae}),getShaderSource:L}}});var dd,Ji,es=X(()=>{"use strict";Pt();$e();Rt();En();fo();Rr();dd=(e,t,r,o,n=!1,u,l=4,d=4,a=4,f="f32")=>{let g=F=>{switch(F){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${f}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${F} is not supported.`)}},y=F=>{switch(F){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${F} is not supported.`)}},v=e?`\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    `:`\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    `,$=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,b=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",C=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",A=e?"row":"col",S=e?"col":"row",_=`\n    let inChannels = i32(uniforms.w_shape[2]);\n    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n    let outRow = ${A} / outWidth;\n    let outCol = ${A} % outWidth;\n\n    let WRow = ${S} / (filterDims[1] * inChannels);\n    let WCol = ${S} / inChannels % filterDims[1];\n    let xRow = outRow * stride[0] + dilation[0] * WRow - pad[0];\n    let xCol = outCol * stride[1] + dilation[1] * WCol - pad[1];\n    let xCh = ${S} % inChannels;\n    var resData = ${Ke(l,f)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the \'same\' padding type.\n    if (xRow >= 0 && xRow < ${b} && xCol >= 0 && xCol < ${C}) {\n      ${v}\n      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));\n      ${g(l)}\n    }\n    return resData;`,E=e?t&&o?`\n    let col = colIn * ${l};\n    ${_}`:`\n    let col = colIn * ${l};\n    if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n      ${_}\n    }\n    return ${Ke(l,f)}(0.0);`:o&&r?`\n    let col = colIn * ${l};\n    ${_}`:`\n    let col = colIn * ${l};\n    if (row < uniforms.dimInner && col < uniforms.dimBOuter) {\n      ${_}\n    }\n    return ${Ke(l,f)}(0.0);`,T=`${y(d)}`,V=Ke(a,f),k=e?Ke(l,f):Ke(d,f),U=e?Ke(d,f):Ke(l,f),{activationFunction:W,applyActivation:Z}=xt(u,V);return`\n    ${W}\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${k} {\n      ${e?E:T}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${U} {\n      ${e?T:E}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${V}) {\n      let col = colIn * ${a};\n      if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${$}\n      ${Tn(n)}\n      ${Z}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`},Ji=(e,t,r,o,n,u,l,d)=>{let a=t.format==="NHWC",f=a?e[0].dims[3]:e[0].dims[1],g=r[0],y=a?r[2]:r[3],v=a?r[1]:r[2],$=a?r[3]:r[1],b=a&&(f%4===0||f%3===0)&&$%4===0,C=a?$:y*v,A=a?y*v:$,S=[8,8,1],_=o<=8?[4,1,1]:[4,4,1],E=[Math.ceil(C/S[0]/_[0]),Math.ceil(A/S[1]/_[1]),Math.ceil(g/S[2]/_[2])];ke("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${E}`);let T=b?a&&f%4!==0?3:4:1,V=S[1]*_[1],k=S[0]*_[0],U=Math.max(S[0]*T,S[1]),W=o%V===0,Z=n%k===0,B=u%U===0,F=b?[T,4,4]:[1,1,1],J=Ge(e[0].dataType),te=b?4:1,re=[{type:"int32",data:o},{type:"int32",data:n},{type:"int32",data:u}],Ee=z("x",e[0].dataType,e[0].dims.length,T===3?1:T),Be=z("w",e[1].dataType,e[1].dims.length,te),fe=[Ee,Be];re.push(...j(e[0].dims)),re.push(...j(e[1].dims));let Ae=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${b?`vec4<${J}>`:J}) {\n        result[flatIndex] = ${b?`vec4<${J}>`:J}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${b?`vec4<${J}>`:J}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${b?"/ 4":""}, value);\n      }`;if(l){let ye=z("bias",e[2].dataType,e[2].dims.length,te);fe.push(ye),re.push(...j(e[2].dims)),Ae+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${b?`vec4<${J}>`:J} {\n          return bias[coords.${a?"w":"y"}${b?"/ 4":""}];\n        }`}let ge=Q("result",e[0].dataType,r.length,te);return re.push(...j(r)),{name:"Conv2DMatMul",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]},programUniforms:re}),getShaderSource:ye=>`\n        ${On("uniforms.result_strides")}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${ye.registerUniform("dimAOuter","i32").registerUniform("dimBOuter","i32").registerUniform("dimInner","i32").declareVariables(...fe,ge)}\n        const filterDims : vec2<i32> = vec2<i32>(${t.kernelShape[0]}, ${t.kernelShape[1]});\n        const pad : vec2<i32> = vec2<i32>(${t.pads[0]}, ${t.pads[1]});\n        const stride : vec2<i32> = vec2<i32>(${t.strides[0]}, ${t.strides[1]});\n        const dilation : vec2<i32> = vec2<i32>(${t.dilations[0]}, ${t.dilations[1]});\n        ${Ae}\n        ${dd(a,W,Z,B,l,t,F[0],F[1],F[2],J)}\n            ${b?Or(_,S,J,void 0,!a,U):Pr(_,S,J,void 0,!a,U,!1,void 0,d)}`}}});var ho,ts=X(()=>{"use strict";Se();$e();yo();Rt();ho=(e,t,r)=>{let o=e.length>2,n=o?"value += b[output_channel];":"",u=e[0].dims,l=e[1].dims,d=l[0]/t.group,a=t.format==="NHWC",f=go(u,l,t.dilations,t.pads,t.strides,a),g=N.size(f),y=Q("output",e[0].dataType,f),{activationFunction:v,applyActivation:$}=xt(t,y.type.value),b=z("x",e[0].dataType,u),C=z("w",e[1].dataType,l),A=[b,C];o&&A.push(z("b",e[2].dataType,e[2].dims));let S=_=>`\n  const strides: vec2<u32> = vec2(${t.strides[0]}u, ${t.strides[1]}u);\n  const pads: vec2<u32> = vec2(${t.pads[0]}u, ${t.pads[1]}u);\n\n  ${_.declareVariables(...A,y)}\n\n  ${v}\n\n  ${_.mainStart()}\n    ${_.guardAgainstOutOfBoundsWorkgroupSizes(g)}\n\n    let outputIndices = ${y.offsetToIndices("global_idx")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${a?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${a?1:2}], outputIndices[${a?2:3}]) * strides - pads;\n    let group_id: u32 = output_channel / ${d}u;\n\n    var value: ${y.type.value} = ${y.type.value}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < ${l[1]}u; wInChannel++) {\n      let input_channel = group_id * ${l[1]}u + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < ${l[2]}u; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * ${t.dilations[0]}u;\n\n        if (xHeight < 0u || xHeight >= ${u[a?1:2]}u) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < ${l[3]}u; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * ${t.dilations[1]}u;\n          if (xWidth < 0u || xWidth >= ${u[a?2:3]}u) {\n            continue;\n          }\n\n          let xVal = ${a?b.get("batch","xHeight","xWidth","input_channel"):b.get("batch","input_channel","xHeight","xWidth")};\n          let wVal = ${C.get("output_channel","wInChannel","wHeight","wWidth")};\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${n}\n    ${$}\n    ${y.setByOffset("global_idx","value")}\n  }`;return{name:"GroupedConv",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:r?r(f):f,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(g/64)}}),getShaderSource:S}}});var bo,cd,rs,wo=X(()=>{"use strict";Se();Rr();$e();Rt();bo=(e,t,r,o,n=!1)=>{let u=e[0].dims,l=e[1].dims,d=u[u.length-2],a=l[l.length-1],f=u[u.length-1],g=Le(a),y=Le(f),v=Le(d),$=N.size(r)/g/v,b=e.length>2,C=o?o.slice(0,-2):r.slice(0,-2),S=[N.size(C),d,a],_=[{type:"uint32",data:$},{type:"uint32",data:d},{type:"uint32",data:a},{type:"uint32",data:f},...j(C),...j(u),...j(l)];b&&_.push(...j(e[2].dims)),_.push(...j(S));let E=T=>{let V=$n("batch_dims",e[0].dataType,C.length),k=z("a",e[0].dataType,u.length,y),U=z("b",e[1].dataType,l.length,g),W=Q("output",e[0].dataType,S.length,g),{activationFunction:Z,applyActivation:B}=xt(t,W.type.value),F=[k,U],J="";if(b){let ge=n?g:1;F.push(z("bias",e[2].dataType,e[2].dims.length,ge)),J=`${n?`value += bias[col / ${ge}];`:`value += ${W.type.value}(bias[row + i]);`}`}let te=u.slice(0,-2),re=l.slice(0,-2),Ee=sr(te,C),Be=sr(re,C),fe=(ge,ye)=>{let He=ge.rank,De=ge.name;if(He===2)return`var ${De}_indices = ${ge.type.indices}(0u, 0u);`;let Me=V.rank,L=`var ${De}_indices: ${ge.type.indices};`;for(let ne=He-2-1,be=Me-1;ne>=0;ne--,be--)L+=`\n${De}_indices[${ne}] = ${Me>1?`batch_indices[${be}]`:"batch_indices"};`;return ye.forEach(ne=>{L+=`\n${De}_indices[${ne}] = 0;`}),L+=`${De}_indices[${He-2}] = 0u;\n                     ${De}_indices[${He-1}] = 0u;`,L},Ae=()=>{let ge=`var a_data: ${k.type.value};`;for(let ye=0;ye<y;ye++)ge+=`\n              let b_data${ye} = b[(b_offset + (k + ${ye}) * uniforms.N + col) / ${g}];`;for(let ye=0;ye<v;ye++){ge+=`a_data = a[(a_offset + (row + ${ye}) * uniforms.K + k) / ${y}];`;for(let He=0;He<y;He++)ge+=`\n            values[${ye}] = fma(${U.type.value}(a_data${y===1?"":`[${He}]`}), b_data${He}, values[${ye}]);\n`}return ge};return`\n  ${T.registerUniform("outputSize","u32").registerUniform("M","u32").registerUniform("N","u32").registerUniform("K","u32").registerInternalVariables(V).declareVariables(...F,W)}\n  ${Z}\n  ${T.mainStart()}\n    ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n    let col = (global_idx % (uniforms.N / ${g})) * ${g};\n    var index1 = global_idx / (uniforms.N / ${g});\n    let stride1 = uniforms.M / ${v};\n    let row = (index1 % stride1) * ${v};\n    let batch = index1 / stride1;\n\n    ${r.length===2?"":`let batch_indices = ${V.offsetToIndices("batch")};`}\n    ${fe(k,Ee)}\n    let a_offset = ${k.indicesToOffset("a_indices")};\n    ${fe(U,Be)}\n    let b_offset = ${U.indicesToOffset("b_indices")};\n    var values: array<${W.type.value}, ${v}>;\n    for (var k: u32 = 0u; k < uniforms.K; k = k + ${y}) {\n      ${Ae()}\n    }\n    for (var i = 0u; i < ${v}u; i++) {\n      var value = values[i];\n      ${J}\n      ${B}\n      let cur_indices = ${W.type.indices}(batch, row + i, col);\n      let offset = ${W.indicesToOffset("cur_indices")};\n      ${W.setByOffset(`offset / ${g}`,"value")};\n    }\n  }\n  `};return{name:"MatMulNaive",shaderCache:{hint:`${t.activationCacheKey}_${g}_${y}_${v}_${n}`,inputDependencies:b?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil($/64)},programUniforms:_}),getShaderSource:E}},cd=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},rs=e=>{cd(e.inputs);let t=gt.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can\'t use matmul on the given tensors");let r=t[t.length-1],o=e.inputs[0].dims[e.inputs[0].dims.length-1];r<8&&o<8?e.compute(bo(e.inputs,{activation:"",activationCacheKey:""},t)):e.compute(Pn(e.inputs,{activation:"",activationCacheKey:""},t))}});var go,ns,pd,os,vo,md,fd,$o,yo=X(()=>{"use strict";Se();Fe();es();Rr();ts();Rt();wo();ur();go=(e,t,r,o,n,u)=>{let l=e[0],d=e.slice(u?1:2,u?3:4),a=d.length,f=t[0],y=t.slice(2).map((b,C)=>b+(b-1)*(r[C]-1)),$=d.map((b,C)=>b+o[C]+o[C+a]).map((b,C)=>Math.floor((b-y[C]+n[C])/n[C]));return $.splice(0,0,l),$.splice(u?3:1,0,f),$},ns=[2,3,1,0],pd=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[1]*t.group;if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let n=e[0].dims.length-2;if(t.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(t.strides.length!==n)throw new Error(`strides should be ${n}D`);if(t.pads.length!==n*2)throw new Error(`pads should be ${n*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},os=(e,t)=>{let r=e.kernelShape.slice();for(let u=2;u<t[1].dims.length;++u)r[u-2]===0&&(r[u-2]=t[1].dims[u]);let o=e.pads.slice();Ht.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,o,e.format==="NHWC",e.autoPad);let n=Object.assign({},e);return Object.assign(n,{kernelShape:r,pads:o,cacheKey:e.cacheKey}),n},vo=e=>{let t=An(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],n=e.dilations,u=e.group,l=e.kernel_shape,d=e.pads,a=e.strides,f=e.w_is_const();return he({autoPad:o,format:r,dilations:n,group:u,kernelShape:l,pads:d,strides:a,wIsConst:f,...t})},md=(e,t,r)=>{let o=os(r,t),n=r.format==="NHWC";if(r.group!==1){e.compute(ho(t,o));return}let u=t.length===3,l=t[0].dims[n?1:2],d=t[0].dims[n?2:3],a=t[0].dims[n?3:1],f=t[1].dims[2],g=t[1].dims[3],y=go(t[0].dims,t[1].dims,r.dilations,o.pads,r.strides,n),v=y[n?1:2],$=y[n?2:3],b=y[n?3:1],C=n&&f===l&&g===d&&r.pads[0]===0&&r.pads[1]===0;if(C||f===1&&g===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let k=y[0],U,W,Z,B=[];if(n){let te=e.kernelCustomData.wT??e.compute(ft(t[1],ns),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=te),C){let re=l*d*a;U=t[0].reshape([1,k,re]),W=te.reshape([1,re,b]),Z=[1,k,b]}else U=t[0].reshape([k,l*d,a]),W=te.reshape([1,a,b]),Z=[k,v*$,b];B.push(U),B.push(W)}else U=t[0].reshape([k,a,l*d]),W=t[1].reshape([1,b,a]),Z=[k,b,v*$],B.push(W),B.push(U);u&&B.push(t[2]);let F=Z[2],J=B[0].dims[B[0].dims.length-1];F<8&&J<8?e.compute(bo(B,o,y,Z,n),{inputs:B}):e.compute(Pn(B,o,y,Z,n),{inputs:B});return}let A=!0,S=e.kernelCustomData.wT??e.compute(ft(t[1],ns),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=S);let _=[t[0],S];u&&_.push(t[2]);let E=n?v*$:b,T=n?b:v*$,V=f*g*a;e.compute(Ji(_,o,y,E,T,V,u,A),{inputs:_})},fd=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&o.push(e.inputs[2]);let n=[0,t.pads[0],0,t.pads[1]],u=[1].concat(t.strides),l=[1].concat(t.dilations),d=[1].concat(t.kernelShape),a=os({...t,pads:n,strides:u,dilations:l,kernelShape:d},o);e.compute(ho(o,a,f=>r?[f[0],f[2],f[3]]:[]))},$o=(e,t)=>{pd(e.inputs,t),e.inputs[0].dims.length===3?fd(e,t):md(e,e.inputs,t)}});var hd,as,is=X(()=>{"use strict";Pt();$e();Rt();En();fo();Rr();hd=(e,t=!1,r,o=4)=>{let n=Ke(o,"f32"),u=_=>{switch(_){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];\n            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];\n            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];\n            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];\n            return vec4<f32>(v0, v1, v2, v3);\n            `;default:throw new Error(`innerElementSize ${_} is not supported.`)}},l=e?`\n      let coord = vec4<i32>(batch, iXR, iXC, xCh);\n      `:`\n      let coord = vec4<i32>(batch, xCh, iXR, iXC);\n      `,d=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,a=e?"outBackprop[1]":"outBackprop[2]",f=e?"outBackprop[2]":"outBackprop[3]",g=e?"row":"col",y=e?"col":"row",v=`\n      let inChannels = ${e?"outBackprop[3]":"outBackprop[1]"};\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      let outRow = ${g} / outWidth;\n      let outCol = ${g} % outWidth;\n\n      let WRow = ${y} / (filterDims[1] * inChannels);\n      let WCol = ${y} / inChannels % filterDims[1];\n      let xR = f32(outRow - pads[0] + dilation[0] * WRow) / f32(strides[0]);\n      let xC = f32(outCol - pads[1] + dilation[1] * WCol) / f32(strides[1]);\n      if (xR < 0.0 || xR >= f32(${a}) || fract(xR) > 0.0) {\n        return ${n}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(${f}) || fract(xC) > 0.0) {\n        return ${n}(0.0);\n      }\n      let iXR = i32(xR);\n      let iXC = i32(xC);\n      let xCh = ${y} % inChannels;\n      ${l}\n      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${o}];`,$=e?`\n      let col = colIn * ${o};\n      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n        ${v}\n      }\n      return ${n}(0.0);`:`\n      let col = colIn * ${o};\n      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {\n        ${v}\n      }\n      return ${n}(0.0);`,b=`\n      let col = colIn * ${o};\n      let inChannels = ${e?"outBackprop[3]":"outBackprop[1]"};\n      let coordX = filterDims.x - 1 - row / (filterDims[1] * inChannels);\n      let coordY = filterDims.y - 1 - (row / inChannels) % filterDims[1];\n      if (${e?"row < uniforms.dimInner && col < uniforms.dimBOuter":"row < uniforms.dimInner && col < uniforms.dimAOuter"}  && coordX >= 0 && coordY >= 0) {\n        let rowInner = row % inChannels;\n        let coord = vec4<i32>(coordX, coordY, col, rowInner);\n        ${u(o)}\n      }\n      return ${n}(0.0);\n      `,{activationFunction:C,applyActivation:A}=xt(r,n);return`\n      ${C}\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${n} {\n    ${e?$:b}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${n} {\n    ${e?b:$}\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${n}) {\n    let col = colIn * ${o};\n    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {\n      var value = valueInput;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${d}\n      ${Tn(t)}\n      ${A}\n      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${o}] = value;\n    }\n  }`},as=(e,t,r,o,n,u,l,d)=>{let a=t.format==="NHWC",f=a?e[0].dims[3]:e[0].dims[1],g=r[0],y=a?r[2]:r[3],v=a?r[1]:r[2],$=a?r[3]:r[1],b=a?f%4===0&&$%4===0:y%4===0&&$%4===0,C=a?$:y*v,A=a?y*v:$,S=b?[8,8,1]:[C<=4||A<=4?4:16,C>4&&A<=4?4:16,1],_=b?[4,4,1]:[C<=4?1:4,C>4&&A<=4?1:4,1],E=[Math.ceil(C/S[0]/_[0]),Math.ceil(A/S[1]/_[1]),Math.ceil(g/S[2]/_[2])];ke("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${E}`);let T=b?4:1,V=Math.max(S[0]*T,S[1]),k=b?4:1,U=[{type:"int32",data:o},{type:"int32",data:n},{type:"int32",data:u}],W=z("x",e[0].dataType,e[0].dims.length,k),Z=z("w",e[1].dataType,e[1].dims.length,1),B=Q("result",e[0].dataType,r.length,k),F=[W,Z];U.push(...j(e[0].dims)),U.push(...j(e[1].dims));let J="";if(l){let te=z("bias",e[2].dataType,e[2].dims.length,k);F.push(te),U.push(...j(e[2].dims)),J+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${b?"vec4<f32>":"f32"} {\n          return bias[coords.${a?"w":"y"}${b?"/ 4":""}];\n        }`}return U.push(...j(r)),{name:"Conv2DTransposeMatMul",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]},programUniforms:U}),getShaderSource:te=>`\n        ${On("uniforms.result_strides")}\n        ${te.registerUniform("dimAOuter","i32").registerUniform("dimBOuter","i32").registerUniform("dimInner","i32").declareVariables(...F,B)};\n        const outBackprop : vec4<i32> = vec4<i32>(${e[0].dims.join(",")});\n        const filterDims : vec2<i32> = vec2<i32>(${t.kernelShape[a?1:2]}, ${t.kernelShape[a?2:3]});\n        const effectiveFilterDims : vec2<i32> = filterDims + vec2<i32>(\n              ${t.dilations[0]<=1?0:(t.kernelShape[a?1:2]-1)*(t.dilations[0]-1)},\n              ${t.dilations[1]<=1?0:(t.kernelShape[a?2:3]-1)*(t.dilations[1]-1)});\n        const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${t.pads[0]+t.pads[2]})/2,\n                                         i32(effectiveFilterDims[1]) - 1 - (${t.pads[1]+t.pads[3]})/2);\n        const strides : vec2<i32> = vec2<i32>(${t.strides[0]}, ${t.strides[1]});\n        const dilation : vec2<i32> = vec2<i32>(${t.dilations[0]}, ${t.dilations[1]});\n        const dimAOuter : i32 = ${o};\n        const dimBOuter : i32 = ${n};\n        const dimInner : i32 = ${u};\n        ${J}\n        ${hd(a,l,t,T)}\n        ${b?Or(_,S,"f32",void 0,!a,V):Pr(_,S,"f32",void 0,!a,V,!1,void 0,d)}`}}});var gd,So,ss=X(()=>{"use strict";Pt();Se();$e();gd=(e,t,r,o,n,u,l=!1,d)=>{let a=r.format==="NHWC",f=a?1:2,g=a?2:3,y=a?3:1,v=N.size(o),$=l?2:1,b=r.group,C=t[1].dims,A=C[0]/b,S=C[1],_=`\n  fn setOutputAtIndex(flatIndex : u32, value : ${l?`vec4<${d}>`:d}) {\n    result[flatIndex] = ${l?`vec4<${d}>`:d}(value);\n  }`;n&&(_+=`\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${l?`vec4<${d}>`:d} {\n      return bias[coords.${a?"w":"y"}${l?"/ 4":""}];\n    }`);let E=l?4:1,T=z("W",t[1].dataType,t[1].dims,E),V=z("Dy",t[0].dataType,t[0].dims,E),k=[V,T];n&&k.push(z("bias",t[2].dataType,[o[y]],E));let U=Q("result",t[0].dataType,o,E),W=`{\n        let batch: u32 = ${u?"global_id.z":"workgroup_id.z"} / outShape[1];\n        let r = ${u?"global_id.z":"workgroup_id.z"} % outShape[1];\n        let c = ${u?"global_id.y":"workgroup_id.y"} * ${$};\n        let d1: u32 = ${u?"global_id.x":"workgroup_id.x"} * 4;\n\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(pads);\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd: array<vec4<${d}>, ${$}>;\n        for (var i = 0; i < ${$}; i++) {\n          dotProd[i] = vec4<${d}>(0.0);\n        }\n        for (var wR: u32 = 0; wR < filterDims[0]; wR = wR + 1) {\n          var dyR = (${d}(dyCorner.x) + ${d}(wR)) / ${d}(strides.x);\n          let wRPerm = filterDims[0] - 1 - wR;\n          if (dyR < 0.0 || dyR >= ${d}(outBackprop[1]) ||\n              fract(dyR) > 0.0 || wRPerm < 0) {\n            continue;\n          }\n          let idyR: u32 = u32(dyR);\n\n          for (var wC: u32 = 0; wC < filterDims[1]; wC = wC + 1) {\n            let dyC = (${d}(dyCorner.y) + ${d}(wC)) / ${d}(strides.y);\n            let dyC2 = (${d}(dyCorner.y) + 1.0 + ${d}(wC)) / ${d}(strides.y);\n            let wCPerm = filterDims[1] - 1 - wC;\n            if (wCPerm < 0) {\n              continue;\n            }\n            var bDyCVal = true;\n            var bDyCVal2 = true;\n            if (dyC < 0.0 || dyC >= ${d}(outBackprop[2]) ||\n                fract(dyC) > 0.0) {\n              bDyCVal = false;\n            }\n            if (dyC2 < 0.0 || dyC2 >= ${d}(outBackprop[2]) ||\n                fract(dyC2) > 0.0) {\n              bDyCVal2 = false;\n            }\n\n            let idyC: u32 = u32(dyC);\n            let idyC2: u32 = u32(dyC2);\n            if (bDyCVal && bDyCVal2) {\n              let d2Length = outBackprop[3];\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${T.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${T.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${T.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${T.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${V.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${d}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n\n                xValue =  ${V.get("batch","idyR","idyC2","d2")};\n\n                dotProd[1] = dotProd[1] + vec4<${d}>(dot(xValue, wValue0),\n                                                    dot(xValue, wValue1),\n                                                    dot(xValue, wValue2),\n                                                    dot(xValue, wValue3));\n              }\n            } else if (bDyCVal) {\n              let d2Length = outBackprop[${y}];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${T.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${T.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${T.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${T.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${V.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${d}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n              }\n            } else if (bDyCVal2) {\n              let d2Length = outBackprop[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${T.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${T.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${T.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${T.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${V.get("batch","idyR","idyC2","d2")};\n                let tmpval = vec4<${d}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[1] = dotProd[1] + tmpval;\n              }\n            }\n          }\n        }\n\n        for (var i: u32 = 0; i < ${$}; i = i + 1) {\n          let value = dotProd[i] + ${n?"bias[c+i]":`vec4<${d}>(0.0)`};\n          ${U.set("batch","r","c + i","d1","value")};\n        }\n      }`,Z=`\n          let outputIndices = ${U.offsetToIndices("global_idx")};\n          let batch = ${U.indicesGet("outputIndices",0)};\n          let d1 = ${U.indicesGet("outputIndices",y)};\n          let r = ${U.indicesGet("outputIndices",f)};\n          let c = ${U.indicesGet("outputIndices",g)};\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - pads;\n          let dyRCorner = dyCorner.x;\n          let dyCCorner = dyCorner.y;\n          let groupId = d1 / ${S};\n          let wOutChannel = d1 - groupId * ${S};\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n          // ? = to be determined. : = across all values in that axis.\n          var dotProd = ${d}(0.0);\n          for (var wR: u32 = 0; wR < effectiveFilterDims.x; wR = wR + 1) {\n            if (wR % dilations.x != 0) {\n              continue;\n            }\n            let dyR = (${d}(dyRCorner) + ${d}(wR)) / ${d}(strides[0]);\n            let wRPerm = filterDims.x - 1 - wR / dilations.x;\n            if (dyR < 0.0 || dyR >= ${d}(outBackprop[${f}]) || fract(dyR) > 0.0 ||\n                wRPerm < 0) {\n              continue;\n            }\n            let idyR: u32 = u32(dyR);\n\n            for (var wC: u32 = 0; wC < effectiveFilterDims.y; wC = wC + 1) {\n              if (wC % dilations.y != 0) {\n                continue;\n              }\n              let dyC = (${d}(dyCCorner) + ${d}(wC)) / ${d}(strides.y);\n              let wCPerm = filterDims.y - 1 - wC / dilations.y;\n              if (dyC < 0.0 || dyC >= ${d}(outBackprop[${g}]) ||\n                  fract(dyC) > 0.0 || wCPerm < 0) {\n                continue;\n              }\n              let idyC: u32 = u32(dyC);\n              var inputChannel = groupId * ${A};\n              for (var d2: u32 = 0; d2 < ${A}; d2 = d2 + 1) {\n                let xValue = ${a?V.get("batch","idyR","idyC","inputChannel"):V.get("batch","inputChannel","idyR","idyC")};\n                let wValue = ${T.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};\n                dotProd = dotProd + xValue * wValue;\n                inputChannel = inputChannel + 1;\n              }\n            }\n          }\n          let value = dotProd + ${n?"bias[d1]":`${d}(0.0)`};\n          ${U.setByOffset("global_idx","value")};\n        `;return`\n  ${e.declareVariables(...k,U)}\n  ${_}\n  const outShape : vec4<u32> = vec4<u32>(${o.join(",")});\n  const outBackprop : vec4<u32> = vec4<u32>(${t[0].dims.join(",")});\n  const strides : vec2<u32> = vec2<u32>(${r.strides[0]}, ${r.strides[1]});\n  const filterDims : vec2<u32> = vec2<u32>(${r.kernelShape[a?1:2]}, ${r.kernelShape[a?2:3]});\n  const dilations : vec2<u32> = vec2<u32>(${r.dilations[0]}, ${r.dilations[1]});\n  const effectiveFilterDims : vec2<u32> = filterDims + vec2<u32>(\n          ${r.dilations[0]<=1?0:(r.kernelShape[a?1:2]-1)*(r.dilations[0]-1)},\n          ${r.dilations[1]<=1?0:(r.kernelShape[a?2:3]-1)*(r.dilations[1]-1)});\n  const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${r.pads[0]+r.pads[2]})/2,\n                                     i32(effectiveFilterDims[1]) - 1 - (${r.pads[1]+r.pads[3]})/2);\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(v)};\n  ${l?W:Z}}`},So=(e,t,r)=>{let o=e.length>2,n=t.outputShape,u=N.size(n),l=[Math.ceil(u/64),1,1];ke("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${l}`);let d=Ge(e[0].dataType);return{name:"ConvTranspose2D",shaderCache:{hint:t.cacheKey},getRunData:()=>({dispatchGroup:{x:l[0],y:l[1],z:l[2]},outputs:[{dims:r?r(n):n,dataType:e[0].dataType}]}),getShaderSource:a=>gd(a,e,t,n,o,l[1]===1&&l[2]===1,!1,d)}}});var yd,bd,wd,us,ls,vd,$d,Sd,xd,ds,cs=X(()=>{"use strict";Fe();is();ss();Rt();ur();yd=(e,t,r,o,n,u)=>(e-1)*t+r+(o-1)*n+1-u,bd=(e,t,r,o,n)=>{let u=Math.floor(e/2);t==="SAME_UPPER"?(r[o]=u,r[n]=e-u):t==="SAME_LOWER"&&(r[o]=e-u,r[n]=u)},wd=(e,t,r,o,n,u,l,d,a,f)=>{let g=e.length-2,y=f.length===0;if(a.length===0)for(let b=0;b<g;++b)a.push(0);let v=e[0],$=t[d?3:1]*n;for(let b=0,C=e.length-g-(d?1:0);b<g;++b,++C){let A=e[C],S=y?A*l[b]:f[b],_=yd(A,l[b],u[b],t[C],r[b],S);bd(_,o,u,b,b+g),y&&f.push(l[b]*(A-1)+a[b]+(t[C]-1)*r[b]+1-u[b]-u[b+g])}f.splice(0,0,v),f.splice(d?3:1,0,$)},us=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((v,$)=>v*$,1)===0){r.length=0;for(let v=2;v<t[1].dims.length;++v)r.push(t[1].dims[v])}let o=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(o?3:1,0,t[1].dims[1]);let n=e.pads.slice(),u=e.outputShape.slice(),l=e.outputPadding.slice(),d=t[0].dims,a=e.dilations.slice();if(a.reduce((v,$)=>v+$,0)===0){let v=t[0].dims.length-2;a=new Array(v).fill(1)}let f=e.strides.slice();if(f.reduce((v,$)=>v+$,0)===0){let v=t[0].dims.length-2;f=new Array(v).fill(1)}wd(d,r,a,e.autoPad,e.group,n,f,o,l,u);let g=Object.assign({},e),y=e.cacheKey+[r.join("n,"),n.join(","),f.join(","),l.join(","),u.join(","),a.join(",")].join("_");return Object.assign(g,{kernelShape:r,pads:n,outputPadding:l,outputShape:u,dilations:a,strides:f,cacheKey:y}),g},ls=e=>{let t=An(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],n=e.dilations,u=e.group,l=e.kernelShape,d=e.pads,a=e.strides,f=e.wIsConst(),g=e.outputPadding,y=e.outputShape;return he({autoPad:o,format:r,dilations:n,group:u,kernelShape:l,outputPadding:g,outputShape:y,pads:d,strides:a,wIsConst:f,...t})},vd=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[0];if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let n=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==n))throw new Error("invalid bias");let u=e[0].dims.length-2;if(t.dilations.reduce((g,y)=>g+y,0)>0&&t.dilations.length!==u)throw new Error(`dilations should be ${u}D`);if(t.strides.reduce((g,y)=>g+y,0)>0&&t.strides.length!==u)throw new Error(`strides should be ${u}D`);if(t.pads.reduce((g,y)=>g+y,0)>0&&t.pads.length!==u*2)throw new Error(`pads should be ${u*2}D`);if(t.outputPadding.length!==u&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${u}D`);if(t.kernelShape.reduce((g,y)=>g+y,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},$d=[2,3,1,0],Sd=(e,t,r)=>{let o=us(r,t),n=r.format==="NHWC",u=o.outputShape,l=u[n?3:1],d=t[0].dims[n?3:1];if(o.group!==1||l===1&&d===1){e.compute(So(t,o));return}let a=u[n?1:2],f=u[n?2:3],g=t[1].dims[2],y=t[1].dims[3],v=n?a*f:l,$=n?l:a*f,b=g*y*d,C=!0,A=e.kernelCustomData.wT??e.compute(ft(t[1],$d),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=A);let S=[t[0],A],_=t.length===3;_&&(!n&&t[2].dims.length===1?S.push(t[2].reshape([t[2].dims[0],1,1])):S.push(t[2])),e.compute(as(S,o,u,v,$,b,_,C),{inputs:S})},xd=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];o.length===3&&o.push(e.inputs[2]);let n=t.kernelShape;(n.length===0||n[0]===0)&&(n=[e.inputs[1].dims[2]]);let u=t.dilations;(u.length===0||u[0]===0)&&(u=[1]);let l=t.strides;(l.length===0||l[0]===0)&&(l=[1]);let d=t.pads;d.length===0&&(d=[0,0]),d=[0,d[0],0,d[1]],l=[1].concat(l),u=[1].concat(u),n=[1].concat(n);let a=us({...t,pads:d,strides:l,dilations:u,kernelShape:n},o);e.compute(So(o,a,f=>r?[f[0],f[2],f[3]]:[f[0],f[1],f[3]]))},ds=(e,t)=>{vd(e.inputs,t),e.inputs[0].dims.length===3?xd(e,t):Sd(e,e.inputs,t)}});var _d,ps,ms,fs=X(()=>{"use strict";Ve();Se();Fe();$e();_d=(e,t,r,o)=>{let n=N.size(t),u=t.length,l=z("input",e,u),d=Q("output",e,u),a=r.dataType===6?r.getInt32Array()[0]:Number(r.getBigInt64Array()[0]),f=N.normalizeAxis(a,u),g=y=>{let v=` i32(${l.indicesGet("inputIndices","uniforms.axis")}) `,$=de("uniforms.input_shape","uniforms.axis",u),b=o.reverse?v+(o.exclusive?" + 1":""):"0",C=o.reverse?$:v+(o.exclusive?"":" + 1");return`\n                ${y.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(l,d)}\n                ${y.mainStart()}\n                  ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n                  var inputIndices = ${d.offsetToIndices("global_idx")};\n                  var sum = ${d.type.value}(0);\n                  let first : i32 = ${b};\n                  let last : i32 = ${C};\n                  for (var i : i32 = first; i < last; i++) {\n                    ${l.indicesSet("inputIndices","uniforms.axis","u32(i)")};\n                    sum = sum + ${l.getByIndices("inputIndices")};\n                  }\n                  ${d.setByOffset("global_idx","sum")};\n                }`};return{name:"CumSum",shaderCache:{hint:o.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:[{type:"uint32",data:n},{type:"int32",data:f},...j(t),...j(t)]}),getShaderSource:g}},ps=(e,t)=>{let r=e.inputs[0].dims,o=e.inputs[0].dataType,n=e.inputs[1];e.compute(_d(o,r,n,t),{inputs:[0]})},ms=e=>{let t=e.exclusive===1,r=e.reverse===1;return he({exclusive:t,reverse:r})}});var xo,Rn,hs,Cd,Id,_o,Co,gs,Ad,ys,bs,ws=X(()=>{"use strict";Se();Fe();$e();xo="[a-zA-Z]|\\\\.\\\\.\\\\.",Rn="("+xo+")+",hs="^"+Rn+"$",Cd="("+Rn+",)*"+Rn,Id="^"+Cd+"$",_o=class{constructor(t=-1){this.symbolToIndices=new Map,this.inputIndex=t}addSymbol(t,r){let o=this.symbolToIndices.get(t);o===void 0?o=[r]:o.push(r),this.symbolToIndices.set(t,o)}},Co=class{constructor(t,r){this.equation=r;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[o,n]=r.includes("->")?r.split("->",2):[r,""];if(!o.match(RegExp(Id)))throw new Error("Invalid LHS term");if(o.split(",").forEach((d,a)=>{let f=t[a].dims.slice();if(!d.match(RegExp(hs)))throw new Error("Invalid LHS term");let g=this.processTerm(d,!0,f,a);this.lhs.push(g)}),n==="")n+=[...this.symbolToInfo.entries()].filter(([d,a])=>a.count===1||d==="...").map(([d])=>d).join("");else if(!n.match(RegExp(Rn)))throw new Error("Invalid RHS");n.match(RegExp(xo,"g"))?.forEach(d=>{if(d==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let a=this.symbolToInfo.get(d);if(a===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(a.dimValue)}}),this.rhs=this.processTerm(n,!1,this.outputDims)}addSymbol(t,r,o){let n=this.symbolToInfo.get(t);if(n!==void 0){if(n.dimValue!==r&&n.count!==1)throw new Error("Dimension mismatch");n.count++,n.inputIndices.push(o)}else n={count:1,dimValue:r,inputIndices:[o]};this.symbolToInfo.set(t,n)}processTerm(t,r,o,n=-1){let u=o.length,l=!1,d=[],a=0;if(!t.match(RegExp(hs))&&!r&&t!=="")throw new Error("Invalid LHS term");let f=t.match(RegExp(xo,"g")),g=new _o(n);return f?.forEach((y,v)=>{if(y==="..."){if(l)throw new Error("Only one ellipsis is allowed per input term");l=!0;let $=u-f.length+1;if($<0)throw new Error("Ellipsis out of bounds");if(d=o.slice(a,a+$),this.hasEllipsis){if(this.ellipsisDims.length!==d.length||this.ellipsisDims.toString()!==d.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=d;else throw new Error("Ellipsis must be specified in the LHS");for(let b=0;b<d.length;b++){let C=String.fromCharCode("0".charCodeAt(0)+b);g.addSymbol(C,v+b),this.addSymbol(C,o[a++],n)}}else g.addSymbol(y,v+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(y,o[a++],n)}),g}},gs=e=>e+"_max",Ad=(e,t,r,o,n)=>{let l=t.map(($,b)=>e[b]?$.length:$).map(($,b)=>z(`input${b}`,r,$)),d=N.size(n),a=Pe(n.length),f=a?n.length:n,g=Q("output",r,f),y=[...o.symbolToInfo.keys()].filter($=>!o.rhs.symbolToIndices.has($)),v=$=>{let b=[],C="var prod = 1.0;",A="var sum = 0.0;",S="sum += prod;",_=[],E=[],T=[],V=[],k=o.symbolToInfo.size===o.rhs.symbolToIndices.size;o.symbolToInfo.forEach((W,Z)=>{if(o.rhs.symbolToIndices.has(Z)){let B=o.rhs.symbolToIndices.get(Z)?.[0];B!==void 0&&o.lhs.forEach((F,J)=>{if(W.inputIndices.includes(J)){let te=F.symbolToIndices.get(Z);if(te===void 0)throw new Error("Invalid symbol error");te.forEach(re=>{b.push(`${l[J].indicesSet(`input${J}Indices`,re,g.indicesGet("outputIndices",B))}`)})}})}else o.lhs.forEach((B,F)=>{if(W.inputIndices.includes(F)){let J=B.symbolToIndices.get(Z);if(J===void 0)throw new Error("Invalid symbol error");J.forEach(te=>{_.push(`${l[F].indicesSet(`input${F}Indices`,te,`${Z}`)}`)}),V.push(`prod *= ${l[F].getByIndices(`input${F}Indices`)};`)}}),E.push(`for(var ${Z}: u32 = 0; ${Z} < uniforms.${gs(Z)}; ${Z}++) {`),T.push("}")});let U=k?[...b,`let sum = ${l.map((W,Z)=>W.getByIndices(`input${Z}Indices`)).join(" * ")};`]:[...b,A,...E,..._,C,...V,S,...T];return`\n            ${$.registerUniforms(y.map(W=>({name:`${gs(W)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...l,g)}\n\n            ${$.mainStart()}\n            ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n            var outputIndices = ${g.offsetToIndices("global_idx")};\n            ${l.map((W,Z)=>`var input${Z}Indices: ${l[Z].type.indices};`).join(`\n`)}\n            ${U.join(`\n`)};\n            ${g.setByOffset("global_idx","sum")};\n          }`};return{name:"Einsum",shaderCache:{hint:o.equation,inputDependencies:e.map($=>$?"rank":"dims")},getRunData:()=>{let $=y.filter(C=>o.symbolToInfo.has(C)).map(C=>({type:"uint32",data:o.symbolToInfo.get(C)?.dimValue||0}));$.push({type:"uint32",data:d});let b=t.filter((C,A)=>e[A]).map((C,A)=>[...j(C)]).reduce((C,A)=>C.concat(A),$);return a&&b.push(...j(n)),{outputs:[{dims:n,dataType:r}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:b}},getShaderSource:v}},ys=(e,t)=>{let r=new Co(e.inputs,t.equation),o=e.inputs.map((l,d)=>Pe(l.dims.length)),n=r.outputDims,u=e.inputs.map((l,d)=>l.dims);e.compute(Ad(o,u,e.inputs[0].dataType,r,n))},bs=e=>{let t=e.equation.replace(/\\s+/g,"");return he({equation:t})}});var Td,vs,Ed,Od,$s,Ss=X(()=>{"use strict";Ve();Se();$e();Td=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=r.length<t.length?0:r.length-t.length,n=t.length<r.length?0:t.length-r.length;for(;o<r.length&&n<t.length;++o,++n)if(r[o]!==t[n]&&r[o]!==1&&t[n]!==1)throw new Error("Expand requires shape to be broadcastable to input")},vs=(e,t)=>{let r=e.length-t.length,o=[];for(let n=0;n<r;++n)o.push(e[n]);for(let n=0;n<t.length;++n)o.push(t[n]===1?e[n+r]:t[n]);return o},Ed=(e,t)=>e.length>t.length?vs(e,t):vs(t,e),Od=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=Ed(t,r),n=e[0].dataType,u=n===9?4:1,l=Math.ceil(N.size(o)/u),d=Pe(t.length),a=Pe(o.length),f=y=>{let v=d?t.length:t,$=a?o.length:o,b=z("input",n,v,u),C=Q("output",n,$,u),A;if(n===9){let S=(_,E,T="")=>`\n          let outputIndices${E} = ${C.offsetToIndices(`outputOffset + ${E}u`)};\n          let offset${E} = ${b.broadcastedIndicesToOffset(`outputIndices${E}`,C)};\n          let index${E} = offset${E} / 4u;\n          let component${E} = offset${E} % 4u;\n          ${_}[${E}] = ${T}(${b.getByOffset(`index${E}`)}[component${E}]);\n        `;A=`\n        let outputOffset = global_idx * ${u};\n        var data = vec4<u32>(0);\n        ${S("data",0,"u32")}\n        ${S("data",1,"u32")}\n        ${S("data",2,"u32")}\n        ${S("data",3,"u32")}\n        ${C.setByOffset("global_idx","data")}\n      }`}else A=`\n        let outputIndices = ${C.offsetToIndices("global_idx")};\n        let inputOffset = ${b.broadcastedIndicesToOffset("outputIndices",C)};\n        ${C.setByOffset("global_idx",b.getByOffset("inputOffset"))}\n      }`;return`\n    ${y.registerUniform("vec_size","u32").declareVariables(b,C)}\n    ${y.mainStart()}\n    ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n    ${A}`},g=[{type:"uint32",data:l}];return d&&g.push(...j(t)),a&&g.push(...j(o)),{name:"Expand",shaderCache:{hint:`${o.length}`,inputDependencies:[d?"rank":"dims"]},getShaderSource:f,getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:g})}},$s=e=>{Td(e.inputs),e.compute(Od(e.inputs),{inputs:[0]})}});var Pd,Rd,xs,_s,Cs=X(()=>{"use strict";Ve();Se();Fe();$e();Pd=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},Rd=(e,t)=>{let r=e[0].dims,o=e[1].dims,n=r.length,u=N.normalizeAxis(t.axis,n),l=r.slice(0);l.splice(u,1,...o);let d=r[u],a=e[0].dataType===9?4:1,f=Math.ceil(N.size(l)/a),g=Pe(e[0].dims.length),y=g?e[0].dims.length:e[0].dims,v=Pe(e[1].dims.length),$=v?e[1].dims.length:e[1].dims,b=Pe(l.length),C=b?l.length:l,A=[{type:"uint32",data:f},{type:"int32",data:d},{type:"uint32",data:u}];g&&A.push(...j(e[0].dims)),v&&A.push(...j(e[1].dims)),b&&A.push(...j(l));let S=[];S.push(g?"rank":"dims"),S.push(v?"rank":"dims");let _=E=>{let T=z("data",e[0].dataType,y,a),V=z("inputIndices",e[1].dataType,$),k=Q("output",e[0].dataType,C,a),U=Z=>{let B=o.length,F=`var indicesIndices${Z}  = ${V.type.indices}(0);`;for(let J=0;J<B;J++)F+=`${B>1?`indicesIndices${Z}[${J}]`:`indicesIndices${Z}`} = ${l.length>1?`outputIndices${Z}[uniforms.axis + ${J}]`:`outputIndices${Z}`};`;F+=`\n          var idx${Z} = ${V.getByIndices(`indicesIndices${Z}`)};\n          if (idx${Z} < 0) {\n            idx${Z} = idx${Z} + uniforms.axisDimLimit;\n          }\n          var dataIndices${Z} = ${T.type.indices}(0);\n        `;for(let J=0,te=0;J<n;J++)J===u?(F+=`${n>1?`dataIndices${Z}[${J}]`:`dataIndices${Z}`} = u32(idx${Z});`,te+=B):(F+=`${n>1?`dataIndices${Z}[${J}]`:`dataIndices${Z}`} = ${l.length>1?`outputIndices${Z}[${te}]`:`outputIndices${Z}`};`,te++);return F},W;if(e[0].dataType===9){let Z=(B,F,J="")=>`\n          let outputIndices${F} = ${k.offsetToIndices(`outputOffset + ${F}u`)};\n          ${U(F)};\n          let offset${F} = ${T.indicesToOffset(`dataIndices${F}`)};\n          let index${F} = offset${F} / 4u;\n          let component${F} = offset${F} % 4u;\n          ${B}[${F}] = ${J}(${T.getByOffset(`index${F}`)}[component${F}]);\n        `;W=`\n        let outputOffset = global_idx * ${a};\n        var value = vec4<u32>(0);\n        ${Z("value",0,"u32")}\n        ${Z("value",1,"u32")}\n        ${Z("value",2,"u32")}\n        ${Z("value",3,"u32")}\n        ${k.setByOffset("global_idx","value")}\n      `}else W=`\n      let outputIndices = ${k.offsetToIndices("global_idx")};\n      ${U("")};\n      let value = ${T.getByIndices("dataIndices")};\n      ${k.setByOffset("global_idx","value")};\n      `;return`\n      ${E.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(T,V,k)}\n      ${E.mainStart()}\n        ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        ${W}\n      }`};return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:S},getRunData:()=>({outputs:[{dims:l,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:A}),getShaderSource:_}},xs=e=>he({axis:e.axis}),_s=(e,t)=>{let r=e.inputs;Pd(r),e.compute(Rd(e.inputs,t))}});var kd,Bd,Is,As,Ts=X(()=>{"use strict";Se();Fe();$e();kd=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and\n                     indices input tensors be of same rank.`)},Bd=(e,t)=>{let r=e[0].dims,o=e[0].dataType,n=r.length,u=e[1].dims,l=e[1].dataType,d=N.normalizeAxis(t.axis,n),a=r[d],f=u.slice(0),g=N.size(f),y=z("input",o,n),v=z("indicesInput",l,u.length),$=Q("output",o,f.length),b=[{type:"uint32",data:g},{type:"int32",data:a},{type:"uint32",data:d}];return b.push(...j(r)),b.push(...j(u)),b.push(...j(f)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:f,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:b}),getShaderSource:S=>`\n      ${S.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(y,v,$)}\n      ${S.mainStart()}\n      ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n      let outputIndices = ${$.offsetToIndices("global_idx")};\n\n      var idx = ${v.getByOffset("global_idx")};\n      if (idx < 0) {\n        idx = idx + uniforms.axisDimLimit;\n      }\n      var inputIndices = ${y.type.indices}(outputIndices);\n      ${y.indicesSet("inputIndices","uniforms.axis","u32(idx)")};\n      let value = ${y.getByIndices("inputIndices")};\n\n      ${$.setByOffset("global_idx","value")};\n  }`}},Is=e=>he({axis:e.axis}),As=(e,t)=>{let r=e.inputs;kd(r),e.compute(Bd(e.inputs,t))}});var Dd,Md,Es,Os,Ps=X(()=>{"use strict";Se();$e();Dd=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},Md=(e,t)=>{let r=e[0].dims.slice(),o=e[1].dims.slice(),[n,u,l]=bn.getShapeOfGemmResult(r,t.transA,o,t.transB,e.length===3?e[2].dims:void 0),d=[n,u];if(!d)throw new Error("Can\'t use gemm on the given tensors");let a=N.size(d),f=[{type:"uint32",data:a},{type:"uint32",data:n},{type:"uint32",data:u},{type:"uint32",data:l},{type:"float32",data:t.alpha},{type:"float32",data:t.beta}],g=["type","type"];e.length===3&&(f.push(...j(e[2].dims)),g.push("rank")),f.push(...j(d));let y=v=>{let $="";t.transA&&t.transB?$="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":t.transA&&!t.transB?$="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!t.transA&&t.transB?$="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!t.transA&&!t.transB&&($="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let b=t.alpha===1?"":"value *= uniforms.alpha;",C=z("a",e[0].dataType,e[0].dims),A=z("b",e[1].dataType,e[1].dims),S=C.type.value,_=null,E=[C,A];e.length===3&&(_=z("c",e[2].dataType,e[2].dims.length),E.push(_));let T=Q("output",e[0].dataType,d.length);E.push(T);let V=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`\n  ${v.registerUniforms(V).declareVariables(...E)}\n\n  ${v.mainStart()}\n    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let m = global_idx / uniforms.N;\n    let n = global_idx % uniforms.N;\n\n    var value = ${S}(0);\n    for (var k: u32 = 0u; k < uniforms.K; k++) {\n      ${$}\n    }\n\n    ${b}\n    ${(()=>_!=null?`let cOffset = ${_.broadcastedIndicesToOffset("vec2(m, n)",T)}; value += ${S}(uniforms.beta) * ${_.getByOffset("cOffset")};`:"")()}\n    output[global_idx] = value;\n  }`};return{name:"Gemm",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:g},getRunData:()=>({outputs:[{dims:d,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:f}),getShaderSource:y}},Es=e=>{let t=e.transA,r=e.transB,o=e.alpha,n=e.beta;return{transA:t,transB:r,alpha:o,beta:n,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},Os=(e,t)=>{Dd(e.inputs),e.compute(Md(e.inputs,t))}});var zd,Ud,Vd,Rs,ks=X(()=>{"use strict";Ve();Se();$e();zd=(e,t)=>{let r=e[0].dims,o=r,n=2,u=N.sizeToDimension(r,n),l=N.sizeFromDimension(r,n),d=Le(l),a=l/d,f=[r[0],r[1],a],g=["rank","type","type"],y=[{type:"uint32",data:l},{type:"uint32",data:a}];y.push(...j(f),...j(f));let v=$=>{let b=z("x",e[0].dataType,f.length,d),C=z("scale",e[1].dataType,e[1].dims),A=z("bias",e[2].dataType,e[2].dims),S=Q("output",e[0].dataType,f.length,d),_=[b,C,A,S],E=b.type.value,T=d===1?"f32":`vec${d}<f32>`,V=64,k=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`\n  var<workgroup> meanShared : f32;\n  var<workgroup> squaredNormShared : f32;\n  var<workgroup> workgroupShared : array<${T}, ${V}>;\n  const workgroupSize = ${V}u;\n  ${$.registerUniforms(k).declareVariables(..._)}\n  ${$.mainStart(V)}\n    let norm = global_idx / workgroupSize;\n    let batch = norm / uniforms.x_shape[1];\n    let channel = norm % uniforms.x_shape[1];\n    let localIndex = local_id.x;\n\n    // initialize workgroup memory\n    var initial = ${T}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      initial = initial + ${T}(${b.get("batch","channel","h")});\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the mean of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      meanShared = ${nt("workgroupShared[0]",d)} / f32(uniforms.normSize);\n    }\n    workgroupBarrier();\n\n    // reinitialize workgroup memory.\n    initial = ${T}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let deviation =  ${T}(${b.get("batch","channel","h")}) - ${T}(meanShared);\n      initial = initial + deviation * deviation;\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the sum of square of deviation of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      squaredNormShared = ${nt("workgroupShared[0]",d)};\n    }\n    workgroupBarrier();\n\n    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${t.epsilon}));\n    let channelScale = invStdDev * f32(${C.getByOffset("channel")});\n    let channelShift = f32(${A.getByOffset("channel")}) - meanShared * channelScale;\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let value = ${b.get("batch","channel","h")} * ${E}(${T}(channelScale)) + ${E}(${T}(channelShift));\n      ${S.set("batch","channel","h","value")};\n    }\n  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${t.epsilon};${d}`,inputDependencies:g},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:u},programUniforms:y}),getShaderSource:v}},Ud=(e,t,r,o,n,u,l,d)=>{let a=Le(l),f=64,g=a===1?"vec2f":`mat2x${a}f`,y=a===1?"f32":`vec${a}f`,v=(k,U)=>`${g}(${k}, ${U})`,$=n*l/a,b=Math.ceil(u/f),C=["type"],A=[{type:"uint32",data:b},{type:"uint32",data:u},{type:"uint32",data:Math.floor(l/a)},{type:"uint32",data:Math.floor(u*l/a)}],S=k=>{let U=z("input",t.dataType,t.dims,a);return`\n  ${k.declareVariables(U)}\n  @group(0) @binding(1) var<storage, read_write> output : array<${g}>;\n  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};\n  @group(0) @binding(2) var<uniform> uniforms: Uniforms;\n\n  ${k.mainStart(f)}\n    let currentImageNumber = global_idx / ${f} / uniforms.C;\n    let currentChannelNumber = (global_idx / ${f}) % uniforms.C;\n    let wgId = global_idx % ${f};\n    let wgOffset = wgId * uniforms.wg_size;\n    if (wgOffset >= uniforms.H) {\n        return;\n    }\n    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);\n\n    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;\n    var sum = ${Xe("f32",a)};\n    var squaredSum = ${Xe("f32",a)};\n    for (var i: u32 = wgOffset; i < wgMax; i++) {\n        let value = ${y}(input[offset + i * uniforms.C]);\n        sum += value;\n        squaredSum += value * value;\n    }\n    output[global_idx] = ${v("sum","squaredSum")};\n  }`},_=e.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${a}`,inputDependencies:C},getRunData:()=>({outputs:[{dims:[n,l,f,2],dataType:1}],dispatchGroup:{x:n*l/a},programUniforms:A}),getShaderSource:S},{inputs:[t],outputs:[-1]})[0],E=[{type:"uint32",data:$},{type:"uint32",data:u},{type:"uint32",data:Math.floor(l/a)},{type:"uint32",data:Math.floor(f*l/a)}],T=["type","type","type"],V=k=>{let U=z("scale",r.dataType,r.dims,a),W=z("bias",o.dataType,o.dims,a);return`\n  @group(0) @binding(0) var<storage, read> input : array<${g}>;\n  @group(0) @binding(1) var<storage, read> scale : array<${U.type.storage}>;\n  @group(0) @binding(2) var<storage, read> bias : array<${W.type.storage}>;\n  @group(0) @binding(3) var<storage, read_write> output : array<${g}>;\n  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};\n  @group(0) @binding(4) var<uniform> uniforms: Uniforms;\n\n  ${k.mainStart()}\n    ${k.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}\n    let currentImageNumber = global_idx / uniforms.C;\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let offset = currentImageNumber * uniforms.image_size;\n    var sum = ${Xe("f32",a)};\n    var squaredSum = ${Xe("f32",a)};\n    for (var i: u32 = 0; i < ${f}; i++) {\n        let value = input[offset + i + currentChannelNumber * ${f}];\n        sum += value[0];\n        squaredSum += value[1];\n    }\n    sum = sum / f32(uniforms.H);\n    squaredSum = squaredSum / f32(uniforms.H);\n    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${d}));\n    let channelScale = invStdDev * ${y}(scale[currentChannelNumber]);\n    let channelShift = ${y}(bias[currentChannelNumber]) - sum * channelScale;\n\n    output[global_idx] = ${v("channelScale","channelShift")};\n  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${a};${d}`,inputDependencies:T},getRunData:()=>({outputs:[{dims:[n,l,2],dataType:1}],dispatchGroup:{x:Math.ceil($/64)},programUniforms:E}),getShaderSource:V},{inputs:[_,r,o],outputs:[-1]})[0]},Vd=(e,t,r)=>{let o=t[0].dims,n=o,u=o[0],l=o[o.length-1],d=N.sizeFromDimension(o,1)/l,a=Le(l),f=N.size(n)/a,g=[{type:"uint32",data:d},{type:"uint32",data:Math.floor(l/a)}],y=["type","type"],v=Ud(e,t[0],t[1],t[2],u,d,l,r.epsilon),$=b=>{let C=Ge(t[0].dataType),A=a===1?"vec2f":`mat2x${a}f`,S=a===1?C:`vec${a}<${C}>`,_=z("input",t[0].dataType,t[0].dims,a),E=Q("output",t[0].dataType,n,a);return`\n  @group(0) @binding(0) var<storage, read> input : array<${_.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scaleInput : array<${A}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${E.type.storage}>;\n  struct Uniforms {H: u32, C : u32};\n  @group(0) @binding(3) var<uniform> uniforms: Uniforms;\n\n  ${b.mainStart()}\n    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;\n    let scale = scaleInput[scaleOffset];\n    output[global_idx] = fma(input[global_idx], ${S}(scale[0]), ${S}(scale[1]));\n  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${a}`,inputDependencies:y},getRunData:()=>({outputs:[{dims:n,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:g}),getShaderSource:$},{inputs:[t[0],v]})},Rs=(e,t)=>{t.format==="NHWC"?Vd(e,e.inputs,t):e.compute(zd(e.inputs,t))}});var Nd,Wd,Bs,Ds=X(()=>{"use strict";Ve();Se();$e();Nd=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Wd=(e,t,r)=>{let o=e[0].dims,n=e[1],u=e[2],l=o,d=N.normalizeAxis(t.axis,o.length),a=N.sizeToDimension(o,d),f=N.sizeFromDimension(o,d),g=N.size(n.dims),y=u?N.size(u.dims):0;if(g!==f||u&&y!==f)throw new Error(`Size of X.shape()[axis:] == ${f}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${g} and bias size of ${y}`);let v=[];for(let T=0;T<o.length;++T)T<d?v.push(o[T]):v.push(1);let $=Le(f),b=["type","type"],C=[{type:"uint32",data:a},{type:"float32",data:f},{type:"uint32",data:Math.floor(f/$)},{type:"float32",data:t.epsilon}];u&&b.push("type");let A=r>1,S=r>2,_=T=>{let V=Ge(e[0].dataType),k=[z("x",e[0].dataType,e[0].dims,$),z("scale",n.dataType,n.dims,$)];u&&k.push(z("bias",u.dataType,u.dims,$)),k.push(Q("output",e[0].dataType,l,$)),A&&k.push(Q("mean_data_output",1,v)),S&&k.push(Q("inv_std_output",1,v));let U=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`\n  ${T.registerUniforms(U).declareVariables(...k)}\n  ${T.mainStart()}\n    ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}\n    let offset = global_idx * uniforms.norm_size_vectorized;\n    var meanVector = ${Xe("f32",$)};\n    var meanSquareVector = ${Xe("f32",$)};\n\n    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {\n      let value = ${mt(V,$,"x[h + offset]")};\n      meanVector += value;\n      meanSquareVector += value * value;\n    }\n    let mean = ${nt("meanVector",$)} / uniforms.norm_size;\n    let invStdDev =\n        inverseSqrt(${nt("meanSquareVector",$)} / uniforms.norm_size - mean * mean + uniforms.epsilon);\n\n    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {\n      let f32input = ${mt(V,$,"x[j + offset]")};\n      let f32scale = ${mt(V,$,"scale[j]")};\n      output[j + offset] = ${k[0].type.value}((f32input - mean) * invStdDev * f32scale\n        ${u?`+ ${mt(V,$,"bias[j]")}`:""}\n      );\n    }\n\n    ${A?"mean_data_output[global_idx] = mean":""};\n    ${S?"inv_std_output[global_idx] = invStdDev":""};\n  }`},E=[{dims:l,dataType:e[0].dataType}];return A&&E.push({dims:v,dataType:1}),S&&E.push({dims:v,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${$};${r}`,inputDependencies:b},getRunData:()=>({outputs:E,dispatchGroup:{x:Math.ceil(a/64)},programUniforms:C}),getShaderSource:_}},Bs=(e,t)=>{Nd(e.inputs),e.compute(Wd(e.inputs,t,e.outputCount))}});var Hd,zs,Ms,Gd,Io,Us,Vs=X(()=>{"use strict";Se();Fe();gn();po();$e();ur();Hd=(e,t)=>{let r=e[0],o=e[1],n=e[2],u=e[3],l=e[4],d=e[5],a=e[6],f=e[7];if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let g=!1,y=r.dims[0],v=r.dims[1],$=r.dims.length===3?g?r.dims[2]/3:r.dims[2]:t.numHeads*r.dims[4],b=v,C=0,A=0,S=Math.floor($/t.numHeads);if(a&&f){if(a.dims.length!==4)throw new Error(\'Input "past_key" is expected to have 4 dimensions\');if(f.dims.length!==4)throw new Error(\'Input "past_value" is expected to have 4 dimensions\');C=a.dims[2],A=a.dims[2]}else if(a||f)throw new Error(\'Input "past_key" and "past_value" shall be both present or both absent\');let _;if(o){if(r.dims.length!==3)throw new Error(\'Input "query" is expected to have 3 dimensions when key is given\');if(o.dims.length<3||o.dims.length>5)throw new Error(\'Input "key" is expected to have 3, 4, or 5 dimensions\');if(r.dims[0]!==o.dims[0])throw new Error(\'Input "query" and "key" shall have same dim 0 (batch size)\');if(o.dims.length===3){if(o.dims[2]!==r.dims[2])throw new Error(\'Input "query" and "key" shall have same dim 2 (hidden_size)\');_=2,b=o.dims[1]}else if(o.dims.length===5){if(o.dims[2]!==t.numHeads||o.dims[3]!==2||o.dims[4]!==S)throw new Error(\'Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv\');if(n)throw new Error(\'Expect "value" be none when "key" has packed kv format.\');_=5,b=o.dims[1]}else{if(o.dims[1]!==t.numHeads||o.dims[3]!==S)throw new Error(\'Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key\');_=0,b=o.dims[2]}}else{if(r.dims.length!==3&&r.dims.length!==5)throw new Error(\'Input "query" is expected to have 3 or 5 dimensions when key is empty\');if(r.dims.length===5&&(r.dims[2]!==t.numHeads||r.dims[3]!==3))throw new Error(\'Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv\');_=3}if(u){if(u.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimension\');if(n&&r.dims.length===5&&r.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let E=0;if(l){E=8;let W=l.dims;throw W.length===1?W[0]===y?E=1:W[0]===3*y+2&&(E=3):W.length===2&&W[0]===y&&W[1]===b&&(E=5),E===8?new Error(\'Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)\'):new Error("Mask not supported")}let T=!1,V=$;if(n){if(n.dims.length!==3&&n.dims.length!==4)throw new Error(\'Input "value" is expected to have 3 or 4 dimensions\');if(r.dims[0]!==n.dims[0])throw new Error(\'Input "query" and "value" shall have same dim 0 (batch_size)\');if(n.dims.length===3){if(b!==n.dims[1])throw new Error(\'Input "key" and "value" shall have the same dim 1 (kv_sequence_length)\');V=n.dims[2]}else{if(b!==n.dims[2])throw new Error(\'Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)\');V=n.dims[1]*n.dims[3],T=!0}}let k=C+b,U=!1;if(l)throw new Error("Key padding mask is not supported");if(d)throw new Error("extraAddQk is not supported");if(a)throw new Error("pastKey is not supported");if(f)throw new Error("pastValue is not supported");return{batchSize:y,sequenceLength:v,pastSequenceLength:C,kvSequenceLength:b,totalSequenceLength:k,maxSequenceLength:A,inputHiddenSize:0,hiddenSize:$,vHiddenSize:V,headSize:S,vHeadSize:Math.floor(V/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:E,scale:t.scale,broadcastResPosBias:U,passPastInKv:T,qkvFormat:_}},zs=e=>he({...e}),Ms=he({perm:[0,2,1,3]}),Gd=(e,t,r,o,n,u,l)=>{let d=[o,n,u],a=N.size(d),f=[{type:"uint32",data:a},{type:"uint32",data:l},{type:"uint32",data:u}],g=y=>{let v=Q("qkv_with_bias",t.dataType,d),$=z("qkv",t.dataType,d),b=z("bias",r.dataType,d),C=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`\n  ${y.registerUniforms(C).declareVariables($,b,v)}\n  ${y.mainStart()}\n    ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;\n\n    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];\n  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:d,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:f}),getShaderSource:g},{inputs:[t,r],outputs:[-1]})[0]},Io=(e,t,r,o,n,u,l,d)=>{let a=u;if(l){if(o===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return a=Gd(e,u,l,t,o,r*n,d),a=a.reshape([t,o,r,n]),e.compute(ft(a,Ms.perm),{inputs:[a],outputs:[-1]})[0]}else return u.dims.length===3&&(a=u.reshape([t,o,r,n])),e.compute(ft(a,Ms.perm),{inputs:[a],outputs:[-1]})[0]},Us=(e,t)=>{let r=Hd(e.inputs,t);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(e.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let o=e.inputs[1]&&e.inputs[2]&&e.inputs[1].dims.length===4&&e.inputs[2].dims.length===4,n=Io(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,e.inputs[0],e.inputs[3],0);if(o)return _n(e,n,e.inputs[1],e.inputs[2],e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t);let u=Io(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.headSize,e.inputs[1],e.inputs[3],r.hiddenSize),l=Io(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.vHeadSize,e.inputs[2],e.inputs[3],2*r.hiddenSize);_n(e,n,u,l,e.inputs[4],void 0,e.inputs[6],e.inputs[7],e.inputs[5],r,t)}});var Ld,Fd,jd,qd,Kd,Yd,Zd,Qd,Ns,Ws=X(()=>{"use strict";Ve();Se();$e();Ld=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1)throw new Error("Input type must be float.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},Fd=(e,t,r)=>{let o="";for(let n=t-1;n>=0;--n)o+=`\n            k = i32(${e.indicesGet("indices",n)}) - ${de("uniforms.pads",n,r)};\n            if (k < 0) {\n              break;\n            }\n            if (k >= i32(${de("uniforms.x_shape",n,t)})) {\n              break;\n            }\n            offset += k * i32(${de("uniforms.x_strides",n,t)});\n        `;return`\n          value = ${e.type.value}(uniforms.constant_value);\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${o}\n            value = x[offset];\n          }\n      `},jd=(e,t,r)=>{let o="";for(let n=t-1;n>=0;--n)o+=`\n                k = i32(${e.indicesGet("indices",n)}) - ${de("uniforms.pads",n,r)};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = 2 * (i32(${de("uniforms.x_shape",n,t)}) - 1);\n                  k = k % _2n_1;\n                  if(k >= i32(${de("uniforms.x_shape",n,t)})) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * i32(${de("uniforms.x_strides",n,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},qd=(e,t,r)=>{let o="";for(let n=t-1;n>=0;--n)o+=`\n                k = i32(${e.indicesGet("indices",n)}) - ${de("uniforms.pads",n,r)};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= i32(${de("uniforms.x_shape",n,t)})) {\n                  k = i32(${de("uniforms.x_shape",n,t)}) - 1;\n                }\n                offset += k * i32(${de("uniforms.x_strides",n,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},Kd=(e,t,r)=>{let o="";for(let n=t-1;n>=0;--n)o+=`\n                k = i32(${e.indicesGet("indices",n)}) - ${de("uniforms.pads",n,r)};\n                if (k < 0)  {\n                  k += i32(${de("uniforms.x_shape",n,t)}]);\n                }\n                if (k >= i32(${de("uniforms.x_shape",n,t)})) {\n                  k -= i32(${de("uniforms.x_shape",n,t)});\n                }\n                offset += k * i32(${de("uniforms.x_strides",n,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},Yd=(e,t,r)=>{switch(r.mode){case 0:return Fd(e,t,r.pads.length);case 1:return jd(e,t,r.pads.length);case 2:return qd(e,t,r.pads.length);case 3:return Kd(e,t,r.pads.length);default:throw new Error("Invalid mode")}},Zd=(e,t)=>{let r=N.padShape(e[0].dims.slice(),t.pads),o=e[0].dims,u=[{type:"uint32",data:N.size(r)},{type:"uint32",data:t.pads}];if(t.mode===0){let a=rt(e[0].dataType);u.push({type:a,data:t.value})}u.push(...j(e[0].dims),...j(r));let l=["rank"],d=a=>{let f=Q("output",e[0].dataType,r.length),g=z("x",e[0].dataType,o.length),y=g.type.value,v=Yd(f,o.length,t),$=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return t.mode===0&&$.push({name:"constant_value",type:y}),`\n            ${a.registerUniforms($).declareVariables(g,f)}\n            ${a.mainStart()}\n            ${a.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n            let indices = ${f.offsetToIndices("global_idx")};\n\n            var value = ${y}(0);\n            ${v}\n            output[global_idx] = value;\n        }`};return{name:"Pad",shaderCache:{hint:`${t.mode}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(N.size(r)/64)},programUniforms:u}),getShaderSource:d}},Qd=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),o=e.length>=3&&e[2].data?e[2].getFloat32Array()[0]:0,n=e[0].dims.length,u=new Int32Array(2*n).fill(0);if(e.length>=4){let d=e[3].getBigInt64Array();for(let a=0;a<d.length;a++)u[Number(d[a])]=Number(r[a]),u[Number(d[a])+n]=Number(r[a+d.length])}else r.forEach((d,a)=>u[Number(a)]=Number(d));let l=[];return u.forEach(d=>l.push(d)),{mode:t.mode,value:o,pads:l}}else return t},Ns=(e,t)=>{Ld(e.inputs);let r=Qd(e.inputs,t);e.compute(Zd(e.inputs,r),{inputs:[0]})}});var kn,Hs,Gs,Ls,Fs,Xd,Jd,js,qs,Ks,Ys,Zs,Qs,Xs,Js,eu,tu,ru,nu,ou=X(()=>{"use strict";ir();Se();$e();kn=e=>{if(ar.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},Hs=(e,t,r)=>{let o=t.format==="NHWC",n=e.dims.slice();o&&n.splice(1,0,n.pop());let u=Object.hasOwnProperty.call(t,"dilations"),l=t.kernelShape.slice(),d=t.strides.slice(),a=u?t.dilations.slice():[],f=t.pads.slice();Ht.adjustPoolAttributes(r,n,l,d,a,f);let g=Ht.computePoolOutputShape(r,n,d,a,l,f,t.autoPad),y=Object.assign({},t);u?Object.assign(y,{kernelShape:l,strides:d,pads:f,dilations:a,cacheKey:t.cacheKey}):Object.assign(y,{kernelShape:l,strides:d,pads:f,cacheKey:t.cacheKey});let v=g.slice();return v.push(v.splice(1,1)[0]),[y,o?v:g]},Gs=(e,t)=>{let r=t.format==="NHWC",o=N.size(e),n=N.size(t.kernelShape),u=[{type:"uint32",data:o},{type:"uint32",data:n}],l=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let d=t.kernelShape[t.kernelShape.length-1],a=t.strides[t.strides.length-1],f=t.pads[t.pads.length/2-1],g=t.pads[t.pads.length-1],y=!!(f+g);u.push({type:"uint32",data:d},{type:"uint32",data:a},{type:"uint32",data:f},{type:"uint32",data:g}),l.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let v=!1;if(t.kernelShape.length===2){let $=t.kernelShape[t.kernelShape.length-2],b=t.strides[t.strides.length-2],C=t.pads[t.pads.length/2-2],A=t.pads[t.pads.length-2];v=!!(C+A),u.push({type:"uint32",data:$},{type:"uint32",data:b},{type:"uint32",data:C},{type:"uint32",data:A}),l.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[u,l,!0,y,v]}else{if(r)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let d=N.computeStrides(t.kernelShape);u.push({type:"uint32",data:d},{type:"uint32",data:t.pads},{type:"uint32",data:t.strides}),l.push({name:"kernelStrides",type:"u32",length:d.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length});let a=t.pads.reduce((f,g)=>f+g);return[u,l,!!a,!1,!1]}},Ls=(e,t,r,o,n,u,l,d,a,f,g,y)=>{let v=n.format==="NHWC",$=t.type.value,b=Q("output",t.type.tensor,o);if(n.kernelShape.length<=2){let C="",A="",S="",_=r-(v?2:1);if(g?C=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${_}] = indices[${_}] * uniforms.sw - uniforms.pwStart + i;\n                  if (xIndices[${_}] < 0 || xIndices[${_}]\n                      >= uniforms.x_shape[${_}]) {\n                    pad++;\n                    continue;\n                  }\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${u}\n                }`:C=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${_}] = indices[${_}] * uniforms.sw - uniforms.pwStart + i;\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${u}\n                }`,n.kernelShape.length===2){let T=r-(v?3:2);y?A=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${T}] = indices[${T}] * uniforms.sh - uniforms.phStart + j;\n                  if (xIndices[${T}] < 0 || xIndices[${T}] >= uniforms.x_shape[${T}]) {\n                    pad += i32(uniforms.kw);\n                    continue;\n                  }\n              `:A=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${T}] = indices[${T}] * uniforms.sh - uniforms.phStart + j;\n                `,S=`\n              }\n            `}return`\n            ${e.registerUniforms(a).declareVariables(t,b)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n              let indices = ${b.offsetToIndices("global_idx")};\n              var xIndices = ${b.offsetToIndices("global_idx")};\n\n              var value = ${$}(${d});\n              var pad = 0;\n              ${A}\n              ${C}\n              ${S}\n              ${l}\n\n              output[global_idx] = value;\n            }`}else{if(v)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let C=n.kernelShape.length,A=n.pads.length,S="";return f?S=`\n                if (xIndices[j] >= uniforms.x_shape[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${t.indicesToOffset("xIndices")}];\n                ${u}\n              }`:S=`\n              }\n              let x_val = x[${t.indicesToOffset("xIndices")}];\n              ${u}\n            `,`\n            ${e.registerUniforms(a).declareVariables(t,b)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n              let indices = ${b.offsetToIndices("global_idx")};\n              var xIndices = ${b.offsetToIndices("global_idx")};\n\n              var offsets: array<u32, ${C}>;\n\n              var value = ${$}(${d});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${C-1}u; j++) {\n                  offsets[j] = offset / ${de("uniforms.kernelStrides","j",C)};\n                  offset -= offsets[j] * ${de("uniforms.kernelStrides","j",C)};\n                }\n                offsets[${C-1}] = offset;\n\n                isPad = false;\n                for (var j = ${r-C}u; j < ${r}u; j++) {\n                  xIndices[j] = indices[j] * ${de("uniforms.strides",`j - ${r-C}u`,C)}\n                    + offsets[j - ${r-C}u] - ${de("uniforms.pads","j - 2u",A)};\n                  ${S}\n              }\n              ${l}\n\n              output[global_idx] = value;\n            }`}},Fs=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,Xd=e=>`${Fs(e)};${e.countIncludePad}`,Jd=e=>`${Fs(e)};${e.storageOrder};${e.dilations}`,js=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),qs=(e,t,r,o)=>{let[n,u]=Hs(t,o,r),l=z("x",t.dataType,t.dims.length),d=l.type.value,a="value += x_val;",f="";n.countIncludePad?f+=`value /= ${d}(uniforms.kernelSize);`:f+=`value /= ${d}(i32(uniforms.kernelSize) - pad);`;let[g,y,v,$,b]=Gs(u,n);g.push(...j(t.dims),...j(u));let C=["rank"];return{name:e,shaderCache:{hint:`${o.cacheKey};${v};${$};${b}`,inputDependencies:C},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(N.size(u)/64)},programUniforms:g}),getShaderSource:A=>Ls(A,l,t.dims.length,u.length,n,a,f,0,y,v,$,b)}},Ks=e=>{let t=e.count_include_pad!==0,r=js(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let o={countIncludePad:t,...r,cacheKey:""};return{...o,cacheKey:Xd(o)}},Ys=(e,t)=>{kn(e.inputs),e.compute(qs("AveragePool",e.inputs[0],!1,t))},Zs={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},Qs=e=>{let t=e.format;return{format:t,...Zs,cacheKey:t}},Xs=(e,t)=>{kn(e.inputs),e.compute(qs("GlobalAveragePool",e.inputs[0],!0,t))},Js=(e,t,r,o)=>{let[n,u]=Hs(t,o,r),l=`\n      value = max(x_val, value);\n    `,d="",a=z("x",t.dataType,t.dims.length),f=["rank"],[g,y,v,$,b]=Gs(u,n);return g.push(...j(t.dims),...j(u)),{name:e,shaderCache:{hint:`${o.cacheKey};${v};${$};${b}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(N.size(u)/64)},programUniforms:g}),getShaderSource:C=>Ls(C,a,t.dims.length,u.length,n,l,d,-1e5,y,v,$,b)}},eu=(e,t)=>{kn(e.inputs),e.compute(Js("MaxPool",e.inputs[0],!1,t))},tu=e=>{let t=e.storage_order,r=e.dilations,o=js(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(o.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let n={storageOrder:t,dilations:r,...o,cacheKey:""};return{...n,cacheKey:Jd(n)}},ru=e=>{let t=e.format;return{format:t,...Zs,cacheKey:t}},nu=(e,t)=>{kn(e.inputs),e.compute(Js("GlobalMaxPool",e.inputs[0],!0,t))}});var tc,rc,au,iu=X(()=>{"use strict";ir();Ve();$e();tc=(e,t,r)=>{let o=e===t,n=e<t&&r<0,u=e>t&&r>0;if(o||n||u)throw new Error("Range these inputs\' contents are invalid.")},rc=(e,t,r,o)=>{let n=Math.abs(Math.ceil((t-e)/r)),u=[n],l=n,d=rt(o),a=[{type:"uint32",data:l},{type:d,data:e},{type:d,data:r},...j(u)],f=g=>{let y=Q("output",o,u.length),v=y.type.value,$=[{name:"outputSize",type:"u32"},{name:"start",type:v},{name:"delta",type:v}];return`\n        ${g.registerUniforms($).declareVariables(y)}\n        ${g.mainStart()}\n        ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        output[global_idx] = uniforms.start + ${v}(global_idx) * uniforms.delta;\n      }`};return{name:"Range",shaderCache:{hint:`${o}`},getShaderSource:f,getRunData:()=>({outputs:[{dims:u,dataType:o}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:a})}},au=e=>{let t=0,r=0,o=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],o=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],o=e.inputs[2].getFloat32Array()[0]),ar.webgpu.validateInputContent&&tc(t,r,o),e.compute(rc(t,r,o,e.inputs[0].dataType),{inputs:[]})}});var nc,oc,ac,ic,sc,uc,lc,dc,cc,pc,mc,su,fc,hc,gc,yc,bc,uu,lu,du=X(()=>{"use strict";Se();Fe();$e();nc=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and\n            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},oc=(e,t,r)=>{t.every(n=>n>=0&&n<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let o=new Array(r).fill(1);return t.forEach((n,u)=>o[n]=e[u]),o},ac=(e,t,r,o,n,u)=>{let[l,d,a]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],f=e[0].dims.length;if(l>0&&e.length>l&&e[l].dims.length>0)e[l].getFloat32Array().forEach(g=>u.push(g));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(d>0&&e.length>d&&e[d].dims.length>0){if(e[d].getFloat32Array().forEach(g=>o.push(g)),o.length!==0&&o.length!==f&&r>=18&&o.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");nc(o,t),t.axes.length>0&&oc(o,t.axes,f).forEach((g,y)=>o[y]=g)}if(a>0&&e.length>a&&(e[a].getBigInt64Array().forEach(g=>n.push(Number(g))),n.length!==f||r>=18&&n.length===t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(o.length!==t.axes.length)throw new Error(\'Resize requires "scales" input size to be of axes rank when axes attributes is specified\');if(n.length!==t.axes.length)throw new Error(\'Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified\')}if(typeof o<"u"&&typeof n<"u"&&o.length>0&&n.length>f)throw new Error("Resize requires only of scales or sizes to be specified")},ic=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,\n     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`return ${t}(xResized) / ${t}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {\n                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;\n                  } else {\n                    return 0.0;\n                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {\n                    return 0.0;\n                  } else {\n                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating\n                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an\n                    // offset-by-one error later in floor().\n                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));\n                    let fract =\n                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);\n                    return whole + fract;\n                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {\n                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +\n                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /\n                        ${t}(lengthResized - 1);\n                  } else {\n                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);\n                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);\n                  const adjustment = ${t}(lengthResized) / outputWidth;\n                  const center = ${t}(lengthOriginal) / 2;\n                  const offset = center * (1 - adjustment);\n                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",sc=(e,t,r)=>`fn getNearestPixelFromOriginal(xOriginal: ${r}, isDownSample: bool) -> ${r} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",uc=(e,t,r)=>{let o=new Array(r).fill(0).concat(new Array(r).fill(1)),n=e.length===0?o:e.slice();return t.length>0?(t.forEach((u,l)=>{o[u]=n[l],o[l+r]=n[t.length+l]}),o):n},lc=(e,t,r,o)=>{let n=[];if(r.length>0)if(o.length>0){if(e.forEach(u=>n.push(u)),Math.max(...o)>e.length)throw new Error("axes is out of bound");o.forEach((u,l)=>n[u]=r[l])}else r.forEach(u=>n.push(u));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");n=e.map((u,l)=>Math.round(u*t[l]))}return n},dc=(e,t,r)=>{let o=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map(u=>t[u]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map(u=>t[u]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let n=e.slice();return r.axes.length>0?(r.axes.forEach(u=>t[u]=o),r.axes.forEach(u=>n[u]=Math.round(e[u]*t[u]))):(t.fill(o,0,t.length),n.forEach((u,l)=>n[l]=Math.round(u*t[l]))),n},cc=(e,t,r,o,n)=>`\n    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${r.length}> {\n      var original_indices: array<${e.type.value}, ${r.length}>;\n      for (var i:u32 = 0; i < ${r.length}; i++) {\n        var output_index = ${e.indicesGet("output_indices","i")};\n        var scale = ${de("uniforms.scales","i",o)};\n        var roi_low = ${de("uniforms.roi","i",n)};\n        var roi_hi = ${de("uniforms.roi",`i + ${t.length}`,n)};\n        if (scale == 1.0) {\n          original_indices[i] = ${e.type.value}(output_index);\n        } else {\n          var input_shape_i = ${de("uniforms.input_shape","i",t.length)};\n          var output_shape_i = ${de("uniforms.output_shape","i",r.length)};\n          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                           input_shape_i, roi_low, roi_hi);\n        }\n      }\n      return original_indices;\n    }`,pc=(e,t,r,o,n,u,l)=>`\n    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n      var input_indices: ${e.type.indices};\n      for (var i:u32 = 0; i < ${o.length}; i++) {\n        var output_index = ${t.indicesGet("output_indices","i")};\n        var input_index: u32;\n        var scale = ${de("uniforms.scales","i",n)};\n        if (scale == 1.0) {\n          input_index = output_index;\n        } else {\n          var roi_low = ${de("uniforms.roi","i",u)};\n          var roi_hi = ${de("uniforms.roi",`i + ${r.length}`,u)};\n          var input_shape_i = ${de("uniforms.input_shape","i",r.length)};\n          var output_shape_i = ${de("uniforms.output_shape","i",o.length)};\n          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                        input_shape_i, roi_low, roi_hi);\n          if (!${l} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {\n            if (original_idx < 0) {\n              input_index = 0;\n            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {\n              input_index = input_shape_i - 1;\n            } else {\n              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));\n            }\n          } else {\n            input_index = u32(original_idx);\n          }\n        }\n        ${e.indicesSet("input_indices","i"," input_index")}\n      }\n      return input_indices;\n    }`,mc=(e,t)=>`\n    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var input_index = ${e.indicesGet("input_indices","i")};\n        if (input_index < 0 || input_index >= ${de("uniforms.input_shape","i",t.length)}) {\n          return false;\n        }\n      }\n      return true;\n    }`,su=(e,t,r,o)=>e.rank>o?`\n    ${e.indicesSet("input_indices",t,"channel")};\n    ${e.indicesSet("input_indices",r,"batch")};\n`:"",fc=(e,t,r,o,n)=>{let[l,d,a,f]=r.length===2?[-1,0,1,-1]:[0,2,3,1],g=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${g} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",d,`max(0, min(row, ${r[d]} - 1))`)};\n      ${e.indicesSet("input_indices",a,`max(0, min(col, ${r[a]} - 1))`)};\n      ${su(e,f,l,2)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${g} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var row:${g} = originalIndices[${d}];\n      var col:${g} = originalIndices[${a}];\n      ${o?`if (row < 0 || row > (${r[d]} - 1) || col < 0 || col > (${r[a]} - 1)) {\n        return ${n};\n      }`:""};\n      row = max(0, min(row, ${r[d]} - 1));\n      col = max(0, min(col, ${r[a]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = ${r.length>2?`u32(originalIndices[${f}])`:"0"};\n      var batch: u32 =  ${r.length>2?`u32(originalIndices[${l}])`:"0"};\n      var x11: ${g} = getInputValue(batch, channel, row1, col1);\n      var x12: ${g} = getInputValue(batch, channel, row1, col2);\n      var x21: ${g} = getInputValue(batch, channel, row2, col1);\n      var x22: ${g} = getInputValue(batch, channel, row2, col2);\n      var dx1: ${g} = abs(row - ${g}(row1));\n      var dx2: ${g} = abs(${g}(row2) - row);\n      var dy1: ${g} = abs(col - ${g}(col1));\n      var dy2: ${g} = abs(${g}(col2) - col);\n      if (row1 == row2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (col1 == col2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`},hc=(e,t,r,o,n,u,l,d,a,f)=>{let g=r.length===2,y=!0,[v,$]=g?[0,1]:y?[2,3]:[1,2],b=e.type.value,C=A=>{let S=A===v?"row":"col";return`\n      fn ${S}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${b} {\n        var output_index = ${t.indicesGet("output_indices",A)};\n        var originalIdx: ${b} = getOriginalCoordinateFromResizedCoordinate(output_index, ${n[A]},\n        ${o[A]}, ${r[A]}, ${u[A]}, ${u[A]} + ${r.length});\n        var fractOriginalIdx: ${b} = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${d} && (originalIdx < 0 || originalIdx > (${r[A]} - 1))) {\n          return ${a};\n        }\n        var data: array<${b}, 4> = array<${b}, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${S}: ${b} = originalIdx + ${b}(i);\n          if (${S} < 0 || ${S} >= ${r[A]}) {\n            ${(()=>f?`coefs[i + 1] = 0.0;\n                        continue;`:d?`return ${a};`:`${S} = max(0, min(${S}, ${r[A]} - 1));`)()};\n          }\n        var input_indices_copy: ${e.type.indices} = input_indices;\n          ${e.indicesSet("input_indices_copy",A,`u32(${S})`)};\n          data[i + 1] = ${A===v?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${C(v)};\n    ${C($)};\n  fn getCubicInterpolationCoefs(s: ${b}) -> array<${b}, 4> {\n    var absS = abs(s);\n    var coeffs: array<${b}, 4> = array<${b}, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: ${b} = 1.0 - absS;\n    var twoMinusAbsS: ${b} = 2.0 - absS;\n    var onePlusAbsS: ${b} = 1.0 + absS;\n    coeffs[0] = ((${l} * onePlusAbsS - 5 * ${l}) * onePlusAbsS + 8 * ${l}) * onePlusAbsS - 4 * ${l};\n    coeffs[1] = ((${l} + 2) * absS - (${l} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${l} + 2) * oneMinusAbsS - (${l} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${l} * twoMinusAbsS - 5 * ${l}) * twoMinusAbsS + 8 * ${l}) * twoMinusAbsS - 4 * ${l};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<${b}, 4>, coefs: array<${b}, 4>) -> ${b} {\n    var coefsSum: ${b} = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${b} {\n    var input_indices: ${e.type.indices} = output_indices;\n    return colCubicInterpolation(input_indices, output_indices);\n  }\n    `},gc=(e,t,r,o,n)=>{let[l,d,a,f,g]=r.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],y=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${y} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",d,`max(0, min(depth, ${r[d]} - 1))`)};\n      ${e.indicesSet("input_indices",a,`max(0, min(height, ${r[a]} - 1))`)};\n      ${e.indicesSet("input_indices",f,`max(0, min(width, ${r[f]} - 1))`)};\n      ${su(e,g,l,3)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${y} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var depth:${y} = originalIndices[${d}];\n      var height:${y} = originalIndices[${a}];\n      var width:${y} = originalIndices[${f}];\n      ${o?`if (depth < 0 || depth > (${r[d]} - 1) || height < 0 || height > (${r[a]} - 1) || width < 0 || (width > ${r[f]} - 1)) {\n      return ${n};\n        }`:""};\n\n    depth = max(0, min(depth, ${r[d]} - 1));\n      height = max(0, min(height, ${r[a]} - 1));\n      width = max(0, min(width, ${r[f]} - 1));\n      var depth1: u32 = u32(depth);\n      var height1: u32 = u32(height);\n      var width1: u32 = u32(width);\n      var depth2: u32 = u32(depth + 1);\n      var height2: u32 = u32(height + 1);\n      var width2: u32 = u32(width + 1);\n      var channel: u32 = ${r.length>3?`u32(originalIndices[${g}])`:"0"};\n      var batch: u32 =  ${r.length>3?`u32(originalIndices[${l}])`:"0"};\n\n      var x111: ${y} = getInputValue(batch, channel, depth1, height1, width1);\n      var x112: ${y} = getInputValue(batch, channel, depth1, height1, width2);\n      var x121: ${y} = getInputValue(batch, channel, depth1, height2, width1);\n      var x122: ${y} = getInputValue(batch, channel, depth1, height2, width2);\n      var x211: ${y} = getInputValue(batch, channel, depth2, height1, width1);\n      var x212: ${y} = getInputValue(batch, channel, depth2, height1, width2);\n      var x221: ${y} = getInputValue(batch, channel, depth2, height2, width1);\n      var x222: ${y} = getInputValue(batch, channel, depth2, height2, width2);\n      var dx1: ${y} = abs(depth - ${y}(depth1));\n      var dx2: ${y} = abs(${y}(depth2) - depth);\n      var dy1: ${y} = abs(height - ${y}(height1));\n      var dy2: ${y} = abs(${y}(height2) - height);\n      var dz1: ${y} = abs(width - ${y}(width1));\n      var dz2: ${y} = abs(${y}(width2) - width);\n      if (depth1 == depth2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (height1 == height2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      if (width1 == width2) {\n        dz1 = 0.5;\n        dz2 = 0.5;\n      }\n      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +\n              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);\n    }`},yc=(e,t,r,o,n,u)=>{let l=e.dims,d=uc(u,t.axes,l.length),a=lc(l,o,n,t.axes),f=o.slice();o.length===0&&(f=l.map((_,E)=>_===0?1:a[E]/_),t.keepAspectRatioPolicy!=="stretch"&&(a=dc(l,f,t)));let g=Q("output",e.dataType,a.length),y=z("input",e.dataType,l.length),v=N.size(a),$=l.length===a.length&&l.every((_,E)=>_===a[E]),b=t.coordinateTransformMode==="tf_crop_and_resize",C=t.extrapolationValue,A=y.type.value,S=_=>`\n      ${$?"":`\n      ${ic(t.coordinateTransformMode,A)};\n      ${(()=>{switch(t.mode){case"nearest":return`\n              ${mc(y,l)};\n              ${sc(t.nearestMode,r,A)};\n              ${pc(y,g,l,a,f.length,d.length,b)};\n              `;case"linear":return`\n              ${cc(g,l,a,f.length,d.length)};\n              ${(()=>{if(l.length===2||l.length===4)return`${fc(y,g,l,b,C)}`;if(l.length===3||l.length===5)return`${gc(y,g,l,b,C)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};\n            `;case"cubic":return`\n            ${(()=>{if(l.length===2||l.length===4)return`${hc(y,g,l,a,f,d,t.cubicCoeffA,b,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};\n            `;default:throw Error("Invalid resize mode")}})()};\n      `}\n      ${_.registerUniform("output_size","u32").registerUniform("scales","f32",f.length).registerUniform("roi","f32",d.length).declareVariables(y,g)}\n      ${_.mainStart()}\n        ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n        ${$?"output[global_idx] = input[global_idx];":`\n        let output_indices = ${g.offsetToIndices("global_idx")};\n        var input_indices: ${y.type.indices};\n        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);\n                if (checkInputIndices(input_indices)) {\n                  output[global_idx] = ${y.getByIndices("input_indices")};\n                } else {\n                  output[global_idx] = ${t.extrapolationValue};\n                }`;case"linear":return`output[global_idx] = ${l.length===2||l.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};\n`}\n      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${f.length>0?f:""}|${n.length>0?n:""}|${d.length>0?d:""}|${$}|${l}`,inputDependencies:["rank"]},getShaderSource:S,getRunData:()=>({outputs:[{dims:a,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(v/64)},programUniforms:[{type:"uint32",data:v},{type:"float32",data:f},{type:"float32",data:d},...j(l),...j(a)]})}},bc=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},uu=(e,t)=>{let r=[],o=[],n=[],u=bc(e);if(t.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");ac(e.inputs,t,u,r,o,n),e.compute(yc(e.inputs[0],t,u,r,o,n),{inputs:[0]})},lu=e=>{let t=e.antialias,r=e.axes,o=e.coordinateTransformMode,n=e.cubicCoeffA,u=e.excludeOutside!==0,l=e.extrapolationValue,d=e.keepAspectRatioPolicy,a=e.mode,f=e.nearestMode===""?"simple":e.nearestMode;return he({antialias:t,axes:r,coordinateTransformMode:o,cubicCoeffA:n,excludeOutside:u,extrapolationValue:l,keepAspectRatioPolicy:d,mode:a,nearestMode:f})}});var wc,vc,cu,pu,mu=X(()=>{"use strict";Ve();Se();Fe();$e();wc=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],o=e[2];if(t.dataType!==r.dataType||t.dataType!==o.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let n=t.dims[t.dims.length-1],u=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==n)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==u)throw new Error("Skip must have the same sequence length as input");if(o.dims.length!==1)throw new Error("Gamma must be 1D");if(o.dims[o.dims.length-1]!==n)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let l=e[3];if(l.dims.length!==1)throw new Error("Beta must be 1D");if(l.dims[l.dims.length-1]!==n)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let l=e[4];if(l.dims.length!==1)throw new Error("Bias must be 1D");if(l.dims[l.dims.length-1]!==n)throw new Error("Bias must have the same hidden size as input")}},vc=(e,t,r,o)=>{let n=e[0].dims,u=N.size(n),l=n,d=u,a=n.slice(-1)[0],f=o?n.slice(0,-1).concat(1):[],g=e.length>3,y=e.length>4,v=o&&r>1,$=o&&r>2,b=r>3,C=Le(a),A=[z("x",e[0].dataType,e[0].dims,C),z("skip",e[1].dataType,e[1].dims,C),z("gamma",e[2].dataType,e[2].dims,C)];g&&A.push(z("beta",e[3].dataType,e[3].dims,C)),y&&A.push(z("bias",e[4].dataType,e[4].dims,C)),A.push(Q("output",e[0].dataType,l,C)),v&&A.push(Q("meanOutput",1,f)),$&&A.push(Q("invStdOutput",1,f)),b&&A.push(Q("inputSkipBiasSum",e[0].dataType,l,C));let S=Ge(e[0].dataType),_=T=>`\n      const hiddenSize: f32 = ${a};\n      const hiddenSizeVectorized: u32 = ${a/C};\n      const epsilon: f32 = ${t.epsilon};\n\n      ${T.declareVariables(...A)}\n\n      ${T.mainStart()}\n        ${T.guardAgainstOutOfBoundsWorkgroupSizes(d/a)}\n        let offset = global_idx * hiddenSizeVectorized;\n        var sum = ${Xe("f32",C)};\n        var squareSum = ${Xe("f32",C)};\n        for (var i: u32 = 0; i < hiddenSizeVectorized; i++) {\n          let skipValue = skip[offset + i];\n          let biasValue = ${y?"bias[i]":"0.0"};\n          let inputValue = x[offset + i];\n          let value = inputValue + skipValue + biasValue;\n          ${b?"inputSkipBiasSum[offset + i] = value;":""}\n          output[offset + i] = value;\n          let f32Value = ${mt(S,C,"value")};\n          sum += f32Value;\n          squareSum += f32Value * f32Value;\n        }\n        let mean = ${nt("sum",C)} / hiddenSize;\n        let invStdDev = inverseSqrt(${nt("squareSum",C)} / hiddenSize - mean * mean + epsilon);\n        ${v?"meanOutput[global_idx] = mean;":""}\n        ${$?"invStdOutput[global_idx] = invStdDev;":""}\n        for (var i: u32 = 0; i < hiddenSizeVectorized; i++) {\n          output[offset + i] = (output[offset + i] - ${S}(mean)) * ${S}(invStdDev) * gamma[i]\n           + ${g?"beta[i]":"0.0"};\n        }\n      }`,E=[{dims:l,dataType:e[0].dataType}];return r>1&&E.push({dims:f,dataType:1}),r>2&&E.push({dims:f,dataType:1}),r>3&&E.push({dims:n,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:t.cacheKey},getShaderSource:_,getRunData:()=>({outputs:E,dispatchGroup:{x:Math.ceil(d/a/64)}})}},cu=(e,t)=>{wc(e.inputs);let o=[0];e.outputCount>1&&o.push(-3),e.outputCount>2&&o.push(-3),e.outputCount>3&&o.push(3),e.compute(vc(e.inputs,t,e.outputCount,!1),{outputs:o})},pu=e=>{let t=e.epsilon;return he({epsilon:t})}});var $c,Bn,Sc,fu,xc,_c,hu,gu,yu=X(()=>{"use strict";Ve();Se();Fe();$e();$c=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,o)=>{if(e[o+1].dataType!==6&&e[o+1].dataType!==7)throw new Error(`Input ${o} must be an array of int32 or int64`)})},Bn=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(o=>r.push(Number(o)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(o=>r.push(Number(o)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},Sc=(e,t)=>{if(e.length>1){let r=Bn(e,1),o=Bn(e,2),n=Bn(e,3);return n.length===0&&(n=[...Array(e[0].dims.length).keys()]),he({starts:r,ends:o,axes:n})}else return t},fu=(e,t,r,o,n)=>{let u=e;return e<0&&(u+=r[o[t]]),n[t]<0?Math.max(0,Math.min(u,r[o[t]]-1)):Math.max(0,Math.min(u,r[o[t]]))},xc=(e,t,r)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n          var input_indices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${r.length}; i >= 0; i--) {\n            let input_shape_i = ${de("uniforms.input_shape","i",r.length)};\n            let steps_i = ${de("uniforms.steps","i",r.length)};\n            let signs_i = ${de("uniforms.signs","i",r.length)};\n            let starts_i = ${de("uniforms.starts","i",r.length)};\n            var output_index = ${t.indicesGet("output_indices","i")};\n            var input_index = output_index * steps_i + starts_i + carry;\n            carry = input_index / input_shape_i;\n            input_index = input_index % input_shape_i;\n            if (signs_i < 0) {\n              input_index = input_shape_i - input_index - 1u + starts_i;\n            }\n            ${e.indicesSet("input_indices","i","input_index")};\n          }\n          return input_indices;\n      }`,_c=(e,t)=>{let r=e[0].dims,o=N.size(r),n=t.axes.length>0?N.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],u=Bn(e,4);u.forEach(S=>S!==0||(()=>{throw new Error("step cannot be 0")})),u.length===0&&(u=Array(n.length).fill(1));let l=t.starts.map((S,_)=>fu(S,_,r,n,u)),d=t.ends.map((S,_)=>fu(S,_,r,n,u));if(n.length!==l.length||n.length!==d.length)throw new Error("start, ends and axes should have the same number of elements");if(n.length!==r.length)for(let S=0;S<r.length;++S)n.includes(S)||(l.splice(S,0,0),d.splice(S,0,r[S]),u.splice(S,0,1));let a=u.map(S=>Math.sign(S));u.forEach((S,_,E)=>{if(S<0){let T=(d[_]-l[_])/S,V=l[_],k=V+T*u[_];l[_]=k,d[_]=V,E[_]=-S}});let f=r.slice(0);n.forEach((S,_)=>{f[S]=Math.ceil((d[S]-l[S])/u[S])});let g={dims:f,dataType:e[0].dataType},y=Q("output",e[0].dataType,f.length),v=z("input",e[0].dataType,e[0].dims.length),$=N.size(f),b=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:l.length},{name:"signs",type:"i32",length:a.length},{name:"steps",type:"u32",length:u.length}],C=[{type:"uint32",data:$},{type:"uint32",data:l},{type:"int32",data:a},{type:"uint32",data:u},...j(e[0].dims),...j(f)],A=S=>`\n      ${S.registerUniforms(b).declareVariables(v,y)}\n        ${xc(v,y,r)}\n        ${S.mainStart()}\n          ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n          let output_indices = ${y.offsetToIndices("global_idx")};\n          let input_indices = calculateInputIndices(output_indices);\n          ${y.setByOffset("global_idx",v.getByIndices("input_indices"))}\n      }`;return{name:"Slice",shaderCache:{hint:`${a.length}_${l.length}_${u.length}`,inputDependencies:["rank"]},getShaderSource:A,getRunData:()=>({outputs:[g],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:C})}},hu=(e,t)=>{$c(e.inputs,t);let r=Sc(e.inputs,t);e.compute(_c(e.inputs,r),{inputs:[0]})},gu=e=>{let t=e.starts,r=e.ends,o=e.axes;return he({starts:t,ends:r,axes:o})}});var Cc,Ic,bu,wu,vu=X(()=>{"use strict";Se();Fe();$e();Cc=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},Ic=(e,t)=>{let r=e.dims,o=N.size(r),n=64,u=t.axis;if(u<0&&(u=r.length+u),u<r.length-1)throw new Error("softmax only supports last axis for now.");let l=r[u],d=o/l,a=Le(l),f=l/a,g=(A,S)=>S===4?`max(max(${A}.x, ${A}.y), max(${A}.z, ${A}.w))`:S===2?`max(${A}.x, ${A}.y)`:S===3?`max(max(${A}.x, ${A}.y), ${A}.z)`:A,y=z("x",e.dataType,e.dims,a),v=Q("result",e.dataType,e.dims,a),$=y.type.value,b=Ge(e.dataType)==="f32"?`var threadMax = ${$}(-3.402823e+38f);`:`var threadMax = ${$}(-65504.0h);`,C=A=>`\n      var<workgroup> rowMaxShared : ${$};\n      var<workgroup> rowSumShared : ${$};\n      var<workgroup> threadShared : array<${$}, ${n}>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${$} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${$}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n      ${A.registerUniform("packedCols","i32").declareVariables(y,v)}\n      ${A.mainStart()}\n        let gindex = i32(global_idx);\n        let lindex = i32(local_idx);\n        const wg = ${n};\n        let row = gindex / wg;\n        let cols = uniforms.packedCols;\n        let row_stride : i32 = uniforms.packedCols;\n\n        // find the rows max\n        ${b}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = ${$}(${g("threadShared[0]",a)});\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = ${$}(0.0);\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = ${$}(${nt("threadShared[0]",a)});\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`;return{name:"Softmax",shaderCache:{hint:`${a}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.dataType}],dispatchGroup:{x:d},programUniforms:[{type:"uint32",data:f}]}),getShaderSource:C}},bu=(e,t)=>{Cc(e.inputs),e.compute(Ic(e.inputs[0],t))},wu=e=>he({axis:e.axis})});var Ac,Tc,Ec,Oc,Pc,$u,Su,xu=X(()=>{"use strict";Se();Fe();$e();Ac=e=>{if(!e||e.length<1)throw new Error("too few inputs")},Tc=(e,t)=>{let r=[],o=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(n=>r.push(Number(n))),o=r.length),he({numOutputs:o,axis:t.axis,splitSizes:r})},Ec=e=>`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n    if (index < ${de("uniforms.size_in_split_axis","i",e)}) {\n        return i;\n    }\n    }\n    return ${e}u;\n}`,Oc=e=>{let t=e.length,r=[];for(let o=0;o<t;++o){let n=e[o].setByIndices("indices","input[global_idx]");t===1?r.push(n):o===0?r.push(`if (output_number == ${o}u) { ${n} }`):o===t-1?r.push(`else { ${n} }`):r.push(`else if (output_number == ${o}) { ${n} }`)}return`\n      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${r.join(`\n`)}\n      }`},Pc=(e,t)=>{let r=e[0].dims,o=N.size(r),n=e[0].dataType,u=N.normalizeAxis(t.axis,r.length),l=new Array(t.numOutputs),d=z("input",n,r),a=new Array(t.numOutputs),f=[],g=[],y=0,v=[{type:"uint32",data:o}];for(let b=0;b<t.numOutputs;b++){y+=t.splitSizes[b],a[b]=y;let C=r.slice();C[t.axis]=t.splitSizes[b],g.push(C),l[b]=Q(`output${b}`,n,C),f.push({dims:g[b],dataType:e[0].dataType})}v.push({type:"uint32",data:a}),v.push(...j(r)),g.forEach(b=>v.push(...j(b)));let $=b=>`\n  ${b.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",a.length).declareVariables(d,...l)}\n  ${Ec(a.length)}\n  ${Oc(l)}\n\n  ${b.mainStart()}\n    ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}\n\n    var indices = ${d.offsetToIndices("global_idx")};\n    var index = ${d.indicesGet("indices",u)};\n    let output_number = calculateOutputIndex(index);\n    if (output_number != 0) {\n      index -= ${de("uniforms.size_in_split_axis","output_number - 1u",a.length)};\n      ${d.indicesSet("indices",u,"index")};\n    }\n    writeBufferData(output_number, indices, global_idx);\n  }`;return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:$,getRunData:()=>({outputs:f,dispatchGroup:{x:Math.ceil(o/64)},programUniforms:v})}},$u=(e,t)=>{Ac(e.inputs);let r=e.inputs.length===1?t:Tc(e.inputs,t);e.compute(Pc(e.inputs,r),{inputs:[0]})},Su=e=>{let t=e.axis,r=e.splitSizes,o=e.numOutputs<0?r.length:e.numOutputs;if(o!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return he({axis:t,numOutputs:o,splitSizes:r})}});var _u,Rc,kc,Bc,Cu,Iu=X(()=>{"use strict";Ve();Se();$e();_u=e=>Array.from(e.getBigInt64Array(),Number),Rc=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(_u(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},kc=(e,t)=>{let r=[];for(let o=0;o<e.length;++o)r.push(e[o]*t[o]);return r},Bc=e=>{let t=e[0].dims,r=_u(e[1]),o=kc(t,r),n=N.size(o),u=e[0].dataType,l=z("input",u,t.length),d=Q("output",u,o.length),a=f=>`\n      const inputShape = ${l.indices(...t)};\n      ${f.registerUniform("output_size","u32").declareVariables(l,d)}\n      ${f.mainStart()}\n      ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let output_indices = ${d.offsetToIndices("global_idx")};\n      var input_indices: ${l.type.indices};\n      for (var i = 0; i < ${t.length}; i++) {\n        let input_dim_i = ${l.indicesGet("uniforms.input_shape","i")};\n        let input_dim_value = ${d.indicesGet("output_indices","i")}  % input_dim_i;\n\n        ${l.indicesSet("input_indices","i","input_dim_value")}\n      }\n      ${d.setByOffset("global_idx",l.getByIndices("input_indices"))}\n    }`;return{name:"Tile",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:[{type:"uint32",data:n},...j(e[0].dims),...j(o)]}),getShaderSource:a}},Cu=e=>{Rc(e.inputs),e.compute(Bc(e.inputs),{inputs:[0]})}});var Dc,Mc,Au,Tu=X(()=>{"use strict";Ve();Se();$e();Dc=(e,t,r,o,n)=>{let u=Q("output_data",n,r.length,4),l=z("a_data",t[1].dataType,t[1].dims.length,4),d=z("b_data",t[2].dataType,t[2].dims.length,4),a=z("c_data",t[0].dataType,t[0].dims.length,4),f,g=(y,v,$)=>`select(${v}, ${y}, ${$})`;if(!o)f=u.setByOffset("global_idx",g(l.getByOffset("global_idx"),d.getByOffset("global_idx"),a.getByOffset("global_idx")));else{let y=(v,$,b="")=>{let C=`a_data[index_a${$}][component_a${$}]`,A=`b_data[index_b${$}][component_b${$}]`,S=`bool(c_data[index_c${$}] & ${4278190080>>>(3-$)*8}u)`;return`\n            let output_indices${$} = ${u.offsetToIndices(`global_idx * 4u + ${$}u`)};\n            let offset_a${$} = ${l.broadcastedIndicesToOffset(`output_indices${$}`,u)};\n            let offset_b${$} = ${d.broadcastedIndicesToOffset(`output_indices${$}`,u)};\n            let offset_c${$} = ${a.broadcastedIndicesToOffset(`output_indices${$}`,u)};\n            let index_a${$} = offset_a${$} / 4u;\n            let index_b${$} = offset_b${$} / 4u;\n            let index_c${$} = offset_c${$} / 4u;\n            let component_a${$} = offset_a${$} % 4u;\n            let component_b${$} = offset_b${$} % 4u;\n            ${v}[${$}] = ${b}(${g(C,A,S)});\n          `};n===9?f=`\n            var data = vec4<u32>(0);\n            ${y("data",0,"u32")}\n            ${y("data",1,"u32")}\n            ${y("data",2,"u32")}\n            ${y("data",3,"u32")}\n            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:f=`\n            ${y("output_data[global_idx]",0)}\n            ${y("output_data[global_idx]",1)}\n            ${y("output_data[global_idx]",2)}\n            ${y("output_data[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(a,l,d,u)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${f}\n      }`},Mc=e=>{let t=e[1].dims,r=e[2].dims,o=e[0].dims,n=e[1].dataType,u=!(N.areEqual(t,r)&&N.areEqual(r,o)),l=t,d=N.size(t);if(u){let f=gt.calcShape(gt.calcShape(t,r,!1),o,!1);if(!f)throw new Error("Can\'t perform where op on the given tensors");l=f,d=N.size(l)}let a=Math.ceil(d/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:f=>Dc(f,e,l,u,n),getRunData:()=>({outputs:[{dims:l,dataType:n}],dispatchGroup:{x:Math.ceil(d/64/4)},programUniforms:[{type:"uint32",data:a},...j(o),...j(t),...j(r),...j(l)]})}},Au=e=>{e.compute(Mc(e.inputs))}});var Eu,Ou=X(()=>{"use strict";Ja();po();ri();oi();zi();Ki();Qi();yo();cs();fs();ws();Ss();Cs();Ts();Ps();ks();Ds();wo();Vs();Ws();ou();iu();Sn();du();mu();yu();vu();xu();Iu();ur();mo();Tu();Eu=new Map([["Abs",[ai]],["Acos",[ii]],["Acosh",[si]],["Add",[Ui]],["ArgMax",[Xa,co]],["ArgMin",[Qa,co]],["Asin",[ui]],["Asinh",[li]],["Atan",[di]],["Atanh",[ci]],["Attention",[ei]],["AveragePool",[Ys,Ks]],["BatchNormalization",[ti]],["BiasAdd",[ni]],["BiasSplitGelu",[Mi]],["Cast",[mi,pi]],["Ceil",[hi]],["Clip",[fi]],["Concat",[Yi,Zi]],["Conv",[$o,vo]],["ConvTranspose",[ds,ls]],["Cos",[gi]],["Cosh",[yi]],["CumSum",[ps,ms]],["Div",[Vi]],["Einsum",[ys,bs]],["Elu",[bi,Cn]],["Equal",[Ni]],["Erf",[wi]],["Exp",[vi]],["Expand",[$s]],["Floor",[$i]],["FusedConv",[$o,vo]],["Gather",[_s,xs]],["GatherElements",[As,Is]],["Gelu",[Si]],["Gemm",[Os,Es]],["GlobalAveragePool",[Xs,Qs]],["GlobalMaxPool",[nu,ru]],["Greater",[Li]],["GreaterOrEqual",[ji]],["InstanceNormalization",[Rs]],["LayerNormalization",[Bs]],["LeakyRelu",[xi,Cn]],["Less",[Fi]],["LessOrEqual",[qi]],["Log",[Di]],["MatMul",[rs]],["MaxPool",[eu,tu]],["Mul",[Wi]],["MultiHeadAttention",[Us,zs]],["Neg",[Ci]],["Not",[_i]],["Pad",[Ns]],["Pow",[Hi]],["Range",[au]],["Reciprocal",[Ii]],["ReduceMin",[Fa]],["ReduceMean",[Na]],["ReduceMax",[La]],["ReduceSum",[qa]],["ReduceProd",[ja]],["ReduceL1",[Wa]],["ReduceL2",[Ha]],["ReduceLogSum",[Ya]],["ReduceLogSumExp",[Ga]],["ReduceSumSquare",[Ka]],["Relu",[Ai]],["Resize",[uu,lu]],["Sigmoid",[Ti]],["Sin",[Ei]],["Sinh",[Oi]],["Slice",[hu,gu]],["SkipLayerNormalization",[cu,pu]],["Split",[$u,Su]],["Sqrt",[Pi]],["Softmax",[bu,wu]],["Sub",[Gi]],["Tan",[Ri]],["Tanh",[ki]],["ThresholdedRelu",[Bi,Cn]],["Tile",[Cu]],["Transpose",[Aa,Ta]],["Where",[Au]]])});var Dn,Pu=X(()=>{"use strict";ir();Pt();$e();Dn=class{constructor(t){this.backend=t;this.repo=new Map,this.attributesBound=!1}getArtifact(t){return this.repo.get(t)}setArtifact(t,r){this.repo.set(t,r)}run(t,r,o,n,u){Nt(t.programInfo.name);let l=this.backend.device,d=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2),d.setPipeline(t.computePipeline);let a=[];for(let g of r)a.push({binding:a.length,resource:{buffer:g.buffer}});for(let g of o)a.push({binding:a.length,resource:{buffer:g.buffer}});u&&a.push({binding:a.length,resource:u});let f=l.createBindGroup({layout:t.computePipeline.getBindGroupLayout(0),entries:a,label:t.programInfo.name});d.setBindGroup(0,f),d.dispatchWorkgroups(...n),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Wt(t.programInfo.name)}dispose(){}build(t,r){Nt(t.name);let o=this.backend.device,n=[];o.features.has("shader-f16")&&n.push("enable f16;");let u=Ca(r),l=t.getShaderSource(u),d=`${n.join(`\n`)}\n${u.additionalImplementations}\n${l}`,a=o.createShaderModule({code:d,label:t.name});ke("verbose",()=>`[WebGPU] ${t.name} shader code: ${d}`);let f=o.createComputePipeline({compute:{module:a,entryPoint:"main"},layout:"auto",label:t.name});return Wt(t.name),{programInfo:t,computePipeline:f}}normalizeDispatchGroupSize(t){let r=typeof t=="number"?t:t.x,o=typeof t=="number"?1:t.y||1,n=typeof t=="number"?1:t.z||1,u=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=u&&o<=u&&n<=u)return[r,o,n];let l=r*o*n,d=Math.ceil(Math.sqrt(l));if(d>u){if(d=Math.ceil(Math.cbrt(l)),d>u)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[d,d,d]}else return[d,d,1]}}});var zc,Uc,Mn,Ru=X(()=>{"use strict";ir();Ve();Pt();va();_a();Ou();Pu();zc=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let o=0;o<e.length;++o){let n=e[o].dataType;switch(t[o]){case"none":{r.push("");break}case"type":{r.push(`${n}`);break}case"rank":{let u=e[o].dims.length;r.push(`${n};${u}`);break}case"dims":{let u=e[o].dims.join(",");r.push(`${n};${u}`);break}default:throw new Error(`unsupported input dependency: ${t[o]}`)}}return r.join("|")},Uc=(e,t,r)=>{let o=e.name;return e.shaderCache?.hint&&(o+="["+e.shaderCache.hint+"]"),o+=":"+r+`:${zc(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,o},Mn=class{constructor(){this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.maxDispatchNumber=16;this.pendingDispatchNumber=0;this.pendingKernels=[];this.pendingQueries=new Map;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let t=this.kernelCustomData.get(this.currentKernelId);return t||(t={},this.kernelCustomData.set(this.currentKernelId,t)),t}async initialize(t,r){this.env=t;let o=[],n={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:o};r.features.has("chromium-experimental-timestamp-query-inside-passes")?o.push("chromium-experimental-timestamp-query-inside-passes"):r.features.has("timestamp-query")&&o.push("timestamp-query"),r.features.has("shader-f16")&&o.push("shader-f16"),this.device=await r.requestDevice(n),this.gpuDataManager=xa(this),this.programManager=new Dn(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,ba(t.logLevel,!!t.debug),this.device.onuncapturederror=u=>{u.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${u.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder(),this.setQueryType(),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE}))),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let t={};this.queryType==="at-passes"&&(t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=this.getCommandEncoder().beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;Nt(),this.endComputePass();let t;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),t=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(t,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,t,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&t.mapAsync(GPUMapMode.READ).then(()=>{let r=new BigUint64Array(t.getMappedRange()),o=this.pendingQueries.get(t);for(let n=0;n<r.length/2;n++){let u=o[n],l=u.kernelId,d=this.kernels.get(l),a=d.kernelType,f=d.kernelName,g=u.programName,y=u.inputTensorViews,v=u.outputTensorViews,$=r[n*2],b=r[n*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=$);let C=Number($-this.queryTimeBase),A=Number(b-this.queryTimeBase);if(!Number.isSafeInteger(C)||!Number.isSafeInteger(A))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:y.map(S=>({dims:S.dims,dataType:rt(S.dataType)})),outputsMetadata:v.map(S=>({dims:S.dims,dataType:rt(S.dataType)})),kernelId:l,kernelType:a,kernelName:f,programName:g,startTime:C,endTime:A});else{let S="";y.forEach((E,T)=>{S+=`input[${T}]: [${E.dims}] | ${rt(E.dataType)}, `});let _="";v.forEach((E,T)=>{_+=`output[${T}]: [${E.dims}] | ${rt(E.dataType)}, `}),console.log(`[profiling] kernel "${l}|${a}|${f}|${g}" ${S}${_}execution time: ${A-C} ns`)}eo("GPU",`${g}::${$}::${b}`)}t.unmap(),this.pendingQueries.delete(t)}),Wt()}run(t,r,o,n,u){Nt(t.name);let l=[];for(let _=0;_<r.length;++_){let E=this.gpuDataManager.get(r[_].data);if(!E)throw new Error(`no GPU data for input: ${r[_].data}`);l[_]=E}let{outputs:d,dispatchGroup:a,programUniforms:f}=t.getRunData(r),g=o.length===0?d.map((_,E)=>E):o;if(g.length!==d.length)throw new Error(`Output size ${g.length} must be equal to ${d.length}.`);let y=[],v=[];for(let _=0;_<d.length;++_){if(!Number.isInteger(g[_])||g[_]<-3||g[_]>=d.length)throw new Error(`Invalid output index: ${g[_]}`);if(g[_]===-3)continue;let E=g[_]===-1,T=g[_]===-2,V=E||T?u(d[_].dataType,d[_].dims):n(g[_],d[_].dataType,d[_].dims),k=this.gpuDataManager.get(V.data);if(!k)throw new Error(`no GPU data for output: ${V.data}`);if(E&&this.temporaryData.push(k),T){let U=this.kernelPersistentData.get(this.currentKernelId);U||(U=[],this.kernelPersistentData.set(this.currentKernelId,U)),U.push(k)}y.push(V),v.push(k)}let $;if(f){let _=0,E=[];f.forEach(U=>{let W=typeof U.data=="number"?[U.data]:U.data;if(W.length===0)return;let Z=W.length<=2?W.length*4:16;_=Math.ceil(_/Z)*Z,E.push(_),_+=W.length>4?Math.ceil(W.length/4)*16:W.length*4});let T=16;_=Math.ceil(_/T)*T;let V=new ArrayBuffer(_);f.forEach((U,W)=>{let Z=E[W],B=typeof U.data=="number"?[U.data]:U.data;U.type==="int32"?new Int32Array(V,Z,B.length).set(B):U.type==="uint32"?new Uint32Array(V,Z,B.length).set(B):new Float32Array(V,Z,B.length).set(B)});let k=this.gpuDataManager.create(_,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(k.buffer,0,V,0,_),this.gpuDataManager.release(k.id),$={offset:0,size:_,buffer:k.buffer}}let b=this.programManager.normalizeDispatchGroupSize(a),C=b[1]===1&&b[2]===1,A=Uc(t,r,C),S=this.programManager.getArtifact(A);if(S||(S=this.programManager.build(t,b),this.programManager.setArtifact(A,S),ke("info",()=>`[artifact] key: ${A}, programName: ${t.name}`)),ke("info",()=>`[ProgramManager] run "${t.name}" (key=${A}) with ${b[0]}x${b[1]}x${b[2]}`),this.queryType!=="none"){let _={kernelId:this.currentKernelId,programName:S.programInfo.name,inputTensorViews:r,outputTensorViews:y};this.pendingKernels.push(_)}return this.programManager.run(S,l,v,b,$),Wt(t.name),y}upload(t,r){this.gpuDataManager.upload(t,r)}memcpy(t,r){this.gpuDataManager.memcpy(t,r)}async download(t,r){await this.gpuDataManager.download(t,r)}alloc(t){return this.gpuDataManager.create(t).id}free(t){return this.gpuDataManager.release(t)}createKernel(t,r,o,n){let u=Eu.get(t);if(!u)throw new Error(`kernel not implemented: ${t}`);let l={kernelType:t,kernelName:n,kernelEntry:u[0],attributes:[u[1],o]};this.kernels.set(r,l)}releaseKernel(t){let r=this.kernelPersistentData.get(t);if(r){for(let o of r)this.gpuDataManager.release(o.id);this.kernelPersistentData.delete(t)}this.kernelCustomData.delete(t),this.kernels.delete(t)}computeKernel(t,r,o){let n=this.kernels.get(t);if(!n)throw new Error(`kernel not created: ${t}`);let u=n.kernelType,l=n.kernelName,d=n.kernelEntry,a=n.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${u}] ${l}" is not allowed to be called recursively`);this.currentKernelId=t,a[0]&&(a[1]=a[0](a[1]),a[0]=void 0),ke("info",()=>`[WebGPU] Start to run kernel "[${u}] ${l}"...`);let f=this.env.debug;this.temporaryData=[];try{return f&&this.device.pushErrorScope("validation"),d(r,a[1]),0}catch(g){return o.push(Promise.resolve(`[WebGPU] Kernel "[${u}] ${l}" failed. ${g}`)),1}finally{f&&o.push(this.device.popErrorScope().then(g=>g?`GPU validation error for kernel "[${u}] ${l}": ${g.message}`:null));for(let g of this.temporaryData)this.gpuDataManager.release(g.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(t,r,o,n){let u=this.sessionExternalDataMapping.get(t);u||(u=new Map,this.sessionExternalDataMapping.set(t,u));let l=u.get(r),d=this.gpuDataManager.registerExternalBuffer(o,n,l?.[1]);return u.set(r,[d,o]),d}unregisterBuffers(t){let r=this.sessionExternalDataMapping.get(t);r&&(r.forEach(o=>this.gpuDataManager.unregisterExternalBuffer(o[1])),this.sessionExternalDataMapping.delete(t))}getBuffer(t){let r=this.gpuDataManager.get(t);if(!r)throw new Error(`no GPU data for buffer: ${t}`);return r.buffer}createDownloader(t,r,o){return async()=>{let n=await no(this,t,r);return wa(n.buffer,o)}}writeTimestamp(t){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,t)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||this.env.wasm.trace)&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"))}}});var ku={};dn(ku,{init:()=>Vc});var kr,Ao,Vc,Bu=X(()=>{"use strict";Ve();Ru();Pt();Se();kr=class e{constructor(t,r,o,n){this.module=t;this.dataType=r;this.data=o;this.dims=n}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=N.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=N.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=N.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(N.size(t)!==N.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,t)}},Ao=class{constructor(t,r,o){this.module=t;this.backend=r;this.customDataOffset=0;this.customDataSize=0;let n=t.HEAPU32,u=o>>>2;this.opKernelContext=n[u++];let l=n[u++];this.outputCount=n[u++],this.customDataOffset=n[u++],this.customDataSize=n[u++];let d=[];for(let a=0;a<l;a++){let f=n[u++],g=n[u++],y=n[u++],v=[];for(let $=0;$<y;$++)v.push(n[u++]);d.push(new kr(t,f,g,v))}this.inputs=d}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(t,r){let o=r?.inputs?.map(d=>typeof d=="number"?this.inputs[d]:d)??this.inputs,n=r?.outputs??[],u=(d,a,f)=>new kr(this.module,a,this.output(d,f),f),l=(d,a)=>{let f=Tr(d);if(!f)throw new Error(`Unsupported data type: ${d}`);let g=f*N.size(a);return new kr(this.module,d,this.backend.gpuDataManager.create(g).id,a)};return this.backend.run(t,o,n,u,l)}output(t,r){let o=this.module.stackSave();try{let n=this.module.stackAlloc((1+r.length)*4),u=n>>2;this.module.HEAPU32[u++]=r.length;for(let l=0;l<r.length;l++)this.module.HEAPU32[u++]=r[l];return this.module._JsepOutput(this.opKernelContext,t,n)}catch(n){throw new Error(`Failed to generate kernel\'s output[${t}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${n}`)}finally{this.module.stackRestore(o)}}},Vc=async(e,t,r)=>{let o=e.jsepInit;if(!o)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");let n=new Mn;await n.initialize(t,r),o(n,u=>n.alloc(u),u=>n.free(u),(u,l,d,a=!1)=>{if(a)ke("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${u}, dst=${l}, size=${d}`),n.memcpy(u,l);else{ke("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${u}, gpuDataId=${l}, size=${d}`);let f=e.HEAPU8.subarray(u>>>0,(u>>>0)+d);n.upload(l,f)}},async(u,l,d)=>{ke("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${u}, dataOffset=${l}, size=${d}`),await n.download(u,()=>e.HEAPU8.subarray(l>>>0,(l>>>0)+d))},(u,l,d)=>n.createKernel(u,l,d,e.UTF8ToString(e._JsepGetNodeName(l))),u=>n.releaseKernel(u),(u,l,d,a)=>{ke("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${d}, kernel=${u}, contextDataOffset=${l}`);let f=new Ao(e,n,l);return n.computeKernel(u,f,a)})}});var Ko;Ko=Uo();var Ju=Fo(),Yn,Zn=!1,cn=!1,qo=!1,el=e=>{if(e===1)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+e+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+e+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},tl=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},rl=(e,t)=>e?t?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":t?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Yo=async e=>{if(Zn)return Promise.resolve();if(cn)throw new Error("multiple calls to \'initializeWebAssembly()\' detected.");if(qo)throw new Error("previous call to \'initializeWebAssembly()\' failed.");cn=!0;let t=e.initTimeout,r=e.numThreads,o=e.simd,n=el(r),u=o&&tl(),l=e.wasmPaths,d=typeof l=="string"?l:void 0,a=rl(u,n),f=typeof l=="object"?l[a]:void 0,g=!1,y=[];if(t>0&&y.push(new Promise(v=>{setTimeout(()=>{g=!0,v()},t)})),y.push(new Promise((v,$)=>{let b=n?Ju:Ko,C={locateFile:(A,S)=>{if(n&&A.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([jo()],{type:"text/javascript"}));if(A.endsWith(".wasm")){if(f)return f;let _=d??S;return a==="ort-wasm-simd.wasm"?_+"ort-wasm-simd.jsep.wasm":a==="ort-wasm-simd-threaded.wasm"?_+"ort-wasm-simd-threaded.jsep.wasm":_+a}return S+A}};if(n)if(C.numThreads=r,typeof Blob>"u")C.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let A=`var ortWasmThreaded=${b.toString()};`;C.mainScriptUrlOrBlob=new Blob([A],{type:"text/javascript"})}b(C).then(A=>{cn=!1,Zn=!0,Yn=A,v()},A=>{cn=!1,qo=!0,$(A)})})),await Promise.race(y),g)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},Ue=()=>{if(Zn&&Yn)return Yn;throw new Error("WebAssembly is not initialized yet.")};var We=(e,t)=>{let r=Ue(),o=r.lengthBytesUTF8(e)+1,n=r._malloc(o);return r.stringToUTF8(e,n,o),t.push(n),n},Ar=(e,t,r,o)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([n,u])=>{let l=t?t+n:n;if(typeof u=="object")Ar(u,l+".",r,o);else if(typeof u=="string"||typeof u=="number")o(l,u.toString());else if(typeof u=="boolean")o(l,u?"1":"0");else throw new Error(`Can\'t handle extra config type: ${typeof u}`)})},Oe=e=>{let t=Ue(),r=t.stackSave();try{let o=t.stackAlloc(8);t._OrtGetLastError(o,o+4);let n=t.HEAP32[o/4],u=t.HEAPU32[o/4+1],l=u?t.UTF8ToString(u):"";throw new Error(`${e} ERROR_CODE: ${n}, ERROR_MESSAGE: ${l}`)}finally{t.stackRestore(r)}};var Zo=e=>{let t=Ue(),r=0,o=[],n=e||{};try{if(e?.logSeverityLevel===void 0)n.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)n.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(n.terminate=!1);let u=0;return e?.tag!==void 0&&(u=We(e.tag,o)),r=t._OrtCreateRunOptions(n.logSeverityLevel,n.logVerbosityLevel,!!n.terminate,u),r===0&&Oe("Can\'t create run options."),e?.extra!==void 0&&Ar(e.extra,"",new WeakSet,(l,d)=>{let a=We(l,o),f=We(d,o);t._OrtAddRunConfigEntry(r,a,f)!==0&&Oe(`Can\'t set a run config entry: ${l} - ${d}.`)}),[r,o]}catch(u){throw r!==0&&t._OrtReleaseRunOptions(r),o.forEach(l=>t._free(l)),u}};var nl=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},ol=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},al=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},il=(e,t,r)=>{for(let o of t){let n=typeof o=="string"?o:o.name;switch(n){case"webnn":if(n="WEBNN",typeof o!="string"){let l=o;if(l?.deviceType){let d=We("deviceType",r),a=We(l.deviceType,r);Ue()._OrtAddSessionConfigEntry(e,d,a)!==0&&Oe(`Can\'t set a session config entry: \'deviceType\' - ${l.deviceType}.`)}if(l?.numThreads){let d=l.numThreads;(typeof d!="number"||!Number.isInteger(d)||d<0)&&(d=0);let a=We("numThreads",r),f=We(d.toString(),r);Ue()._OrtAddSessionConfigEntry(e,a,f)!==0&&Oe(`Can\'t set a session config entry: \'numThreads\' - ${l.numThreads}.`)}if(l?.powerPreference){let d=We("powerPreference",r),a=We(l.powerPreference,r);Ue()._OrtAddSessionConfigEntry(e,d,a)!==0&&Oe(`Can\'t set a session config entry: \'powerPreference\' - ${l.powerPreference}.`)}}break;case"webgpu":if(n="JS",typeof o!="string"){let l=o;if(l?.preferredLayout){if(l.preferredLayout!=="NCHW"&&l.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either \'NCHW\' or \'NHWC\': ${l.preferredLayout}`);let d=We("preferredLayout",r),a=We(l.preferredLayout,r);Ue()._OrtAddSessionConfigEntry(e,d,a)!==0&&Oe(`Can\'t set a session config entry: \'preferredLayout\' - ${l.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${n}`)}let u=We(n,r);Ue()._OrtAppendExecutionProvider(e,u)!==0&&Oe(`Can\'t append execution provider: ${n}.`)}},Qo=e=>{let t=Ue(),r=0,o=[],n=e||{};al(n);try{let u=nl(n.graphOptimizationLevel??"all"),l=ol(n.executionMode??"sequential"),d=typeof n.logId=="string"?We(n.logId,o):0,a=n.logSeverityLevel??2;if(!Number.isInteger(a)||a<0||a>4)throw new Error(`log serverity level is not valid: ${a}`);let f=n.logVerbosityLevel??0;if(!Number.isInteger(f)||f<0||f>4)throw new Error(`log verbosity level is not valid: ${f}`);let g=typeof n.optimizedModelFilePath=="string"?We(n.optimizedModelFilePath,o):0;if(r=t._OrtCreateSessionOptions(u,!!n.enableCpuMemArena,!!n.enableMemPattern,l,!!n.enableProfiling,0,d,a,f,g),r===0&&Oe("Can\'t create session options."),n.executionProviders&&il(r,n.executionProviders,o),n.freeDimensionOverrides)for(let[y,v]of Object.entries(n.freeDimensionOverrides)){if(typeof y!="string")throw new Error(`free dimension override name must be a string: ${y}`);if(typeof v!="number"||!Number.isInteger(v)||v<0)throw new Error(`free dimension override value must be a non-negative integer: ${v}`);let $=We(y,o);t._OrtAddFreeDimensionOverride(r,$,v)!==0&&Oe(`Can\'t set a free dimension override: ${y} - ${v}.`)}return n.extra!==void 0&&Ar(n.extra,"",new WeakSet,(y,v)=>{let $=We(y,o),b=We(v,o);t._OrtAddSessionConfigEntry(r,$,b)!==0&&Oe(`Can\'t set a session config entry: ${y} - ${v}.`)}),[r,o]}catch(u){throw r!==0&&t._OrtReleaseSessionOptions(r),o.forEach(l=>t._free(l)),u}};Ve();var Jo=async e=>{if(typeof e=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(e))}catch(t){if(t.code==="ERR_FS_FILE_TOO_LARGE"){let r=(void 0)(e),o=[];for await(let n of r)o.push(n);return new Uint8Array(Buffer.concat(o))}throw t}else{let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let r=t.headers.get("Content-Length"),o=r?parseInt(r,10):0;if(o<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let n=t.body.getReader(),u;try{u=new ArrayBuffer(o)}catch(d){if(d instanceof RangeError){let a=Math.ceil(o/65536);u=new WebAssembly.Memory({initial:a,maximum:a}).buffer}else throw d}let l=0;for(;;){let{done:d,value:a}=await n.read();if(d)break;let f=a.byteLength;new Uint8Array(u,l,f).set(a),l+=f}return new Uint8Array(u,0,o)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)};var Nc=(e,t)=>{Ue()._OrtInit(e,t)!==0&&Oe("Can\'t initialize onnxruntime.")},Mu=async e=>{Nc(e.wasm.numThreads,Er(e.logLevel))},zu=async(e,t)=>{if(t==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let r=await navigator.gpu.requestAdapter();if(!r)throw new Error(\'Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.\');if(!e.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");let o=(Bu(),or(ku)).init;await o(Ue(),e,r)}},Br=new Map,Wc=e=>{let t=Ue(),r=t.stackSave();try{let o=t.stackAlloc(8);return t._OrtGetInputOutputCount(e,o,o+4)!==0&&Oe("Can\'t get session input/output count."),[t.HEAP32[o/4],t.HEAP32[o/4+1]]}finally{t.stackRestore(r)}},To=e=>{let t=Ue(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can\'t create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},Uu=async(e,t)=>{let r,o,n=Ue();Array.isArray(e)?[r,o]=e:e.buffer===n.HEAPU8.buffer?[r,o]=[e.byteOffset,e.byteLength]:[r,o]=To(e);let u=0,l=0,d=0,a=[],f=[],g=[];try{if([l,a]=Qo(t),t?.externalData&&n.mountExternalData){let S=[];for(let _ of t.externalData){let E=typeof _=="string"?_:_.path;S.push(Jo(typeof _=="string"?_:_.data).then(T=>{n.mountExternalData(E,T)}))}await Promise.all(S)}u=n._OrtCreateSession(r,o,l),u===0&&Oe("Can\'t create a session.");let[y,v]=Wc(u),$=[],b=[],C=[];for(let S=0;S<y;S++){let _=n._OrtGetInputName(u,S);_===0&&Oe("Can\'t get an input name."),f.push(_),$.push(n.UTF8ToString(_))}for(let S=0;S<v;S++){let _=n._OrtGetOutputName(u,S);_===0&&Oe("Can\'t get an output name."),g.push(_);let E=n.UTF8ToString(_);b.push(E);{let T=typeof t?.preferredOutputLocation=="string"?t.preferredOutputLocation:t?.preferredOutputLocation?.[E]??"cpu";if(T!=="cpu"&&T!=="cpu-pinned"&&T!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${T}.`);C.push(T)}}let A=null;return C.some(S=>S==="gpu-buffer")&&(d=n._OrtCreateBinding(u),d===0&&Oe("Can\'t create IO binding."),A={handle:d,outputPreferredLocations:C,outputPreferredLocationsEncoded:C.map(S=>Xn(S))}),Br.set(u,[u,f,g,A]),[u,$,b]}catch(y){throw f.forEach(v=>n._OrtFree(v)),g.forEach(v=>n._OrtFree(v)),d!==0&&n._OrtReleaseBinding(d),u!==0&&n._OrtReleaseSession(u),y}finally{n._free(r),l!==0&&n._OrtReleaseSessionOptions(l),a.forEach(y=>n._free(y)),n.unmountExternalData?.()}},Vu=e=>{let t=Ue(),r=Br.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[o,n,u,l]=r;l&&t._OrtReleaseBinding(l.handle),t.jsepUnregisterBuffers?.(e),n.forEach(d=>t._OrtFree(d)),u.forEach(d=>t._OrtFree(d)),t._OrtReleaseSession(o),Br.delete(e)},Du=(e,t,r,o,n)=>{if(!e){t.push(0);return}let u=Ue(),l=e[0],d=e[1],a=e[3],f,g;if(l==="string"&&a==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(a==="gpu-buffer"){let $=e[2].gpuBuffer,b=Tr(Qn(l));g=d.reduce((C,A)=>C*A,1)*b,f=u.jsepRegisterBuffer(o,n,$,g)}else{let $=e[2];if(Array.isArray($)){g=4*$.length,f=u._malloc(g),r.push(f);let b=f/4;for(let C=0;C<$.length;C++){if(typeof $[C]!="string")throw new TypeError(`tensor data at index ${C} is not a string`);u.HEAPU32[b++]=We($[C],r)}}else g=$.byteLength,f=u._malloc(g),r.push(f),u.HEAPU8.set(new Uint8Array($.buffer,$.byteOffset,g),f)}let y=u.stackSave(),v=u.stackAlloc(4*d.length);try{let $=v/4;d.forEach(C=>u.HEAP32[$++]=C);let b=u._OrtCreateTensor(Qn(l),f,g,v,d.length,Xn(a));b===0&&Oe(`Can\'t create tensor for input/output. session=${o}, index=${n}.`),t.push(b)}finally{u.stackRestore(y)}},Nu=async(e,t,r,o,n,u)=>{let l=Ue(),d=Br.get(e);if(!d)throw new Error(`cannot run inference. invalid session id: ${e}`);let[a,f,g,y]=d,v=t.length,$=o.length,b=0,C=[],A=[],S=[],_=[],E=l.stackSave(),T=l.stackAlloc(v*4),V=l.stackAlloc(v*4),k=l.stackAlloc($*4),U=l.stackAlloc($*4);try{[b,C]=Zo(u);for(let re=0;re<v;re++)Du(r[re],A,_,e,t[re]);for(let re=0;re<$;re++)Du(n[re],S,_,e,v+o[re]);let W=T/4,Z=V/4,B=k/4,F=U/4;for(let re=0;re<v;re++)l.HEAPU32[W++]=A[re],l.HEAPU32[Z++]=f[t[re]];for(let re=0;re<$;re++)l.HEAPU32[B++]=S[re],l.HEAPU32[F++]=g[o[re]];if(y){let{handle:re,outputPreferredLocations:Ee,outputPreferredLocationsEncoded:Be}=y;if(f.length!==v)throw new Error(`input count from feeds (${v}) is expected to be always equal to model\'s input count (${f.length}).`);for(let fe=0;fe<v;fe++){let Ae=t[fe];await l._OrtBindInput(re,f[Ae],A[fe])!==0&&Oe(`Can\'t bind input[${fe}] for session=${e}.`)}for(let fe=0;fe<$;fe++){let Ae=o[fe];n[fe]?.[3]?l._OrtBindOutput(re,g[Ae],S[fe],0)!==0&&Oe(`Can\'t bind pre-allocated output[${fe}] for session=${e}.`):l._OrtBindOutput(re,g[Ae],0,Be[Ae])!==0&&Oe(`Can\'t bind output[${fe}] to ${Ee[fe]} for session=${e}.`)}}let J;y?J=await l._OrtRunWithBinding(a,y.handle,$,k,b):J=await l._OrtRun(a,V,T,v,U,$,k,b),J!==0&&Oe("failed to call OrtRun().");let te=[];for(let re=0;re<$;re++){let Ee=l.HEAPU32[k/4+re];if(Ee===S[re]){te.push(n[re]);continue}let Be=l.stackSave(),fe=l.stackAlloc(4*4),Ae=!1,ge,ye=0;try{l._OrtGetTensorData(Ee,fe,fe+4,fe+8,fe+12)!==0&&Oe(`Can\'t access output tensor data on index ${re}.`);let De=fe/4,Me=l.HEAPU32[De++];ye=l.HEAPU32[De++];let L=l.HEAPU32[De++],ne=l.HEAPU32[De++],be=[];for(let Ne=0;Ne<ne;Ne++)be.push(l.HEAPU32[L/4+Ne]);l._OrtFree(L);let et=be.reduce((Ne,ze)=>Ne*ze,1);ge=rt(Me);let je=y?.outputPreferredLocations[o[re]];if(ge==="string"){if(je==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let Ne=[],ze=ye/4;for(let Ct=0;Ct<et;Ct++){let ut=l.HEAPU32[ze++],It=Ct===et-1?void 0:l.HEAPU32[ze]-ut;Ne.push(l.UTF8ToString(ut,It))}te.push([ge,be,Ne,"cpu"])}else if(je==="gpu-buffer"&&et>0){let Ne=l.jsepGetBuffer(ye),ze=Tr(Me);if(ze===void 0||!Xo(ge))throw new Error(`Unsupported data type: ${ge}`);Ae=!0,te.push([ge,be,{gpuBuffer:Ne,download:l.jsepCreateDownloader(Ne,et*ze,ge),dispose:()=>{l._OrtReleaseTensor(Ee)}},"gpu-buffer"])}else{let Ne=pn(ge),ze=new Ne(et);new Uint8Array(ze.buffer,ze.byteOffset,ze.byteLength).set(l.HEAPU8.subarray(ye,ye+ze.byteLength)),te.push([ge,be,ze,"cpu"])}}finally{l.stackRestore(Be),ge==="string"&&ye&&l._free(ye),Ae||l._OrtReleaseTensor(Ee)}}return y&&l._OrtClearBoundOutputs(y.handle),te}finally{l.stackRestore(E),A.forEach(W=>l._OrtReleaseTensor(W)),S.forEach(W=>l._OrtReleaseTensor(W)),_.forEach(W=>l._free(W)),b!==0&&l._OrtReleaseRunOptions(b),C.forEach(W=>l._free(W))}},Wu=e=>{let t=Ue(),r=Br.get(e);if(!r)throw new Error("invalid session id");let o=r[0],n=t._OrtEndProfiling(o);n===0&&Oe("Can\'t get an profile file name."),t._OrtFree(n)},Hu=e=>{let t=[];for(let r of e){let o=r[2];!Array.isArray(o)&&"buffer"in o&&t.push(o.buffer)}return t};self.onmessage=e=>{let{type:t,in:r}=e.data;try{switch(t){case"init-wasm":Yo(r.wasm).then(()=>{Mu(r).then(()=>{postMessage({type:t})},o=>{postMessage({type:t,err:o})})},o=>{postMessage({type:t,err:o})});break;case"init-ep":{let{epName:o,env:n}=r;zu(n,o).then(()=>{postMessage({type:t})},u=>{postMessage({type:t,err:u})});break}case"copy-from":{let{buffer:o}=r,n=To(o);postMessage({type:t,out:n});break}case"create":{let{model:o,options:n}=r;Uu(o,n).then(u=>{postMessage({type:t,out:u})},u=>{postMessage({type:t,err:u})});break}case"release":Vu(r),postMessage({type:t});break;case"run":{let{sessionId:o,inputIndices:n,inputs:u,outputIndices:l,options:d}=r;Nu(o,n,u,l,new Array(l.length).fill(null),d).then(a=>{a.some(f=>f[3]!=="cpu")?postMessage({type:t,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:t,out:a},Hu(a))},a=>{postMessage({type:t,err:a})});break}case"end-profiling":Wu(r),postMessage({type:t});break;default:}}catch(o){postMessage({type:t,err:o})}};})();\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n'});var Tn,ir,qo,Ha,qa,qu,ju,eo,to,pT,Wa,Ey,Cy,Py,ky,Dy,Ry,By,Ku=D(()=>{"use strict";Pt();Ay();Zn();Tn=()=>!!ye.wasm.proxy&&typeof document<"u",qo=!1,Ha=!1,qa=!1,ju=new Map,eo=(r,e)=>{let n=ju.get(r);n?n.push(e):ju.set(r,[e])},to=()=>{if(qo||!Ha||qa||!ir)throw new Error("worker not ready")},pT=r=>{switch(r.data.type){case"init-wasm":qo=!1,r.data.err?(qa=!0,qu[1](r.data.err)):(Ha=!0,qu[0]());break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let e=ju.get(r.data.type);r.data.err?e.shift()[1](r.data.err):e.shift()[0](r.data.out);break}default:}},Wa=typeof document<"u"?document?.currentScript?.src:void 0,Ey=async()=>{if(!Ha){if(qo)throw new Error("multiple calls to 'initWasm()' detected.");if(qa)throw new Error("previous call to 'initWasm()' failed.");if(qo=!0,Tn())return ye.wasm.wasmPaths===void 0&&Wa&&Wa.indexOf("blob:")!==0&&(ye.wasm.wasmPaths=Wa.substr(0,+Wa.lastIndexOf("/")+1)),new Promise((r,e)=>{ir?.terminate();let n=URL.createObjectURL(new Blob([Oy()],{type:"text/javascript"}));ir=new Worker(n,{name:"ort-wasm-proxy-worker"}),ir.onerror=o=>e(o),ir.onmessage=pT,URL.revokeObjectURL(n),qu=[r,e];let t={type:"init-wasm",in:ye};ir.postMessage(t)});try{await Yh(ye.wasm),await wy(ye),Ha=!0}catch(r){throw qa=!0,r}finally{qo=!1}}},Cy=async r=>{if(Tn())return to(),new Promise((e,n)=>{eo("init-ep",[e,n]);let t={type:"init-ep",in:{epName:r,env:ye}};ir.postMessage(t)});await xy(ye,r)},Py=async r=>Tn()?(to(),new Promise((e,n)=>{eo("copy-from",[e,n]);let t={type:"copy-from",in:{buffer:r}};ir.postMessage(t,[r.buffer])})):Hu(r),ky=async(r,e)=>{if(Tn()){if(e?.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return to(),new Promise((n,t)=>{eo("create",[n,t]);let o={type:"create",in:{model:r,options:e}},i=[];r instanceof Uint8Array&&i.push(r.buffer),ir.postMessage(o,i)})}else return Ty(r,e)},Dy=async r=>{if(Tn())return to(),new Promise((e,n)=>{eo("release",[e,n]);let t={type:"release",in:r};ir.postMessage(t)});$y(r)},Ry=async(r,e,n,t,o,i)=>{if(Tn()){if(n.some(s=>s[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(o.some(s=>s))throw new Error("pre-allocated output tensor is not supported for proxy.");return to(),new Promise((s,a)=>{eo("run",[s,a]);let u=n,l={type:"run",in:{sessionId:r,inputIndices:e,inputs:u,outputIndices:t,options:i}};ir.postMessage(l,Iy(u))})}else return _y(r,e,n,t,o,i)},By=async r=>{if(Tn())return to(),new Promise((e,n)=>{eo("end-profiling",[e,n]);let t={type:"end-profiling",in:r};ir.postMessage(t)});Sy(r)}});var Ly,hT,ja,My=D(()=>{"use strict";Pt();Ku();ut();vu();Ly=(r,e)=>{switch(r.location){case"cpu":return[r.type,r.dims,r.data,"cpu"];case"gpu-buffer":return[r.type,r.dims,{gpuBuffer:r.gpuBuffer},"gpu-buffer"];default:throw new Error(`invalid data location: ${r.location} for ${e()}`)}},hT=r=>{switch(r[3]){case"cpu":return new wt(r[0],r[2],r[1]);case"gpu-buffer":{let e=r[0];if(!Ta(e))throw new Error(`not supported data type: ${e} for deserializing GPU tensor`);let{gpuBuffer:n,download:t,dispose:o}=r[2];return wt.fromGpuBuffer(n,{dataType:e,dims:r[1],download:t,dispose:o})}default:throw new Error(`invalid data location: ${r[3]}`)}},ja=class{async fetchModelAndCopyToWasmMemory(e){return Py(await Fo(e))}async loadModel(e,n){Ft();let t;typeof e=="string"?typeof process<"u"&&process.versions&&process.versions.node?t=await Fo(e):t=await this.fetchModelAndCopyToWasmMemory(e):t=e,[this.sessionId,this.inputNames,this.outputNames]=await ky(t,n),Vt()}async dispose(){return Dy(this.sessionId)}async run(e,n,t){Ft();let o=[],i=[];Object.entries(e).forEach(h=>{let g=h[0],y=h[1],w=this.inputNames.indexOf(g);if(w===-1)throw new Error(`invalid input '${g}'`);o.push(y),i.push(w)});let s=[],a=[];Object.entries(n).forEach(h=>{let g=h[0],y=h[1],w=this.outputNames.indexOf(g);if(w===-1)throw new Error(`invalid output '${g}'`);s.push(y),a.push(w)});let u=o.map((h,g)=>Ly(h,()=>`input "${this.inputNames[i[g]]}"`)),l=s.map((h,g)=>h?Ly(h,()=>`output "${this.outputNames[a[g]]}"`):null),d=await Ry(this.sessionId,i,u,a,l,t),p={};for(let h=0;h<d.length;h++)p[this.outputNames[a[h]]]=s[h]??hT(d[h]);return Vt(),p}startProfiling(){}endProfiling(){By(this.sessionId)}}});var mT,Ka,zy=D(()=>{"use strict";Pt();Ku();My();mT=()=>{if((typeof ye.wasm.initTimeout!="number"||ye.wasm.initTimeout<0)&&(ye.wasm.initTimeout=0),typeof ye.wasm.simd!="boolean"&&(ye.wasm.simd=!0),typeof ye.wasm.proxy!="boolean"&&(ye.wasm.proxy=!1),typeof ye.wasm.trace!="boolean"&&(ye.wasm.trace=!1),typeof ye.wasm.numThreads!="number"||!Number.isInteger(ye.wasm.numThreads)||ye.wasm.numThreads<=0){(typeof self<"u"&&!self.crossOriginIsolated||typeof process<"u"&&process.versions&&process.versions.node)&&(ye.wasm.numThreads=1);let r=typeof navigator>"u"?(void 0)().length:navigator.hardwareConcurrency;ye.wasm.numThreads=Math.min(4,Math.ceil((r||1)/2))}},Ka=class{async init(e){mT(),await Ey(),await Cy(e)}async createInferenceSessionHandler(e,n){let t=new ja;return await t.loadModel(e,n),Promise.resolve(t)}}});var Ny={};Hr(Ny,{wasmBackend:()=>gT});var gT,Fy=D(()=>{"use strict";zy();gT=new Ka});var yT={};Hr(yT,{InferenceSession:()=>$l,TRACE:()=>xo,TRACE_FUNC_BEGIN:()=>Ft,TRACE_FUNC_END:()=>Vt,Tensor:()=>wt,TrainingSession:()=>Al,default:()=>bT,env:()=>ye,registerBackend:()=>Br});Pt();Pt();Pt();var El="1.18.0";var bT=ns;{let r=(Rh(),Rr(Dh)).onnxjsBackend;Br("webgl",r,-10)}{let r=(Fy(),Rr(Ny)).wasmBackend;Br("webgpu",r,5),Br("cpu",r,10),Br("wasm",r,10),Br("webnn",r,9)}Object.defineProperty(ye.versions,"web",{value:El,enumerable:!0});return Rr(yT);})();
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/*! Bundled license information:

long/index.js:
  (**
   * @license
   * Copyright 2009 The Closure Library Authors
   * Copyright 2020 Daniel Wirtz / The long.js Authors.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *     http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *
   * SPDX-License-Identifier: Apache-2.0
   *)
*/
//# sourceMappingURL=ort.all.min.js.map
