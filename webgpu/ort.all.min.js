/*!
 * ONNX Runtime Web v1.17.0
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
"use strict";var ort=(()=>{var Gy=Object.create;var qo=Object.defineProperty;var Uy=Object.getOwnPropertyDescriptor;var Wy=Object.getOwnPropertyNames;var Hy=Object.getPrototypeOf,qy=Object.prototype.hasOwnProperty;var B=(r,e)=>()=>(r&&(e=r(r=0)),e);var Xe=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),Br=(r,e)=>{for(var n in e)qo(r,n,{get:e[n],enumerable:!0})},Fu=(r,e,n,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of Wy(e))!qy.call(r,o)&&o!==n&&qo(r,o,{get:()=>e[o],enumerable:!(t=Uy(e,o))||t.enumerable});return r};var $n=(r,e,n)=>(n=r!=null?Gy(Hy(r)):{},Fu(e||!r||!r.__esModule?qo(n,"default",{value:r,enumerable:!0}):n,r)),Ar=r=>Fu(qo({},"__esModule",{value:!0}),r);var jo,Zr,lr,Ko,Xo=B(()=>{jo=new Map,Zr=[],lr=(r,e,n)=>{if(e&&typeof e.init=="function"&&typeof e.createInferenceSessionHandler=="function"){let t=jo.get(r);if(t===void 0)jo.set(r,{backend:e,priority:n});else{if(t.priority>n)return;if(t.priority===n&&t.backend!==e)throw new Error(`cannot register backend "${r}" using priority ${n}`)}if(n>=0){let o=Zr.indexOf(r);o!==-1&&Zr.splice(o,1);for(let i=0;i<Zr.length;i++)if(jo.get(Zr[i]).priority<=n){Zr.splice(i,0,r);return}Zr.push(r)}return}throw new TypeError("not a valid backend")},Ko=async r=>{let e=r.length===0?Zr:r,n=[];for(let t of e){let o=jo.get(t);if(o){if(o.initialized)return o.backend;if(o.aborted)continue;let i=!!o.initPromise;try{return i||(o.initPromise=o.backend.init(t)),await o.initPromise,o.initialized=!0,o.backend}catch(s){i||n.push({name:t,err:s}),o.aborted=!0}finally{delete o.initPromise}}}throw new Error(`no available backend found. ERR: ${n.map(t=>`[${t.name}] ${t.err}`).join(", ")}`)}});var Vu=B(()=>{Xo()});var Gu,Uu=B(()=>{Gu="1.17.0"});var Wu,Jr,Ia=B(()=>{Uu();Wu="warning",Jr={wasm:{},webgl:{},webgpu:{},versions:{common:Gu},set logLevel(r){if(r!==void 0){if(typeof r!="string"||["verbose","info","warning","error","fatal"].indexOf(r)===-1)throw new Error(`Unsupported logging level: ${r}`);Wu=r}},get logLevel(){return Wu}};Object.defineProperty(Jr,"logLevel",{enumerable:!0})});var ye,Hu=B(()=>{Ia();ye=Jr});var qu,ju,Ku=B(()=>{qu=(r,e)=>{let n=document.createElement("canvas");n.width=r.dims[3],n.height=r.dims[2];let t=n.getContext("2d");if(t!=null){let o,i;e?.tensorLayout!==void 0&&e.tensorLayout==="NHWC"?(o=r.dims[2],i=r.dims[3]):(o=r.dims[3],i=r.dims[2]);let s=e?.format!==void 0?e.format:"RGB",a=e?.norm,u,l;a===void 0||a.mean===void 0?u=[255,255,255,255]:typeof a.mean=="number"?u=[a.mean,a.mean,a.mean,a.mean]:(u=[a.mean[0],a.mean[1],a.mean[2],0],a.mean[3]!==void 0&&(u[3]=a.mean[3])),a===void 0||a.bias===void 0?l=[0,0,0,0]:typeof a.bias=="number"?l=[a.bias,a.bias,a.bias,a.bias]:(l=[a.bias[0],a.bias[1],a.bias[2],0],a.bias[3]!==void 0&&(l[3]=a.bias[3]));let d=i*o,f=0,p=d,g=d*2,b=-1;s==="RGBA"?(f=0,p=d,g=d*2,b=d*3):s==="RGB"?(f=0,p=d,g=d*2):s==="RBG"&&(f=0,g=d,p=d*2);for(let y=0;y<i;y++)for(let T=0;T<o;T++){let x=(r.data[f++]-l[0])*u[0],_=(r.data[p++]-l[1])*u[1],O=(r.data[g++]-l[2])*u[2],C=b===-1?255:(r.data[b++]-l[3])*u[3];t.fillStyle="rgba("+x+","+_+","+O+","+C+")",t.fillRect(T,y,1,1)}return n.toDataURL()}else throw new Error("Can not access image data")},ju=(r,e)=>{let n=document.createElement("canvas").getContext("2d"),t;if(n!=null){let o,i,s;e?.tensorLayout!==void 0&&e.tensorLayout==="NHWC"?(o=r.dims[2],i=r.dims[1],s=r.dims[3]):(o=r.dims[3],i=r.dims[2],s=r.dims[1]);let a=e!==void 0&&e.format!==void 0?e.format:"RGB",u=e?.norm,l,d;u===void 0||u.mean===void 0?l=[255,255,255,255]:typeof u.mean=="number"?l=[u.mean,u.mean,u.mean,u.mean]:(l=[u.mean[0],u.mean[1],u.mean[2],255],u.mean[3]!==void 0&&(l[3]=u.mean[3])),u===void 0||u.bias===void 0?d=[0,0,0,0]:typeof u.bias=="number"?d=[u.bias,u.bias,u.bias,u.bias]:(d=[u.bias[0],u.bias[1],u.bias[2],0],u.bias[3]!==void 0&&(d[3]=u.bias[3]));let f=i*o;if(e!==void 0&&(e.format!==void 0&&s===4&&e.format!=="RGBA"||s===3&&e.format!=="RGB"&&e.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let p=4,g=0,b=1,y=2,T=3,x=0,_=f,O=f*2,C=-1;a==="RGBA"?(x=0,_=f,O=f*2,C=f*3):a==="RGB"?(x=0,_=f,O=f*2):a==="RBG"&&(x=0,O=f,_=f*2),t=n.createImageData(o,i);for(let N=0;N<i*o;g+=p,b+=p,y+=p,T+=p,N++)t.data[g]=(r.data[x++]-d[0])*l[0],t.data[b]=(r.data[_++]-d[1])*l[1],t.data[y]=(r.data[O++]-d[2])*l[2],t.data[T]=C===-1?255:(r.data[C++]-d[3])*l[3]}else throw new Error("Can not access image data");return t}});var Aa,Xu,Yu,Zu,Ju,Qu=B(()=>{Yo();Aa=(r,e)=>{if(r===void 0)throw new Error("Image buffer must be defined");if(e.height===void 0||e.width===void 0)throw new Error("Image height and width must be defined");if(e.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:n,width:t}=e,o=e.norm??{mean:255,bias:0},i,s;typeof o.mean=="number"?i=[o.mean,o.mean,o.mean,o.mean]:i=[o.mean[0],o.mean[1],o.mean[2],o.mean[3]??255],typeof o.bias=="number"?s=[o.bias,o.bias,o.bias,o.bias]:s=[o.bias[0],o.bias[1],o.bias[2],o.bias[3]??0];let a=e.format!==void 0?e.format:"RGBA",u=e.tensorFormat!==void 0&&e.tensorFormat!==void 0?e.tensorFormat:"RGB",l=n*t,d=u==="RGBA"?new Float32Array(l*4):new Float32Array(l*3),f=4,p=0,g=1,b=2,y=3,T=0,x=l,_=l*2,O=-1;a==="RGB"&&(f=3,p=0,g=1,b=2,y=-1),u==="RGBA"?O=l*3:u==="RBG"?(T=0,_=l,x=l*2):u==="BGR"&&(_=0,x=l,T=l*2);for(let N=0;N<l;N++,p+=f,b+=f,g+=f,y+=f)d[T++]=(r[p]+s[0])/i[0],d[x++]=(r[g]+s[1])/i[1],d[_++]=(r[b]+s[2])/i[2],O!==-1&&y!==-1&&(d[O++]=(r[y]+s[3])/i[3]);return u==="RGBA"?new Ct("float32",d,[1,4,n,t]):new Ct("float32",d,[1,3,n,t])},Xu=async(r,e)=>{let n=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,t=typeof ImageData<"u"&&r instanceof ImageData,o=typeof ImageBitmap<"u"&&r instanceof ImageBitmap,i=typeof r=="string",s,a=e??{};if(n){let u=document.createElement("canvas");u.width=r.width,u.height=r.height;let l=u.getContext("2d");if(l!=null){let d=r.height,f=r.width;if(e!==void 0&&e.resizedHeight!==void 0&&e.resizedWidth!==void 0&&(d=e.resizedHeight,f=e.resizedWidth),e!==void 0){if(a=e,e.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");a.tensorFormat="RGBA",a.height=d,a.width=f}else a.tensorFormat="RGBA",a.height=d,a.width=f;l.drawImage(r,0,0),s=l.getImageData(0,0,f,d).data}else throw new Error("Can not access image data")}else if(t){let u,l;if(e!==void 0&&e.resizedWidth!==void 0&&e.resizedHeight!==void 0?(u=e.resizedHeight,l=e.resizedWidth):(u=r.height,l=r.width),e!==void 0&&(a=e),a.format="RGBA",a.height=u,a.width=l,e!==void 0){let d=document.createElement("canvas");d.width=l,d.height=u;let f=d.getContext("2d");if(f!=null)f.putImageData(r,0,0),s=f.getImageData(0,0,l,u).data;else throw new Error("Can not access image data")}else s=r.data}else if(o){if(e===void 0)throw new Error("Please provide image config with format for Imagebitmap");let u=document.createElement("canvas");u.width=r.width,u.height=r.height;let l=u.getContext("2d");if(l!=null){let d=r.height,f=r.width;return l.drawImage(r,0,0,f,d),s=l.getImageData(0,0,f,d).data,a.height=d,a.width=f,Aa(s,a)}else throw new Error("Can not access image data")}else{if(i)return new Promise((u,l)=>{let d=document.createElement("canvas"),f=d.getContext("2d");if(!r||!f)return l();let p=new Image;p.crossOrigin="Anonymous",p.src=r,p.onload=()=>{d.width=p.width,d.height=p.height,f.drawImage(p,0,0,d.width,d.height);let g=f.getImageData(0,0,d.width,d.height);a.height=d.height,a.width=d.width,u(Aa(g.data,a))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(s!==void 0)return Aa(s,a);throw new Error("Input data provided is not supported - aborted tensor creation")},Yu=(r,e)=>{let{width:n,height:t,download:o,dispose:i}=e,s=[1,t,n,4];return new Ct({location:"texture",type:"float32",texture:r,dims:s,download:o,dispose:i})},Zu=(r,e)=>{let{dataType:n,dims:t,download:o,dispose:i}=e;return new Ct({location:"gpu-buffer",type:n??"float32",gpuBuffer:r,dims:t,download:o,dispose:i})},Ju=(r,e,n)=>new Ct({location:"cpu-pinned",type:r,data:e,dims:n??[e.length]})});var no,Zo,el,tl,rl=B(()=>{no=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["float16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),Zo=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),el=!1,tl=()=>{if(!el){el=!0;let r=typeof BigInt64Array<"u"&&typeof BigInt64Array.from=="function",e=typeof BigUint64Array<"u"&&typeof BigUint64Array.from=="function";r&&(no.set("int64",BigInt64Array),Zo.set(BigInt64Array,"int64")),e&&(no.set("uint64",BigUint64Array),Zo.set(BigUint64Array,"uint64"))}}});var nl,ol,il=B(()=>{Yo();nl=r=>{let e=1;for(let n=0;n<r.length;n++){let t=r[n];if(typeof t!="number"||!Number.isSafeInteger(t))throw new TypeError(`dims[${n}] must be an integer, got: ${t}`);if(t<0)throw new RangeError(`dims[${n}] must be a non-negative integer, got: ${t}`);e*=t}return e},ol=(r,e)=>{switch(r.location){case"cpu":return new Ct(r.type,r.data,e);case"cpu-pinned":return new Ct({location:"cpu-pinned",data:r.data,type:r.type,dims:e});case"texture":return new Ct({location:"texture",texture:r.texture,type:r.type,dims:e});case"gpu-buffer":return new Ct({location:"gpu-buffer",gpuBuffer:r.gpuBuffer,type:r.type,dims:e});default:throw new Error(`tensorReshape: tensor location ${r.location} is not supported`)}}});var Ct,Yo=B(()=>{Ku();Qu();rl();il();Ct=class{constructor(e,n,t){tl();let o,i;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,o=e.type,i=e.dims,e.location){case"cpu-pinned":{let a=no.get(o);if(!a)throw new TypeError(`unsupported type "${o}" to create tensor from pinned buffer`);if(!(e.data instanceof a))throw new TypeError(`buffer should be of type ${a.name}`);this.cpuData=e.data;break}case"texture":{if(o!=="float32")throw new TypeError(`unsupported type "${o}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(o!=="float32"&&o!=="float16"&&o!=="int32"&&o!=="int64"&&o!=="uint32"&&o!=="bool")throw new TypeError(`unsupported type "${o}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let a,u;if(typeof e=="string")if(o=e,u=t,e==="string"){if(!Array.isArray(n))throw new TypeError("A string tensor's data must be a string array.");a=n}else{let l=no.get(e);if(l===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(n)){if(e==="float16")throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");e==="uint64"||e==="int64"?a=l.from(n,BigInt):a=l.from(n)}else if(n instanceof l)a=n;else throw new TypeError(`A ${o} tensor's data must be type of ${l}`)}else if(u=n,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let l=typeof e[0];if(l==="string")o="string",a=e;else if(l==="boolean")o="bool",a=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${l}.`)}else{let l=Zo.get(e.constructor);if(l===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);o=l,a=e}if(u===void 0)u=[a.length];else if(!Array.isArray(u))throw new TypeError("A tensor's dims must be a number array");i=u,this.cpuData=a,this.dataLocation="cpu"}let s=nl(i);if(this.cpuData&&s!==this.cpuData.length)throw new Error(`Tensor's size(${s}) does not match data length(${this.cpuData.length}).`);this.type=o,this.dims=i,this.size=s}static async fromImage(e,n){return Xu(e,n)}static fromTexture(e,n){return Yu(e,n)}static fromGpuBuffer(e,n){return Zu(e,n)}static fromPinnedBuffer(e,n,t){return Ju(e,n,t)}toDataURL(e){return qu(this,e)}toImageData(e){return ju(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let n=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=n,e&&this.disposer&&(this.disposer(),this.disposer=void 0),n}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return ol(this,e)}}});var gt,Jo=B(()=>{Yo();gt=Ct});var Oa,al,Vt,Gt,Ea=B(()=>{Ia();Oa=(r,e)=>{Jr.wasm.trace&&console.timeStamp(`${r}::ORT::${e}`)},al=(r,e)=>{let n=new Error().stack?.split(/\r\n|\r|\n/g)||[],t=!1;for(let o=0;o<n.length;o++){if(t&&!n[o].includes("TRACE_FUNC")){let i=`FUNC_${r}::${n[o].trim().split(" ")[1]}`;e&&(i+=`::${e}`),Oa("CPU",i);return}n[o].includes("TRACE_FUNC")&&(t=!0)}},Vt=r=>{Jr.wasm.trace&&al("BEGIN",r)},Gt=r=>{Jr.wasm.trace&&al("END",r)}});var Qo,sl=B(()=>{Xo();Jo();Ea();Qo=class r{constructor(e){this.handler=e}async run(e,n,t){Vt();let o={},i={};if(typeof e!="object"||e===null||e instanceof gt||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let s=!0;if(typeof n=="object"){if(n===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(n instanceof gt)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(n)){if(n.length===0)throw new TypeError("'fetches' cannot be an empty array.");s=!1;for(let l of n){if(typeof l!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(l)===-1)throw new RangeError(`'fetches' contains invalid output name: ${l}.`);o[l]=null}if(typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else{let l=!1,d=Object.getOwnPropertyNames(n);for(let f of this.outputNames)if(d.indexOf(f)!==-1){let p=n[f];(p===null||p instanceof gt)&&(l=!0,s=!1,o[f]=p)}if(l){if(typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else i=n}}else if(typeof n<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let l of this.inputNames)if(typeof e[l]>"u")throw new Error(`input '${l}' is missing in 'feeds'.`);if(s)for(let l of this.outputNames)o[l]=null;let a=await this.handler.run(e,o,i),u={};for(let l in a)if(Object.hasOwnProperty.call(a,l)){let d=a[l];d instanceof gt?u[l]=d:u[l]=new gt(d.type,d.data,d.dims)}return Gt(),u}async release(){return this.handler.dispose()}static async create(e,n,t,o){Vt();let i,s={};if(typeof e=="string"){if(i=e,typeof n=="object"&&n!==null)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof Uint8Array){if(i=e,typeof n=="object"&&n!==null)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&e instanceof SharedArrayBuffer){let f=e,p=0,g=e.byteLength;if(typeof n=="object"&&n!==null)s=n;else if(typeof n=="number"){if(p=n,!Number.isSafeInteger(p))throw new RangeError("'byteOffset' must be an integer.");if(p<0||p>=f.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${f.byteLength}).`);if(g=e.byteLength-p,typeof t=="number"){if(g=t,!Number.isSafeInteger(g))throw new RangeError("'byteLength' must be an integer.");if(g<=0||p+g>f.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${f.byteLength-p}].`);if(typeof o=="object"&&o!==null)s=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else if(typeof t<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof n<"u")throw new TypeError("'options' must be an object.");i=new Uint8Array(f,p,g)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let u=(s.executionProviders||[]).map(f=>typeof f=="string"?f:f.name),d=await(await Ko(u)).createInferenceSessionHandler(i,s);return Gt(),new r(d)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}});var ul,ll=B(()=>{sl();ul=Qo});var dl=B(()=>{});var jy,ei,cl=B(()=>{Xo();Jo();jy="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.",ei=class r{constructor(e,n,t){this.handler=e,this.hasOptimizerModel=n,this.hasEvalModel=t}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(e,n){let t=e.evalModel||"",o=e.optimizerModel||"",i=n||{},a=(i.executionProviders||[]).map(l=>typeof l=="string"?l:l.name),u=await Ko(a);if(u.createTrainingSessionHandler){let l=await u.createTrainingSessionHandler(e.checkpointState,e.trainModel,t,o,i);return new r(l,!!e.optimizerModel,!!e.evalModel)}else throw new Error(jy)}typeNarrowingForRunStep(e,n,t,o,i){let s={},a={};if(typeof t!="object"||t===null||t instanceof gt||Array.isArray(t))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let u=!0;if(typeof o=="object"){if(o===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(o instanceof gt)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(o)){if(o.length===0)throw new TypeError("'fetches' cannot be an empty array.");u=!1;for(let l of o){if(typeof l!="string")throw new TypeError("'fetches' must be a string array or an object.");if(n.indexOf(l)===-1)throw new RangeError(`'fetches' contains invalid output name: ${l}.`);s[l]=null}if(typeof i=="object"&&i!==null)a=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else{let l=!1,d=Object.getOwnPropertyNames(o);for(let f of n)if(d.indexOf(f)!==-1){let p=o[f];(p===null||p instanceof gt)&&(l=!0,u=!1,s[f]=p)}if(l){if(typeof i=="object"&&i!==null)a=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else a=o}}else if(typeof o<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let l of e)if(typeof t[l]>"u")throw new Error(`input '${l}' is missing in 'feeds'.`);if(u)for(let l of n)s[l]=null;return[s,a]}convertHandlerReturnTypeToMapOfTensors(e){let n={};for(let t in e)if(Object.hasOwnProperty.call(e,t)){let o=e[t];o instanceof gt?n[t]=o:n[t]=new gt(o.type,o.data,o.dims)}return n}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(e,n,t){let[o,i]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,e,n,t),s=await this.handler.runTrainStep(e,o,i);return this.convertHandlerReturnTypeToMapOfTensors(s)}async runOptimizerStep(e){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(e||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(e,n,t){if(this.hasEvalModel){let[o,i]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,e,n,t),s=await this.handler.runEvalStep(e,o,i);return this.convertHandlerReturnTypeToMapOfTensors(s)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(e=!0){return this.handler.getParametersSize(e)}async loadParametersBuffer(e,n=!0){let t=await this.getParametersSize(n);if(e.length!==4*t)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(e,n)}async getContiguousParameters(e=!0){return this.handler.getContiguousParameters(e)}async release(){return this.handler.dispose()}}});var fl,pl=B(()=>{cl();fl=ei});var Ca={};Br(Ca,{InferenceSession:()=>ul,TRACE:()=>Oa,TRACE_FUNC_BEGIN:()=>Vt,TRACE_FUNC_END:()=>Gt,Tensor:()=>gt,TrainingSession:()=>fl,env:()=>ye,registerBackend:()=>lr});var It=B(()=>{Vu();Hu();ll();Jo();Ea();dl();pl()});function Rr(r,e,n,t){if(e===void 0)return Xy(r);if(n===void 0)ti(r,e,1);else if(typeof n=="number"&&t===void 0)ti(r,e,n);else if(typeof n=="string"&&t===void 0)ti(r,n,1,e);else if(typeof n=="string"&&typeof t=="number")ti(r,n,t,e);else throw new TypeError("input is valid")}function Xy(r){return{verbose:Rr.verbose.bind(null,r),info:Rr.info.bind(null,r),warning:Rr.warning.bind(null,r),error:Rr.error.bind(null,r),fatal:Rr.fatal.bind(null,r)}}function ti(r,e,n,t){let o=oo[t||""]||oo[""];ml[r]<ml[o.minimalSeverity]||(o.logDateTime&&(e=`${new Date().toISOString()}|${e}`),o.logSourceLocation,Ky[o.provider].log(r,e,t))}var Pa,ka,ml,Ky,gl,oo,je,ni,oi,ii,ri,Ut=B(()=>{"use strict";Pa=class{log(e,n,t){}},ka=class{log(e,n,t){console.log(`${this.color(e)} ${t?"\x1B[35m"+t+"\x1B[0m ":""}${n}`)}color(e){switch(e){case"verbose":return"\x1B[34;40mv\x1B[0m";case"info":return"\x1B[32mi\x1B[0m";case"warning":return"\x1B[30;43mw\x1B[0m";case"error":return"\x1B[31;40me\x1B[0m";case"fatal":return"\x1B[101mf\x1B[0m";default:throw new Error(`unsupported severity: ${e}`)}}},ml={verbose:1e3,info:2e3,warning:4e3,error:5e3,fatal:6e3},Ky={none:new Pa,console:new ka},gl={provider:"console",minimalSeverity:"warning",logDateTime:!0,logSourceLocation:!1},oo={"":gl};(u=>{function r(l,d){u("verbose",l,d)}u.verbose=r;function e(l,d){u("info",l,d)}u.info=e;function n(l,d){u("warning",l,d)}u.warning=n;function t(l,d){u("error",l,d)}u.error=t;function o(l,d){u("fatal",l,d)}u.fatal=o;function i(l){oo={},s("",l||{})}u.reset=i;function s(l,d){if(l==="*")i(d);else{let f=oo[l]||gl;oo[l]={provider:d.provider||f.provider,minimalSeverity:d.minimalSeverity||f.minimalSeverity,logDateTime:d.logDateTime===void 0?f.logDateTime:d.logDateTime,logSourceLocation:d.logSourceLocation===void 0?f.logSourceLocation:d.logSourceLocation}}}u.set=s;function a(l){let d={};l.logLevel&&(d.minimalSeverity=l.logLevel),s("",d)}u.setWithEnv=a})(Rr||={});je=Rr,ni=class{constructor(e,n,t,o,i,s){this.category=e;this.name=n;this.startTime=t;this.endCallback=o;this.timer=i;this.ctx=s}async end(){return this.endCallback(this)}async checkTimer(){if(this.ctx===void 0||this.timer===void 0)throw new Error("No webgl timer found");return this.ctx.endTimer(),this.ctx.waitForQueryAndGetTime(this.timer)}},oi=class{constructor(e,n,t,o){this.category=e;this.name=n;this.startTime=t;this.endTime=o}},ii=class{constructor(e,n,t){this._started=!1;this._flushPointer=0;this._started=!1,this._maxNumberEvents=e===void 0?1e4:e,this._flushBatchSize=n===void 0?10:n,this._flushIntervalInMilliseconds=t===void 0?5e3:t}static create(e){return e===void 0?new this:new this(e.maxNumberEvents,e.flushBatchSize,e.flushIntervalInMilliseconds)}start(){this._started=!0,this._timingEvents=[],this._flushTime=ri(),this._flushPointer=0}stop(){for(this._started=!1;this._flushPointer<this._timingEvents.length;this._flushPointer++)this.logOneEvent(this._timingEvents[this._flushPointer])}event(e,n,t,o){let i=this._started?this.begin(e,n,o):void 0,s=!1,a=t();if(a&&typeof a.then=="function")return s=!0,new Promise((u,l)=>{a.then(async d=>{i&&await i.end(),u(d)},async d=>{i&&await i.end(),l(d)})});if(!s&&i){let u=i.end();if(u&&typeof u.then=="function")return new Promise((l,d)=>{u.then(()=>{l(a)},f=>{d(f)})})}return a}begin(e,n,t){if(!this._started)throw new Error("profiler is not started yet");if(t===void 0){let o=ri();return this.flush(o),new ni(e,n,o,i=>this.endSync(i))}else{let o=t.beginTimer();return new ni(e,n,0,async i=>this.end(i),o,t)}}async end(e){let n=await e.checkTimer();this._timingEvents.length<this._maxNumberEvents&&(this._timingEvents.push(new oi(e.category,e.name,e.startTime,n)),this.flush(n))}endSync(e){let n=ri();this._timingEvents.length<this._maxNumberEvents&&(this._timingEvents.push(new oi(e.category,e.name,e.startTime,n)),this.flush(n))}logOneEvent(e){je.verbose(`Profiler.${e.category}`,`${(e.endTime-e.startTime).toFixed(2)}ms on event '${e.name}' at ${e.endTime.toFixed(2)}`)}flush(e){if(this._timingEvents.length-this._flushPointer>=this._flushBatchSize||e-this._flushTime>=this._flushIntervalInMilliseconds){for(let n=this._flushPointer;this._flushPointer<n+this._flushBatchSize&&this._flushPointer<this._timingEvents.length;this._flushPointer++)this.logOneEvent(this._timingEvents[this._flushPointer]);this._flushTime=ri()}}get started(){return this._started}},ri=typeof performance<"u"&&performance.now?()=>performance.now():Date.now});function bl(r,e,n){for(let t of n){let o=t[0],i=t[1],s=t[2],a=t[3],u=t[4];if(r.opType===o){for(let l of e)if((l.domain===i||l.domain==="ai.onnx"&&i==="")&&Yy(l.version,s))return{opImpl:a,opInit:u}}}throw new TypeError(`cannot resolve operator '${r.opType}' with opsets: ${e.map(t=>`${t.domain||"ai.onnx"} v${t.version}`).join(", ")}`)}function Yy(r,e){if(e.endsWith("+")){let n=Number.parseInt(e.substring(0,e.length-1),10);return!isNaN(n)&&n<=r}else if(e.split("-").length===2){let n=e.split("-"),t=Number.parseInt(n[0],10),o=Number.parseInt(n[1],10);return!isNaN(t)&&!isNaN(o)&&t<=r&&r<=o}else return Number.parseInt(e,10)===r}var yl=B(()=>{"use strict"});var vl=Xe(Da=>{"use strict";Da.__esModule=!0;var Zy=function(){function r(e){if(!e)throw new TypeError("Invalid argument; `value` has no value.");this.value=r.EMPTY,e&&r.isGuid(e)&&(this.value=e)}return r.isGuid=function(e){var n=e.toString();return e&&(e instanceof r||r.validator.test(n))},r.create=function(){return new r([r.gen(2),r.gen(1),r.gen(1),r.gen(1),r.gen(3)].join("-"))},r.createEmpty=function(){return new r("emptyguid")},r.parse=function(e){return new r(e)},r.raw=function(){return[r.gen(2),r.gen(1),r.gen(1),r.gen(1),r.gen(3)].join("-")},r.gen=function(e){for(var n="",t=0;t<e;t++)n+=((1+Math.random())*65536|0).toString(16).substring(1);return n},r.prototype.equals=function(e){return r.isGuid(e)&&this.value===e.toString()},r.prototype.isEmpty=function(){return this.value===r.EMPTY},r.prototype.toString=function(){return this.value},r.prototype.toJSON=function(){return{value:this.value}},r.validator=new RegExp("^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$","i"),r.EMPTY="00000000-0000-0000-0000-000000000000",r}();Da.Guid=Zy});function Ye(r,e,n){this.low=r|0,this.high=e|0,this.unsigned=!!n}function At(r){return(r&&r.__isLong__)===!0}function wl(r){var e=Math.clz32(r&-r);return r?31-e:e}function Qr(r,e){var n,t,o;return e?(r>>>=0,(o=0<=r&&r<256)&&(t=$l[r],t)?t:(n=We(r,0,!0),o&&($l[r]=n),n)):(r|=0,(o=-128<=r&&r<128)&&(t=xl[r],t)?t:(n=We(r,r<0?-1:0,!1),o&&(xl[r]=n),n))}function Ht(r,e){if(isNaN(r))return e?Or:Qt;if(e){if(r<0)return Or;if(r>=Il)return El}else{if(r<=-_l)return Rt;if(r+1>=_l)return Ol}return r<0?Ht(-r,e).neg():We(r%_n|0,r/_n|0,e)}function We(r,e,n){return new Ye(r,e,n)}function Ra(r,e,n){if(r.length===0)throw Error("empty string");if(typeof e=="number"?(n=e,e=!1):e=!!e,r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return e?Or:Qt;if(n=n||10,n<2||36<n)throw RangeError("radix");var t;if((t=r.indexOf("-"))>0)throw Error("interior hyphen");if(t===0)return Ra(r.substring(1),e,n).neg();for(var o=Ht(ai(n,8)),i=Qt,s=0;s<r.length;s+=8){var a=Math.min(8,r.length-s),u=parseInt(r.substring(s,s+a),n);if(a<8){var l=Ht(ai(n,a));i=i.mul(l).add(Ht(u))}else i=i.mul(o),i=i.add(Ht(u))}return i.unsigned=e,i}function er(r,e){return typeof r=="number"?Ht(r,e):typeof r=="string"?Ra(r,e):We(r.low,r.high,typeof e=="boolean"?e:r.unsigned)}var Wt,xl,$l,ai,Tl,Jy,_n,Il,_l,Sl,Qt,Or,Tn,Al,Ba,Ol,El,Rt,K,Er,Ma=B(()=>{Wt=null;try{Wt=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}Ye.prototype.__isLong__;Object.defineProperty(Ye.prototype,"__isLong__",{value:!0});Ye.isLong=At;xl={},$l={};Ye.fromInt=Qr;Ye.fromNumber=Ht;Ye.fromBits=We;ai=Math.pow;Ye.fromString=Ra;Ye.fromValue=er;Tl=65536,Jy=1<<24,_n=Tl*Tl,Il=_n*_n,_l=Il/2,Sl=Qr(Jy),Qt=Qr(0);Ye.ZERO=Qt;Or=Qr(0,!0);Ye.UZERO=Or;Tn=Qr(1);Ye.ONE=Tn;Al=Qr(1,!0);Ye.UONE=Al;Ba=Qr(-1);Ye.NEG_ONE=Ba;Ol=We(-1,2147483647,!1);Ye.MAX_VALUE=Ol;El=We(-1,-1,!0);Ye.MAX_UNSIGNED_VALUE=El;Rt=We(0,-2147483648,!1);Ye.MIN_VALUE=Rt;K=Ye.prototype;K.toInt=function(){return this.unsigned?this.low>>>0:this.low};K.toNumber=function(){return this.unsigned?(this.high>>>0)*_n+(this.low>>>0):this.high*_n+(this.low>>>0)};K.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Rt)){var n=Ht(e),t=this.div(n),o=t.mul(n).sub(this);return t.toString(e)+o.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var i=Ht(ai(e,6),this.unsigned),s=this,a="";;){var u=s.div(i),l=s.sub(u.mul(i)).toInt()>>>0,d=l.toString(e);if(s=u,s.isZero())return d+a;for(;d.length<6;)d="0"+d;a=""+d+a}};K.getHighBits=function(){return this.high};K.getHighBitsUnsigned=function(){return this.high>>>0};K.getLowBits=function(){return this.low};K.getLowBitsUnsigned=function(){return this.low>>>0};K.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Rt)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,n=31;n>0&&!(e&1<<n);n--);return this.high!=0?n+33:n+1};K.isZero=function(){return this.high===0&&this.low===0};K.eqz=K.isZero;K.isNegative=function(){return!this.unsigned&&this.high<0};K.isPositive=function(){return this.unsigned||this.high>=0};K.isOdd=function(){return(this.low&1)===1};K.isEven=function(){return(this.low&1)===0};K.equals=function(e){return At(e)||(e=er(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};K.eq=K.equals;K.notEquals=function(e){return!this.eq(e)};K.neq=K.notEquals;K.ne=K.notEquals;K.lessThan=function(e){return this.comp(e)<0};K.lt=K.lessThan;K.lessThanOrEqual=function(e){return this.comp(e)<=0};K.lte=K.lessThanOrEqual;K.le=K.lessThanOrEqual;K.greaterThan=function(e){return this.comp(e)>0};K.gt=K.greaterThan;K.greaterThanOrEqual=function(e){return this.comp(e)>=0};K.gte=K.greaterThanOrEqual;K.ge=K.greaterThanOrEqual;K.compare=function(e){if(At(e)||(e=er(e)),this.eq(e))return 0;var n=this.isNegative(),t=e.isNegative();return n&&!t?-1:!n&&t?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};K.comp=K.compare;K.negate=function(){return!this.unsigned&&this.eq(Rt)?Rt:this.not().add(Tn)};K.neg=K.negate;K.add=function(e){At(e)||(e=er(e));var n=this.high>>>16,t=this.high&65535,o=this.low>>>16,i=this.low&65535,s=e.high>>>16,a=e.high&65535,u=e.low>>>16,l=e.low&65535,d=0,f=0,p=0,g=0;return g+=i+l,p+=g>>>16,g&=65535,p+=o+u,f+=p>>>16,p&=65535,f+=t+a,d+=f>>>16,f&=65535,d+=n+s,d&=65535,We(p<<16|g,d<<16|f,this.unsigned)};K.subtract=function(e){return At(e)||(e=er(e)),this.add(e.neg())};K.sub=K.subtract;K.multiply=function(e){if(this.isZero())return this;if(At(e)||(e=er(e)),Wt){var n=Wt.mul(this.low,this.high,e.low,e.high);return We(n,Wt.get_high(),this.unsigned)}if(e.isZero())return this.unsigned?Or:Qt;if(this.eq(Rt))return e.isOdd()?Rt:Qt;if(e.eq(Rt))return this.isOdd()?Rt:Qt;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(Sl)&&e.lt(Sl))return Ht(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,o=this.high&65535,i=this.low>>>16,s=this.low&65535,a=e.high>>>16,u=e.high&65535,l=e.low>>>16,d=e.low&65535,f=0,p=0,g=0,b=0;return b+=s*d,g+=b>>>16,b&=65535,g+=i*d,p+=g>>>16,g&=65535,g+=s*l,p+=g>>>16,g&=65535,p+=o*d,f+=p>>>16,p&=65535,p+=i*l,f+=p>>>16,p&=65535,p+=s*u,f+=p>>>16,p&=65535,f+=t*d+o*l+i*u+s*a,f&=65535,We(g<<16|b,f<<16|p,this.unsigned)};K.mul=K.multiply;K.divide=function(e){if(At(e)||(e=er(e)),e.isZero())throw Error("division by zero");if(Wt){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var n=(this.unsigned?Wt.div_u:Wt.div_s)(this.low,this.high,e.low,e.high);return We(n,Wt.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Or:Qt;var t,o,i;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return Or;if(e.gt(this.shru(1)))return Al;i=Or}else{if(this.eq(Rt)){if(e.eq(Tn)||e.eq(Ba))return Rt;if(e.eq(Rt))return Tn;var s=this.shr(1);return t=s.div(e).shl(1),t.eq(Qt)?e.isNegative()?Tn:Ba:(o=this.sub(e.mul(t)),i=t.add(o.div(e)),i)}else if(e.eq(Rt))return this.unsigned?Or:Qt;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();i=Qt}for(o=this;o.gte(e);){t=Math.max(1,Math.floor(o.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(t)/Math.LN2),u=a<=48?1:ai(2,a-48),l=Ht(t),d=l.mul(e);d.isNegative()||d.gt(o);)t-=u,l=Ht(t,this.unsigned),d=l.mul(e);l.isZero()&&(l=Tn),i=i.add(l),o=o.sub(d)}return i};K.div=K.divide;K.modulo=function(e){if(At(e)||(e=er(e)),Wt){var n=(this.unsigned?Wt.rem_u:Wt.rem_s)(this.low,this.high,e.low,e.high);return We(n,Wt.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};K.mod=K.modulo;K.rem=K.modulo;K.not=function(){return We(~this.low,~this.high,this.unsigned)};K.countLeadingZeros=function(){return this.high?Math.clz32(this.high):Math.clz32(this.low)+32};K.clz=K.countLeadingZeros;K.countTrailingZeros=function(){return this.low?wl(this.low):wl(this.high)+32};K.ctz=K.countTrailingZeros;K.and=function(e){return At(e)||(e=er(e)),We(this.low&e.low,this.high&e.high,this.unsigned)};K.or=function(e){return At(e)||(e=er(e)),We(this.low|e.low,this.high|e.high,this.unsigned)};K.xor=function(e){return At(e)||(e=er(e)),We(this.low^e.low,this.high^e.high,this.unsigned)};K.shiftLeft=function(e){return At(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?We(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):We(0,this.low<<e-32,this.unsigned)};K.shl=K.shiftLeft;K.shiftRight=function(e){return At(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?We(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):We(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};K.shr=K.shiftRight;K.shiftRightUnsigned=function(e){return At(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?We(this.low>>>e|this.high<<32-e,this.high>>>e,this.unsigned):e===32?We(this.high,0,this.unsigned):We(this.high>>>e-32,0,this.unsigned)};K.shru=K.shiftRightUnsigned;K.shr_u=K.shiftRightUnsigned;K.rotateLeft=function(e){var n;return At(e)&&(e=e.toInt()),(e&=63)===0?this:e===32?We(this.high,this.low,this.unsigned):e<32?(n=32-e,We(this.low<<e|this.high>>>n,this.high<<e|this.low>>>n,this.unsigned)):(e-=32,n=32-e,We(this.high<<e|this.low>>>n,this.low<<e|this.high>>>n,this.unsigned))};K.rotl=K.rotateLeft;K.rotateRight=function(e){var n;return At(e)&&(e=e.toInt()),(e&=63)===0?this:e===32?We(this.high,this.low,this.unsigned):e<32?(n=32-e,We(this.high<<n|this.low>>>e,this.low<<n|this.high>>>e,this.unsigned)):(e-=32,n=32-e,We(this.low<<n|this.high>>>e,this.high<<n|this.low>>>e,this.unsigned))};K.rotr=K.rotateRight;K.toSigned=function(){return this.unsigned?We(this.low,this.high,!1):this};K.toUnsigned=function(){return this.unsigned?this:We(this.low,this.high,!0)};K.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};K.toBytesLE=function(){var e=this.high,n=this.low;return[n&255,n>>>8&255,n>>>16&255,n>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};K.toBytesBE=function(){var e=this.high,n=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,n>>>24,n>>>16&255,n>>>8&255,n&255]};Ye.fromBytes=function(e,n,t){return t?Ye.fromBytesLE(e,n):Ye.fromBytesBE(e,n)};Ye.fromBytesLE=function(e,n){return new Ye(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,n)};Ye.fromBytesBE=function(e,n){return new Ye(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],n)};Er=Ye});var D,si=B(()=>{D={};D.Offset;D.Table;D.SIZEOF_SHORT=2;D.SIZEOF_INT=4;D.FILE_IDENTIFIER_LENGTH=4;D.SIZE_PREFIX_LENGTH=4;D.Encoding={UTF8_BYTES:1,UTF16_STRING:2};D.int32=new Int32Array(2);D.float32=new Float32Array(D.int32.buffer);D.float64=new Float64Array(D.int32.buffer);D.isLittleEndian=new Uint16Array(new Uint8Array([1,0]).buffer)[0]===1;D.Long=function(r,e){this.low=r|0,this.high=e|0};D.Long.create=function(r,e){return r==0&&e==0?D.Long.ZERO:new D.Long(r,e)};D.Long.prototype.toFloat64=function(){return(this.low>>>0)+this.high*4294967296};D.Long.prototype.equals=function(r){return this.low==r.low&&this.high==r.high};D.Long.ZERO=new D.Long(0,0);D.Builder=function(r){if(r)var e=r;else var e=1024;this.bb=D.ByteBuffer.allocate(e),this.space=e,this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1};D.Builder.prototype.clear=function(){this.bb.clear(),this.space=this.bb.capacity(),this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1};D.Builder.prototype.forceDefaults=function(r){this.force_defaults=r};D.Builder.prototype.dataBuffer=function(){return this.bb};D.Builder.prototype.asUint8Array=function(){return this.bb.bytes().subarray(this.bb.position(),this.bb.position()+this.offset())};D.Builder.prototype.prep=function(r,e){r>this.minalign&&(this.minalign=r);for(var n=~(this.bb.capacity()-this.space+e)+1&r-1;this.space<n+r+e;){var t=this.bb.capacity();this.bb=D.Builder.growByteBuffer(this.bb),this.space+=this.bb.capacity()-t}this.pad(n)};D.Builder.prototype.pad=function(r){for(var e=0;e<r;e++)this.bb.writeInt8(--this.space,0)};D.Builder.prototype.writeInt8=function(r){this.bb.writeInt8(this.space-=1,r)};D.Builder.prototype.writeInt16=function(r){this.bb.writeInt16(this.space-=2,r)};D.Builder.prototype.writeInt32=function(r){this.bb.writeInt32(this.space-=4,r)};D.Builder.prototype.writeInt64=function(r){this.bb.writeInt64(this.space-=8,r)};D.Builder.prototype.writeFloat32=function(r){this.bb.writeFloat32(this.space-=4,r)};D.Builder.prototype.writeFloat64=function(r){this.bb.writeFloat64(this.space-=8,r)};D.Builder.prototype.addInt8=function(r){this.prep(1,0),this.writeInt8(r)};D.Builder.prototype.addInt16=function(r){this.prep(2,0),this.writeInt16(r)};D.Builder.prototype.addInt32=function(r){this.prep(4,0),this.writeInt32(r)};D.Builder.prototype.addInt64=function(r){this.prep(8,0),this.writeInt64(r)};D.Builder.prototype.addFloat32=function(r){this.prep(4,0),this.writeFloat32(r)};D.Builder.prototype.addFloat64=function(r){this.prep(8,0),this.writeFloat64(r)};D.Builder.prototype.addFieldInt8=function(r,e,n){(this.force_defaults||e!=n)&&(this.addInt8(e),this.slot(r))};D.Builder.prototype.addFieldInt16=function(r,e,n){(this.force_defaults||e!=n)&&(this.addInt16(e),this.slot(r))};D.Builder.prototype.addFieldInt32=function(r,e,n){(this.force_defaults||e!=n)&&(this.addInt32(e),this.slot(r))};D.Builder.prototype.addFieldInt64=function(r,e,n){(this.force_defaults||!e.equals(n))&&(this.addInt64(e),this.slot(r))};D.Builder.prototype.addFieldFloat32=function(r,e,n){(this.force_defaults||e!=n)&&(this.addFloat32(e),this.slot(r))};D.Builder.prototype.addFieldFloat64=function(r,e,n){(this.force_defaults||e!=n)&&(this.addFloat64(e),this.slot(r))};D.Builder.prototype.addFieldOffset=function(r,e,n){(this.force_defaults||e!=n)&&(this.addOffset(e),this.slot(r))};D.Builder.prototype.addFieldStruct=function(r,e,n){e!=n&&(this.nested(e),this.slot(r))};D.Builder.prototype.nested=function(r){if(r!=this.offset())throw new Error("FlatBuffers: struct must be serialized inline.")};D.Builder.prototype.notNested=function(){if(this.isNested)throw new Error("FlatBuffers: object serialization must not be nested.")};D.Builder.prototype.slot=function(r){this.vtable[r]=this.offset()};D.Builder.prototype.offset=function(){return this.bb.capacity()-this.space};D.Builder.growByteBuffer=function(r){var e=r.capacity();if(e&3221225472)throw new Error("FlatBuffers: cannot grow buffer beyond 2 gigabytes.");var n=e<<1,t=D.ByteBuffer.allocate(n);return t.setPosition(n-e),t.bytes().set(r.bytes(),n-e),t};D.Builder.prototype.addOffset=function(r){this.prep(D.SIZEOF_INT,0),this.writeInt32(this.offset()-r+D.SIZEOF_INT)};D.Builder.prototype.startObject=function(r){this.notNested(),this.vtable==null&&(this.vtable=[]),this.vtable_in_use=r;for(var e=0;e<r;e++)this.vtable[e]=0;this.isNested=!0,this.object_start=this.offset()};D.Builder.prototype.endObject=function(){if(this.vtable==null||!this.isNested)throw new Error("FlatBuffers: endObject called without startObject");this.addInt32(0);for(var r=this.offset(),e=this.vtable_in_use-1;e>=0&&this.vtable[e]==0;e--);for(var n=e+1;e>=0;e--)this.addInt16(this.vtable[e]!=0?r-this.vtable[e]:0);var t=2;this.addInt16(r-this.object_start);var o=(n+t)*D.SIZEOF_SHORT;this.addInt16(o);var i=0,s=this.space;e:for(e=0;e<this.vtables.length;e++){var a=this.bb.capacity()-this.vtables[e];if(o==this.bb.readInt16(a)){for(var u=D.SIZEOF_SHORT;u<o;u+=D.SIZEOF_SHORT)if(this.bb.readInt16(s+u)!=this.bb.readInt16(a+u))continue e;i=this.vtables[e];break}}return i?(this.space=this.bb.capacity()-r,this.bb.writeInt32(this.space,i-r)):(this.vtables.push(this.offset()),this.bb.writeInt32(this.bb.capacity()-r,this.offset()-r)),this.isNested=!1,r};D.Builder.prototype.finish=function(r,e,n){var t=n?D.SIZE_PREFIX_LENGTH:0;if(e){var o=e;if(this.prep(this.minalign,D.SIZEOF_INT+D.FILE_IDENTIFIER_LENGTH+t),o.length!=D.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+D.FILE_IDENTIFIER_LENGTH);for(var i=D.FILE_IDENTIFIER_LENGTH-1;i>=0;i--)this.writeInt8(o.charCodeAt(i))}this.prep(this.minalign,D.SIZEOF_INT+t),this.addOffset(r),t&&this.addInt32(this.bb.capacity()-this.space),this.bb.setPosition(this.space)};D.Builder.prototype.finishSizePrefixed=function(r,e){this.finish(r,e,!0)};D.Builder.prototype.requiredField=function(r,e){var n=this.bb.capacity()-r,t=n-this.bb.readInt32(n),o=this.bb.readInt16(t+e)!=0;if(!o)throw new Error("FlatBuffers: field "+e+" must be set")};D.Builder.prototype.startVector=function(r,e,n){this.notNested(),this.vector_num_elems=e,this.prep(D.SIZEOF_INT,r*e),this.prep(n,r*e)};D.Builder.prototype.endVector=function(){return this.writeInt32(this.vector_num_elems),this.offset()};D.Builder.prototype.createString=function(r){if(r instanceof Uint8Array)var e=r;else for(var e=[],n=0;n<r.length;){var t,o=r.charCodeAt(n++);if(o<55296||o>=56320)t=o;else{var i=r.charCodeAt(n++);t=(o<<10)+i+(65536-56623104-56320)}t<128?e.push(t):(t<2048?e.push(t>>6&31|192):(t<65536?e.push(t>>12&15|224):e.push(t>>18&7|240,t>>12&63|128),e.push(t>>6&63|128)),e.push(t&63|128))}this.addInt8(0),this.startVector(1,e.length,1),this.bb.setPosition(this.space-=e.length);for(var n=0,s=this.space,a=this.bb.bytes();n<e.length;n++)a[s++]=e[n];return this.endVector()};D.Builder.prototype.createLong=function(r,e){return D.Long.create(r,e)};D.ByteBuffer=function(r){this.bytes_=r,this.position_=0};D.ByteBuffer.allocate=function(r){return new D.ByteBuffer(new Uint8Array(r))};D.ByteBuffer.prototype.clear=function(){this.position_=0};D.ByteBuffer.prototype.bytes=function(){return this.bytes_};D.ByteBuffer.prototype.position=function(){return this.position_};D.ByteBuffer.prototype.setPosition=function(r){this.position_=r};D.ByteBuffer.prototype.capacity=function(){return this.bytes_.length};D.ByteBuffer.prototype.readInt8=function(r){return this.readUint8(r)<<24>>24};D.ByteBuffer.prototype.readUint8=function(r){return this.bytes_[r]};D.ByteBuffer.prototype.readInt16=function(r){return this.readUint16(r)<<16>>16};D.ByteBuffer.prototype.readUint16=function(r){return this.bytes_[r]|this.bytes_[r+1]<<8};D.ByteBuffer.prototype.readInt32=function(r){return this.bytes_[r]|this.bytes_[r+1]<<8|this.bytes_[r+2]<<16|this.bytes_[r+3]<<24};D.ByteBuffer.prototype.readUint32=function(r){return this.readInt32(r)>>>0};D.ByteBuffer.prototype.readInt64=function(r){return new D.Long(this.readInt32(r),this.readInt32(r+4))};D.ByteBuffer.prototype.readUint64=function(r){return new D.Long(this.readUint32(r),this.readUint32(r+4))};D.ByteBuffer.prototype.readFloat32=function(r){return D.int32[0]=this.readInt32(r),D.float32[0]};D.ByteBuffer.prototype.readFloat64=function(r){return D.int32[D.isLittleEndian?0:1]=this.readInt32(r),D.int32[D.isLittleEndian?1:0]=this.readInt32(r+4),D.float64[0]};D.ByteBuffer.prototype.writeInt8=function(r,e){this.bytes_[r]=e};D.ByteBuffer.prototype.writeUint8=function(r,e){this.bytes_[r]=e};D.ByteBuffer.prototype.writeInt16=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8};D.ByteBuffer.prototype.writeUint16=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8};D.ByteBuffer.prototype.writeInt32=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8,this.bytes_[r+2]=e>>16,this.bytes_[r+3]=e>>24};D.ByteBuffer.prototype.writeUint32=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8,this.bytes_[r+2]=e>>16,this.bytes_[r+3]=e>>24};D.ByteBuffer.prototype.writeInt64=function(r,e){this.writeInt32(r,e.low),this.writeInt32(r+4,e.high)};D.ByteBuffer.prototype.writeUint64=function(r,e){this.writeUint32(r,e.low),this.writeUint32(r+4,e.high)};D.ByteBuffer.prototype.writeFloat32=function(r,e){D.float32[0]=e,this.writeInt32(r,D.int32[0])};D.ByteBuffer.prototype.writeFloat64=function(r,e){D.float64[0]=e,this.writeInt32(r,D.int32[D.isLittleEndian?0:1]),this.writeInt32(r+4,D.int32[D.isLittleEndian?1:0])};D.ByteBuffer.prototype.getBufferIdentifier=function(){if(this.bytes_.length<this.position_+D.SIZEOF_INT+D.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: ByteBuffer is too short to contain an identifier.");for(var r="",e=0;e<D.FILE_IDENTIFIER_LENGTH;e++)r+=String.fromCharCode(this.readInt8(this.position_+D.SIZEOF_INT+e));return r};D.ByteBuffer.prototype.__offset=function(r,e){var n=r-this.readInt32(r);return e<this.readInt16(n)?this.readInt16(n+e):0};D.ByteBuffer.prototype.__union=function(r,e){return r.bb_pos=e+this.readInt32(e),r.bb=this,r};D.ByteBuffer.prototype.__string=function(r,e){r+=this.readInt32(r);var n=this.readInt32(r),t="",o=0;if(r+=D.SIZEOF_INT,e===D.Encoding.UTF8_BYTES)return this.bytes_.subarray(r,r+n);for(;o<n;){var i,s=this.readUint8(r+o++);if(s<192)i=s;else{var a=this.readUint8(r+o++);if(s<224)i=(s&31)<<6|a&63;else{var u=this.readUint8(r+o++);if(s<240)i=(s&15)<<12|(a&63)<<6|u&63;else{var l=this.readUint8(r+o++);i=(s&7)<<18|(a&63)<<12|(u&63)<<6|l&63}}}i<65536?t+=String.fromCharCode(i):(i-=65536,t+=String.fromCharCode((i>>10)+55296,(i&1024-1)+56320))}return t};D.ByteBuffer.prototype.__indirect=function(r){return r+this.readInt32(r)};D.ByteBuffer.prototype.__vector=function(r){return r+this.readInt32(r)+D.SIZEOF_INT};D.ByteBuffer.prototype.__vector_len=function(r){return this.readInt32(r+this.readInt32(r))};D.ByteBuffer.prototype.__has_identifier=function(r){if(r.length!=D.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+D.FILE_IDENTIFIER_LENGTH);for(var e=0;e<D.FILE_IDENTIFIER_LENGTH;e++)if(r.charCodeAt(e)!=this.readInt8(this.position_+D.SIZEOF_INT+e))return!1;return!0};D.ByteBuffer.prototype.createLong=function(r,e){return D.Long.create(r,e)}});var ue,io=B(()=>{"use strict";si();(e=>{let r;(t=>{let n;(i=>{let o;(O=>(O[O.UNDEFINED=0]="UNDEFINED",O[O.FLOAT=1]="FLOAT",O[O.INT=2]="INT",O[O.STRING=3]="STRING",O[O.TENSOR=4]="TENSOR",O[O.GRAPH=5]="GRAPH",O[O.FLOATS=6]="FLOATS",O[O.INTS=7]="INTS",O[O.STRINGS=8]="STRINGS",O[O.TENSORS=9]="TENSORS",O[O.GRAPHS=10]="GRAPHS",O[O.SPARSE_TENSOR=11]="SPARSE_TENSOR",O[O.SPARSE_TENSORS=12]="SPARSE_TENSORS"))(o=i.AttributeType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(ue||={});(e=>{let r;(t=>{let n;(i=>{let o;(l=>(l[l.UNKNOWN=0]="UNKNOWN",l[l.VALUE=1]="VALUE",l[l.PARAM=2]="PARAM"))(o=i.DimensionValueType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(ue||={});(e=>{let r;(t=>{let n;(i=>{let o;(P=>(P[P.UNDEFINED=0]="UNDEFINED",P[P.FLOAT=1]="FLOAT",P[P.UINT8=2]="UINT8",P[P.INT8=3]="INT8",P[P.UINT16=4]="UINT16",P[P.INT16=5]="INT16",P[P.INT32=6]="INT32",P[P.INT64=7]="INT64",P[P.STRING=8]="STRING",P[P.BOOL=9]="BOOL",P[P.FLOAT16=10]="FLOAT16",P[P.DOUBLE=11]="DOUBLE",P[P.UINT32=12]="UINT32",P[P.UINT64=13]="UINT64",P[P.COMPLEX64=14]="COMPLEX64",P[P.COMPLEX128=15]="COMPLEX128",P[P.BFLOAT16=16]="BFLOAT16",P[P.FLOAT8E4M3FN=17]="FLOAT8E4M3FN",P[P.FLOAT8E4M3FNUZ=18]="FLOAT8E4M3FNUZ",P[P.FLOAT8E5M2=19]="FLOAT8E5M2",P[P.FLOAT8E5M2FNUZ=20]="FLOAT8E5M2FNUZ"))(o=i.TensorDataType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(ue||={});(e=>{let r;(t=>{let n;(i=>{let o;(u=>(u[u.Primitive=0]="Primitive",u[u.Fused=1]="Fused"))(o=i.NodeType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(ue||={});(e=>{let r;(t=>{let n;(i=>{let o;(d=>(d[d.NONE=0]="NONE",d[d.tensor_type=1]="tensor_type",d[d.sequence_type=2]="sequence_type",d[d.map_type=3]="map_type"))(o=i.TypeInfoValue||={})})(n=t.fbs||={})})(r=e.experimental||={})})(ue||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsShape(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsShape(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}dim(a,u){let l=this.bb.__offset(this.bb_pos,4);return l?(u||new e.experimental.fbs.Dimension).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}dimLength(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.__vector_len(this.bb_pos+a):0}static startShape(a){a.startObject(1)}static addDim(a,u){a.addFieldOffset(0,u,0)}static createDimVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startDimVector(a,u){a.startVector(4,u,4)}static endShape(a){return a.endObject()}static createShape(a,u){return o.startShape(a),o.addDim(a,u),o.endShape(a)}}i.Shape=o})(n=t.fbs||={})})(r=e.experimental||={})})(ue||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsDimension(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsDimension(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}value(a){let u=this.bb.__offset(this.bb_pos,4);return u?(a||new e.experimental.fbs.DimensionValue).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}denotation(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}static startDimension(a){a.startObject(2)}static addValue(a,u){a.addFieldOffset(0,u,0)}static addDenotation(a,u){a.addFieldOffset(1,u,0)}static endDimension(a){return a.endObject()}static createDimension(a,u,l){return o.startDimension(a),o.addValue(a,u),o.addDenotation(a,l),o.endDimension(a)}}i.Dimension=o})(n=t.fbs||={})})(r=e.experimental||={})})(ue||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsDimensionValue(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsDimensionValue(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}dimType(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt8(this.bb_pos+a):0}dimValue(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}dimParam(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.__string(this.bb_pos+u,a):null}static startDimensionValue(a){a.startObject(3)}static addDimType(a,u){a.addFieldInt8(0,u,0)}static addDimValue(a,u){a.addFieldInt64(1,u,a.createLong(0,0))}static addDimParam(a,u){a.addFieldOffset(2,u,0)}static endDimensionValue(a){return a.endObject()}static createDimensionValue(a,u,l,d){return o.startDimensionValue(a),o.addDimType(a,u),o.addDimValue(a,l),o.addDimParam(a,d),o.endDimensionValue(a)}}i.DimensionValue=o})(n=t.fbs||={})})(r=e.experimental||={})})(ue||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsTensorTypeAndShape(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsTensorTypeAndShape(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}elemType(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt32(this.bb_pos+a):0}shape(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.Shape).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startTensorTypeAndShape(a){a.startObject(2)}static addElemType(a,u){a.addFieldInt32(0,u,0)}static addShape(a,u){a.addFieldOffset(1,u,0)}static endTensorTypeAndShape(a){return a.endObject()}static createTensorTypeAndShape(a,u,l){return o.startTensorTypeAndShape(a),o.addElemType(a,u),o.addShape(a,l),o.endTensorTypeAndShape(a)}}i.TensorTypeAndShape=o})(n=t.fbs||={})})(r=e.experimental||={})})(ue||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsMapType(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsMapType(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}keyType(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt32(this.bb_pos+a):0}valueType(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startMapType(a){a.startObject(2)}static addKeyType(a,u){a.addFieldInt32(0,u,0)}static addValueType(a,u){a.addFieldOffset(1,u,0)}static endMapType(a){return a.endObject()}static createMapType(a,u,l){return o.startMapType(a),o.addKeyType(a,u),o.addValueType(a,l),o.endMapType(a)}}i.MapType=o})(n=t.fbs||={})})(r=e.experimental||={})})(ue||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsSequenceType(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSequenceType(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}elemType(a){let u=this.bb.__offset(this.bb_pos,4);return u?(a||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startSequenceType(a){a.startObject(1)}static addElemType(a,u){a.addFieldOffset(0,u,0)}static endSequenceType(a){return a.endObject()}static createSequenceType(a,u){return o.startSequenceType(a),o.addElemType(a,u),o.endSequenceType(a)}}i.SequenceType=o})(n=t.fbs||={})})(r=e.experimental||={})})(ue||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}nodeIndex(){return this.bb.readUint32(this.bb_pos)}srcArgIndex(){return this.bb.readInt32(this.bb_pos+4)}dstArgIndex(){return this.bb.readInt32(this.bb_pos+8)}static createEdgeEnd(a,u,l,d){return a.prep(4,12),a.writeInt32(d),a.writeInt32(l),a.writeInt32(u),a.offset()}}i.EdgeEnd=o})(n=t.fbs||={})})(r=e.experimental||={})})(ue||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsNodeEdge(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsNodeEdge(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}nodeIndex(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readUint32(this.bb_pos+a):0}inputEdges(a,u){let l=this.bb.__offset(this.bb_pos,6);return l?(u||new e.experimental.fbs.EdgeEnd).__init(this.bb.__vector(this.bb_pos+l)+a*12,this.bb):null}inputEdgesLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}outputEdges(a,u){let l=this.bb.__offset(this.bb_pos,8);return l?(u||new e.experimental.fbs.EdgeEnd).__init(this.bb.__vector(this.bb_pos+l)+a*12,this.bb):null}outputEdgesLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}static startNodeEdge(a){a.startObject(3)}static addNodeIndex(a,u){a.addFieldInt32(0,u,0)}static addInputEdges(a,u){a.addFieldOffset(1,u,0)}static startInputEdgesVector(a,u){a.startVector(12,u,4)}static addOutputEdges(a,u){a.addFieldOffset(2,u,0)}static startOutputEdgesVector(a,u){a.startVector(12,u,4)}static endNodeEdge(a){return a.endObject()}static createNodeEdge(a,u,l,d){return o.startNodeEdge(a),o.addNodeIndex(a,u),o.addInputEdges(a,l),o.addOutputEdges(a,d),o.endNodeEdge(a)}}i.NodeEdge=o})(n=t.fbs||={})})(r=e.experimental||={})})(ue||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsNode(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsNode(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}docString(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}domain(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.__string(this.bb_pos+u,a):null}sinceVersion(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readInt32(this.bb_pos+a):0}index(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.readUint32(this.bb_pos+a):0}opType(a){let u=this.bb.__offset(this.bb_pos,14);return u?this.bb.__string(this.bb_pos+u,a):null}type(){let a=this.bb.__offset(this.bb_pos,16);return a?this.bb.readInt32(this.bb_pos+a):0}executionProviderType(a){let u=this.bb.__offset(this.bb_pos,18);return u?this.bb.__string(this.bb_pos+u,a):null}inputs(a,u){let l=this.bb.__offset(this.bb_pos,20);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}inputsLength(){let a=this.bb.__offset(this.bb_pos,20);return a?this.bb.__vector_len(this.bb_pos+a):0}outputs(a,u){let l=this.bb.__offset(this.bb_pos,22);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}outputsLength(){let a=this.bb.__offset(this.bb_pos,22);return a?this.bb.__vector_len(this.bb_pos+a):0}attributes(a,u){let l=this.bb.__offset(this.bb_pos,24);return l?(u||new e.experimental.fbs.Attribute).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}attributesLength(){let a=this.bb.__offset(this.bb_pos,24);return a?this.bb.__vector_len(this.bb_pos+a):0}inputArgCounts(a){let u=this.bb.__offset(this.bb_pos,26);return u?this.bb.readInt32(this.bb.__vector(this.bb_pos+u)+a*4):0}inputArgCountsLength(){let a=this.bb.__offset(this.bb_pos,26);return a?this.bb.__vector_len(this.bb_pos+a):0}inputArgCountsArray(){let a=this.bb.__offset(this.bb_pos,26);return a?new Int32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}implicitInputs(a,u){let l=this.bb.__offset(this.bb_pos,28);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}implicitInputsLength(){let a=this.bb.__offset(this.bb_pos,28);return a?this.bb.__vector_len(this.bb_pos+a):0}static startNode(a){a.startObject(13)}static addName(a,u){a.addFieldOffset(0,u,0)}static addDocString(a,u){a.addFieldOffset(1,u,0)}static addDomain(a,u){a.addFieldOffset(2,u,0)}static addSinceVersion(a,u){a.addFieldInt32(3,u,0)}static addIndex(a,u){a.addFieldInt32(4,u,0)}static addOpType(a,u){a.addFieldOffset(5,u,0)}static addType(a,u){a.addFieldInt32(6,u,0)}static addExecutionProviderType(a,u){a.addFieldOffset(7,u,0)}static addInputs(a,u){a.addFieldOffset(8,u,0)}static createInputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startInputsVector(a,u){a.startVector(4,u,4)}static addOutputs(a,u){a.addFieldOffset(9,u,0)}static createOutputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startOutputsVector(a,u){a.startVector(4,u,4)}static addAttributes(a,u){a.addFieldOffset(10,u,0)}static createAttributesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startAttributesVector(a,u){a.startVector(4,u,4)}static addInputArgCounts(a,u){a.addFieldOffset(11,u,0)}static createInputArgCountsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addInt32(u[l]);return a.endVector()}static startInputArgCountsVector(a,u){a.startVector(4,u,4)}static addImplicitInputs(a,u){a.addFieldOffset(12,u,0)}static createImplicitInputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startImplicitInputsVector(a,u){a.startVector(4,u,4)}static endNode(a){return a.endObject()}static createNode(a,u,l,d,f,p,g,b,y,T,x,_,O,C){return o.startNode(a),o.addName(a,u),o.addDocString(a,l),o.addDomain(a,d),o.addSinceVersion(a,f),o.addIndex(a,p),o.addOpType(a,g),o.addType(a,b),o.addExecutionProviderType(a,y),o.addInputs(a,T),o.addOutputs(a,x),o.addAttributes(a,_),o.addInputArgCounts(a,O),o.addImplicitInputs(a,C),o.endNode(a)}}i.Node=o})(n=t.fbs||={})})(r=e.experimental||={})})(ue||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsValueInfo(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsValueInfo(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}docString(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}type(a){let u=this.bb.__offset(this.bb_pos,8);return u?(a||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startValueInfo(a){a.startObject(3)}static addName(a,u){a.addFieldOffset(0,u,0)}static addDocString(a,u){a.addFieldOffset(1,u,0)}static addType(a,u){a.addFieldOffset(2,u,0)}static endValueInfo(a){return a.endObject()}static createValueInfo(a,u,l,d){return o.startValueInfo(a),o.addName(a,u),o.addDocString(a,l),o.addType(a,d),o.endValueInfo(a)}}i.ValueInfo=o})(n=t.fbs||={})})(r=e.experimental||={})})(ue||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsTypeInfo(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsTypeInfo(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}denotation(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}valueType(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.readUint8(this.bb_pos+a):0}value(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.__union(a,this.bb_pos+u):null}static startTypeInfo(a){a.startObject(3)}static addDenotation(a,u){a.addFieldOffset(0,u,0)}static addValueType(a,u){a.addFieldInt8(1,u,0)}static addValue(a,u){a.addFieldOffset(2,u,0)}static endTypeInfo(a){return a.endObject()}static createTypeInfo(a,u,l,d){return o.startTypeInfo(a),o.addDenotation(a,u),o.addValueType(a,l),o.addValue(a,d),o.endTypeInfo(a)}}i.TypeInfo=o})(n=t.fbs||={})})(r=e.experimental||={})})(ue||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsOperatorSetId(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsOperatorSetId(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}domain(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}version(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}static startOperatorSetId(a){a.startObject(2)}static addDomain(a,u){a.addFieldOffset(0,u,0)}static addVersion(a,u){a.addFieldInt64(1,u,a.createLong(0,0))}static endOperatorSetId(a){return a.endObject()}static createOperatorSetId(a,u,l){return o.startOperatorSetId(a),o.addDomain(a,u),o.addVersion(a,l),o.endOperatorSetId(a)}}i.OperatorSetId=o})(n=t.fbs||={})})(r=e.experimental||={})})(ue||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsTensor(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsTensor(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}docString(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}dims(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.readInt64(this.bb.__vector(this.bb_pos+u)+a*8):this.bb.createLong(0,0)}dimsLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}dataType(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readInt32(this.bb_pos+a):0}rawData(a){let u=this.bb.__offset(this.bb_pos,12);return u?this.bb.readUint8(this.bb.__vector(this.bb_pos+u)+a):0}rawDataLength(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.__vector_len(this.bb_pos+a):0}rawDataArray(){let a=this.bb.__offset(this.bb_pos,12);return a?new Uint8Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}stringData(a,u){let l=this.bb.__offset(this.bb_pos,14);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}stringDataLength(){let a=this.bb.__offset(this.bb_pos,14);return a?this.bb.__vector_len(this.bb_pos+a):0}static startTensor(a){a.startObject(6)}static addName(a,u){a.addFieldOffset(0,u,0)}static addDocString(a,u){a.addFieldOffset(1,u,0)}static addDims(a,u){a.addFieldOffset(2,u,0)}static createDimsVector(a,u){a.startVector(8,u.length,8);for(let l=u.length-1;l>=0;l--)a.addInt64(u[l]);return a.endVector()}static startDimsVector(a,u){a.startVector(8,u,8)}static addDataType(a,u){a.addFieldInt32(3,u,0)}static addRawData(a,u){a.addFieldOffset(4,u,0)}static createRawDataVector(a,u){a.startVector(1,u.length,1);for(let l=u.length-1;l>=0;l--)a.addInt8(u[l]);return a.endVector()}static startRawDataVector(a,u){a.startVector(1,u,1)}static addStringData(a,u){a.addFieldOffset(5,u,0)}static createStringDataVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startStringDataVector(a,u){a.startVector(4,u,4)}static endTensor(a){return a.endObject()}static createTensor(a,u,l,d,f,p,g){return o.startTensor(a),o.addName(a,u),o.addDocString(a,l),o.addDims(a,d),o.addDataType(a,f),o.addRawData(a,p),o.addStringData(a,g),o.endTensor(a)}}i.Tensor=o})(n=t.fbs||={})})(r=e.experimental||={})})(ue||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsSparseTensor(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSparseTensor(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}values(a){let u=this.bb.__offset(this.bb_pos,4);return u?(a||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}indices(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}dims(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.readInt64(this.bb.__vector(this.bb_pos+u)+a*8):this.bb.createLong(0,0)}dimsLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}static startSparseTensor(a){a.startObject(3)}static addValues(a,u){a.addFieldOffset(0,u,0)}static addIndices(a,u){a.addFieldOffset(1,u,0)}static addDims(a,u){a.addFieldOffset(2,u,0)}static createDimsVector(a,u){a.startVector(8,u.length,8);for(let l=u.length-1;l>=0;l--)a.addInt64(u[l]);return a.endVector()}static startDimsVector(a,u){a.startVector(8,u,8)}static endSparseTensor(a){return a.endObject()}static createSparseTensor(a,u,l,d){return o.startSparseTensor(a),o.addValues(a,u),o.addIndices(a,l),o.addDims(a,d),o.endSparseTensor(a)}}i.SparseTensor=o})(n=t.fbs||={})})(r=e.experimental||={})})(ue||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsAttribute(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsAttribute(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}docString(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}type(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.readInt32(this.bb_pos+a):0}f(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readFloat32(this.bb_pos+a):0}i(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}s(a){let u=this.bb.__offset(this.bb_pos,14);return u?this.bb.__string(this.bb_pos+u,a):null}t(a){let u=this.bb.__offset(this.bb_pos,16);return u?(a||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}g(a){let u=this.bb.__offset(this.bb_pos,18);return u?(a||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}floats(a){let u=this.bb.__offset(this.bb_pos,20);return u?this.bb.readFloat32(this.bb.__vector(this.bb_pos+u)+a*4):0}floatsLength(){let a=this.bb.__offset(this.bb_pos,20);return a?this.bb.__vector_len(this.bb_pos+a):0}floatsArray(){let a=this.bb.__offset(this.bb_pos,20);return a?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}ints(a){let u=this.bb.__offset(this.bb_pos,22);return u?this.bb.readInt64(this.bb.__vector(this.bb_pos+u)+a*8):this.bb.createLong(0,0)}intsLength(){let a=this.bb.__offset(this.bb_pos,22);return a?this.bb.__vector_len(this.bb_pos+a):0}strings(a,u){let l=this.bb.__offset(this.bb_pos,24);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}stringsLength(){let a=this.bb.__offset(this.bb_pos,24);return a?this.bb.__vector_len(this.bb_pos+a):0}tensors(a,u){let l=this.bb.__offset(this.bb_pos,26);return l?(u||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}tensorsLength(){let a=this.bb.__offset(this.bb_pos,26);return a?this.bb.__vector_len(this.bb_pos+a):0}graphs(a,u){let l=this.bb.__offset(this.bb_pos,28);return l?(u||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}graphsLength(){let a=this.bb.__offset(this.bb_pos,28);return a?this.bb.__vector_len(this.bb_pos+a):0}static startAttribute(a){a.startObject(13)}static addName(a,u){a.addFieldOffset(0,u,0)}static addDocString(a,u){a.addFieldOffset(1,u,0)}static addType(a,u){a.addFieldInt32(2,u,0)}static addF(a,u){a.addFieldFloat32(3,u,0)}static addI(a,u){a.addFieldInt64(4,u,a.createLong(0,0))}static addS(a,u){a.addFieldOffset(5,u,0)}static addT(a,u){a.addFieldOffset(6,u,0)}static addG(a,u){a.addFieldOffset(7,u,0)}static addFloats(a,u){a.addFieldOffset(8,u,0)}static createFloatsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addFloat32(u[l]);return a.endVector()}static startFloatsVector(a,u){a.startVector(4,u,4)}static addInts(a,u){a.addFieldOffset(9,u,0)}static createIntsVector(a,u){a.startVector(8,u.length,8);for(let l=u.length-1;l>=0;l--)a.addInt64(u[l]);return a.endVector()}static startIntsVector(a,u){a.startVector(8,u,8)}static addStrings(a,u){a.addFieldOffset(10,u,0)}static createStringsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startStringsVector(a,u){a.startVector(4,u,4)}static addTensors(a,u){a.addFieldOffset(11,u,0)}static createTensorsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startTensorsVector(a,u){a.startVector(4,u,4)}static addGraphs(a,u){a.addFieldOffset(12,u,0)}static createGraphsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startGraphsVector(a,u){a.startVector(4,u,4)}static endAttribute(a){return a.endObject()}static createAttribute(a,u,l,d,f,p,g,b,y,T,x,_,O,C){return o.startAttribute(a),o.addName(a,u),o.addDocString(a,l),o.addType(a,d),o.addF(a,f),o.addI(a,p),o.addS(a,g),o.addT(a,b),o.addG(a,y),o.addFloats(a,T),o.addInts(a,x),o.addStrings(a,_),o.addTensors(a,O),o.addGraphs(a,C),o.endAttribute(a)}}i.Attribute=o})(n=t.fbs||={})})(r=e.experimental||={})})(ue||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsGraph(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsGraph(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}initializers(a,u){let l=this.bb.__offset(this.bb_pos,4);return l?(u||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}initializersLength(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.__vector_len(this.bb_pos+a):0}nodeArgs(a,u){let l=this.bb.__offset(this.bb_pos,6);return l?(u||new e.experimental.fbs.ValueInfo).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}nodeArgsLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}nodes(a,u){let l=this.bb.__offset(this.bb_pos,8);return l?(u||new e.experimental.fbs.Node).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}nodesLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}maxNodeIndex(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readUint32(this.bb_pos+a):0}nodeEdges(a,u){let l=this.bb.__offset(this.bb_pos,12);return l?(u||new e.experimental.fbs.NodeEdge).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}nodeEdgesLength(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.__vector_len(this.bb_pos+a):0}inputs(a,u){let l=this.bb.__offset(this.bb_pos,14);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}inputsLength(){let a=this.bb.__offset(this.bb_pos,14);return a?this.bb.__vector_len(this.bb_pos+a):0}outputs(a,u){let l=this.bb.__offset(this.bb_pos,16);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}outputsLength(){let a=this.bb.__offset(this.bb_pos,16);return a?this.bb.__vector_len(this.bb_pos+a):0}sparseInitializers(a,u){let l=this.bb.__offset(this.bb_pos,18);return l?(u||new e.experimental.fbs.SparseTensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}sparseInitializersLength(){let a=this.bb.__offset(this.bb_pos,18);return a?this.bb.__vector_len(this.bb_pos+a):0}static startGraph(a){a.startObject(8)}static addInitializers(a,u){a.addFieldOffset(0,u,0)}static createInitializersVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startInitializersVector(a,u){a.startVector(4,u,4)}static addNodeArgs(a,u){a.addFieldOffset(1,u,0)}static createNodeArgsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startNodeArgsVector(a,u){a.startVector(4,u,4)}static addNodes(a,u){a.addFieldOffset(2,u,0)}static createNodesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startNodesVector(a,u){a.startVector(4,u,4)}static addMaxNodeIndex(a,u){a.addFieldInt32(3,u,0)}static addNodeEdges(a,u){a.addFieldOffset(4,u,0)}static createNodeEdgesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startNodeEdgesVector(a,u){a.startVector(4,u,4)}static addInputs(a,u){a.addFieldOffset(5,u,0)}static createInputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startInputsVector(a,u){a.startVector(4,u,4)}static addOutputs(a,u){a.addFieldOffset(6,u,0)}static createOutputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startOutputsVector(a,u){a.startVector(4,u,4)}static addSparseInitializers(a,u){a.addFieldOffset(7,u,0)}static createSparseInitializersVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startSparseInitializersVector(a,u){a.startVector(4,u,4)}static endGraph(a){return a.endObject()}static createGraph(a,u,l,d,f,p,g,b,y){return o.startGraph(a),o.addInitializers(a,u),o.addNodeArgs(a,l),o.addNodes(a,d),o.addMaxNodeIndex(a,f),o.addNodeEdges(a,p),o.addInputs(a,g),o.addOutputs(a,b),o.addSparseInitializers(a,y),o.endGraph(a)}}i.Graph=o})(n=t.fbs||={})})(r=e.experimental||={})})(ue||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsModel(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsModel(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}irVersion(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}opsetImport(a,u){let l=this.bb.__offset(this.bb_pos,6);return l?(u||new e.experimental.fbs.OperatorSetId).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}opsetImportLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}producerName(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.__string(this.bb_pos+u,a):null}producerVersion(a){let u=this.bb.__offset(this.bb_pos,10);return u?this.bb.__string(this.bb_pos+u,a):null}domain(a){let u=this.bb.__offset(this.bb_pos,12);return u?this.bb.__string(this.bb_pos+u,a):null}modelVersion(){let a=this.bb.__offset(this.bb_pos,14);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}docString(a){let u=this.bb.__offset(this.bb_pos,16);return u?this.bb.__string(this.bb_pos+u,a):null}graph(a){let u=this.bb.__offset(this.bb_pos,18);return u?(a||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}graphDocString(a){let u=this.bb.__offset(this.bb_pos,20);return u?this.bb.__string(this.bb_pos+u,a):null}static startModel(a){a.startObject(9)}static addIrVersion(a,u){a.addFieldInt64(0,u,a.createLong(0,0))}static addOpsetImport(a,u){a.addFieldOffset(1,u,0)}static createOpsetImportVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startOpsetImportVector(a,u){a.startVector(4,u,4)}static addProducerName(a,u){a.addFieldOffset(2,u,0)}static addProducerVersion(a,u){a.addFieldOffset(3,u,0)}static addDomain(a,u){a.addFieldOffset(4,u,0)}static addModelVersion(a,u){a.addFieldInt64(5,u,a.createLong(0,0))}static addDocString(a,u){a.addFieldOffset(6,u,0)}static addGraph(a,u){a.addFieldOffset(7,u,0)}static addGraphDocString(a,u){a.addFieldOffset(8,u,0)}static endModel(a){return a.endObject()}static createModel(a,u,l,d,f,p,g,b,y,T){return o.startModel(a),o.addIrVersion(a,u),o.addOpsetImport(a,l),o.addProducerName(a,d),o.addProducerVersion(a,f),o.addDomain(a,p),o.addModelVersion(a,g),o.addDocString(a,b),o.addGraph(a,y),o.addGraphDocString(a,T),o.endModel(a)}}i.Model=o})(n=t.fbs||={})})(r=e.experimental||={})})(ue||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsKernelCreateInfos(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsKernelCreateInfos(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}nodeIndices(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.readUint32(this.bb.__vector(this.bb_pos+u)+a*4):0}nodeIndicesLength(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.__vector_len(this.bb_pos+a):0}nodeIndicesArray(){let a=this.bb.__offset(this.bb_pos,4);return a?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}kernelDefHashes(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.readUint64(this.bb.__vector(this.bb_pos+u)+a*8):this.bb.createLong(0,0)}kernelDefHashesLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}static startKernelCreateInfos(a){a.startObject(2)}static addNodeIndices(a,u){a.addFieldOffset(0,u,0)}static createNodeIndicesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addInt32(u[l]);return a.endVector()}static startNodeIndicesVector(a,u){a.startVector(4,u,4)}static addKernelDefHashes(a,u){a.addFieldOffset(1,u,0)}static createKernelDefHashesVector(a,u){a.startVector(8,u.length,8);for(let l=u.length-1;l>=0;l--)a.addInt64(u[l]);return a.endVector()}static startKernelDefHashesVector(a,u){a.startVector(8,u,8)}static endKernelCreateInfos(a){return a.endObject()}static createKernelCreateInfos(a,u,l){return o.startKernelCreateInfos(a),o.addNodeIndices(a,u),o.addKernelDefHashes(a,l),o.endKernelCreateInfos(a)}}i.KernelCreateInfos=o})(n=t.fbs||={})})(r=e.experimental||={})})(ue||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsSubGraphSessionState(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSubGraphSessionState(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}graphId(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}sessionState(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.SessionState).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startSubGraphSessionState(a){a.startObject(2)}static addGraphId(a,u){a.addFieldOffset(0,u,0)}static addSessionState(a,u){a.addFieldOffset(1,u,0)}static endSubGraphSessionState(a){let u=a.endObject();return a.requiredField(u,4),u}static createSubGraphSessionState(a,u,l){return o.startSubGraphSessionState(a),o.addGraphId(a,u),o.addSessionState(a,l),o.endSubGraphSessionState(a)}}i.SubGraphSessionState=o})(n=t.fbs||={})})(r=e.experimental||={})})(ue||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsSessionState(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSessionState(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}kernels(a){let u=this.bb.__offset(this.bb_pos,4);return u?(a||new e.experimental.fbs.KernelCreateInfos).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}subGraphSessionStates(a,u){let l=this.bb.__offset(this.bb_pos,6);return l?(u||new e.experimental.fbs.SubGraphSessionState).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}subGraphSessionStatesLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}static startSessionState(a){a.startObject(2)}static addKernels(a,u){a.addFieldOffset(0,u,0)}static addSubGraphSessionStates(a,u){a.addFieldOffset(1,u,0)}static createSubGraphSessionStatesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startSubGraphSessionStatesVector(a,u){a.startVector(4,u,4)}static endSessionState(a){return a.endObject()}static createSessionState(a,u,l){return o.startSessionState(a),o.addKernels(a,u),o.addSubGraphSessionStates(a,l),o.endSessionState(a)}}i.SessionState=o})(n=t.fbs||={})})(r=e.experimental||={})})(ue||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsInferenceSession(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsInferenceSession(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static bufferHasIdentifier(a){return a.__has_identifier("ORTM")}ortVersion(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}model(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.Model).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}sessionState(a){let u=this.bb.__offset(this.bb_pos,8);return u?(a||new e.experimental.fbs.SessionState).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startInferenceSession(a){a.startObject(3)}static addOrtVersion(a,u){a.addFieldOffset(0,u,0)}static addModel(a,u){a.addFieldOffset(1,u,0)}static addSessionState(a,u){a.addFieldOffset(2,u,0)}static endInferenceSession(a){return a.endObject()}static finishInferenceSessionBuffer(a,u){a.finish(u,"ORTM")}static finishSizePrefixedInferenceSessionBuffer(a,u){a.finish(u,"ORTM",!0)}static createInferenceSession(a,u,l,d){return o.startInferenceSession(a),o.addOrtVersion(a,u),o.addModel(a,l),o.addSessionState(a,d),o.endInferenceSession(a)}}i.InferenceSession=o})(n=t.fbs||={})})(r=e.experimental||={})})(ue||={})});var Pl=Xe((bT,Cl)=>{"use strict";Cl.exports=Qy;function Qy(r,e){for(var n=new Array(arguments.length-1),t=0,o=2,i=!0;o<arguments.length;)n[t++]=arguments[o++];return new Promise(function(a,u){n[t]=function(d){if(i)if(i=!1,d)u(d);else{for(var f=new Array(arguments.length-1),p=0;p<f.length;)f[p++]=arguments[p];a.apply(null,f)}};try{r.apply(e||null,n)}catch(l){i&&(i=!1,u(l))}})}});var Rl=Xe(Bl=>{"use strict";var ui=Bl;ui.length=function(e){var n=e.length;if(!n)return 0;for(var t=0;--n%4>1&&e.charAt(n)==="=";)++t;return Math.ceil(e.length*3)/4-t};var Sn=new Array(64),Dl=new Array(123);for(tr=0;tr<64;)Dl[Sn[tr]=tr<26?tr+65:tr<52?tr+71:tr<62?tr-4:tr-59|43]=tr++;var tr;ui.encode=function(e,n,t){for(var o=null,i=[],s=0,a=0,u;n<t;){var l=e[n++];switch(a){case 0:i[s++]=Sn[l>>2],u=(l&3)<<4,a=1;break;case 1:i[s++]=Sn[u|l>>4],u=(l&15)<<2,a=2;break;case 2:i[s++]=Sn[u|l>>6],i[s++]=Sn[l&63],a=0;break}s>8191&&((o||(o=[])).push(String.fromCharCode.apply(String,i)),s=0)}return a&&(i[s++]=Sn[u],i[s++]=61,a===1&&(i[s++]=61)),o?(s&&o.push(String.fromCharCode.apply(String,i.slice(0,s))),o.join("")):String.fromCharCode.apply(String,i.slice(0,s))};var kl="invalid encoding";ui.decode=function(e,n,t){for(var o=t,i=0,s,a=0;a<e.length;){var u=e.charCodeAt(a++);if(u===61&&i>1)break;if((u=Dl[u])===void 0)throw Error(kl);switch(i){case 0:s=u,i=1;break;case 1:n[t++]=s<<2|(u&48)>>4,s=u,i=2;break;case 2:n[t++]=(s&15)<<4|(u&60)>>2,s=u,i=3;break;case 3:n[t++]=(s&3)<<6|u,i=0;break}}if(i===1)throw Error(kl);return t-o};ui.test=function(e){return/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e)}});var Ll=Xe((vT,Ml)=>{"use strict";Ml.exports=li;function li(){this._listeners={}}li.prototype.on=function(e,n,t){return(this._listeners[e]||(this._listeners[e]=[])).push({fn:n,ctx:t||this}),this};li.prototype.off=function(e,n){if(e===void 0)this._listeners={};else if(n===void 0)this._listeners[e]=[];else for(var t=this._listeners[e],o=0;o<t.length;)t[o].fn===n?t.splice(o,1):++o;return this};li.prototype.emit=function(e){var n=this._listeners[e];if(n){for(var t=[],o=1;o<arguments.length;)t.push(arguments[o++]);for(o=0;o<n.length;)n[o].fn.apply(n[o++].ctx,t)}return this}});var Wl=Xe((wT,Ul)=>{"use strict";Ul.exports=zl(zl);function zl(r){return typeof Float32Array<"u"?function(){var e=new Float32Array([-0]),n=new Uint8Array(e.buffer),t=n[3]===128;function o(u,l,d){e[0]=u,l[d]=n[0],l[d+1]=n[1],l[d+2]=n[2],l[d+3]=n[3]}function i(u,l,d){e[0]=u,l[d]=n[3],l[d+1]=n[2],l[d+2]=n[1],l[d+3]=n[0]}r.writeFloatLE=t?o:i,r.writeFloatBE=t?i:o;function s(u,l){return n[0]=u[l],n[1]=u[l+1],n[2]=u[l+2],n[3]=u[l+3],e[0]}function a(u,l){return n[3]=u[l],n[2]=u[l+1],n[1]=u[l+2],n[0]=u[l+3],e[0]}r.readFloatLE=t?s:a,r.readFloatBE=t?a:s}():function(){function e(t,o,i,s){var a=o<0?1:0;if(a&&(o=-o),o===0)t(1/o>0?0:2147483648,i,s);else if(isNaN(o))t(2143289344,i,s);else if(o>34028234663852886e22)t((a<<31|2139095040)>>>0,i,s);else if(o<11754943508222875e-54)t((a<<31|Math.round(o/1401298464324817e-60))>>>0,i,s);else{var u=Math.floor(Math.log(o)/Math.LN2),l=Math.round(o*Math.pow(2,-u)*8388608)&8388607;t((a<<31|u+127<<23|l)>>>0,i,s)}}r.writeFloatLE=e.bind(null,Nl),r.writeFloatBE=e.bind(null,Fl);function n(t,o,i){var s=t(o,i),a=(s>>31)*2+1,u=s>>>23&255,l=s&8388607;return u===255?l?NaN:a*(1/0):u===0?a*1401298464324817e-60*l:a*Math.pow(2,u-150)*(l+8388608)}r.readFloatLE=n.bind(null,Vl),r.readFloatBE=n.bind(null,Gl)}(),typeof Float64Array<"u"?function(){var e=new Float64Array([-0]),n=new Uint8Array(e.buffer),t=n[7]===128;function o(u,l,d){e[0]=u,l[d]=n[0],l[d+1]=n[1],l[d+2]=n[2],l[d+3]=n[3],l[d+4]=n[4],l[d+5]=n[5],l[d+6]=n[6],l[d+7]=n[7]}function i(u,l,d){e[0]=u,l[d]=n[7],l[d+1]=n[6],l[d+2]=n[5],l[d+3]=n[4],l[d+4]=n[3],l[d+5]=n[2],l[d+6]=n[1],l[d+7]=n[0]}r.writeDoubleLE=t?o:i,r.writeDoubleBE=t?i:o;function s(u,l){return n[0]=u[l],n[1]=u[l+1],n[2]=u[l+2],n[3]=u[l+3],n[4]=u[l+4],n[5]=u[l+5],n[6]=u[l+6],n[7]=u[l+7],e[0]}function a(u,l){return n[7]=u[l],n[6]=u[l+1],n[5]=u[l+2],n[4]=u[l+3],n[3]=u[l+4],n[2]=u[l+5],n[1]=u[l+6],n[0]=u[l+7],e[0]}r.readDoubleLE=t?s:a,r.readDoubleBE=t?a:s}():function(){function e(t,o,i,s,a,u){var l=s<0?1:0;if(l&&(s=-s),s===0)t(0,a,u+o),t(1/s>0?0:2147483648,a,u+i);else if(isNaN(s))t(0,a,u+o),t(2146959360,a,u+i);else if(s>17976931348623157e292)t(0,a,u+o),t((l<<31|2146435072)>>>0,a,u+i);else{var d;if(s<22250738585072014e-324)d=s/5e-324,t(d>>>0,a,u+o),t((l<<31|d/4294967296)>>>0,a,u+i);else{var f=Math.floor(Math.log(s)/Math.LN2);f===1024&&(f=1023),d=s*Math.pow(2,-f),t(d*4503599627370496>>>0,a,u+o),t((l<<31|f+1023<<20|d*1048576&1048575)>>>0,a,u+i)}}}r.writeDoubleLE=e.bind(null,Nl,0,4),r.writeDoubleBE=e.bind(null,Fl,4,0);function n(t,o,i,s,a){var u=t(s,a+o),l=t(s,a+i),d=(l>>31)*2+1,f=l>>>20&2047,p=4294967296*(l&1048575)+u;return f===2047?p?NaN:d*(1/0):f===0?d*5e-324*p:d*Math.pow(2,f-1075)*(p+4503599627370496)}r.readDoubleLE=n.bind(null,Vl,0,4),r.readDoubleBE=n.bind(null,Gl,4,0)}(),r}function Nl(r,e,n){e[n]=r&255,e[n+1]=r>>>8&255,e[n+2]=r>>>16&255,e[n+3]=r>>>24}function Fl(r,e,n){e[n]=r>>>24,e[n+1]=r>>>16&255,e[n+2]=r>>>8&255,e[n+3]=r&255}function Vl(r,e){return(r[e]|r[e+1]<<8|r[e+2]<<16|r[e+3]<<24)>>>0}function Gl(r,e){return(r[e]<<24|r[e+1]<<16|r[e+2]<<8|r[e+3])>>>0}});var Hl=Xe((exports,module)=>{"use strict";module.exports=inquire;function inquire(moduleName){try{var mod=eval("quire".replace(/^/,"re"))(moduleName);if(mod&&(mod.length||Object.keys(mod).length))return mod}catch(r){}return null}});var jl=Xe(ql=>{"use strict";var La=ql;La.length=function(e){for(var n=0,t=0,o=0;o<e.length;++o)t=e.charCodeAt(o),t<128?n+=1:t<2048?n+=2:(t&64512)===55296&&(e.charCodeAt(o+1)&64512)===56320?(++o,n+=4):n+=3;return n};La.read=function(e,n,t){var o=t-n;if(o<1)return"";for(var i=null,s=[],a=0,u;n<t;)u=e[n++],u<128?s[a++]=u:u>191&&u<224?s[a++]=(u&31)<<6|e[n++]&63:u>239&&u<365?(u=((u&7)<<18|(e[n++]&63)<<12|(e[n++]&63)<<6|e[n++]&63)-65536,s[a++]=55296+(u>>10),s[a++]=56320+(u&1023)):s[a++]=(u&15)<<12|(e[n++]&63)<<6|e[n++]&63,a>8191&&((i||(i=[])).push(String.fromCharCode.apply(String,s)),a=0);return i?(a&&i.push(String.fromCharCode.apply(String,s.slice(0,a))),i.join("")):String.fromCharCode.apply(String,s.slice(0,a))};La.write=function(e,n,t){for(var o=t,i,s,a=0;a<e.length;++a)i=e.charCodeAt(a),i<128?n[t++]=i:i<2048?(n[t++]=i>>6|192,n[t++]=i&63|128):(i&64512)===55296&&((s=e.charCodeAt(a+1))&64512)===56320?(i=65536+((i&1023)<<10)+(s&1023),++a,n[t++]=i>>18|240,n[t++]=i>>12&63|128,n[t++]=i>>6&63|128,n[t++]=i&63|128):(n[t++]=i>>12|224,n[t++]=i>>6&63|128,n[t++]=i&63|128);return t-o}});var Xl=Xe(($T,Kl)=>{"use strict";Kl.exports=e0;function e0(r,e,n){var t=n||8192,o=t>>>1,i=null,s=t;return function(u){if(u<1||u>o)return r(u);s+u>t&&(i=r(t),s=0);var l=e.call(i,s,s+=u);return s&7&&(s=(s|7)+1),l}}});var Zl=Xe((TT,Yl)=>{"use strict";Yl.exports=wt;var ao=Lr();function wt(r,e){this.lo=r>>>0,this.hi=e>>>0}var en=wt.zero=new wt(0,0);en.toNumber=function(){return 0};en.zzEncode=en.zzDecode=function(){return this};en.length=function(){return 1};var t0=wt.zeroHash="\0\0\0\0\0\0\0\0";wt.fromNumber=function(e){if(e===0)return en;var n=e<0;n&&(e=-e);var t=e>>>0,o=(e-t)/4294967296>>>0;return n&&(o=~o>>>0,t=~t>>>0,++t>4294967295&&(t=0,++o>4294967295&&(o=0))),new wt(t,o)};wt.from=function(e){if(typeof e=="number")return wt.fromNumber(e);if(ao.isString(e))if(ao.Long)e=ao.Long.fromString(e);else return wt.fromNumber(parseInt(e,10));return e.low||e.high?new wt(e.low>>>0,e.high>>>0):en};wt.prototype.toNumber=function(e){if(!e&&this.hi>>>31){var n=~this.lo+1>>>0,t=~this.hi>>>0;return n||(t=t+1>>>0),-(n+t*4294967296)}return this.lo+this.hi*4294967296};wt.prototype.toLong=function(e){return ao.Long?new ao.Long(this.lo|0,this.hi|0,!!e):{low:this.lo|0,high:this.hi|0,unsigned:!!e}};var Mr=String.prototype.charCodeAt;wt.fromHash=function(e){return e===t0?en:new wt((Mr.call(e,0)|Mr.call(e,1)<<8|Mr.call(e,2)<<16|Mr.call(e,3)<<24)>>>0,(Mr.call(e,4)|Mr.call(e,5)<<8|Mr.call(e,6)<<16|Mr.call(e,7)<<24)>>>0)};wt.prototype.toHash=function(){return String.fromCharCode(this.lo&255,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,this.hi&255,this.hi>>>8&255,this.hi>>>16&255,this.hi>>>24)};wt.prototype.zzEncode=function(){var e=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^e)>>>0,this.lo=(this.lo<<1^e)>>>0,this};wt.prototype.zzDecode=function(){var e=-(this.lo&1);return this.lo=((this.lo>>>1|this.hi<<31)^e)>>>0,this.hi=(this.hi>>>1^e)>>>0,this};wt.prototype.length=function(){var e=this.lo,n=(this.lo>>>28|this.hi<<4)>>>0,t=this.hi>>>24;return t===0?n===0?e<16384?e<128?1:2:e<2097152?3:4:n<16384?n<128?5:6:n<2097152?7:8:t<128?9:10}});var Lr=Xe(za=>{"use strict";var le=za;le.asPromise=Pl();le.base64=Rl();le.EventEmitter=Ll();le.float=Wl();le.inquire=Hl();le.utf8=jl();le.pool=Xl();le.LongBits=Zl();le.isNode=!!(typeof global<"u"&&global&&global.process&&global.process.versions&&global.process.versions.node);le.global=le.isNode&&global||typeof window<"u"&&window||typeof self<"u"&&self||za;le.emptyArray=Object.freeze?Object.freeze([]):[];le.emptyObject=Object.freeze?Object.freeze({}):{};le.isInteger=Number.isInteger||function(e){return typeof e=="number"&&isFinite(e)&&Math.floor(e)===e};le.isString=function(e){return typeof e=="string"||e instanceof String};le.isObject=function(e){return e&&typeof e=="object"};le.isset=le.isSet=function(e,n){var t=e[n];return t!=null&&e.hasOwnProperty(n)?typeof t!="object"||(Array.isArray(t)?t.length:Object.keys(t).length)>0:!1};le.Buffer=function(){try{var r=le.inquire("buffer").Buffer;return r.prototype.utf8Write?r:null}catch{return null}}();le._Buffer_from=null;le._Buffer_allocUnsafe=null;le.newBuffer=function(e){return typeof e=="number"?le.Buffer?le._Buffer_allocUnsafe(e):new le.Array(e):le.Buffer?le._Buffer_from(e):typeof Uint8Array>"u"?e:new Uint8Array(e)};le.Array=typeof Uint8Array<"u"?Uint8Array:Array;le.Long=le.global.dcodeIO&&le.global.dcodeIO.Long||le.global.Long||le.inquire("long");le.key2Re=/^true|false|0|1$/;le.key32Re=/^-?(?:0|[1-9][0-9]*)$/;le.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;le.longToHash=function(e){return e?le.LongBits.from(e).toHash():le.LongBits.zeroHash};le.longFromHash=function(e,n){var t=le.LongBits.fromHash(e);return le.Long?le.Long.fromBits(t.lo,t.hi,n):t.toNumber(!!n)};function Jl(r,e,n){for(var t=Object.keys(e),o=0;o<t.length;++o)(r[t[o]]===void 0||!n)&&(r[t[o]]=e[t[o]]);return r}le.merge=Jl;le.lcFirst=function(e){return e.charAt(0).toLowerCase()+e.substring(1)};function Ql(r){function e(n,t){if(!(this instanceof e))return new e(n,t);Object.defineProperty(this,"message",{get:function(){return n}}),Error.captureStackTrace?Error.captureStackTrace(this,e):Object.defineProperty(this,"stack",{value:new Error().stack||""}),t&&Jl(this,t)}return e.prototype=Object.create(Error.prototype,{constructor:{value:e,writable:!0,enumerable:!1,configurable:!0},name:{get:function(){return r},set:void 0,enumerable:!1,configurable:!0},toString:{value:function(){return this.name+": "+this.message},writable:!0,enumerable:!1,configurable:!0}}),e}le.newError=Ql;le.ProtocolError=Ql("ProtocolError");le.oneOfGetter=function(e){for(var n={},t=0;t<e.length;++t)n[e[t]]=1;return function(){for(var o=Object.keys(this),i=o.length-1;i>-1;--i)if(n[o[i]]===1&&this[o[i]]!==void 0&&this[o[i]]!==null)return o[i]}};le.oneOfSetter=function(e){return function(n){for(var t=0;t<e.length;++t)e[t]!==n&&delete this[e[t]]}};le.toJSONOptions={longs:String,enums:String,bytes:String,json:!0};le._configure=function(){var r=le.Buffer;if(!r){le._Buffer_from=le._Buffer_allocUnsafe=null;return}le._Buffer_from=r.from!==Uint8Array.from&&r.from||function(n,t){return new r(n,t)},le._Buffer_allocUnsafe=r.allocUnsafe||function(n){return new r(n)}}});var Ha=Xe((ST,nd)=>{"use strict";nd.exports=Ve;var qt=Lr(),Na,di=qt.LongBits,ed=qt.base64,td=qt.utf8;function so(r,e,n){this.fn=r,this.len=e,this.next=void 0,this.val=n}function Va(){}function r0(r){this.head=r.head,this.tail=r.tail,this.len=r.len,this.next=r.states}function Ve(){this.len=0,this.head=new so(Va,0,0),this.tail=this.head,this.states=null}var rd=function(){return qt.Buffer?function(){return(Ve.create=function(){return new Na})()}:function(){return new Ve}};Ve.create=rd();Ve.alloc=function(e){return new qt.Array(e)};qt.Array!==Array&&(Ve.alloc=qt.pool(Ve.alloc,qt.Array.prototype.subarray));Ve.prototype._push=function(e,n,t){return this.tail=this.tail.next=new so(e,n,t),this.len+=n,this};function Ga(r,e,n){e[n]=r&255}function n0(r,e,n){for(;r>127;)e[n++]=r&127|128,r>>>=7;e[n]=r}function Ua(r,e){this.len=r,this.next=void 0,this.val=e}Ua.prototype=Object.create(so.prototype);Ua.prototype.fn=n0;Ve.prototype.uint32=function(e){return this.len+=(this.tail=this.tail.next=new Ua((e=e>>>0)<128?1:e<16384?2:e<2097152?3:e<268435456?4:5,e)).len,this};Ve.prototype.int32=function(e){return e<0?this._push(Wa,10,di.fromNumber(e)):this.uint32(e)};Ve.prototype.sint32=function(e){return this.uint32((e<<1^e>>31)>>>0)};function Wa(r,e,n){for(;r.hi;)e[n++]=r.lo&127|128,r.lo=(r.lo>>>7|r.hi<<25)>>>0,r.hi>>>=7;for(;r.lo>127;)e[n++]=r.lo&127|128,r.lo=r.lo>>>7;e[n++]=r.lo}Ve.prototype.uint64=function(e){var n=di.from(e);return this._push(Wa,n.length(),n)};Ve.prototype.int64=Ve.prototype.uint64;Ve.prototype.sint64=function(e){var n=di.from(e).zzEncode();return this._push(Wa,n.length(),n)};Ve.prototype.bool=function(e){return this._push(Ga,1,e?1:0)};function Fa(r,e,n){e[n]=r&255,e[n+1]=r>>>8&255,e[n+2]=r>>>16&255,e[n+3]=r>>>24}Ve.prototype.fixed32=function(e){return this._push(Fa,4,e>>>0)};Ve.prototype.sfixed32=Ve.prototype.fixed32;Ve.prototype.fixed64=function(e){var n=di.from(e);return this._push(Fa,4,n.lo)._push(Fa,4,n.hi)};Ve.prototype.sfixed64=Ve.prototype.fixed64;Ve.prototype.float=function(e){return this._push(qt.float.writeFloatLE,4,e)};Ve.prototype.double=function(e){return this._push(qt.float.writeDoubleLE,8,e)};var o0=qt.Array.prototype.set?function(e,n,t){n.set(e,t)}:function(e,n,t){for(var o=0;o<e.length;++o)n[t+o]=e[o]};Ve.prototype.bytes=function(e){var n=e.length>>>0;if(!n)return this._push(Ga,1,0);if(qt.isString(e)){var t=Ve.alloc(n=ed.length(e));ed.decode(e,t,0),e=t}return this.uint32(n)._push(o0,n,e)};Ve.prototype.string=function(e){var n=td.length(e);return n?this.uint32(n)._push(td.write,n,e):this._push(Ga,1,0)};Ve.prototype.fork=function(){return this.states=new r0(this),this.head=this.tail=new so(Va,0,0),this.len=0,this};Ve.prototype.reset=function(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new so(Va,0,0),this.len=0),this};Ve.prototype.ldelim=function(){var e=this.head,n=this.tail,t=this.len;return this.reset().uint32(t),t&&(this.tail.next=e.next,this.tail=n,this.len+=t),this};Ve.prototype.finish=function(){for(var e=this.head.next,n=this.constructor.alloc(this.len),t=0;e;)e.fn(e.val,n,t),t+=e.len,e=e.next;return n};Ve._configure=function(r){Na=r,Ve.create=rd(),Na._configure()}});var ad=Xe((IT,id)=>{"use strict";id.exports=dr;var od=Ha();(dr.prototype=Object.create(od.prototype)).constructor=dr;var zr=Lr();function dr(){od.call(this)}dr._configure=function(){dr.alloc=zr._Buffer_allocUnsafe,dr.writeBytesBuffer=zr.Buffer&&zr.Buffer.prototype instanceof Uint8Array&&zr.Buffer.prototype.set.name==="set"?function(e,n,t){n.set(e,t)}:function(e,n,t){if(e.copy)e.copy(n,t,0,e.length);else for(var o=0;o<e.length;)n[t++]=e[o++]}};dr.prototype.bytes=function(e){zr.isString(e)&&(e=zr._Buffer_from(e,"base64"));var n=e.length>>>0;return this.uint32(n),n&&this._push(dr.writeBytesBuffer,n,e),this};function i0(r,e,n){r.length<40?zr.utf8.write(r,e,n):e.utf8Write?e.utf8Write(r,n):e.write(r,n)}dr.prototype.string=function(e){var n=zr.Buffer.byteLength(e);return this.uint32(n),n&&this._push(i0,n,e),this};dr._configure()});var Ka=Xe((AT,cd)=>{"use strict";cd.exports=dt;var cr=Lr(),ja,ld=cr.LongBits,a0=cr.utf8;function rr(r,e){return RangeError("index out of range: "+r.pos+" + "+(e||1)+" > "+r.len)}function dt(r){this.buf=r,this.pos=0,this.len=r.length}var sd=typeof Uint8Array<"u"?function(e){if(e instanceof Uint8Array||Array.isArray(e))return new dt(e);throw Error("illegal buffer")}:function(e){if(Array.isArray(e))return new dt(e);throw Error("illegal buffer")},dd=function(){return cr.Buffer?function(n){return(dt.create=function(o){return cr.Buffer.isBuffer(o)?new ja(o):sd(o)})(n)}:sd};dt.create=dd();dt.prototype._slice=cr.Array.prototype.subarray||cr.Array.prototype.slice;dt.prototype.uint32=function(){var e=4294967295;return function(){if(e=(this.buf[this.pos]&127)>>>0,this.buf[this.pos++]<128||(e=(e|(this.buf[this.pos]&127)<<7)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<14)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<21)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&15)<<28)>>>0,this.buf[this.pos++]<128))return e;if((this.pos+=5)>this.len)throw this.pos=this.len,rr(this,10);return e}}();dt.prototype.int32=function(){return this.uint32()|0};dt.prototype.sint32=function(){var e=this.uint32();return e>>>1^-(e&1)|0};function qa(){var r=new ld(0,0),e=0;if(this.len-this.pos>4){for(;e<4;++e)if(r.lo=(r.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return r;if(r.lo=(r.lo|(this.buf[this.pos]&127)<<28)>>>0,r.hi=(r.hi|(this.buf[this.pos]&127)>>4)>>>0,this.buf[this.pos++]<128)return r;e=0}else{for(;e<3;++e){if(this.pos>=this.len)throw rr(this);if(r.lo=(r.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return r}return r.lo=(r.lo|(this.buf[this.pos++]&127)<<e*7)>>>0,r}if(this.len-this.pos>4){for(;e<5;++e)if(r.hi=(r.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return r}else for(;e<5;++e){if(this.pos>=this.len)throw rr(this);if(r.hi=(r.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return r}throw Error("invalid varint encoding")}dt.prototype.bool=function(){return this.uint32()!==0};function ci(r,e){return(r[e-4]|r[e-3]<<8|r[e-2]<<16|r[e-1]<<24)>>>0}dt.prototype.fixed32=function(){if(this.pos+4>this.len)throw rr(this,4);return ci(this.buf,this.pos+=4)};dt.prototype.sfixed32=function(){if(this.pos+4>this.len)throw rr(this,4);return ci(this.buf,this.pos+=4)|0};function ud(){if(this.pos+8>this.len)throw rr(this,8);return new ld(ci(this.buf,this.pos+=4),ci(this.buf,this.pos+=4))}dt.prototype.float=function(){if(this.pos+4>this.len)throw rr(this,4);var e=cr.float.readFloatLE(this.buf,this.pos);return this.pos+=4,e};dt.prototype.double=function(){if(this.pos+8>this.len)throw rr(this,4);var e=cr.float.readDoubleLE(this.buf,this.pos);return this.pos+=8,e};dt.prototype.bytes=function(){var e=this.uint32(),n=this.pos,t=this.pos+e;if(t>this.len)throw rr(this,e);return this.pos+=e,Array.isArray(this.buf)?this.buf.slice(n,t):n===t?new this.buf.constructor(0):this._slice.call(this.buf,n,t)};dt.prototype.string=function(){var e=this.bytes();return a0.read(e,0,e.length)};dt.prototype.skip=function(e){if(typeof e=="number"){if(this.pos+e>this.len)throw rr(this,e);this.pos+=e}else do if(this.pos>=this.len)throw rr(this);while(this.buf[this.pos++]&128);return this};dt.prototype.skipType=function(r){switch(r){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;(r=this.uint32()&7)!==4;)this.skipType(r);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+r+" at offset "+this.pos)}return this};dt._configure=function(r){ja=r,dt.create=dd(),ja._configure();var e=cr.Long?"toLong":"toNumber";cr.merge(dt.prototype,{int64:function(){return qa.call(this)[e](!1)},uint64:function(){return qa.call(this)[e](!0)},sint64:function(){return qa.call(this).zzDecode()[e](!1)},fixed64:function(){return ud.call(this)[e](!0)},sfixed64:function(){return ud.call(this)[e](!1)}})}});var md=Xe((OT,hd)=>{"use strict";hd.exports=tn;var pd=Ka();(tn.prototype=Object.create(pd.prototype)).constructor=tn;var fd=Lr();function tn(r){pd.call(this,r)}tn._configure=function(){fd.Buffer&&(tn.prototype._slice=fd.Buffer.prototype.slice)};tn.prototype.string=function(){var e=this.uint32();return this.buf.utf8Slice?this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+e,this.len)):this.buf.toString("utf-8",this.pos,this.pos=Math.min(this.pos+e,this.len))};tn._configure()});var bd=Xe((ET,gd)=>{"use strict";gd.exports=uo;var Xa=Lr();(uo.prototype=Object.create(Xa.EventEmitter.prototype)).constructor=uo;function uo(r,e,n){if(typeof r!="function")throw TypeError("rpcImpl must be a function");Xa.EventEmitter.call(this),this.rpcImpl=r,this.requestDelimited=!!e,this.responseDelimited=!!n}uo.prototype.rpcCall=function r(e,n,t,o,i){if(!o)throw TypeError("request must be specified");var s=this;if(!i)return Xa.asPromise(r,s,e,n,t,o);if(!s.rpcImpl){setTimeout(function(){i(Error("already ended"))},0);return}try{return s.rpcImpl(e,n[s.requestDelimited?"encodeDelimited":"encode"](o).finish(),function(u,l){if(u)return s.emit("error",u,e),i(u);if(l===null){s.end(!0);return}if(!(l instanceof t))try{l=t[s.responseDelimited?"decodeDelimited":"decode"](l)}catch(d){return s.emit("error",d,e),i(d)}return s.emit("data",l,e),i(null,l)})}catch(a){s.emit("error",a,e),setTimeout(function(){i(a)},0);return}};uo.prototype.end=function(e){return this.rpcImpl&&(e||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this}});var vd=Xe(yd=>{"use strict";var s0=yd;s0.Service=bd()});var xd=Xe((PT,wd)=>{"use strict";wd.exports={}});var _d=Xe(Td=>{"use strict";var Mt=Td;Mt.build="minimal";Mt.Writer=Ha();Mt.BufferWriter=ad();Mt.Reader=Ka();Mt.BufferReader=md();Mt.util=Lr();Mt.rpc=vd();Mt.roots=xd();Mt.configure=$d;function $d(){Mt.util._configure(),Mt.Writer._configure(Mt.BufferWriter),Mt.Reader._configure(Mt.BufferReader)}$d()});var Id=Xe((DT,Sd)=>{"use strict";Sd.exports=_d()});var In=Xe((BT,Ad)=>{"use strict";var Ze=Id(),Z=Ze.Reader,ct=Ze.Writer,A=Ze.util,$=Ze.roots.default||(Ze.roots.default={});$.onnx=function(){var r={};return r.Version=function(){var e={},n=Object.create(e);return n[e[0]="_START_VERSION"]=0,n[e[1]="IR_VERSION_2017_10_10"]=1,n[e[2]="IR_VERSION_2017_10_30"]=2,n[e[3]="IR_VERSION_2017_11_3"]=3,n[e[4]="IR_VERSION_2019_1_22"]=4,n[e[5]="IR_VERSION_2019_3_18"]=5,n[e[6]="IR_VERSION_2019_9_19"]=6,n[e[7]="IR_VERSION_2020_5_8"]=7,n[e[8]="IR_VERSION_2021_7_30"]=8,n[e[9]="IR_VERSION"]=9,n}(),r.AttributeProto=function(){function e(n){if(this.floats=[],this.ints=[],this.strings=[],this.tensors=[],this.graphs=[],this.sparseTensors=[],this.typeProtos=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.name="",e.prototype.refAttrName="",e.prototype.docString="",e.prototype.type=0,e.prototype.f=0,e.prototype.i=A.Long?A.Long.fromBits(0,0,!1):0,e.prototype.s=A.newBuffer([]),e.prototype.t=null,e.prototype.g=null,e.prototype.sparseTensor=null,e.prototype.tp=null,e.prototype.floats=A.emptyArray,e.prototype.ints=A.emptyArray,e.prototype.strings=A.emptyArray,e.prototype.tensors=A.emptyArray,e.prototype.graphs=A.emptyArray,e.prototype.sparseTensors=A.emptyArray,e.prototype.typeProtos=A.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=ct.create()),t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(10).string(t.name),t.f!=null&&Object.hasOwnProperty.call(t,"f")&&o.uint32(21).float(t.f),t.i!=null&&Object.hasOwnProperty.call(t,"i")&&o.uint32(24).int64(t.i),t.s!=null&&Object.hasOwnProperty.call(t,"s")&&o.uint32(34).bytes(t.s),t.t!=null&&Object.hasOwnProperty.call(t,"t")&&$.onnx.TensorProto.encode(t.t,o.uint32(42).fork()).ldelim(),t.g!=null&&Object.hasOwnProperty.call(t,"g")&&$.onnx.GraphProto.encode(t.g,o.uint32(50).fork()).ldelim(),t.floats!=null&&t.floats.length){o.uint32(58).fork();for(var i=0;i<t.floats.length;++i)o.float(t.floats[i]);o.ldelim()}if(t.ints!=null&&t.ints.length){o.uint32(66).fork();for(var i=0;i<t.ints.length;++i)o.int64(t.ints[i]);o.ldelim()}if(t.strings!=null&&t.strings.length)for(var i=0;i<t.strings.length;++i)o.uint32(74).bytes(t.strings[i]);if(t.tensors!=null&&t.tensors.length)for(var i=0;i<t.tensors.length;++i)$.onnx.TensorProto.encode(t.tensors[i],o.uint32(82).fork()).ldelim();if(t.graphs!=null&&t.graphs.length)for(var i=0;i<t.graphs.length;++i)$.onnx.GraphProto.encode(t.graphs[i],o.uint32(90).fork()).ldelim();if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(106).string(t.docString),t.tp!=null&&Object.hasOwnProperty.call(t,"tp")&&$.onnx.TypeProto.encode(t.tp,o.uint32(114).fork()).ldelim(),t.typeProtos!=null&&t.typeProtos.length)for(var i=0;i<t.typeProtos.length;++i)$.onnx.TypeProto.encode(t.typeProtos[i],o.uint32(122).fork()).ldelim();if(t.type!=null&&Object.hasOwnProperty.call(t,"type")&&o.uint32(160).int32(t.type),t.refAttrName!=null&&Object.hasOwnProperty.call(t,"refAttrName")&&o.uint32(170).string(t.refAttrName),t.sparseTensor!=null&&Object.hasOwnProperty.call(t,"sparseTensor")&&$.onnx.SparseTensorProto.encode(t.sparseTensor,o.uint32(178).fork()).ldelim(),t.sparseTensors!=null&&t.sparseTensors.length)for(var i=0;i<t.sparseTensors.length;++i)$.onnx.SparseTensorProto.encode(t.sparseTensors[i],o.uint32(186).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Z||(t=Z.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new $.onnx.AttributeProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.name=t.string();break}case 21:{s.refAttrName=t.string();break}case 13:{s.docString=t.string();break}case 20:{s.type=t.int32();break}case 2:{s.f=t.float();break}case 3:{s.i=t.int64();break}case 4:{s.s=t.bytes();break}case 5:{s.t=$.onnx.TensorProto.decode(t,t.uint32());break}case 6:{s.g=$.onnx.GraphProto.decode(t,t.uint32());break}case 22:{s.sparseTensor=$.onnx.SparseTensorProto.decode(t,t.uint32());break}case 14:{s.tp=$.onnx.TypeProto.decode(t,t.uint32());break}case 7:{if(s.floats&&s.floats.length||(s.floats=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.floats.push(t.float());else s.floats.push(t.float());break}case 8:{if(s.ints&&s.ints.length||(s.ints=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.ints.push(t.int64());else s.ints.push(t.int64());break}case 9:{s.strings&&s.strings.length||(s.strings=[]),s.strings.push(t.bytes());break}case 10:{s.tensors&&s.tensors.length||(s.tensors=[]),s.tensors.push($.onnx.TensorProto.decode(t,t.uint32()));break}case 11:{s.graphs&&s.graphs.length||(s.graphs=[]),s.graphs.push($.onnx.GraphProto.decode(t,t.uint32()));break}case 23:{s.sparseTensors&&s.sparseTensors.length||(s.sparseTensors=[]),s.sparseTensors.push($.onnx.SparseTensorProto.decode(t,t.uint32()));break}case 15:{s.typeProtos&&s.typeProtos.length||(s.typeProtos=[]),s.typeProtos.push($.onnx.TypeProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof Z||(t=new Z(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!A.isString(t.name))return"name: string expected";if(t.refAttrName!=null&&t.hasOwnProperty("refAttrName")&&!A.isString(t.refAttrName))return"refAttrName: string expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!A.isString(t.docString))return"docString: string expected";if(t.type!=null&&t.hasOwnProperty("type"))switch(t.type){default:return"type: enum value expected";case 0:case 1:case 2:case 3:case 4:case 5:case 11:case 13:case 6:case 7:case 8:case 9:case 10:case 12:case 14:break}if(t.f!=null&&t.hasOwnProperty("f")&&typeof t.f!="number")return"f: number expected";if(t.i!=null&&t.hasOwnProperty("i")&&!A.isInteger(t.i)&&!(t.i&&A.isInteger(t.i.low)&&A.isInteger(t.i.high)))return"i: integer|Long expected";if(t.s!=null&&t.hasOwnProperty("s")&&!(t.s&&typeof t.s.length=="number"||A.isString(t.s)))return"s: buffer expected";if(t.t!=null&&t.hasOwnProperty("t")){var o=$.onnx.TensorProto.verify(t.t);if(o)return"t."+o}if(t.g!=null&&t.hasOwnProperty("g")){var o=$.onnx.GraphProto.verify(t.g);if(o)return"g."+o}if(t.sparseTensor!=null&&t.hasOwnProperty("sparseTensor")){var o=$.onnx.SparseTensorProto.verify(t.sparseTensor);if(o)return"sparseTensor."+o}if(t.tp!=null&&t.hasOwnProperty("tp")){var o=$.onnx.TypeProto.verify(t.tp);if(o)return"tp."+o}if(t.floats!=null&&t.hasOwnProperty("floats")){if(!Array.isArray(t.floats))return"floats: array expected";for(var i=0;i<t.floats.length;++i)if(typeof t.floats[i]!="number")return"floats: number[] expected"}if(t.ints!=null&&t.hasOwnProperty("ints")){if(!Array.isArray(t.ints))return"ints: array expected";for(var i=0;i<t.ints.length;++i)if(!A.isInteger(t.ints[i])&&!(t.ints[i]&&A.isInteger(t.ints[i].low)&&A.isInteger(t.ints[i].high)))return"ints: integer|Long[] expected"}if(t.strings!=null&&t.hasOwnProperty("strings")){if(!Array.isArray(t.strings))return"strings: array expected";for(var i=0;i<t.strings.length;++i)if(!(t.strings[i]&&typeof t.strings[i].length=="number"||A.isString(t.strings[i])))return"strings: buffer[] expected"}if(t.tensors!=null&&t.hasOwnProperty("tensors")){if(!Array.isArray(t.tensors))return"tensors: array expected";for(var i=0;i<t.tensors.length;++i){var o=$.onnx.TensorProto.verify(t.tensors[i]);if(o)return"tensors."+o}}if(t.graphs!=null&&t.hasOwnProperty("graphs")){if(!Array.isArray(t.graphs))return"graphs: array expected";for(var i=0;i<t.graphs.length;++i){var o=$.onnx.GraphProto.verify(t.graphs[i]);if(o)return"graphs."+o}}if(t.sparseTensors!=null&&t.hasOwnProperty("sparseTensors")){if(!Array.isArray(t.sparseTensors))return"sparseTensors: array expected";for(var i=0;i<t.sparseTensors.length;++i){var o=$.onnx.SparseTensorProto.verify(t.sparseTensors[i]);if(o)return"sparseTensors."+o}}if(t.typeProtos!=null&&t.hasOwnProperty("typeProtos")){if(!Array.isArray(t.typeProtos))return"typeProtos: array expected";for(var i=0;i<t.typeProtos.length;++i){var o=$.onnx.TypeProto.verify(t.typeProtos[i]);if(o)return"typeProtos."+o}}return null},e.fromObject=function(t){if(t instanceof $.onnx.AttributeProto)return t;var o=new $.onnx.AttributeProto;switch(t.name!=null&&(o.name=String(t.name)),t.refAttrName!=null&&(o.refAttrName=String(t.refAttrName)),t.docString!=null&&(o.docString=String(t.docString)),t.type){default:if(typeof t.type=="number"){o.type=t.type;break}break;case"UNDEFINED":case 0:o.type=0;break;case"FLOAT":case 1:o.type=1;break;case"INT":case 2:o.type=2;break;case"STRING":case 3:o.type=3;break;case"TENSOR":case 4:o.type=4;break;case"GRAPH":case 5:o.type=5;break;case"SPARSE_TENSOR":case 11:o.type=11;break;case"TYPE_PROTO":case 13:o.type=13;break;case"FLOATS":case 6:o.type=6;break;case"INTS":case 7:o.type=7;break;case"STRINGS":case 8:o.type=8;break;case"TENSORS":case 9:o.type=9;break;case"GRAPHS":case 10:o.type=10;break;case"SPARSE_TENSORS":case 12:o.type=12;break;case"TYPE_PROTOS":case 14:o.type=14;break}if(t.f!=null&&(o.f=Number(t.f)),t.i!=null&&(A.Long?(o.i=A.Long.fromValue(t.i)).unsigned=!1:typeof t.i=="string"?o.i=parseInt(t.i,10):typeof t.i=="number"?o.i=t.i:typeof t.i=="object"&&(o.i=new A.LongBits(t.i.low>>>0,t.i.high>>>0).toNumber())),t.s!=null&&(typeof t.s=="string"?A.base64.decode(t.s,o.s=A.newBuffer(A.base64.length(t.s)),0):t.s.length>=0&&(o.s=t.s)),t.t!=null){if(typeof t.t!="object")throw TypeError(".onnx.AttributeProto.t: object expected");o.t=$.onnx.TensorProto.fromObject(t.t)}if(t.g!=null){if(typeof t.g!="object")throw TypeError(".onnx.AttributeProto.g: object expected");o.g=$.onnx.GraphProto.fromObject(t.g)}if(t.sparseTensor!=null){if(typeof t.sparseTensor!="object")throw TypeError(".onnx.AttributeProto.sparseTensor: object expected");o.sparseTensor=$.onnx.SparseTensorProto.fromObject(t.sparseTensor)}if(t.tp!=null){if(typeof t.tp!="object")throw TypeError(".onnx.AttributeProto.tp: object expected");o.tp=$.onnx.TypeProto.fromObject(t.tp)}if(t.floats){if(!Array.isArray(t.floats))throw TypeError(".onnx.AttributeProto.floats: array expected");o.floats=[];for(var i=0;i<t.floats.length;++i)o.floats[i]=Number(t.floats[i])}if(t.ints){if(!Array.isArray(t.ints))throw TypeError(".onnx.AttributeProto.ints: array expected");o.ints=[];for(var i=0;i<t.ints.length;++i)A.Long?(o.ints[i]=A.Long.fromValue(t.ints[i])).unsigned=!1:typeof t.ints[i]=="string"?o.ints[i]=parseInt(t.ints[i],10):typeof t.ints[i]=="number"?o.ints[i]=t.ints[i]:typeof t.ints[i]=="object"&&(o.ints[i]=new A.LongBits(t.ints[i].low>>>0,t.ints[i].high>>>0).toNumber())}if(t.strings){if(!Array.isArray(t.strings))throw TypeError(".onnx.AttributeProto.strings: array expected");o.strings=[];for(var i=0;i<t.strings.length;++i)typeof t.strings[i]=="string"?A.base64.decode(t.strings[i],o.strings[i]=A.newBuffer(A.base64.length(t.strings[i])),0):t.strings[i].length>=0&&(o.strings[i]=t.strings[i])}if(t.tensors){if(!Array.isArray(t.tensors))throw TypeError(".onnx.AttributeProto.tensors: array expected");o.tensors=[];for(var i=0;i<t.tensors.length;++i){if(typeof t.tensors[i]!="object")throw TypeError(".onnx.AttributeProto.tensors: object expected");o.tensors[i]=$.onnx.TensorProto.fromObject(t.tensors[i])}}if(t.graphs){if(!Array.isArray(t.graphs))throw TypeError(".onnx.AttributeProto.graphs: array expected");o.graphs=[];for(var i=0;i<t.graphs.length;++i){if(typeof t.graphs[i]!="object")throw TypeError(".onnx.AttributeProto.graphs: object expected");o.graphs[i]=$.onnx.GraphProto.fromObject(t.graphs[i])}}if(t.sparseTensors){if(!Array.isArray(t.sparseTensors))throw TypeError(".onnx.AttributeProto.sparseTensors: array expected");o.sparseTensors=[];for(var i=0;i<t.sparseTensors.length;++i){if(typeof t.sparseTensors[i]!="object")throw TypeError(".onnx.AttributeProto.sparseTensors: object expected");o.sparseTensors[i]=$.onnx.SparseTensorProto.fromObject(t.sparseTensors[i])}}if(t.typeProtos){if(!Array.isArray(t.typeProtos))throw TypeError(".onnx.AttributeProto.typeProtos: array expected");o.typeProtos=[];for(var i=0;i<t.typeProtos.length;++i){if(typeof t.typeProtos[i]!="object")throw TypeError(".onnx.AttributeProto.typeProtos: object expected");o.typeProtos[i]=$.onnx.TypeProto.fromObject(t.typeProtos[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.floats=[],i.ints=[],i.strings=[],i.tensors=[],i.graphs=[],i.typeProtos=[],i.sparseTensors=[]),o.defaults){if(i.name="",i.f=0,A.Long){var s=new A.Long(0,0,!1);i.i=o.longs===String?s.toString():o.longs===Number?s.toNumber():s}else i.i=o.longs===String?"0":0;o.bytes===String?i.s="":(i.s=[],o.bytes!==Array&&(i.s=A.newBuffer(i.s))),i.t=null,i.g=null,i.docString="",i.tp=null,i.type=o.enums===String?"UNDEFINED":0,i.refAttrName="",i.sparseTensor=null}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.f!=null&&t.hasOwnProperty("f")&&(i.f=o.json&&!isFinite(t.f)?String(t.f):t.f),t.i!=null&&t.hasOwnProperty("i")&&(typeof t.i=="number"?i.i=o.longs===String?String(t.i):t.i:i.i=o.longs===String?A.Long.prototype.toString.call(t.i):o.longs===Number?new A.LongBits(t.i.low>>>0,t.i.high>>>0).toNumber():t.i),t.s!=null&&t.hasOwnProperty("s")&&(i.s=o.bytes===String?A.base64.encode(t.s,0,t.s.length):o.bytes===Array?Array.prototype.slice.call(t.s):t.s),t.t!=null&&t.hasOwnProperty("t")&&(i.t=$.onnx.TensorProto.toObject(t.t,o)),t.g!=null&&t.hasOwnProperty("g")&&(i.g=$.onnx.GraphProto.toObject(t.g,o)),t.floats&&t.floats.length){i.floats=[];for(var a=0;a<t.floats.length;++a)i.floats[a]=o.json&&!isFinite(t.floats[a])?String(t.floats[a]):t.floats[a]}if(t.ints&&t.ints.length){i.ints=[];for(var a=0;a<t.ints.length;++a)typeof t.ints[a]=="number"?i.ints[a]=o.longs===String?String(t.ints[a]):t.ints[a]:i.ints[a]=o.longs===String?A.Long.prototype.toString.call(t.ints[a]):o.longs===Number?new A.LongBits(t.ints[a].low>>>0,t.ints[a].high>>>0).toNumber():t.ints[a]}if(t.strings&&t.strings.length){i.strings=[];for(var a=0;a<t.strings.length;++a)i.strings[a]=o.bytes===String?A.base64.encode(t.strings[a],0,t.strings[a].length):o.bytes===Array?Array.prototype.slice.call(t.strings[a]):t.strings[a]}if(t.tensors&&t.tensors.length){i.tensors=[];for(var a=0;a<t.tensors.length;++a)i.tensors[a]=$.onnx.TensorProto.toObject(t.tensors[a],o)}if(t.graphs&&t.graphs.length){i.graphs=[];for(var a=0;a<t.graphs.length;++a)i.graphs[a]=$.onnx.GraphProto.toObject(t.graphs[a],o)}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.tp!=null&&t.hasOwnProperty("tp")&&(i.tp=$.onnx.TypeProto.toObject(t.tp,o)),t.typeProtos&&t.typeProtos.length){i.typeProtos=[];for(var a=0;a<t.typeProtos.length;++a)i.typeProtos[a]=$.onnx.TypeProto.toObject(t.typeProtos[a],o)}if(t.type!=null&&t.hasOwnProperty("type")&&(i.type=o.enums===String?$.onnx.AttributeProto.AttributeType[t.type]===void 0?t.type:$.onnx.AttributeProto.AttributeType[t.type]:t.type),t.refAttrName!=null&&t.hasOwnProperty("refAttrName")&&(i.refAttrName=t.refAttrName),t.sparseTensor!=null&&t.hasOwnProperty("sparseTensor")&&(i.sparseTensor=$.onnx.SparseTensorProto.toObject(t.sparseTensor,o)),t.sparseTensors&&t.sparseTensors.length){i.sparseTensors=[];for(var a=0;a<t.sparseTensors.length;++a)i.sparseTensors[a]=$.onnx.SparseTensorProto.toObject(t.sparseTensors[a],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.AttributeProto"},e.AttributeType=function(){var n={},t=Object.create(n);return t[n[0]="UNDEFINED"]=0,t[n[1]="FLOAT"]=1,t[n[2]="INT"]=2,t[n[3]="STRING"]=3,t[n[4]="TENSOR"]=4,t[n[5]="GRAPH"]=5,t[n[11]="SPARSE_TENSOR"]=11,t[n[13]="TYPE_PROTO"]=13,t[n[6]="FLOATS"]=6,t[n[7]="INTS"]=7,t[n[8]="STRINGS"]=8,t[n[9]="TENSORS"]=9,t[n[10]="GRAPHS"]=10,t[n[12]="SPARSE_TENSORS"]=12,t[n[14]="TYPE_PROTOS"]=14,t}(),e}(),r.ValueInfoProto=function(){function e(n){if(n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.name="",e.prototype.type=null,e.prototype.docString="",e.create=function(t){return new e(t)},e.encode=function(t,o){return o||(o=ct.create()),t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(10).string(t.name),t.type!=null&&Object.hasOwnProperty.call(t,"type")&&$.onnx.TypeProto.encode(t.type,o.uint32(18).fork()).ldelim(),t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(26).string(t.docString),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Z||(t=Z.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new $.onnx.ValueInfoProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.name=t.string();break}case 2:{s.type=$.onnx.TypeProto.decode(t,t.uint32());break}case 3:{s.docString=t.string();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof Z||(t=new Z(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!A.isString(t.name))return"name: string expected";if(t.type!=null&&t.hasOwnProperty("type")){var o=$.onnx.TypeProto.verify(t.type);if(o)return"type."+o}return t.docString!=null&&t.hasOwnProperty("docString")&&!A.isString(t.docString)?"docString: string expected":null},e.fromObject=function(t){if(t instanceof $.onnx.ValueInfoProto)return t;var o=new $.onnx.ValueInfoProto;if(t.name!=null&&(o.name=String(t.name)),t.type!=null){if(typeof t.type!="object")throw TypeError(".onnx.ValueInfoProto.type: object expected");o.type=$.onnx.TypeProto.fromObject(t.type)}return t.docString!=null&&(o.docString=String(t.docString)),o},e.toObject=function(t,o){o||(o={});var i={};return o.defaults&&(i.name="",i.type=null,i.docString=""),t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.type!=null&&t.hasOwnProperty("type")&&(i.type=$.onnx.TypeProto.toObject(t.type,o)),t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.ValueInfoProto"},e}(),r.NodeProto=function(){function e(n){if(this.input=[],this.output=[],this.attribute=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.input=A.emptyArray,e.prototype.output=A.emptyArray,e.prototype.name="",e.prototype.opType="",e.prototype.domain="",e.prototype.attribute=A.emptyArray,e.prototype.docString="",e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=ct.create()),t.input!=null&&t.input.length)for(var i=0;i<t.input.length;++i)o.uint32(10).string(t.input[i]);if(t.output!=null&&t.output.length)for(var i=0;i<t.output.length;++i)o.uint32(18).string(t.output[i]);if(t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(26).string(t.name),t.opType!=null&&Object.hasOwnProperty.call(t,"opType")&&o.uint32(34).string(t.opType),t.attribute!=null&&t.attribute.length)for(var i=0;i<t.attribute.length;++i)$.onnx.AttributeProto.encode(t.attribute[i],o.uint32(42).fork()).ldelim();return t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(50).string(t.docString),t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(58).string(t.domain),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Z||(t=Z.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new $.onnx.NodeProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.input&&s.input.length||(s.input=[]),s.input.push(t.string());break}case 2:{s.output&&s.output.length||(s.output=[]),s.output.push(t.string());break}case 3:{s.name=t.string();break}case 4:{s.opType=t.string();break}case 7:{s.domain=t.string();break}case 5:{s.attribute&&s.attribute.length||(s.attribute=[]),s.attribute.push($.onnx.AttributeProto.decode(t,t.uint32()));break}case 6:{s.docString=t.string();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof Z||(t=new Z(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var o=0;o<t.input.length;++o)if(!A.isString(t.input[o]))return"input: string[] expected"}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(var o=0;o<t.output.length;++o)if(!A.isString(t.output[o]))return"output: string[] expected"}if(t.name!=null&&t.hasOwnProperty("name")&&!A.isString(t.name))return"name: string expected";if(t.opType!=null&&t.hasOwnProperty("opType")&&!A.isString(t.opType))return"opType: string expected";if(t.domain!=null&&t.hasOwnProperty("domain")&&!A.isString(t.domain))return"domain: string expected";if(t.attribute!=null&&t.hasOwnProperty("attribute")){if(!Array.isArray(t.attribute))return"attribute: array expected";for(var o=0;o<t.attribute.length;++o){var i=$.onnx.AttributeProto.verify(t.attribute[o]);if(i)return"attribute."+i}}return t.docString!=null&&t.hasOwnProperty("docString")&&!A.isString(t.docString)?"docString: string expected":null},e.fromObject=function(t){if(t instanceof $.onnx.NodeProto)return t;var o=new $.onnx.NodeProto;if(t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.NodeProto.input: array expected");o.input=[];for(var i=0;i<t.input.length;++i)o.input[i]=String(t.input[i])}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.NodeProto.output: array expected");o.output=[];for(var i=0;i<t.output.length;++i)o.output[i]=String(t.output[i])}if(t.name!=null&&(o.name=String(t.name)),t.opType!=null&&(o.opType=String(t.opType)),t.domain!=null&&(o.domain=String(t.domain)),t.attribute){if(!Array.isArray(t.attribute))throw TypeError(".onnx.NodeProto.attribute: array expected");o.attribute=[];for(var i=0;i<t.attribute.length;++i){if(typeof t.attribute[i]!="object")throw TypeError(".onnx.NodeProto.attribute: object expected");o.attribute[i]=$.onnx.AttributeProto.fromObject(t.attribute[i])}}return t.docString!=null&&(o.docString=String(t.docString)),o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.input=[],i.output=[],i.attribute=[]),o.defaults&&(i.name="",i.opType="",i.docString="",i.domain=""),t.input&&t.input.length){i.input=[];for(var s=0;s<t.input.length;++s)i.input[s]=t.input[s]}if(t.output&&t.output.length){i.output=[];for(var s=0;s<t.output.length;++s)i.output[s]=t.output[s]}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.opType!=null&&t.hasOwnProperty("opType")&&(i.opType=t.opType),t.attribute&&t.attribute.length){i.attribute=[];for(var s=0;s<t.attribute.length;++s)i.attribute[s]=$.onnx.AttributeProto.toObject(t.attribute[s],o)}return t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.NodeProto"},e}(),r.TrainingInfoProto=function(){function e(n){if(this.initializationBinding=[],this.updateBinding=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.initialization=null,e.prototype.algorithm=null,e.prototype.initializationBinding=A.emptyArray,e.prototype.updateBinding=A.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=ct.create()),t.initialization!=null&&Object.hasOwnProperty.call(t,"initialization")&&$.onnx.GraphProto.encode(t.initialization,o.uint32(10).fork()).ldelim(),t.algorithm!=null&&Object.hasOwnProperty.call(t,"algorithm")&&$.onnx.GraphProto.encode(t.algorithm,o.uint32(18).fork()).ldelim(),t.initializationBinding!=null&&t.initializationBinding.length)for(var i=0;i<t.initializationBinding.length;++i)$.onnx.StringStringEntryProto.encode(t.initializationBinding[i],o.uint32(26).fork()).ldelim();if(t.updateBinding!=null&&t.updateBinding.length)for(var i=0;i<t.updateBinding.length;++i)$.onnx.StringStringEntryProto.encode(t.updateBinding[i],o.uint32(34).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Z||(t=Z.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new $.onnx.TrainingInfoProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.initialization=$.onnx.GraphProto.decode(t,t.uint32());break}case 2:{s.algorithm=$.onnx.GraphProto.decode(t,t.uint32());break}case 3:{s.initializationBinding&&s.initializationBinding.length||(s.initializationBinding=[]),s.initializationBinding.push($.onnx.StringStringEntryProto.decode(t,t.uint32()));break}case 4:{s.updateBinding&&s.updateBinding.length||(s.updateBinding=[]),s.updateBinding.push($.onnx.StringStringEntryProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof Z||(t=new Z(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.initialization!=null&&t.hasOwnProperty("initialization")){var o=$.onnx.GraphProto.verify(t.initialization);if(o)return"initialization."+o}if(t.algorithm!=null&&t.hasOwnProperty("algorithm")){var o=$.onnx.GraphProto.verify(t.algorithm);if(o)return"algorithm."+o}if(t.initializationBinding!=null&&t.hasOwnProperty("initializationBinding")){if(!Array.isArray(t.initializationBinding))return"initializationBinding: array expected";for(var i=0;i<t.initializationBinding.length;++i){var o=$.onnx.StringStringEntryProto.verify(t.initializationBinding[i]);if(o)return"initializationBinding."+o}}if(t.updateBinding!=null&&t.hasOwnProperty("updateBinding")){if(!Array.isArray(t.updateBinding))return"updateBinding: array expected";for(var i=0;i<t.updateBinding.length;++i){var o=$.onnx.StringStringEntryProto.verify(t.updateBinding[i]);if(o)return"updateBinding."+o}}return null},e.fromObject=function(t){if(t instanceof $.onnx.TrainingInfoProto)return t;var o=new $.onnx.TrainingInfoProto;if(t.initialization!=null){if(typeof t.initialization!="object")throw TypeError(".onnx.TrainingInfoProto.initialization: object expected");o.initialization=$.onnx.GraphProto.fromObject(t.initialization)}if(t.algorithm!=null){if(typeof t.algorithm!="object")throw TypeError(".onnx.TrainingInfoProto.algorithm: object expected");o.algorithm=$.onnx.GraphProto.fromObject(t.algorithm)}if(t.initializationBinding){if(!Array.isArray(t.initializationBinding))throw TypeError(".onnx.TrainingInfoProto.initializationBinding: array expected");o.initializationBinding=[];for(var i=0;i<t.initializationBinding.length;++i){if(typeof t.initializationBinding[i]!="object")throw TypeError(".onnx.TrainingInfoProto.initializationBinding: object expected");o.initializationBinding[i]=$.onnx.StringStringEntryProto.fromObject(t.initializationBinding[i])}}if(t.updateBinding){if(!Array.isArray(t.updateBinding))throw TypeError(".onnx.TrainingInfoProto.updateBinding: array expected");o.updateBinding=[];for(var i=0;i<t.updateBinding.length;++i){if(typeof t.updateBinding[i]!="object")throw TypeError(".onnx.TrainingInfoProto.updateBinding: object expected");o.updateBinding[i]=$.onnx.StringStringEntryProto.fromObject(t.updateBinding[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.initializationBinding=[],i.updateBinding=[]),o.defaults&&(i.initialization=null,i.algorithm=null),t.initialization!=null&&t.hasOwnProperty("initialization")&&(i.initialization=$.onnx.GraphProto.toObject(t.initialization,o)),t.algorithm!=null&&t.hasOwnProperty("algorithm")&&(i.algorithm=$.onnx.GraphProto.toObject(t.algorithm,o)),t.initializationBinding&&t.initializationBinding.length){i.initializationBinding=[];for(var s=0;s<t.initializationBinding.length;++s)i.initializationBinding[s]=$.onnx.StringStringEntryProto.toObject(t.initializationBinding[s],o)}if(t.updateBinding&&t.updateBinding.length){i.updateBinding=[];for(var s=0;s<t.updateBinding.length;++s)i.updateBinding[s]=$.onnx.StringStringEntryProto.toObject(t.updateBinding[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TrainingInfoProto"},e}(),r.ModelProto=function(){function e(n){if(this.opsetImport=[],this.metadataProps=[],this.trainingInfo=[],this.functions=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.irVersion=A.Long?A.Long.fromBits(0,0,!1):0,e.prototype.opsetImport=A.emptyArray,e.prototype.producerName="",e.prototype.producerVersion="",e.prototype.domain="",e.prototype.modelVersion=A.Long?A.Long.fromBits(0,0,!1):0,e.prototype.docString="",e.prototype.graph=null,e.prototype.metadataProps=A.emptyArray,e.prototype.trainingInfo=A.emptyArray,e.prototype.functions=A.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=ct.create()),t.irVersion!=null&&Object.hasOwnProperty.call(t,"irVersion")&&o.uint32(8).int64(t.irVersion),t.producerName!=null&&Object.hasOwnProperty.call(t,"producerName")&&o.uint32(18).string(t.producerName),t.producerVersion!=null&&Object.hasOwnProperty.call(t,"producerVersion")&&o.uint32(26).string(t.producerVersion),t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(34).string(t.domain),t.modelVersion!=null&&Object.hasOwnProperty.call(t,"modelVersion")&&o.uint32(40).int64(t.modelVersion),t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(50).string(t.docString),t.graph!=null&&Object.hasOwnProperty.call(t,"graph")&&$.onnx.GraphProto.encode(t.graph,o.uint32(58).fork()).ldelim(),t.opsetImport!=null&&t.opsetImport.length)for(var i=0;i<t.opsetImport.length;++i)$.onnx.OperatorSetIdProto.encode(t.opsetImport[i],o.uint32(66).fork()).ldelim();if(t.metadataProps!=null&&t.metadataProps.length)for(var i=0;i<t.metadataProps.length;++i)$.onnx.StringStringEntryProto.encode(t.metadataProps[i],o.uint32(114).fork()).ldelim();if(t.trainingInfo!=null&&t.trainingInfo.length)for(var i=0;i<t.trainingInfo.length;++i)$.onnx.TrainingInfoProto.encode(t.trainingInfo[i],o.uint32(162).fork()).ldelim();if(t.functions!=null&&t.functions.length)for(var i=0;i<t.functions.length;++i)$.onnx.FunctionProto.encode(t.functions[i],o.uint32(202).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Z||(t=Z.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new $.onnx.ModelProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.irVersion=t.int64();break}case 8:{s.opsetImport&&s.opsetImport.length||(s.opsetImport=[]),s.opsetImport.push($.onnx.OperatorSetIdProto.decode(t,t.uint32()));break}case 2:{s.producerName=t.string();break}case 3:{s.producerVersion=t.string();break}case 4:{s.domain=t.string();break}case 5:{s.modelVersion=t.int64();break}case 6:{s.docString=t.string();break}case 7:{s.graph=$.onnx.GraphProto.decode(t,t.uint32());break}case 14:{s.metadataProps&&s.metadataProps.length||(s.metadataProps=[]),s.metadataProps.push($.onnx.StringStringEntryProto.decode(t,t.uint32()));break}case 20:{s.trainingInfo&&s.trainingInfo.length||(s.trainingInfo=[]),s.trainingInfo.push($.onnx.TrainingInfoProto.decode(t,t.uint32()));break}case 25:{s.functions&&s.functions.length||(s.functions=[]),s.functions.push($.onnx.FunctionProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof Z||(t=new Z(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.irVersion!=null&&t.hasOwnProperty("irVersion")&&!A.isInteger(t.irVersion)&&!(t.irVersion&&A.isInteger(t.irVersion.low)&&A.isInteger(t.irVersion.high)))return"irVersion: integer|Long expected";if(t.opsetImport!=null&&t.hasOwnProperty("opsetImport")){if(!Array.isArray(t.opsetImport))return"opsetImport: array expected";for(var o=0;o<t.opsetImport.length;++o){var i=$.onnx.OperatorSetIdProto.verify(t.opsetImport[o]);if(i)return"opsetImport."+i}}if(t.producerName!=null&&t.hasOwnProperty("producerName")&&!A.isString(t.producerName))return"producerName: string expected";if(t.producerVersion!=null&&t.hasOwnProperty("producerVersion")&&!A.isString(t.producerVersion))return"producerVersion: string expected";if(t.domain!=null&&t.hasOwnProperty("domain")&&!A.isString(t.domain))return"domain: string expected";if(t.modelVersion!=null&&t.hasOwnProperty("modelVersion")&&!A.isInteger(t.modelVersion)&&!(t.modelVersion&&A.isInteger(t.modelVersion.low)&&A.isInteger(t.modelVersion.high)))return"modelVersion: integer|Long expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!A.isString(t.docString))return"docString: string expected";if(t.graph!=null&&t.hasOwnProperty("graph")){var i=$.onnx.GraphProto.verify(t.graph);if(i)return"graph."+i}if(t.metadataProps!=null&&t.hasOwnProperty("metadataProps")){if(!Array.isArray(t.metadataProps))return"metadataProps: array expected";for(var o=0;o<t.metadataProps.length;++o){var i=$.onnx.StringStringEntryProto.verify(t.metadataProps[o]);if(i)return"metadataProps."+i}}if(t.trainingInfo!=null&&t.hasOwnProperty("trainingInfo")){if(!Array.isArray(t.trainingInfo))return"trainingInfo: array expected";for(var o=0;o<t.trainingInfo.length;++o){var i=$.onnx.TrainingInfoProto.verify(t.trainingInfo[o]);if(i)return"trainingInfo."+i}}if(t.functions!=null&&t.hasOwnProperty("functions")){if(!Array.isArray(t.functions))return"functions: array expected";for(var o=0;o<t.functions.length;++o){var i=$.onnx.FunctionProto.verify(t.functions[o]);if(i)return"functions."+i}}return null},e.fromObject=function(t){if(t instanceof $.onnx.ModelProto)return t;var o=new $.onnx.ModelProto;if(t.irVersion!=null&&(A.Long?(o.irVersion=A.Long.fromValue(t.irVersion)).unsigned=!1:typeof t.irVersion=="string"?o.irVersion=parseInt(t.irVersion,10):typeof t.irVersion=="number"?o.irVersion=t.irVersion:typeof t.irVersion=="object"&&(o.irVersion=new A.LongBits(t.irVersion.low>>>0,t.irVersion.high>>>0).toNumber())),t.opsetImport){if(!Array.isArray(t.opsetImport))throw TypeError(".onnx.ModelProto.opsetImport: array expected");o.opsetImport=[];for(var i=0;i<t.opsetImport.length;++i){if(typeof t.opsetImport[i]!="object")throw TypeError(".onnx.ModelProto.opsetImport: object expected");o.opsetImport[i]=$.onnx.OperatorSetIdProto.fromObject(t.opsetImport[i])}}if(t.producerName!=null&&(o.producerName=String(t.producerName)),t.producerVersion!=null&&(o.producerVersion=String(t.producerVersion)),t.domain!=null&&(o.domain=String(t.domain)),t.modelVersion!=null&&(A.Long?(o.modelVersion=A.Long.fromValue(t.modelVersion)).unsigned=!1:typeof t.modelVersion=="string"?o.modelVersion=parseInt(t.modelVersion,10):typeof t.modelVersion=="number"?o.modelVersion=t.modelVersion:typeof t.modelVersion=="object"&&(o.modelVersion=new A.LongBits(t.modelVersion.low>>>0,t.modelVersion.high>>>0).toNumber())),t.docString!=null&&(o.docString=String(t.docString)),t.graph!=null){if(typeof t.graph!="object")throw TypeError(".onnx.ModelProto.graph: object expected");o.graph=$.onnx.GraphProto.fromObject(t.graph)}if(t.metadataProps){if(!Array.isArray(t.metadataProps))throw TypeError(".onnx.ModelProto.metadataProps: array expected");o.metadataProps=[];for(var i=0;i<t.metadataProps.length;++i){if(typeof t.metadataProps[i]!="object")throw TypeError(".onnx.ModelProto.metadataProps: object expected");o.metadataProps[i]=$.onnx.StringStringEntryProto.fromObject(t.metadataProps[i])}}if(t.trainingInfo){if(!Array.isArray(t.trainingInfo))throw TypeError(".onnx.ModelProto.trainingInfo: array expected");o.trainingInfo=[];for(var i=0;i<t.trainingInfo.length;++i){if(typeof t.trainingInfo[i]!="object")throw TypeError(".onnx.ModelProto.trainingInfo: object expected");o.trainingInfo[i]=$.onnx.TrainingInfoProto.fromObject(t.trainingInfo[i])}}if(t.functions){if(!Array.isArray(t.functions))throw TypeError(".onnx.ModelProto.functions: array expected");o.functions=[];for(var i=0;i<t.functions.length;++i){if(typeof t.functions[i]!="object")throw TypeError(".onnx.ModelProto.functions: object expected");o.functions[i]=$.onnx.FunctionProto.fromObject(t.functions[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.opsetImport=[],i.metadataProps=[],i.trainingInfo=[],i.functions=[]),o.defaults){if(A.Long){var s=new A.Long(0,0,!1);i.irVersion=o.longs===String?s.toString():o.longs===Number?s.toNumber():s}else i.irVersion=o.longs===String?"0":0;if(i.producerName="",i.producerVersion="",i.domain="",A.Long){var s=new A.Long(0,0,!1);i.modelVersion=o.longs===String?s.toString():o.longs===Number?s.toNumber():s}else i.modelVersion=o.longs===String?"0":0;i.docString="",i.graph=null}if(t.irVersion!=null&&t.hasOwnProperty("irVersion")&&(typeof t.irVersion=="number"?i.irVersion=o.longs===String?String(t.irVersion):t.irVersion:i.irVersion=o.longs===String?A.Long.prototype.toString.call(t.irVersion):o.longs===Number?new A.LongBits(t.irVersion.low>>>0,t.irVersion.high>>>0).toNumber():t.irVersion),t.producerName!=null&&t.hasOwnProperty("producerName")&&(i.producerName=t.producerName),t.producerVersion!=null&&t.hasOwnProperty("producerVersion")&&(i.producerVersion=t.producerVersion),t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),t.modelVersion!=null&&t.hasOwnProperty("modelVersion")&&(typeof t.modelVersion=="number"?i.modelVersion=o.longs===String?String(t.modelVersion):t.modelVersion:i.modelVersion=o.longs===String?A.Long.prototype.toString.call(t.modelVersion):o.longs===Number?new A.LongBits(t.modelVersion.low>>>0,t.modelVersion.high>>>0).toNumber():t.modelVersion),t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.graph!=null&&t.hasOwnProperty("graph")&&(i.graph=$.onnx.GraphProto.toObject(t.graph,o)),t.opsetImport&&t.opsetImport.length){i.opsetImport=[];for(var a=0;a<t.opsetImport.length;++a)i.opsetImport[a]=$.onnx.OperatorSetIdProto.toObject(t.opsetImport[a],o)}if(t.metadataProps&&t.metadataProps.length){i.metadataProps=[];for(var a=0;a<t.metadataProps.length;++a)i.metadataProps[a]=$.onnx.StringStringEntryProto.toObject(t.metadataProps[a],o)}if(t.trainingInfo&&t.trainingInfo.length){i.trainingInfo=[];for(var a=0;a<t.trainingInfo.length;++a)i.trainingInfo[a]=$.onnx.TrainingInfoProto.toObject(t.trainingInfo[a],o)}if(t.functions&&t.functions.length){i.functions=[];for(var a=0;a<t.functions.length;++a)i.functions[a]=$.onnx.FunctionProto.toObject(t.functions[a],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.ModelProto"},e}(),r.StringStringEntryProto=function(){function e(n){if(n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.key="",e.prototype.value="",e.create=function(t){return new e(t)},e.encode=function(t,o){return o||(o=ct.create()),t.key!=null&&Object.hasOwnProperty.call(t,"key")&&o.uint32(10).string(t.key),t.value!=null&&Object.hasOwnProperty.call(t,"value")&&o.uint32(18).string(t.value),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Z||(t=Z.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new $.onnx.StringStringEntryProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.key=t.string();break}case 2:{s.value=t.string();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof Z||(t=new Z(t)),this.decode(t,t.uint32())},e.verify=function(t){return typeof t!="object"||t===null?"object expected":t.key!=null&&t.hasOwnProperty("key")&&!A.isString(t.key)?"key: string expected":t.value!=null&&t.hasOwnProperty("value")&&!A.isString(t.value)?"value: string expected":null},e.fromObject=function(t){if(t instanceof $.onnx.StringStringEntryProto)return t;var o=new $.onnx.StringStringEntryProto;return t.key!=null&&(o.key=String(t.key)),t.value!=null&&(o.value=String(t.value)),o},e.toObject=function(t,o){o||(o={});var i={};return o.defaults&&(i.key="",i.value=""),t.key!=null&&t.hasOwnProperty("key")&&(i.key=t.key),t.value!=null&&t.hasOwnProperty("value")&&(i.value=t.value),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.StringStringEntryProto"},e}(),r.TensorAnnotation=function(){function e(n){if(this.quantParameterTensorNames=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.tensorName="",e.prototype.quantParameterTensorNames=A.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=ct.create()),t.tensorName!=null&&Object.hasOwnProperty.call(t,"tensorName")&&o.uint32(10).string(t.tensorName),t.quantParameterTensorNames!=null&&t.quantParameterTensorNames.length)for(var i=0;i<t.quantParameterTensorNames.length;++i)$.onnx.StringStringEntryProto.encode(t.quantParameterTensorNames[i],o.uint32(18).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Z||(t=Z.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new $.onnx.TensorAnnotation;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.tensorName=t.string();break}case 2:{s.quantParameterTensorNames&&s.quantParameterTensorNames.length||(s.quantParameterTensorNames=[]),s.quantParameterTensorNames.push($.onnx.StringStringEntryProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof Z||(t=new Z(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.tensorName!=null&&t.hasOwnProperty("tensorName")&&!A.isString(t.tensorName))return"tensorName: string expected";if(t.quantParameterTensorNames!=null&&t.hasOwnProperty("quantParameterTensorNames")){if(!Array.isArray(t.quantParameterTensorNames))return"quantParameterTensorNames: array expected";for(var o=0;o<t.quantParameterTensorNames.length;++o){var i=$.onnx.StringStringEntryProto.verify(t.quantParameterTensorNames[o]);if(i)return"quantParameterTensorNames."+i}}return null},e.fromObject=function(t){if(t instanceof $.onnx.TensorAnnotation)return t;var o=new $.onnx.TensorAnnotation;if(t.tensorName!=null&&(o.tensorName=String(t.tensorName)),t.quantParameterTensorNames){if(!Array.isArray(t.quantParameterTensorNames))throw TypeError(".onnx.TensorAnnotation.quantParameterTensorNames: array expected");o.quantParameterTensorNames=[];for(var i=0;i<t.quantParameterTensorNames.length;++i){if(typeof t.quantParameterTensorNames[i]!="object")throw TypeError(".onnx.TensorAnnotation.quantParameterTensorNames: object expected");o.quantParameterTensorNames[i]=$.onnx.StringStringEntryProto.fromObject(t.quantParameterTensorNames[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.quantParameterTensorNames=[]),o.defaults&&(i.tensorName=""),t.tensorName!=null&&t.hasOwnProperty("tensorName")&&(i.tensorName=t.tensorName),t.quantParameterTensorNames&&t.quantParameterTensorNames.length){i.quantParameterTensorNames=[];for(var s=0;s<t.quantParameterTensorNames.length;++s)i.quantParameterTensorNames[s]=$.onnx.StringStringEntryProto.toObject(t.quantParameterTensorNames[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TensorAnnotation"},e}(),r.GraphProto=function(){function e(n){if(this.node=[],this.initializer=[],this.sparseInitializer=[],this.input=[],this.output=[],this.valueInfo=[],this.quantizationAnnotation=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.node=A.emptyArray,e.prototype.name="",e.prototype.initializer=A.emptyArray,e.prototype.sparseInitializer=A.emptyArray,e.prototype.docString="",e.prototype.input=A.emptyArray,e.prototype.output=A.emptyArray,e.prototype.valueInfo=A.emptyArray,e.prototype.quantizationAnnotation=A.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=ct.create()),t.node!=null&&t.node.length)for(var i=0;i<t.node.length;++i)$.onnx.NodeProto.encode(t.node[i],o.uint32(10).fork()).ldelim();if(t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(18).string(t.name),t.initializer!=null&&t.initializer.length)for(var i=0;i<t.initializer.length;++i)$.onnx.TensorProto.encode(t.initializer[i],o.uint32(42).fork()).ldelim();if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(82).string(t.docString),t.input!=null&&t.input.length)for(var i=0;i<t.input.length;++i)$.onnx.ValueInfoProto.encode(t.input[i],o.uint32(90).fork()).ldelim();if(t.output!=null&&t.output.length)for(var i=0;i<t.output.length;++i)$.onnx.ValueInfoProto.encode(t.output[i],o.uint32(98).fork()).ldelim();if(t.valueInfo!=null&&t.valueInfo.length)for(var i=0;i<t.valueInfo.length;++i)$.onnx.ValueInfoProto.encode(t.valueInfo[i],o.uint32(106).fork()).ldelim();if(t.quantizationAnnotation!=null&&t.quantizationAnnotation.length)for(var i=0;i<t.quantizationAnnotation.length;++i)$.onnx.TensorAnnotation.encode(t.quantizationAnnotation[i],o.uint32(114).fork()).ldelim();if(t.sparseInitializer!=null&&t.sparseInitializer.length)for(var i=0;i<t.sparseInitializer.length;++i)$.onnx.SparseTensorProto.encode(t.sparseInitializer[i],o.uint32(122).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Z||(t=Z.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new $.onnx.GraphProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.node&&s.node.length||(s.node=[]),s.node.push($.onnx.NodeProto.decode(t,t.uint32()));break}case 2:{s.name=t.string();break}case 5:{s.initializer&&s.initializer.length||(s.initializer=[]),s.initializer.push($.onnx.TensorProto.decode(t,t.uint32()));break}case 15:{s.sparseInitializer&&s.sparseInitializer.length||(s.sparseInitializer=[]),s.sparseInitializer.push($.onnx.SparseTensorProto.decode(t,t.uint32()));break}case 10:{s.docString=t.string();break}case 11:{s.input&&s.input.length||(s.input=[]),s.input.push($.onnx.ValueInfoProto.decode(t,t.uint32()));break}case 12:{s.output&&s.output.length||(s.output=[]),s.output.push($.onnx.ValueInfoProto.decode(t,t.uint32()));break}case 13:{s.valueInfo&&s.valueInfo.length||(s.valueInfo=[]),s.valueInfo.push($.onnx.ValueInfoProto.decode(t,t.uint32()));break}case 14:{s.quantizationAnnotation&&s.quantizationAnnotation.length||(s.quantizationAnnotation=[]),s.quantizationAnnotation.push($.onnx.TensorAnnotation.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof Z||(t=new Z(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.node!=null&&t.hasOwnProperty("node")){if(!Array.isArray(t.node))return"node: array expected";for(var o=0;o<t.node.length;++o){var i=$.onnx.NodeProto.verify(t.node[o]);if(i)return"node."+i}}if(t.name!=null&&t.hasOwnProperty("name")&&!A.isString(t.name))return"name: string expected";if(t.initializer!=null&&t.hasOwnProperty("initializer")){if(!Array.isArray(t.initializer))return"initializer: array expected";for(var o=0;o<t.initializer.length;++o){var i=$.onnx.TensorProto.verify(t.initializer[o]);if(i)return"initializer."+i}}if(t.sparseInitializer!=null&&t.hasOwnProperty("sparseInitializer")){if(!Array.isArray(t.sparseInitializer))return"sparseInitializer: array expected";for(var o=0;o<t.sparseInitializer.length;++o){var i=$.onnx.SparseTensorProto.verify(t.sparseInitializer[o]);if(i)return"sparseInitializer."+i}}if(t.docString!=null&&t.hasOwnProperty("docString")&&!A.isString(t.docString))return"docString: string expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var o=0;o<t.input.length;++o){var i=$.onnx.ValueInfoProto.verify(t.input[o]);if(i)return"input."+i}}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(var o=0;o<t.output.length;++o){var i=$.onnx.ValueInfoProto.verify(t.output[o]);if(i)return"output."+i}}if(t.valueInfo!=null&&t.hasOwnProperty("valueInfo")){if(!Array.isArray(t.valueInfo))return"valueInfo: array expected";for(var o=0;o<t.valueInfo.length;++o){var i=$.onnx.ValueInfoProto.verify(t.valueInfo[o]);if(i)return"valueInfo."+i}}if(t.quantizationAnnotation!=null&&t.hasOwnProperty("quantizationAnnotation")){if(!Array.isArray(t.quantizationAnnotation))return"quantizationAnnotation: array expected";for(var o=0;o<t.quantizationAnnotation.length;++o){var i=$.onnx.TensorAnnotation.verify(t.quantizationAnnotation[o]);if(i)return"quantizationAnnotation."+i}}return null},e.fromObject=function(t){if(t instanceof $.onnx.GraphProto)return t;var o=new $.onnx.GraphProto;if(t.node){if(!Array.isArray(t.node))throw TypeError(".onnx.GraphProto.node: array expected");o.node=[];for(var i=0;i<t.node.length;++i){if(typeof t.node[i]!="object")throw TypeError(".onnx.GraphProto.node: object expected");o.node[i]=$.onnx.NodeProto.fromObject(t.node[i])}}if(t.name!=null&&(o.name=String(t.name)),t.initializer){if(!Array.isArray(t.initializer))throw TypeError(".onnx.GraphProto.initializer: array expected");o.initializer=[];for(var i=0;i<t.initializer.length;++i){if(typeof t.initializer[i]!="object")throw TypeError(".onnx.GraphProto.initializer: object expected");o.initializer[i]=$.onnx.TensorProto.fromObject(t.initializer[i])}}if(t.sparseInitializer){if(!Array.isArray(t.sparseInitializer))throw TypeError(".onnx.GraphProto.sparseInitializer: array expected");o.sparseInitializer=[];for(var i=0;i<t.sparseInitializer.length;++i){if(typeof t.sparseInitializer[i]!="object")throw TypeError(".onnx.GraphProto.sparseInitializer: object expected");o.sparseInitializer[i]=$.onnx.SparseTensorProto.fromObject(t.sparseInitializer[i])}}if(t.docString!=null&&(o.docString=String(t.docString)),t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.GraphProto.input: array expected");o.input=[];for(var i=0;i<t.input.length;++i){if(typeof t.input[i]!="object")throw TypeError(".onnx.GraphProto.input: object expected");o.input[i]=$.onnx.ValueInfoProto.fromObject(t.input[i])}}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.GraphProto.output: array expected");o.output=[];for(var i=0;i<t.output.length;++i){if(typeof t.output[i]!="object")throw TypeError(".onnx.GraphProto.output: object expected");o.output[i]=$.onnx.ValueInfoProto.fromObject(t.output[i])}}if(t.valueInfo){if(!Array.isArray(t.valueInfo))throw TypeError(".onnx.GraphProto.valueInfo: array expected");o.valueInfo=[];for(var i=0;i<t.valueInfo.length;++i){if(typeof t.valueInfo[i]!="object")throw TypeError(".onnx.GraphProto.valueInfo: object expected");o.valueInfo[i]=$.onnx.ValueInfoProto.fromObject(t.valueInfo[i])}}if(t.quantizationAnnotation){if(!Array.isArray(t.quantizationAnnotation))throw TypeError(".onnx.GraphProto.quantizationAnnotation: array expected");o.quantizationAnnotation=[];for(var i=0;i<t.quantizationAnnotation.length;++i){if(typeof t.quantizationAnnotation[i]!="object")throw TypeError(".onnx.GraphProto.quantizationAnnotation: object expected");o.quantizationAnnotation[i]=$.onnx.TensorAnnotation.fromObject(t.quantizationAnnotation[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.node=[],i.initializer=[],i.input=[],i.output=[],i.valueInfo=[],i.quantizationAnnotation=[],i.sparseInitializer=[]),o.defaults&&(i.name="",i.docString=""),t.node&&t.node.length){i.node=[];for(var s=0;s<t.node.length;++s)i.node[s]=$.onnx.NodeProto.toObject(t.node[s],o)}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.initializer&&t.initializer.length){i.initializer=[];for(var s=0;s<t.initializer.length;++s)i.initializer[s]=$.onnx.TensorProto.toObject(t.initializer[s],o)}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.input&&t.input.length){i.input=[];for(var s=0;s<t.input.length;++s)i.input[s]=$.onnx.ValueInfoProto.toObject(t.input[s],o)}if(t.output&&t.output.length){i.output=[];for(var s=0;s<t.output.length;++s)i.output[s]=$.onnx.ValueInfoProto.toObject(t.output[s],o)}if(t.valueInfo&&t.valueInfo.length){i.valueInfo=[];for(var s=0;s<t.valueInfo.length;++s)i.valueInfo[s]=$.onnx.ValueInfoProto.toObject(t.valueInfo[s],o)}if(t.quantizationAnnotation&&t.quantizationAnnotation.length){i.quantizationAnnotation=[];for(var s=0;s<t.quantizationAnnotation.length;++s)i.quantizationAnnotation[s]=$.onnx.TensorAnnotation.toObject(t.quantizationAnnotation[s],o)}if(t.sparseInitializer&&t.sparseInitializer.length){i.sparseInitializer=[];for(var s=0;s<t.sparseInitializer.length;++s)i.sparseInitializer[s]=$.onnx.SparseTensorProto.toObject(t.sparseInitializer[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.GraphProto"},e}(),r.TensorProto=function(){function e(n){if(this.dims=[],this.floatData=[],this.int32Data=[],this.stringData=[],this.int64Data=[],this.externalData=[],this.doubleData=[],this.uint64Data=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.dims=A.emptyArray,e.prototype.dataType=0,e.prototype.segment=null,e.prototype.floatData=A.emptyArray,e.prototype.int32Data=A.emptyArray,e.prototype.stringData=A.emptyArray,e.prototype.int64Data=A.emptyArray,e.prototype.name="",e.prototype.docString="",e.prototype.rawData=A.newBuffer([]),e.prototype.externalData=A.emptyArray,e.prototype.dataLocation=0,e.prototype.doubleData=A.emptyArray,e.prototype.uint64Data=A.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=ct.create()),t.dims!=null&&t.dims.length){o.uint32(10).fork();for(var i=0;i<t.dims.length;++i)o.int64(t.dims[i]);o.ldelim()}if(t.dataType!=null&&Object.hasOwnProperty.call(t,"dataType")&&o.uint32(16).int32(t.dataType),t.segment!=null&&Object.hasOwnProperty.call(t,"segment")&&$.onnx.TensorProto.Segment.encode(t.segment,o.uint32(26).fork()).ldelim(),t.floatData!=null&&t.floatData.length){o.uint32(34).fork();for(var i=0;i<t.floatData.length;++i)o.float(t.floatData[i]);o.ldelim()}if(t.int32Data!=null&&t.int32Data.length){o.uint32(42).fork();for(var i=0;i<t.int32Data.length;++i)o.int32(t.int32Data[i]);o.ldelim()}if(t.stringData!=null&&t.stringData.length)for(var i=0;i<t.stringData.length;++i)o.uint32(50).bytes(t.stringData[i]);if(t.int64Data!=null&&t.int64Data.length){o.uint32(58).fork();for(var i=0;i<t.int64Data.length;++i)o.int64(t.int64Data[i]);o.ldelim()}if(t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(66).string(t.name),t.rawData!=null&&Object.hasOwnProperty.call(t,"rawData")&&o.uint32(74).bytes(t.rawData),t.doubleData!=null&&t.doubleData.length){o.uint32(82).fork();for(var i=0;i<t.doubleData.length;++i)o.double(t.doubleData[i]);o.ldelim()}if(t.uint64Data!=null&&t.uint64Data.length){o.uint32(90).fork();for(var i=0;i<t.uint64Data.length;++i)o.uint64(t.uint64Data[i]);o.ldelim()}if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(98).string(t.docString),t.externalData!=null&&t.externalData.length)for(var i=0;i<t.externalData.length;++i)$.onnx.StringStringEntryProto.encode(t.externalData[i],o.uint32(106).fork()).ldelim();return t.dataLocation!=null&&Object.hasOwnProperty.call(t,"dataLocation")&&o.uint32(112).int32(t.dataLocation),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Z||(t=Z.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new $.onnx.TensorProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{if(s.dims&&s.dims.length||(s.dims=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.dims.push(t.int64());else s.dims.push(t.int64());break}case 2:{s.dataType=t.int32();break}case 3:{s.segment=$.onnx.TensorProto.Segment.decode(t,t.uint32());break}case 4:{if(s.floatData&&s.floatData.length||(s.floatData=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.floatData.push(t.float());else s.floatData.push(t.float());break}case 5:{if(s.int32Data&&s.int32Data.length||(s.int32Data=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.int32Data.push(t.int32());else s.int32Data.push(t.int32());break}case 6:{s.stringData&&s.stringData.length||(s.stringData=[]),s.stringData.push(t.bytes());break}case 7:{if(s.int64Data&&s.int64Data.length||(s.int64Data=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.int64Data.push(t.int64());else s.int64Data.push(t.int64());break}case 8:{s.name=t.string();break}case 12:{s.docString=t.string();break}case 9:{s.rawData=t.bytes();break}case 13:{s.externalData&&s.externalData.length||(s.externalData=[]),s.externalData.push($.onnx.StringStringEntryProto.decode(t,t.uint32()));break}case 14:{s.dataLocation=t.int32();break}case 10:{if(s.doubleData&&s.doubleData.length||(s.doubleData=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.doubleData.push(t.double());else s.doubleData.push(t.double());break}case 11:{if(s.uint64Data&&s.uint64Data.length||(s.uint64Data=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.uint64Data.push(t.uint64());else s.uint64Data.push(t.uint64());break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof Z||(t=new Z(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.dims!=null&&t.hasOwnProperty("dims")){if(!Array.isArray(t.dims))return"dims: array expected";for(var o=0;o<t.dims.length;++o)if(!A.isInteger(t.dims[o])&&!(t.dims[o]&&A.isInteger(t.dims[o].low)&&A.isInteger(t.dims[o].high)))return"dims: integer|Long[] expected"}if(t.dataType!=null&&t.hasOwnProperty("dataType")&&!A.isInteger(t.dataType))return"dataType: integer expected";if(t.segment!=null&&t.hasOwnProperty("segment")){var i=$.onnx.TensorProto.Segment.verify(t.segment);if(i)return"segment."+i}if(t.floatData!=null&&t.hasOwnProperty("floatData")){if(!Array.isArray(t.floatData))return"floatData: array expected";for(var o=0;o<t.floatData.length;++o)if(typeof t.floatData[o]!="number")return"floatData: number[] expected"}if(t.int32Data!=null&&t.hasOwnProperty("int32Data")){if(!Array.isArray(t.int32Data))return"int32Data: array expected";for(var o=0;o<t.int32Data.length;++o)if(!A.isInteger(t.int32Data[o]))return"int32Data: integer[] expected"}if(t.stringData!=null&&t.hasOwnProperty("stringData")){if(!Array.isArray(t.stringData))return"stringData: array expected";for(var o=0;o<t.stringData.length;++o)if(!(t.stringData[o]&&typeof t.stringData[o].length=="number"||A.isString(t.stringData[o])))return"stringData: buffer[] expected"}if(t.int64Data!=null&&t.hasOwnProperty("int64Data")){if(!Array.isArray(t.int64Data))return"int64Data: array expected";for(var o=0;o<t.int64Data.length;++o)if(!A.isInteger(t.int64Data[o])&&!(t.int64Data[o]&&A.isInteger(t.int64Data[o].low)&&A.isInteger(t.int64Data[o].high)))return"int64Data: integer|Long[] expected"}if(t.name!=null&&t.hasOwnProperty("name")&&!A.isString(t.name))return"name: string expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!A.isString(t.docString))return"docString: string expected";if(t.rawData!=null&&t.hasOwnProperty("rawData")&&!(t.rawData&&typeof t.rawData.length=="number"||A.isString(t.rawData)))return"rawData: buffer expected";if(t.externalData!=null&&t.hasOwnProperty("externalData")){if(!Array.isArray(t.externalData))return"externalData: array expected";for(var o=0;o<t.externalData.length;++o){var i=$.onnx.StringStringEntryProto.verify(t.externalData[o]);if(i)return"externalData."+i}}if(t.dataLocation!=null&&t.hasOwnProperty("dataLocation"))switch(t.dataLocation){default:return"dataLocation: enum value expected";case 0:case 1:break}if(t.doubleData!=null&&t.hasOwnProperty("doubleData")){if(!Array.isArray(t.doubleData))return"doubleData: array expected";for(var o=0;o<t.doubleData.length;++o)if(typeof t.doubleData[o]!="number")return"doubleData: number[] expected"}if(t.uint64Data!=null&&t.hasOwnProperty("uint64Data")){if(!Array.isArray(t.uint64Data))return"uint64Data: array expected";for(var o=0;o<t.uint64Data.length;++o)if(!A.isInteger(t.uint64Data[o])&&!(t.uint64Data[o]&&A.isInteger(t.uint64Data[o].low)&&A.isInteger(t.uint64Data[o].high)))return"uint64Data: integer|Long[] expected"}return null},e.fromObject=function(t){if(t instanceof $.onnx.TensorProto)return t;var o=new $.onnx.TensorProto;if(t.dims){if(!Array.isArray(t.dims))throw TypeError(".onnx.TensorProto.dims: array expected");o.dims=[];for(var i=0;i<t.dims.length;++i)A.Long?(o.dims[i]=A.Long.fromValue(t.dims[i])).unsigned=!1:typeof t.dims[i]=="string"?o.dims[i]=parseInt(t.dims[i],10):typeof t.dims[i]=="number"?o.dims[i]=t.dims[i]:typeof t.dims[i]=="object"&&(o.dims[i]=new A.LongBits(t.dims[i].low>>>0,t.dims[i].high>>>0).toNumber())}if(t.dataType!=null&&(o.dataType=t.dataType|0),t.segment!=null){if(typeof t.segment!="object")throw TypeError(".onnx.TensorProto.segment: object expected");o.segment=$.onnx.TensorProto.Segment.fromObject(t.segment)}if(t.floatData){if(!Array.isArray(t.floatData))throw TypeError(".onnx.TensorProto.floatData: array expected");o.floatData=[];for(var i=0;i<t.floatData.length;++i)o.floatData[i]=Number(t.floatData[i])}if(t.int32Data){if(!Array.isArray(t.int32Data))throw TypeError(".onnx.TensorProto.int32Data: array expected");o.int32Data=[];for(var i=0;i<t.int32Data.length;++i)o.int32Data[i]=t.int32Data[i]|0}if(t.stringData){if(!Array.isArray(t.stringData))throw TypeError(".onnx.TensorProto.stringData: array expected");o.stringData=[];for(var i=0;i<t.stringData.length;++i)typeof t.stringData[i]=="string"?A.base64.decode(t.stringData[i],o.stringData[i]=A.newBuffer(A.base64.length(t.stringData[i])),0):t.stringData[i].length>=0&&(o.stringData[i]=t.stringData[i])}if(t.int64Data){if(!Array.isArray(t.int64Data))throw TypeError(".onnx.TensorProto.int64Data: array expected");o.int64Data=[];for(var i=0;i<t.int64Data.length;++i)A.Long?(o.int64Data[i]=A.Long.fromValue(t.int64Data[i])).unsigned=!1:typeof t.int64Data[i]=="string"?o.int64Data[i]=parseInt(t.int64Data[i],10):typeof t.int64Data[i]=="number"?o.int64Data[i]=t.int64Data[i]:typeof t.int64Data[i]=="object"&&(o.int64Data[i]=new A.LongBits(t.int64Data[i].low>>>0,t.int64Data[i].high>>>0).toNumber())}if(t.name!=null&&(o.name=String(t.name)),t.docString!=null&&(o.docString=String(t.docString)),t.rawData!=null&&(typeof t.rawData=="string"?A.base64.decode(t.rawData,o.rawData=A.newBuffer(A.base64.length(t.rawData)),0):t.rawData.length>=0&&(o.rawData=t.rawData)),t.externalData){if(!Array.isArray(t.externalData))throw TypeError(".onnx.TensorProto.externalData: array expected");o.externalData=[];for(var i=0;i<t.externalData.length;++i){if(typeof t.externalData[i]!="object")throw TypeError(".onnx.TensorProto.externalData: object expected");o.externalData[i]=$.onnx.StringStringEntryProto.fromObject(t.externalData[i])}}switch(t.dataLocation){default:if(typeof t.dataLocation=="number"){o.dataLocation=t.dataLocation;break}break;case"DEFAULT":case 0:o.dataLocation=0;break;case"EXTERNAL":case 1:o.dataLocation=1;break}if(t.doubleData){if(!Array.isArray(t.doubleData))throw TypeError(".onnx.TensorProto.doubleData: array expected");o.doubleData=[];for(var i=0;i<t.doubleData.length;++i)o.doubleData[i]=Number(t.doubleData[i])}if(t.uint64Data){if(!Array.isArray(t.uint64Data))throw TypeError(".onnx.TensorProto.uint64Data: array expected");o.uint64Data=[];for(var i=0;i<t.uint64Data.length;++i)A.Long?(o.uint64Data[i]=A.Long.fromValue(t.uint64Data[i])).unsigned=!0:typeof t.uint64Data[i]=="string"?o.uint64Data[i]=parseInt(t.uint64Data[i],10):typeof t.uint64Data[i]=="number"?o.uint64Data[i]=t.uint64Data[i]:typeof t.uint64Data[i]=="object"&&(o.uint64Data[i]=new A.LongBits(t.uint64Data[i].low>>>0,t.uint64Data[i].high>>>0).toNumber(!0))}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.dims=[],i.floatData=[],i.int32Data=[],i.stringData=[],i.int64Data=[],i.doubleData=[],i.uint64Data=[],i.externalData=[]),o.defaults&&(i.dataType=0,i.segment=null,i.name="",o.bytes===String?i.rawData="":(i.rawData=[],o.bytes!==Array&&(i.rawData=A.newBuffer(i.rawData))),i.docString="",i.dataLocation=o.enums===String?"DEFAULT":0),t.dims&&t.dims.length){i.dims=[];for(var s=0;s<t.dims.length;++s)typeof t.dims[s]=="number"?i.dims[s]=o.longs===String?String(t.dims[s]):t.dims[s]:i.dims[s]=o.longs===String?A.Long.prototype.toString.call(t.dims[s]):o.longs===Number?new A.LongBits(t.dims[s].low>>>0,t.dims[s].high>>>0).toNumber():t.dims[s]}if(t.dataType!=null&&t.hasOwnProperty("dataType")&&(i.dataType=t.dataType),t.segment!=null&&t.hasOwnProperty("segment")&&(i.segment=$.onnx.TensorProto.Segment.toObject(t.segment,o)),t.floatData&&t.floatData.length){i.floatData=[];for(var s=0;s<t.floatData.length;++s)i.floatData[s]=o.json&&!isFinite(t.floatData[s])?String(t.floatData[s]):t.floatData[s]}if(t.int32Data&&t.int32Data.length){i.int32Data=[];for(var s=0;s<t.int32Data.length;++s)i.int32Data[s]=t.int32Data[s]}if(t.stringData&&t.stringData.length){i.stringData=[];for(var s=0;s<t.stringData.length;++s)i.stringData[s]=o.bytes===String?A.base64.encode(t.stringData[s],0,t.stringData[s].length):o.bytes===Array?Array.prototype.slice.call(t.stringData[s]):t.stringData[s]}if(t.int64Data&&t.int64Data.length){i.int64Data=[];for(var s=0;s<t.int64Data.length;++s)typeof t.int64Data[s]=="number"?i.int64Data[s]=o.longs===String?String(t.int64Data[s]):t.int64Data[s]:i.int64Data[s]=o.longs===String?A.Long.prototype.toString.call(t.int64Data[s]):o.longs===Number?new A.LongBits(t.int64Data[s].low>>>0,t.int64Data[s].high>>>0).toNumber():t.int64Data[s]}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.rawData!=null&&t.hasOwnProperty("rawData")&&(i.rawData=o.bytes===String?A.base64.encode(t.rawData,0,t.rawData.length):o.bytes===Array?Array.prototype.slice.call(t.rawData):t.rawData),t.doubleData&&t.doubleData.length){i.doubleData=[];for(var s=0;s<t.doubleData.length;++s)i.doubleData[s]=o.json&&!isFinite(t.doubleData[s])?String(t.doubleData[s]):t.doubleData[s]}if(t.uint64Data&&t.uint64Data.length){i.uint64Data=[];for(var s=0;s<t.uint64Data.length;++s)typeof t.uint64Data[s]=="number"?i.uint64Data[s]=o.longs===String?String(t.uint64Data[s]):t.uint64Data[s]:i.uint64Data[s]=o.longs===String?A.Long.prototype.toString.call(t.uint64Data[s]):o.longs===Number?new A.LongBits(t.uint64Data[s].low>>>0,t.uint64Data[s].high>>>0).toNumber(!0):t.uint64Data[s]}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.externalData&&t.externalData.length){i.externalData=[];for(var s=0;s<t.externalData.length;++s)i.externalData[s]=$.onnx.StringStringEntryProto.toObject(t.externalData[s],o)}return t.dataLocation!=null&&t.hasOwnProperty("dataLocation")&&(i.dataLocation=o.enums===String?$.onnx.TensorProto.DataLocation[t.dataLocation]===void 0?t.dataLocation:$.onnx.TensorProto.DataLocation[t.dataLocation]:t.dataLocation),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TensorProto"},e.DataType=function(){var n={},t=Object.create(n);return t[n[0]="UNDEFINED"]=0,t[n[1]="FLOAT"]=1,t[n[2]="UINT8"]=2,t[n[3]="INT8"]=3,t[n[4]="UINT16"]=4,t[n[5]="INT16"]=5,t[n[6]="INT32"]=6,t[n[7]="INT64"]=7,t[n[8]="STRING"]=8,t[n[9]="BOOL"]=9,t[n[10]="FLOAT16"]=10,t[n[11]="DOUBLE"]=11,t[n[12]="UINT32"]=12,t[n[13]="UINT64"]=13,t[n[14]="COMPLEX64"]=14,t[n[15]="COMPLEX128"]=15,t[n[16]="BFLOAT16"]=16,t[n[17]="FLOAT8E4M3FN"]=17,t[n[18]="FLOAT8E4M3FNUZ"]=18,t[n[19]="FLOAT8E5M2"]=19,t[n[20]="FLOAT8E5M2FNUZ"]=20,t}(),e.Segment=function(){function n(t){if(t)for(var o=Object.keys(t),i=0;i<o.length;++i)t[o[i]]!=null&&(this[o[i]]=t[o[i]])}return n.prototype.begin=A.Long?A.Long.fromBits(0,0,!1):0,n.prototype.end=A.Long?A.Long.fromBits(0,0,!1):0,n.create=function(o){return new n(o)},n.encode=function(o,i){return i||(i=ct.create()),o.begin!=null&&Object.hasOwnProperty.call(o,"begin")&&i.uint32(8).int64(o.begin),o.end!=null&&Object.hasOwnProperty.call(o,"end")&&i.uint32(16).int64(o.end),i},n.encodeDelimited=function(o,i){return this.encode(o,i).ldelim()},n.decode=function(o,i){o instanceof Z||(o=Z.create(o));for(var s=i===void 0?o.len:o.pos+i,a=new $.onnx.TensorProto.Segment;o.pos<s;){var u=o.uint32();switch(u>>>3){case 1:{a.begin=o.int64();break}case 2:{a.end=o.int64();break}default:o.skipType(u&7);break}}return a},n.decodeDelimited=function(o){return o instanceof Z||(o=new Z(o)),this.decode(o,o.uint32())},n.verify=function(o){return typeof o!="object"||o===null?"object expected":o.begin!=null&&o.hasOwnProperty("begin")&&!A.isInteger(o.begin)&&!(o.begin&&A.isInteger(o.begin.low)&&A.isInteger(o.begin.high))?"begin: integer|Long expected":o.end!=null&&o.hasOwnProperty("end")&&!A.isInteger(o.end)&&!(o.end&&A.isInteger(o.end.low)&&A.isInteger(o.end.high))?"end: integer|Long expected":null},n.fromObject=function(o){if(o instanceof $.onnx.TensorProto.Segment)return o;var i=new $.onnx.TensorProto.Segment;return o.begin!=null&&(A.Long?(i.begin=A.Long.fromValue(o.begin)).unsigned=!1:typeof o.begin=="string"?i.begin=parseInt(o.begin,10):typeof o.begin=="number"?i.begin=o.begin:typeof o.begin=="object"&&(i.begin=new A.LongBits(o.begin.low>>>0,o.begin.high>>>0).toNumber())),o.end!=null&&(A.Long?(i.end=A.Long.fromValue(o.end)).unsigned=!1:typeof o.end=="string"?i.end=parseInt(o.end,10):typeof o.end=="number"?i.end=o.end:typeof o.end=="object"&&(i.end=new A.LongBits(o.end.low>>>0,o.end.high>>>0).toNumber())),i},n.toObject=function(o,i){i||(i={});var s={};if(i.defaults){if(A.Long){var a=new A.Long(0,0,!1);s.begin=i.longs===String?a.toString():i.longs===Number?a.toNumber():a}else s.begin=i.longs===String?"0":0;if(A.Long){var a=new A.Long(0,0,!1);s.end=i.longs===String?a.toString():i.longs===Number?a.toNumber():a}else s.end=i.longs===String?"0":0}return o.begin!=null&&o.hasOwnProperty("begin")&&(typeof o.begin=="number"?s.begin=i.longs===String?String(o.begin):o.begin:s.begin=i.longs===String?A.Long.prototype.toString.call(o.begin):i.longs===Number?new A.LongBits(o.begin.low>>>0,o.begin.high>>>0).toNumber():o.begin),o.end!=null&&o.hasOwnProperty("end")&&(typeof o.end=="number"?s.end=i.longs===String?String(o.end):o.end:s.end=i.longs===String?A.Long.prototype.toString.call(o.end):i.longs===Number?new A.LongBits(o.end.low>>>0,o.end.high>>>0).toNumber():o.end),s},n.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},n.getTypeUrl=function(o){return o===void 0&&(o="type.googleapis.com"),o+"/onnx.TensorProto.Segment"},n}(),e.DataLocation=function(){var n={},t=Object.create(n);return t[n[0]="DEFAULT"]=0,t[n[1]="EXTERNAL"]=1,t}(),e}(),r.SparseTensorProto=function(){function e(n){if(this.dims=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.values=null,e.prototype.indices=null,e.prototype.dims=A.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=ct.create()),t.values!=null&&Object.hasOwnProperty.call(t,"values")&&$.onnx.TensorProto.encode(t.values,o.uint32(10).fork()).ldelim(),t.indices!=null&&Object.hasOwnProperty.call(t,"indices")&&$.onnx.TensorProto.encode(t.indices,o.uint32(18).fork()).ldelim(),t.dims!=null&&t.dims.length){o.uint32(26).fork();for(var i=0;i<t.dims.length;++i)o.int64(t.dims[i]);o.ldelim()}return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Z||(t=Z.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new $.onnx.SparseTensorProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.values=$.onnx.TensorProto.decode(t,t.uint32());break}case 2:{s.indices=$.onnx.TensorProto.decode(t,t.uint32());break}case 3:{if(s.dims&&s.dims.length||(s.dims=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.dims.push(t.int64());else s.dims.push(t.int64());break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof Z||(t=new Z(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.values!=null&&t.hasOwnProperty("values")){var o=$.onnx.TensorProto.verify(t.values);if(o)return"values."+o}if(t.indices!=null&&t.hasOwnProperty("indices")){var o=$.onnx.TensorProto.verify(t.indices);if(o)return"indices."+o}if(t.dims!=null&&t.hasOwnProperty("dims")){if(!Array.isArray(t.dims))return"dims: array expected";for(var i=0;i<t.dims.length;++i)if(!A.isInteger(t.dims[i])&&!(t.dims[i]&&A.isInteger(t.dims[i].low)&&A.isInteger(t.dims[i].high)))return"dims: integer|Long[] expected"}return null},e.fromObject=function(t){if(t instanceof $.onnx.SparseTensorProto)return t;var o=new $.onnx.SparseTensorProto;if(t.values!=null){if(typeof t.values!="object")throw TypeError(".onnx.SparseTensorProto.values: object expected");o.values=$.onnx.TensorProto.fromObject(t.values)}if(t.indices!=null){if(typeof t.indices!="object")throw TypeError(".onnx.SparseTensorProto.indices: object expected");o.indices=$.onnx.TensorProto.fromObject(t.indices)}if(t.dims){if(!Array.isArray(t.dims))throw TypeError(".onnx.SparseTensorProto.dims: array expected");o.dims=[];for(var i=0;i<t.dims.length;++i)A.Long?(o.dims[i]=A.Long.fromValue(t.dims[i])).unsigned=!1:typeof t.dims[i]=="string"?o.dims[i]=parseInt(t.dims[i],10):typeof t.dims[i]=="number"?o.dims[i]=t.dims[i]:typeof t.dims[i]=="object"&&(o.dims[i]=new A.LongBits(t.dims[i].low>>>0,t.dims[i].high>>>0).toNumber())}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.dims=[]),o.defaults&&(i.values=null,i.indices=null),t.values!=null&&t.hasOwnProperty("values")&&(i.values=$.onnx.TensorProto.toObject(t.values,o)),t.indices!=null&&t.hasOwnProperty("indices")&&(i.indices=$.onnx.TensorProto.toObject(t.indices,o)),t.dims&&t.dims.length){i.dims=[];for(var s=0;s<t.dims.length;++s)typeof t.dims[s]=="number"?i.dims[s]=o.longs===String?String(t.dims[s]):t.dims[s]:i.dims[s]=o.longs===String?A.Long.prototype.toString.call(t.dims[s]):o.longs===Number?new A.LongBits(t.dims[s].low>>>0,t.dims[s].high>>>0).toNumber():t.dims[s]}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.SparseTensorProto"},e}(),r.TensorShapeProto=function(){function e(n){if(this.dim=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.dim=A.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=ct.create()),t.dim!=null&&t.dim.length)for(var i=0;i<t.dim.length;++i)$.onnx.TensorShapeProto.Dimension.encode(t.dim[i],o.uint32(10).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Z||(t=Z.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new $.onnx.TensorShapeProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.dim&&s.dim.length||(s.dim=[]),s.dim.push($.onnx.TensorShapeProto.Dimension.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof Z||(t=new Z(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.dim!=null&&t.hasOwnProperty("dim")){if(!Array.isArray(t.dim))return"dim: array expected";for(var o=0;o<t.dim.length;++o){var i=$.onnx.TensorShapeProto.Dimension.verify(t.dim[o]);if(i)return"dim."+i}}return null},e.fromObject=function(t){if(t instanceof $.onnx.TensorShapeProto)return t;var o=new $.onnx.TensorShapeProto;if(t.dim){if(!Array.isArray(t.dim))throw TypeError(".onnx.TensorShapeProto.dim: array expected");o.dim=[];for(var i=0;i<t.dim.length;++i){if(typeof t.dim[i]!="object")throw TypeError(".onnx.TensorShapeProto.dim: object expected");o.dim[i]=$.onnx.TensorShapeProto.Dimension.fromObject(t.dim[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.dim=[]),t.dim&&t.dim.length){i.dim=[];for(var s=0;s<t.dim.length;++s)i.dim[s]=$.onnx.TensorShapeProto.Dimension.toObject(t.dim[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TensorShapeProto"},e.Dimension=function(){function n(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}n.prototype.dimValue=null,n.prototype.dimParam=null,n.prototype.denotation="";var t;return Object.defineProperty(n.prototype,"value",{get:A.oneOfGetter(t=["dimValue","dimParam"]),set:A.oneOfSetter(t)}),n.create=function(i){return new n(i)},n.encode=function(i,s){return s||(s=ct.create()),i.dimValue!=null&&Object.hasOwnProperty.call(i,"dimValue")&&s.uint32(8).int64(i.dimValue),i.dimParam!=null&&Object.hasOwnProperty.call(i,"dimParam")&&s.uint32(18).string(i.dimParam),i.denotation!=null&&Object.hasOwnProperty.call(i,"denotation")&&s.uint32(26).string(i.denotation),s},n.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},n.decode=function(i,s){i instanceof Z||(i=Z.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new $.onnx.TensorShapeProto.Dimension;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.dimValue=i.int64();break}case 2:{u.dimParam=i.string();break}case 3:{u.denotation=i.string();break}default:i.skipType(l&7);break}}return u},n.decodeDelimited=function(i){return i instanceof Z||(i=new Z(i)),this.decode(i,i.uint32())},n.verify=function(i){if(typeof i!="object"||i===null)return"object expected";var s={};if(i.dimValue!=null&&i.hasOwnProperty("dimValue")&&(s.value=1,!A.isInteger(i.dimValue)&&!(i.dimValue&&A.isInteger(i.dimValue.low)&&A.isInteger(i.dimValue.high))))return"dimValue: integer|Long expected";if(i.dimParam!=null&&i.hasOwnProperty("dimParam")){if(s.value===1)return"value: multiple values";if(s.value=1,!A.isString(i.dimParam))return"dimParam: string expected"}return i.denotation!=null&&i.hasOwnProperty("denotation")&&!A.isString(i.denotation)?"denotation: string expected":null},n.fromObject=function(i){if(i instanceof $.onnx.TensorShapeProto.Dimension)return i;var s=new $.onnx.TensorShapeProto.Dimension;return i.dimValue!=null&&(A.Long?(s.dimValue=A.Long.fromValue(i.dimValue)).unsigned=!1:typeof i.dimValue=="string"?s.dimValue=parseInt(i.dimValue,10):typeof i.dimValue=="number"?s.dimValue=i.dimValue:typeof i.dimValue=="object"&&(s.dimValue=new A.LongBits(i.dimValue.low>>>0,i.dimValue.high>>>0).toNumber())),i.dimParam!=null&&(s.dimParam=String(i.dimParam)),i.denotation!=null&&(s.denotation=String(i.denotation)),s},n.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.denotation=""),i.dimValue!=null&&i.hasOwnProperty("dimValue")&&(typeof i.dimValue=="number"?a.dimValue=s.longs===String?String(i.dimValue):i.dimValue:a.dimValue=s.longs===String?A.Long.prototype.toString.call(i.dimValue):s.longs===Number?new A.LongBits(i.dimValue.low>>>0,i.dimValue.high>>>0).toNumber():i.dimValue,s.oneofs&&(a.value="dimValue")),i.dimParam!=null&&i.hasOwnProperty("dimParam")&&(a.dimParam=i.dimParam,s.oneofs&&(a.value="dimParam")),i.denotation!=null&&i.hasOwnProperty("denotation")&&(a.denotation=i.denotation),a},n.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},n.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TensorShapeProto.Dimension"},n}(),e}(),r.TypeProto=function(){function e(t){if(t)for(var o=Object.keys(t),i=0;i<o.length;++i)t[o[i]]!=null&&(this[o[i]]=t[o[i]])}e.prototype.tensorType=null,e.prototype.sequenceType=null,e.prototype.mapType=null,e.prototype.optionalType=null,e.prototype.sparseTensorType=null,e.prototype.denotation="";var n;return Object.defineProperty(e.prototype,"value",{get:A.oneOfGetter(n=["tensorType","sequenceType","mapType","optionalType","sparseTensorType"]),set:A.oneOfSetter(n)}),e.create=function(o){return new e(o)},e.encode=function(o,i){return i||(i=ct.create()),o.tensorType!=null&&Object.hasOwnProperty.call(o,"tensorType")&&$.onnx.TypeProto.Tensor.encode(o.tensorType,i.uint32(10).fork()).ldelim(),o.sequenceType!=null&&Object.hasOwnProperty.call(o,"sequenceType")&&$.onnx.TypeProto.Sequence.encode(o.sequenceType,i.uint32(34).fork()).ldelim(),o.mapType!=null&&Object.hasOwnProperty.call(o,"mapType")&&$.onnx.TypeProto.Map.encode(o.mapType,i.uint32(42).fork()).ldelim(),o.denotation!=null&&Object.hasOwnProperty.call(o,"denotation")&&i.uint32(50).string(o.denotation),o.sparseTensorType!=null&&Object.hasOwnProperty.call(o,"sparseTensorType")&&$.onnx.TypeProto.SparseTensor.encode(o.sparseTensorType,i.uint32(66).fork()).ldelim(),o.optionalType!=null&&Object.hasOwnProperty.call(o,"optionalType")&&$.onnx.TypeProto.Optional.encode(o.optionalType,i.uint32(74).fork()).ldelim(),i},e.encodeDelimited=function(o,i){return this.encode(o,i).ldelim()},e.decode=function(o,i){o instanceof Z||(o=Z.create(o));for(var s=i===void 0?o.len:o.pos+i,a=new $.onnx.TypeProto;o.pos<s;){var u=o.uint32();switch(u>>>3){case 1:{a.tensorType=$.onnx.TypeProto.Tensor.decode(o,o.uint32());break}case 4:{a.sequenceType=$.onnx.TypeProto.Sequence.decode(o,o.uint32());break}case 5:{a.mapType=$.onnx.TypeProto.Map.decode(o,o.uint32());break}case 9:{a.optionalType=$.onnx.TypeProto.Optional.decode(o,o.uint32());break}case 8:{a.sparseTensorType=$.onnx.TypeProto.SparseTensor.decode(o,o.uint32());break}case 6:{a.denotation=o.string();break}default:o.skipType(u&7);break}}return a},e.decodeDelimited=function(o){return o instanceof Z||(o=new Z(o)),this.decode(o,o.uint32())},e.verify=function(o){if(typeof o!="object"||o===null)return"object expected";var i={};if(o.tensorType!=null&&o.hasOwnProperty("tensorType")){i.value=1;{var s=$.onnx.TypeProto.Tensor.verify(o.tensorType);if(s)return"tensorType."+s}}if(o.sequenceType!=null&&o.hasOwnProperty("sequenceType")){if(i.value===1)return"value: multiple values";i.value=1;{var s=$.onnx.TypeProto.Sequence.verify(o.sequenceType);if(s)return"sequenceType."+s}}if(o.mapType!=null&&o.hasOwnProperty("mapType")){if(i.value===1)return"value: multiple values";i.value=1;{var s=$.onnx.TypeProto.Map.verify(o.mapType);if(s)return"mapType."+s}}if(o.optionalType!=null&&o.hasOwnProperty("optionalType")){if(i.value===1)return"value: multiple values";i.value=1;{var s=$.onnx.TypeProto.Optional.verify(o.optionalType);if(s)return"optionalType."+s}}if(o.sparseTensorType!=null&&o.hasOwnProperty("sparseTensorType")){if(i.value===1)return"value: multiple values";i.value=1;{var s=$.onnx.TypeProto.SparseTensor.verify(o.sparseTensorType);if(s)return"sparseTensorType."+s}}return o.denotation!=null&&o.hasOwnProperty("denotation")&&!A.isString(o.denotation)?"denotation: string expected":null},e.fromObject=function(o){if(o instanceof $.onnx.TypeProto)return o;var i=new $.onnx.TypeProto;if(o.tensorType!=null){if(typeof o.tensorType!="object")throw TypeError(".onnx.TypeProto.tensorType: object expected");i.tensorType=$.onnx.TypeProto.Tensor.fromObject(o.tensorType)}if(o.sequenceType!=null){if(typeof o.sequenceType!="object")throw TypeError(".onnx.TypeProto.sequenceType: object expected");i.sequenceType=$.onnx.TypeProto.Sequence.fromObject(o.sequenceType)}if(o.mapType!=null){if(typeof o.mapType!="object")throw TypeError(".onnx.TypeProto.mapType: object expected");i.mapType=$.onnx.TypeProto.Map.fromObject(o.mapType)}if(o.optionalType!=null){if(typeof o.optionalType!="object")throw TypeError(".onnx.TypeProto.optionalType: object expected");i.optionalType=$.onnx.TypeProto.Optional.fromObject(o.optionalType)}if(o.sparseTensorType!=null){if(typeof o.sparseTensorType!="object")throw TypeError(".onnx.TypeProto.sparseTensorType: object expected");i.sparseTensorType=$.onnx.TypeProto.SparseTensor.fromObject(o.sparseTensorType)}return o.denotation!=null&&(i.denotation=String(o.denotation)),i},e.toObject=function(o,i){i||(i={});var s={};return i.defaults&&(s.denotation=""),o.tensorType!=null&&o.hasOwnProperty("tensorType")&&(s.tensorType=$.onnx.TypeProto.Tensor.toObject(o.tensorType,i),i.oneofs&&(s.value="tensorType")),o.sequenceType!=null&&o.hasOwnProperty("sequenceType")&&(s.sequenceType=$.onnx.TypeProto.Sequence.toObject(o.sequenceType,i),i.oneofs&&(s.value="sequenceType")),o.mapType!=null&&o.hasOwnProperty("mapType")&&(s.mapType=$.onnx.TypeProto.Map.toObject(o.mapType,i),i.oneofs&&(s.value="mapType")),o.denotation!=null&&o.hasOwnProperty("denotation")&&(s.denotation=o.denotation),o.sparseTensorType!=null&&o.hasOwnProperty("sparseTensorType")&&(s.sparseTensorType=$.onnx.TypeProto.SparseTensor.toObject(o.sparseTensorType,i),i.oneofs&&(s.value="sparseTensorType")),o.optionalType!=null&&o.hasOwnProperty("optionalType")&&(s.optionalType=$.onnx.TypeProto.Optional.toObject(o.optionalType,i),i.oneofs&&(s.value="optionalType")),s},e.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},e.getTypeUrl=function(o){return o===void 0&&(o="type.googleapis.com"),o+"/onnx.TypeProto"},e.Tensor=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.elemType=0,t.prototype.shape=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=ct.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&s.uint32(8).int32(i.elemType),i.shape!=null&&Object.hasOwnProperty.call(i,"shape")&&$.onnx.TensorShapeProto.encode(i.shape,s.uint32(18).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof Z||(i=Z.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new $.onnx.TypeProto.Tensor;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.elemType=i.int32();break}case 2:{u.shape=$.onnx.TensorShapeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof Z||(i=new Z(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")&&!A.isInteger(i.elemType))return"elemType: integer expected";if(i.shape!=null&&i.hasOwnProperty("shape")){var s=$.onnx.TensorShapeProto.verify(i.shape);if(s)return"shape."+s}return null},t.fromObject=function(i){if(i instanceof $.onnx.TypeProto.Tensor)return i;var s=new $.onnx.TypeProto.Tensor;if(i.elemType!=null&&(s.elemType=i.elemType|0),i.shape!=null){if(typeof i.shape!="object")throw TypeError(".onnx.TypeProto.Tensor.shape: object expected");s.shape=$.onnx.TensorShapeProto.fromObject(i.shape)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.elemType=0,a.shape=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=i.elemType),i.shape!=null&&i.hasOwnProperty("shape")&&(a.shape=$.onnx.TensorShapeProto.toObject(i.shape,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Tensor"},t}(),e.Sequence=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.elemType=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=ct.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&$.onnx.TypeProto.encode(i.elemType,s.uint32(10).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof Z||(i=Z.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new $.onnx.TypeProto.Sequence;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.elemType=$.onnx.TypeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof Z||(i=new Z(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")){var s=$.onnx.TypeProto.verify(i.elemType);if(s)return"elemType."+s}return null},t.fromObject=function(i){if(i instanceof $.onnx.TypeProto.Sequence)return i;var s=new $.onnx.TypeProto.Sequence;if(i.elemType!=null){if(typeof i.elemType!="object")throw TypeError(".onnx.TypeProto.Sequence.elemType: object expected");s.elemType=$.onnx.TypeProto.fromObject(i.elemType)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.elemType=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=$.onnx.TypeProto.toObject(i.elemType,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Sequence"},t}(),e.Map=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.keyType=0,t.prototype.valueType=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=ct.create()),i.keyType!=null&&Object.hasOwnProperty.call(i,"keyType")&&s.uint32(8).int32(i.keyType),i.valueType!=null&&Object.hasOwnProperty.call(i,"valueType")&&$.onnx.TypeProto.encode(i.valueType,s.uint32(18).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof Z||(i=Z.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new $.onnx.TypeProto.Map;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.keyType=i.int32();break}case 2:{u.valueType=$.onnx.TypeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof Z||(i=new Z(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.keyType!=null&&i.hasOwnProperty("keyType")&&!A.isInteger(i.keyType))return"keyType: integer expected";if(i.valueType!=null&&i.hasOwnProperty("valueType")){var s=$.onnx.TypeProto.verify(i.valueType);if(s)return"valueType."+s}return null},t.fromObject=function(i){if(i instanceof $.onnx.TypeProto.Map)return i;var s=new $.onnx.TypeProto.Map;if(i.keyType!=null&&(s.keyType=i.keyType|0),i.valueType!=null){if(typeof i.valueType!="object")throw TypeError(".onnx.TypeProto.Map.valueType: object expected");s.valueType=$.onnx.TypeProto.fromObject(i.valueType)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.keyType=0,a.valueType=null),i.keyType!=null&&i.hasOwnProperty("keyType")&&(a.keyType=i.keyType),i.valueType!=null&&i.hasOwnProperty("valueType")&&(a.valueType=$.onnx.TypeProto.toObject(i.valueType,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Map"},t}(),e.Optional=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.elemType=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=ct.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&$.onnx.TypeProto.encode(i.elemType,s.uint32(10).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof Z||(i=Z.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new $.onnx.TypeProto.Optional;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.elemType=$.onnx.TypeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof Z||(i=new Z(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")){var s=$.onnx.TypeProto.verify(i.elemType);if(s)return"elemType."+s}return null},t.fromObject=function(i){if(i instanceof $.onnx.TypeProto.Optional)return i;var s=new $.onnx.TypeProto.Optional;if(i.elemType!=null){if(typeof i.elemType!="object")throw TypeError(".onnx.TypeProto.Optional.elemType: object expected");s.elemType=$.onnx.TypeProto.fromObject(i.elemType)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.elemType=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=$.onnx.TypeProto.toObject(i.elemType,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Optional"},t}(),e.SparseTensor=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.elemType=0,t.prototype.shape=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=ct.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&s.uint32(8).int32(i.elemType),i.shape!=null&&Object.hasOwnProperty.call(i,"shape")&&$.onnx.TensorShapeProto.encode(i.shape,s.uint32(18).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof Z||(i=Z.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new $.onnx.TypeProto.SparseTensor;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.elemType=i.int32();break}case 2:{u.shape=$.onnx.TensorShapeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof Z||(i=new Z(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")&&!A.isInteger(i.elemType))return"elemType: integer expected";if(i.shape!=null&&i.hasOwnProperty("shape")){var s=$.onnx.TensorShapeProto.verify(i.shape);if(s)return"shape."+s}return null},t.fromObject=function(i){if(i instanceof $.onnx.TypeProto.SparseTensor)return i;var s=new $.onnx.TypeProto.SparseTensor;if(i.elemType!=null&&(s.elemType=i.elemType|0),i.shape!=null){if(typeof i.shape!="object")throw TypeError(".onnx.TypeProto.SparseTensor.shape: object expected");s.shape=$.onnx.TensorShapeProto.fromObject(i.shape)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.elemType=0,a.shape=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=i.elemType),i.shape!=null&&i.hasOwnProperty("shape")&&(a.shape=$.onnx.TensorShapeProto.toObject(i.shape,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.SparseTensor"},t}(),e}(),r.OperatorSetIdProto=function(){function e(n){if(n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.domain="",e.prototype.version=A.Long?A.Long.fromBits(0,0,!1):0,e.create=function(t){return new e(t)},e.encode=function(t,o){return o||(o=ct.create()),t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(10).string(t.domain),t.version!=null&&Object.hasOwnProperty.call(t,"version")&&o.uint32(16).int64(t.version),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Z||(t=Z.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new $.onnx.OperatorSetIdProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.domain=t.string();break}case 2:{s.version=t.int64();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof Z||(t=new Z(t)),this.decode(t,t.uint32())},e.verify=function(t){return typeof t!="object"||t===null?"object expected":t.domain!=null&&t.hasOwnProperty("domain")&&!A.isString(t.domain)?"domain: string expected":t.version!=null&&t.hasOwnProperty("version")&&!A.isInteger(t.version)&&!(t.version&&A.isInteger(t.version.low)&&A.isInteger(t.version.high))?"version: integer|Long expected":null},e.fromObject=function(t){if(t instanceof $.onnx.OperatorSetIdProto)return t;var o=new $.onnx.OperatorSetIdProto;return t.domain!=null&&(o.domain=String(t.domain)),t.version!=null&&(A.Long?(o.version=A.Long.fromValue(t.version)).unsigned=!1:typeof t.version=="string"?o.version=parseInt(t.version,10):typeof t.version=="number"?o.version=t.version:typeof t.version=="object"&&(o.version=new A.LongBits(t.version.low>>>0,t.version.high>>>0).toNumber())),o},e.toObject=function(t,o){o||(o={});var i={};if(o.defaults)if(i.domain="",A.Long){var s=new A.Long(0,0,!1);i.version=o.longs===String?s.toString():o.longs===Number?s.toNumber():s}else i.version=o.longs===String?"0":0;return t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),t.version!=null&&t.hasOwnProperty("version")&&(typeof t.version=="number"?i.version=o.longs===String?String(t.version):t.version:i.version=o.longs===String?A.Long.prototype.toString.call(t.version):o.longs===Number?new A.LongBits(t.version.low>>>0,t.version.high>>>0).toNumber():t.version),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.OperatorSetIdProto"},e}(),r.OperatorStatus=function(){var e={},n=Object.create(e);return n[e[0]="EXPERIMENTAL"]=0,n[e[1]="STABLE"]=1,n}(),r.FunctionProto=function(){function e(n){if(this.input=[],this.output=[],this.attribute=[],this.attributeProto=[],this.node=[],this.opsetImport=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.name="",e.prototype.input=A.emptyArray,e.prototype.output=A.emptyArray,e.prototype.attribute=A.emptyArray,e.prototype.attributeProto=A.emptyArray,e.prototype.node=A.emptyArray,e.prototype.docString="",e.prototype.opsetImport=A.emptyArray,e.prototype.domain="",e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=ct.create()),t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(10).string(t.name),t.input!=null&&t.input.length)for(var i=0;i<t.input.length;++i)o.uint32(34).string(t.input[i]);if(t.output!=null&&t.output.length)for(var i=0;i<t.output.length;++i)o.uint32(42).string(t.output[i]);if(t.attribute!=null&&t.attribute.length)for(var i=0;i<t.attribute.length;++i)o.uint32(50).string(t.attribute[i]);if(t.node!=null&&t.node.length)for(var i=0;i<t.node.length;++i)$.onnx.NodeProto.encode(t.node[i],o.uint32(58).fork()).ldelim();if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(66).string(t.docString),t.opsetImport!=null&&t.opsetImport.length)for(var i=0;i<t.opsetImport.length;++i)$.onnx.OperatorSetIdProto.encode(t.opsetImport[i],o.uint32(74).fork()).ldelim();if(t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(82).string(t.domain),t.attributeProto!=null&&t.attributeProto.length)for(var i=0;i<t.attributeProto.length;++i)$.onnx.AttributeProto.encode(t.attributeProto[i],o.uint32(90).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof Z||(t=Z.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new $.onnx.FunctionProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.name=t.string();break}case 4:{s.input&&s.input.length||(s.input=[]),s.input.push(t.string());break}case 5:{s.output&&s.output.length||(s.output=[]),s.output.push(t.string());break}case 6:{s.attribute&&s.attribute.length||(s.attribute=[]),s.attribute.push(t.string());break}case 11:{s.attributeProto&&s.attributeProto.length||(s.attributeProto=[]),s.attributeProto.push($.onnx.AttributeProto.decode(t,t.uint32()));break}case 7:{s.node&&s.node.length||(s.node=[]),s.node.push($.onnx.NodeProto.decode(t,t.uint32()));break}case 8:{s.docString=t.string();break}case 9:{s.opsetImport&&s.opsetImport.length||(s.opsetImport=[]),s.opsetImport.push($.onnx.OperatorSetIdProto.decode(t,t.uint32()));break}case 10:{s.domain=t.string();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof Z||(t=new Z(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!A.isString(t.name))return"name: string expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var o=0;o<t.input.length;++o)if(!A.isString(t.input[o]))return"input: string[] expected"}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(var o=0;o<t.output.length;++o)if(!A.isString(t.output[o]))return"output: string[] expected"}if(t.attribute!=null&&t.hasOwnProperty("attribute")){if(!Array.isArray(t.attribute))return"attribute: array expected";for(var o=0;o<t.attribute.length;++o)if(!A.isString(t.attribute[o]))return"attribute: string[] expected"}if(t.attributeProto!=null&&t.hasOwnProperty("attributeProto")){if(!Array.isArray(t.attributeProto))return"attributeProto: array expected";for(var o=0;o<t.attributeProto.length;++o){var i=$.onnx.AttributeProto.verify(t.attributeProto[o]);if(i)return"attributeProto."+i}}if(t.node!=null&&t.hasOwnProperty("node")){if(!Array.isArray(t.node))return"node: array expected";for(var o=0;o<t.node.length;++o){var i=$.onnx.NodeProto.verify(t.node[o]);if(i)return"node."+i}}if(t.docString!=null&&t.hasOwnProperty("docString")&&!A.isString(t.docString))return"docString: string expected";if(t.opsetImport!=null&&t.hasOwnProperty("opsetImport")){if(!Array.isArray(t.opsetImport))return"opsetImport: array expected";for(var o=0;o<t.opsetImport.length;++o){var i=$.onnx.OperatorSetIdProto.verify(t.opsetImport[o]);if(i)return"opsetImport."+i}}return t.domain!=null&&t.hasOwnProperty("domain")&&!A.isString(t.domain)?"domain: string expected":null},e.fromObject=function(t){if(t instanceof $.onnx.FunctionProto)return t;var o=new $.onnx.FunctionProto;if(t.name!=null&&(o.name=String(t.name)),t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.FunctionProto.input: array expected");o.input=[];for(var i=0;i<t.input.length;++i)o.input[i]=String(t.input[i])}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.FunctionProto.output: array expected");o.output=[];for(var i=0;i<t.output.length;++i)o.output[i]=String(t.output[i])}if(t.attribute){if(!Array.isArray(t.attribute))throw TypeError(".onnx.FunctionProto.attribute: array expected");o.attribute=[];for(var i=0;i<t.attribute.length;++i)o.attribute[i]=String(t.attribute[i])}if(t.attributeProto){if(!Array.isArray(t.attributeProto))throw TypeError(".onnx.FunctionProto.attributeProto: array expected");o.attributeProto=[];for(var i=0;i<t.attributeProto.length;++i){if(typeof t.attributeProto[i]!="object")throw TypeError(".onnx.FunctionProto.attributeProto: object expected");o.attributeProto[i]=$.onnx.AttributeProto.fromObject(t.attributeProto[i])}}if(t.node){if(!Array.isArray(t.node))throw TypeError(".onnx.FunctionProto.node: array expected");o.node=[];for(var i=0;i<t.node.length;++i){if(typeof t.node[i]!="object")throw TypeError(".onnx.FunctionProto.node: object expected");o.node[i]=$.onnx.NodeProto.fromObject(t.node[i])}}if(t.docString!=null&&(o.docString=String(t.docString)),t.opsetImport){if(!Array.isArray(t.opsetImport))throw TypeError(".onnx.FunctionProto.opsetImport: array expected");o.opsetImport=[];for(var i=0;i<t.opsetImport.length;++i){if(typeof t.opsetImport[i]!="object")throw TypeError(".onnx.FunctionProto.opsetImport: object expected");o.opsetImport[i]=$.onnx.OperatorSetIdProto.fromObject(t.opsetImport[i])}}return t.domain!=null&&(o.domain=String(t.domain)),o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.input=[],i.output=[],i.attribute=[],i.node=[],i.opsetImport=[],i.attributeProto=[]),o.defaults&&(i.name="",i.docString="",i.domain=""),t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.input&&t.input.length){i.input=[];for(var s=0;s<t.input.length;++s)i.input[s]=t.input[s]}if(t.output&&t.output.length){i.output=[];for(var s=0;s<t.output.length;++s)i.output[s]=t.output[s]}if(t.attribute&&t.attribute.length){i.attribute=[];for(var s=0;s<t.attribute.length;++s)i.attribute[s]=t.attribute[s]}if(t.node&&t.node.length){i.node=[];for(var s=0;s<t.node.length;++s)i.node[s]=$.onnx.NodeProto.toObject(t.node[s],o)}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.opsetImport&&t.opsetImport.length){i.opsetImport=[];for(var s=0;s<t.opsetImport.length;++s)i.opsetImport[s]=$.onnx.OperatorSetIdProto.toObject(t.opsetImport[s],o)}if(t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),t.attributeProto&&t.attributeProto.length){i.attributeProto=[];for(var s=0;s<t.attributeProto.length;++s)i.attributeProto[s]=$.onnx.AttributeProto.toObject(t.attributeProto[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,Ze.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.FunctionProto"},e}(),r}();Ad.exports=$});function An(r,e){if(!r)throw new Error(typeof e=="string"?e:e())}function co(r){return new TextDecoder().decode(r)}var Je,rn,Ya,Pt,fi,St,Lt,oe,lo,nn,on,an,He=B(()=>{"use strict";si();Ma();Je=$n(In());sn();rn=class{static arraysEqual(e,n){if(e.length!==n.length)return!1;for(let t=0;t<e.length;t++)if(e[t]!==n[t])return!1;return!0}},Ya=class{static preprocessInputShapes(e,n){let t=e.length===1?[1,e[0]]:e,o=n.length===1?[n[0],1]:n;return[t,o]}static postprocessOutputShape(e,n,t){n===1&&e.splice(e.length-2,1),t===1&&e.pop()}static calcMatMulShape(e,n){return e[1]!==n[0]?void 0:[e[0],n[1]]}},Pt=class r{static calcShape(e,n,t=!1){let o=e.length,i=n.length;if(o===0)return n;if(i===0)return e;let s=Math.max(e.length,n.length),a=new Array(s);if(t){if(o<2||i<2)return;let u=Ya.calcMatMulShape([e[o-2],e[o-1]],[n[i-2],n[i-1]]);if(u===void 0)return;[a[s-2],a[s-1]]=u}for(let u=t?3:1;u<=s;u++){let l=o-u<0?1:e[o-u],d=i-u<0?1:n[i-u];if(l!==d&&l>1&&d>1)return;a[s-u]=Math.max(l,d)}return a}static index(e,n){let t=new Array(n.length);return r.fillIndex(e,n,t),t}static fillIndex(e,n,t){let o=e.length-n.length;for(let i=0;i<n.length;i++)t[i]=e[o+i]%n[i]}static calc(e,n,t,o,i){let s=r.calcShape(e.dims,n.dims);if(s){if(o&&!oe.areEqual(s,e.dims))return;let a=oe.size(s),u=o?e:new mt(s,i||e.type);if(s.length===0)u.set([],t(e.get([]),n.get([])));else{let l=new Array(s.length),d=new Array(e.dims.length),f=new Array(n.dims.length),p=0,g=0,b=!1,y=!1;e.dims.length===0&&(p=e.get([]),b=!0),n.dims.length===0&&(g=n.get([]),y=!0);let T;for(let x=0;x<a;x++){T=x;for(let _=s.length-1;_>=0;_--)l[_]=T%s[_],T=Math.floor(T/s[_]);b||(r.fillIndex(l,e.dims,d),p=e.get(d)),y||(r.fillIndex(l,n.dims,f),g=n.get(f)),u.set(l,t(p,g))}}return u}}static isValidBroadcast(e,n){let t=e.length,o=n.length;if(t>o)return!1;for(let i=1;i<=t;i++)if(e[t-i]!==1&&e[t-i]!==n[o-i])return!1;return!0}static getBroadcastDims(e,n){let t=e.length,o=[];for(let i=0;i<t;i++){let s=t-1-i,a=e[s]||1;(n[n.length-1-i]||1)>1&&a===1&&o.unshift(s)}return o}},fi=class{static getShapeOfGemmResult(e,n,t,o,i){if(e.length!==2||t.length!==2)throw new Error("shape need to be of size 2");let s,a,u;n?(s=e[1],a=e[0]):(s=e[0],a=e[1]);let l=-1;if(o?(u=t[0],l=1):(u=t[1],l=0),t[l]!==a)throw new Error("dimension mismatch");if(s<=0||u<=0||a<=0)throw new Error("invalid shape specified");if(i&&!Pt.isValidBroadcast(i,[s,u]))throw new Error("gemm: invalid bias shape for broadcast");return[s,u,a]}},St=class r{static tensorDataTypeFromProto(e){switch(e){case Je.onnx.TensorProto.DataType.INT8:return"int8";case Je.onnx.TensorProto.DataType.UINT8:return"uint8";case Je.onnx.TensorProto.DataType.BOOL:return"bool";case Je.onnx.TensorProto.DataType.INT16:return"int16";case Je.onnx.TensorProto.DataType.UINT16:return"uint16";case Je.onnx.TensorProto.DataType.INT32:return"int32";case Je.onnx.TensorProto.DataType.UINT32:return"uint32";case Je.onnx.TensorProto.DataType.FLOAT:return"float32";case Je.onnx.TensorProto.DataType.DOUBLE:return"float64";case Je.onnx.TensorProto.DataType.STRING:return"string";case Je.onnx.TensorProto.DataType.INT64:return"int32";case Je.onnx.TensorProto.DataType.UINT64:return"uint32";default:throw new Error(`unsupported data type: ${Je.onnx.TensorProto.DataType[e]}`)}}static tensorDataTypeStringToEnum(e){switch(e){case"int8":return Je.onnx.TensorProto.DataType.INT8;case"uint8":return Je.onnx.TensorProto.DataType.UINT8;case"bool":return Je.onnx.TensorProto.DataType.BOOL;case"int16":return Je.onnx.TensorProto.DataType.INT16;case"uint16":return Je.onnx.TensorProto.DataType.UINT16;case"int32":return Je.onnx.TensorProto.DataType.INT32;case"uint32":return Je.onnx.TensorProto.DataType.UINT32;case"float32":return Je.onnx.TensorProto.DataType.FLOAT;case"float64":return Je.onnx.TensorProto.DataType.DOUBLE;case"string":return Je.onnx.TensorProto.DataType.STRING;case"int64":return Je.onnx.TensorProto.DataType.INT64;case"uint64":return Je.onnx.TensorProto.DataType.UINT64;default:throw new Error(`unsupported data type: ${e}`)}}static tensorDimsFromProto(e){return e.map(n=>Er.isLong(n)?n.toNumber():n)}static tensorValueTypeFromProto(e){return{tensorType:r.tensorDataTypeFromProto(e.elemType),shape:{dims:r.tensorDimsFromProto(e.shape.dim.map(n=>n.dimValue))}}}static tensorDimsFromORTFormat(e){let n=[];for(let t=0;t<e.dimsLength();t++)n.push(Lt.longToNumber(e.dims(t)));return n}static tensorAttributesFromORTFormat(e){let n=[];for(let t=0;t<e.attributesLength();t++)n.push(e.attributes(t));return n}},Lt=class{static longToNumber(e,n){return Er.isLong(e)?e.toNumber():e instanceof D.Long?Er.fromValue({low:e.low,high:e.high,unsigned:n??!1}).toNumber():e}static isLong(e){return Er.isLong(e)||e instanceof D.Long}},oe=class r{static size(e){return r.getSizeFromDimensionRange(e,0,e.length)}static sizeFromDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,n,e.length)}static sizeToDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeToDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,0,n)}static getSizeFromDimensionRange(e,n,t){let o=1;for(let i=n;i<t;i++){if(e[i]<=0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.");o*=e[i]}return o}static computeStrides(e){let n=e.length;if(n===0)return[];if(n===1)return[1];let t=new Array(n);t[n-1]=1,t[n-2]=e[n-1];for(let o=n-3;o>=0;--o)t[o]=t[o+1]*e[o+1];return t}static transpose(e){return e.slice().reverse()}static indicesToOffset(e,n,t){t===void 0&&(t=e.length);let o=0;for(let i=0;i<t;++i)o+=n[i]*e[i];return o}static offsetToIndices(e,n){let t=n.length;if(t===0)return[];if(t===1)return[e*n[0]];let o=new Array(n.length);for(let i=0;i<o.length-1;++i)o[i]=Math.floor(e/n[i]),e-=o[i]*n[i];return o[o.length-1]=e,o}static normalizeAxis(e,n){if(e<-n&&e>=n)throw new Error("unsupported axis for this operation.");return e<0?e+n:e}static normalizeAxes(e,n){return e.map(t=>this.normalizeAxis(t,n))}static incrementIndex(e,n,t){if(n.length===0||e.length===0)throw new Error("Index incrementing unsupported for scalar Tensor");if(t===void 0)t=n.length;else if(t<=0||t>n.length)throw new Error("Incorrect axis to increment on");for(let o=t-1;o>=0&&(e[o]++,!(e[o]<n[o]));--o)e[o]=0}static calculateReshapedDims(e,n){if(n.length===0){if(e.length===0||r.size(e)===1)return[];throw new Error("cannot reshape to a scalar Tensor")}let t=n.length,o=new Array(t),i=-1,s=1;for(let u=0;u<t;u++){if(n[u]<-1)throw new Error("a dimension in shape hints cannot be less than -1");if(n[u]===-1){if(i!==-1)throw new Error("at most one dimension in shape hints can be -1");i=u}else{if(n[u]===0){if(u>=e.length)throw new Error("the dimension with value zero exceeds the dimension size of the input tensor");o[u]=e[u]}else o[u]=n[u];s*=o[u]}}let a=r.size(e);if(i!==-1){if(a%s!==0)throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${e}] Output shape: [${n}]`);o[i]=a/s}else if(s!==a)throw new Error("reshapedDims and originalDims don't have matching sizes");return o}static sortBasedOnPerm(e,n){return n?n.map(t=>e[t]):e.slice().reverse()}static padShape(e,n){let t=e.length;return e.map((o,i)=>o+n[i]+n[i+t])}static areEqual(e,n){return e.length!==n.length?!1:e.every((t,o)=>t===n[o])}static validateDimsAndCalcSize(e){if(e.length>6)throw new TypeError("Only rank 0 to 6 is supported for tensor shape.");let n=1;for(let t of e){if(!Number.isInteger(t))throw new TypeError(`Invalid shape: ${t} is not an integer`);if(t<0||t>2147483647)throw new TypeError(`Invalid shape: length ${t} is not allowed`);n*=t}return n}static flattenShape(e,n){n<0&&(n+=e.length);let t=e.reduce((s,a)=>s*a,1),o=e.slice(n).reduce((s,a)=>s*a,1);return[t/o,o]}static squeezeShape(e,n){let t=new Array;n=r.normalizeAxes(n,e.length);for(let o=0;o<e.length;o++){let i=n.indexOf(o)>=0;if(i&&e[o]!==1)throw new Error("squeeze an axis of size different than 1");(n.length===0&&e[o]>1||n.length>0&&!i)&&t.push(e[o])}return t}static unsqueezeShape(e,n){let t=new Array(e.length+n.length);t.fill(0);for(let i=0;i<n.length;i++){let s=r.normalizeAxis(n[i],t.length);if(s>=t.length)throw new Error("'axes' has an out of range axis");if(t[s]!==0)throw new Error("'axes' has a duplicate axis");t[s]=1}let o=0;for(let i=0;i<t.length;i++)t[i]===0&&(t[i]=e[o++]);if(o!==e.length)throw new Error("the unsqueezed dimension could not be established");return t}},lo=class r{static splitShape(e,n,t,o){if(t.length===0){if(!o)throw new Error("need to know number of outputs when the 'split' attribute is not specified");r.determineSplit(e[n],o,t)}let i=[],s=[0];for(let a=0;a<t.length;++a){a!==0&&s.push(s[a-1]+t[a-1]);let u=e.slice();u[n]=t[a],i.push(u)}return[i,s]}static determineSplit(e,n,t){if(e%n!==0)throw new Error("cannot split tensor to equal sized parts");for(let o=0;o<n;++o)t.push(e/n)}},nn=class r{static adjustPoolAttributes(e,n,t,o,i,s){if(!e&&t.length!==n.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let a=0;a<n.length-2;a++)a>=t.length?t.push(n[a+2]):t[a]=n[a+2];for(let a=0;a<t.length;a++)if(a<o.length){if(o[a]<0)throw new Error("strides should be greater than or equal to 1")}else o.push(1);for(let a=0;a<t.length;a++)if(a<i.length){if(i[a]<0)throw new Error("dilations should be greater than or equal to 1")}else i.push(1);for(let a=0;a<t.length*2;a++)if(a<s.length){if(s[a]<0)throw new Error("pad should be greater than or equal to 1")}else s.push(0);for(let a=0;a<t.length;a++){if(t[a]<=0)throw new Error("kernel shapes need to be greater than 0");if(s[a]>=t[a]||s[a+t.length]>=t[a])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(e,n,t,o,i,s){if(s){if(i.length!==2*(e.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(n.length!==e.length-2)throw new Error("length of strides should be the length of data dimensions");if(o.length!==e.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let a=0;a<e.length-2;a++)r.adjustPadAndReturnShape(e[a+2],n[a],t[a],o[a],i,a,a+e.length-2,s)}}static computePoolOutputShape(e,n,t,o,i,s,a){if(n.length<=0)throw new Error("input shape must be of size greater than 0");let u=[n[0],n[1]];return r.computeShapeHelper(e,n,u,t,o,i,s,a),u}static computeConvOutputShape(e,n,t,o,i,s,a){if(e.length<=0||n.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let u=[e[0],n[0]];return r.computeShapeHelper(!1,e,u,t,o,i,s,a),u}static computeShapeHelper(e,n,t,o,i,s,a,u){if(e)for(let l=0;l<n.length-2;l++)t.push(1);else for(let l=0;l<n.length-2;l++)t.push(r.adjustPadAndReturnShape(n[l+2],o[l],i[l],s[l],a,l,l+n.length-2,u))}static adjustPadAndReturnShape(e,n,t,o,i,s,a,u){let l=t*(o-1)+1;if(u&&u!=="NOTSET")switch(u){case"VALID":return i[s]=0,i[a]=0,Math.floor((e-l)/n+1);case"SAME_LOWER":case"SAME_UPPER":if(t!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let f=((e+n-1)/n-1)*n+o-e;return i[s]=Math.floor(u==="SAME_LOWER"?(f+1)/2:f/2),i[a]=f-i[s],Math.floor((e+f-o)/n+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((e+i[s]+i[a]-l)/n+1)}},on=-34028234663852886e22,an=34028234663852886e22});function u0(r){switch(r){case"bool":case"int8":case"uint8":return 1;case"int16":case"uint16":return 2;case"int32":case"uint32":case"float32":return 4;case"float64":return 8;default:throw new Error(`cannot calculate sizeof() on type ${r}`)}}function Od(r){switch(r){case Oe.onnx.TensorProto.DataType.UINT8:case Oe.onnx.TensorProto.DataType.INT8:case Oe.onnx.TensorProto.DataType.BOOL:return 1;case Oe.onnx.TensorProto.DataType.UINT16:case Oe.onnx.TensorProto.DataType.INT16:return 2;case Oe.onnx.TensorProto.DataType.FLOAT:case Oe.onnx.TensorProto.DataType.INT32:case Oe.onnx.TensorProto.DataType.UINT32:return 4;case Oe.onnx.TensorProto.DataType.INT64:case Oe.onnx.TensorProto.DataType.DOUBLE:case Oe.onnx.TensorProto.DataType.UINT64:return 8;default:throw new Error(`cannot calculate sizeof() on type ${Oe.onnx.TensorProto.DataType[r]}`)}}function l0(r,e){return new(Pd(e))(r)}function Pd(r){switch(r){case"bool":case"uint8":return Uint8Array;case"int8":return Int8Array;case"int16":return Int16Array;case"uint16":return Uint16Array;case"int32":return Int32Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"float32":return Float32Array;case"float64":return Float64Array;default:throw new Error("unspecified error")}}function Ja(r,e){if(e===Oe.onnx.TensorProto.DataType.INT64||e===Za.TensorDataType.INT64){if(r.greaterThanOrEqual(2147483648)||r.lessThan(-2147483648))throw new TypeError("int64 is not supported")}else if(e===Oe.onnx.TensorProto.DataType.UINT32||e===Za.TensorDataType.UINT32||e===Oe.onnx.TensorProto.DataType.UINT64||e===Za.TensorDataType.UINT64){if(r.greaterThanOrEqual(4294967296)||r.lessThan(0))throw new TypeError("uint64 is not supported")}else throw new TypeError(`not a LONG type: ${Oe.onnx.TensorProto.DataType[e]}`);return r.toNumber()}function Ed(r,e,n){switch(e){case Oe.onnx.TensorProto.DataType.BOOL:case Oe.onnx.TensorProto.DataType.UINT8:return r.getUint8(n);case Oe.onnx.TensorProto.DataType.INT8:return r.getInt8(n);case Oe.onnx.TensorProto.DataType.UINT16:return r.getUint16(n,!0);case Oe.onnx.TensorProto.DataType.INT16:return r.getInt16(n,!0);case Oe.onnx.TensorProto.DataType.FLOAT:return r.getFloat32(n,!0);case Oe.onnx.TensorProto.DataType.INT32:return r.getInt32(n,!0);case Oe.onnx.TensorProto.DataType.UINT32:return r.getUint32(n,!0);case Oe.onnx.TensorProto.DataType.INT64:return Ja(Er.fromBits(r.getUint32(n,!0),r.getUint32(n+4,!0),!1),e);case Oe.onnx.TensorProto.DataType.DOUBLE:return r.getFloat64(n,!0);case Oe.onnx.TensorProto.DataType.UINT64:return Ja(Er.fromBits(r.getUint32(n,!0),r.getUint32(n+4,!0),!0),e);default:throw new Error(`cannot read from DataView for type ${Oe.onnx.TensorProto.DataType[e]}`)}}var Cd,Oe,Za,mt,sn=B(()=>{"use strict";Cd=$n(vl());Ma();io();Oe=$n(In());He();Za=ue.experimental.fbs,mt=class r{constructor(e,n,t,o,i,s=Cd.Guid.create()){this.dims=e;this.type=n;this.dataProvider=t;this.asyncDataProvider=o;this.cache=i;this.dataId=s;this.size=oe.validateDimsAndCalcSize(e);let a=this.size,u=t===void 0&&o===void 0&&i===void 0;if(i!==void 0&&i.length!==a)throw new RangeError("Input dims doesn't match data length.");if(n==="string"){if(i!==void 0&&(!Array.isArray(i)||!i.every(l=>typeof l=="string")))throw new TypeError("cache should be a string array");u&&(this.cache=new Array(a))}else{if(i!==void 0){let l=Pd(n);if(!(i instanceof l))throw new TypeError(`cache should be type ${l.name}`)}if(u){let l=new ArrayBuffer(a*u0(n));this.cache=l0(l,n)}}}get data(){if(this.cache===void 0){let e=this.dataProvider(this.dataId);if(e.length!==this.size)throw new Error("Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.");this.cache=e}return this.cache}get stringData(){if(this.type!=="string")throw new TypeError("data type is not string");return this.data}get integerData(){switch(this.type){case"uint8":case"int8":case"uint16":case"int16":case"int32":case"uint32":case"bool":return this.data;default:throw new TypeError("data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)")}}get floatData(){switch(this.type){case"float32":case"float64":return this.data;default:throw new TypeError("data type is not float (float32, float64)")}}get numberData(){if(this.type!=="string")return this.data;throw new TypeError("type cannot be non-number (string)")}get(e){return this.data[oe.indicesToOffset(e,this.strides)]}set(e,n){this.data[oe.indicesToOffset(e,this.strides)]=n}async getData(){return this.cache===void 0&&(this.cache=await this.asyncDataProvider(this.dataId)),this.cache}get strides(){return this._strides||(this._strides=oe.computeStrides(this.dims)),this._strides}static fromProto(e){if(!e)throw new Error("cannot construct Value from an empty tensor");let n=St.tensorDataTypeFromProto(e.dataType),t=St.tensorDimsFromProto(e.dims),o=new r(t,n);if(n==="string")e.stringData.forEach((i,s)=>{o.data[s]=co(i)});else if(e.rawData&&typeof e.rawData.byteLength=="number"&&e.rawData.byteLength>0){let i=o.data,s=new DataView(e.rawData.buffer,e.rawData.byteOffset,e.rawData.byteLength),a=Od(e.dataType),u=e.rawData.byteLength/a;if(e.rawData.byteLength%a!==0)throw new Error("invalid buffer length");if(i.length!==u)throw new Error("buffer length mismatch");for(let l=0;l<u;l++){let d=Ed(s,e.dataType,l*a);i[l]=d}}else{let i;switch(e.dataType){case Oe.onnx.TensorProto.DataType.FLOAT:i=e.floatData;break;case Oe.onnx.TensorProto.DataType.INT32:case Oe.onnx.TensorProto.DataType.INT16:case Oe.onnx.TensorProto.DataType.UINT16:case Oe.onnx.TensorProto.DataType.INT8:case Oe.onnx.TensorProto.DataType.UINT8:case Oe.onnx.TensorProto.DataType.BOOL:i=e.int32Data;break;case Oe.onnx.TensorProto.DataType.INT64:i=e.int64Data;break;case Oe.onnx.TensorProto.DataType.DOUBLE:i=e.doubleData;break;case Oe.onnx.TensorProto.DataType.UINT32:case Oe.onnx.TensorProto.DataType.UINT64:i=e.uint64Data;break;default:throw new Error("unspecific error")}if(i==null)throw new Error("failed to populate data from a tensorproto value");let s=o.data;if(s.length!==i.length)throw new Error("array length mismatch");for(let a=0;a<i.length;a++){let u=i[a];Er.isLong(u)?s[a]=Ja(u,e.dataType):s[a]=u}}return o}static fromData(e,n,t){return new r(n,t,void 0,void 0,e)}static fromOrtTensor(e){if(!e)throw new Error("cannot construct Value from an empty tensor");let n=St.tensorDimsFromORTFormat(e),t=St.tensorDataTypeFromProto(e.dataType()),o=new r(n,t);if(t==="string")for(let i=0;i<e.stringDataLength();i++)o.data[i]=e.stringData(i);else if(e.rawDataArray()&&typeof e.rawDataLength()=="number"&&e.rawDataLength()>0){let i=o.data,s=new DataView(e.rawDataArray().buffer,e.rawDataArray().byteOffset,e.rawDataLength()),a=Od(e.dataType()),u=e.rawDataLength()/a;if(e.rawDataLength()%a!==0)throw new Error("invalid buffer length");if(i.length!==u)throw new Error("buffer length mismatch");for(let l=0;l<u;l++){let d=Ed(s,e.dataType(),l*a);i[l]=d}}return o}}});function de(r){return r===1?d0:c0}function kd(r){let e=de(r);return`${e.version}
      precision highp float;
      ${e.attribute} vec3 position;
      ${e.attribute} vec2 textureCoord;

      ${e.varyingVertex} vec2 TexCoords;

      void main()
      {
          gl_Position = vec4(position, 1.0);
          TexCoords = textureCoord;
      }`}function Dd(r){let e=de(r);return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFrag} vec2 TexCoords;
    ${e.outputDeclaration}
    const vec2 halfCR = vec2(0.5, 0.5);

    // Custom vector types to handle higher dimenalities.
    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    `}function Bd(r,e){let n=de(r);return`
  void main() {
    int indices[${e}];
    toVec(TexCoords, indices);
    vec4 result = vec4(process(indices));
    ${n.output} = result;
  }
  `}var d0,c0,rt=B(()=>{"use strict";d0={version:"",attribute:"attribute",varyingVertex:"varying",varyingFrag:"varying",texture2D:"texture2D",output:"gl_FragColor",outputDeclaration:""},c0={version:"#version 300 es",attribute:"in",varyingVertex:"out",varyingFrag:"in",texture2D:"texture",output:"outputColor",outputDeclaration:"out vec4 outputColor;"}});var ze=B(()=>{"use strict"});async function Qa(r,e=t=>0,n){return new Promise((t,o)=>{let i=0,s=()=>{if(r()){t();return}i++;let a=e(i);if(n!=null&&i>=n){o();return}setTimeout(s,a)};s()})}function pi(r){return An(typeof r<"u"&&r.length!==0,()=>"empty string found for sampler name"),"get"+r.charAt(0).toUpperCase()+r.slice(1)}function Rd(r){return An(typeof r<"u"&&r.length!==0,()=>"empty string found for sampler name"),"get"+r.charAt(0).toUpperCase()+r.slice(1)+"AtOutCoords"}function On(r,e){let n=JSON.parse(JSON.stringify(r));return n=e,n}function En(r,e){return e.map(n=>r[n]).join(", ")}function kt(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function nr(r=6){return["x","y","z","w","u","v"].slice(0,r)}var fr=B(()=>{"use strict";He()});function f0(r,e){return nr(e).map(n=>`${r}.${n}`)}function Cn(r,e){return e===1?[r]:f0(r,e)}function pr(){return`
    float getChannel(vec4 frag, int dim) {
      int modCoord = imod(dim, 2);
      return modCoord == 0 ? frag.r : frag.g;
    }

    float getChannel(vec4 frag, vec2 innerDims) {
      vec2 modCoord = mod(innerDims, 2.);
      return modCoord.x == 0. ?
        (modCoord.y == 0. ? frag.r : frag.g) :
        (modCoord.y == 0. ? frag.b : frag.a);
    }
  `}var un=B(()=>{"use strict";fr()});function h0(r,e,n){if(r===0)return"false";if(r===1)return`rc > ${e[0]}`;let t="";for(let o=r-2;o<r;o++)t+=`${n[o]} >= ${e[o-r+2]}`,o<r-1&&(t+="||");return t}function m0(r,e){let n=r.length;if(n===0)return"getA(), 0, 0, 0";if(n===1)return`getA(rc),
            rc + 1 >= ${r[0]} ? 0. : getA(rc + 1),
            0, 0`;let t="r, c",o="r, cp1",i="rp1, c",s="rp1, cp1",a="";if(n>2)for(let u=0;u<n-2;++u)a=a+`${e[u]},`;return`getA(${a}${t}),
          rEdge ? 0. : getA(${a}${i}),
          cEdge ? 0. : getA(${a}${o}),
          rEdge || cEdge ? 0. : getA(${a}${s})`}function g0(r,e,n,t){return r===0||r===1?"":`
    int r = ${e[r-2]};
    int c = ${e[r-1]};
    int rp1 = ${e[r-2]} + 1;
    int cp1 = ${e[r-1]} + 1;
    bool rEdge = rp1 >= ${t};
    bool cEdge = cp1 >= ${n};
    `}var Md,p0,Ld,zd=B(()=>{"use strict";rt();ze();fr();un();Md={name:"pack",inputNames:["A"],inputTypes:[1]},p0=(r,e)=>{let n=de(r.session.backend.glContext.version),t=e.dims,o=t.length,i=e.dims.length,s=kt(i),a=Cn("rc",i),u=g0(i,a,t[t.length-2],t[t.length-1]),l;o===0?l=[1,1]:o===1?l=[t[0],1]:l=[t[i-1],t[i-2]];let d=h0(i,l,a),f=m0(t,a),p=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${d}) {
            ${n.output} = vec4(0);
          } else {
            ${u}

            ${n.output} = vec4(${f});
          }
        }
      `;return{...Md,hasMain:!0,output:{dims:e.dims,type:e.type,textureType:2},shaderSource:p}},Ld=(r,e)=>({...Md,get:()=>p0(r,e)})});function es(r){if(r.length===0)return[1,1,1];let e=1;for(let n=0;n<r.length-2;++n)e*=r[n];return[e,r.length>1?r[r.length-2]:1,r[r.length-1]]}function Fd(r,e){let n=!1;return r.length===0||e.length===0?n=!0:r.length<2||e.length<2?n=r[r.length-1]===e[e.length-1]:n=r[r.length-1]===e[e.length-1]&&r[r.length-2]===e[e.length-2],n}function v0(r){let e=oe.computeStrides(r),n=["b","r","c"],t="index";return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e.map((i,s)=>{let a=`int ${n[s]} = ${t} / ${i}`,u=s===e.length-1?`int ${n[s+1]} = ${t} - ${n[s]} * ${i}`:`index -= ${n[s]} * ${i}`;return`${a}; ${u};`}).join("")}
      return ivec3(b, r, c);
    }
  `}function w0(r){let e=oe.computeStrides(r);return`
  int getFlattenedIndex(ivec3 coords) {
    // reverse y, z order
    return coords.x * ${e[0]} + coords.z * ${e[1]} + coords.y;
  }
`}var b0,y0,Nd,Vd=B(()=>{"use strict";He();rt();ze();un();b0=r=>({name:"Reshape (packed)",inputTypes:[2],inputNames:["A"],cacheHint:`${r}`}),y0=(r,e,n,t)=>{let o=e.dims,i=t,s="";for(let l=0;l<4;l++){let d="";switch(l){case 0:d="outputCoords = rc;";break;case 1:d="outputCoords = ivec3(rc.x, rc.y+1, rc.z);";break;case 2:d="outputCoords = ivec3(rc.x, rc.y, rc.z+1);";break;case 3:d="outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);";break;default:throw new Error}s+=`
        ${d}
        ${l>0?"if(outputCoords.y < rows && outputCoords.z < cols){":""}
          int flattenedIndex = getFlattenedIndex(outputCoords);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);
          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${l}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);

        ${l>0?"}":""}
      `}let a=de(r.session.backend.glContext.version),u=`
      ${v0(o)}
      ${w0(i)}
      ${pr()}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.0);

        ivec3 outputCoords;
        int rows = ${i[2]};
        int cols = ${i[1]};

        ${s}
        ${a.output} = result;
      }
    `;return{...n,output:{dims:i,type:e.type,textureType:2},shaderSource:u,hasMain:!0}},Nd=(r,e,n)=>{let t=b0(n);return{...t,get:()=>y0(r,e,t,n)}}});var ts,Gd=B(()=>{"use strict";rt();ze();ts=(r,e)=>{let n=e.shape,t=de(r.session.backend.glContext.version),o=`
    const float FLOAT_MAX = 1.70141184e38;
    const float FLOAT_MIN = 1.17549435e-38;

    bool isNaN(float val) {
      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;
    }

    highp vec4 encodeAsUint8(highp float v) {
      if (isNaN(v)) {
        return vec4(255, 255, 255, 255);
      }

      highp float av = abs(v);

      if(av < FLOAT_MIN) {
        return vec4(0.0, 0.0, 0.0, 0.0);
      } else if(v > FLOAT_MAX) {
        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
      } else if(v < -FLOAT_MAX) {
        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
      }

      highp vec4 c = vec4(0,0,0,0);

      highp float e = floor(log2(av));
      highp float m = exp2(fract(log2(av))) - 1.0;

      c[2] = floor(128.0 * m);
      m -= c[2] / 128.0;
      c[1] = floor(32768.0 * m);
      m -= c[1] / 32768.0;
      c[0] = floor(8388608.0 * m);

      highp float ebias = e + 127.0;
      c[3] = floor(ebias / 2.0);
      ebias -= c[3] * 2.0;
      c[2] += floor(ebias) * 128.0;

      c[3] += 128.0 * step(0.0, -v);

      return c / 255.0;
    }

    void main() {
      float value = ${t.texture2D}(X,TexCoords).r;
      ${t.output} = encodeAsUint8(value);
    }`,i={name:"Uint8Encode",inputTypes:[0],inputNames:["X"],output:{dims:n,type:e.tensor.type,textureType:3},shaderSource:o,hasMain:!0};return r.executeProgram(i,[e.tensor])}});function $0(r,e){if(r===1)return"rc";let n="";for(let t=0;t<r;t++)n+=e[t],t<r-1&&(n+=",");return n}var Ud,x0,Wd,Hd=B(()=>{"use strict";rt();ze();fr();un();Ud={name:"unpack",inputNames:["A"],inputTypes:[2]},x0=(r,e)=>{let n=e.dims.length,t=Cn("rc",n),o=t.slice(-2),i=kt(n),s=pr(),u=e.dims.length===0?"":$0(n,t),l=n<=1?"rc":`vec2(${o.join(",")})`,d=de(r.session.backend.glContext.version),f=`
    ${s}
    void main() {
      ${i} rc = getOutputCoords();

       // Sample the texture with the coords to get the rgba channel value.
       vec4 packedInput = getA(${u});

       ${d.output} = vec4(getChannel(packedInput, ${l}), 0, 0, 0);
     }
   `;return{...Ud,hasMain:!0,output:{dims:e.dims,type:e.type,textureType:0},shaderSource:f}},Wd=(r,e)=>({...Ud,get:()=>x0(r,e)})});var hi,fo,mi,po=B(()=>{"use strict";Ut();hi=class{constructor(e,n=1){if(n===1)this.internalFormat=e.R32F,this.format=e.RED,this.textureType=e.FLOAT,this.channelSize=n;else if(n===4)this.internalFormat=e.RGBA32F,this.format=e.RGBA,this.textureType=e.FLOAT,this.channelSize=n;else throw new Error(`Invalid number of channels: ${n}`)}encode(e,n){let t,o;return e.constructor!==Float32Array&&(je.warning("Encoder","data was not of type Float32; creating new Float32Array"),o=new Float32Array(e)),n*this.channelSize>e.length?(je.warning("Encoder","Source data too small. Allocating larger array"),o=e,t=this.allocate(n*this.channelSize),o.forEach((i,s)=>t[s]=i)):(o=e,t=o),t}allocate(e){return new Float32Array(e*4)}decode(e,n){return this.channelSize===1?e.filter((o,i)=>i%4===0).subarray(0,n):e.subarray(0,n)}},fo=class{constructor(e,n=1,t){if(n!==1&&n!==4)throw new Error(`Invalid number of channels: ${n}`);this.internalFormat=e.RGBA,this.format=e.RGBA,this.channelSize=n,this.textureType=t||e.FLOAT}encode(e,n){let t=e;return this.channelSize===1&&(je.verbose("Encoder","Exploding into a larger array"),t=this.allocate(n),e.forEach((o,i)=>t[i*4]=o)),t}allocate(e){return new Float32Array(e*4)}decode(e,n){return this.channelSize===1?e.filter((o,i)=>i%4===0).subarray(0,n):e.subarray(0,n)}},mi=class{constructor(e,n=1){this.channelSize=4;if(n===1)this.internalFormat=e.ALPHA,this.format=e.ALPHA,this.textureType=e.UNSIGNED_BYTE,this.channelSize=n;else if(n===4)this.internalFormat=e.RGBA,this.format=e.RGBA,this.textureType=e.UNSIGNED_BYTE,this.channelSize=n;else throw new Error(`Invalid number of channels: ${n}`)}encode(e,n){return new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}allocate(e){return new Uint8Array(e*this.channelSize)}decode(e,n){if(e instanceof Uint8Array)return e.subarray(0,n);throw new Error(`Invalid array type: ${e.constructor}`)}}});var ho,qd,rs,jd=B(()=>{"use strict";He();ze();ho=(r,e,n)=>{let t=n===0||n===1?1:4,o=n===2,i=n===1||n===2,s=n===4?e.length-1:void 0,a=n===4?e.map((u,l)=>l===e.length-1?u*4:u):void 0;return rs(r,e,t,a,{isPacked:o,reverseWH:i,breakAxis:s})},qd=(r,e,n)=>{let t=ho(r,e,n);return[t.width,t.height]},rs=(r,e,n=1,t,o)=>{let i=!!(o&&o.isPacked),[s,a]=r.computeTextureWH(i&&t||e,o),u=e.length,l=e.slice(0);if(u===0&&(l=[1]),n===1)t=e;else if(i){if(n!==4)throw new Error("a packed texture must be 4-channel");t=e,u>0&&(l[u-1]=Math.ceil(l[u-1]/2)),u>1&&(l[u-2]=Math.ceil(l[u-2]/2))}else if(!t)throw new Error("Unpacked shape is needed when using channels > 1");return{width:s,height:a,channels:n,isPacked:i,shape:l,strides:oe.computeStrides(l),unpackedShape:t,reversedWH:o&&o.reverseWH}}});var _0,gi,Xd=B(()=>{"use strict";Ut();sn();He();zd();Vd();Gd();Hd();po();jd();ze();_0=(r,e)=>{let n=e.map(o=>`${o.unpackedShape.join(",")};${o.width}x${o.height}`).join("_"),t=r.name;return r.cacheHint&&(t+="["+r.cacheHint+"]"),t+=":"+n,t},gi=class{constructor(e){this.session=e;this.packedTextureDataCache=new Map,this.unpackedTextureDataCache=new Map}calculateTextureWidthAndHeight(e,n){return qd(this.session.layoutStrategy,e,n)}executeProgram(e,n){if(n.length<e.inputNames.length)throw new Error(`Input size mustn't be less than ${e.inputNames.length}.`);if(e.inputNames.length!==e.inputTypes.length)throw new Error("input names size does not match input types");let t=[];for(let l=0;l<e.inputNames.length;++l)t[l]=this.getOrCreateTextureData(n[l],e.inputTypes[l]);let o=_0(e,t),i=this.session.programManager.getArtifact(o),s=i?i.programInfo:typeof e.get=="function"?e.get():e,a=ho(this.session.layoutStrategy,s.output.dims,s.output.textureType),u=this.createTextureData(a,s.output.type);return i||(i=this.session.programManager.build(s,t,u),this.session.programManager.setArtifact(o,i)),this.runProgram(i,t,u),u}run(e,n){return this.executeProgram(e,n).tensor}runProgram(e,n,t){for(let o=0;o<n.length;++o)if(!!n[o].isPacked!=(e.programInfo.inputTypes[o]===2))throw new Error(`input[${o}] property packed inconsistent`);if(!!t.isPacked!=(e.programInfo.output.textureType===2))throw new Error("output property packed inconsistent");this.session.programManager.run(e,n,t)}getOrCreateTextureData(e,n){let t=this.getTextureData(e.dataId,n===2);if(!t&&(t=this.getTextureData(e.dataId,n!==2),t))return n===2?this.pack(t):this.unpack(t);if(!t){let o=ho(this.session.layoutStrategy,e.dims,n);if(n===4){let a=e.dims;if(a.length===4){let u=[a[0],Math.ceil(a[1]*a[2]*a[3]/4)],l=ho(this.session.layoutStrategy,u,n),d=e.numberData;if(a[1]*a[2]*a[3]%4!==0){let f=a[0],p=a[1]*a[2]*a[3],g=Math.ceil(p*1/4)*4,b=f*g;d=new Float32Array(b);for(let y=0;y<f;++y){let T=y*p,x=y*g+y%1*p;d.set(e.numberData.subarray(T,T+p),x)}}return this.createTextureData(l,e.type,d,e,1)}}if(n===2){let i=rs(this.session.layoutStrategy,e.dims,1,[],{reverseWH:!0}),s=this.createTextureData(i,e.type,e.numberData,e,1);t=this.pack(s)}else t=this.createTextureData(o,e.type,e.numberData,e,1)}return t}createTextureDataFromLayoutBindTensor(e,n,t,o){return this.createTextureData(e,n,t,o,1)}createTextureData(e,n,t,o,i){je.verbose("InferenceHandler",`Creating TextureData: layout:[${JSON.stringify(e)}]`);let s=this.session.textureManager.createTextureFromLayout(n,e,t,i);return this.createTextureDataFromTexture(e,n,s,o)}reshapeUnpacked(e,n){let t=this.getOrCreateTextureData(e,0),o={channels:t.channels,height:t.height,width:t.width,shape:n.length!==0?n:[1],strides:oe.computeStrides(n),unpackedShape:n};return this.createTextureDataFromTexture(o,e.type,t.texture).tensor}reshapePacked(e,n){let t=this.getOrCreateTextureData(e,2);if(Fd(e.dims,n)){let l={channels:t.channels,height:t.height,width:t.width,shape:n.length!==0?n:[1],strides:oe.computeStrides(n),unpackedShape:n,isPacked:!0};return this.createTextureDataFromTexture(l,e.type,t.texture).tensor}let o=es(e.dims),i=es(n),s=this.reshapePacked(e,o),a=this.run(Nd(this,s,i),[s]);return this.reshapePacked(a,n)}cast(e,n){let t=this.getOrCreateTextureData(e,0);return this.createTextureDataFromTexture(t,n,t.texture).tensor}createTextureDataFromTexture(e,n,t,o,i){let s={...e,tensor:o||new mt(e.unpackedShape,n,a=>this.readTexture(s),async a=>this.readTextureAsync(s),void 0,i),texture:t};return this.setTextureData(s.tensor.dataId,s,e.isPacked),s}getTextureData(e,n=!1){return this.session.isInitializer(e)?this.session.getTextureData(e,n):n?this.packedTextureDataCache.get(e):this.unpackedTextureDataCache.get(e)}setTextureData(e,n,t=!1){this.session.isInitializer(e)?this.session.setTextureData(e,n,t):(t?this.packedTextureDataCache:this.unpackedTextureDataCache).set(e,n)}isTextureLayoutCached(e,n=!1){return!!this.getTextureData(e.dataId,n)}dispose(){this.session.textureManager.clearActiveTextures(),this.packedTextureDataCache.forEach(e=>this.session.textureManager.releaseTexture(e)),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache.forEach(e=>this.session.textureManager.releaseTexture(e)),this.unpackedTextureDataCache=new Map}readTexture(e){return e.isPacked?this.readTexture(this.unpack(e)):this.session.backend.glContext.isFloat32DownloadSupported?this.session.textureManager.readTexture(e,e.tensor.type,e.channels):this.session.textureManager.readUint8TextureAsFloat(ts(this,e))}async readTextureAsync(e){return e.isPacked?this.readTextureAsync(this.unpack(e)):this.session.backend.glContext.isFloat32DownloadSupported?this.session.textureManager.readTextureAsync(e,e.tensor.type,e.channels):this.session.textureManager.readUint8TextureAsFloat(ts(this,e))}pack(e){return this.executeProgram(Ld(this,e.tensor),[e.tensor])}unpack(e){return this.executeProgram(Wd(this,e.tensor),[e.tensor])}}});var ns,Ae,xt=B(()=>{"use strict";ns=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},Ae=r=>new ns(r)});var Yd,Zd,Jd,S0,I0,Qd=B(()=>{"use strict";xt();rt();ze();Yd={name:"BatchNormalization",inputNames:["A","Scale","B","Mean","Variance"],inputTypes:[0,0,0,0,0]},Zd=(r,e,n)=>(I0(e),[r.run({...Yd,cacheHint:n.cacheKey,get:()=>S0(r,e,n)},e)]),Jd=r=>{let e=r.attributes.getFloat("epsilon",1e-5),n=r.attributes.getFloat("momentum",.9),t=r.attributes.getInt("spatial",1);return Ae({epsilon:e,momentum:n,spatial:t})},S0=(r,e,n)=>{let t=de(r.session.backend.glContext.version),o=e[0].dims.length,[i,s]=r.calculateTextureWidthAndHeight(e[1].dims,0),a=`
  float process(int[${o}] indices) {
    vec2 position = offsetToCoords(indices[1], ${i}, ${s});
    float scale = getColorAsFloat(${t.texture2D}(Scale, position));
    float mean = getColorAsFloat(${t.texture2D}(Mean, position));
    float variance = getColorAsFloat(${t.texture2D}(Variance, position));
    float b = getColorAsFloat(${t.texture2D}(B, position));

    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${n.epsilon})) ) + b;
  }`;return{...Yd,output:{dims:e[0].dims,type:e[0].type,textureType:0},shaderSource:a}},I0=r=>{if(!r||r.length!==5)throw new Error("BatchNormalization requires 5 inputs.");let e=r[0],n=r[1],t=r[2],o=r[3],i=r[4];if(e.dims.length<3||n.dims.length!==1||t.dims.length!==1||o.dims.length!==1||i.dims.length!==1)throw new Error("invalid input shape.");if(n.dims[0]!==e.dims[1]||t.dims[0]!==e.dims[1]||o.dims[0]!==e.dims[1]||i.dims[0]!==e.dims[1])throw new Error("invalid input shape.");if(e.type!=="float32"&&e.type!=="float64"||n.type!=="float32"&&n.type!=="float64"||t.type!=="float32"&&t.type!=="float64"||o.type!=="float32"&&o.type!=="float64"||i.type!=="float32"&&i.type!=="float64")throw new Error("invalid input tensor types.")}});var bi,jt,Q,mo,yi,Cr=B(()=>{"use strict";bi=class{constructor(e,n,t,o){this.glContext=e;this.programInfo=n;this.inputTextureLayouts=t;this.outputTextureLayout=o}},jt=class{constructor(e){this.context=e}},Q=class{constructor(e,n){this.routineBody=e;this.dependencies=n}},mo=class{constructor(e,n,t){this.name=e;t?this.dependencies=t:this.dependencies=[],n&&(this.routineBody=n)}addDependency(e){e&&this.dependencies.push(e)}},yi=class{static returnOrderedNodes(e){if(!e||e.length===0)return[];if(e.length===1)return e;let n=new Set,t=new Set,o=new Array;return this.createOrderedNodes(e,n,t,o),o}static createOrderedNodes(e,n,t,o){for(let i=0;i<e.length;++i)this.dfsTraverse(e[i],n,t,o)}static dfsTraverse(e,n,t,o){if(!e||t.has(e.name))return;if(n.has(e.name))throw new Error("Cyclic dependency detected. Can't topologically sort routines needed for shader.");n.add(e.name);let i=e.dependencies;if(i&&i.length>0)for(let s=0;s<i.length;++s)this.dfsTraverse(i[s],n,t,o);o.push(e),t.add(e.name),n.delete(e.name)}}});function O0(){let r="add_";return{body:`
  float ${r}(float a, float b) {
    return a + b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 + v2;
  }
  `,name:r,type:0}}function E0(){let r="div_";return{body:`
  float ${r}(float a, float b) {
    return a / b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 / v2;
  }
  `,name:r,type:0}}function C0(){let r="mul_";return{body:`
  float ${r}(float a, float b) {
    return a * b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 * v2;
  }
  `,name:r,type:0}}function P0(){let r="sub_";return{body:`
  float ${r}(float a, float b) {
    return a - b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 - v2;
  }
  `,name:r,type:0}}function k0(){let r="equal_";return{body:`
  float ${r}(float a, float b) {
    return float(a == b);
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4(equal(v1, v2));
  }
  `,name:r,type:0}}function D0(){let r="greater_";return{body:`
  float ${r}(float a, float b) {
    return float(a > b);
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4( v1.r > v2.r ,
      v1.g > v2.g,
      v1.b > v2.b,
      v1.a > v2.a );
  }
  `,name:r,type:0}}function B0(){let r="less_";return{body:`
  float ${r}(float a, float b) {
    return float(a < b);
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4( v1.r < v2.r ,
                v1.g < v2.g,
                v1.b < v2.b,
                v1.a < v2.a );
  }
  `,name:r,type:0}}function R0(){let r="and_";return{body:`
  float ${r}(float a, float b) {
    return float( bool(a) && bool(b) );
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r && b2.r ,
                b1.g && b2.g,
                b1.b && b2.b,
                b1.a && b2.a );
  }
  `,name:r,type:0}}function M0(){let r="or_";return{body:`
  float ${r}(float a, float b) {
    return float( bool(a) || bool(b) );
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r || b2.r ,
                b1.g || b2.g,
                b1.b || b2.b,
                b1.a || b2.a );
  }
  `,name:r,type:0}}function L0(){let r="xor_";return{body:`
  float ${r}(float a, float b) {
    return float( bool(a) ^^ bool(b) );
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r ^^ b2.r ,
                b1.g ^^ b2.g,
                b1.b ^^ b2.b,
                b1.a ^^ b2.a );
  }
  `,name:r,type:0}}function z0(){return F0("pow")}function N0(){let r="prelu_";return{body:`
  float ${r}(float a, float b) {
    return a < 0.0 ? a * b: a;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4(
      v1.r < 0.0 ? v1.r * v2.r: v1.r,
      v1.g < 0.0 ? v1.g * v2.g: v1.g,
      v1.b < 0.0 ? v1.b * v2.b: v1.b,
      v1.a < 0.0 ? v1.a * v2.a: v1.a
      );
  }
  `,name:r,type:0}}function F0(r){let e=`${r}_`;return{body:`
  float ${e}(float a, float b) {
    return ${r}(a, b);
  }
  vec4 ${e}(vec4 v1, vec4 v2) {
    return ${r}(v1, v2);
  }
  `,name:e,type:0}}var Kt,V0,ec,tc,rc,nc,oc,ic,ac,sc,uc,lc,dc,cc,fc=B(()=>{"use strict";He();Cr();rt();ze();Kt=(r,e,n,t=e[0].type,o)=>{let i=r.session.pack?2:0;return{name:n.name,inputNames:["A","B"],inputTypes:[i,i],cacheHint:o,get:()=>V0(r,e,n,t)}},V0=(r,e,n,t=e[0].type)=>{let o=r.session.pack?2:0,i=!oe.areEqual(e[0].dims,e[1].dims),s=e[0].dims,a=r.session.pack;if(i){let d=Pt.calcShape(e[0].dims,e[1].dims,!1);if(!d)throw new Error("Can't perform binary op on the given tensors");s=d;let f=s.length,p=e[0].dims.length!==0?e[0].dims.length:1,g=e[1].dims.length!==0?e[1].dims.length:1,b=e[0].dims.length!==0?"bcastIndices_A(indices, aindices);":"aindices[0] = 0;",y=e[1].dims.length!==0?"bcastIndices_B(indices, bindices);":"bindices[0] = 0;",T=de(r.session.backend.glContext.version),x=a?`
      ${n.body}
      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();
        vec4 result = ${n.name}(a, b);
        ${T.output} = result;
      }`:`
      ${n.body}
      float process(int indices[${f}]) {
        int aindices[${p}];
        int bindices[${g}];
        ${b}
        ${y}
        return ${n.name}(_A(aindices), _B(bindices));
      }`;return{name:n.name,inputNames:["A","B"],inputTypes:[o,o],output:{dims:s,type:t,textureType:o},shaderSource:x,hasMain:a}}let u=de(r.session.backend.glContext.version),l=`
    ${n.body}
    void main() {
      vec4 v1 = ${u.texture2D}(A, TexCoords);
      vec4 v2 = ${u.texture2D}(B, TexCoords);
      vec4 result = ${n.name}(v1, v2);
      ${u.output} = result;
    }
    `;return{name:n.name,inputNames:["A","B"],inputTypes:[o,o],output:{dims:e[0].dims,type:t,textureType:o},shaderSource:l,hasMain:!0}},ec=(r,e)=>[r.run(Kt(r,e,O0()),e)],tc=(r,e)=>[r.run(Kt(r,e,R0(),"bool"),e)],rc=(r,e)=>[r.run(Kt(r,e,E0()),e)],nc=(r,e)=>[r.run(Kt(r,e,k0(),"bool"),e)],oc=(r,e)=>[r.run(Kt(r,e,D0(),"bool"),e)],ic=(r,e)=>[r.run(Kt(r,e,B0(),"bool"),e)],ac=(r,e)=>[r.run(Kt(r,e,C0()),e)],sc=(r,e)=>[r.run(Kt(r,e,M0(),"bool"),e)],uc=(r,e)=>[r.run(Kt(r,e,z0()),e)],lc=(r,e)=>[r.run(Kt(r,e,N0()),e)],dc=(r,e)=>[r.run(Kt(r,e,P0()),e)],cc=(r,e)=>[r.run(Kt(r,e,L0(),"bool"),e)]});var pc,hc,U0,mc=B(()=>{"use strict";He();pc=(r,e,n)=>(U0(e),[r.cast(e[0],n)]),hc=r=>St.tensorDataTypeFromProto(r.attributes.getInt("to")),U0=r=>{if(!r||r.length!==1)throw new Error("Cast requires 1 input.");if(r[0].type==="string")throw new Error("Invalid input type.")}});var W0,H0,gc,vi,bc=B(()=>{"use strict";rt();ze();fr();un();W0=(r,e)=>({name:"Concat (packed)",inputNames:Array.from({length:r},(n,t)=>`X${t}`),inputTypes:Array(r).fill(2),cacheHint:e}),H0=(r,e,n,t)=>{let o=n[0].dims.slice();if(t>=o.length||t<-1*o.length)throw new Error("axis specified for concat doesn't match input dimensionality");t<0&&(t=o.length+t);let i=o.slice(0);for(let N=1;N<n.length;N++){let k=n[N].dims.slice();for(let U=0;U<o.length;U++)if(U===t)i[t]+=k[U];else if(o[U]!==k[U])throw new Error("non concat dimensions must match")}let s=i.length,a=Cn("coords",s),u=kt(s),l=pr(),d=n.map(N=>N.dims),f=nr(s),p=new Array(d.length-1);p[0]=d[0][t];for(let N=1;N<p.length;N++)p[N]=p[N-1]+d[N][t];let g=f[t],b=f.slice(-2),y=f.join(),T=`if (${g} < ${p[0]}) {
        return getChannel(
            getX0(${y}), vec2(${b.join()}));
        }`;for(let N=1;N<p.length;N++){let k=p[N-1];T+=`
            if (${g} < ${p[N]}  && ${g} >= ${p[N-1]}) {
              return getChannel(
                getX${N}(${vi(f,g,k)}),
                vec2(${vi(b,g,k)}));
            }`}let x=p.length,_=p[p.length-1];T+=`
            return getChannel(
              getX${x}(${vi(f,g,_)}),
              vec2(${vi(b,g,_)}));`;let O=de(r.session.backend.glContext.version),C=`
          ${l}
          float getValue(${f.map(N=>"int "+N)}) {
            ${T}
          }

          void main() {
            ${u} coords = getOutputCoords();
            int lastDim = coords.${f[s-1]};
            coords.${f[s-1]} = coords.${f[s-2]};
            coords.${f[s-2]} = lastDim;

            vec4 result = vec4(getValue(${a}), 0., 0., 0.);

            ${a[s-1]} = ${a[s-1]} + 1;
            if (${a[s-1]} < ${i[s-1]}) {
              result.g = getValue(${a});
            }

            ${a[s-2]} = ${a[s-2]} + 1;
            if (${a[s-2]} < ${i[s-2]}) {
              result.a = getValue(${a});
            }

            ${a[s-1]} = ${a[s-1]} - 1;
            if (${a[s-2]} < ${i[s-2]} &&
                ${a[s-1]} < ${i[s-1]}) {
              result.b = getValue(${a});
            }
            ${O.output} = result;
          }
        `;return{...e,output:{dims:i,type:n[0].type,textureType:2},shaderSource:C,hasMain:!0}},gc=(r,e,n)=>{let t=W0(e.length,n.cacheKey);return{...t,get:()=>H0(r,t,e,n.axis)}},vi=(r,e,n)=>{let t=r.indexOf(e);return r.map((i,s)=>s===t?`${i} - ${n}`:i).join()}});var yc,q0,j0,K0,vc,X0,Y0,Z0,wc,J0,xc=B(()=>{"use strict";xt();ze();bc();yc=(r,e,n)=>(J0(e),r.session.pack&&e[0].dims.length>1?[r.run(gc(r,e,n),e)]:[r.run(K0(r,e,n),e)]),q0=(r,e)=>({name:"Concat",inputNames:Array.from({length:r},(n,t)=>`X${t}`),inputTypes:Array(r).fill(0),cacheHint:e}),j0=(r,e,n,t)=>{let o=n[0].dims.slice();if(t>=o.length||t<-1*o.length)throw new Error("axis specified for concat doesn't match input dimensionality");t<0&&(t=o.length+t);let i=o.slice(0);for(let g=1;g<n.length;g++){let b=n[g].dims.slice();for(let y=0;y<o.length;y++)if(y===t)i[t]+=b[y];else if(o[y]!==b[y])throw new Error("non concat dimensions must match")}let s=i.length,a=new Array(n.length),u=0;for(let g=0;g<a.length;++g)u+=n[g].dims[t],a[g]=u;let l="";n.length<5?l=vc(a):l=X0(a);let d=Y0(n.length,s),f=Z0(a),p=`
        ${d}
        ${f}
        ${l}
        float process(int indices[${s}]) {
          int textureIndex = getTextureWhereDataResides (indices[${t}]);

          if(textureIndex != 0) {
            indices[${t}] = indices[${t}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));
          }

          return fetchDataFromCorrectTexture(textureIndex, indices);
        }`;return{...e,output:{dims:i,type:n[0].type,textureType:0},shaderSource:p}},K0=(r,e,n)=>{let t=q0(e.length,n.cacheKey);return{...t,get:()=>j0(r,t,e,n.axis)}},vc=r=>`int getTextureWhereDataResides(int index) {
      ${r.map((n,t)=>`if(index<${n}) {return ${t};}
`).join("")}
    }`,X0=r=>vc(r),Y0=(r,e)=>{let n=[`float fetchDataFromCorrectTexture(int textureIndex, int indices[${e}]) {`];for(let t=0;t<r;++t)t===0?n.push(`	if (textureIndex == ${t}) { return _X${t}(indices); }`):t===r-1?n.push(`	else { return _X${t}(indices); }`):n.push(`	else if (textureIndex == ${t}) { return _X${t}(indices); }`);return n.push("	}"),n.join(`
`)},Z0=r=>{let e=["int getSizeInConcatAxisValueFromIndex(int index) {"];for(let n=0;n<r.length;++n)n===0?e.push(`	if (index == ${n}) { return ${r[n]}; }`):n===r.length-1?e.push(`	else { return ${r[n]}; }`):e.push(`	else if (index == ${n}) { return ${r[n]}; }`);return e.push("	}"),e.join(`
`)},wc=r=>Ae({axis:r.attributes.getInt("axis")}),J0=r=>{if(!r||r.length<1)throw new Error("too few inputs");let e=r[0].type,n=r[0].dims.length;if(e==="string")throw new Error("string tensor is not supported yet");for(let t of r){if(t.type!==e)throw new Error("input tensors should be one type");if(t.dims.length!==n)throw new Error("input tensors should have the same shape")}}});function Q0(){return Xt("abs")}function ev(){return Xt("acos")}function tv(){return Xt("asin")}function rv(){return Xt("atan")}function nv(){return Xt("ceil")}function ov(){return Xt("cos")}function iv(r){let e="elu";return{body:`
  const float alpha = float(${r});

  float ${e}_(float a) {
    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;
  }
  vec4 ${e}_(vec4 v) {
    return vec4(${e}_(v.x), ${e}_(v.y), ${e}_(v.z), ${e}_(v.w));
  }
  `,name:e,type:0}}function av(){return Xt("exp")}function sv(){return Xt("floor")}function os(r,e){let n="clip";return{body:`
  const float min = float(${r});
  const float max = float(${e});

  float ${n}_(float a) {
    return clamp(a, min, max);
  }
  vec4 ${n}_(vec4 v) {
    return clamp(v, min, max);
  }
  `,name:n,type:0}}function uv(){let r="indentity";return{body:`
  float ${r}_(float a) {
    return a;
  }
  vec4 ${r}_(vec4 v) {
    return v;
  }
  `,name:r,type:0}}function lv(r){let e="leakyRelu";return{body:`
  const float alpha = float(${r});

  float ${e}_(float a) {
    return a < 0.0 ? a * alpha : a;
  }
  vec4 ${e}_(vec4 v) {
    return vec4(${e}_(v.x), ${e}_(v.y), ${e}_(v.z), ${e}_(v.w));
  }
  `,name:e,type:0}}function dv(){return Xt("log")}function cv(){let r="neg";return{body:`
  float ${r}_(float a) {
    return -a;
  }
  vec4 ${r}_(vec4 v) {
    return -v;
  }
  `,name:r,type:0}}function fv(){let r="not";return{body:`
  float ${r}_(float a) {
    return float( ! bool(a) );
  }
  bool ${r}_(bool a) {
    return !a;
  }
  vec4 ${r}_(vec4 v) {
    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));
  }
  bvec4 ${r}_(bvec4 v) {
    return bvec4(!v.x, !v.y, !v.z, !v.w);
  }
  `,name:r,type:0}}function pv(){return Xt("sin")}function is(){let r="relu";return{body:`
  float ${r}_(float a) {
    return max( a, 0.0 );
  }
  vec4 ${r}_(vec4 v) {
    return max( v, 0.0 );
  }
  `,name:r,type:0}}function as(){let r="sigmoid";return{body:`
  float ${r}_(float a) {
    return 1.0 / (1.0 + exp(-a));
  }
  vec4 ${r}_(vec4 v) {
    return 1.0 / (1.0 + exp(-v));
  }
  `,name:r,type:0}}function hv(){return Xt("sqrt")}function mv(){return Xt("tan")}function gv(){let r="tanh";return{body:`
  float ${r}_(float a) {
    a = clamp(a, -10., 10.);
    a = exp(2.*a);
    return (a - 1.) / (a + 1.);
  }
  vec4 ${r}_(vec4 v) {
    v = clamp(v, -10., 10.);
    v = exp(2.*v);
    return (v - 1.) / (v + 1.);
  }
  `,name:r,type:0}}function Xt(r){return{body:`
  float ${r}_(float a) {
    return ${r}(a);
  }
  vec4 ${r}_(vec4 v) {
    return ${r}(v);
  }
  `,name:r,type:0}}var bv,ft,$c,Tc,_c,Sc,ss,Ic,Ac,yv,Oc,Ec,Cc,Pc,kc,Dc,us,Bc,Rc,Mc,Lc,zc,Nc,Fc,Vc,Gc,Uc,Wc,ls=B(()=>{"use strict";xt();He();Cr();rt();ze();bv=(r,e,n,t)=>{let o=r.session.pack?2:0,i=de(r.session.backend.glContext.version);return{...e,output:{dims:n.dims,type:n.type,textureType:o},shaderSource:`
     ${t.body}
     void main() {
       vec4 v = ${i.texture2D}(A, TexCoords);
       v = ${t.name}_(v);
       ${i.output} = v;
     }
     `,hasMain:!0}},ft=(r,e,n,t)=>{let o=r.session.pack?2:0,i={name:n.name,inputTypes:[o],inputNames:["A"],cacheHint:t};return{...i,get:()=>bv(r,i,e,n)}},$c=(r,e)=>[r.run(ft(r,e[0],Q0()),e)],Tc=(r,e)=>[r.run(ft(r,e[0],ev()),e)],_c=(r,e)=>[r.run(ft(r,e[0],tv()),e)],Sc=(r,e)=>[r.run(ft(r,e[0],rv()),e)],ss=(r,e,n)=>[r.run(ft(r,e[0],os(n.min,n.max),n.cacheKey),e)],Ic=r=>Ae({min:r.attributes.getFloat("min",on),max:r.attributes.getFloat("max",an)}),Ac=(r,e)=>{let n=yv(r,e);return ss(r,[e[0]],n)},yv=(r,e)=>{if(e.length>=3&&(!r.session.isInitializer(e[1].dataId)||!r.session.isInitializer(e[2].dataId)))throw new Error("dynamic clip attributes are not allowed");let n=e.length>=3?e[1].numberData[0]:on,t=e.length>=3?e[2].numberData[0]:an;return Ae({min:n,max:t})},Oc=(r,e)=>[r.run(ft(r,e[0],nv()),e)],Ec=(r,e)=>[r.run(ft(r,e[0],ov()),e)],Cc=(r,e,n)=>[r.run(ft(r,e[0],iv(n.alpha),n.cacheKey),e)],Pc=r=>Ae({alpha:r.attributes.getFloat("alpha",1)}),kc=(r,e)=>[r.run(ft(r,e[0],av()),e)],Dc=(r,e)=>[r.run(ft(r,e[0],sv()),e)],us=(r,e)=>[r.run(ft(r,e[0],uv()),e)],Bc=(r,e,n)=>[r.run(ft(r,e[0],lv(n.alpha),n.cacheKey),e)],Rc=r=>Ae({alpha:r.attributes.getFloat("alpha",.01)}),Mc=(r,e)=>[r.run(ft(r,e[0],dv()),e)],Lc=(r,e)=>[r.run(ft(r,e[0],cv()),e)],zc=(r,e)=>[r.run(ft(r,e[0],fv()),e)],Nc=(r,e)=>[r.run(ft(r,e[0],is()),e)],Fc=(r,e)=>[r.run(ft(r,e[0],as()),e)],Vc=(r,e)=>[r.run(ft(r,e[0],pv()),e)],Gc=(r,e)=>[r.run(ft(r,e[0],hv()),e)],Uc=(r,e)=>[r.run(ft(r,e[0],mv()),e)],Wc=(r,e)=>[r.run(ft(r,e[0],gv()),e)]});function hr(r){let e;switch(r.activation){case"Relu":e=is();break;case"Sigmoid":e=as();break;case"Clip":e=os(r.clipMin,r.clipMax);break;default:return{activationFunction:"",applyActivation:""}}let n=e.name,t=e.body,o=`value = ${n}_(value);`;return{activationFunction:t,applyActivation:o}}var Pn,ln=B(()=>{"use strict";He();ls();Pn=r=>{let e=r.getString("activation","");if(e==="Clip"){let[n,t]=r.getFloats("activation_params",[on,an]);return{activation:e,clipMax:t,clipMin:n,activationCacheKey:`${e}:${n},${t}`}}return{activation:e,activationCacheKey:e}}});var wv,xv,Hc,qc=B(()=>{"use strict";Ut();rt();ze();wi();ln();wv=(r,e)=>({name:"GroupedConv",inputNames:r?["X","W","Bias"]:["X","W"],inputTypes:r?[0,0,0]:[0,0],cacheHint:e}),xv=(r,e,n,t)=>{let i=e.length>2?"value += getBias(output_channel);":"",s=e[0].dims.slice(),a=e[1].dims.slice(),u=a[0]/t.group;je.verbose("GroupedConv",`autpPad:${t.autoPad}, dilations:${t.dilations}, group:${t.group}, kernelShape:${t.kernelShape}, pads:${t.pads}, strides:${t.strides}`);let l=kn(s,a,t.dilations,t.pads,t.strides),d=de(r.session.backend.glContext.version),{activationFunction:f,applyActivation:p}=hr(t),g=`
  const ivec2 strides = ivec2(${t.strides[0]}, ${t.strides[1]});
  const ivec2 pads = ivec2(${t.pads[0]}, ${t.pads[1]});
  ${f}
  void main() {
    ivec4 coords = getOutputCoords();
    int batch = coords.x;
    int output_channel = coords.y;
    ivec2 xRCCorner = coords.zw * strides - pads;
    int group_id = output_channel / ${u};

    float value = 0.0;
    for (int wInChannel = 0; wInChannel < ${a[1]}; wInChannel++) {
      int input_channel = group_id * ${a[1]} + wInChannel;
      for (int wHeight = 0; wHeight < ${a[2]}; wHeight++) {
        int xHeight = xRCCorner.x + wHeight * ${t.dilations[0]};

        if (xHeight < 0 || xHeight >= ${s[2]}) {
          continue;
        }

        for (int wWidth = 0; wWidth < ${a[3]}; wWidth++) {
          int xWidth = xRCCorner.y + wWidth * ${t.dilations[1]};
          if (xWidth < 0 || xWidth >= ${s[3]}) {
            continue;
          }

          float xVal = getX(batch, input_channel, xWidth, xHeight);
          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);
          value += xVal*wVal;
        }
      }
    }
    ${i}
    ${p}
    ${d.output} = vec4(value, .0, .0, .0);
  }
`;return{...n,output:{dims:l,type:e[0].type,textureType:0},shaderSource:g,hasMain:!0}},Hc=(r,e,n)=>{let t=wv(e.length>2,n.cacheKey);return{...t,get:()=>xv(r,e,t,n)}}});var $v,Tv,jc,Kc=B(()=>{"use strict";rt();ze();un();$v=r=>({name:"Im2Col (packed)",inputNames:["A"],inputTypes:[2],cacheHint:r}),Tv=(r,e,n,t,o,i)=>{let s=n.dims,a=t.dims,u=2,l=3,d=o.length,f=[a[1]*a[2]*a[3],o[2]*o[3]],p=a[2]*a[3],g=pr(),b=de(r.session.backend.glContext.version),y="";for(let x=0;x<=1;x++)for(let _=0;_<=1;_++)y+=`
            blockIndex = rc.x + ${_};
            pos = rc.y + ${x};

            if(blockIndex < ${f[1]} && pos < ${f[0]}) {
              offsetY = int(blockIndex / (${o[d-1]})) * ${i.strides[0]} -
                ${i.pads[0]};
              d0 = offsetY + ${i.dilations[0]} * (imod(pos, ${p}) / ${a[2]});

              if(d0 < ${s[u]} && d0 >= 0) {
                offsetX = imod(blockIndex, ${o[d-1]}) * ${i.strides[1]} -
                  ${i.pads[1]};
                d1 = offsetX + ${i.dilations[1]} * imod(imod(pos, ${p}), ${a[2]});

                if(d1 < ${s[l]} && d1 >= 0) {

                  ch = int(float(pos)/ ${p}.);
                    innerDims = vec2(d0, d1);
                    result[${x*2+_}] = getChannel(
                      getA(0, ch, int(innerDims.x),
                      int(innerDims.y)), innerDims);
                }
              }
            }

          `;let T=`
      ${g}

      void main() {
        ivec2 rc = getOutputCoords();
          vec4 result = vec4(0.0);
          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
          vec2 innerDims;
          ${y}
          ${b.output} = result;
      }
            `;return{...e,output:{dims:f,type:n.type,textureType:2},shaderSource:T,hasMain:!0}},jc=(r,e,n,t,o)=>{let i=$v(o.cacheKey);return{...i,get:()=>Tv(r,i,e,n,t,o)}}});function Sv(r,e,n){let t=e[0].dims,o=e[1].dims,i=Pt.calcShape(t,o,!0);if(!i)throw new Error("Can't use matmul on the given tensors");let s=kt(i.length),a=nr(),{activationFunction:u,applyActivation:l}=hr(n),d=e.length>2,f=d?"value += getBiasForMatmul();":"",p=d?`${cs(s,a,e[2].dims,i,!1)}`:"",g=i.length,b=t.length,y=o.length,T=t[t.length-1],x=`
    ${u}
    ${p}
    float process(int indices[${g}]) {
        int a[${b}];
        int b[${y}];
        bcastMatmulIndices_A(indices, a);
        bcastMatmulIndices_B(indices, b);

        float value;
        for (int k=0; k<${T}; ++k) {
            a[${b-1}] = k;
            b[${y-2}] = k;
            value += _A(a) * _B(b);
        }
        ${f}
        ${l}
        return value;
    }`;return{...r,output:{dims:i,type:e[0].type,textureType:0},shaderSource:x}}function ds(r,e){let n=_v(r.length>2,e.activationCacheKey);return{...n,get:()=>Sv(n,r,e)}}function cs(r,e,n,t,o){let i="",s=n.length,a=t.length,u=a-s;a<2&&s>0?i="coords":i=n.map((y,T)=>`coords.${e[T+u]}`).join(", ");let d=Pt.getBroadcastDims(n,t).map(y=>`coords.${e[y+u]} = 0;`).join(`
`),p=oe.size(n)===1,g="vec4(outputValue.xx, outputValue.yy)";return p&&(g="vec4(outputValue.x)"),o?`
vec4 getBiasForMatmul() {
  ${r} coords = getOutputCoords();
  ${d}
  vec4 outputValue = getBias(${i});
  return ${g};
}`:`
float getBiasForMatmul() {
  ${r} coords = getOutputCoords();
  ${d}
  return getBias(coords.x);
}`}var Xc,Yc,_v,Iv,xi=B(()=>{"use strict";He();ze();fr();ln();fs();Xc=(r,e,n)=>(Iv(e),r.session.pack?[r.run($i(r,e,n),e)]:[r.run(ds(e,n),e)]),Yc=r=>Pn(r.attributes),_v=(r,e)=>({name:"MatMul",inputNames:r?["A","B","Bias"]:["A","B"],inputTypes:r?[0,0,0]:[0,0],cacheHint:e});Iv=r=>{if(!r||r.length!==2)throw new Error("MatMul requires 2 inputs.");if(r[0].dims[r[0].dims.length-1]!==r[1].dims[r[1].dims.length-2])throw new Error("shared dimension does not match.");if(r[0].type!=="float32"&&r[0].type!=="float64"||r[1].type!=="float32"&&r[1].type!=="float64")throw new Error("inputs should be float type");if(r[0].type!==r[1].type)throw new Error("inputs types should match")}});function Ev(r,e,n,t){let o=[],i=[],s=n[0].dims,a=n[1].dims,u=s.length,l=a.length,d=t.length,f=d-u,p=d-l;o=s.map((O,C)=>`coords.${e[C+f]}`),o[u-1]="i*2",o.join(", "),i=a.map((O,C)=>`coords.${e[C+p]}`),i[l-2]="i*2",i.join(", ");let g=Pt.getBroadcastDims(s,t),b=Pt.getBroadcastDims(a,t),y=g.map(O=>`coords.${e[O+f]} = 0;`).join(`
`),T=b.map(O=>`coords.${e[O+p]} = 0;`).join(`
`),x=`int lastDim = coords.${e[d-1]};
  coords.${e[d-1]} = coords.${e[d-2]};
  coords.${e[d-2]} = lastDim;`;return`
vec4 getAAtOutCoordsMatmul(int i) {
  ${r} coords = getOutputCoords();
  ${x}
  ${y}
  vec4 outputValue = getA(${o});
  return outputValue;
}

vec4 getBAtOutCoordsMatmul(int i) {
  ${r} coords = getOutputCoords();
  ${x}
  ${T}
  vec4 outputValue = getB(${i});
  return outputValue;
}`}function Cv(r,e){let n="";for(let t=0;t<e-2;t++)n+=`rc.${r[t]}, `;return n+=`rc.${r[e-2]}, i*2`,n}function Pv(r,e){let n="";for(let t=0;t<e-2;t++)n+=`rc.${r[t]}, `;return n+=`i*2, rc.${r[e-1]}`,n}var Av,Ov,$i,fs=B(()=>{"use strict";He();rt();ze();fr();ln();xi();Av=(r,e)=>({name:"MatMul (packed)",inputNames:r?["A","B","Bias"]:["A","B"],inputTypes:r?[2,2,2]:[2,2],cacheHint:e}),Ov=(r,e,n,t)=>{let o=n.length>2,i=o?"value += getBiasForMatmul();":"",s=n[0].dims,a=n[1].dims,u=Pt.calcShape(s,a,!0),l=!oe.areEqual(n[0].dims,n[1].dims);if(!u)throw new Error("Can't use matmul on the given tensors");let d=s[s.length-1],f=Math.ceil(d/2),p=s.length,g=a.length,b=de(r.session.backend.glContext.version),y=kt(u.length),T=u.length,x=nr(),{activationFunction:_,applyActivation:O}=hr(t),C=o?`${cs(y,x,n[2].dims,u,!0)}`:"",N=l?`${Ev(y,x,n,u)}`:"",k=l?"getAAtOutCoordsMatmul(i)":`getA(${Cv(x,p)})`,U=l?"getBAtOutCoordsMatmul(i)":`getB(${Pv(x,g)})`,G=l?"":`${y} rc =
          getOutputCoords(); int lastDim = rc.${x[T-1]}; rc.${x[T-1]} =
          rc.${x[T-2]}; rc.${x[T-2]} = lastDim;
      `,H=`
            ${N}
            ${C}
            ${_}
            void main() {
              ${G}

              vec4 value = vec4(0);
              for (int i = 0; i < ${f}; i++) {
                vec4 a = ${k};
                vec4 b = ${U};

                value += (a.rrbb * b.rgrg);
                value += (a.ggaa * b.baba);
              }
              ${i}
              ${O}
              ${b.output} = value;
            }`;return{...e,output:{dims:u,type:n[0].type,textureType:2},shaderSource:H,hasMain:!0}},$i=(r,e,n)=>{let t=Av(e.length>2,n.activationCacheKey);return{...t,get:()=>Ov(r,t,e,n)}}});var Zc,Jc=B(()=>{"use strict";wi();Kc();fs();Zc=(r,e,n)=>{let t=e[0].dims,o=e[1].dims,i=kn(t,o,n.dilations,n.pads,n.strides),s=r.run(jc(r,e[0],e[1],i,n),[e[0]]),a=r.reshapePacked(e[1],[o[0],o[1]*o[2]*o[3]]),u=e.length===3?[a,s,e[2]]:[a,s],l=r.run($i(r,u,n),u);return r.reshapePacked(l,i)}});var kv,Dv,Qc,ps,hs=B(()=>{"use strict";ze();kv=r=>({name:"Im2Col",inputNames:["X"],inputTypes:[0],cacheHint:r}),Dv=(r,e,n,t,o,i)=>{let s=n.dims,a=t.dims,u=o.length,l=ps(s,a,o,4),d=`
        const int XC = ${s[1]};
        const int XH = ${s[2]};
        const int XW = ${s[3]};
        const int KH = ${i.kernelShape[0]};
        const int KW = ${i.kernelShape[1]};
        const int dilationH = ${i.dilations[0]};
        const int dilationW = ${i.dilations[1]};
        const int strideH = ${i.strides[0]};
        const int strideW = ${i.strides[1]};
        const int padH = ${i.pads[0]};
        const int padW = ${i.pads[1]};
        const int KHKW = KH*KW;
        const int XCKHKW = XC * KHKW;
        const int outputChannels = 4;
        vec4 process(int indices[${u}]) {
          int b  = indices[0]; // batch size
          int oh = indices[1] * strideH - padH; //output height
          int ow = indices[2] * strideW - padW; //output width
          int p = indices[3] * outputChannels; //patch
          vec4 value = vec4(0.0);
          for(int i=0; i < outputChannels; ++i) {
            if(p < XCKHKW) {
              int patchC = p / KHKW;
              int patchH = (p - patchC*KHKW) / KW;
              int patchW = (p - patchC*KHKW) - patchH * KW;
              int xh2 = oh + patchH * dilationH;
              int xw2 = ow + patchW * dilationW;
              int x[${s.length}];
              x[0] = b;
              x[1] = patchC;
              x[2] = xh2;
              x[3] = xw2;
              if(xh2 >= 0 &&
                  xh2 < XH &&
                  xw2 >= 0 &&
                  xw2 < XW) {
                value[i] = _X(x);
              }
            }
            ++p;
          }
          return value;
        }
        `;return{...e,output:{dims:l,type:n.type,textureType:4},shaderSource:d}},Qc=(r,e,n,t,o)=>{let i=kv(o.cacheKey);return{...i,get:()=>Dv(r,i,e,n,t,o)}},ps=(r,e,n,t=4)=>[n[0],n[2],n[3],Math.ceil(r[1]*e[2]*e[3]/t)]});var Bv,Rv,ef,tf=B(()=>{"use strict";He();rt();ze();ln();hs();Bv=(r,e)=>({name:"ConvDotProduct",inputNames:r?["Im2Col","K","B"]:["Im2Col","K"],inputTypes:r?[0,4,0]:[0,4],cacheKey:e.activationCacheKey}),Rv=(r,e,n,t,o)=>{let i=n[0].dims,s=n[1].dims,a=[s[0],Math.ceil(i[1]*s[2]*s[3]/4)],u=ps(i,s,t),[l,d]=r.calculateTextureWidthAndHeight(a,4),f=oe.computeStrides(u),[p,g]=r.calculateTextureWidthAndHeight(u,4),b=t.length,y=n.length<3?"0.0":"_B(b)",T=Math.ceil(i[1]*s[2]*s[3]/4),{activationFunction:x,applyActivation:_}=hr(o),O=de(r.session.backend.glContext.version),C=`
${x}
float process(int indices[${b}]) {
  int b[1];
  b[0] = indices[1];
  int im2col[4];
  im2col[0] = indices[0];
  im2col[1] = indices[2];
  im2col[2] = indices[3];
  int im2colOffset = im2col[0] * ${f[0]} + im2col[1] * ${f[1]} + im2col[2] * ${f[2]};
  int kernelOffset = indices[1] * ${a[1]};
  float value = ${y};
  for (int i = 0; i < ${T}; ++i) {
    vec2 im2colCoords = offsetToCoords(im2colOffset, ${p}, ${g});
    vec2 kernelCoords = offsetToCoords(kernelOffset, ${l}, ${d});
    value += dot(${O.texture2D}(Im2Col, im2colCoords), ${O.texture2D}(K, kernelCoords));
    ++im2colOffset;
    ++kernelOffset;
  }
  ${_}
  return value;
}`;return{...e,output:{dims:t,type:n[0].type,textureType:0},shaderSource:C}},ef=(r,e,n,t)=>{let o=Bv(e.length>2,t);return{...o,get:()=>Rv(r,o,e,n,t)}}});var kn,ms,Mv,Lv,zv,Nv,gs,Fv,wi=B(()=>{"use strict";xt();He();qc();Jc();tf();ln();hs();xi();kn=(r,e,n,t,o)=>{let i=r[0],s=r.slice(2),a=s.length,u=e[0],d=e.slice(2).map((b,y)=>b+(b-1)*(n[y]-1)),p=s.map((b,y)=>b+t[y]+t[y+a]).map((b,y)=>Math.floor((b-d[y]+o[y])/o[y]));return[i,u].concat(...p)},ms=(r,e,n)=>(Fv(e,n),Mv(r,e,n)),Mv=(r,e,n)=>{let t=Nv(n,e),o=r.session.pack,i=t.kernelShape[0]===1&&t.kernelShape[1]===1;return t.group>1?[r.run(Hc(r,e,t),e)]:i&&o?[Lv(r,e,t)]:o&&e[0].dims.length===4&&e[0].dims[0]===1&&!i?[Zc(r,e,t)]:[zv(r,e,t)]},Lv=(r,e,n)=>{let t=e[0].dims,o=e[1].dims,i=kn(t,o,n.dilations,n.pads,n.strides),s=r.reshapeUnpacked(e[0],[t[1],t[2]*t[3]]),a=r.reshapeUnpacked(e[1],[o[0],o[1]]),u=e.length>2?[a,s,e[2]]:[a,s],l=r.run(ds(u,n),u);return r.reshapeUnpacked(l,i)},zv=(r,e,n)=>{let t=e[0].dims,o=e[1].dims,i=kn(t,o,n.dilations,n.pads,n.strides),s=r.run(Qc(r,e[0],e[1],i,n),[e[0]]),a=e.length===3?[s,e[1],e[2]]:[s,e[1]];return r.run(ef(r,e,i,n),a)},Nv=(r,e)=>{let n=r.kernelShape.slice();if(r.kernelShape.length===0)for(let i=2;i<e[1].dims.length;++i)n.push(e[1].dims[i]);let t=r.pads.slice();nn.adjustPadsBasedOnAutoPad(e[0].dims,r.strides,r.dilations,n,t,r.autoPad);let o=Object.assign({},r);return Object.assign(o,{kernelShape:n,pads:t,cacheKey:r.cacheKey}),o},gs=r=>{let e=r.attributes,n=Pn(e),t=e.getString("auto_pad","NOTSET"),o=e.getInts("dilations",[1,1]),i=e.getInt("group",1),s=e.getInts("kernel_shape",[]),a=e.getInts("pads",[0,0,0,0]),u=e.getInts("strides",[1,1]);return Ae({autoPad:t,dilations:o,group:i,kernelShape:s,pads:a,strides:u,...n})},Fv=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4||r[1].dims.length!==4)throw new Error("currently only support 2-dimensional conv");let n=r[0].dims[1],t=r[1].dims[1]*e.group;if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(r.length===3&&(r[2].dims.length!==1||r[1].dims[0]!==r[2].dims[0]))throw new Error("invalid bias");let o=r[0].dims.length-2;if(e.dilations.length!==o)throw new Error(`dilations should be ${o}D`);if(e.strides.length!==o)throw new Error(`strides should be ${o}D`);if(e.pads.length!==o*2)throw new Error(`pads should be ${o*2}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape");if(r[0].type!=="float32"||r[1].type!=="float32")throw new Error("Conv input(X,W) should be float tensor");if(r.length===3&&r[2].type!=="float32")throw new Error("Conv input(bias) should be float tensor")}});var Vv,Gv,Uv,rf,Wv,Hv,qv,jv,Kv,Xv,nf,Yv,of=B(()=>{"use strict";xt();rt();ze();ln();Vv=(r,e,n,t,o,i)=>(r-1)*e+n+(t-1)*o+1-i,Gv=(r,e,n,t,o)=>{let i=Math.floor(r/2);e==="SAME_UPPER"?(n[t]=i,n[o]=r-i):e==="SAME_LOWER"&&(n[t]=r-i,n[o]=i)},Uv=(r,e,n,t,o,i,s,a)=>{let u=r.length-2,l=a.length===0;for(let d=0;d<u;++d){let f=l?r[d+2]*i[d]:a[d],p=Vv(r[d+2],i[d],o[d],e[d],n[d],f);Gv(p,t,o,d,d+u),l&&a.push(i[d]*(r[d+2]-1)+s[d]+(e[d]-1)*n[d]+1-o[d]-o[d+u])}},rf=(r,e,n)=>(Yv(e,n),Wv(r,e,n)),Wv=(r,e,n)=>{let t=Xv(n,e);return[Kv(r,e,t)]},Hv=(r,e)=>({name:"ConvTranspose",inputNames:r?["X","W","B"]:["X","W"],inputTypes:r?[0,0,0]:[0,0],cacheHint:e}),qv=(r,e,n,t)=>{let i=e.length>2?"getB(output_channel)":"0.0",s=e[0].dims,a=e[1].dims,u=a[1],l=a[0]/t.group,d=[e[0].dims[0],e[1].dims[1]*t.group,...t.outputShape],f=de(r.session.backend.glContext.version),{activationFunction:p,applyActivation:g}=hr(t),b=`
  const ivec2 strides = ivec2(${t.strides[0]}, ${t.strides[1]});
  const ivec2 pads = ivec2(${t.pads[0]}, ${t.pads[1]});
  ${p}
  void main() {
    ivec4 coords = getOutputCoords();
    int batch = coords.x;
    int output_channel = coords.y;

    ivec2 loc = coords.zw + pads;

    int group_id = output_channel / ${u};
    int wOutChannel = output_channel - group_id * ${u};

    float value = ${i};
    for (int inChannelOffset = 0; inChannelOffset < ${l}; inChannelOffset++) {
      int input_channel = group_id * ${l} + inChannelOffset;
      for (int wWOff = 0; wWOff < ${a[2]}; wWOff++) {
        for (int wHOff = 0; wHOff < ${a[3]}; wHOff++) {
          ivec2 wOff = ivec2(wWOff * ${t.dilations[0]}, wHOff * ${t.dilations[1]});
          ivec2 wLoc = loc - wOff;
          ivec2 wLocIn = wLoc / strides;
          if (
            wLocIn * strides == wLoc &&
            wLocIn.x >= 0 && wLocIn.x < ${s[2]} &&
            wLocIn.y >= 0 && wLocIn.y < ${s[3]}
          ) {
            float xVal = getX(batch, input_channel, wLocIn.y, wLocIn.x);
            float wVal = getW(input_channel, wOutChannel, wHOff, wWOff);
            value += xVal * wVal;
          }
        }
      }
    }
    ${g}
    ${f.output} = vec4(value, .0, .0, .0);
  }
`;return{...n,output:{dims:d,type:e[0].type,textureType:0},shaderSource:b,hasMain:!0}},jv=(r,e,n)=>{let t=Hv(e.length>2,n.cacheKey);return{...t,get:()=>qv(r,e,t,n)}},Kv=(r,e,n)=>r.run(jv(r,e,n),e),Xv=(r,e)=>{let n=r.kernelShape.slice();if(r.kernelShape.length===0)for(let a=2;a<e[1].dims.length;++a)n.push(e[1].dims[a]);let t=r.pads.slice(),o=r.outputShape.slice(),i=e[0].dims;Uv(i,n,r.dilations,r.autoPad,t,r.strides,r.outputPadding,o);let s=Object.assign({},r);return Object.assign(s,{kernelShape:n,pads:t,outputShape:o,cacheKey:r.cacheKey}),s},nf=r=>{let e=r.attributes,n=Pn(e),t=e.getString("auto_pad","NOTSET"),o=e.getInts("dilations",[1,1]),i=e.getInt("group",1),s=e.getInts("kernel_shape",[]),a=e.getInts("output_padding",[0,0]),u=e.getInts("output_shape",[]),l=e.getInts("pads",[0,0,0,0]),d=e.getInts("strides",[1,1]);return Ae({autoPad:t,dilations:o,group:i,kernelShape:s,outputPadding:a,outputShape:u,pads:l,strides:d,...n})},Yv=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4||r[1].dims.length!==4)throw new Error("currently only support 2-dimensional conv");let n=r[0].dims[1],t=r[1].dims[0];if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let o=r[1].dims[1]*e.group;if(r.length===3&&(r[2].dims.length!==1||r[2].dims[0]!==o))throw new Error("invalid bias");let i=r[0].dims.length-2;if(e.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(e.strides.length!==i)throw new Error(`strides should be ${i}D`);if(e.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(e.outputPadding.length!==i)throw new Error(`output_padding should be ${i}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape");if(e.outputShape.length!==0&&e.outputShape.length!==r[0].dims.length-2)throw new Error("invalid output shape");if(r[0].type!=="float32"||r[1].type!=="float32")throw new Error("ConvTranspose input(X,W) should be float tensor");if(r.length===3&&r[2].type!=="float32")throw new Error("ConvTranspose input(bias) should be float tensor")}});var af,dn,sf,Zv,uf,Jv,Qv,ew,Ti=B(()=>{"use strict";xt();He();ze();af={name:"Transpose",inputNames:["A"],inputTypes:[0]},dn=(r,e,n)=>(ew(e),[r.run({...af,cacheHint:n.cacheKey,get:()=>Zv(r,e[0],n.perm)},e)]),sf=r=>Ae({perm:r.attributes.getInts("perm",[])}),Zv=(r,e,n)=>{let t=e.dims;n=uf(t,n);let o=Jv(t,n),i=t.length,s=`
      ${Qv("perm",n,i)}
      float process(int indices[${i}]) {
        int a[${i}];
        perm(a, indices);
        return _A(a);
      }`;return{...af,output:{dims:o,type:e.type,textureType:0},shaderSource:s}},uf=(r,e)=>(e&&e.length!==r.length&&(e=[...r.keys()].reverse()),e),Jv=(r,e)=>(e=uf(r,e),oe.sortBasedOnPerm(r,e)),Qv=(r,e,n)=>{let t=[];t.push(`void ${r}(out int a[${n}], int src[${n}]) {`);for(let o=0;o<n;++o)t.push(`	a[${e[o]}]=src[${o}];`);return t.push("	}"),t.join(`
`)},ew=r=>{if(!r||r.length!==1)throw new Error("Transpose requires 1 input.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("input should be float tensor")}});var lf,df,tw,cf=B(()=>{"use strict";Ti();lf=(r,e,n)=>{tw(e);let t=n.blocksize,o=t*t,i=n.mode==="DCR"?[0,3,4,1,5,2]:[0,1,4,2,5,3],s=n.mode==="DCR"?[e[0].dims[0],t,t,e[0].dims[1]/o,e[0].dims[2],e[0].dims[3]]:[e[0].dims[0],e[0].dims[1]/o,t,t,e[0].dims[2],e[0].dims[3]],a=r.reshapeUnpacked(e[0],s),u={perm:i,cacheKey:`${i}`},[l]=dn(r,[a],u),d=[e[0].dims[0],e[0].dims[1]/o,e[0].dims[2]*t,e[0].dims[3]*t];return[r.reshapeUnpacked(l,d)]},df=r=>{let e=r.attributes.getInt("blocksize");if(e<1)throw new Error(`blocksize must be >= 1, but got : ${e} for DepthToSpace`);let n=r.attributes.getString("mode","DCR");if(n!=="DCR"&&n!=="CRD")throw new Error(`unrecognized mode: ${n} for DepthToSpace`);return{mode:n,blocksize:e}},tw=r=>{if(r.length!==1)throw new Error(`DepthToSpace expect 1 inputs, but got ${r.length}`);if(r[0].type==="string"||r[0].dims.length!==4)throw new TypeError("DepthToSpace input should be a 4-D numeric tensor")}});var ff,pf,rw,hf=B(()=>{"use strict";He();ff=(r,e,n)=>{rw(e,n);let t=oe.flattenShape(e[0].dims,n);return[r.reshapeUnpacked(e[0],t)]},pf=r=>r.attributes.getInt("axis",1),rw=(r,e)=>{if(!r||r.length!==1)throw new Error("Flatten requires 1 input.");let n=r[0].dims.length;if(n===0)throw new Error("scalar tensor is not supported.");if(e<-n||e>n)throw new Error("Invalid axis");if(r[0].type==="string")throw new Error("string tensor is not supported.")}});var Nr,go=B(()=>{"use strict";Nr=["float32","float64","int32","int16","int8","uint16","uint32","uint8"]});var mf,gf,nw,ow,iw,aw,bf=B(()=>{"use strict";xt();go();He();ze();mf=(r,e,n)=>(aw(e,n.axis),[r.run(iw(r,e,n),e)]),gf=r=>Ae({axis:r.attributes.getInt("axis",0)}),nw={name:"Gather",inputNames:["A","B"],inputTypes:[0,0]},ow=(r,e,n,t)=>{let o=n[0].dims.slice(),i=n[1].dims.slice(),s=new Array(o.length+i.length-1);t=oe.normalizeAxis(t,o.length);let a=[];for(let p=0;p<s.length;p++)p<t?(s[p]=o[p],a.push(`inputIdx[${p}] = outputIdx[${p}];`)):p<t+i.length?(s[p]=i[p-t],a.push(`indexDataIdx[${p-t}] = outputIdx[${p}];`)):(s[p]=o[p-i.length+1],a.push(`inputIdx[${p-i.length+1}] = outputIdx[${p}];`));let u=s.length||1,l=o.length,d=i.length||1,f=`
      float process(int outputIdx[${u}]) {
        int inputIdx[${l}];
        int indexDataIdx[${d}];
        indexDataIdx[0] = 0;
        ${a.join(`
        `)}
        int idx = int(_B(indexDataIdx));
        inputIdx[${t}] = idx < 0 ? idx + ${o[t]} : idx;
        return _A(inputIdx);
      }`;return{...e,output:{dims:s,type:n[0].type,textureType:0},shaderSource:f}},iw=(r,e,n)=>{let t={...nw,cacheHint:n.cacheKey};return{...t,get:()=>ow(r,t,e,n.axis)}},aw=(r,e)=>{if(!r||r.length!==2)throw new Error("Gather requires 2 inputs.");let n=r[0].dims.length;if(n<1)throw new Error("Invalid input shape.");if(e<-n||e>n-1)throw new Error("Invalid axis.");if(Nr.indexOf(r[0].type)===-1)throw new Error("Invaid input type.");if(r[1].type!=="int32"&&r[1].type!=="int16")throw new Error("Invaid input type.")}});var bs,yf,vf,wf,sw,uw,lw,xf=B(()=>{"use strict";xt();He();ze();bs=(r,e,n)=>(lw(e,n),[r.run(sw(e,n),e)]),yf=(r,e)=>{let n=r.attributes.getInt("transA",0)!==0,t=r.attributes.getInt("transB",0)!==0,o=r.attributes.getFloat("alpha",1),i=r.attributes.getFloat("beta",1);return Ae({transA:n,transB:t,alpha:o,beta:i,isOptionalC:e})},vf=r=>yf(r,!1),wf=r=>yf(r,!0),sw=(r,e)=>{let n={name:"Gemm",inputNames:r.length===3?["A","B","C"]:["A","B"],inputTypes:r.length===3?[0,0,0]:[0,0],key:e.cacheKey};return{...n,get:()=>uw(n,r,e)}},uw=(r,e,n)=>{let t=e[0].dims.slice(),o=e[1].dims.slice(),[i,s]=fi.getShapeOfGemmResult(t,n.transA,o,n.transB,e.length===3?e[2].dims:void 0),a=[i,s];if(!a)throw new Error("Can't use gemm on the given tensors");let u=t[t.length-1],l="";n.transA&&(u=t[0]),n.transA&&n.transB?l="value += _A_T(a) * _B_T(b);":n.transA&&!n.transB?l="value += _A_T(a) * _B(b);":!n.transA&&n.transB?l="value += _A(a) * _B_T(b);":!n.transA&&!n.transB&&(l="value += _A(a) * _B(b);");let d=a.length,f=e.length===3?`int c[${e[2].dims.length}];`:"",p=e.length===3?"bcastIndices_C(indices, c);":"",g=e.length===3?"value += beta * _C(c);":"",b=`
      float process(int indices[${d}]) {
          int a[${d}];
          int b[${d}];
          ${f}

          copyVec(indices, a);
          copyVec(indices, b);
          ${p}

          float value = 0.0;
          for (int k=0; k<${u}; ++k) {
              a[${d-1}] = k;
              b[${d-2}] = k;
              ${l}
          }

          value = value * alpha;
          ${g}
          return value;
      }`;return{...r,output:{dims:a,type:e[0].type,textureType:0},variables:[{name:"alpha",type:"float",data:n.alpha},{name:"beta",type:"float",data:n.beta}],shaderSource:b}},lw=(r,e)=>{if(!r)throw new Error("Input is missing");if(e.isOptionalC&&(r.length<2||r.length>3))throw new Error("Invaid input shape.");if(!e.isOptionalC&&r.length!==3)throw new Error("Gemm requires 3 inputs");if(r.length===3&&r[2].dims.length!==1&&r[2].dims.length!==2)throw new Error("Invalid input shape of C");if(r[0].type!=="float32"&&r[0].type!=="float64"||r[1].type!=="float32"&&r[1].type!=="float64"||r.length===3&&r[2].type!=="float32"&&r[2].type!=="float64")throw new Error("Invalid input type.");if(r[0].type!==r[1].type||r.length===3&&r[0].type!==r[2].type)throw new Error("Input types are mismatched")}});var $f,Tf,dw,cw,fw,pw,hw,_f=B(()=>{"use strict";xt();ze();$f=(r,e,n)=>(hw(e),[r.run(fw(r,e,n),e)]),Tf=r=>{let e=r.attributes.getFloat("scale"),n=r.attributes.getFloats("bias");return Ae({scale:e,bias:n})},dw={name:"ImageScaler",inputNames:["X"],inputTypes:[0]},cw=(r,e,n,t)=>{let o=n[0].dims.slice(),i=o.length,a=`
      ${pw(t.bias.length)}
      float process(int indices[${i}]) {
        return _X(indices) * scale + getBias(bias, indices[1]);
      }`;return{...e,output:{dims:o,type:n[0].type,textureType:0},variables:[{name:"bias",type:"float",arrayLength:t.bias.length,data:t.bias},{name:"scale",type:"float",data:t.scale}],shaderSource:a}},fw=(r,e,n)=>{let t={...dw,cacheHint:n.cacheKey};return{...t,get:()=>cw(r,t,e,n)}},pw=r=>{let e=[`float getBias(float bias[${r}], int channel) {`];for(let n=0;n<r;++n)n===0?e.push(`	if (channel == ${n}) { return bias[${n}]; }`):n===r-1?e.push(`	else { return bias[${n}]; }`):e.push(`	else if (channel == ${n}) { return bias[${n}]; }`);return e.push("	}"),e.join(`
`)},hw=r=>{if(!r||r.length!==1)throw new Error("ImageScaler requires 1 input.");if(r[0].dims.length!==4)throw new Error("Invalid input shape.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.")}});var If,Af,Sf,mw,gw,bw,yw,vw,ww,Of=B(()=>{"use strict";rt();ze();If=(r,e,n)=>{ww(e);let t=r.run(gw(e[0]),e);return[r.run(vw(r,e[0],n,t.dims),[e[0],t,e[1],e[2]])]},Af=r=>r.attributes.getFloat("epsilon",1e-5),Sf={name:"InstanceNormalization_MeanAndVariance",inputNames:["X"],inputTypes:[0]},mw=(r,e)=>{let n=e.dims.slice(),t=n[1],o=n[2]*n[3],i=[n[0],t],s=`
      vec4 process(int[2] indices) {
        vec4 v = vec4(0.0);
        int a[4];
        a[0] = indices[0];
        a[1] = indices[1];
        float temp = 0.0;
        for(int a2=0; a2<${n[2]}; a2++) {
          a[2] = a2;
          for(int a3=0; a3<${n[3]}; a3++) {
            a[3] = a3;
            float x = _X(a);
            temp += x;
          }
        }
        float mean = temp / float(${o});
        temp = 0.0;
        for(int a2=0; a2<${n[2]}; a2++) {
          a[2] = a2;
          for(int a3=0; a3<${n[3]}; a3++) {
            a[3] = a3;
            float x = _X(a);
            temp += (x - mean) * (x - mean);
          }
        }
        v.r = mean;
        v.g = temp / float(${o});

        return v;
      }`;return{...r,output:{dims:i,type:e.type,textureType:4},shaderSource:s}},gw=r=>({...Sf,get:()=>mw(Sf,r)}),bw={name:"InstanceNormalization_ComputeOutput",inputNames:["X","MeanAndVariance","Scale","B"],inputTypes:[0,4,0,0]},yw=(r,e,n,t,o)=>{let i=de(r.session.backend.glContext.version),[s,a]=r.calculateTextureWidthAndHeight(o,4),[u,l]=[s/4,a],d=`
      vec4 get_MeanAndVariance(int[2] mv) {
        int offset = indicesToOffset_MeanAndVariance(mv);
        vec2 coords = offsetToCoords(offset, ${u}, ${l});
        return ${i.texture2D}(MeanAndVariance, coords);
      }

      float process(int[4] indices) {
        int mv[2];
        mv[0] = indices[0];
        mv[1] = indices[1];
        vec4 mean_and_variance = get_MeanAndVariance(mv);
        float mean = mean_and_variance.r;
        float variance = mean_and_variance.g;

        int sb[1];
        sb[0] = indices[1];
        float scale = _Scale(sb);
        float b = _B(sb);

        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;
      }`;return{...e,output:{dims:n.dims,type:n.type,textureType:0},variables:[{name:"epsilon",type:"float",data:t}],shaderSource:d}},vw=(r,e,n,t)=>{let o={...bw,cacheHint:`${n}`};return{...o,get:()=>yw(r,o,e,n,t)}},ww=r=>{if(!r||r.length!==3)throw new Error("InstanceNormalization requires 3 inputs.");let e=r[0],n=r[1],t=r[2];if(e.dims.length<3||n.dims.length!==1||t.dims.length!==1)throw new Error("Invalid input shape.");if(n.dims[0]!==e.dims[1]||t.dims[0]!==e.dims[1])throw new Error("Input shapes are mismatched.");if(e.type!=="float32"&&e.type!=="float64"||n.type!=="float32"&&n.type!=="float64"||t.type!=="float32"&&t.type!=="float64")throw new Error("Invalid input type.");if(r[0].dims.length!==4)throw new Error("Only support 4-D input shape.")}});function xw(r,e){let n=r[0].dims[1],t=r[0].dims.length,o=-Math.floor((e.size-1)/2),i=Math.ceil((e.size-1)/2),s=`float(${e.alpha}) / float(${e.size})`,a=`float(${e.bias})`,u=`float(${e.beta})`,l=`
    float process(int indices[${t}]) {
        int c = indices[1];
        float x = _X(indices);
        float square_sum = 0.0;

        for (int i = ${o}; i <= ${i}; i++) {
          int idx = c + i;
          if (c >= 0 && c < ${n}) {
            indices[1] = idx;
            float j = _X(indices);
            square_sum += j * j;
          }
        }
        return x / pow(${a} + ${s} * square_sum, ${u});
    }`;return{...Pf,cacheHint:e.cacheKey,output:{dims:r[0].dims,type:r[0].type,textureType:0},shaderSource:l}}function $w(r,e){return{...Pf,cacheHint:e.cacheKey,get:()=>xw(r,e)}}var Ef,Cf,Pf,Tw,kf=B(()=>{"use strict";xt();ze();Ef=(r,e,n)=>(Tw(e),[r.run($w(e,n),e)]),Cf=r=>{let e=r.attributes.getFloat("alpha",1e-4),n=r.attributes.getFloat("beta",.75),t=r.attributes.getFloat("bias",1),o=r.attributes.getInt("size");return Ae({alpha:e,beta:n,bias:t,size:o})},Pf={name:"LRN",inputNames:["X"],inputTypes:[0]};Tw=r=>{if(!r||r.length!==1)throw new Error("LRN requires 1 input.");if(r[0].dims.length!==4)throw new Error('currently only support LRN for input with "NCHW" format');if(r[0].type!=="float32")throw new Error("input should be float type")}});var _w,ys,Df,Bf,Rf,Sw,Iw,Aw,Ow,Ew,Cw,Pw,kw,Mf=B(()=>{"use strict";xt();He();rt();ze();_w={name:"Pad",inputNames:["A"],inputTypes:[0]},ys=(r,e,n)=>(Aw(e),[r.run({..._w,cacheHint:n.cacheKey,get:()=>Iw(r,e[0],n)},e)]),Df=r=>{let e=r.attributes.getString("mode","constant"),n=r.attributes.getFloat("value",0),t=r.attributes.getInts("pads");return Ae({mode:e,value:n,pads:t})},Bf=(r,e,n)=>{Ow(e);let t=Sw(r,e,n);return ys(r,[e[0]],t)},Rf=r=>r.attributes.getString("mode","constant"),Sw=(r,e,n)=>{if(!r.session.isInitializer(e[1].dataId)||e.length>=3&&!r.session.isInitializer(e[2].dataId))throw new Error("dynamic pad attributes are not allowed");let t=Array.from(e[1].integerData),o=e.length>=3?e[2].floatData[0]:0;return Ae({mode:n,pads:t,value:o})},Iw=(r,e,n)=>{let t=oe.padShape(e.dims.slice(),n.pads),o=t.length,s=`
      ${Ew(r,e,n)}
      float process(int[${o}] indices) {
          return padA(indices);
      }`;return{name:"Pad",inputNames:["A"],inputTypes:[0],output:{dims:t,type:e.type,textureType:0},shaderSource:s}},Aw=r=>{if(!r||r.length!==1)throw new Error("Pad requires 1 input");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.")},Ow=r=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Pad requires 2 or 3 inputs");if(r[1].type!=="int32")throw new Error("Invalid input type.");if(r.length>=3&&r[2].type==="string")throw new Error("Invalid input type.")},Ew=(r,e,n)=>{let t=de(r.session.backend.glContext.version),[o,i]=r.calculateTextureWidthAndHeight(e.dims,0),s=oe.computeStrides(e.dims);switch(n.mode){case"constant":return Cw(t,e.dims,s,o,i,n.pads,n.value);case"reflect":return Pw(t,e.dims,s,o,i,n.pads);case"edge":return kw(t,e.dims,s,o,i,n.pads);default:throw new Error("Invalid mode")}},Cw=(r,e,n,t,o,i,s)=>{let a=e.length,u="";for(let l=a-1;l>=0;--l)u+=`
        k = m[${l}] - ${i[l]};
        if (k < 0)  return constant;
        if (k >= ${e[l]}) return constant;
        offset += k * ${n[l]};
        `;return`
      float padA(int m[${a}]) {
        const float constant = float(${s});
        int offset = 0;
        int k = 0;
        ${u}
        vec2 coords = offsetToCoords(offset, ${t}, ${o});
        float value = getColorAsFloat(${r.texture2D}(A, coords));
        return value;
      }
      `},Pw=(r,e,n,t,o,i)=>{let s=e.length,a="";for(let u=s-1;u>=0;--u)a+=`
        k = m[${u}] - ${i[u]};
        if (k < 0) { k = -k; }
        {
          const int _2n_1 = ${2*(e[u]-1)};
          k = int( mod( float(k), float(_2n_1) ) ) ;
          if(k >= ${e[u]}) { k = _2n_1 - k; }
        }
        offset += k * ${n[u]};
        `;return`
      float padA(int m[${s}]) {
        int offset = 0;
        int k = 0;
        ${a}
        vec2 coords = offsetToCoords(offset, ${t}, ${o});
        float value = getColorAsFloat(${r.texture2D}(A, coords));
        return value;
      }
      `},kw=(r,e,n,t,o,i)=>{let s=e.length,a="";for(let u=s-1;u>=0;--u)a+=`
        k = m[${u}] - ${i[u]};
        if (k < 0)  k = 0;
        if (k >= ${e[u]}) k = ${e[u]-1};
        offset += k * ${n[u]};
      `;return`
      float padA(int m[${s}]) {
        int offset = 0;
        int k = 0;
        ${a}
        vec2 coords = offsetToCoords(offset, ${t}, ${o});
        float value = getColorAsFloat(${r.texture2D}(A, coords));
        return value;
      }
      `}});var zf,Nf,Ff,Vf,Gf,Uf,Wf,Hf,qf,Dw,Lf,jf,Si,Kf,_i,Bw,Xf=B(()=>{"use strict";xt();He();ze();zf=(r,e,n)=>{Si(e);let t={name:"AveragePool",inputNames:["X"],inputTypes:[0],cacheHint:n.cacheKey};return[r.run({...t,get:()=>Ff(e,t,!1,n)},e)]},Nf=r=>{let e=r.attributes.getString("auto_pad","NOTSET"),n=r.attributes.getInt("ceil_mode",0),t=r.attributes.getInt("count_include_pad",0)!==0,o=r.attributes.getInts("kernel_shape"),i=r.attributes.getInts("strides",[]),s=r.attributes.getInts("pads",[]);if(n!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");return Ae({autoPad:e,ceilMode:n,countIncludePad:t,kernelShape:o,strides:i,pads:s})},Ff=(r,e,n,t)=>{let[o,i]=qf(r,t,n),s=oe.size(o.kernelShape),a="value += _X(x);",u="";o.countIncludePad?u+=`value /= float(${s});`:u+=`value /= float(${s} - pad);`;let d=`
        ${Kf(r[0].dims,o,a,u,"0.0")}
      `;return{...e,output:{dims:i,type:r[0].type,textureType:0},shaderSource:d}},Vf=(r,e,n)=>{Si(e);let t={name:"GlobalAveragePool",inputNames:["X"],inputTypes:[0],cacheHint:`${n.countIncludePad}`};return[r.run({...t,get:()=>Ff(e,t,!0,n)},e)]},Gf=r=>{let e=r.attributes.getInt("count_include_pad",0)!==0;return Ae({autoPad:"",ceilMode:0,countIncludePad:e,kernelShape:[],strides:[],pads:[]})},Uf=(r,e,n)=>{Si(e);let t={name:"MaxPool",inputNames:["X"],inputTypes:[0],cacheHint:n.cacheKey};return[r.run({...t,get:()=>Hf(e,t,!1,n)},e)]},Wf=r=>{let e=r.attributes.getString("auto_pad","NOTSET"),n=r.attributes.getInt("ceil_mode",0),t=r.attributes.getInts("kernel_shape"),o=r.attributes.getInts("strides",[]),i=r.attributes.getInts("pads",[]),s=r.attributes.getInt("storage_order",0),a=r.attributes.getInts("dilations",[]);if(s!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(n!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");return Ae({autoPad:e,ceilMode:n,countIncludePad:!1,kernelShape:t,strides:o,pads:i,storageOrder:s,dilations:a})},Hf=(r,e,n,t)=>{let[o,i]=qf(r,t,n),s=`
      value = max(_X(x), value);
    `,a="",l=`
      ${Kf(r[0].dims,o,s,a,"-1e5")}
    `;return{...e,output:{dims:i,type:r[0].type,textureType:0},shaderSource:l}},qf=(r,e,n)=>{let t=r[0].dims.slice(),o=Object.hasOwnProperty.call(e,"dilations"),i=e.kernelShape.slice(),s=e.strides.slice(),a=o?e.dilations.slice():[],u=e.pads.slice();nn.adjustPoolAttributes(n,t,i,s,a,u);let l=nn.computePoolOutputShape(n,t,s,a,i,u,e.autoPad),d=Object.assign({},e);return o?Object.assign(d,{kernelShape:i,strides:s,pads:u,dilations:a,cacheKey:e.cacheKey}):Object.assign(d,{kernelShape:i,strides:s,pads:u,cacheKey:e.cacheKey}),[d,l]},Dw={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:""},Lf={name:"GlobalMaxPool",inputNames:["X"],inputTypes:[0]},jf=(r,e)=>(Si(e),[r.run({...Lf,get:()=>Hf(e,Lf,!0,Dw)},e)]),Si=r=>{if(!r||r.length!==1)throw new Error("Pool ops requires 1 input.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.")},Kf=(r,e,n,t,o)=>{let i=r.length;if(e.kernelShape.length<=2){let s=e.kernelShape[e.kernelShape.length-1],a=e.strides[e.strides.length-1],u=e.pads[e.pads.length/2-1],l=e.pads[e.pads.length-1],d=r[i-1],f="",p="",g="";if(u+l!==0?f=`
          for (int i = 0; i < ${s}; i++) {
            x[${i} - 1] = indices[${i} - 1] * ${a} - ${u} + i;
            if (x[${i} - 1] < 0 || x[${i} - 1] >= ${d}) {
              pad++;
              continue;
            }
            ${n}
          }`:f=`
          for (int i = 0; i < ${s}; i++) {
            x[${i} - 1] = indices[${i} - 1] * ${a} - ${u} + i;
            ${n}
          }`,e.kernelShape.length===2){let y=e.kernelShape[e.kernelShape.length-2],T=e.strides[e.strides.length-2],x=e.pads[e.pads.length/2-2],_=e.pads[e.pads.length-2],O=r[i-2];x+_!==0?p=`
            for (int j = 0; j < ${y}; j++) {
              x[${i} - 2] = indices[${i} - 2] * ${T} - ${x} + j;
              if (x[${i} - 2] < 0 || x[${i} - 2] >= ${O}) {
                pad+= ${s};
                continue;
              }
          `:p=`
            for (int j = 0; j < ${y}; j++) {
              x[${i} - 2] = indices[${i} - 2] * ${T} - ${x} + j;
            `,g=`
          }
        `}return`
        float process(int indices[${i}]) {
          int x[${i}];
          copyVec(indices, x);

          float value = ${o};
          int pad = 0;
          ${p}
          ${f}
          ${g}
          ${t}
          return value;
        }
      `}else{let s=oe.size(e.kernelShape),a=oe.computeStrides(e.kernelShape),u=a.length,l=e.pads.length,d=Bw(u),f=_i(r,"inputDims"),p=_i(e.pads,"pads"),g=_i(a,"kernelStrides"),b=_i(e.strides,"strides"),y=e.pads.reduce((_,O)=>_+O),T="";return y?T=`
            if (x[j] >= inputDims[j] || x[j] < 0) {
              pad++;
              isPad = true;
              break;
            }
          }
          if (!isPad) {
            ${n}
          }`:T=`
          }
          ${n}
        `,`
        ${d}
        float process(int indices[${i}]) {
          int x[${i}];
          copyVec(indices, x);
          int offset[${u}];
          int pads[${l}];
          int inputDims[${i}];
          int kernelStrides[${u}];
          int strides[${u}];
          ${p}
          ${f}
          ${b}
          ${g}

          float value = ${o};
          int pad = 0;
          bool isPad = false;
          for (int i = 0; i < ${s}; i++) {
            offsetToIndices(i, kernelStrides, offset);
            isPad = false;
            for (int j = ${i} - ${u}; j < ${i}; j++) {
              x[j] = indices[j] * strides[j - ${i} + ${u}]
                + offset[j - ${i} + ${u}] - pads[j - 2];
              ${T}
          }
          ${t}

          return value;
        }
      `}},_i=(r,e)=>{let n="";for(let t=0;t<r.length;t++)n+=`
      ${e}[${t}] = ${r[t]};
    `;return n},Bw=r=>`
  void offsetToIndices(int offset, int[${r}] strides, out int[${r}] indices) {
    if (${r} == 0) {
      return;
    }
    for (int i = 0; i < ${r} - 1; ++i) {
      indices[i] = offset / strides[i];
      offset -= indices[i] * strides[i];
    }
    indices[${r} - 1] = offset;
  }`});var cn,Fr,Rw,Mw,Yf,Zf,Jf,Qf,ep,tp,rp,np=B(()=>{"use strict";xt();go();He();ze();cn=(r,e,n,t,o)=>{Mw(e);let i={name:t,inputNames:["A"],inputTypes:[0]};return[r.run({...i,cacheHint:n.cacheKey,get:()=>Rw(r,e,n,t,o,i)},e)]},Fr=r=>{let e=r.attributes.getInts("axes",[]),n=r.attributes.getInt("keepdims",1)===1;return Ae({axes:e,keepDims:n})},Rw=(r,e,n,t,o,i)=>{let s=[],a=e[0].dims.length||1,u=[],l=oe.normalizeAxes(n.axes,e[0].dims.length),d=o(e,l),f=d[1];for(let b=0;b<e[0].dims.length;b++)l.indexOf(b)>=0||l.length===0?(n.keepDims&&s.push(1),f=`
          for(int j${b} = 0; j${b} < ${e[0].dims[b]}; j${b}++) {
            inputIdx[${b}] = j${b};
            ${f}
          }`):(u.push(`inputIdx[${b}] = outputIdx[${s.length}];`),s.push(e[0].dims[b]));let g=`
      float process(int outputIdx[${s.length||1}]) {
        float value;                 // final result
        int inputIdx[${a}];      // addressing input data
        ${u.join(`
`)}
        ${d[0]}       // init ops for reduce max/min
        ${f}
        ${d[2]}       // final computation for reduce mean
        return value;
      }`;return{...i,output:{dims:s,type:e[0].type,textureType:0},shaderSource:g}},Mw=r=>{if(!r||r.length!==1)throw new Error("Reduce op requires 1 input.");if(Nr.indexOf(r[0].type)===-1)throw new Error("Invalid input type.")},Yf=(r,e,n)=>cn(r,e,n,"ReduceSum",()=>["value = 0.0;","value += _A(inputIdx);",""]),Zf=(r,e,n)=>cn(r,e,n,"ReduceMean",(o,i)=>{let s=1;for(let a=0;a<o[0].dims.length;a++)(i.indexOf(a)>=0||i.length===0)&&(s*=o[0].dims[a]);return["value = 0.0;","value += _A(inputIdx);",`value /= ${s}.;`]}),Jf=(r,e,n)=>cn(r,e,n,"ReduceMax",(o,i)=>{let s=[];for(let a=0;a<o[0].dims.length;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`inputIdx[${a}] = 0;`);return[`${s.join(`
`)}
value = _A(inputIdx);`,"value = max(value, _A(inputIdx));",""]}),Qf=(r,e,n)=>cn(r,e,n,"ReduceMin",(o,i)=>{let s=[];for(let a=0;a<o[0].dims.length;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`inputIdx[${a}] = 0;`);return[`${s.join(`
`)}
value = _A(inputIdx);`,"value = min(value, _A(inputIdx));",""]}),ep=(r,e,n)=>cn(r,e,n,"ReduceProd",()=>["value = 1.0;","value *= _A(inputIdx);",""]),tp=(r,e,n)=>cn(r,e,n,"ReduceLogSum",()=>["value = 0.0;","value += _A(inputIdx);","value = log(value);"]),rp=(r,e,n)=>cn(r,e,n,"ReduceLogSumSquare",()=>["float t; value = 0.0;","t = _A(inputIdx); value += t * t;",""])});var op,ip=B(()=>{"use strict";He();op=(r,e)=>{let n=oe.calculateReshapedDims(e[0].dims,e[1].integerData);return r.session.pack?[r.reshapePacked(e[0],n)]:[r.reshapeUnpacked(e[0],n)]}});var ap,vs,sp,up,bo,Lw,ws,Ii,xs=B(()=>{"use strict";xt();rt();ze();ap={name:"Upsample",inputNames:["X"],inputTypes:[0]},vs=(r,e,n)=>(ws(e,n),[r.run({...ap,cacheHint:n.cacheKey,get:()=>Lw(r,e,n)},e)]),sp=r=>bo(r,7),up=r=>bo(r,9),bo=(r,e)=>{let n=e>=10,t=r.attributes.getString("mode","nearest");if(t!=="nearest"&&t!=="linear"&&(e<11||t!=="cubic"))throw new Error(`unrecognized mode: ${t}`);let o=[];e<9&&(o=r.attributes.getFloats("scales"),Ii(o,t,n));let i=r.attributes.getFloat("extrapolation_value",0),s=e>10?r.attributes.getString("coordinate_transformation_mode","half_pixel"):"asymmetric";if(["asymmetric","pytorch_half_pixel","tf_half_pixel_for_nn","align_corners","tf_crop_and_resize","half_pixel"].indexOf(s)===-1)throw new Error(`coordinate_transform_mode '${s}' is not supported`);let a=s==="tf_crop_and_resize",u=a,l=t==="nearest"&&e>=11?r.attributes.getString("nearest_mode","round_prefer_floor"):"";if(["round_prefer_floor","round_prefer_ceil","floor","ceil",""].indexOf(l)===-1)throw new Error(`nearest_mode '${l}' is not supported`);let d=r.attributes.getFloat("cubic_coeff_a",-.75),f=r.attributes.getInt("exclude_outside",0)!==0;if(f&&t!=="cubic")throw new Error("exclude_outside can be set to 1 only when mode is CUBIC.");let p=e<11?!0:t==="nearest"&&s==="asymmetric"&&l==="floor",g=0,b=0,y=0;return e>10?r.inputs.length>2?(g=1,b=2,y=3):(b=1,y=2):e===9&&(b=1),Ae({opset:e,isResize:n,mode:t,scales:o,extrapolationValue:i,coordinateTransformMode:s,useExtrapolation:u,needRoiInput:a,nearestMode:l,cubicCoefficientA:d,excludeOutside:f,useNearest2xOptimization:p,roiInputIdx:g,scalesInputIdx:b,sizesInputIdx:y})},Lw=(r,e,n)=>{let t=de(r.session.backend.glContext.version),[o,i]=r.calculateTextureWidthAndHeight(e[0].dims,0),s=e[0].dims.map((y,T)=>Math.floor(y*n.scales[T])),[a,u]=r.calculateTextureWidthAndHeight(s,0),l=s.length,d=new Array(l),f=new Array(l),p=`
      int output_pitches[${l}];
      int input_pitches[${l}];
      `;for(let y=l-1;y>=0;y--)d[y]=y===l-1?1:d[y+1]*s[y+1],f[y]=y===l-1?1:f[y+1]*e[0].dims[y+1],p+=`
        output_pitches[${y}] = ${d[y]};
        input_pitches[${y}] = ${f[y]};
        `;let g=`
      float getInputFloat(int index) {
        vec2 coords = offsetToCoords(index, ${o}, ${i});
        float value = getColorAsFloat(${t.texture2D}(X, coords));
        return value;
      }
      `,b=n.mode==="nearest"?`
    ${g}
    float process(int indices[${l}]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${a}, ${u});

      ${p}

      int d, m;
      for (int dim = 0; dim < ${l}; ++dim) {
        d = output_index / output_pitches[dim];
        m = output_index - d * output_pitches[dim];
        output_index = m;

        if (scales[dim] != 1 && d > 0) {
          int d2 = d / scales[dim];
          m = d - d2 * scales[dim];
          d = d2;
        }
        input_index += input_pitches[dim] * d;
      }

      return getInputFloat(input_index);
    }`:l===4?`
    ${g}
    float process(int indices[4]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${a}, ${u});

      ${p}

      int m;
      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;
      index_of_dim0 = output_index / output_pitches[0];
      m = output_index - index_of_dim0 * output_pitches[0];
      index_of_dim1 = m / output_pitches[1];
      m = m - index_of_dim1 * output_pitches[1];
      index_of_dim2 = m / output_pitches[2];
      m = m - index_of_dim2 * output_pitches[2];
      index_of_dim3 = m;

      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;
      index_of_input_dim2 = index_of_dim2 / scales[2];
      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];
      index_of_input_dim3 = index_of_dim3 / scales[3];
      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];

      input_index = index_of_dim0 * input_pitches[0] +
            index_of_dim1 * input_pitches[1] +
            index_of_input_dim2 * input_pitches[2] +
            index_of_input_dim3;

      float x00 = getInputFloat(input_index);
      float x10, x01, x11;

      bool end_of_dim2 = false;
      if (index_of_input_dim2 == (${e[0].dims[2]} - 1)) {
        // It's the end in dimension 2
        x01 = x00;
        end_of_dim2 = true;
      } else {
        x01 = getInputFloat(input_index + input_pitches[2]);
      }

      if (index_of_input_dim3 == (input_pitches[2] - 1)) {
        // It's the end in dimension 3
        x10 = x00;
        x11 = x01;
      }
      else {
        x10 = getInputFloat(input_index + 1);
        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);
      }

      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);
      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);
      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);
    }`:`
    ${g}
    float process(int indices[2]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${a}, ${u});

      ${p}

      int m;
      int index_of_dim0, index_of_dim1;
      index_of_dim0 = output_index / output_pitches[0];
      m = output_index - index_of_dim0 * output_pitches[0];
      index_of_dim1 = m;

      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;
      index_of_input_dim0 = index_of_dim0 / scales[0];
      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];
      index_of_input_dim1 = index_of_dim1 / scales[1];
      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];

      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;

      float x00 = getInputFloat(input_index);
      float x10, x01, x11;

      bool end_of_dim0 = false;
      if (index_of_input_dim0 == (${e[0].dims[0]} - 1)) {
        // It's the end in dimension 0
        x01 = x00;
        end_of_dim0 = true;
      } else {
        x01 = getInputFloat(input_index + input_pitches[0]);
      }

      if (index_of_input_dim1 == (input_pitches[0] - 1)) {
        // It's the end in dimension 1
        x10 = x00;
        x11 = x01;
      }
      else {
        x10 = getInputFloat(input_index + 1);
        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);
      }

      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);
      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);
      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);
    }`;return{...ap,output:{dims:s,type:e[0].type,textureType:0},shaderSource:b,variables:[{name:"scales",type:"int",arrayLength:n.scales.length,data:n.scales.map(y=>Math.ceil(y))}]}},ws=(r,e)=>{if(!r||e.opset<9&&r.length!==1||e.opset>=9&&e.opset<11&&r.length!==2||e.opset>=11&&r.length<2)throw new Error("invalid inputs.");if(e.scales.length>0&&r[0].dims.length!==e.scales.length)throw new Error("Invalid input shape.");if(r[0].type==="string")throw new Error("Invalid input tensor types.")},Ii=(r,e,n)=>{if(n){for(let t of r)if(t<=0)throw new Error("Scale value should be greater than 0.")}else for(let t of r)if(t<1)throw new Error("Scale value should be greater than or equal to 1.");if((e==="linear"||e==="cubic")&&r.length!==2&&(r.length!==4||r[0]!==1||r[1]!==1))throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic')         or 4-D inputs with the corresponding outermost 2 scale values being 1         in the ${n?"Resize":"Upsample"} opeartor.`)}});var $s,Ts,lp,dp,zw,Nw,Fw,Vw,cp=B(()=>{"use strict";rt();ze();fr();un();xs();$s={name:"Resize",inputNames:["A"],inputTypes:[2]},Ts=(r,e,n)=>(ws(e,n),[r.run({...$s,cacheHint:n.cacheKey,get:()=>zw(r,e,n)},e)]),lp=r=>bo(r,10),dp=r=>bo(r,11),zw=(r,e,n)=>{let t=de(r.session.backend.glContext.version),[o,i]=Nw(e,n);if(o.every(O=>O===1)&&n.coordinateTransformMode!=="tf_crop_and_resize")return{...$s,output:{dims:i,type:e[0].type,textureType:2},hasMain:!0,shaderSource:`void main() {
                    vec4 v = ${t.texture2D}(X, TexCoords);
                    ${t.output} = v;
                }`};let a=i.length;if(a<2)throw new Error(`output dimension should be at least 2, but got ${a}`);let u=i[a-2],l=i[a-1],d=e[0].dims;if(a!==d.length)throw new Error(`output dimension should match input ${d.length}, but got ${a}`);let f=d[a-2],p=d[a-1],g=o[a-2],b=o[a-1],y="";if(n.mode!=="linear")throw new Error(`resize (packed) does not support mode: '${n.mode}'`);switch(n.coordinateTransformMode){case"asymmetric":y=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        return vec4(coords) / scaleWHWH;
                    }
                `;break;case"half_pixel":y=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;
                    }
                `;break;case"pytorch_half_pixel":y=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        vec4 fcoords = vec4(coords);
                        return vec4(
                            ${l}.0 > 1.0 ? (fcoords.x + 0.5) / scaleWHWH.x - 0.5 : 0.0,
                            ${u}.0 > 1.0 ? (fcoords.y + 0.5) / scaleWHWH.y - 0.5 : 0.0,
                            ${l}.0 > 1.0 ? (fcoords.z + 0.5) / scaleWHWH.z - 0.5 : 0.0,
                            ${u}.0 > 1.0 ? (fcoords.w + 0.5) / scaleWHWH.w - 0.5 : 0.0
                          );
                    }
                `;break;case"align_corners":y=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        vec4 resized = vec4(${l}.0 - 1.0, ${u}.0 - 1.0, ${l}.0 - 1.0,
                            ${u}.0 - 1.0);
                        vec4 original = vec4(${p}.0 - 1.0, ${f}.0 - 1.0, ${p}.0 - 1.0,
                            ${f}.0 - 1.0);
                        vec4 new_scale = original / resized;
                        return vec4(coords) * new_scale;
                    }
                `;break;default:throw new Error(`resize (packed) does not support coordinateTransformMode:                                 '${n.coordinateTransformMode}'`)}let T=kt(a),x=pr(),_=`
            const vec2 inputWH = vec2(${f}.0, ${p}.0);
            const vec4 scaleWHWH = vec4(float(${g}), float(${b}), float(${g}), float(${b}));
            ${x}
            ${y}
            float getAValue(int x10, int r, int c, int d) {
                return getChannel(getA(x10, r, c, d), vec2(c, d));
            }
            void main() {
                ${T} rc = getOutputCoords();

                int batch = rc[0];
                int depth = rc[1];

                // retrieve the 4 coordinates that is used in the 4 packed output values.
                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);

                // calculate the source index in fraction
                vec4 sourceFrac = getSourceFracIndex(coords);

                // get the lower and upper bound of the 4 values that will be packed into one texel.
                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));
                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));
                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));
                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));

                bool hasNextRow = rc.w < ${u-1};
                bool hasNextCol = rc.z < ${l-1};

                // pack x00, x01, x10, x11's top-left corner into one vec4 structure
                vec4 topLeft = vec4(
                    getAValue(batch, depth, x00.x, x00.y),
                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);

                // pack x00, x01, x10, x11's top-right corner into one vec4 structure
                vec4 topRight = vec4(
                    getAValue(batch, depth, x00.x, x00.w),
                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);

                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure
                vec4 bottomLeft = vec4(
                    getAValue(batch, depth, x00.z, x00.y),
                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);

                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure
                vec4 bottomRight = vec4(
                    getAValue(batch, depth, x00.z, x00.w),
                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);

                // calculate the interpolation fraction on u and v direction
                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);
                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));

                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);
                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);
                vec4 newValue = mix(top, bottom, clampFrac.xxzz);

                ${t.output} = vec4(newValue);
            }
        `;return{...$s,output:{dims:i,type:e[0].type,textureType:2},hasMain:!0,shaderSource:_}},Nw=(r,e)=>{let t=r[0].dims,o=e.scales,i;if(o.length===0){let a=r[e.scalesInputIdx];if(a&&a.size!==0){if(r[e.sizesInputIdx])throw new Error("Only one of scales or sizes must be provided as input.");o=Fw(a,e.mode,e.isResize)}else{let u=r[e.sizesInputIdx];if(!u||u.size===0)throw new Error("Either scales or sizes MUST be provided as input.");i=Array.from(u.integerData),o=Vw(i,t,e.mode,e.isResize)}}else if(r[e.sizesInputIdx])throw new Error("Only one of scales or sizes must be provided as input.");let s=i||t.map((a,u)=>Math.floor(a*o[u]));return[o,s]},Fw=(r,e,n)=>{let t=Array.from(r.floatData);return Ii(t,e,n),t},Vw=(r,e,n,t)=>{let o=e.length,i=new Array(o);for(let s=0,a=o;s<a;s++)if(e[s]===0){if(r[s]!==0)throw new Error("Input dim is zero but required output dim is non-zero.");i[s]=1}else i[s]=r[s]/e[s];return Ii(i,n,t),i}});var fp,Gw,pp=B(()=>{"use strict";sn();fp=(r,e)=>(Gw(e),[new mt([e[0].dims.length],"int32",void 0,void 0,new Int32Array(e[0].dims))]),Gw=r=>{if(!r||r.length!==1)throw new Error("Shape requires 1 input.")}});var _s,hp,mp,gp,Uw,bp,Ww,Hw,yp=B(()=>{"use strict";xt();go();He();ze();_s={name:"Slice",inputNames:["A"],inputTypes:[0]},hp=(r,e,n)=>(Uw(e),[r.run({..._s,cacheHint:n.cacheKey,get:()=>gp(r,e[0],n)},e)]),mp=r=>{let e=r.attributes.getInts("starts"),n=r.attributes.getInts("ends"),t=r.attributes.getInts("axes",[]);return Ae({starts:e,ends:n,axes:t})},gp=(r,e,n)=>{let t=n.axes.length===0?e.dims.slice(0).map((f,p)=>p):n.axes,o=oe.normalizeAxes(t,e.dims.length),i=n.starts.map((f,p)=>f>e.dims[o[p]]-1?e.dims[o[p]]:oe.normalizeAxis(f,e.dims[o[p]])),s=n.ends.map((f,p)=>f>e.dims[o[p]]-1?e.dims[o[p]]:oe.normalizeAxis(f,e.dims[o[p]])),a=e.dims.slice(),u=[];for(let f=0;f<o.length;f++)a[o[f]]=s[f]-i[f],i[f]>0&&u.push(`outputIdx[${o[f]}] += ${i[f]};`);let d=`
      float process(int outputIdx[${a.length}]) {
        ${u.join(`
      `)}
        return _A(outputIdx);
      }`;return{..._s,output:{dims:a,type:e.type,textureType:0},shaderSource:d}},Uw=r=>{if(!r||r.length!==1)throw new Error("Slice requires 1 input.");if(Nr.indexOf(r[0].type)===-1)throw new Error("Invalid input type.")},bp=(r,e)=>{Hw(e);let n=Ww(r,e);return[r.run({..._s,cacheHint:n.cacheKey,get:()=>gp(r,e[0],n)},[e[0]])]},Ww=(r,e)=>{if(!r.session.isInitializer(e[1].dataId)||!r.session.isInitializer(e[2].dataId)||e.length>=4&&!r.session.isInitializer(e[3].dataId)||e.length>=5&&!r.session.isInitializer(e[4].dataId))throw new Error("dynamic slice attributes are not allowed");if(e.length>=5&&e[4].integerData.some(s=>s!==1))throw new Error("currently non-1 steps is not supported for Slice");let n=Array.from(e[1].integerData),t=Array.from(e[2].integerData),o=e.length>=4?Array.from(e[3].integerData):[],i=`${o};${n};${t}`;return{starts:n,ends:t,axes:o,cacheKey:i}},Hw=r=>{if(!r||r.length<3||r.length>5)throw new Error("Invalid input number.");if(r[1].type!=="int32"||r[1].dims.length!==1)throw new Error("Invalid input type.");if(r[2].type!=="int32"||r[2].dims.length!==1)throw new Error("Invalid input type.");if(r.length>=4&&(r[3].type!=="int32"||r[3].dims.length!==1))throw new Error("Invalid input type.");if(r.length>=5&&(r[4].type!=="int32"||r[4].dims.length!==1))throw new Error("Invalid input type.")}});var vp,wp,xp,$p,Tp,_p,Sp,Ip,qw,jw,Kw,Ap,Op=B(()=>{"use strict";xt();He();rt();ze();Ti();vp={name:"SoftmaxComputeMax",inputNames:["A"],inputTypes:[0]},wp={name:"SoftmaxComputeScale",inputNames:["A","Max"],inputTypes:[0,0]},xp={name:"SoftMax",inputNames:["A","Max","Norm"],inputTypes:[0,0,0]},$p=(r,e,n)=>{Ap(e);let t=e[0].dims.slice(),o=oe.normalizeAxis(n.axis,t.length),i=oe.sizeToDimension(t,o),s=oe.sizeFromDimension(t,o);return Ip(r,e,n,i,s)},Tp=r=>Ae({axis:r.attributes.getInt("axis",1)}),_p=r=>Ae({axis:r.attributes.getInt("axis",-1)}),Sp=(r,e,n)=>{Ap(e);let t=e[0].dims.slice(),o=oe.normalizeAxis(n.axis,t.length),i=t.length,s=o!==i-1,a=[],u=[],l=[],d;s&&(u=Array.from({length:i}).map((b,y)=>y),u[o]=i-1,u[i-1]=o,u.map(b=>a.push(t[b])),d=Ae({perm:u}),l=dn(r,e,d));let f=s?oe.sizeToDimension(a,i-1):oe.sizeToDimension(t,i-1),p=s?oe.sizeFromDimension(a,i-1):oe.sizeFromDimension(t,i-1),g=Ip(r,s?l:e,n,f,p);return s?dn(r,g,d):g},Ip=(r,e,n,t,o)=>{let i=qw(r,e[0],t,o,[t]),s=r.run({...vp,cacheHint:n.cacheKey,get:()=>i},e),a=jw(r,e[0],t,o,i.output.dims,[t]),u=r.run({...wp,cacheHint:n.cacheKey,get:()=>a},[e[0],s]),l=Kw(r,e[0],t,o,i.output.dims,a.output.dims);return[r.run({...xp,cacheHint:n.cacheKey,get:()=>l},[e[0],s,u])]},qw=(r,e,n,t,o)=>{let[i,s]=r.calculateTextureWidthAndHeight(e.dims,0),a=o.length;if(n<1||t<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(o.length!==1)throw new Error("Dimensionality of the output should be 1");if(o[0]!==n)throw new Error("Shape of the output should be equal to logical row count");let u=de(r.session.backend.glContext.version),l=`
      float process(int[${a}] indices) {
        int logical_row_start_offset = indices[0] * ${t};

        float max = getColorAsFloat(${u.texture2D}(A, offsetToCoords(logical_row_start_offset, ${i},
        ${s} )));
        for(int i=1; i<${t}; ++i)
        {
          float current = getColorAsFloat(${u.texture2D}(A, offsetToCoords(logical_row_start_offset + i,
            ${i}, ${s})));
          if(current > max)
          max = current;
        }

        return max;
      }`;return{...vp,output:{dims:o,type:e.type,textureType:0},shaderSource:l}},jw=(r,e,n,t,o,i)=>{let[s,a]=r.calculateTextureWidthAndHeight(e.dims,0),u=i.length;if(n<1||t<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(i.length!==1)throw new Error("Dimensionality of the output should be 1");if(i[0]!==n)throw new Error("Shape of the output should be equal to logical row count");if(o.length!==1)throw new Error("Dimensionality of the intermediate results should be 1");if(o[0]!==n)throw new Error("Shape of the intermediate results should be equal to logical row count");let l=de(r.session.backend.glContext.version),d=`
      float process(int[${u}] indices) {
        int logical_row_start_offset = indices[0] * ${t};

        float norm_factor = 0.0;
        float max = _Max(indices);
        for(int i=0; i<${t}; ++i)
        {
          norm_factor += exp(getColorAsFloat(${l.texture2D}(A, offsetToCoords(logical_row_start_offset + i,
            ${s}, ${a}))) - max);
        }

        return norm_factor;
      }`;return{...wp,output:{dims:i,type:e.type,textureType:0},shaderSource:d}},Kw=(r,e,n,t,o,i)=>{let[s,a]=r.calculateTextureWidthAndHeight(e.dims,0),u=e.dims.length;if(n<1||t<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(o.length!==1||i.length!==1)throw new Error("Dimensionality of the intermediate results should be 1");if(o[0]!==n||i[0]!==n)throw new Error("Shape of the intermediate results should be equal to logical row count");let l=`
      float process(int[${u}] indices) {

      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)
      int offset = coordsToOffset(TexCoords, ${s}, ${a});

      //determine the logical row for this index
      int logical_row_index[1];
      logical_row_index[0] = offset / ${t};

      float norm_factor = _Norm(logical_row_index);

      // avoid possible division by 0
      // if norm_facor is 0, all elements are zero
      // if so, return 0
      if(norm_factor == 0.0)
        return 0.0;

      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;
    }`;return{...xp,output:{dims:e.dims,type:e.type,textureType:0},shaderSource:l}},Ap=r=>{if(!r||r.length!==1)throw new Error("Softmax requires 1 input.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type")}});var Ep,Cp,Pp,Xw,Yw,Zw,kp=B(()=>{"use strict";xt();He();ze();Ep={name:"Split",inputNames:["A"],inputTypes:[0]},Cp=(r,e,n)=>{Zw(e);let t=oe.normalizeAxis(n.axis,e[0].dims.length),o=Xw(r,e,t,n),i=[];for(let s=0;s<o;++s)i.push(r.run({...Ep,cacheHint:`${n.cacheKey};${s}`,get:()=>Yw(r,e[0],n,t,s)},e));return i},Pp=r=>{let e=r.attributes.getInt("axis",0),n=r.attributes.getInts("split",[]),t=r.outputs.length;return Ae({axis:e,split:n,numOutputs:t})},Xw=(r,e,n,t)=>{let[,o]=lo.splitShape(e[0].dims,n,t.split,t.numOutputs);return o.length},Yw=(r,e,n,t,o)=>{let[i,s]=lo.splitShape(e.dims,t,n.split,n.numOutputs),a=s[o],u=i[o],d=`
      float process(int indices[${u.length}]) {
        indices[${t}] += ${a};
        return _A(indices);
      }
    `;return{...Ep,cacheHint:`${n.cacheKey}:${o}`,output:{dims:u,type:e.type,textureType:0},shaderSource:d}},Zw=r=>{if(!r||r.length!==1)throw new Error("Split requires one input.");if(r[0].type!=="int8"&&r[0].type!=="uint8"&&r[0].type!=="int16"&&r[0].type!=="uint16"&&r[0].type!=="int32"&&r[0].type!=="uint32"&&r[0].type!=="float32"&&r[0].type!=="float64"&&r[0].type!=="bool")throw new Error("Invalid input type.")}});var Ss,Dp,Bp,Jw,Qw,Rp=B(()=>{"use strict";He();Ss=(r,e,n)=>{Jw(e);let t=oe.squeezeShape(e[0].dims,n);return[r.reshapeUnpacked(e[0],t)]},Dp=(r,e)=>(Qw(e),Ss(r,[e[0]],Array.from(e[1].integerData))),Bp=r=>r.attributes.getInts("axes"),Jw=r=>{if(!r||r.length!==1)throw new Error("Squeeze requires 1 input.");if(r[0].type==="string")throw new Error("invalid input tensor types.")},Qw=r=>{if(!r||r.length!==2)throw new Error("Squeeze requires 2 inputs.");if(r[1].type!=="int32")throw new Error("Invalid input type.")}});var Mp,ex,tx,Lp=B(()=>{"use strict";rt();ze();Mp=(r,e)=>{tx(e);let n={name:"Sum",inputNames:e.map((o,i)=>`X${i}`),inputTypes:new Array(e.length).fill(0)};return[r.run({...n,get:()=>ex(r,e,n)},e)]},ex=(r,e,n)=>{let t=de(r.session.backend.glContext.version),o=e[0].dims.slice(),s=`
      void main() {
        vec4 result = ${e.map((a,u)=>`${t.texture2D}(X${u},TexCoords)`).join(" + ")};
        ${t.output} = result;
      }
    `;return{...n,output:{dims:o,type:e[0].type,textureType:0},hasMain:!0,shaderSource:s}},tx=r=>{if(!r||r.length===0)throw new Error("Sum requires inputs.");let e=r[0].dims.length;for(let n=1;n<r.length;n++){if(e!==r[n].dims.length)throw new Error("Input shapes are mismatched.");for(let t=0;t<e;t++)if(r[0].dims[t]!==r[n].dims[t])throw new Error("Input shapes are not matched.")}if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.");for(let n=1;n<r.length;n++)if(r[0].type!==r[n].type)throw new Error("Input types are not matched.")}});var zp,rx,nx,Np=B(()=>{"use strict";go();ze();zp=(r,e)=>{nx(e);let n={name:"Tile",inputNames:["A"],inputTypes:[0]};return[r.run({...n,get:()=>rx(r,e,n)},e)]},rx=(r,e,n)=>{let t=e[0].dims.slice(),o=new Array(t.length),i=[];for(let u=0;u<t.length;u++)o[u]=t[u]*e[1].numberData[u],i.push(`inputIdx[${u}] = int(mod(float(outputIdx[${u}]), ${t[u]}.));`);let s=o.length,a=`
      float process(int outputIdx[${s}]) {
        int inputIdx[${s}];
        ${i.join(`
`)}
        return _A(inputIdx);
      }
    `;return{...n,output:{dims:o,type:e[0].type,textureType:0},shaderSource:a}},nx=r=>{if(!r||r.length!==2)throw new Error("Tile requires 2 input.");if(r[1].dims.length!==1)throw new Error("The second input shape must 1 dimension.");if(r[1].dims[0]!==r[0].dims.length)throw new Error("Invalid input shape.");if(Nr.indexOf(r[0].type)===-1)throw new Error("Invalid input type.");if(r[1].type!=="int32"&&r[1].type!=="int16")throw new Error("Invalid repeat type.")}});var Is,Fp,Vp,ox,ix,Gp=B(()=>{"use strict";He();Is=(r,e,n)=>{ox(e);let t=oe.unsqueezeShape(e[0].dims,n);return[r.reshapeUnpacked(e[0],t)]},Fp=(r,e)=>(ix(e),Is(r,[e[0]],Array.from(e[1].integerData))),Vp=r=>r.attributes.getInts("axes"),ox=r=>{if(!r||r.length!==1)throw new Error("Unsqueeze requires 1 input.");if(r[0].type==="string")throw new Error("invalid input tensor types.")},ix=r=>{if(!r||r.length!==2)throw new Error("Unsqueeze requires 2 inputs.");if(r[1].type!=="int32")throw new Error("Invalid input type.")}});var Up,Wp=B(()=>{"use strict";Qd();fc();mc();xc();wi();of();cf();hf();bf();xf();_f();Of();kf();xi();Mf();Xf();np();ip();cp();pp();yp();Op();kp();Rp();Lp();Np();Ti();ls();Gp();xs();Up=[["Abs","","6+",$c],["Acos","","7+",Tc],["Add","","7+",ec],["And","","7+",tc],["Asin","","7+",_c],["Atan","","7+",Sc],["AveragePool","","7+",zf,Nf],["BatchNormalization","","7+",Zd,Jd],["Cast","","6+",pc,hc],["Ceil","","6+",Oc],["Clip","","6-10",ss,Ic],["Clip","","11+",Ac],["Concat","","4+",yc,wc],["Conv","","1+",ms,gs],["ConvTranspose","","1+",rf,nf],["Cos","","7+",Ec],["Div","","7+",rc],["Dropout","","7+",us],["DepthToSpace","","1+",lf,df],["Equal","","7+",nc],["Elu","","6+",Cc,Pc],["Exp","","6+",kc],["Flatten","","1+",ff,pf],["Floor","","6+",Dc],["FusedConv","com.microsoft","1+",ms,gs],["Gather","","1+",mf,gf],["Gemm","","7-10",bs,vf],["Gemm","","11+",bs,wf],["GlobalAveragePool","","1+",Vf,Gf],["GlobalMaxPool","","1+",jf],["Greater","","7+",oc],["Identity","","1+",us],["ImageScaler","","1+",$f,Tf],["InstanceNormalization","","6+",If,Af],["LeakyRelu","","6+",Bc,Rc],["Less","","7+",ic],["LRN","","1+",Ef,Cf],["Log","","6+",Mc],["MatMul","","1+",Xc,Yc],["MaxPool","","1+",Uf,Wf],["Mul","","7+",ac],["Neg","","6+",Lc],["Not","","1+",zc],["Or","","7+",sc],["Pad","","2-10",ys,Df],["Pad","","11+",Bf,Rf],["Pow","","7+",uc],["PRelu","","7+",lc],["ReduceLogSum","","1+",tp,Fr],["ReduceMax","","1+",Jf,Fr],["ReduceMean","","1+",Zf,Fr],["ReduceMin","","1+",Qf,Fr],["ReduceProd","","1+",ep,Fr],["ReduceSum","","1-12",Yf,Fr],["ReduceSumSquare","","1+",rp,Fr],["Relu","","6+",Nc],["Reshape","","5+",op],["Resize","","10",Ts,lp],["Resize","","11+",Ts,dp],["Shape","","1+",fp],["Sigmoid","","6+",Fc],["Sin","","7+",Vc],["Slice","","10+",bp],["Slice","","1-9",hp,mp],["Softmax","","1-12",$p,Tp],["Softmax","","13+",Sp,_p],["Split","","2-12",Cp,Pp],["Sqrt","","6+",Gc],["Squeeze","","1-12",Ss,Bp],["Squeeze","","13+",Dp],["Sub","","7+",dc],["Sum","","6+",Mp],["Tan","","7+",Uc],["Tanh","","6+",Wc],["Tile","","6+",zp],["Transpose","","1+",dn,sf],["Upsample","","7-8",vs,sp],["Upsample","","9",vs,up],["Unsqueeze","","1-12",Is,Vp],["Unsqueeze","","13+",Fp],["Xor","","7+",cc]]});function qp(r){let e={},n;for(;(n=Hp.exec(r))!==null;){let t=n[3].split(",").map(o=>{let i=o.trim().split(" ");return i&&i.length===2?{type:i[0],name:i[1]}:null}).filter(o=>o!==null);e[n[2]]={params:t,body:n[4]}}for(let t in e){let o=ax.replace("__FUNC__",t),i=new RegExp(o,"gm");for(;(n=i.exec(r))!==null;){let s=n[1],a=n[2],u=n[3].split(","),l=s?`${s} ${a};`:"",d=e[t].body,f="";e[t].params.forEach((g,b)=>{g&&(f+=`${g.type} ${g.name} = ${u[b]};
`)}),d=`${f}
 ${d}`,d=d.replace("return",`${a} = `);let p=`
      ${l}
      {
        ${d}
      }
      `;r=r.replace(n[0],p)}}return r=r.replace(Hp,""),r}var Hp,ax,jp=B(()=>{"use strict";Hp=/@inline[\s\n\r]+(\w+)[\s\n\r]+([0-9a-zA-Z_]+)\s*\(([^)]*)\)\s*{(([^}]|[\n\r])*)}/gm,ax="(\\w+)?\\s+([_0-9a-zA-Z]+)\\s+=\\s+__FUNC__\\((.*)\\)\\s*;"});function Dn(r,e){let n=[],t=[],o=e!=null&&Array.isArray(e)&&e.length===0,i=e==null||o?null:sx(e,r).sort(),s=0;for(let a=0;a<r.length;++a){if(i!=null){if(i[s]===a&&r[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${r[a]}' is not 1`);(i[s]==null||i[s]>a)&&r[a]===1&&(n.push(r[a]),t.push(a)),i[s]<=a&&s++}r[a]!==1&&(n.push(r[a]),t.push(a))}return{newShape:n,keptDims:t}}function sx(r,e){let n=e.length;return r=r==null?e.map((t,o)=>o):[].concat(r),An(r.every(t=>t>=-n&&t<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${r}`),An(r.every(ux),()=>`All values in axis param must be integers but got axis ${r}`),r.map(t=>t<0?n+t:t)}function ux(r){return r%1===0}function lx(r){if(r.length===0)return 1;let e=r[0];for(let n=1;n<r.length;n++)e*=r[n];return e}function Kp(r){let e=Math.ceil(Math.sqrt(r));return[e,Math.ceil(r/e)]}var Ai,As=B(()=>{"use strict";Ut();He();Ai=class{constructor(e){this.maxTextureSize=e}computeTextureWH(e,n){let t=this.computeTexture(e,n);return n&&n.isPacked&&(t[0]/=2,t[1]/=2),n&&n.reverseWH?[t[1],t[0]]:t}computeTexture(e,n){let t=n&&n.isPacked;if(e.length===0)return t?[2,2]:[1,1];let o=this.maxTextureSize;if(n&&n.breakAxis!==void 0){let a=n.breakAxis>=e.length?1:e.slice(n.breakAxis).reduce((l,d)=>l*d),u=n.breakAxis<=0?1:e.slice(0,n.breakAxis).reduce((l,d)=>l*d);if(a>o||u>o)je.verbose("TextureLayout",`Given width/height preferences were unattainable: shape:${e}, breakAxis:${n.breakAxis}`);else return[a,u]}let i=e.slice(0);t&&(o=o*2,i=i.map((a,u)=>u>=i.length-2?i[u]%2===0?i[u]:i[u]+1:i[u]),i.length===1&&(i=[2,i[0]])),i.length!==2&&(i=Dn(i).newShape);let s=lx(i);return i.length<=1&&s<=o?[1,s]:i.length===2&&i[0]<=o&&i[1]<=o?i:i.length===3&&i[0]*i[1]<=o&&i[2]<=o?[i[0]*i[1],i[2]]:i.length===3&&i[0]<=o&&i[1]*i[2]<=o?[i[0],i[1]*i[2]]:i.length===4&&i[0]*i[1]*i[2]<=o&&i[3]<=o?[i[0]*i[1]*i[2],i[3]]:i.length===4&&i[0]<=o&&i[1]*i[2]*i[3]<=o?[i[0],i[1]*i[2]*i[3]]:t?Kp(s/4).map(a=>a*2):Kp(s)}}});var Oi,Xp=B(()=>{"use strict";He();Cr();rt();As();fr();Oi=class extends jt{constructor(n){super(n)}getFunctions(){return{...this.offsetToCoords(),...this.coordsToOffset(),...this.toVec(),...this.valueFrom(),...this.getCommonUtilFuncs(),...this.getInputsSamplingSnippets(),...this.getOutputSamplingSnippet()}}getCustomTypes(){return{}}offsetToCoords(){let n="offsetToCoords";return{offsetToCoords:new Q(`
      vec2 ${n}(int offset, int width, int height) {
        int t = offset / width;
        int s = offset - t*width;
        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);
        return coords;
      }
      `)}}coordsToOffset(){let n="coordsToOffset";return{coordsToOffset:new Q(`
      int ${n}(vec2 coords, int width, int height) {
        float s = coords.s * float(width);
        float t = coords.t * float(height);
        int offset = int(t) * width + int(s);
        return offset;
      }
      `)}}getOutputSamplingSnippet(){let n=this.context.outputTextureLayout;return n.isPacked?this.getPackedOutputSamplingSnippet(n):this.getUnpackedOutputSamplingSnippet(n)}getPackedOutputSamplingSnippet(n){let t=n.unpackedShape,o=[n.width,n.height],i={},s="getOutputCoords";switch(t.length){case 0:i[s]=this.getOutputScalarCoords();break;case 1:i[s]=this.getOutputPacked1DCoords(t,o);break;case 2:i[s]=this.getOutputPacked2DCoords(t,o);break;case 3:i[s]=this.getOutputPacked3DCoords(t,o);break;default:i[s]=this.getOutputPackedNDCoords(t,o)}let u=`
      void setOutput(vec4 val) {
        ${de(this.context.glContext.version).output} = val;
      }
    `,l="floatTextureSetRGBA";return i[l]=new Q(u),i}getUnpackedOutputSamplingSnippet(n){let t=n.unpackedShape,o=[n.width,n.height],i={},s="getOutputCoords";switch(t.length){case 0:i[s]=this.getOutputScalarCoords();break;case 1:i[s]=this.getOutputUnpacked1DCoords(t,o);break;case 2:i[s]=this.getOutputUnpacked2DCoords(t,o);break;case 3:i[s]=this.getOutputUnpacked3DCoords(t,o);break;case 4:i[s]=this.getOutputUnpacked4DCoords(t,o);break;case 5:i[s]=this.getOutputUnpacked5DCoords(t,o);break;case 6:i[s]=this.getOutputUnpacked6DCoords(t,o);break;default:throw new Error(`Unsupported output dimensionality: ${t.length}`)}let u=`
        void setOutput(float val) {
          ${de(this.context.glContext.version).output} = vec4(val, 0, 0, 0);
        }
    `,l="floatTextureSetR";return i[l]=new Q(u),i}getOutputScalarCoords(){return new Q(`
      int getOutputCoords() {
        return 0;
      }
    `)}getOutputPacked1DCoords(n,t){let o=t,i="";return o[0]===1?(i=`
          int getOutputCoords() {
            return 2 * int(TexCoords.y * ${o[1]}.0);
          }
        `,new Q(i)):o[1]===1?(i=`
          int getOutputCoords() {
            return 2 * int(TexCoords.x * ${o[0]}.0);
          }
        `,new Q(i)):(i=`
        int getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                 vec2(${o[0]}, ${o[1]}));
          return 2 * (resTexRC.y * ${o[0]} + resTexRC.x);
        }
      `,new Q(i))}getOutputPacked2DCoords(n,t){let o="";if(rn.arraysEqual(n,t))return o=`
        ivec2 getOutputCoords() {
          return 2 * ivec2(TexCoords.xy * vec2(${t[0]}, ${t[1]}));
        }
      `,new Q(o);let i=t,s=Math.ceil(n[1]/2);return o=`
        ivec2 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${i[0]}, ${i[1]}));

          int index = resTexRC.y * ${i[0]} + resTexRC.x;

          // reverse r and c order for packed texture
          int r = imod(index, ${s}) * 2;
          int c = 2 * (index / ${s});

          return ivec2(r, c);
        }
      `,new Q(o)}getOutputPacked3DCoords(n,t){let o=[t[0],t[1]],i=Math.ceil(n[2]/2),s=i*Math.ceil(n[1]/2),a=`
        ivec3 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${o[0]}, ${o[1]}));
          int index = resTexRC.y * ${o[0]} + resTexRC.x;

          int b = index / ${s};
          index -= b * ${s};

          // reverse r and c order for packed texture
          int r = imod(index, ${i}) * 2;
          int c = 2 * (index / ${i});

          return ivec3(b, r, c);
        }
      `;return new Q(a)}getOutputPackedNDCoords(n,t){let o=[t[0],t[1]],i=Math.ceil(n[n.length-1]/2),s=i*Math.ceil(n[n.length-2]/2),a=s,u="",l="b, r, c";for(let f=2;f<n.length-1;f++)a*=n[n.length-f-1],u=`
      int b${f} = index / ${a};
      index -= b${f} * ${a};
    `+u,l=`b${f}, `+l;let d=`
      ivec${n.length} getOutputCoords() {
        ivec2 resTexRC = ivec2(TexCoords.xy *
                              vec2(${o[0]}, ${o[1]}));
        int index = resTexRC.y * ${o[0]} + resTexRC.x;

        ${u}

        int b = index / ${s};
        index -= b * ${s};

        // reverse r and c order for packed texture
        int r = imod(index, ${i}) * 2;
        int c = 2 * (index / ${i});

        return ivec${n.length}(${l});
      }
    `;return new Q(d)}getOutputUnpacked1DCoords(n,t){let o=`
        int getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          return resTexRC.y * ${t[0]} + resTexRC.x;
        }
      `;return new Q(o)}getOutputUnpacked2DCoords(n,t){let o=`
        ivec2 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          int r = index / ${n[1]};
          int c = index - r * ${n[1]};
          return ivec2(r, c);
        }
      `;return new Q(o)}getOutputUnpacked3DCoords(n,t){let o="",i=n.length,s=null;i<2&&(s=[]),s=new Array(i-1),s[i-2]=n[i-1];for(let l=i-3;l>=0;--l)s[l]=s[l+1]*n[l+1];let a=["r","c","d"],u=s.map((l,d)=>{let f=`int ${a[d]} = index / ${l}`,p=d===s.length-1?`int ${a[d+1]} = index - ${a[d]} * ${l}`:`index -= ${a[d]} * ${l}`;return`${f}; ${p};`}).join("");return o=`
        ivec3 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          ${u}
          return ivec3(r, c, d);
        }
      `,new Q(o)}getOutputUnpacked4DCoords(n,t){let o="",i=n.length,s=null;i<2&&(s=[]),s=new Array(i-1),s[i-2]=n[i-1];for(let l=i-3;l>=0;--l)s[l]=s[l+1]*n[l+1];let a=["r","c","d","d2"],u=s.map((l,d)=>{let f=`int ${a[d]} = index / ${l}`,p=d===s.length-1?`int ${a[d+1]} = index - ${a[d]} * ${l}`:`index -= ${a[d]} * ${l}`;return`${f}; ${p};`}).join("");return o=`
      ivec4 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          ${u}
          return ivec4(r, c, d, d2);
        }
      `,new Q(o)}getOutputUnpacked5DCoords(n,t){let o="",i=n.length,s=null;i<2&&(s=[]),s=new Array(i-1),s[i-2]=n[i-1];for(let l=i-3;l>=0;--l)s[l]=s[l+1]*n[l+1];let a=["r","c","d","d2","d3"],u=s.map((l,d)=>{let f=`int ${a[d]} = index / ${l}`,p=d===s.length-1?`int ${a[d+1]} = index - ${a[d]} * ${l}`:`index -= ${a[d]} * ${l}`;return`${f}; ${p};`}).join("");return o=`
      ivec5 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          ${u}
          return ivec5(r, c, d, d2, d3);
        }
      `,new Q(o)}getOutputUnpacked6DCoords(n,t){let o="",i=n.length,s=null;i<2&&(s=[]),s=new Array(i-1),s[i-2]=n[i-1];for(let l=i-3;l>=0;--l)s[l]=s[l+1]*n[l+1];let a=["r","c","d","d2","d3","d4"],u=s.map((l,d)=>{let f=`int ${a[d]} = index / ${l}`,p=d===s.length-1?`int ${a[d+1]} = index - ${a[d]} * ${l}`:`index -= ${a[d]} * ${l}`;return`${f}; ${p};`}).join("");return o=`
     ivec6 getOutputCoords() {
         ivec2 resTexRC = ivec2(TexCoords.xy *
                               vec2(${t[0]}, ${t[1]}));
         int index = resTexRC.y * ${t[0]} + resTexRC.x;
         ${u}
         return ivec6(r, c, d, d2, d3, d4);
       }
     `,new Q(o)}getCommonUtilFuncs(){let n={},t="uvFromFlat";n[t]=new Q(`
    vec2 uvFromFlat(int texNumR, int texNumC, int index) {
      int texC = index / texNumR;
      int texR = index - texC * texNumR;
      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to
      //       v.
      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);
    }
    `),t="packedUVfrom1D",n[t]=new Q(`
      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
        int texelIndex = index / 2;
        int texR = texelIndex / texNumC;
        int texC = texelIndex - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),t="packedUVfrom2D",n[t]=new Q(`
      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {
        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
        int texR = texelIndex / texNumC;
        int texC = texelIndex - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),t="packedUVfrom3D",n[t]=new Q(`
      vec2 packedUVfrom3D(int texNumR, int texNumC,
          int texelsInBatch, int texelsInLogicalRow, int b,
          int row, int col) {
        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
        int texR = index / texNumC;
        int texC = index - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),t="sampleTexture";let o=de(this.context.glContext.version);return n[t]=new Q(`
        float sampleTexture(sampler2D textureSampler, vec2 uv) {
            return ${o.texture2D}(textureSampler, uv).r;
        }`),n}getInputsSamplingSnippets(){let n={},t=this.context.outputTextureLayout;return this.context.programInfo.inputNames.forEach((o,i)=>{let s=this.context.inputTextureLayouts[i],a=pi(o);s.isPacked?n[a]=this.getPackedSamplerFromInput(a,o,s):n[a]=this.getUnpackedSamplerFromInput(a,o,s);let u=Rd(o);s.unpackedShape.length<=t.unpackedShape.length&&(s.isPacked?n[u]=this.getPackedSamplerAtOutputCoords(u,s,t,o):n[u]=this.getUnpackedSamplerAtOutputCoords(u,s,t,o))}),n}getPackedSamplerAtOutputCoords(n,t,o,i){let s=t.unpackedShape,a=o.unpackedShape,l=pi(i),d=s.length,f=a.length,p=Pt.getBroadcastDims(s,a),g=kt(f),b=f-d,y,T=nr();d===0?y="":f<2&&p.length>=1?y="coords = 0;":y=p.map(H=>`coords.${T[H+b]} = 0;`).join(`
`);let x="";f<2&&d>0?x="coords":x=s.map((H,ne)=>`coords.${T[ne+b]}`).join(", ");let _="return outputValue;",C=oe.size(s)===1,k=oe.size(a)===1;if(d===1&&!C&&!k)_=`
        return vec4(outputValue.xy, outputValue.xy);
      `;else if(C&&!k)f===1?_=`
          return vec4(outputValue.x, outputValue.x, 0., 0.);
        `:_=`
          return vec4(outputValue.x);
        `;else if(p.length){let H=d-2,ne=d-1;p.indexOf(H)>-1&&p.indexOf(ne)>-1?_="return vec4(outputValue.x);":p.indexOf(H)>-1?_="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":p.indexOf(ne)>-1&&(_="return vec4(outputValue.xx, outputValue.zz);")}let U=`
        int lastDim = coords.${T[f-1]};
        coords.${T[f-1]} = coords.${T[f-2]};
        coords.${T[f-2]} = lastDim;
      `,G=`
      vec4 ${n}() {
        ${g} coords = getOutputCoords();
        ${U}
        ${y}
        vec4 outputValue = ${l}(${x});
        ${_}
      }
    `;return new Q(G,["coordinates.getOutputCoords"])}getUnpackedSamplerAtOutputCoords(n,t,o,i){let s=[o.width,o.height],a=[t.width,t.height],u=t.unpackedShape.length,l=o.unpackedShape.length,d=t.unpackedShape,f=o.unpackedShape,p=pi(i);if(u===l&&rn.arraysEqual(a,s)){let C=`
          float ${n}() {
            return sampleTexture(${i}, TexCoords);
          }
        `;return new Q(C,["coordinates.sampleTexture"])}let g=kt(l),b=Pt.getBroadcastDims(d,f),y=l-u,T,x=nr();u===0?T="":l<2&&b.length>=1?T="coords = 0;":T=b.map(C=>`coords.${x[C+y]} = 0;`).join(`
`);let _="";l<2&&u>0?_="coords":_=t.unpackedShape.map((C,N)=>`coords.${x[N+y]}`).join(", ");let O=`
        float ${n}() {
          ${g} coords = getOutputCoords();
          ${T}
          return ${p}(${_});
        }
      `;return new Q(O,["coordinates.getOutputCoords"])}getPackedSamplerFromInput(n,t,o){switch(o.unpackedShape.length){case 0:return this.getPackedSamplerScalar(n,t);case 1:return this.getPackedSampler1D(n,t,o);case 2:return this.getPackedSampler2D(n,t,o);case 3:return this.getPackedSampler3D(n,t,o);default:return this.getPackedSamplerND(n,t,o)}}getUnpackedSamplerFromInput(n,t,o){let i=o.unpackedShape;switch(i.length){case 0:return this.getUnpackedSamplerScalar(n,t,o);case 1:return this.getUnpackedSampler1D(n,t,o);case 2:return this.getUnpackedSampler2D(n,t,o);case 3:return this.getUnpackedSampler3D(n,t,o);case 4:return this.getUnpackedSampler4D(n,t,o);case 5:return this.getUnpackedSampler5D(n,t,o);case 6:return this.getUnpackedSampler6D(n,t,o);default:throw new Error(`Unsupported dimension ${i.length}-D`)}}getPackedSamplerScalar(n,t){let o=de(this.context.glContext.version),i=`
          vec4 ${n}() {
            return ${o.texture2D}(${t}, halfCR);
          }
        `;return new Q(i)}getPackedSampler1D(n,t,o){let i=[o.width,o.height],s=[i[1],i[0]],a=de(this.context.glContext.version),l=`vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
      ${s[0]}, ${s[1]}, index);
      return ${a.texture2D}(${t}, uv);
    }`;return new Q(l,["coordinates.packedUVfrom1D"])}getPackedSampler2D(n,t,o){let i=o.unpackedShape,s=[o.width,o.height],a=de(this.context.glContext.version),u=s[0],l=s[1];if(s!=null&&rn.arraysEqual(i,s)){let b=`vec4 ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${l}.0, ${u}.0);
        return ${a.texture2D}(${t}, uv);
      }`;return new Q(b)}let d=s,f=Math.ceil(i[1]/2),g=`vec4 ${n}(int row, int col) {
      vec2 uv = packedUVfrom2D(${d[1]}, ${d[0]}, ${f}, row, col);
      return ${a.texture2D}(${t}, uv);
    }`;return new Q(g,["coordinates.packedUVfrom2D"])}getPackedSampler3D(n,t,o){let i=o.unpackedShape,s=[o.width,o.height],a=[s[0],s[1]],u=de(this.context.glContext.version);if(i[0]===1){let y=i.slice(1),T=[1,2],x=On(i,y),_=["b","row","col"],O=JSON.parse(JSON.stringify(o));O.unpackedShape=x;let C=this.getPackedSamplerFromInput(n,t,O),k=`${C.routineBody}
      vec4 ${n}(int b, int row, int col) {
        return ${n}(${En(_,T)});
      } `;return new Q(k,C.dependencies)}let l=a[0],d=a[1],f=Math.ceil(i[2]/2),p=f*Math.ceil(i[1]/2),b=`vec4 ${n}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${d}, ${l}, ${p}, ${f}, b, row, col);
      return ${u.texture2D}(${t}, uv);}`;return new Q(b,["coordinates.packedUVfrom3D"])}getPackedSamplerND(n,t,o){let i=o.unpackedShape,s=i.length,a=[o.width,o.height],u=de(this.context.glContext.version),l=[a[0],a[1]],d=l[1],f=l[0],p=Math.ceil(i[s-1]/2),g=p*Math.ceil(i[s-2]/2),b="int b, int row, int col",y=`b * ${g} + (row / 2) * ${p} + (col / 2)`;for(let _=2;_<s-1;_++)b=`int b${_}, `+b,g*=i[s-_-1],y=`b${_} * ${g} + `+y;let x=`vec4 ${n}(${b}) {
      int index = ${y};
      int texR = index / ${f};
      int texC = index - texR * ${f};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${f}, ${d});
      return ${u.texture2D}(${t}, uv);
    }`;return new Q(x)}getUnpackedSamplerScalar(n,t,o){let[i,s]=[o.width,o.height];if(i===1&&s===1){let u=`
          float ${n}() {
            return sampleTexture(${t}, halfCR);
          }
        `;return new Q(u,["coordinates.sampleTexture"])}let a=`
        float ${n}() {
          int offset_${t} = coordsToOffset(TexCoords, ${i}, ${s});
          vec2 uv = uvFromFlat(${i}, ${s}, offset_${t});
          return sampleTexture(${t}, uv);
        }
      `;return new Q(a,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler1D(n,t,o){let i=o.width,s=o.height;if(s===1&&i===1){let u=`
        float ${n}(int index) {
          return sampleTexture(${t}, halfCR);
        }
      `;return new Q(u,["coordinates.sampleTexture"])}if(s===1){let u=`
          float ${n}(int index) {
            vec2 uv = vec2((float(index) + 0.5) / ${i}.0, 0.5);
            return sampleTexture(${t}, uv);
          }
        `;return new Q(u,["coordinates.sampleTexture"])}if(i===1){let u=`
          float ${n}(int index) {
            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${s}.0);
            return sampleTexture(${t}, uv);
          }
        `;return new Q(u,["coordinates.sampleTexture"])}let a=`
        float ${n}(int index) {
          vec2 uv = uvFromFlat(${i}, ${s}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new Q(a,["coordinates.uvFromFlat","coordinates.sampleTexture"])}getUnpackedSampler2D(n,t,o){let i=o.unpackedShape,s=[o.height,o.width];if(s!=null&&rn.arraysEqual(i,s)){let g=s[1],b=s[0],y=`
          float ${n}(int row, int col) {
            vec2 uv = (vec2(row, col) + halfCR) / vec2(${g}.0, ${b}.0);
            return sampleTexture(${t}, uv);
          }
        `;return new Q(y,["coordinates.sampleTexture"])}let{newShape:a,keptDims:u}=Dn(i),l=a;if(l.length<i.length){let g=On(i,l),b=JSON.parse(JSON.stringify(o));b.unpackedShape=g;let y=["col","row"],T=`
          ${this.getUnpackedSamplerFromInput(n,t,b).routineBody}
          float ${n}(int row, int col) {
            return ${n}(${En(y,u)});
          }
        `;return new Q(T,["coordinates.sampleTexture"])}let d=s[1],f=s[0];if(f===1){let g=`
          float ${n}(int row, int col) {
            int offset_${t} = coordsToOffset(TexCoords, ${d}, ${f});
            float index = dot(vec3(row, col, offset_${t}), vec3(${i[1]}, 1, 1));
            vec2 uv = vec2(0.5, (index + 0.5) / ${d}.0);
            return sampleTexture(${t}, uv);
          }
        `;return new Q(g,["coordinates.sampleTexture","coordinates.coordsToOffset"])}if(d===1){let g=`
          float ${n}(int row, int col) {
            int offset_${t} = coordsToOffset(TexCoords, ${d}, ${f});
            float index = dot(vec3(row, col, offset_${t}), vec3(${i[1]}, 1, 1));
            vec2 uv = vec2((index + 0.5) / ${f}.0, 0.5);
            return sampleTexture(${t}, uv);
          }
        `;return new Q(g,["coordinates.sampleTexture","coordinates.coordsToOffset"])}let p=`
        float ${n}(int row, int col) {
          int index = col * ${i[1]} + row;
          vec2 uv = uvFromFlat(${d}, ${f}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new Q(p,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler3D(n,t,o){let i=o.unpackedShape,s=i[1]*i[2],a=i[2],{newShape:u,keptDims:l}=Dn(i),d=u;if(d.length<i.length){let b=On(i,d),y=["batch","col","row"],T=JSON.parse(JSON.stringify(o));T.unpackedShape=b;let x=this.getUnpackedSamplerFromInput(n,t,T),_=l.reverse(),O=`
          ${x.routineBody}
          float ${n}(int batch, int row, int col) {
            return ${n}(${En(y,_)});
          }
        `;return new Q(O,x.dependencies)}let f=o.width,p=o.height,g=`
          float ${n}(int depth, int row, int col) {
            // Explicitly use integer operations as dot() only works on floats.
            int index = depth * ${s} + col * ${a} + row;
            vec2 uv = uvFromFlat(${f}, ${p}, index);
            return sampleTexture(${t}, uv);
          }
      `;return new Q(g,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler4D(n,t,o){let i=o.unpackedShape,s=i[3],a=i[2]*s,u=i[1]*a,l=o.width,d=o.height,f=`
        float ${n}(int row, int col, int depth, int depth2) {
          int index = row * ${u} + col * ${a} +
              depth2 * ${s} + depth;
          vec2 uv = uvFromFlat(${l}, ${d}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new Q(f,["coordinates.uvFromFlat","coordinates.sampleTexture"])}getUnpackedSampler5D(n,t,o){let i=o.unpackedShape,s=i[4],a=i[3]*s,u=i[2]*a,l=i[1]*u,{newShape:d,keptDims:f}=Dn(i);if(d.length<i.length){let y=On(i,d),T=["row","col","depth","depth2","depth3"],x=JSON.parse(JSON.stringify(o));x.unpackedShape=y;let _=`
          ${this.getUnpackedSamplerFromInput(n,t,x).routineBody}
          float ${n}(int row, int col, int depth, int depth2, int depth3) {
            return ${n}(${En(T,f)});
          }
        `;return new Q(_,["coordinates.sampleTexture","coordinates.uvFromFlat"])}let p=o.width,g=o.height,b=`
        float ${n}(int row, int col, int depth, int depth2, int depth3) {
          int index = row * ${l} + col * ${u} + depth * ${a} +
          depth3 * ${s} + depth2;
          vec2 uv = uvFromFlat(${p}, ${g}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new Q(b,["coordinates.sampleTexture","coordinates.uvFromFlat"])}getUnpackedSampler6D(n,t,o){let i=o.unpackedShape,s=i[5],a=i[4]*s,u=i[3]*a,l=i[2]*u,d=i[1]*l,{newShape:f,keptDims:p}=Dn(i);if(f.length<i.length){let T=On(i,f),x=["row","col","depth","depth2","depth3","depth4"],_=JSON.parse(JSON.stringify(o));_.unpackedShape=T;let O=`
            ${this.getUnpackedSamplerFromInput(n,t,_).routineBody}
            float ${n}(int row, int col, int depth,
              int depth2, int depth3, int depth4) {
              return ${n}(${En(x,p)});
            }
          `;return new Q(O,["coordinates.sampleTexture","coordinates.uvFromFlat"])}let g=o.width,b=o.height,y=`
          float ${n}(int row, int col, int depth,
            int depth2, int depth3, int depth4) {
            int index = row * ${d} + col * ${l} + depth * ${u} +
            depth2 * ${a} + depth3 * ${s} + depth4;
            vec2 uv = uvFromFlat(${g}, ${b}, index);
            return sampleTexture(${t}, uv);
          }
        `;return new Q(y,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}toVec(){let n=this.context.outputTextureLayout,t=n.shape.length,o=n.strides,i=n.width,s=n.height,a=[];for(let l=0;l<t-1;++l)a.push(`
        c[${l}] = offset / ${o[l]};`),a.push(`
        offset -= c[${l}] * ${o[l]};`);a.push(`
        c[${t-1}] = offset;`);let u=`
      void toVec(vec2 texCoords, out int c[${t}]) {
        int offset = coordsToOffset(texCoords, ${i}, ${s});
        ${a.join("")}
      }
      void toVec(int offset, out int c[${t}]) {
        ${a.join("")}
      }
    `;return{toVec:new Q(u,["coordinates.coordsToOffset"])}}valueFrom(){let n={};return this.context.programInfo.inputNames.forEach((t,o)=>{let i=this.context.inputTextureLayouts[o],a=(i.unpackedShape.length>0?i.unpackedShape:i.shape).length,u=`_${t}`;n[u]=new Q(this.getValueFromSingle(t,a,i.width,i.height,!1),[`shapeUtils.indicesToOffset${u}`,"coordinates.offsetToCoords","fragcolor.getColorAsFloat"]),u=u+"_T",n[u]=new Q(this.getValueFromSingle(t,a,i.width,i.height,!0),[`shapeUtils.indicesToOffset${u}`,"coordinates.offsetToCoords","fragcolor.getColorAsFloat"])}),n}getValueFromSingle(n,t,o,i,s){let a=`_${n}`;s&&(a=a+"_T");let u=de(this.context.glContext.version);return`
        float ${a}(int m[${t}]) {
          int offset = indicesToOffset${a}(m);
          vec2 coords = offsetToCoords(offset, ${o}, ${i});
          float value = getColorAsFloat(${u.texture2D}(${n}, coords));
          return value;
        }
        `}getPackedValueFrom(n,t,o,i,s){let a=`_${n}_Pack`;s&&(a=a+"_T");let u=de(this.context.glContext.version);return`
        vec4 ${a}(int m[${t}]) {
          int offset = indicesToOffset_${n}(m);
          vec2 coords = offsetToCoords(offset, ${o}, ${i});
          return ${u.texture2D}(${n}, coords);
        }
        `}}});var Ei,Yp=B(()=>{"use strict";Cr();Ei=class r extends jt{constructor(e){super(e)}getFunctions(){return{...this.encodeFloat32(),...this.decodeFloat32()}}getCustomTypes(){return{}}encodeFloat32(){return{encode:new Q(`highp vec4 encode(highp float f) {
        return vec4(f, 0.0, 0.0, 0.0);
      }
        `)}}decodeFloat32(){return{decode:new Q(`highp float decode(highp vec4 rgba) {
        return rgba.r;
      }
        `)}}encodeUint8(){let e=r.isLittleEndian()?"rgba.rgba=rgba.abgr;":"";return{encode:new Q(`
      highp vec4 encode(highp float f) {
        highp float F = abs(f);
        highp float Sign = step(0.0,-f);
        highp float Exponent = floor(log2(F));
        highp float Mantissa = (exp2(- Exponent) * F);
        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));
        highp vec4 rgba;
        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));
        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);
        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));
        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));
        ${e}
        rgba = rgba / 255.0; // values need to be normalized to [0,1]
        return rgba;
    }
        `)}}decodeUint8(){let e=r.isLittleEndian()?"rgba.rgba=rgba.abgr;":"";return{decode:new Q(`
        highp float decode(highp vec4 rgba) {
          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]
          ${e}
          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;
          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;
          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);
          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));
          return Result;
      }
        `)}}static isLittleEndian(){let e=new ArrayBuffer(4),n=new Uint32Array(e),t=new Uint8Array(e);if(n[0]=3735928559,t[0]===239)return!0;if(t[0]===222)return!1;throw new Error("unknown endianness")}}});var Ci,Zp=B(()=>{"use strict";Cr();rt();Ci=class extends jt{constructor(e){super(e)}getFunctions(){return{...this.setFragColor(),...this.getColorAsFloat()}}getCustomTypes(){return{}}setFragColor(){let e=de(this.context.glContext.version);return{setFragColor:new Q(`
        void setFragColor(float value) {
            ${e.output} = encode(value);
        }
        `,["encoding.encode"])}}getColorAsFloat(){return{getColorAsFloat:new Q(`
        float getColorAsFloat(vec4 color) {
            return decode(color);
        }
        `,["encoding.decode"])}}}});var Pi,Jp=B(()=>{"use strict";Cr();Pi=class r extends jt{constructor(e){super(e)}getFunctions(){return{...this.bcastIndex(),...this.bcastMatmulIndex(),...this.offsetToIndices(),...this.indicesToOffset(),...this.incrementIndices()}}getCustomTypes(){return{}}bcastIndex(){let e=this.context.outputTextureLayout.shape.length,n={};return this.context.programInfo.inputNames.forEach((t,o)=>{let i=this.context.inputTextureLayouts[o].unpackedShape;if(i.length<=e){let s=i.length,a=e-s,u=`bcastIndices_${t}`,l="";for(let f=0;f<s;++f)l+=`
          realIndices[${f}] = int( mod(float(bcastedIndices[${a+f}]), ${i[f]}.0) );
          `;let d=`
        void ${u} (int bcastedIndices[${e}], out int realIndices[${s}]) {
          ${l}
        }
        `;n[u]=new Q(d)}}),n}bcastMatmulIndex(){let e=this.context.outputTextureLayout.shape.length,n={};return this.context.programInfo.inputNames.forEach((t,o)=>{let i=this.context.inputTextureLayouts[o].shape;if(!(i.length<2||i.length>e)){let s=i.length,a=e-s,u=`bcastMatmulIndices_${t}`,l="";for(let f=0;f<s-2;++f)l+=`
          realIndices[${f}] = int( mod(float(bcastedIndices[${a+f}]), ${i[f]}.0) );
          `;let d=`
        void ${u}(int bcastedIndices[${e}], out int realIndices[${s}]) {
          ${l}
          realIndices[${s-1}] = bcastedIndices[${e-1}];
          realIndices[${s-2}] = bcastedIndices[${e-2}];
        }
        `;n[u]=new Q(d)}}),n}indicesToOffset(){let e={};return this.context.programInfo.inputNames.forEach((n,t)=>{let o=this.context.inputTextureLayouts[t].shape,i=this.context.inputTextureLayouts[t].strides,s=o.length,a=`indicesToOffset_${n}`;e[a]=new Q(r.indexToOffsetSingle(a,s,i)),a=`indicesToOffset_${n}_T`,e[a]=new Q(r.indexToOffsetSingle(a,s,i.slice().reverse()))}),e}static indexToOffsetSingle(e,n,t){let o="";for(let i=n-1;i>=0;--i)o+=`
        offset += indices[${i}] * ${t[i]};
        `;return`
      int ${e}(int indices[${n}]) {
        int offset = 0;
        ${o}
        return offset;
      }
      `}offsetToIndices(){let e={};return this.context.programInfo.inputNames.forEach((n,t)=>{let o=this.context.inputTextureLayouts[t].shape,i=this.context.inputTextureLayouts[t].strides,s=o.length,a=`offsetToIndices_${n}`;e[a]=new Q(r.offsetToIndicesSingle(a,s,i)),a=`offsetToIndices_${n}_T`,e[a]=new Q(r.offsetToIndicesSingle(a,s,i.slice().reverse()))}),e}static offsetToIndicesSingle(e,n,t){let o=[];for(let i=0;i<n-1;++i)o.push(`
      indices[${i}] = offset / ${t[i]};`),o.push(`
        offset -= indices[${i}] * ${t[i]};`);return o.push(`
      indices[${n-1}] = offset;`),`
      void ${e}(int offset, out int indices[${n}]) {
        ${o.join("")}
      }
      `}incrementIndices(){let e={};return this.context.programInfo.inputNames.forEach((n,t)=>{let o=this.context.inputTextureLayouts[t].shape,i=o.length,s=`incrementIndices_${n}`,a="";for(let l=0;l<i;++l)a+=`
        shape[${l}] = ${o[l]};`;let u=`
        void ${s}(int axis, out int indices[${i}]) {
          int shape[${i}];
          ${a};
          for(int i = ${i} -1 ; i >= 0; --i) {
            if(i > axis) continue;
            indices[i] += 1;
            if(indices[i] < shape[i]) {
              break;
            }
            indices[i] = 0;
          }
        }
        `;e[s]=new Q(u)}),e}}});var ki,Qp=B(()=>{"use strict";Cr();ki=class extends jt{constructor(e){super(e)}getCustomTypes(){return{}}getFunctions(){return{...this.binaryVecFunctions(),...this.copyVec(),...this.setVecItem(),...this.getVecItem()}}binaryVecFunctions(){let n=this.context.outputTextureLayout.shape.length,t={add:"+=",sub:"-=",mul:"*=",div:"/="},o={};for(let i in t){let s=`${i}Vec`,a="";for(let l=0;l<n;++l)a+=`
          dest[${l}] ${t[i]} src[${l}];
          `;let u=`
        void ${s}(int src[${n}], out int dest[${n}]) {
          ${a}
        }
        `;o[s]=new Q(u)}return o}copyVec(){let n=this.context.outputTextureLayout.shape.length,t="";for(let i=0;i<n;++i)t+=`
        dest[${i}] = src[${i}];
        `;let o=`
      void copyVec(int src[${n}], out int dest[${n}]) {
        ${t}
      }
      `;return{copyVec:new Q(o)}}setVecItem(){let n=this.context.outputTextureLayout.shape.length,t=`
        if(index < 0)
            index =${n} + index;
        if (index == 0)
            m[0] = value;
        `;for(let i=1;i<n-1;++i)t+=`
        else if (index == ${i})
            m[${i}] = value;
            `;t+=`
        else
            m[${n-1}] = value;
        `;let o=`
      void setVecItem(out int m[${n}], int index, int value) {
        ${t}
      }
        `;return{setVecItem:new Q(o)}}getVecItem(){let n=this.context.outputTextureLayout.shape.length,t=`
        if(index < 0)
            index = ${n} + index;
        if (index == 0)
            return m[0];
      `;for(let i=1;i<n-1;++i)t+=`
        else if (index == ${i})
            return m[${i}];
      `;t+=`
        else
            return m[${n-1}];
        `;let o=`
      int getVecItem(int m[${n}], int index) {
        ${t}
      }
    `;return{getVecItem:new Q(o)}}}});var Os,eh=B(()=>{"use strict";Xp();Yp();Zp();Jp();Qp();Os={encoding:Ei,fragcolor:Ci,vec:ki,shapeUtils:Pi,coordinates:Oi}});var Di,th=B(()=>{"use strict";Cr();jp();eh();rt();Di=class{constructor(e,n,t,o){this.libs={};this.glslLibRoutineDependencyGraph={};this.context=new bi(e,n,t,o),Object.keys(Os).forEach(s=>{let a=new Os[s](this.context);this.libs[s]=a});let i=this.glslLibRoutineDependencyGraph;for(let s in this.libs){let u=this.libs[s].getFunctions();for(let l in u){let d=s+"."+l,f;i[d]?(f=i[d],f.routineBody=u[l].routineBody):(f=new mo(d,u[l].routineBody),i[d]=f);let p=u[l].dependencies;if(p)for(let g=0;g<p.length;++g)if(i[p[g]])f.addDependency(i[p[g]]);else{let b=new mo(p[g]);i[p[g]]=b,f.addDependency(b)}}}}preprocess(){let e=this.context.programInfo,n=e.shaderSource;return this.context.programInfo.hasMain||(n=`${n}
      ${Bd(this.context.glContext.version,this.context.outputTextureLayout.shape.length)}`),n=qp(n),`${Dd(this.context.glContext.version)}
    ${this.getUniforms(e.inputNames,e.variables)}
    ${this.getImports(n)}
    ${n}`}getImports(e){let n=this.selectGlslLibRoutinesToBeIncluded(e);if(n.length===0)return"";let t="";for(let o=0;o<n.length;++o)if(n[o].routineBody)t+=n[o].routineBody+`
`;else throw new Error(`Missing body for the Glsl Library routine: ${n[o].name}`);return t}selectGlslLibRoutinesToBeIncluded(e){let n=[];return Object.keys(this.glslLibRoutineDependencyGraph).forEach(t=>{let o=t.split(".")[1];e.indexOf(o)!==-1&&n.push(this.glslLibRoutineDependencyGraph[t])}),yi.returnOrderedNodes(n)}getUniforms(e,n){let t=[];if(e)for(let o of e)t.push(`uniform sampler2D ${o};`);if(n)for(let o of n)t.push(`uniform ${o.type} ${o.name}${o.arrayLength?`[${o.arrayLength}]`:""};`);return t.join(`
`)}}});var Bi,rh=B(()=>{"use strict";It();Ut();th();rt();Bi=class{constructor(e,n,t){this.profiler=e;this.glContext=n;this.textureLayoutStrategy=t;this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,n){this.repo.set(e,n)}run(e,n,t){this.profiler.event("op",`ProgramManager.run ${e.programInfo.name??"unknown kernel"}`,()=>{let o=this.glContext.gl,i=e.program;o.useProgram(i);try{this.bindOutput(t),this.attributesBound||this.bindAttributes(e.attribLocations),this.bindUniforms(e.uniformLocations,e.programInfo.variables??[],n)}catch(s){throw je.error("ProgramManager",e.programInfo.shaderSource),s}this.profiler.event("backend","GlContext.draw()",()=>{this.glContext.draw()})},this.glContext)}dispose(){this.vertexShader&&this.glContext.deleteShader(this.vertexShader),this.repo.forEach(e=>this.glContext.deleteProgram(e.program))}build(e,n,t){return this.profiler.event("backend","ProgramManager.build",()=>{let o=new Di(this.glContext,e,n,t),i=o.preprocess(),s=this.compile(i);return{programInfo:e,program:s,uniformLocations:this.getUniformLocations(s,o.context.programInfo.inputNames,o.context.programInfo.variables),attribLocations:this.getAttribLocations(s)}})}compile(e){if(!this.vertexShader){je.verbose("ProrgramManager","Compiling and caching Vertex shader for the first time");let o=kd(this.glContext.version);this.vertexShader=this.glContext.compileShader(o,this.glContext.gl.VERTEX_SHADER)}ye.debug&&je.verbose("ProrgramManager",`FragShader:
${e}
`);let n=this.glContext.compileShader(e,this.glContext.gl.FRAGMENT_SHADER),t=this.glContext.createProgram(this.vertexShader,n);return this.glContext.deleteShader(n),t}bindOutput(e){let n=e.width,t=e.height;je.verbose("ProrgramManager",`Binding output texture to Framebuffer: w/h=${n}/${t}, shape=${e.shape}, type=${e.tensor.type}`),this.glContext.attachFramebuffer(e.texture,n,t)}bindAttributes(e){let n=e.position,t=e.textureCoord;this.glContext.setVertexAttributes(n,t),this.attributesBound=!0}bindUniforms(e,n,t){let o=this.glContext.gl,i=0;for(let{name:s,type:a,location:u,arrayLength:l}of e){let d=n.find(f=>f.name===s)?.data;if(a!=="sampler2D"&&!d)throw new Error(`variable '${s}' does not have data defined in program info`);switch(a){case"sampler2D":this.bindTexture(t[i],u,i),i++;break;case"float":l?o.uniform1fv(u,d):o.uniform1f(u,d);break;case"int":l?o.uniform1iv(u,d):o.uniform1i(u,d);break;default:throw new Error(`Uniform not implemented: ${a}`)}}}bindTexture(e,n,t){this.glContext.bindTextureToUniform(e.texture,t,n)}getAttribLocations(e){return{position:this.getAttribLocation(e,"position"),textureCoord:this.getAttribLocation(e,"textureCoord")}}getUniformLocations(e,n,t){let o=[];if(n)for(let i of n)o.push({name:i,type:"sampler2D",location:this.getUniformLocation(e,i)});if(t)for(let i of t)o.push({...i,location:this.getUniformLocation(e,i.name)});return o}getUniformLocation(e,n){let o=this.glContext.gl.getUniformLocation(e,n);if(o===null)throw new Error(`Uniform ${n} not found.`);return o}getAttribLocation(e,n){return this.glContext.gl.getAttribLocation(e,n)}}});var Ri,nh=B(()=>{"use strict";Ut();po();Ri=class{constructor(e,n,t,o){this.glContext=e;this.layoutStrategy=n;this.profiler=t;this.config=o;this.pendingRead=new Map;o.reuseTextures&&(this.inUseTextures=new Map,this.idleTextures=new Map,this.textureLookup=new Map)}createTextureFromLayout(e,n,t,o){let i=this.toEncoderType(e),s=this.glContext.getEncoder(i,n.channels||1,o);if(n.isPacked&&o===1)throw new Error("not implemented");let a=n.width,u=n.height,l,d;if(this.config.reuseTextures){l=`${a}x${u}_${s.format}_${s.internalFormat}_${s.textureType}`,d=this.inUseTextures.get(l),d||(d=[],this.inUseTextures.set(l,d));let p=this.idleTextures.get(l);if(p&&p.length>0){let g=p.pop();return d.push(g),o===1&&this.glContext.updateTexture(g,a,u,s,this.toTextureData(e,t)),g}}je.verbose("TextureManager",`Creating new texture of size ${n.width}x${n.height}`);let f=this.glContext.allocateTexture(a,u,s,this.toTextureData(e,t));return this.config.reuseTextures&&(d.push(f),this.textureLookup.set(f,l)),f}readTexture(e,n,t){return t||(t=1),this.profiler.event("backend","TextureManager.readTexture",()=>{let o=e.shape.reduce((s,a)=>s*a)*t,i=this.glContext.readTexture(e.texture,e.width,e.height,o,this.toEncoderType(n),t);return this.toTensorData(n,i)})}async readTextureAsync(e,n,t){let o=e.tensor.dataId;if(t||(t=1),this.pendingRead.has(o)){let i=this.pendingRead.get(o);return new Promise(s=>i?.push(s))}return this.profiler.event("backend","TextureManager.readTextureAsync",async()=>{this.pendingRead.set(o,[]);let i=e.shape.reduce((l,d)=>l*d)*t;await this.glContext.createAndWaitForFence();let s=this.glContext.readTexture(e.texture,e.width,e.height,i,this.toEncoderType(n),t),a=this.toTensorData(n,s),u=this.pendingRead.get(o);return this.pendingRead.delete(o),u?.forEach(l=>l(a)),a})}readUint8TextureAsFloat(e){return this.profiler.event("backend","TextureManager.readUint8TextureAsFloat",()=>{let n=e.shape.reduce((o,i)=>o*i),t=this.glContext.readTexture(e.texture,e.width,e.height,n*4,"byte",4);return new Float32Array(t.buffer,t.byteOffset,n)})}releaseTexture(e,n){let t;if(this.config.reuseTextures&&(t=this.textureLookup.get(e.texture),t)){n&&this.textureLookup.delete(t);let o=this.inUseTextures.get(t);if(o){let i=o.indexOf(e.texture);if(i!==-1){o.splice(i,1);let s=this.idleTextures.get(t);s||(s=[],this.idleTextures.set(t,s)),s.push(e.texture)}}}(!t||n)&&(je.verbose("TextureManager",`Deleting texture of size ${e.width}x${e.height}`),this.glContext.deleteTexture(e.texture))}toTensorData(e,n){switch(e){case"int16":return n instanceof Int16Array?n:Int16Array.from(n);case"int32":return n instanceof Int32Array?n:Int32Array.from(n);case"int8":return n instanceof Int8Array?n:Int8Array.from(n);case"uint16":return n instanceof Uint16Array?n:Uint16Array.from(n);case"uint32":return n instanceof Uint32Array?n:Uint32Array.from(n);case"uint8":case"bool":return n instanceof Uint8Array?n:Uint8Array.from(n);case"float32":return n instanceof Float32Array?n:Float32Array.from(n);case"float64":return n instanceof Float64Array?n:Float64Array.from(n);default:throw new Error(`TensorData type ${e} is not supported`)}}toTextureData(e,n){if(n)return n instanceof Float32Array?n:new Float32Array(n)}toEncoderType(e){return"float"}clearActiveTextures(){this.glContext.clearActiveTextures()}}});var Mi,oh=B(()=>{"use strict";Ut();yl();Xd();Wp();rh();As();nh();Mi=class{constructor(e,n){this.backend=e;this.context=n;this.layoutStrategy=new Ai(e.glContext.maxTextureSize),this.programManager=new Bi(this.context.profiler,e.glContext,this.layoutStrategy),this.textureManager=new Ri(e.glContext,this.layoutStrategy,this.context.profiler,{reuseTextures:e.textureCacheMode==="full"}),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache=new Map,this.pack=e.pack,this.pack2unpackMap=new Map,this.unpack2packMap=new Map}createInferenceHandler(){return new gi(this)}onGraphInitialized(e){let n=e.getValues().filter(t=>t.from===-1&&t.tensor).map(t=>t.tensor.dataId);this.initializers=new Set(n)}isInitializer(e){return this.initializers?this.initializers.has(e):!1}addInitializer(e){this.initializers.add(e)}getTextureData(e,n){return n?this.packedTextureDataCache.get(e):this.unpackedTextureDataCache.get(e)}setTextureData(e,n,t=!1){je.verbose("WebGLSessionHandler","Storing Texture data in cache"),t?this.packedTextureDataCache.set(e,n):this.unpackedTextureDataCache.set(e,n)}dispose(){this.programManager.dispose(),this.textureManager.clearActiveTextures(),this.packedTextureDataCache.forEach(e=>this.textureManager.releaseTexture(e,!0)),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache.forEach(e=>this.textureManager.releaseTexture(e,!0)),this.unpackedTextureDataCache=new Map}resolve(e,n,t){let o=bl(e,n,Up);return{impl:o.opImpl,context:o.opInit?o.opInit(e,t):e}}}});function dx(r){let e=0;for(;e<r.length&&r[e]();++e);return e-1}var yo,ih=B(()=>{"use strict";It();po();po();fr();yo=class{constructor(e,n){this.frameBufferBound=!1;this.itemsToPoll=[];this.gl=e,this.version=n,this.getExtensions(),this.vertexbuffer=this.createVertexbuffer(),this.framebuffer=this.createFramebuffer(),this.queryVitalParameters()}allocateTexture(e,n,t,o){let i=this.gl,s=i.createTexture();i.bindTexture(i.TEXTURE_2D,s),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE);let a=o?t.encode(o,e*n):null;return i.texImage2D(i.TEXTURE_2D,0,t.internalFormat,e,n,0,t.format,t.textureType,a),this.checkError(),s}updateTexture(e,n,t,o,i){let s=this.gl;s.bindTexture(s.TEXTURE_2D,e);let a=o.encode(i,n*t);s.texSubImage2D(s.TEXTURE_2D,0,0,0,n,t,o.format,o.textureType,a),this.checkError()}attachFramebuffer(e,n,t){let o=this.gl;o.bindTexture(o.TEXTURE_2D,e),o.bindFramebuffer(o.FRAMEBUFFER,this.framebuffer),o.framebufferTexture2D(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,e,0),this.checkError(),o.viewport(0,0,n,t),o.scissor(0,0,n,t)}readTexture(e,n,t,o,i,s){let a=this.gl;s||(s=1),this.frameBufferBound||this.attachFramebuffer(e,n,t);let u=this.getEncoder(i,s),l=u.allocate(n*t);return a.bindTexture(a.TEXTURE_2D,e),a.framebufferTexture2D(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,e,0),a.readPixels(0,0,n,t,a.RGBA,u.textureType,l),this.checkError(),u.decode(l,o)}isFramebufferReady(){return!0}getActiveTexture(){let e=this.gl;return`TEXTURE${e.getParameter(this.gl.ACTIVE_TEXTURE)-e.TEXTURE0}`}getTextureBinding(){return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D)}getFramebufferBinding(){return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING)}setVertexAttributes(e,n){let t=this.gl;t.vertexAttribPointer(e,3,t.FLOAT,!1,20,0),t.enableVertexAttribArray(e),n!==-1&&(t.vertexAttribPointer(n,2,t.FLOAT,!1,20,12),t.enableVertexAttribArray(n)),this.checkError()}createProgram(e,n){let t=this.gl,o=t.createProgram();return t.attachShader(o,e),t.attachShader(o,n),t.linkProgram(o),o}compileShader(e,n){let t=this.gl,o=t.createShader(n);if(!o)throw new Error(`createShader() returned null with type ${n}`);if(t.shaderSource(o,e),t.compileShader(o),t.getShaderParameter(o,t.COMPILE_STATUS)===!1)throw new Error(`Failed to compile shader: ${t.getShaderInfoLog(o)}
Shader source:
${e}`);return o}deleteShader(e){this.gl.deleteShader(e)}bindTextureToUniform(e,n,t){let o=this.gl;o.activeTexture(o.TEXTURE0+n),this.checkError(),o.bindTexture(o.TEXTURE_2D,e),this.checkError(),o.uniform1i(t,n),this.checkError()}draw(){this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4),this.checkError()}checkError(){if(ye.debug){let e=this.gl,n=e.getError(),t="";switch(n){case e.NO_ERROR:return;case e.INVALID_ENUM:t="INVALID_ENUM";break;case e.INVALID_VALUE:t="INVALID_VALUE";break;case e.INVALID_OPERATION:t="INVALID_OPERATION";break;case e.INVALID_FRAMEBUFFER_OPERATION:t="INVALID_FRAMEBUFFER_OPERATION";break;case e.OUT_OF_MEMORY:t="OUT_OF_MEMORY";break;case e.CONTEXT_LOST_WEBGL:t="CONTEXT_LOST_WEBGL";break;default:t=`Unknown WebGL Error: ${n.toString(16)}`}throw new Error(t)}}deleteTexture(e){this.gl.deleteTexture(e)}deleteProgram(e){this.gl.deleteProgram(e)}getEncoder(e,n,t=0){if(this.version===2)return new hi(this.gl,n);switch(e){case"float":return t===1||this.isRenderFloat32Supported?new fo(this.gl,n):new fo(this.gl,n,this.textureHalfFloatExtension.HALF_FLOAT_OES);case"int":throw new Error("not implemented");case"byte":return new mi(this.gl,n);default:throw new Error(`Invalid dataType: ${e}`)}}clearActiveTextures(){let e=this.gl;for(let n=0;n<this.maxTextureImageUnits;++n)e.activeTexture(e.TEXTURE0+n),e.bindTexture(e.TEXTURE_2D,null)}dispose(){if(this.disposed)return;let e=this.gl;e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteFramebuffer(this.framebuffer),e.bindBuffer(e.ARRAY_BUFFER,null),e.deleteBuffer(this.vertexbuffer),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null),e.finish(),this.disposed=!0}createDefaultGeometry(){return new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0])}createVertexbuffer(){let e=this.gl,n=e.createBuffer();if(!n)throw new Error("createBuffer() returned null");let t=this.createDefaultGeometry();return e.bindBuffer(e.ARRAY_BUFFER,n),e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW),this.checkError(),n}createFramebuffer(){let e=this.gl.createFramebuffer();if(!e)throw new Error("createFramebuffer returned null");return e}queryVitalParameters(){let e=this.gl;if(this.isFloatTextureAttachableToFrameBuffer=this.checkFloatTextureAttachableToFrameBuffer(),this.isRenderFloat32Supported=this.checkRenderFloat32(),this.isFloat32DownloadSupported=this.checkFloat32Download(),this.version===1&&!this.textureHalfFloatExtension&&!this.isRenderFloat32Supported)throw new Error("both float32 and float16 TextureType are not supported");this.isBlendSupported=!this.isRenderFloat32Supported||this.checkFloat32Blend(),this.maxTextureSize=e.getParameter(e.MAX_TEXTURE_SIZE),this.maxTextureImageUnits=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),this.version}getExtensions(){this.version===2?(this.colorBufferFloatExtension=this.gl.getExtension("EXT_color_buffer_float"),this.disjointTimerQueryWebgl2Extension=this.gl.getExtension("EXT_disjoint_timer_query_webgl2")):(this.textureFloatExtension=this.gl.getExtension("OES_texture_float"),this.textureHalfFloatExtension=this.gl.getExtension("OES_texture_half_float"))}checkFloatTextureAttachableToFrameBuffer(){let e=this.gl,n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let t=this.version===2?e.RGBA32F:e.RGBA;e.texImage2D(e.TEXTURE_2D,0,t,1,1,0,e.RGBA,e.FLOAT,null);let o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(o),i}checkRenderFloat32(){if(this.version===2){if(!this.colorBufferFloatExtension)return!1}else if(!this.textureFloatExtension)return!1;return this.isFloatTextureAttachableToFrameBuffer}checkFloat32Download(){if(this.version===2){if(!this.colorBufferFloatExtension)return!1}else if(!this.textureFloatExtension||!this.gl.getExtension("WEBGL_color_buffer_float"))return!1;return this.isFloatTextureAttachableToFrameBuffer}checkFloat32Blend(){let e=this.gl,n,t,o,i,s;try{n=e.createTexture(),t=e.createFramebuffer(),e.bindTexture(e.TEXTURE_2D,n);let a=this.version===2?e.RGBA32F:e.RGBA;return e.texImage2D(e.TEXTURE_2D,0,a,1,1,0,e.RGBA,e.FLOAT,null),e.bindFramebuffer(e.FRAMEBUFFER,t),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0),e.enable(e.BLEND),o=e.createShader(e.VERTEX_SHADER),!o||(e.shaderSource(o,"void main(){}"),e.compileShader(o),i=e.createShader(e.FRAGMENT_SHADER),!i)||(e.shaderSource(i,"precision highp float;void main(){gl_FragColor=vec4(0.5);}"),e.compileShader(i),s=e.createProgram(),!s)?!1:(e.attachShader(s,o),e.attachShader(s,i),e.linkProgram(s),e.useProgram(s),e.drawArrays(e.POINTS,0,1),e.getError()===e.NO_ERROR)}finally{e.disable(e.BLEND),s&&e.deleteProgram(s),o&&e.deleteShader(o),i&&e.deleteShader(i),t&&(e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteFramebuffer(t)),n&&(e.bindTexture(e.TEXTURE_2D,null),e.deleteTexture(n))}}beginTimer(){if(this.version===2&&this.disjointTimerQueryWebgl2Extension){let e=this.gl,n=this.disjointTimerQueryWebgl2Extension,t=e.createQuery();return e.beginQuery(n.TIME_ELAPSED_EXT,t),t}else throw new Error("WebGL1 profiling currently not supported.")}endTimer(){if(this.version===2&&this.disjointTimerQueryWebgl2Extension){let e=this.gl,n=this.disjointTimerQueryWebgl2Extension;e.endQuery(n.TIME_ELAPSED_EXT);return}else throw new Error("WebGL1 profiling currently not supported")}isTimerResultAvailable(e){let n=!1,t=!1;if(this.version===2&&this.disjointTimerQueryWebgl2Extension){let o=this.gl,i=this.disjointTimerQueryWebgl2Extension;n=o.getQueryParameter(e,o.QUERY_RESULT_AVAILABLE),t=o.getParameter(i.GPU_DISJOINT_EXT)}else throw new Error("WebGL1 profiling currently not supported");return n&&!t}getTimerResult(e){let n=0;if(this.version===2){let t=this.gl;n=t.getQueryParameter(e,t.QUERY_RESULT),t.deleteQuery(e)}else throw new Error("WebGL1 profiling currently not supported");return n/1e6}async waitForQueryAndGetTime(e){return await Qa(()=>this.isTimerResultAvailable(e)),this.getTimerResult(e)}async createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let n,t=e,o=t.fenceSync(t.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),o===null?n=()=>!0:n=()=>{let i=t.clientWaitSync(o,0,0);return i===t.ALREADY_SIGNALED||i===t.CONDITION_SATISFIED},{query:o,isFencePassed:n}}async pollFence(e){return new Promise(n=>{this.addItemToPoll(()=>e.isFencePassed(),()=>n())})}pollItems(){let e=dx(this.itemsToPoll.map(n=>n.isDoneFn));for(let n=0;n<=e;++n){let{resolveFn:t}=this.itemsToPoll[n];t()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}async addItemToPoll(e,n){this.itemsToPoll.push({isDoneFn:e,resolveFn:n}),!(this.itemsToPoll.length>1)&&await Qa(()=>(this.pollItems(),this.itemsToPoll.length===0))}}});function Es(r){let e;if((!r||r==="webgl2")&&"webgl2"in Bn?e=Bn.webgl2:(!r||r==="webgl")&&"webgl"in Bn&&(e=Bn.webgl),!e)try{let t=fx();e=ah(t,r)}catch{let o=cx();e=ah(o,r)}r=r||e.version===1?"webgl":"webgl2";let n=e.gl;return Bn[r]=e,n.isContextLost()?(delete Bn[r],Es(r)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),e)}function ah(r,e){let n={alpha:!1,depth:!1,antialias:!1,stencil:!1,preserveDrawingBuffer:!1,premultipliedAlpha:!1,failIfMajorPerformanceCaveat:!1},t,o=n;if((!e||e==="webgl2")&&(t=r.getContext("webgl2",o),t))try{return new yo(t,2)}catch(i){je.warning("GlContextFactory",`failed to create WebGLContext using contextId 'webgl2'. Error: ${i}`)}if((!e||e==="webgl")&&(t=r.getContext("webgl",o)||r.getContext("experimental-webgl",o),t))try{return new yo(t,1)}catch(i){je.warning("GlContextFactory",`failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${i}`)}throw new Error("WebGL is not supported")}function cx(){if(typeof document>"u")throw new TypeError("failed to create canvas: document is not supported");let r=document.createElement("canvas");return r.width=1,r.height=1,r}function fx(){if(typeof OffscreenCanvas>"u")throw new TypeError("failed to create offscreen canvas: OffscreenCanvas is not supported");return new OffscreenCanvas(1,1)}var Bn,sh=B(()=>{"use strict";Ut();ih();Bn={}});var Li,uh=B(()=>{"use strict";It();Ut();oh();sh();Li=class{get contextId(){return ye.webgl.contextId}set contextId(e){ye.webgl.contextId=e}get matmulMaxBatchSize(){return ye.webgl.matmulMaxBatchSize}set matmulMaxBatchSize(e){ye.webgl.matmulMaxBatchSize=e}get textureCacheMode(){return ye.webgl.textureCacheMode}set textureCacheMode(e){ye.webgl.textureCacheMode=e}get pack(){return ye.webgl.pack}set pack(e){ye.webgl.pack=e}get async(){return ye.webgl.async}set async(e){ye.webgl.async=e}initialize(){try{return this.glContext=Es(this.contextId),typeof this.matmulMaxBatchSize!="number"&&(this.matmulMaxBatchSize=16),typeof this.textureCacheMode!="string"&&(this.textureCacheMode="full"),typeof this.pack!="boolean"&&(this.pack=!1),typeof this.async!="boolean"&&(this.async=!1),je.setWithEnv(ye),ye.webgl.context||Object.defineProperty(ye.webgl,"context",{value:this.glContext.gl}),je.verbose("WebGLBackend",`Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${this.async}.`),!0}catch(e){return je.warning("WebGLBackend",`Unable to initialize WebGLBackend. ${e}`),!1}}createSessionHandler(e){return new Mi(this,e)}dispose(){this.glContext.dispose()}}});async function Cs(r){if(r){let e=typeof r=="string"?[r]:r;for(let n of e){let t=lh.get(n);if(t)return t;let o=await hx(n);if(o)return o}}else return Cs(["webgl"]);throw new Error("no available backend to use")}async function hx(r){let e=px;if(typeof e[r]<"u"&&mx(e[r])){let n=e[r],t=n.initialize();if(typeof t=="object"&&"then"in t&&(t=await t),t)return lh.set(r,n),n}}function mx(r){let e=r;return"initialize"in e&&typeof e.initialize=="function"&&"createSessionHandler"in e&&typeof e.createSessionHandler=="function"&&"dispose"in e&&typeof e.dispose=="function"}var lh,px,dh=B(()=>{"use strict";uh();lh=new Map,px={webgl:new Li}});var Ps,zi,ch=B(()=>{"use strict";Ut();Ps=class{constructor(e,n){this.op=e;this.node=n}},zi=class{constructor(e,n,t){this.graph=e;this.profiler=t;this.initialize(n)}initialize(e){this.profiler.event("session","ExecutionPlan.initialize",()=>{let n=this.graph.getNodes();if(n.length!==e.length)throw new Error("The size of nodes and OPs do not match.");this._ops=e.map((t,o)=>new Ps(t,n[o])),this.reset(),this._starter=[],this._ops.forEach((t,o)=>{let i=!0;for(let s of t.node.inputs)if(!this._values[s]&&this.graph.getInputIndices().indexOf(s)===-1){i=!1;break}i&&this._starter.push(o)})})}reset(){this._values=this.graph.getValues().map(e=>e.tensor)}async execute(e,n){return this.profiler.event("session","ExecutionPlan.execute",async()=>{this.reset();let t=e.createInferenceHandler(),o=this.graph.getInputIndices();if(n.length!==o.length)throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${n.length} expected: ${o.length}`);n.forEach((d,f)=>{let p=o[f];this._values[p]=d});let i=this._starter.slice(0),s=this.graph.getValues(),a=this.graph.getNodes(),u=0;for(;u<i.length;){let d=i[u++],f=this._ops[d],p=f.node.inputs.map(T=>this._values[T]);if(p.indexOf(void 0)!==-1)throw new Error(`unresolved input detected: op: ${f.node}`);let g=p;je.verbose("ExecPlan",`Runing op:${f.node.name} (${g.map((T,x)=>`'${f.node.inputs[x]}': ${T.type}[${T.dims.join(",")}]`).join(", ")})`);let b=await this.profiler.event("node",f.node.name,async()=>f.op.impl(t,g,f.op.context));if(b.length!==f.node.outputs.length)throw new Error("the size of output does not match model definition.");b.forEach((T,x)=>{let _=f.node.outputs[x];if(this._values[_])throw new Error(`output [${_}] already has value: op:${f.node.name}`);this._values[_]=T});let y=new Set;b.forEach((T,x)=>{let _=f.node.outputs[x];for(let O of s[_].to){let C=a[O],N=!0;for(let k of C.inputs)if(!this._values[k]){N=!1;break}N&&y.add(O)}}),i.push(...y)}let l=[];for(let d=0;d<this.graph.getOutputIndices().length;d++){let f=this.graph.getOutputIndices()[d],p=this._values[f];if(p===void 0)throw new Error(`required output [${f}] does not have value`);f===0?await p.getData():p.data,l.push(p)}return je.verbose("ExecPlan","disposing of inferenceHandler"),t.dispose(),l})}}});var Pe,Yt,vo,fh=B(()=>{"use strict";io();Pe=$n(In());sn();He();Yt=ue.experimental.fbs,vo=class r{constructor(e){if(this._attributes=new Map,e!=null){for(let n of e)n instanceof Pe.onnx.AttributeProto?this._attributes.set(n.name,[r.getValue(n),r.getType(n)]):n instanceof Yt.Attribute&&this._attributes.set(n.name(),[r.getValue(n),r.getType(n)]);if(this._attributes.size<e.length)throw new Error("duplicated attribute names")}}set(e,n,t){this._attributes.set(e,[t,n])}delete(e){this._attributes.delete(e)}getFloat(e,n){return this.get(e,"float",n)}getInt(e,n){return this.get(e,"int",n)}getString(e,n){return this.get(e,"string",n)}getTensor(e,n){return this.get(e,"tensor",n)}getFloats(e,n){return this.get(e,"floats",n)}getInts(e,n){return this.get(e,"ints",n)}getStrings(e,n){return this.get(e,"strings",n)}getTensors(e,n){return this.get(e,"tensors",n)}get(e,n,t){let o=this._attributes.get(e);if(o===void 0){if(t!==void 0)return t;throw new Error(`required attribute not found: ${e}`)}if(o[1]!==n)throw new Error(`type mismatch: expected ${n} but got ${o[1]}`);return o[0]}static getType(e){let n=e instanceof Pe.onnx.AttributeProto?e.type:e.type();switch(n){case Pe.onnx.AttributeProto.AttributeType.FLOAT:return"float";case Pe.onnx.AttributeProto.AttributeType.INT:return"int";case Pe.onnx.AttributeProto.AttributeType.STRING:return"string";case Pe.onnx.AttributeProto.AttributeType.TENSOR:return"tensor";case Pe.onnx.AttributeProto.AttributeType.FLOATS:return"floats";case Pe.onnx.AttributeProto.AttributeType.INTS:return"ints";case Pe.onnx.AttributeProto.AttributeType.STRINGS:return"strings";case Pe.onnx.AttributeProto.AttributeType.TENSORS:return"tensors";default:throw new Error(`attribute type is not supported yet: ${Pe.onnx.AttributeProto.AttributeType[n]}`)}}static getValue(e){let n=e instanceof Pe.onnx.AttributeProto?e.type:e.type();if(n===Pe.onnx.AttributeProto.AttributeType.GRAPH||n===Pe.onnx.AttributeProto.AttributeType.GRAPHS)throw new Error("graph attribute is not supported yet");let t=this.getValueNoCheck(e);if(n===Pe.onnx.AttributeProto.AttributeType.INT&&Lt.isLong(t))return Lt.longToNumber(t);if(n===Pe.onnx.AttributeProto.AttributeType.INTS){let o=t,i=new Array(o.length);for(let s=0;s<o.length;s++){let a=o[s];i[s]=Lt.longToNumber(a)}return i}if(n===Pe.onnx.AttributeProto.AttributeType.TENSOR)return e instanceof Pe.onnx.AttributeProto?mt.fromProto(t):mt.fromOrtTensor(t);if(n===Pe.onnx.AttributeProto.AttributeType.TENSORS){if(e instanceof Pe.onnx.AttributeProto)return t.map(i=>mt.fromProto(i));if(e instanceof Yt.Attribute)return t.map(i=>mt.fromOrtTensor(i))}return n===Pe.onnx.AttributeProto.AttributeType.STRING&&e instanceof Pe.onnx.AttributeProto?co(t):n===Pe.onnx.AttributeProto.AttributeType.STRINGS&&e instanceof Pe.onnx.AttributeProto?t.map(co):t}static getValueNoCheck(e){return e instanceof Pe.onnx.AttributeProto?this.getValueNoCheckFromOnnxFormat(e):this.getValueNoCheckFromOrtFormat(e)}static getValueNoCheckFromOnnxFormat(e){switch(e.type){case Pe.onnx.AttributeProto.AttributeType.FLOAT:return e.f;case Pe.onnx.AttributeProto.AttributeType.INT:return e.i;case Pe.onnx.AttributeProto.AttributeType.STRING:return e.s;case Pe.onnx.AttributeProto.AttributeType.TENSOR:return e.t;case Pe.onnx.AttributeProto.AttributeType.GRAPH:return e.g;case Pe.onnx.AttributeProto.AttributeType.FLOATS:return e.floats;case Pe.onnx.AttributeProto.AttributeType.INTS:return e.ints;case Pe.onnx.AttributeProto.AttributeType.STRINGS:return e.strings;case Pe.onnx.AttributeProto.AttributeType.TENSORS:return e.tensors;case Pe.onnx.AttributeProto.AttributeType.GRAPHS:return e.graphs;default:throw new Error(`unsupported attribute type: ${Pe.onnx.AttributeProto.AttributeType[e.type]}`)}}static getValueNoCheckFromOrtFormat(e){switch(e.type()){case Yt.AttributeType.FLOAT:return e.f();case Yt.AttributeType.INT:return e.i();case Yt.AttributeType.STRING:return e.s();case Yt.AttributeType.TENSOR:return e.t();case Yt.AttributeType.GRAPH:return e.g();case Yt.AttributeType.FLOATS:return e.floatsArray();case Yt.AttributeType.INTS:{let n=[];for(let t=0;t<e.intsLength();t++)n.push(e.ints(t));return n}case Yt.AttributeType.STRINGS:{let n=[];for(let t=0;t<e.stringsLength();t++)n.push(e.strings(t));return n}case Yt.AttributeType.TENSORS:{let n=[];for(let t=0;t<e.tensorsLength();t++)n.push(e.tensors(t));return n}default:throw new Error(`unsupported attribute type: ${Yt.AttributeType[e.type()]}`)}}}});var Ds,Ni,Bs,mr,Fi,ks,ph=B(()=>{"use strict";fh();io();Ds=$n(In());sn();He();Ni=ue.experimental.fbs,Bs={from:(r,e)=>new ks(r,e)},mr=class{constructor(e){this._from=void 0,this._to=[],this.tensor=void 0,this.type=void 0,e&&(this.type=St.tensorValueTypeFromProto(e.type.tensorType))}get from(){return this._from}get to(){return this._to}},Fi=class{constructor(e,n){e instanceof Ds.onnx.NodeProto?(this.name=e.name,this.opType=e.opType,this.attributes=new vo(e.attribute)):e instanceof Ni.Node&&(this.name=n??e.name(),this.opType=e.opType(),this.attributes=new vo(St.tensorAttributesFromORTFormat(e))),this.inputs=[],this.outputs=[],this.executeNode=!0}},ks=class{constructor(e,n){if(!e)throw new TypeError("graph is empty");this.buildGraph(e),this.transformGraph(n),this.checkIsAcyclic()}getInputIndices(){return this._allInputIndices}getInputNames(){return this._allInputNames}getOutputIndices(){return this._allOutputIndices}getOutputNames(){return this._allOutputNames}getValues(){return this._allData}getNodes(){return this._nodes}buildGraph(e){if(e instanceof Ds.onnx.GraphProto)this.buildGraphFromOnnxFormat(e);else if(e instanceof Ni.Graph)this.buildGraphFromOrtFormat(e);else throw new TypeError("Graph type is not supported.")}buildGraphFromOnnxFormat(e){let n=new Map;this._allData=[],this._allInputIndices=[],this._allInputNames=[],this._allOutputIndices=[],this._allOutputNames=[],this._nodes=[];let t=new Map;if(!e.input)throw new Error("missing information in graph: input");let o=[];for(let i of e.input){if(n.has(i.name))throw new Error(`duplicated input name: ${i.name}`);let s=this._allData.push(new mr(i))-1;n.set(i.name,s),o.push(i.name)}if(!e.initializer)throw new Error("missing information in graph: initializer");for(let i of e.initializer){let s=n.get(i.name);if(s===void 0){let a=new mr;a.type={shape:{dims:St.tensorDimsFromProto(i.dims)},tensorType:St.tensorDataTypeFromProto(i.dataType)},s=this._allData.push(a)-1,n.set(i.name,s)}this._allData[s]._from=-1,this._allData[s].tensor=mt.fromProto(i)}for(let i=0;i<this._allData.length;i++)this._allData[i].tensor||(this._allInputIndices.push(i),this._allInputNames.push(o[i]));if(!e.output)throw new Error("missing information in graph: output");for(let i of e.output){if(n.has(i.name))throw new Error(`duplicated output name: ${i.name}`);let s=this._allData.push(new mr(i))-1;n.set(i.name,s),this._allOutputIndices.push(s),this._allOutputNames.push(i.name)}if(!e.node)throw new Error("missing information in graph: node");for(let i of e.node){if(!i.name)for(let a=0;;a++){let u=`unnamed_${i.opType}_${a}`;if(!t.has(u)){i.name=u;break}}if(t.has(i.name))throw new Error(`duplicated node name: ${i.name}`);let s=this._nodes.push(new Fi(i))-1;t.set(i.name,s)}for(let i=0;i<this._nodes.length;i++){let s=this._nodes[i],a=e.node[i];if(!a.output)throw new Error(`missing output for node: ${a.name}`);for(let u of a.output){let l=n.get(u);if(typeof l>"u"&&(l=this._allData.push(new mr)-1,n.set(u,l)),s.outputs.push(l),this._allData[l]._from!==void 0)throw new Error(`multiple nodes output to one data value: ${l}`);if(this._allData[l]._from=i,a.opType==="Constant"){if(!a.attribute||a.attribute.length!==1||!a.attribute[0].t)throw new Error("missing attributes or missing tensor value in attributes for this Constant operator");if(!a.output||a.output.length!==1)throw new Error("missing output or incorrect number of outputs for this Constant operator");s.outputs.pop(),s.executeNode=!1,this._allData[l]._from=-1,this._allData[l].tensor=mt.fromProto(a.attribute[0].t)}}}for(let i=0;i<this._nodes.length;i++){let s=this._nodes[i],a=e.node[i];if(!a.input)throw new Error(`missing input for node: ${a.name}`);for(let u of a.input){let l=n.get(u);if(typeof l>"u"){if(u===""&&(a.input.length===3||a.input.length===4)&&a.opType==="Resize")continue;throw new Error(`unrecognized input '${u}' for node: ${a.name}`)}s.inputs.push(l),this._allData[l]._to.push(i)}}return!0}buildGraphFromOrtFormat(e){let n=new Map;this._allData=[],this._allInputIndices=[],this._allInputNames=[],this._allOutputIndices=[],this._allOutputNames=[],this._nodes=[];let t=new Map,o=[];for(let i=0;i<e.inputsLength();i++){let s=e.inputs(i);if(n.has(s))throw new Error(`duplicated input name: ${s}`);for(let a=0;a<e.nodeArgsLength();a++)if(e.nodeArgs(a)?.name()===s){let u=new mr;if(e.nodeArgs(a)?.type()?.valueType()!==Ni.TypeInfoValue.tensor_type)throw new Error("Unexpected value type for the nodeArg.");let d=e.nodeArgs(a).type().value(new Ni.TensorTypeAndShape),f=St.tensorDataTypeFromProto(d.elemType()),p=d.shape(),g=[];for(let y=0;y<p.dimLength();y++)g.push(Lt.longToNumber(p.dim(y).value().dimValue()));u.type={shape:{dims:g},tensorType:f};let b=this._allData.push(u)-1;n.set(s,b),o.push(s)}}for(let i=0;i<e.initializersLength();i++){let s=e.initializers(i),a=n.get(s.name());if(a===void 0){let u=new mr,l=St.tensorDimsFromORTFormat(s),d=St.tensorDataTypeFromProto(s.dataType());u.type={shape:{dims:l},tensorType:d},a=this._allData.push(u)-1,n.set(s.name(),a)}this._allData[a]._from=-1,this._allData[a].tensor=mt.fromOrtTensor(s)}for(let i=0;i<this._allData.length;i++)this._allData[i].tensor||(this._allInputIndices.push(i),this._allInputNames.push(o[i]));for(let i=0;i<e.outputsLength();i++){let s=e.outputs(i);if(n.has(s))throw new Error(`duplicated output name: ${s}`);let a=this._allData.push(new mr)-1;n.set(s,a),this._allOutputIndices.push(a),this._allOutputNames.push(s)}if(!e.nodes)throw new Error("missing information in graph: node");for(let i=0;i<e.nodesLength();i++){let s=e.nodes(i),a=s.name();if(!a)for(let l=0;a=`unnamed_${s.opType()}_${l}`,!!t.has(a);l++);if(t.has(a))throw new Error(`duplicated node name: ${a}`);let u=this._nodes.push(new Fi(s,a))-1;t.set(a,u)}for(let i=0;i<this._nodes.length;i++){let s=this._nodes[i],a=e.nodes(i);if(a==null)throw new Error(`No node exists at index ${i}`);if(a?.outputsLength()===0)throw new Error(`missing output for node: ${a.name}`);for(let u=0;u<a?.outputsLength();u++){let l=a?.outputs(u),d=n.get(l);if(typeof d>"u"&&(d=this._allData.push(new mr)-1,n.set(l,d)),s.outputs.push(d),this._allData[d]._from!==void 0)throw new Error(`multiple nodes output to one data value: ${d}`);if(this._allData[d]._from=i,a.opType()==="Constant"){if(a.attributesLength()!==1||!a.attributes(0).t())throw new Error("missing attributes or missing tensor value in attributes for this Constant operator");if(a.outputsLength()!==1)throw new Error("missing output or incorrect number of outputs for this Constant operator");s.outputs.pop(),s.executeNode=!1,this._allData[d]._from=-1,this._allData[d].tensor=mt.fromOrtTensor(a.attributes(0).t())}}}for(let i=0;i<this._nodes.length;i++){let s=this._nodes[i],a=e.nodes(i);if(a.inputsLength()===0)throw new Error(`missing input for node: ${a.name}`);for(let u=0;u<a.inputsLength();u++){let l=a.inputs(u),d=n.get(l);if(typeof d>"u")throw new Error(`unrecognized input '${l}' for node: ${a.name()}`);s.inputs.push(d),this._allData[d]._to.push(i)}}}checkIsAcyclic(){let e=new Set;this._allInputIndices.forEach(o=>{this._allData[o]._to.forEach(s=>{e.add(s)})});let n=Array.from(e),t=new Array(this._nodes.length).fill("white");for(;n.length>0;){let o=n.pop();t[o]==="gray"?t[o]="black":(n.push(o),t[o]="gray",this._nodes[o].outputs.forEach(i=>{let s=this._allData[i];if(typeof s.tensor<"u")throw new Error("node outputs should not be initialized");if(s._from!==o)throw new Error("from property of the Value object doesn't match index of Node being processed");s._to.forEach(a=>{if(t[a]==="gray")throw new Error("model graph is cyclic");t[a]==="white"&&n.push(a)})}))}}transformGraph(e){this.removeAllIdentityNodes(),this.removeAllDropoutNodes(),this.fuseConvActivationNodes(),e&&e.transformGraph(this),this.finalizeGraph()}finalizeGraph(){let e=0,n=new Array(this._nodes.length,0),t=0;for(let o=0;o<this._nodes.length;o++)n[o]=t,this._nodes[o].executeNode?(t!==o&&(this._nodes[t]=this._nodes[o]),t++):this._nodes[o].outputs.forEach(i=>{this._allData[i]._from=-2});this._nodes.splice(t,this._nodes.length-t);for(let o=0;o<this._allData.length;o++){let i=this._allData[o];i._from!==void 0&&i._from!==-1&&i._from!==-2&&(i._from=n[i._from]);for(let s=0;s<i._to.length;s++)if(i._to[s]>=0)i._to[s]=n[i._to[s]];else throw new Error("Trying to update a removed node")}e=0;for(let o=0;o<this._allData.length;o++){if(this._allData[o].from===-2&&this._allOutputIndices.indexOf(o+e)===-1){e++,this._allData.splice(o,1),o--;continue}if(e>0){let i=-1;this._allData[o].from!==void 0&&this._allData[o].from!==-1?(i=this._nodes[this._allData[o].from].outputs.indexOf(o+e),i!==-1&&(this._nodes[this._allData[o].from].outputs[i]=o)):(i=this._allInputIndices.indexOf(o+e),i!==-1&&(this._allInputIndices[i]=o)),this._allData[o].to.forEach(s=>{i=this._nodes[s].inputs.indexOf(o+e),i!==-1&&(this._nodes[s].inputs[i]=o)}),this._allData[o].to.length===0&&(i=this._allOutputIndices.indexOf(o+e),i!==-1&&(this._allOutputIndices[i]=o))}}}deleteNode(e){let n=this._nodes[e];if(n.outputs.length>1){for(let a=1;a<n.outputs.length;a++)if(this._allData[n.outputs[a]].to.length>0)throw new Error("Node deletion with more than one output connected to other nodes is not supported. ")}n.executeNode=!1;let t=n.inputs[0],o=n.outputs[0],i=this._allData[o].to;for(let a=0;a<n.inputs.length;a++){let u=this._allData[n.inputs[a]].to.indexOf(e);if(u===-1)throw new Error("The Value object doesn't have the current Node in it's 'to' property ");this._allData[n.inputs[a]].to.splice(u,1)}this._allData[o]._to=[];let s=this._allOutputIndices.indexOf(o);if(s!==-1&&(this._allOutputIndices[s]=t),i&&i.length>0)for(let a of i){let u=this._nodes[a].inputs.indexOf(o);if(u===-1)throw new Error("The Node object doesn't have the output Value in it's 'inputs' property ");this._nodes[a].inputs[u]=t,this._allData[t].to.push(a)}}removeAllDropoutNodes(){let e=0;for(let n of this._nodes){if(n.opType==="Dropout"){if(n.inputs.length!==1)throw new Error("Dropout nodes should only contain one input. ");if(n.outputs.length!==1&&n.outputs.length!==2)throw new Error("Dropout nodes should contain either 1 or 2 output(s)");if(n.outputs.length===2&&this._allData[n.outputs[1]]._to.length!==0)throw new Error("Dropout nodes's second output should not be referenced by other nodes");this.deleteNode(e)}e++}}removeAllIdentityNodes(){let e=0;for(let n of this._nodes)n.opType==="Identity"&&this.deleteNode(e),e++}isActivation(e){switch(e.opType){case"Relu":case"Sigmoid":case"Clip":return!0;default:return!1}}fuseConvActivationNodes(){for(let e of this._nodes)if(e.opType==="Conv"){let n=this._allData[e.outputs[0]]._to;if(n.length===1&&this.isActivation(this._nodes[n[0]])){let t=this._nodes[n[0]];if(t.opType==="Clip")if(t.inputs.length===1)try{e.attributes.set("activation_params","floats",[t.attributes.getFloat("min"),t.attributes.getFloat("max")])}catch{e.attributes.set("activation_params","floats",[on,an])}else if(t.inputs.length>=3&&this._allData[t.inputs[1]].tensor!==void 0&&this._allData[t.inputs[2]].tensor!==void 0)e.attributes.set("activation_params","floats",[this._allData[t.inputs[1]].tensor.floatData[0],this._allData[t.inputs[2]].tensor.floatData[0]]);else continue;e.attributes.set("activation","string",t.opType),this.deleteNode(n[0])}}}}});var hh,gx,Vi,mh=B(()=>{"use strict";si();ph();io();hh=$n(In());He();gx=ue.experimental.fbs,Vi=class{constructor(){}load(e,n,t){if(!t)try{this.loadFromOnnxFormat(e,n);return}catch(o){if(t!==void 0)throw o}this.loadFromOrtFormat(e,n)}loadFromOnnxFormat(e,n){let t=hh.onnx.ModelProto.decode(e);if(Lt.longToNumber(t.irVersion)<3)throw new Error("only support ONNX model with IR_VERSION>=3");this._opsets=t.opsetImport.map(i=>({domain:i.domain,version:Lt.longToNumber(i.version)})),this._graph=Bs.from(t.graph,n)}loadFromOrtFormat(e,n){let t=new D.ByteBuffer(e),o=gx.InferenceSession.getRootAsInferenceSession(t).model();if(Lt.longToNumber(o.irVersion())<3)throw new Error("only support ONNX model with IR_VERSION>=3");this._opsets=[];for(let s=0;s<o.opsetImportLength();s++){let a=o.opsetImport(s);this._opsets.push({domain:a?.domain(),version:Lt.longToNumber(a.version())})}this._graph=Bs.from(o.graph(),n)}get graph(){return this._graph}get opsets(){return this._opsets}}});var Gi,gh=B(()=>{"use strict";dh();ch();Ut();mh();Gi=class{constructor(e={}){this._initialized=!1,this.backendHint=e.backendHint,this.profiler=ii.create(e.profiler),this.context={profiler:this.profiler,graphInputTypes:[],graphInputDims:[]}}get inputNames(){return this._model.graph.getInputNames()}get outputNames(){return this._model.graph.getOutputNames()}startProfiling(){this.profiler.start()}endProfiling(){this.profiler.stop()}async loadModel(e,n,t){await this.profiler.event("session","Session.loadModel",async()=>{let o=await Cs(this.backendHint);if(this.sessionHandler=o.createSessionHandler(this.context),this._model=new Vi,typeof e=="string"){let i=e.endsWith(".ort");if(typeof process<"u"&&process.versions&&process.versions.node){let s=await(void 0)(e);this.initialize(s,i)}else{let a=await(await fetch(e)).arrayBuffer();this.initialize(new Uint8Array(a),i)}}else if(ArrayBuffer.isView(e))this.initialize(e);else{let i=new Uint8Array(e,n||0,t||e.byteLength);this.initialize(i)}})}initialize(e,n){if(this._initialized)throw new Error("already initialized");this.profiler.event("session","Session.initialize",()=>{let t=this.sessionHandler.transformGraph?this.sessionHandler:void 0;this._model.load(e,t,n),this.sessionHandler.onGraphInitialized&&this.sessionHandler.onGraphInitialized(this._model.graph),this.initializeOps(this._model.graph),this._executionPlan=new zi(this._model.graph,this._ops,this.profiler)}),this._initialized=!0}async run(e){if(!this._initialized)throw new Error("session not initialized yet");return this.profiler.event("session","Session.run",async()=>{let n=this.normalizeAndValidateInputs(e),t=await this._executionPlan.execute(this.sessionHandler,n);return this.createOutput(t)})}normalizeAndValidateInputs(e){let n=this._model.graph.getInputNames();if(Array.isArray(e)){if(e.length!==n.length)throw new Error(`incorrect input array length: expected ${n.length} but got ${e.length}`)}else{if(e.size!==n.length)throw new Error(`incorrect input map size: expected ${n.length} but got ${e.size}`);let t=new Array(e.size),o=0;for(let i=0;i<n.length;++i){let s=e.get(n[i]);if(!s)throw new Error(`missing input tensor for: '${name}'`);t[o++]=s}e=t}if(!this.context.graphInputTypes||this.context.graphInputTypes.length===0||!this.context.graphInputDims||this.context.graphInputDims.length===0){let t=this._model.graph.getInputIndices(),o=this._model.graph.getValues(),i=new Array(t.length);for(let s=0;s<t.length;++s){let a=o[t[s]];i[s]=a.type.shape.dims,this.context.graphInputTypes.push(a.type.tensorType),this.context.graphInputDims.push(e[s].dims)}this.validateInputTensorDims(i,e,!0)}else this.validateInputTensorDims(this.context.graphInputDims,e,!1);return this.validateInputTensorTypes(this.context.graphInputTypes,e),e}validateInputTensorTypes(e,n){for(let t=0;t<n.length;t++){let o=e[t],i=n[t].type;if(o!==i)throw new Error(`input tensor[${t}] check failed: expected type '${o}' but got ${i}`)}}validateInputTensorDims(e,n,t){for(let o=0;o<n.length;o++){let i=e[o],s=n[o].dims;if(!this.compareTensorDims(i,s,t))throw new Error(`input tensor[${o}] check failed: expected shape '[${i.join(",")}]' but got [${s.join(",")}]`)}}compareTensorDims(e,n,t){if(e.length!==n.length)return!1;for(let o=0;o<e.length;++o)if(e[o]!==n[o]&&(!t||e[o]!==0))return!1;return!0}createOutput(e){let n=this._model.graph.getOutputNames();if(e.length!==n.length)throw new Error("expected number of outputs do not match number of generated outputs");let t=new Map;for(let o=0;o<n.length;++o)t.set(n[o],e[o]);return t}initializeOps(e){let n=e.getNodes();this._ops=new Array(n.length);for(let t=0;t<n.length;t++)this._ops[t]=this.sessionHandler.resolve(n[t],this._model.opsets,e)}}});var Ui,bh=B(()=>{"use strict";It();sn();Ui=class{constructor(e){this.session=e;this.inputNames=this.session.inputNames,this.outputNames=this.session.outputNames}async dispose(){}async run(e,n,t){let o=new Map;for(let a in e)if(Object.hasOwnProperty.call(e,a)){let u=e[a];o.set(a,new mt(u.dims,u.type,void 0,void 0,u.data))}let i=await this.session.run(o),s={};return i.forEach((a,u)=>{s[u]=new gt(a.type,a.data,a.dims)}),s}startProfiling(){this.session.startProfiling()}endProfiling(){this.session.endProfiling()}}});var yh={};Br(yh,{onnxjsBackend:()=>yx});var Rs,yx,vh=B(()=>{"use strict";gh();bh();Rs=class{async init(){}async createInferenceSessionHandler(e,n){let t=new Gi(n);return typeof e=="string"?await t.loadModel(e):await t.loadModel(e),new Ui(t)}},yx=new Rs});var Ms={};Br(Ms,{readFile:()=>vx});var vx,Ls=B(()=>{vx=void 0});var zs={};Br(zs,{join:()=>wx});var wx,Ns=B(()=>{wx=void 0});var $h=Xe((xh,Fs)=>{"use strict";var wh=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(e={}){var n=e,t,o;n.ready=new Promise((h,v)=>{t=h,o=v}),n.jsepInit=(h,v,S,E,M,Y,j,xe)=>{n.Za=h,n.Oa=v,n.Qa=S,n.Ja=E,n.Pa=M,n.ra=Y,n.Ra=j,n.Sa=xe,v=(ae,me,ce)=>(...Ee)=>{let Me=Ft,L=me?.();Ee=ae(...Ee);let ve=me?.();return L!==ve&&(ae=ve,ce(L),me=ce=null),Ft!=Me?Mo():Ee},S=ae=>async(...me)=>{try{if(n.Da)throw Error("Session already started");let ce=n.Da={Ta:me[0],errors:[]},Ee=await ae(...me);if(n.Da!==ce)throw Error("Session mismatch");h.flush();let Me=ce.errors;if(0<Me.length){let L=await Promise.all(Me);if(L=L.filter(ve=>ve),0<L.length)throw Error(L.join(`
`))}return Ee}finally{n.Da=null}},n._OrtRun=S(v(n._OrtRun,()=>n._OrtRun,ae=>n._OrtRun=ae)),n._OrtRunWithBinding=S(v(n._OrtRunWithBinding,()=>n._OrtRunWithBinding,ae=>n._OrtRunWithBinding=ae)),n._OrtBindInput=v(n._OrtBindInput,()=>n._OrtBindInput,ae=>n._OrtBindInput=ae),n.jsepRegisterBuffer=(ae,me,ce,Ee)=>h.registerBuffer(ae,me,ce,Ee),n.jsepUnregisterBuffers=ae=>{h.unregisterBuffers(ae)},n.jsepGetBuffer=ae=>h.getBuffer(ae),n.jsepCreateDownloader=(ae,me,ce)=>h.createDownloader(ae,me,ce)};var i=Object.assign({},n),s="./this.program",a=(h,v)=>{throw v},u=typeof window=="object",l=typeof importScripts=="function",d=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",f="",p,g,b;if(d){var y=(Ls(),Ar(Ms)),T=(Ns(),Ar(zs));f=l?T.dirname(f)+"/":__dirname+"/",p=(h,v)=>(h=h.startsWith("file://")?new URL(h):T.normalize(h),y.readFileSync(h,v?void 0:"utf8")),b=h=>(h=p(h,!0),h.buffer||(h=new Uint8Array(h)),h),g=(h,v,S,E=!0)=>{h=h.startsWith("file://")?new URL(h):T.normalize(h),y.readFile(h,E?void 0:"utf8",(M,Y)=>{M?S(M):v(E?Y.buffer:Y)})},!n.thisProgram&&1<process.argv.length&&(s=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),a=(h,v)=>{throw process.exitCode=h,v},n.inspect=()=>"[Emscripten Module object]"}else(u||l)&&(l?f=self.location.href:typeof document<"u"&&document.currentScript&&(f=document.currentScript.src),r&&(f=r),f.indexOf("blob:")!==0?f=f.substr(0,f.replace(/[?#].*/,"").lastIndexOf("/")+1):f="",p=h=>{var v=new XMLHttpRequest;return v.open("GET",h,!1),v.send(null),v.responseText},l&&(b=h=>{var v=new XMLHttpRequest;return v.open("GET",h,!1),v.responseType="arraybuffer",v.send(null),new Uint8Array(v.response)}),g=(h,v,S)=>{var E=new XMLHttpRequest;E.open("GET",h,!0),E.responseType="arraybuffer",E.onload=()=>{E.status==200||E.status==0&&E.response?v(E.response):S()},E.onerror=S,E.send(null)});var x=n.print||console.log.bind(console),_=n.printErr||console.error.bind(console);Object.assign(n,i),i=null,n.thisProgram&&(s=n.thisProgram),n.quit&&(a=n.quit);var O;n.wasmBinary&&(O=n.wasmBinary);var C=n.noExitRuntime||!0;typeof WebAssembly!="object"&&yt("no native wasm support detected");var N,k,U=!1,G,H,ne,P,J,Te,se;function De(){var h=N.buffer;n.HEAP8=H=new Int8Array(h),n.HEAP16=new Int16Array(h),n.HEAP32=P=new Int32Array(h),n.HEAPU8=ne=new Uint8Array(h),n.HEAPU16=new Uint16Array(h),n.HEAPU32=J=new Uint32Array(h),n.HEAPF32=Te=new Float32Array(h),n.HEAPF64=se=new Float64Array(h)}var re=[],Ce=[],Ne=[];function Se(){var h=n.preRun.shift();re.unshift(h)}var $e=0,ht=null,it=null;function yt(h){throw n.onAbort&&n.onAbort(h),h="Aborted("+h+")",_(h),U=!0,G=1,h=new WebAssembly.RuntimeError(h+". Build with -sASSERTIONS for more info."),o(h),h}function X(h){return h.startsWith("data:application/octet-stream;base64,")}var ie;if(ie="ort-wasm-simd.wasm",!X(ie)){var Ie=ie;ie=n.locateFile?n.locateFile(Ie,f):f+Ie}function Tt(h){if(h==ie&&O)return new Uint8Array(O);if(b)return b(h);throw"both async and sync fetching of the wasm failed"}function Bt(h){if(!O&&(u||l)){if(typeof fetch=="function"&&!h.startsWith("file://"))return fetch(h,{credentials:"same-origin"}).then(v=>{if(!v.ok)throw"failed to load wasm binary file at '"+h+"'";return v.arrayBuffer()}).catch(()=>Tt(h));if(g)return new Promise((v,S)=>{g(h,E=>v(new Uint8Array(E)),S)})}return Promise.resolve().then(()=>Tt(h))}function at(h,v,S){return Bt(h).then(E=>WebAssembly.instantiate(E,v)).then(E=>E).then(S,E=>{_("failed to asynchronously prepare wasm: "+E),yt(E)})}function vt(h,v){var S=ie;return O||typeof WebAssembly.instantiateStreaming!="function"||X(S)||S.startsWith("file://")||d||typeof fetch!="function"?at(S,h,v):fetch(S,{credentials:"same-origin"}).then(E=>WebAssembly.instantiateStreaming(E,h).then(v,function(M){return _("wasm streaming compile failed: "+M),_("falling back to ArrayBuffer instantiation"),at(S,h,v)}))}var Et,ar={923216:h=>{n.ra("Abs",h,void 0)},923267:h=>{n.ra("Neg",h,void 0)},923318:h=>{n.ra("Floor",h,void 0)},923371:h=>{n.ra("Ceil",h,void 0)},923423:h=>{n.ra("Reciprocal",h,void 0)},923481:h=>{n.ra("Sqrt",h,void 0)},923533:h=>{n.ra("Exp",h,void 0)},923584:h=>{n.ra("Erf",h,void 0)},923635:h=>{n.ra("Sigmoid",h,void 0)},923690:h=>{n.ra("Log",h,void 0)},923741:h=>{n.ra("Sin",h,void 0)},923792:h=>{n.ra("Cos",h,void 0)},923843:h=>{n.ra("Tan",h,void 0)},923894:h=>{n.ra("Asin",h,void 0)},923946:h=>{n.ra("Acos",h,void 0)},923998:h=>{n.ra("Atan",h,void 0)},924050:h=>{n.ra("Sinh",h,void 0)},924102:h=>{n.ra("Cosh",h,void 0)},924154:h=>{n.ra("Asinh",h,void 0)},924207:h=>{n.ra("Acosh",h,void 0)},924260:h=>{n.ra("Atanh",h,void 0)},924313:h=>{n.ra("Tanh",h,void 0)},924365:h=>{n.ra("Not",h,void 0)},924416:(h,v,S)=>{n.ra("Clip",h,{min:v,max:S})},924485:h=>{n.ra("Clip",h,void 0)},924537:(h,v)=>{n.ra("Elu",h,{alpha:v})},924595:h=>{n.ra("Relu",h,void 0)},924647:(h,v)=>{n.ra("LeakyRelu",h,{alpha:v})},924711:(h,v)=>{n.ra("ThresholdedRelu",h,{alpha:v})},924781:(h,v)=>{n.ra("Cast",h,{to:v})},924839:h=>{n.ra("Add",h,void 0)},924890:h=>{n.ra("Sub",h,void 0)},924941:h=>{n.ra("Mul",h,void 0)},924992:h=>{n.ra("Div",h,void 0)},925043:h=>{n.ra("Pow",h,void 0)},925094:h=>{n.ra("Equal",h,void 0)},925147:h=>{n.ra("Greater",h,void 0)},925202:h=>{n.ra("GreaterOrEqual",h,void 0)},925264:h=>{n.ra("Less",h,void 0)},925316:h=>{n.ra("LessOrEqual",h,void 0)},925375:(h,v,S,E,M)=>{n.ra("ReduceMean",h,{keepDims:!!v,noopWithEmptyAxes:!!S,axes:E?Array.from(P.subarray(M>>>0,M+E>>>0)):[]})},925539:(h,v,S,E,M)=>{n.ra("ReduceMax",h,{keepDims:!!v,noopWithEmptyAxes:!!S,axes:E?Array.from(P.subarray(M>>>0,M+E>>>0)):[]})},925702:(h,v,S,E,M)=>{n.ra("ReduceMin",h,{keepDims:!!v,noopWithEmptyAxes:!!S,axes:E?Array.from(P.subarray(M>>>0,M+E>>>0)):[]})},925865:(h,v,S,E,M)=>{n.ra("ReduceProd",h,{keepDims:!!v,noopWithEmptyAxes:!!S,axes:E?Array.from(P.subarray(M>>>0,M+E>>>0)):[]})},926029:(h,v,S,E,M)=>{n.ra("ReduceSum",h,{keepDims:!!v,noopWithEmptyAxes:!!S,axes:E?Array.from(P.subarray(M>>>0,M+E>>>0)):[]})},926192:(h,v,S,E,M)=>{n.ra("ReduceL1",h,{keepDims:!!v,noopWithEmptyAxes:!!S,axes:E?Array.from(P.subarray(M>>>0,M+E>>>0)):[]})},926354:(h,v,S,E,M)=>{n.ra("ReduceL2",h,{keepDims:!!v,noopWithEmptyAxes:!!S,axes:E?Array.from(P.subarray(M>>>0,M+E>>>0)):[]})},926516:(h,v,S,E,M)=>{n.ra("ReduceLogSum",h,{keepDims:!!v,noopWithEmptyAxes:!!S,axes:E?Array.from(P.subarray(M>>>0,M+E>>>0)):[]})},926682:(h,v,S,E,M)=>{n.ra("ReduceSumSquare",h,{keepDims:!!v,noopWithEmptyAxes:!!S,axes:E?Array.from(P.subarray(M>>>0,M+E>>>0)):[]})},926851:(h,v,S,E,M)=>{n.ra("ReduceLogSumExp",h,{keepDims:!!v,noopWithEmptyAxes:!!S,axes:E?Array.from(P.subarray(M>>>0,M+E>>>0)):[]})},927020:h=>{n.ra("Where",h,void 0)},927073:(h,v,S)=>{n.ra("Transpose",h,{perm:v?Array.from(P.subarray(S>>>0,S+v>>>0)):[]})},927186:(h,v,S,E,M,Y,j,xe,ae,me,ce,Ee,Me,L,ve)=>{n.ra("ConvTranspose",h,{format:ae?"NHWC":"NCHW",autoPad:v,dilations:[S],group:E,kernel_shape:[M],pads:[Y,j],strides:[xe],wIsConst:()=>!!H[me>>>0],outputPadding:ce?Array.from(P.subarray(Ee>>>0,Ee+ce>>>0)):[],outputShape:Me?Array.from(P.subarray(L>>>0,L+Me>>>0)):[],activation:lt(ve)})},927600:(h,v,S,E,M,Y,j,xe,ae,me,ce,Ee,Me,L)=>{n.ra("ConvTranspose",h,{format:xe?"NHWC":"NCHW",autoPad:v,dilations:Array.from(P.subarray(S>>>0,S+2>>>0)),group:E,kernelShape:Array.from(P.subarray(M>>>0,M+2>>>0)),pads:Array.from(P.subarray(Y>>>0,Y+4>>>0)),strides:Array.from(P.subarray(j>>>0,j+2>>>0)),wIsConst:()=>!!H[ae>>>0],outputPadding:0<me?Array.from(P.subarray(ce>>>0,ce+me>>>0)):[],outputShape:0<Ee?Array.from(P.subarray(Me>>>0,Me+Ee>>>0)):[],activation:lt(L)})},928157:(h,v,S,E,M,Y,j,xe,ae,me,ce,Ee,Me,L,ve)=>{n.ra("ConvTranspose",h,{format:ae?"NHWC":"NCHW",autoPad:v,dilations:[S],group:E,kernel_shape:[M],pads:[Y,j],strides:[xe],wIsConst:()=>!!H[me>>>0],outputPadding:ce?Array.from(P.subarray(Ee>>>0,Ee+ce>>>0)):[],outputShape:Me?Array.from(P.subarray(L>>>0,L+Me>>>0)):[],activation:lt(ve)})},928571:(h,v,S,E,M,Y,j,xe,ae,me,ce,Ee,Me,L)=>{n.ra("ConvTranspose",h,{format:xe?"NHWC":"NCHW",autoPad:v,dilations:Array.from(P.subarray(S>>>0,S+2>>>0)),group:E,kernelShape:Array.from(P.subarray(M>>>0,M+2>>>0)),pads:Array.from(P.subarray(Y>>>0,Y+4>>>0)),strides:Array.from(P.subarray(j>>>0,j+2>>>0)),wIsConst:()=>!!H[ae>>>0],outputPadding:0<me?Array.from(P.subarray(ce>>>0,ce+me>>>0)):[],outputShape:0<Ee?Array.from(P.subarray(Me>>>0,Me+Ee>>>0)):[],activation:lt(L)})},929128:(h,v)=>{n.ra("GlobalAveragePool",h,{format:v?"NHWC":"NCHW"})},929219:(h,v,S,E,M,Y,j,xe,ae,me,ce,Ee,Me,L,ve,Be)=>{n.ra("AveragePool",h,{format:Be?"NHWC":"NCHW",auto_pad:v,ceil_mode:S,count_include_pad:E,storage_order:M,dilations:[Y,j],kernel_shape:[xe,ae],pads:[me,ce,Ee,Me],strides:[L,ve]})},929503:(h,v)=>{n.ra("GlobalAveragePool",h,{format:v?"NHWC":"NCHW"})},929594:(h,v,S,E,M,Y,j,xe,ae,me,ce,Ee,Me,L,ve,Be)=>{n.ra("AveragePool",h,{format:Be?"NHWC":"NCHW",auto_pad:v,ceil_mode:S,count_include_pad:E,storage_order:M,dilations:[Y,j],kernel_shape:[xe,ae],pads:[me,ce,Ee,Me],strides:[L,ve]})},929878:(h,v)=>{n.ra("GlobalMaxPool",h,{format:v?"NHWC":"NCHW"})},929965:(h,v,S,E,M,Y,j,xe,ae,me,ce,Ee,Me,L,ve,Be)=>{n.ra("MaxPool",h,{format:Be?"NHWC":"NCHW",auto_pad:v,ceil_mode:S,count_include_pad:E,storage_order:M,dilations:[Y,j],kernel_shape:[xe,ae],pads:[me,ce,Ee,Me],strides:[L,ve]})},930245:(h,v)=>{n.ra("GlobalMaxPool",h,{format:v?"NHWC":"NCHW"})},930332:(h,v,S,E,M,Y,j,xe,ae,me,ce,Ee,Me,L,ve,Be)=>{n.ra("MaxPool",h,{format:Be?"NHWC":"NCHW",auto_pad:v,ceil_mode:S,count_include_pad:E,storage_order:M,dilations:[Y,j],kernel_shape:[xe,ae],pads:[me,ce,Ee,Me],strides:[L,ve]})},930612:(h,v,S,E,M)=>{n.ra("Gemm",h,{alpha:v,beta:S,transA:E,transB:M})},930716:h=>{n.ra("MatMul",h,void 0)},930770:(h,v,S,E)=>{n.ra("ArgMax",h,{keepDims:!!v,selectLastIndex:!!S,axis:E})},930878:(h,v,S,E)=>{n.ra("ArgMin",h,{keepDims:!!v,selectLastIndex:!!S,axis:E})},930986:(h,v)=>{n.ra("Softmax",h,{axis:v})},931049:(h,v)=>{n.ra("Concat",h,{axis:v})},931109:(h,v,S,E,M)=>{n.ra("Split",h,{axis:v,numOutputs:S,splitSizes:E?Array.from(P.subarray(M>>>0,M+E>>>0)):[]})},931254:h=>{n.ra("Expand",h,void 0)},931308:(h,v)=>{n.ra("Gather",h,{axis:Number(v)})},931379:(h,v)=>{n.ra("GatherElements",h,{axis:Number(v)})},931458:(h,v,S,E,M,Y,j,xe,ae,me,ce)=>{n.ra("Resize",h,{antialias:v,axes:S?Array.from(P.subarray(E>>>0,E+S>>>0)):[],coordinateTransformMode:lt(M),cubicCoeffA:Y,excludeOutside:j,extrapolationValue:xe,keepAspectRatioPolicy:lt(ae),mode:lt(me),nearestMode:lt(ce)})},931809:(h,v,S,E,M,Y,j)=>{n.ra("Slice",h,{starts:v?Array.from(P.subarray(S>>>0,S+v>>>0)):[],ends:E?Array.from(P.subarray(M>>>0,M+E>>>0)):[],axes:Y?Array.from(P.subarray(j>>>0,j+Y>>>0)):[]})},932040:h=>{n.ra("Tile",h,void 0)},932092:(h,v,S)=>{n.ra("LayerNormalization",h,{axis:Number(v),epsilon:Number(S)})},932199:(h,v,S)=>{n.ra("InstanceNormalization",h,{epsilon:v,format:S?"NHWC":"NCHW"})},932313:(h,v,S)=>{n.ra("InstanceNormalization",h,{epsilon:v,format:S?"NHWC":"NCHW"})},932427:h=>{n.ra("Range",h,void 0)},932480:(h,v)=>{n.ra("Einsum",h,{equation:lt(v)})},932561:(h,v,S,E,M)=>{n.ra("Pad",h,{mode:v,value:S,pads:E?Array.from(P.subarray(M>>>0,M+E>>>0)):[]})},932693:(h,v,S,E,M,Y)=>{n.ra("BatchNormalization",h,{epsilon:v,momentum:S,spatial:!!M,trainingMode:!!E,format:Y?"NHWC":"NCHW"})},932862:(h,v,S,E,M,Y)=>{n.ra("BatchNormalization",h,{epsilon:v,momentum:S,spatial:!!M,trainingMode:!!E,format:Y?"NHWC":"NCHW"})},933031:(h,v,S)=>{n.ra("CumSum",h,{exclusive:Number(v),reverse:Number(S)})},933128:(h,v,S,E,M,Y,j,xe,ae)=>{n.ra("Attention",h,{numHeads:v,isUnidirectional:S,maskFilterValue:E,scale:M,doRotary:Y,qkvHiddenSizes:j?Array.from(P.subarray(Number(xe)>>>0,Number(xe)+j>>>0)):[],pastPresentShareBuffer:!!ae})},933400:h=>{n.ra("Gelu",h,void 0)},933452:(h,v,S,E,M,Y)=>{n.ra("MultiHeadAttention",h,{numHeads:v,isUnidirectional:S,maskFilterValue:E,scale:M,doRotary:Y})},933611:h=>{n.ra("BiasAdd",h,void 0)},933666:h=>{n.ra("BiasSplitGelu",h,void 0)},933727:(h,v)=>{n.ra("SkipLayerNormalization",h,{epsilon:v})},933808:(h,v,S,E,M,Y,j,xe,ae,me,ce,Ee,Me)=>{n.ra("Conv",h,{format:ae?"NHWC":"NCHW",auto_pad:v,dilations:[S],group:E,kernel_shape:[M],pads:Y?Array.from(P.subarray(j>>>0,j+Y>>>0)):[],strides:[xe],w_is_const:()=>!!H[me>>>0],activation:lt(ce),activation_params:Ee?Array.from(Te.subarray(Me>>>0,Me+Ee>>>0)):[]})},934189:(h,v,S,E,M,Y,j,xe,ae,me,ce,Ee,Me,L,ve,Be)=>{n.ra("Conv",h,{format:Ee?"NHWC":"NCHW",auto_pad:v,dilations:[S,E],group:M,kernel_shape:[Y,j],pads:xe?Array.from(P.subarray(ae>>>0,ae+xe>>>0)):[],strides:[me,ce],w_is_const:()=>!!H[Me>>>0],activation:lt(L),activation_params:ve?Array.from(Te.subarray(Be>>>0,Be+ve>>>0)):[]})},934591:h=>{n.Ra(h)},934625:(h,v)=>n.Sa(h,v,n.Da.Ta,n.Da.errors),934737:h=>n.Oa(h),934770:h=>n.Qa(h),934802:(h,v,S)=>{n.Ja(h,v,S,!0)},934841:(h,v,S)=>{n.Ja(h,v,S)}};function Nt(h){this.name="ExitStatus",this.message=`Program terminated with exit(${h})`,this.status=h}var Wr=h=>{for(;0<h.length;)h.shift()(n)};function Hr(h){this.Ha=h-24,this.Ma=function(v){J[this.Ha+4>>2>>>0]=v},this.La=function(v){J[this.Ha+8>>2>>>0]=v},this.Ya=function(v,S){this.Ka(),this.Ma(v),this.La(S)},this.Ka=function(){J[this.Ha+16>>2>>>0]=0}}var Fn=0,Eo=0,Jt=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Vn=(h,v,S)=>{v>>>=0;var E=v+S;for(S=v;h[S]&&!(S>=E);)++S;if(16<S-v&&h.buffer&&Jt)return Jt.decode(h.subarray(v,S));for(E="";v<S;){var M=h[v++];if(M&128){var Y=h[v++]&63;if((M&224)==192)E+=String.fromCharCode((M&31)<<6|Y);else{var j=h[v++]&63;M=(M&240)==224?(M&15)<<12|Y<<6|j:(M&7)<<18|Y<<12|j<<6|h[v++]&63,65536>M?E+=String.fromCharCode(M):(M-=65536,E+=String.fromCharCode(55296|M>>10,56320|M&1023))}}else E+=String.fromCharCode(M)}return E},lt=(h,v)=>(h>>>=0)?Vn(ne,h,v):"",mn=h=>{for(var v=0,S=0;S<h.length;++S){var E=h.charCodeAt(S);127>=E?v++:2047>=E?v+=2:55296<=E&&57343>=E?(v+=4,++S):v+=3}return v},Gn=(h,v,S,E)=>{if(S>>>=0,!(0<E))return 0;var M=S;E=S+E-1;for(var Y=0;Y<h.length;++Y){var j=h.charCodeAt(Y);if(55296<=j&&57343>=j){var xe=h.charCodeAt(++Y);j=65536+((j&1023)<<10)|xe&1023}if(127>=j){if(S>=E)break;v[S++>>>0]=j}else{if(2047>=j){if(S+1>=E)break;v[S++>>>0]=192|j>>6}else{if(65535>=j){if(S+2>=E)break;v[S++>>>0]=224|j>>12}else{if(S+3>=E)break;v[S++>>>0]=240|j>>18,v[S++>>>0]=128|j>>12&63}v[S++>>>0]=128|j>>6&63}v[S++>>>0]=128|j&63}}return v[S>>>0]=0,S-M},Tr=h=>h%4===0&&(h%100!==0||h%400===0),Co=[0,31,60,91,121,152,182,213,244,274,305,335],_r=[0,31,59,90,120,151,181,212,243,273,304,334],gn=h=>{var v=mn(h)+1,S=wn(v);return S&&Gn(h,ne,S,v),S},Pr=[],bn=(h,v)=>{Pr.length=0;var S;for(v>>=2;S=ne[h++>>>0];)v+=S!=105&v,Pr.push(S==105?P[v>>>0]:se[v++>>>1]),++v;return Pr},yn={},Un=()=>{if(!vn){var h={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:s||"./this.program"},v;for(v in yn)yn[v]===void 0?delete h[v]:h[v]=yn[v];var S=[];for(v in h)S.push(`${v}=${h[v]}`);vn=S}return vn},vn,Po=[null,[],[]],_t=[31,29,31,30,31,30,31,31,30,31,30,31],Wn=[31,28,31,30,31,30,31,31,30,31,30,31];function Hn(h){var v=Array(mn(h)+1);return Gn(h,v,0,v.length),v}function he(h,v,S,E){function M(L,ve,Be){for(L=typeof L=="number"?L.toString():L||"";L.length<ve;)L=Be[0]+L;return L}function Y(L,ve){return M(L,ve,"0")}function j(L,ve){function Be(ro){return 0>ro?-1:0<ro?1:0}var Ir;return(Ir=Be(L.getFullYear()-ve.getFullYear()))===0&&(Ir=Be(L.getMonth()-ve.getMonth()))===0&&(Ir=Be(L.getDate()-ve.getDate())),Ir}function xe(L){switch(L.getDay()){case 0:return new Date(L.getFullYear()-1,11,29);case 1:return L;case 2:return new Date(L.getFullYear(),0,3);case 3:return new Date(L.getFullYear(),0,2);case 4:return new Date(L.getFullYear(),0,1);case 5:return new Date(L.getFullYear()-1,11,31);case 6:return new Date(L.getFullYear()-1,11,30)}}function ae(L){var ve=L.Ba;for(L=new Date(new Date(L.Ca+1900,0,1).getTime());0<ve;){var Be=L.getMonth(),Ir=(Tr(L.getFullYear())?_t:Wn)[Be];if(ve>Ir-L.getDate())ve-=Ir-L.getDate()+1,L.setDate(1),11>Be?L.setMonth(Be+1):(L.setMonth(0),L.setFullYear(L.getFullYear()+1));else{L.setDate(L.getDate()+ve);break}}return Be=new Date(L.getFullYear()+1,0,4),ve=xe(new Date(L.getFullYear(),0,4)),Be=xe(Be),0>=j(ve,L)?0>=j(Be,L)?L.getFullYear()+1:L.getFullYear():L.getFullYear()-1}h>>>=0,v>>>=0,S>>>=0,E>>>=0;var me=P[E+40>>2>>>0];E={Wa:P[E>>2>>>0],Va:P[E+4>>2>>>0],Ea:P[E+8>>2>>>0],Ia:P[E+12>>2>>>0],Fa:P[E+16>>2>>>0],Ca:P[E+20>>2>>>0],wa:P[E+24>>2>>>0],Ba:P[E+28>>2>>>0],$a:P[E+32>>2>>>0],Ua:P[E+36>>2>>>0],Xa:me?lt(me):""},S=lt(S),me={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var ce in me)S=S.replace(new RegExp(ce,"g"),me[ce]);var Ee="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Me="January February March April May June July August September October November December".split(" ");me={"%a":L=>Ee[L.wa].substring(0,3),"%A":L=>Ee[L.wa],"%b":L=>Me[L.Fa].substring(0,3),"%B":L=>Me[L.Fa],"%C":L=>Y((L.Ca+1900)/100|0,2),"%d":L=>Y(L.Ia,2),"%e":L=>M(L.Ia,2," "),"%g":L=>ae(L).toString().substring(2),"%G":L=>ae(L),"%H":L=>Y(L.Ea,2),"%I":L=>(L=L.Ea,L==0?L=12:12<L&&(L-=12),Y(L,2)),"%j":L=>{for(var ve=0,Be=0;Be<=L.Fa-1;ve+=(Tr(L.Ca+1900)?_t:Wn)[Be++]);return Y(L.Ia+ve,3)},"%m":L=>Y(L.Fa+1,2),"%M":L=>Y(L.Va,2),"%n":()=>`
`,"%p":L=>0<=L.Ea&&12>L.Ea?"AM":"PM","%S":L=>Y(L.Wa,2),"%t":()=>"	","%u":L=>L.wa||7,"%U":L=>Y(Math.floor((L.Ba+7-L.wa)/7),2),"%V":L=>{var ve=Math.floor((L.Ba+7-(L.wa+6)%7)/7);if(2>=(L.wa+371-L.Ba-2)%7&&ve++,ve)ve==53&&(Be=(L.wa+371-L.Ba)%7,Be==4||Be==3&&Tr(L.Ca)||(ve=1));else{ve=52;var Be=(L.wa+7-L.Ba-1)%7;(Be==4||Be==5&&Tr(L.Ca%400-1))&&ve++}return Y(ve,2)},"%w":L=>L.wa,"%W":L=>Y(Math.floor((L.Ba+7-(L.wa+6)%7)/7),2),"%y":L=>(L.Ca+1900).toString().substring(2),"%Y":L=>L.Ca+1900,"%z":L=>{L=L.Ua;var ve=0<=L;return L=Math.abs(L)/60,(ve?"+":"-")+("0000"+(L/60*100+L%60)).slice(-4)},"%Z":L=>L.Xa,"%%":()=>"%"},S=S.replace(/%%/g,"\0\0");for(ce in me)S.includes(ce)&&(S=S.replace(new RegExp(ce,"g"),me[ce](E)));return S=S.replace(/\0\0/g,"%"),ce=Hn(S),ce.length>v?0:(H.set(ce,h>>>0),ce.length-1)}function Sr(h){try{h()}catch(v){yt(v)}}function ko(h){var v={},S;for(S in h)(function(E){var M=h[E];v[E]=typeof M=="function"?function(){qr.push(E);try{return M.apply(null,arguments)}finally{U||(qr.pop()===E||yt(),Ft&&sr===1&&qr.length===0&&(sr=0,Sr(eo),typeof Fibers<"u"&&Fibers.ab()))}}:M})(S);return v}var sr=0,Ft=null,Do=0,qr=[],qn={},jn={},Bo=0,jr=null,Ro=[];function Mo(){return new Promise((h,v)=>{jr={resolve:h,reject:v}})}function Lo(){var h=wn(65548),v=h+12;J[h>>2>>>0]=v,J[h+4>>2>>>0]=v+65536,v=qr[0];var S=qn[v];return S===void 0&&(S=Bo++,qn[v]=S,jn[S]=v),P[h+8>>2>>>0]=S,h}function zo(h){if(!U){if(sr===0){var v=!1,S=!1;h((E=0)=>{if(!U&&(Do=E,v=!0,S)){sr=2,Sr(()=>xn(Ft)),typeof Browser<"u"&&Browser.Ga.Na&&Browser.Ga.resume(),E=!1;try{var M=(0,k[jn[P[Ft+8>>2>>>0]]])()}catch(xe){M=xe,E=!0}var Y=!1;if(!Ft){var j=jr;j&&(jr=null,(E?j.reject:j.resolve)(M),Y=!0)}if(E&&!Y)throw M}}),S=!0,v||(sr=1,Ft=Lo(),typeof Browser<"u"&&Browser.Ga.Na&&Browser.Ga.pause(),Sr(()=>Qn(Ft)))}else sr===2?(sr=0,Sr(Kr),Kn(Ft),Ft=null,Ro.forEach(E=>{if(!U)try{if(E(),!C)try{G=G=E=G,C||(n.onExit&&n.onExit(E),U=!0),a(E,new Nt(E))}catch(M){M instanceof Nt||M=="unwind"||a(1,M)}}catch(M){M instanceof Nt||M=="unwind"||a(1,M)}})):yt(`invalid state: ${sr}`);return Do}}function No(h){return zo(v=>{h().then(v)})}var Fo={n:function(h,v,S){return No(async()=>{await n.Pa(h,v,S)})},a:function(h,v,S){throw h>>>=0,new Hr(h).Ya(v>>>0,S>>>0),Fn=h,Eo++,Fn},g:function(){return 0},J:function(){},z:function(){},B:function(){},L:function(){return 0},H:function(){},C:function(){},G:function(){},l:function(){},A:function(){},x:function(){},I:function(){},y:function(){},m:()=>!0,q:function(h,v,S){h=v+2097152>>>0<4194305-!!h?(h>>>0)+4294967296*v:NaN,S>>>=0,h=new Date(1e3*h),P[S>>2>>>0]=h.getUTCSeconds(),P[S+4>>2>>>0]=h.getUTCMinutes(),P[S+8>>2>>>0]=h.getUTCHours(),P[S+12>>2>>>0]=h.getUTCDate(),P[S+16>>2>>>0]=h.getUTCMonth(),P[S+20>>2>>>0]=h.getUTCFullYear()-1900,P[S+24>>2>>>0]=h.getUTCDay(),P[S+28>>2>>>0]=(h.getTime()-Date.UTC(h.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},r:function(h,v,S){h=v+2097152>>>0<4194305-!!h?(h>>>0)+4294967296*v:NaN,S>>>=0,h=new Date(1e3*h),P[S>>2>>>0]=h.getSeconds(),P[S+4>>2>>>0]=h.getMinutes(),P[S+8>>2>>>0]=h.getHours(),P[S+12>>2>>>0]=h.getDate(),P[S+16>>2>>>0]=h.getMonth(),P[S+20>>2>>>0]=h.getFullYear()-1900,P[S+24>>2>>>0]=h.getDay(),P[S+28>>2>>>0]=(Tr(h.getFullYear())?Co:_r)[h.getMonth()]+h.getDate()-1|0,P[S+36>>2>>>0]=-(60*h.getTimezoneOffset()),v=new Date(h.getFullYear(),6,1).getTimezoneOffset();var E=new Date(h.getFullYear(),0,1).getTimezoneOffset();P[S+32>>2>>>0]=(v!=E&&h.getTimezoneOffset()==Math.min(E,v))|0},s:function(h){h>>>=0;var v=new Date(P[h+20>>2>>>0]+1900,P[h+16>>2>>>0],P[h+12>>2>>>0],P[h+8>>2>>>0],P[h+4>>2>>>0],P[h>>2>>>0],0),S=P[h+32>>2>>>0],E=v.getTimezoneOffset(),M=new Date(v.getFullYear(),6,1).getTimezoneOffset(),Y=new Date(v.getFullYear(),0,1).getTimezoneOffset(),j=Math.min(Y,M);return 0>S?P[h+32>>2>>>0]=+(M!=Y&&j==E):0<S!=(j==E)&&(M=Math.max(Y,M),v.setTime(v.getTime()+6e4*((0<S?j:M)-E))),P[h+24>>2>>>0]=v.getDay(),P[h+28>>2>>>0]=(Tr(v.getFullYear())?Co:_r)[v.getMonth()]+v.getDate()-1|0,P[h>>2>>>0]=v.getSeconds(),P[h+4>>2>>>0]=v.getMinutes(),P[h+8>>2>>>0]=v.getHours(),P[h+12>>2>>>0]=v.getDate(),P[h+16>>2>>>0]=v.getMonth(),P[h+20>>2>>>0]=v.getYear(),h=v.getTime()/1e3,Xn((Et=h,1<=+Math.abs(Et)?0<Et?+Math.floor(Et/4294967296)>>>0:~~+Math.ceil((Et-+(~~Et>>>0))/4294967296)>>>0:0)),h>>>0},o:function(){return-52},p:function(){},v:function(h,v,S){function E(ae){return(ae=ae.toTimeString().match(/\(([A-Za-z ]+)\)$/))?ae[1]:"GMT"}S>>>=0;var M=new Date().getFullYear(),Y=new Date(M,0,1),j=new Date(M,6,1);M=Y.getTimezoneOffset();var xe=j.getTimezoneOffset();J[h>>>0>>2>>>0]=60*Math.max(M,xe),P[v>>>0>>2>>>0]=+(M!=xe),h=E(Y),v=E(j),h=gn(h),v=gn(v),xe<M?(J[S>>2>>>0]=h,J[S+4>>2>>>0]=v):(J[S>>2>>>0]=v,J[S+4>>2>>>0]=h)},e:()=>{yt("")},b:function(h,v,S){return h>>>=0,v=bn(v>>>0,S>>>0),ar[h].apply(null,v)},i:function(h,v,S){return h>>>=0,v=bn(v>>>0,S>>>0),ar[h].apply(null,v)},h:function(){return Date.now()},w:function(){return 4294901760},c:()=>performance.now(),K:function(h,v,S){return v>>>=0,ne.copyWithin(h>>>0>>>0,v>>>0,v+(S>>>0)>>>0)},u:function(h){h>>>=0;var v=ne.length;if(4294901760<h)return!1;for(var S=1;4>=S;S*=2){var E=v*(1+.2/S);E=Math.min(E,h+100663296);var M=Math;E=Math.max(h,E);e:{M=M.min.call(M,4294901760,E+(65536-E%65536)%65536)-N.buffer.byteLength+65535>>>16;try{N.grow(M),De();var Y=1;break e}catch{}Y=void 0}if(Y)return!0}return!1},D:function(h,v){h>>>=0,v>>>=0;var S=0;return Un().forEach(function(E,M){var Y=v+S;for(M=J[h+4*M>>2>>>0]=Y,Y=0;Y<E.length;++Y)H[M++>>0>>>0]=E.charCodeAt(Y);H[M>>0>>>0]=0,S+=E.length+1}),0},E:function(h,v){h>>>=0,v>>>=0;var S=Un();J[h>>2>>>0]=S.length;var E=0;return S.forEach(function(M){E+=M.length+1}),J[v>>2>>>0]=E,0},f:()=>52,k:function(){return 52},t:function(){return 70},j:function(h,v,S,E){v>>>=0,S>>>=0,E>>>=0;for(var M=0,Y=0;Y<S;Y++){var j=J[v>>2>>>0],xe=J[v+4>>2>>>0];v+=8;for(var ae=0;ae<xe;ae++){var me=ne[j+ae>>>0],ce=Po[h];me===0||me===10?((h===1?x:_)(Vn(ce,0)),ce.length=0):ce.push(me)}M+=xe}return J[E>>2>>>0]=M,0},F:he,d:function(h,v,S,E){return he(h>>>0,v>>>0,S>>>0,E>>>0)}};(function(){function h(S){if(S=S.exports,S=ko(S),k=S=kr(S),N=k.M,De(),Ce.unshift(k.N),$e--,n.monitorRunDependencies&&n.monitorRunDependencies($e),$e==0&&(ht!==null&&(clearInterval(ht),ht=null),it)){var E=it;it=null,E()}return S}var v={a:Fo};if($e++,n.monitorRunDependencies&&n.monitorRunDependencies($e),n.instantiateWasm)try{return n.instantiateWasm(v,h)}catch(S){_("Module.instantiateWasm callback failed with error: "+S),o(S)}return vt(v,function(S){h(S.instance)}).catch(o),{}})(),n._OrtInit=(h,v)=>(n._OrtInit=k.O)(h,v),n._OrtGetLastError=(h,v)=>(n._OrtGetLastError=k.P)(h,v),n._OrtCreateSessionOptions=(h,v,S,E,M,Y,j,xe,ae,me)=>(n._OrtCreateSessionOptions=k.Q)(h,v,S,E,M,Y,j,xe,ae,me),n._OrtAppendExecutionProvider=(h,v)=>(n._OrtAppendExecutionProvider=k.R)(h,v),n._OrtAddFreeDimensionOverride=(h,v,S)=>(n._OrtAddFreeDimensionOverride=k.S)(h,v,S),n._OrtAddSessionConfigEntry=(h,v,S)=>(n._OrtAddSessionConfigEntry=k.T)(h,v,S),n._OrtReleaseSessionOptions=h=>(n._OrtReleaseSessionOptions=k.U)(h),n._OrtCreateSession=(h,v,S)=>(n._OrtCreateSession=k.V)(h,v,S),n._OrtReleaseSession=h=>(n._OrtReleaseSession=k.W)(h),n._OrtGetInputOutputCount=(h,v,S)=>(n._OrtGetInputOutputCount=k.X)(h,v,S),n._OrtGetInputName=(h,v)=>(n._OrtGetInputName=k.Y)(h,v),n._OrtGetOutputName=(h,v)=>(n._OrtGetOutputName=k.Z)(h,v),n._OrtFree=h=>(n._OrtFree=k._)(h),n._OrtCreateTensor=(h,v,S,E,M,Y)=>(n._OrtCreateTensor=k.$)(h,v,S,E,M,Y),n._OrtGetTensorData=(h,v,S,E,M)=>(n._OrtGetTensorData=k.aa)(h,v,S,E,M),n._OrtReleaseTensor=h=>(n._OrtReleaseTensor=k.ba)(h),n._OrtCreateRunOptions=(h,v,S,E)=>(n._OrtCreateRunOptions=k.ca)(h,v,S,E),n._OrtAddRunConfigEntry=(h,v,S)=>(n._OrtAddRunConfigEntry=k.da)(h,v,S),n._OrtReleaseRunOptions=h=>(n._OrtReleaseRunOptions=k.ea)(h),n._OrtCreateBinding=h=>(n._OrtCreateBinding=k.fa)(h),n._OrtBindInput=(h,v,S)=>(n._OrtBindInput=k.ga)(h,v,S),n._OrtBindOutput=(h,v,S,E)=>(n._OrtBindOutput=k.ha)(h,v,S,E),n._OrtClearBoundOutputs=h=>(n._OrtClearBoundOutputs=k.ia)(h),n._OrtReleaseBinding=h=>(n._OrtReleaseBinding=k.ja)(h),n._OrtRunWithBinding=(h,v,S,E,M)=>(n._OrtRunWithBinding=k.ka)(h,v,S,E,M),n._OrtRun=(h,v,S,E,M,Y,j,xe)=>(n._OrtRun=k.la)(h,v,S,E,M,Y,j,xe),n._OrtEndProfiling=h=>(n._OrtEndProfiling=k.ma)(h),n._JsepOutput=(h,v,S)=>(n._JsepOutput=k.na)(h,v,S),n._JsepGetNodeName=h=>(n._JsepGetNodeName=k.oa)(h);var wn=n._malloc=h=>(wn=n._malloc=k.pa)(h),Kn=n._free=h=>(Kn=n._free=k.qa)(h),Xn=h=>(Xn=k.sa)(h),Yn=()=>(Yn=k.ta)(),Zn=h=>(Zn=k.ua)(h),Jn=h=>(Jn=k.va)(h),Qn=h=>(Qn=k.xa)(h),eo=()=>(eo=k.ya)(),xn=h=>(xn=k.za)(h),Kr=()=>(Kr=k.Aa)();n.___start_em_js=934874,n.___stop_em_js=935035;function kr(h){h=Object.assign({},h);var v=E=>()=>E()>>>0,S=E=>M=>E(M)>>>0;return h.__errno_location=v(h.__errno_location),h.malloc=S(h.malloc),h.stackSave=v(h.stackSave),h.stackAlloc=S(h.stackAlloc),h}n.stackAlloc=Jn,n.stackSave=Yn,n.stackRestore=Zn,n.UTF8ToString=lt,n.stringToUTF8=(h,v,S)=>Gn(h,ne,v,S),n.lengthBytesUTF8=mn;var Xr;it=function h(){Xr||to(),Xr||(it=h)};function to(){function h(){if(!Xr&&(Xr=!0,n.calledRun=!0,!U)){if(Wr(Ce),t(n),n.onRuntimeInitialized&&n.onRuntimeInitialized(),n.postRun)for(typeof n.postRun=="function"&&(n.postRun=[n.postRun]);n.postRun.length;){var v=n.postRun.shift();Ne.unshift(v)}Wr(Ne)}}if(!(0<$e)){if(n.preRun)for(typeof n.preRun=="function"&&(n.preRun=[n.preRun]);n.preRun.length;)Se();Wr(re),0<$e||(n.setStatus?(n.setStatus("Running..."),setTimeout(function(){setTimeout(function(){n.setStatus("")},1),h()},1)):h())}}if(n.preInit)for(typeof n.preInit=="function"&&(n.preInit=[n.preInit]);0<n.preInit.length;)n.preInit.pop()();return to(),e.ready}})();typeof xh=="object"&&typeof Fs=="object"?Fs.exports=wh:typeof define=="function"&&define.amd&&define([],()=>wh)});var Th=Xe(()=>{});var _h=Xe(()=>{});var Sh={};Br(Sh,{cpus:()=>xx});var xx,Ih=B(()=>{xx=void 0});var Eh=Xe((Oh,Vs)=>{"use strict";var Ah=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(e={}){function n(){return De.buffer!=$e.buffer&&Ie(),$e}function t(){return De.buffer!=$e.buffer&&Ie(),ht}function o(){return De.buffer!=$e.buffer&&Ie(),it}function i(){return De.buffer!=$e.buffer&&Ie(),yt}function s(){return De.buffer!=$e.buffer&&Ie(),X}function a(){return De.buffer!=$e.buffer&&Ie(),ie}var u=e,l,d;u.ready=new Promise((c,m)=>{l=c,d=m}),u.jsepInit=(c,m,w,I,R,F,q,ge)=>{u.Qb=c,u.xb=m,u.zb=w,u.kb=I,u.yb=R,u.Ea=F,u.Ab=q,u.Bb=ge,m=(fe,pe,we)=>(...Le)=>{let Ue=ur,z=pe?.();Le=fe(...Le);let _e=pe?.();return z!==_e&&(fe=_e,we(z),pe=we=null),ur!=Ue?By():Le},w=fe=>async(...pe)=>{try{if(u.bb)throw Error("Session already started");let we=u.bb={Fb:pe[0],errors:[]},Le=await fe(...pe);if(u.bb!==we)throw Error("Session mismatch");c.flush();let Ue=we.errors;if(0<Ue.length){let z=await Promise.all(Ue);if(z=z.filter(_e=>_e),0<z.length)throw Error(z.join(`
`))}return Le}finally{u.bb=null}},u._OrtRun=w(m(u._OrtRun,()=>u._OrtRun,fe=>u._OrtRun=fe)),u._OrtRunWithBinding=w(m(u._OrtRunWithBinding,()=>u._OrtRunWithBinding,fe=>u._OrtRunWithBinding=fe)),u._OrtBindInput=m(u._OrtBindInput,()=>u._OrtBindInput,fe=>u._OrtBindInput=fe),u.jsepRegisterBuffer=(fe,pe,we,Le)=>c.registerBuffer(fe,pe,we,Le),u.jsepUnregisterBuffers=fe=>{c.unregisterBuffers(fe)},u.jsepGetBuffer=fe=>c.getBuffer(fe),u.jsepCreateDownloader=(fe,pe,we)=>c.createDownloader(fe,pe,we)};var f=Object.assign({},u),p="./this.program",g=(c,m)=>{throw m},b=typeof window=="object",y=typeof importScripts=="function",T=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",x=u.ENVIRONMENT_IS_PTHREAD||!1,_="";function O(c){return u.locateFile?u.locateFile(c,_):_+c}var C,N,k;if(T){var U=(Ls(),Ar(Ms)),G=(Ns(),Ar(zs));_=y?G.dirname(_)+"/":__dirname+"/",C=(m,w)=>(m=m.startsWith("file://")?new URL(m):G.normalize(m),U.readFileSync(m,w?void 0:"utf8")),k=m=>(m=C(m,!0),m.buffer||(m=new Uint8Array(m)),m),N=(m,w,I,R=!0)=>{m=m.startsWith("file://")?new URL(m):G.normalize(m),U.readFile(m,R?void 0:"utf8",(F,q)=>{F?I(F):w(R?q.buffer:q)})},!u.thisProgram&&1<process.argv.length&&(p=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),g=(m,w)=>{throw process.exitCode=m,w},u.inspect=()=>"[Emscripten Module object]";let c;try{c=Th()}catch(m){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),m}global.Worker=c.Worker}else(b||y)&&(y?_=self.location.href:typeof document<"u"&&document.currentScript&&(_=document.currentScript.src),typeof r<"u"&&r&&(_=r),_.indexOf("blob:")!==0?_=_.substr(0,_.replace(/[?#].*/,"").lastIndexOf("/")+1):_="",T||(C=c=>{var m=new XMLHttpRequest;return m.open("GET",c,!1),m.send(null),m.responseText},y&&(k=c=>{var m=new XMLHttpRequest;return m.open("GET",c,!1),m.responseType="arraybuffer",m.send(null),new Uint8Array(m.response)}),N=(c,m,w)=>{var I=new XMLHttpRequest;I.open("GET",c,!0),I.responseType="arraybuffer",I.onload=()=>{I.status==200||I.status==0&&I.response?m(I.response):w()},I.onerror=w,I.send(null)}));T&&typeof performance>"u"&&(global.performance=_h().performance);var H=console.log.bind(console),ne=console.error.bind(console);T&&(H=(...c)=>U.writeSync(1,c.join(" ")+`
`),ne=(...c)=>U.writeSync(2,c.join(" ")+`
`));var P=u.print||H,J=u.printErr||ne;Object.assign(u,f),f=null,u.thisProgram&&(p=u.thisProgram),u.quit&&(g=u.quit);var Te;u.wasmBinary&&(Te=u.wasmBinary);var se=u.noExitRuntime||!0;typeof WebAssembly!="object"&&Jt("no native wasm support detected");var De,re,Ce,Ne=!1,Se,$e,ht,it,yt,X,ie;function Ie(){var c=De.buffer;u.HEAP8=$e=new Int8Array(c),u.HEAP16=new Int16Array(c),u.HEAP32=it=new Int32Array(c),u.HEAPU8=ht=new Uint8Array(c),u.HEAPU16=new Uint16Array(c),u.HEAPU32=yt=new Uint32Array(c),u.HEAPF32=X=new Float32Array(c),u.HEAPF64=ie=new Float64Array(c)}var Tt=u.INITIAL_MEMORY||16777216;if(5242880<=Tt||Jt("INITIAL_MEMORY should be larger than STACK_SIZE, was "+Tt+"! (STACK_SIZE=5242880)"),x)De=u.wasmMemory;else if(u.wasmMemory)De=u.wasmMemory;else if(De=new WebAssembly.Memory({initial:Tt/65536,maximum:65536,shared:!0}),!(De.buffer instanceof SharedArrayBuffer))throw J("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),T&&J("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");Ie(),Tt=De.buffer.byteLength;var Bt=[],at=[],vt=[],Et=0;function ar(){return se||0<Et}var Nt=0,Wr=null,Hr=null;function Fn(){Nt++,u.monitorRunDependencies&&u.monitorRunDependencies(Nt)}function Eo(){if(Nt--,u.monitorRunDependencies&&u.monitorRunDependencies(Nt),Nt==0&&(Wr!==null&&(clearInterval(Wr),Wr=null),Hr)){var c=Hr;Hr=null,c()}}function Jt(c){throw u.onAbort&&u.onAbort(c),c="Aborted("+c+")",J(c),Ne=!0,Se=1,c=new WebAssembly.RuntimeError(c+". Build with -sASSERTIONS for more info."),d(c),c}function Vn(c){return c.startsWith("data:application/octet-stream;base64,")}var lt;lt="ort-wasm-simd-threaded.wasm",Vn(lt)||(lt=O(lt));function mn(c){if(c==lt&&Te)return new Uint8Array(Te);if(k)return k(c);throw"both async and sync fetching of the wasm failed"}function Gn(c){if(!Te&&(b||y)){if(typeof fetch=="function"&&!c.startsWith("file://"))return fetch(c,{credentials:"same-origin"}).then(m=>{if(!m.ok)throw"failed to load wasm binary file at '"+c+"'";return m.arrayBuffer()}).catch(()=>mn(c));if(N)return new Promise((m,w)=>{N(c,I=>m(new Uint8Array(I)),w)})}return Promise.resolve().then(()=>mn(c))}function Tr(c,m,w){return Gn(c).then(I=>WebAssembly.instantiate(I,m)).then(I=>I).then(w,I=>{J("failed to asynchronously prepare wasm: "+I),Jt(I)})}function Co(c,m){var w=lt;return Te||typeof WebAssembly.instantiateStreaming!="function"||Vn(w)||w.startsWith("file://")||T||typeof fetch!="function"?Tr(w,c,m):fetch(w,{credentials:"same-origin"}).then(I=>WebAssembly.instantiateStreaming(I,c).then(m,function(R){return J("wasm streaming compile failed: "+R),J("falling back to ArrayBuffer instantiation"),Tr(w,c,m)}))}var _r,gn={1444288:c=>{u.Ea("Abs",c,void 0)},1444339:c=>{u.Ea("Neg",c,void 0)},1444390:c=>{u.Ea("Floor",c,void 0)},1444443:c=>{u.Ea("Ceil",c,void 0)},1444495:c=>{u.Ea("Reciprocal",c,void 0)},1444553:c=>{u.Ea("Sqrt",c,void 0)},1444605:c=>{u.Ea("Exp",c,void 0)},1444656:c=>{u.Ea("Erf",c,void 0)},1444707:c=>{u.Ea("Sigmoid",c,void 0)},1444762:c=>{u.Ea("Log",c,void 0)},1444813:c=>{u.Ea("Sin",c,void 0)},1444864:c=>{u.Ea("Cos",c,void 0)},1444915:c=>{u.Ea("Tan",c,void 0)},1444966:c=>{u.Ea("Asin",c,void 0)},1445018:c=>{u.Ea("Acos",c,void 0)},1445070:c=>{u.Ea("Atan",c,void 0)},1445122:c=>{u.Ea("Sinh",c,void 0)},1445174:c=>{u.Ea("Cosh",c,void 0)},1445226:c=>{u.Ea("Asinh",c,void 0)},1445279:c=>{u.Ea("Acosh",c,void 0)},1445332:c=>{u.Ea("Atanh",c,void 0)},1445385:c=>{u.Ea("Tanh",c,void 0)},1445437:c=>{u.Ea("Not",c,void 0)},1445488:(c,m,w)=>{u.Ea("Clip",c,{min:m,max:w})},1445557:c=>{u.Ea("Clip",c,void 0)},1445609:(c,m)=>{u.Ea("Elu",c,{alpha:m})},1445667:c=>{u.Ea("Relu",c,void 0)},1445719:(c,m)=>{u.Ea("LeakyRelu",c,{alpha:m})},1445783:(c,m)=>{u.Ea("ThresholdedRelu",c,{alpha:m})},1445853:c=>{u.Ab(c)},1445887:(c,m)=>u.Bb(c,m,u.bb.Fb,u.bb.errors),1445999:(c,m)=>{u.Ea("Cast",c,{to:m})},1446057:c=>{u.Ea("Add",c,void 0)},1446108:c=>{u.Ea("Sub",c,void 0)},1446159:c=>{u.Ea("Mul",c,void 0)},1446210:c=>{u.Ea("Div",c,void 0)},1446261:c=>{u.Ea("Pow",c,void 0)},1446312:c=>{u.Ea("Equal",c,void 0)},1446365:c=>{u.Ea("Greater",c,void 0)},1446420:c=>{u.Ea("GreaterOrEqual",c,void 0)},1446482:c=>{u.Ea("Less",c,void 0)},1446534:c=>{u.Ea("LessOrEqual",c,void 0)},1446593:(c,m,w,I,R)=>{u.Ea("ReduceMean",c,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:I?Array.from(o().subarray(R>>>0,R+I>>>0)):[]})},1446757:(c,m,w,I,R)=>{u.Ea("ReduceMax",c,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:I?Array.from(o().subarray(R>>>0,R+I>>>0)):[]})},1446920:(c,m,w,I,R)=>{u.Ea("ReduceMin",c,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:I?Array.from(o().subarray(R>>>0,R+I>>>0)):[]})},1447083:(c,m,w,I,R)=>{u.Ea("ReduceProd",c,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:I?Array.from(o().subarray(R>>>0,R+I>>>0)):[]})},1447247:(c,m,w,I,R)=>{u.Ea("ReduceSum",c,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:I?Array.from(o().subarray(R>>>0,R+I>>>0)):[]})},1447410:(c,m,w,I,R)=>{u.Ea("ReduceL1",c,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:I?Array.from(o().subarray(R>>>0,R+I>>>0)):[]})},1447572:(c,m,w,I,R)=>{u.Ea("ReduceL2",c,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:I?Array.from(o().subarray(R>>>0,R+I>>>0)):[]})},1447734:(c,m,w,I,R)=>{u.Ea("ReduceLogSum",c,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:I?Array.from(o().subarray(R>>>0,R+I>>>0)):[]})},1447900:(c,m,w,I,R)=>{u.Ea("ReduceSumSquare",c,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:I?Array.from(o().subarray(R>>>0,R+I>>>0)):[]})},1448069:(c,m,w,I,R)=>{u.Ea("ReduceLogSumExp",c,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:I?Array.from(o().subarray(R>>>0,R+I>>>0)):[]})},1448238:c=>{u.Ea("Where",c,void 0)},1448291:(c,m,w)=>{u.Ea("Transpose",c,{perm:m?Array.from(o().subarray(w>>>0,w+m>>>0)):[]})},1448404:(c,m,w,I,R,F,q,ge,fe,pe,we,Le,Ue)=>{u.Ea("Conv",c,{format:fe?"NHWC":"NCHW",auto_pad:m,dilations:[w],group:I,kernel_shape:[R],pads:F?Array.from(o().subarray(q>>>0,q+F>>>0)):[],strides:[ge],w_is_const:()=>!!n()[pe>>>0],activation:_t(we),activation_params:Le?Array.from(s().subarray(Ue>>>0,Ue+Le>>>0)):[]})},1448785:(c,m,w,I,R,F,q,ge,fe,pe,we,Le,Ue,z,_e,Fe)=>{u.Ea("Conv",c,{format:Le?"NHWC":"NCHW",auto_pad:m,dilations:[w,I],group:R,kernel_shape:[F,q],pads:ge?Array.from(o().subarray(fe>>>0,fe+ge>>>0)):[],strides:[pe,we],w_is_const:()=>!!n()[Ue>>>0],activation:_t(z),activation_params:_e?Array.from(s().subarray(Fe>>>0,Fe+_e>>>0)):[]})},1449187:(c,m,w,I,R,F,q,ge,fe,pe,we,Le,Ue,z,_e)=>{u.Ea("ConvTranspose",c,{format:fe?"NHWC":"NCHW",autoPad:m,dilations:[w],group:I,kernel_shape:[R],pads:[F,q],strides:[ge],wIsConst:()=>!!n()[pe>>>0],outputPadding:we?Array.from(o().subarray(Le>>>0,Le+we>>>0)):[],outputShape:Ue?Array.from(o().subarray(z>>>0,z+Ue>>>0)):[],activation:_t(_e)})},1449601:(c,m,w,I,R,F,q,ge,fe,pe,we,Le,Ue,z)=>{u.Ea("ConvTranspose",c,{format:ge?"NHWC":"NCHW",autoPad:m,dilations:Array.from(o().subarray(w>>>0,w+2>>>0)),group:I,kernelShape:Array.from(o().subarray(R>>>0,R+2>>>0)),pads:Array.from(o().subarray(F>>>0,F+4>>>0)),strides:Array.from(o().subarray(q>>>0,q+2>>>0)),wIsConst:()=>!!n()[fe>>>0],outputPadding:0<pe?Array.from(o().subarray(we>>>0,we+pe>>>0)):[],outputShape:0<Le?Array.from(o().subarray(Ue>>>0,Ue+Le>>>0)):[],activation:_t(z)})},1450158:(c,m,w,I,R,F,q,ge,fe,pe,we,Le,Ue,z,_e)=>{u.Ea("ConvTranspose",c,{format:fe?"NHWC":"NCHW",autoPad:m,dilations:[w],group:I,kernel_shape:[R],pads:[F,q],strides:[ge],wIsConst:()=>!!n()[pe>>>0],outputPadding:we?Array.from(o().subarray(Le>>>0,Le+we>>>0)):[],outputShape:Ue?Array.from(o().subarray(z>>>0,z+Ue>>>0)):[],activation:_t(_e)})},1450572:(c,m,w,I,R,F,q,ge,fe,pe,we,Le,Ue,z)=>{u.Ea("ConvTranspose",c,{format:ge?"NHWC":"NCHW",autoPad:m,dilations:Array.from(o().subarray(w>>>0,w+2>>>0)),group:I,kernelShape:Array.from(o().subarray(R>>>0,R+2>>>0)),pads:Array.from(o().subarray(F>>>0,F+4>>>0)),strides:Array.from(o().subarray(q>>>0,q+2>>>0)),wIsConst:()=>!!n()[fe>>>0],outputPadding:0<pe?Array.from(o().subarray(we>>>0,we+pe>>>0)):[],outputShape:0<Le?Array.from(o().subarray(Ue>>>0,Ue+Le>>>0)):[],activation:_t(z)})},1451129:(c,m)=>{u.Ea("GlobalAveragePool",c,{format:m?"NHWC":"NCHW"})},1451220:(c,m,w,I,R,F,q,ge,fe,pe,we,Le,Ue,z,_e,Fe)=>{u.Ea("AveragePool",c,{format:Fe?"NHWC":"NCHW",auto_pad:m,ceil_mode:w,count_include_pad:I,storage_order:R,dilations:[F,q],kernel_shape:[ge,fe],pads:[pe,we,Le,Ue],strides:[z,_e]})},1451504:(c,m)=>{u.Ea("GlobalAveragePool",c,{format:m?"NHWC":"NCHW"})},1451595:(c,m,w,I,R,F,q,ge,fe,pe,we,Le,Ue,z,_e,Fe)=>{u.Ea("AveragePool",c,{format:Fe?"NHWC":"NCHW",auto_pad:m,ceil_mode:w,count_include_pad:I,storage_order:R,dilations:[F,q],kernel_shape:[ge,fe],pads:[pe,we,Le,Ue],strides:[z,_e]})},1451879:(c,m)=>{u.Ea("GlobalMaxPool",c,{format:m?"NHWC":"NCHW"})},1451966:(c,m,w,I,R,F,q,ge,fe,pe,we,Le,Ue,z,_e,Fe)=>{u.Ea("MaxPool",c,{format:Fe?"NHWC":"NCHW",auto_pad:m,ceil_mode:w,count_include_pad:I,storage_order:R,dilations:[F,q],kernel_shape:[ge,fe],pads:[pe,we,Le,Ue],strides:[z,_e]})},1452246:(c,m)=>{u.Ea("GlobalMaxPool",c,{format:m?"NHWC":"NCHW"})},1452333:(c,m,w,I,R,F,q,ge,fe,pe,we,Le,Ue,z,_e,Fe)=>{u.Ea("MaxPool",c,{format:Fe?"NHWC":"NCHW",auto_pad:m,ceil_mode:w,count_include_pad:I,storage_order:R,dilations:[F,q],kernel_shape:[ge,fe],pads:[pe,we,Le,Ue],strides:[z,_e]})},1452613:(c,m,w,I,R)=>{u.Ea("Gemm",c,{alpha:m,beta:w,transA:I,transB:R})},1452717:c=>{u.Ea("MatMul",c,void 0)},1452771:(c,m,w,I)=>{u.Ea("ArgMax",c,{keepDims:!!m,selectLastIndex:!!w,axis:I})},1452879:(c,m,w,I)=>{u.Ea("ArgMin",c,{keepDims:!!m,selectLastIndex:!!w,axis:I})},1452987:(c,m)=>{u.Ea("Softmax",c,{axis:m})},1453050:(c,m)=>{u.Ea("Concat",c,{axis:m})},1453110:(c,m,w,I,R)=>{u.Ea("Split",c,{axis:m,numOutputs:w,splitSizes:I?Array.from(o().subarray(R>>>0,R+I>>>0)):[]})},1453255:c=>{u.Ea("Expand",c,void 0)},1453309:(c,m)=>{u.Ea("Gather",c,{axis:Number(m)})},1453380:(c,m)=>{u.Ea("GatherElements",c,{axis:Number(m)})},1453459:(c,m,w,I,R,F,q,ge,fe,pe,we)=>{u.Ea("Resize",c,{antialias:m,axes:w?Array.from(o().subarray(I>>>0,I+w>>>0)):[],coordinateTransformMode:_t(R),cubicCoeffA:F,excludeOutside:q,extrapolationValue:ge,keepAspectRatioPolicy:_t(fe),mode:_t(pe),nearestMode:_t(we)})},1453810:(c,m,w,I,R,F,q)=>{u.Ea("Slice",c,{starts:m?Array.from(o().subarray(w>>>0,w+m>>>0)):[],ends:I?Array.from(o().subarray(R>>>0,R+I>>>0)):[],axes:F?Array.from(o().subarray(q>>>0,q+F>>>0)):[]})},1454041:c=>{u.Ea("Tile",c,void 0)},1454093:(c,m,w)=>{u.Ea("LayerNormalization",c,{axis:Number(m),epsilon:Number(w)})},1454200:(c,m,w)=>{u.Ea("InstanceNormalization",c,{epsilon:m,format:w?"NHWC":"NCHW"})},1454314:(c,m,w)=>{u.Ea("InstanceNormalization",c,{epsilon:m,format:w?"NHWC":"NCHW"})},1454428:c=>{u.Ea("Range",c,void 0)},1454481:(c,m)=>{u.Ea("Einsum",c,{equation:_t(m)})},1454562:(c,m,w,I,R)=>{u.Ea("Pad",c,{mode:m,value:w,pads:I?Array.from(o().subarray(R>>>0,R+I>>>0)):[]})},1454694:(c,m,w,I,R,F)=>{u.Ea("BatchNormalization",c,{epsilon:m,momentum:w,spatial:!!R,trainingMode:!!I,format:F?"NHWC":"NCHW"})},1454863:(c,m,w,I,R,F)=>{u.Ea("BatchNormalization",c,{epsilon:m,momentum:w,spatial:!!R,trainingMode:!!I,format:F?"NHWC":"NCHW"})},1455032:(c,m,w)=>{u.Ea("CumSum",c,{exclusive:Number(m),reverse:Number(w)})},1455129:(c,m,w,I,R,F,q,ge,fe)=>{u.Ea("Attention",c,{numHeads:m,isUnidirectional:w,maskFilterValue:I,scale:R,doRotary:F,qkvHiddenSizes:q?Array.from(o().subarray(Number(ge)>>>0,Number(ge)+q>>>0)):[],pastPresentShareBuffer:!!fe})},1455401:c=>{u.Ea("Gelu",c,void 0)},1455453:(c,m,w,I,R,F)=>{u.Ea("MultiHeadAttention",c,{numHeads:m,isUnidirectional:w,maskFilterValue:I,scale:R,doRotary:F})},1455612:c=>{u.Ea("BiasAdd",c,void 0)},1455667:c=>{u.Ea("BiasSplitGelu",c,void 0)},1455728:(c,m)=>{u.Ea("SkipLayerNormalization",c,{epsilon:m})},1455809:c=>u.xb(c),1455842:c=>u.zb(c),1455874:(c,m,w)=>{u.kb(c,m,w,!0)},1455913:(c,m,w)=>{u.kb(c,m,w)}};function Pr(c){this.name="ExitStatus",this.message=`Program terminated with exit(${c})`,this.status=c}function bn(c){c.terminate(),c.onmessage=()=>{}}function yn(c){(c=he.Qa[c])||Jt(),he.Eb(c)}function Un(c){var m=he.ub();if(!m)return 6;he.Za.push(m),he.Qa[c.Xa]=m,m.Xa=c.Xa;var w={cmd:"run",start_routine:c.Gb,arg:c.sb,pthread_ptr:c.Xa};return T&&m.unref(),m.postMessage(w,c.Mb),0}var vn=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Po=(c,m,w)=>{m>>>=0;var I=m+w;for(w=m;c[w]&&!(w>=I);)++w;if(16<w-m&&c.buffer&&vn)return vn.decode(c.buffer instanceof SharedArrayBuffer?c.slice(m,w):c.subarray(m,w));for(I="";m<w;){var R=c[m++];if(R&128){var F=c[m++]&63;if((R&224)==192)I+=String.fromCharCode((R&31)<<6|F);else{var q=c[m++]&63;R=(R&240)==224?(R&15)<<12|F<<6|q:(R&7)<<18|F<<12|q<<6|c[m++]&63,65536>R?I+=String.fromCharCode(R):(R-=65536,I+=String.fromCharCode(55296|R>>10,56320|R&1023))}}else I+=String.fromCharCode(R)}return I},_t=(c,m)=>(c>>>=0)?Po(t(),c,m):"";function Wn(c){if(x)return j(1,1,c);Se=c,ar()||(he.Hb(),u.onExit&&u.onExit(c),Ne=!0),g(c,new Pr(c))}var Hn=c=>{if(Se=c,x)throw ko(c),"unwind";Wn(c)},he={Ya:[],Za:[],ob:[],Qa:{},gb:function(){x?he.wb():he.vb()},vb:function(){for(var c=u.numThreads;c--;)he.jb();Bt.unshift(()=>{Fn(),he.Cb(()=>Eo())})},wb:function(){he.receiveObjectTransfer=he.Db,he.threadInitTLS=he.nb,he.setExitStatus=he.mb,se=!1},mb:function(c){Se=c},Sb:["$terminateWorker"],Hb:function(){for(var c of he.Za)bn(c);for(c of he.Ya)bn(c);he.Ya=[],he.Za=[],he.Qa=[]},Eb:function(c){var m=c.Xa;delete he.Qa[m],he.Ya.push(c),he.Za.splice(he.Za.indexOf(c),1),c.Xa=0,$a(m)},Db:function(){},nb:function(){he.ob.forEach(c=>c())},lb:c=>new Promise(m=>{c.onmessage=F=>{F=F.data;var q=F.cmd;if(F.targetThread&&F.targetThread!=Uo()){var ge=he.Qa[F.Rb];ge?ge.postMessage(F,F.transferList):J('Internal error! Worker sent a message "'+q+'" to target pthread '+F.targetThread+", but that thread no longer exists!")}else q==="checkMailbox"?Kr():q==="spawnThread"?Un(F):q==="cleanupThread"?yn(F.thread):q==="killThread"?(F=F.thread,q=he.Qa[F],delete he.Qa[F],bn(q),$a(F),he.Za.splice(he.Za.indexOf(q),1),q.Xa=0):q==="cancelThread"?he.Qa[F.thread].postMessage({cmd:"cancel"}):q==="loaded"?(c.loaded=!0,T&&!c.Xa&&c.unref(),m(c)):q==="alert"?alert("Thread "+F.threadId+": "+F.text):F.target==="setimmediate"?c.postMessage(F):q==="callHandler"?u[F.handler](...F.args):q&&J("worker sent an unknown command "+q)},c.onerror=F=>{throw J("worker sent an error! "+F.filename+":"+F.lineno+": "+F.message),F},T&&(c.on("message",function(F){c.onmessage({data:F})}),c.on("error",function(F){c.onerror(F)}));var w=[],I=["onExit","onAbort","print","printErr"],R;for(R of I)u.hasOwnProperty(R)&&w.push(R);c.postMessage({cmd:"load",handlers:w,urlOrBlob:u.mainScriptUrlOrBlob||r,wasmMemory:De,wasmModule:Ce})}),Cb:function(c){if(x)return c();Promise.all(he.Ya.map(he.lb)).then(c)},jb:function(){var c=O("ort-wasm-simd-threaded.worker.js");c=new Worker(c),he.Ya.push(c)},ub:function(){return he.Ya.length==0&&(he.jb(),he.lb(he.Ya[0])),he.Ya.pop()}};u.PThread=he;var Sr=c=>{for(;0<c.length;)c.shift()(u)};u.establishStackSpace=function(){var c=Uo(),m=o()[c+52>>2>>>0];c=o()[c+56>>2>>>0],ku(m,m-c),Wo(m)};function ko(c){if(x)return j(2,0,c);Hn(c)}u.invokeEntryPoint=function(c,m){c=Du.apply(null,[c,m]),ar()?he.mb(c):Ta(c)};function sr(c){this.fb=c-24,this.rb=function(m){i()[this.fb+4>>2>>>0]=m},this.qb=function(m){i()[this.fb+8>>2>>>0]=m},this.gb=function(m,w){this.pb(),this.rb(m),this.qb(w)},this.pb=function(){i()[this.fb+16>>2>>>0]=0}}var Ft=0,Do=0;function qr(c,m,w,I){return x?j(3,1,c,m,w,I):qn(c,m,w,I)}function qn(c,m,w,I){if(c>>>=0,m>>>=0,w>>>=0,I>>>=0,typeof SharedArrayBuffer>"u")return J("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var R=[];return x&&R.length===0?qr(c,m,w,I):(c={Gb:w,Xa:c,sb:I,Mb:R},x?(c.Ob="spawnThread",postMessage(c,R),0):Un(c))}function jn(c,m,w){return x?j(4,1,c,m,w):0}function Bo(c,m){if(x)return j(5,1,c,m)}var jr=c=>{for(var m=0,w=0;w<c.length;++w){var I=c.charCodeAt(w);127>=I?m++:2047>=I?m+=2:55296<=I&&57343>=I?(m+=4,++w):m+=3}return m},Ro=(c,m,w,I)=>{if(w>>>=0,!(0<I))return 0;var R=w;I=w+I-1;for(var F=0;F<c.length;++F){var q=c.charCodeAt(F);if(55296<=q&&57343>=q){var ge=c.charCodeAt(++F);q=65536+((q&1023)<<10)|ge&1023}if(127>=q){if(w>=I)break;m[w++>>>0]=q}else{if(2047>=q){if(w+1>=I)break;m[w++>>>0]=192|q>>6}else{if(65535>=q){if(w+2>=I)break;m[w++>>>0]=224|q>>12}else{if(w+3>=I)break;m[w++>>>0]=240|q>>18,m[w++>>>0]=128|q>>12&63}m[w++>>>0]=128|q>>6&63}m[w++>>>0]=128|q&63}}return m[w>>>0]=0,w-R},Mo=(c,m,w)=>Ro(c,t(),m,w);function Lo(c,m){if(x)return j(6,1,c,m)}function zo(c,m,w){if(x)return j(7,1,c,m,w)}function No(c,m,w){return x?j(8,1,c,m,w):0}function Fo(c,m){if(x)return j(9,1,c,m)}function wn(c,m,w){if(x)return j(10,1,c,m,w)}function Kn(c,m,w,I){if(x)return j(11,1,c,m,w,I)}function Xn(c,m,w,I){if(x)return j(12,1,c,m,w,I)}function Yn(c,m,w,I){if(x)return j(13,1,c,m,w,I)}function Zn(c){if(x)return j(14,1,c)}function Jn(c,m){if(x)return j(15,1,c,m)}function Qn(c,m,w){if(x)return j(16,1,c,m,w)}var eo=c=>{if(!Ne)try{if(c(),!ar())try{x?Ta(Se):Hn(Se)}catch(m){m instanceof Pr||m=="unwind"||g(1,m)}}catch(m){m instanceof Pr||m=="unwind"||g(1,m)}};function xn(c){c>>>=0,typeof Atomics.Nb=="function"&&(Atomics.Nb(o(),c>>2,c).value.then(Kr),c+=128,Atomics.store(o(),c>>2,1))}u.__emscripten_thread_mailbox_await=xn;function Kr(){var c=Uo();c&&(xn(c),eo(()=>Cu()))}u.checkMailbox=Kr;var kr=c=>c%4===0&&(c%100!==0||c%400===0),Xr=[0,31,60,91,121,152,182,213,244,274,305,335],to=[0,31,59,90,120,151,181,212,243,273,304,334];function h(c,m,w,I,R,F,q,ge){return x?j(17,1,c,m,w,I,R,F,q,ge):-52}function v(c,m,w,I,R,F,q){if(x)return j(18,1,c,m,w,I,R,F,q)}var S=c=>{var m=jr(c)+1,w=xa(m);return w&&Mo(c,w,m),w},E=[],M=(c,m)=>{E.length=0;var w;for(m>>=2;w=t()[c++>>>0];)m+=w!=105&m,E.push(w==105?o()[m>>>0]:a()[m++>>>1]),++m;return E},Y=c=>{var m=_a();return c=c(),Wo(m),c};function j(c,m){var w=arguments.length-2,I=arguments;return Y(()=>{for(var R=Sa(8*w),F=R>>3,q=0;q<w;q++){var ge=I[2+q];a()[F+q>>>0]=ge}return Eu(c,w,R,m)})}var xe=[],ae={},me=()=>{if(!ce){var c={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:p||"./this.program"},m;for(m in ae)ae[m]===void 0?delete c[m]:c[m]=ae[m];var w=[];for(m in c)w.push(`${m}=${c[m]}`);ce=w}return ce},ce;function Ee(c,m){if(x)return j(19,1,c,m);c>>>=0,m>>>=0;var w=0;return me().forEach(function(I,R){var F=m+w;for(R=i()[c+4*R>>2>>>0]=F,F=0;F<I.length;++F)n()[R++>>0>>>0]=I.charCodeAt(F);n()[R>>0>>>0]=0,w+=I.length+1}),0}function Me(c,m){if(x)return j(20,1,c,m);c>>>=0,m>>>=0;var w=me();i()[c>>2>>>0]=w.length;var I=0;return w.forEach(function(R){I+=R.length+1}),i()[m>>2>>>0]=I,0}function L(c){return x?j(21,1,c):52}function ve(c,m,w,I){return x?j(22,1,c,m,w,I):52}function Be(c,m,w,I,R){return x?j(23,1,c,m,w,I,R):70}var Ir=[null,[],[]];function ro(c,m,w,I){if(x)return j(24,1,c,m,w,I);m>>>=0,w>>>=0,I>>>=0;for(var R=0,F=0;F<w;F++){var q=i()[m>>2>>>0],ge=i()[m+4>>2>>>0];m+=8;for(var fe=0;fe<ge;fe++){var pe=t()[q+fe>>>0],we=Ir[c];pe===0||pe===10?((c===1?P:J)(Po(we,0)),we.length=0):we.push(pe)}R+=ge}return i()[I>>2>>>0]=R,0}var xu=[31,29,31,30,31,30,31,31,30,31,30,31],$u=[31,28,31,30,31,30,31,31,30,31,30,31];function Ey(c){var m=Array(jr(c)+1);return Ro(c,m,0,m.length),m}var Cy=(c,m)=>{n().set(c,m>>>0)};function Tu(c,m,w,I){function R(z,_e,Fe){for(z=typeof z=="number"?z.toString():z||"";z.length<_e;)z=Fe[0]+z;return z}function F(z,_e){return R(z,_e,"0")}function q(z,_e){function Fe(Nu){return 0>Nu?-1:0<Nu?1:0}var Yr;return(Yr=Fe(z.getFullYear()-_e.getFullYear()))===0&&(Yr=Fe(z.getMonth()-_e.getMonth()))===0&&(Yr=Fe(z.getDate()-_e.getDate())),Yr}function ge(z){switch(z.getDay()){case 0:return new Date(z.getFullYear()-1,11,29);case 1:return z;case 2:return new Date(z.getFullYear(),0,3);case 3:return new Date(z.getFullYear(),0,2);case 4:return new Date(z.getFullYear(),0,1);case 5:return new Date(z.getFullYear()-1,11,31);case 6:return new Date(z.getFullYear()-1,11,30)}}function fe(z){var _e=z.$a;for(z=new Date(new Date(z.ab+1900,0,1).getTime());0<_e;){var Fe=z.getMonth(),Yr=(kr(z.getFullYear())?xu:$u)[Fe];if(_e>Yr-z.getDate())_e-=Yr-z.getDate()+1,z.setDate(1),11>Fe?z.setMonth(Fe+1):(z.setMonth(0),z.setFullYear(z.getFullYear()+1));else{z.setDate(z.getDate()+_e);break}}return Fe=new Date(z.getFullYear()+1,0,4),_e=ge(new Date(z.getFullYear(),0,4)),Fe=ge(Fe),0>=q(_e,z)?0>=q(Fe,z)?z.getFullYear()+1:z.getFullYear():z.getFullYear()-1}c>>>=0,m>>>=0,w>>>=0,I>>>=0;var pe=o()[I+40>>2>>>0];I={Kb:o()[I>>2>>>0],Jb:o()[I+4>>2>>>0],cb:o()[I+8>>2>>>0],ib:o()[I+12>>2>>>0],eb:o()[I+16>>2>>>0],ab:o()[I+20>>2>>>0],Wa:o()[I+24>>2>>>0],$a:o()[I+28>>2>>>0],Tb:o()[I+32>>2>>>0],Ib:o()[I+36>>2>>>0],Lb:pe?_t(pe):""},w=_t(w),pe={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var we in pe)w=w.replace(new RegExp(we,"g"),pe[we]);var Le="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Ue="January February March April May June July August September October November December".split(" ");pe={"%a":z=>Le[z.Wa].substring(0,3),"%A":z=>Le[z.Wa],"%b":z=>Ue[z.eb].substring(0,3),"%B":z=>Ue[z.eb],"%C":z=>F((z.ab+1900)/100|0,2),"%d":z=>F(z.ib,2),"%e":z=>R(z.ib,2," "),"%g":z=>fe(z).toString().substring(2),"%G":z=>fe(z),"%H":z=>F(z.cb,2),"%I":z=>(z=z.cb,z==0?z=12:12<z&&(z-=12),F(z,2)),"%j":z=>{for(var _e=0,Fe=0;Fe<=z.eb-1;_e+=(kr(z.ab+1900)?xu:$u)[Fe++]);return F(z.ib+_e,3)},"%m":z=>F(z.eb+1,2),"%M":z=>F(z.Jb,2),"%n":()=>`
`,"%p":z=>0<=z.cb&&12>z.cb?"AM":"PM","%S":z=>F(z.Kb,2),"%t":()=>"	","%u":z=>z.Wa||7,"%U":z=>F(Math.floor((z.$a+7-z.Wa)/7),2),"%V":z=>{var _e=Math.floor((z.$a+7-(z.Wa+6)%7)/7);if(2>=(z.Wa+371-z.$a-2)%7&&_e++,_e)_e==53&&(Fe=(z.Wa+371-z.$a)%7,Fe==4||Fe==3&&kr(z.ab)||(_e=1));else{_e=52;var Fe=(z.Wa+7-z.$a-1)%7;(Fe==4||Fe==5&&kr(z.ab%400-1))&&_e++}return F(_e,2)},"%w":z=>z.Wa,"%W":z=>F(Math.floor((z.$a+7-(z.Wa+6)%7)/7),2),"%y":z=>(z.ab+1900).toString().substring(2),"%Y":z=>z.ab+1900,"%z":z=>{z=z.Ib;var _e=0<=z;return z=Math.abs(z)/60,(_e?"+":"-")+("0000"+(z/60*100+z%60)).slice(-4)},"%Z":z=>z.Lb,"%%":()=>"%"},w=w.replace(/%%/g,"\0\0");for(we in pe)w.includes(we)&&(w=w.replace(new RegExp(we,"g"),pe[we](I)));return w=w.replace(/\0\0/g,"%"),we=Ey(w),we.length>m?0:(Cy(we,c),we.length-1)}function Vo(c){try{c()}catch(m){Jt(m)}}function Py(c){var m={},w;for(w in c)(function(I){var R=c[I];m[I]=typeof R=="function"?function(){Go.push(I);try{return R.apply(null,arguments)}finally{Ne||(Go.pop()===I||Jt(),ur&&Dr===1&&Go.length===0&&(Dr=0,Et+=1,Vo(Ru),typeof Fibers<"u"&&Fibers.Ub()))}}:R})(w);return m}var Dr=0,ur=null,_u=0,Go=[],Su={},Iu={},ky=0,wa=null,Dy=[];function By(){return new Promise((c,m)=>{wa={resolve:c,reject:m}})}function Ry(){var c=xa(65548),m=c+12;i()[c>>2>>>0]=m,i()[c+4>>2>>>0]=m+65536,m=Go[0];var w=Su[m];return w===void 0&&(w=ky++,Su[m]=w,Iu[w]=m),m=w,o()[c+8>>2>>>0]=m,c}function My(){var c=o()[ur+8>>2>>>0];return c=re[Iu[c]],--Et,c()}function Ly(c){if(!Ne){if(Dr===0){var m=!1,w=!1;c((I=0)=>{if(!Ne&&(_u=I,m=!0,w)){Dr=2,Vo(()=>Mu(ur)),typeof Browser<"u"&&Browser.hb.tb&&Browser.hb.resume(),I=!1;try{var R=My()}catch(ge){R=ge,I=!0}var F=!1;if(!ur){var q=wa;q&&(wa=null,(I?q.reject:q.resolve)(R),F=!0)}if(I&&!F)throw R}}),w=!0,m||(Dr=1,ur=Ry(),typeof Browser<"u"&&Browser.hb.tb&&Browser.hb.pause(),Vo(()=>Bu(ur)))}else Dr===2?(Dr=0,Vo(Lu),Au(ur),ur=null,Dy.forEach(I=>eo(I))):Jt(`invalid state: ${Dr}`);return _u}}function zy(c){return Ly(m=>{c().then(m)})}he.gb();var Ny=[null,Wn,ko,qr,jn,Bo,Lo,zo,No,Fo,wn,Kn,Xn,Yn,Zn,Jn,Qn,h,v,Ee,Me,L,ve,Be,ro],Fy={r:function(c,m,w){return zy(async()=>{await u.yb(c,m,w)})},b:function(c,m,w){throw c>>>=0,new sr(c).gb(m>>>0,w>>>0),Ft=c,Do++,Ft},P:function(c){Ou(c>>>0,!y,1,!b,131072,!1),he.nb()},n:function(c){c>>>=0,x?postMessage({cmd:"cleanupThread",thread:c}):yn(c)},K:qn,g:jn,V:Bo,F:Lo,H:zo,y:No,T:Fo,L:wn,S:Kn,p:Xn,G:Yn,D:Zn,U:Jn,E:Qn,q:()=>!0,B:function(c,m){c>>>=0,c==m>>>0?setTimeout(()=>Kr()):x?postMessage({targetThread:c,cmd:"checkMailbox"}):(c=he.Qa[c])&&c.postMessage({cmd:"checkMailbox"})},N:function(){return-1},O:xn,X:function(c){T&&he.Qa[c>>>0].ref()},u:function(c,m,w){c=m+2097152>>>0<4194305-!!c?(c>>>0)+4294967296*m:NaN,w>>>=0,c=new Date(1e3*c),o()[w>>2>>>0]=c.getUTCSeconds(),o()[w+4>>2>>>0]=c.getUTCMinutes(),o()[w+8>>2>>>0]=c.getUTCHours(),o()[w+12>>2>>>0]=c.getUTCDate(),o()[w+16>>2>>>0]=c.getUTCMonth(),o()[w+20>>2>>>0]=c.getUTCFullYear()-1900,o()[w+24>>2>>>0]=c.getUTCDay(),c=(c.getTime()-Date.UTC(c.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,o()[w+28>>2>>>0]=c},v:function(c,m,w){c=m+2097152>>>0<4194305-!!c?(c>>>0)+4294967296*m:NaN,w>>>=0,c=new Date(1e3*c),o()[w>>2>>>0]=c.getSeconds(),o()[w+4>>2>>>0]=c.getMinutes(),o()[w+8>>2>>>0]=c.getHours(),o()[w+12>>2>>>0]=c.getDate(),o()[w+16>>2>>>0]=c.getMonth(),o()[w+20>>2>>>0]=c.getFullYear()-1900,o()[w+24>>2>>>0]=c.getDay(),m=(kr(c.getFullYear())?Xr:to)[c.getMonth()]+c.getDate()-1|0,o()[w+28>>2>>>0]=m,o()[w+36>>2>>>0]=-(60*c.getTimezoneOffset()),m=new Date(c.getFullYear(),6,1).getTimezoneOffset();var I=new Date(c.getFullYear(),0,1).getTimezoneOffset();c=(m!=I&&c.getTimezoneOffset()==Math.min(I,m))|0,o()[w+32>>2>>>0]=c},w:function(c){c>>>=0;var m=new Date(o()[c+20>>2>>>0]+1900,o()[c+16>>2>>>0],o()[c+12>>2>>>0],o()[c+8>>2>>>0],o()[c+4>>2>>>0],o()[c>>2>>>0],0),w=o()[c+32>>2>>>0],I=m.getTimezoneOffset(),R=new Date(m.getFullYear(),6,1).getTimezoneOffset(),F=new Date(m.getFullYear(),0,1).getTimezoneOffset(),q=Math.min(F,R);return 0>w?o()[c+32>>2>>>0]=+(R!=F&&q==I):0<w!=(q==I)&&(R=Math.max(F,R),m.setTime(m.getTime()+6e4*((0<w?q:R)-I))),o()[c+24>>2>>>0]=m.getDay(),w=(kr(m.getFullYear())?Xr:to)[m.getMonth()]+m.getDate()-1|0,o()[c+28>>2>>>0]=w,o()[c>>2>>>0]=m.getSeconds(),o()[c+4>>2>>>0]=m.getMinutes(),o()[c+8>>2>>>0]=m.getHours(),o()[c+12>>2>>>0]=m.getDate(),o()[c+16>>2>>>0]=m.getMonth(),o()[c+20>>2>>>0]=m.getYear(),c=m.getTime()/1e3,Pu((_r=c,1<=+Math.abs(_r)?0<_r?+Math.floor(_r/4294967296)>>>0:~~+Math.ceil((_r-+(~~_r>>>0))/4294967296)>>>0:0)),c>>>0},s:h,t:v,A:function(c,m,w){function I(pe){return(pe=pe.toTimeString().match(/\(([A-Za-z ]+)\)$/))?pe[1]:"GMT"}c>>>=0,m>>>=0,w>>>=0;var R=new Date().getFullYear(),F=new Date(R,0,1),q=new Date(R,6,1);R=F.getTimezoneOffset();var ge=q.getTimezoneOffset(),fe=Math.max(R,ge);i()[c>>2>>>0]=60*fe,o()[m>>2>>>0]=+(R!=ge),c=I(F),m=I(q),c=S(c),m=S(m),ge<R?(i()[w>>2>>>0]=c,i()[w+4>>2>>>0]=m):(i()[w>>2>>>0]=m,i()[w+4>>2>>>0]=c)},e:()=>{Jt("")},c:function(c,m,w){return c>>>=0,m=M(m>>>0,w>>>0),gn[c].apply(null,m)},l:function(c,m,w){return c>>>=0,m=M(m>>>0,w>>>0),gn[c].apply(null,m)},o:function(){},k:function(){return Date.now()},W:()=>{throw Et+=1,"unwind"},C:function(){return 4294901760},d:()=>performance.timeOrigin+performance.now(),i:function(){return T?(Ih(),Ar(Sh)).cpus().length:navigator.hardwareConcurrency},M:function(c,m,w,I){for(he.Pb=m>>>0,xe.length=w,m=I>>>0>>3,I=0;I<w;I++)xe[I]=a()[m+I>>>0];return(0>c?gn[-c-1]:Ny[c]).apply(null,xe)},z:function(c){c>>>=0;var m=t().length;if(c<=m||4294901760<c)return!1;for(var w=1;4>=w;w*=2){var I=m*(1+.2/w);I=Math.min(I,c+100663296);var R=Math;I=Math.max(c,I);e:{R=R.min.call(R,4294901760,I+(65536-I%65536)%65536)-De.buffer.byteLength+65535>>>16;try{De.grow(R),Ie();var F=1;break e}catch{}F=void 0}if(F)return!0}return!1},Q:Ee,R:Me,J:Hn,h:L,m:ve,x:Be,j:ro,a:De||u.wasmMemory,I:Tu,f:function(c,m,w,I){return Tu(c>>>0,m>>>0,w>>>0,I>>>0)}};(function(){function c(w,I){return w=w.exports,w=Py(w),re=w=Vy(w),he.ob.push(re.Da),at.unshift(re.Y),Ce=I,Eo(),w}var m={a:Fy};if(Fn(),u.instantiateWasm)try{return u.instantiateWasm(m,c)}catch(w){J("Module.instantiateWasm callback failed with error: "+w),d(w)}return Co(m,function(w){c(w.instance,w.module)}).catch(d),{}})(),u._OrtInit=(c,m)=>(u._OrtInit=re.Z)(c,m),u._OrtGetLastError=(c,m)=>(u._OrtGetLastError=re._)(c,m),u._OrtCreateSessionOptions=(c,m,w,I,R,F,q,ge,fe,pe)=>(u._OrtCreateSessionOptions=re.$)(c,m,w,I,R,F,q,ge,fe,pe),u._OrtAppendExecutionProvider=(c,m)=>(u._OrtAppendExecutionProvider=re.aa)(c,m),u._OrtAddFreeDimensionOverride=(c,m,w)=>(u._OrtAddFreeDimensionOverride=re.ba)(c,m,w),u._OrtAddSessionConfigEntry=(c,m,w)=>(u._OrtAddSessionConfigEntry=re.ca)(c,m,w),u._OrtReleaseSessionOptions=c=>(u._OrtReleaseSessionOptions=re.da)(c),u._OrtCreateSession=(c,m,w)=>(u._OrtCreateSession=re.ea)(c,m,w),u._OrtReleaseSession=c=>(u._OrtReleaseSession=re.fa)(c),u._OrtGetInputOutputCount=(c,m,w)=>(u._OrtGetInputOutputCount=re.ga)(c,m,w),u._OrtGetInputName=(c,m)=>(u._OrtGetInputName=re.ha)(c,m),u._OrtGetOutputName=(c,m)=>(u._OrtGetOutputName=re.ia)(c,m),u._OrtFree=c=>(u._OrtFree=re.ja)(c),u._OrtCreateTensor=(c,m,w,I,R,F)=>(u._OrtCreateTensor=re.ka)(c,m,w,I,R,F),u._OrtGetTensorData=(c,m,w,I,R)=>(u._OrtGetTensorData=re.la)(c,m,w,I,R),u._OrtReleaseTensor=c=>(u._OrtReleaseTensor=re.ma)(c),u._OrtCreateRunOptions=(c,m,w,I)=>(u._OrtCreateRunOptions=re.na)(c,m,w,I),u._OrtAddRunConfigEntry=(c,m,w)=>(u._OrtAddRunConfigEntry=re.oa)(c,m,w),u._OrtReleaseRunOptions=c=>(u._OrtReleaseRunOptions=re.pa)(c),u._OrtCreateBinding=c=>(u._OrtCreateBinding=re.qa)(c),u._OrtBindInput=(c,m,w)=>(u._OrtBindInput=re.ra)(c,m,w),u._OrtBindOutput=(c,m,w,I)=>(u._OrtBindOutput=re.sa)(c,m,w,I),u._OrtClearBoundOutputs=c=>(u._OrtClearBoundOutputs=re.ta)(c),u._OrtReleaseBinding=c=>(u._OrtReleaseBinding=re.ua)(c),u._OrtRunWithBinding=(c,m,w,I,R)=>(u._OrtRunWithBinding=re.va)(c,m,w,I,R),u._OrtRun=(c,m,w,I,R,F,q,ge)=>(u._OrtRun=re.wa)(c,m,w,I,R,F,q,ge),u._OrtEndProfiling=c=>(u._OrtEndProfiling=re.xa)(c),u._JsepOutput=(c,m,w)=>(u._JsepOutput=re.ya)(c,m,w),u._JsepGetNodeName=c=>(u._JsepGetNodeName=re.za)(c);var Uo=u._pthread_self=()=>(Uo=u._pthread_self=re.Aa)(),xa=u._malloc=c=>(xa=u._malloc=re.Ba)(c),Au=u._free=c=>(Au=u._free=re.Ca)(c);u.__emscripten_tls_init=()=>(u.__emscripten_tls_init=re.Da)();var Ou=u.__emscripten_thread_init=(c,m,w,I,R,F)=>(Ou=u.__emscripten_thread_init=re.Fa)(c,m,w,I,R,F);u.__emscripten_thread_crashed=()=>(u.__emscripten_thread_crashed=re.Ga)();var Eu=(c,m,w,I)=>(Eu=re.Ha)(c,m,w,I),$a=c=>($a=re.Ia)(c),Ta=u.__emscripten_thread_exit=c=>(Ta=u.__emscripten_thread_exit=re.Ja)(c),Cu=u.__emscripten_check_mailbox=()=>(Cu=u.__emscripten_check_mailbox=re.Ka)(),Pu=c=>(Pu=re.La)(c),ku=(c,m)=>(ku=re.Ma)(c,m),_a=()=>(_a=re.Na)(),Wo=c=>(Wo=re.Oa)(c),Sa=c=>(Sa=re.Pa)(c),Du=u.dynCall_ii=(c,m)=>(Du=u.dynCall_ii=re.Ra)(c,m),Bu=c=>(Bu=re.Sa)(c),Ru=()=>(Ru=re.Ta)(),Mu=c=>(Mu=re.Ua)(c),Lu=()=>(Lu=re.Va)();u.___start_em_js=1455946,u.___stop_em_js=1456107;function Vy(c){c=Object.assign({},c);var m=I=>()=>I()>>>0,w=I=>R=>I(R)>>>0;return c.__errno_location=m(c.__errno_location),c.pthread_self=m(c.pthread_self),c.malloc=w(c.malloc),c.stackSave=m(c.stackSave),c.stackAlloc=w(c.stackAlloc),c}u.keepRuntimeAlive=ar,u.wasmMemory=De,u.stackAlloc=Sa,u.stackSave=_a,u.stackRestore=Wo,u.UTF8ToString=_t,u.stringToUTF8=Mo,u.lengthBytesUTF8=jr,u.ExitStatus=Pr,u.PThread=he;var Ho;Hr=function c(){Ho||zu(),Ho||(Hr=c)};function zu(){function c(){if(!Ho&&(Ho=!0,u.calledRun=!0,!Ne)&&(x||Sr(at),l(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),!x)){if(u.postRun)for(typeof u.postRun=="function"&&(u.postRun=[u.postRun]);u.postRun.length;){var m=u.postRun.shift();vt.unshift(m)}Sr(vt)}}if(!(0<Nt))if(x)l(u),x||Sr(at),startWorker(u);else{if(u.preRun)for(typeof u.preRun=="function"&&(u.preRun=[u.preRun]);u.preRun.length;)Bt.unshift(u.preRun.shift());Sr(Bt),0<Nt||(u.setStatus?(u.setStatus("Running..."),setTimeout(function(){setTimeout(function(){u.setStatus("")},1),c()},1)):c())}}if(u.preInit)for(typeof u.preInit=="function"&&(u.preInit=[u.preInit]);0<u.preInit.length;)u.preInit.pop()();return zu(),e.ready}})();typeof Oh=="object"&&typeof Vs=="object"?Vs.exports=Ah:typeof define=="function"&&define.amd&&define([],()=>Ah)});var Ch=Xe((tP,$x)=>{$x.exports='"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>(0,eval)(fs.readFileSync(e,"utf8")+"//# sourceURL="+e),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason??e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err("worker.js received unknown command "+e.data.cmd),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed&&Module.__emscripten_thread_crashed(),a}}self.onmessage=handleMessage;\n'});var kh,Tx,Gs,Us,Wi,Ph,_x,Sx,Ix,Dh,st,Rn=B(()=>{"use strict";kh=$h();Tx=Eh(),Us=!1,Wi=!1,Ph=!1,_x=()=>{try{return typeof SharedArrayBuffer>"u"?!1:(typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch{return!1}},Sx=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Ix=(r,e)=>r?e?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":e?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Dh=async r=>{if(Us)return Promise.resolve();if(Wi)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Ph)throw new Error("previous call to 'initializeWebAssembly()' failed.");Wi=!0;let e=r.initTimeout,n=r.numThreads,t=r.simd,o=n>1&&_x(),i=t&&Sx(),s=r.wasmPaths,a=typeof s=="string"?s:void 0,u=Ix(i,o),l=typeof s=="object"?s[u]:void 0,d=!1,f=[];if(e>0&&f.push(new Promise(p=>{setTimeout(()=>{d=!0,p()},e)})),f.push(new Promise((p,g)=>{let b=o?Tx:kh,y={locateFile:(T,x)=>{if(o&&T.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([Ch()],{type:"text/javascript"}));if(T.endsWith(".wasm")){if(l)return l;let _=a??x;return u==="ort-wasm-simd.wasm"?_+"ort-wasm-simd.jsep.wasm":u==="ort-wasm-simd-threaded.wasm"?_+"ort-wasm-simd-threaded.jsep.wasm":_+u}return x+T}};if(o)if(y.numThreads=n,typeof Blob>"u")y.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let T=`var ortWasmThreaded=${b.toString()};`;y.mainScriptUrlOrBlob=new Blob([T],{type:"text/javascript"})}b(y).then(T=>{Wi=!1,Us=!0,Gs=T,p()},T=>{Wi=!1,Ph=!0,g(T)})})),await Promise.race(f),d)throw new Error(`WebAssembly backend initializing failed due to timeout: ${e}ms`)},st=()=>{if(Us&&Gs)return Gs;throw new Error("WebAssembly is not initialized yet.")}});var pt,wo,Qe,Hi=B(()=>{"use strict";Rn();pt=(r,e)=>{let n=st(),t=n.lengthBytesUTF8(r)+1,o=n._malloc(t);return n.stringToUTF8(r,o,t),e.push(o),o},wo=(r,e,n,t)=>{if(typeof r=="object"&&r!==null){if(n.has(r))throw new Error("Circular reference in options");n.add(r)}Object.entries(r).forEach(([o,i])=>{let s=e?e+o:o;if(typeof i=="object")wo(i,s+".",n,t);else if(typeof i=="string"||typeof i=="number")t(s,i.toString());else if(typeof i=="boolean")t(s,i?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof i}`)})},Qe=r=>{let e=st(),n=e.stackSave();try{let t=e.stackAlloc(8);e._OrtGetLastError(t,t+4);let o=e.HEAP32[t/4],i=e.HEAPU32[t/4+1],s=i?e.UTF8ToString(i):"";throw new Error(`${r} ERROR_CODE: ${o}, ERROR_MESSAGE: ${s}`)}finally{e.stackRestore(n)}}});var Bh,Rh=B(()=>{"use strict";Rn();Hi();Bh=r=>{let e=st(),n=0,t=[],o=r||{};try{if(r?.logSeverityLevel===void 0)o.logSeverityLevel=2;else if(typeof r.logSeverityLevel!="number"||!Number.isInteger(r.logSeverityLevel)||r.logSeverityLevel<0||r.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${r.logSeverityLevel}`);if(r?.logVerbosityLevel===void 0)o.logVerbosityLevel=0;else if(typeof r.logVerbosityLevel!="number"||!Number.isInteger(r.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${r.logVerbosityLevel}`);r?.terminate===void 0&&(o.terminate=!1);let i=0;return r?.tag!==void 0&&(i=pt(r.tag,t)),n=e._OrtCreateRunOptions(o.logSeverityLevel,o.logVerbosityLevel,!!o.terminate,i),n===0&&Qe("Can't create run options."),r?.extra!==void 0&&wo(r.extra,"",new WeakSet,(s,a)=>{let u=pt(s,t),l=pt(a,t);e._OrtAddRunConfigEntry(n,u,l)!==0&&Qe(`Can't set a run config entry: ${s} - ${a}.`)}),[n,t]}catch(i){throw n!==0&&e._OrtReleaseRunOptions(n),t.forEach(s=>e._free(s)),i}}});var Ax,Ox,Ex,Cx,Mh,Lh=B(()=>{"use strict";Rn();Hi();Ax=r=>{switch(r){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${r}`)}},Ox=r=>{switch(r){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${r}`)}},Ex=r=>{r.extra||(r.extra={}),r.extra.session||(r.extra.session={});let e=r.extra.session;e.use_ort_model_bytes_directly||(e.use_ort_model_bytes_directly="1"),r.executionProviders&&r.executionProviders.some(n=>(typeof n=="string"?n:n.name)==="webgpu")&&(r.enableMemPattern=!1)},Cx=(r,e,n)=>{for(let t of e){let o=typeof t=="string"?t:t.name;switch(o){case"xnnpack":o="XNNPACK";break;case"webnn":if(o="WEBNN",typeof t!="string"){let s=t;if(s?.deviceType){let a=pt("deviceType",n),u=pt(s.deviceType,n);st()._OrtAddSessionConfigEntry(r,a,u)!==0&&Qe(`Can't set a session config entry: 'deviceType' - ${s.deviceType}.`)}if(s?.numThreads){let a=s.numThreads;(typeof a!="number"||!Number.isInteger(a)||a<0)&&(a=0);let u=pt("numThreads",n),l=pt(a.toString(),n);st()._OrtAddSessionConfigEntry(r,u,l)!==0&&Qe(`Can't set a session config entry: 'numThreads' - ${s.numThreads}.`)}if(s?.powerPreference){let a=pt("powerPreference",n),u=pt(s.powerPreference,n);st()._OrtAddSessionConfigEntry(r,a,u)!==0&&Qe(`Can't set a session config entry: 'powerPreference' - ${s.powerPreference}.`)}}break;case"webgpu":if(o="JS",typeof t!="string"){let s=t;if(s?.preferredLayout){if(s.preferredLayout!=="NCHW"&&s.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${s.preferredLayout}`);let a=pt("preferredLayout",n),u=pt(s.preferredLayout,n);st()._OrtAddSessionConfigEntry(r,a,u)!==0&&Qe(`Can't set a session config entry: 'preferredLayout' - ${s.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${o}`)}let i=pt(o,n);st()._OrtAppendExecutionProvider(r,i)!==0&&Qe(`Can't append execution provider: ${o}.`)}},Mh=r=>{let e=st(),n=0,t=[],o=r||{};Ex(o);try{let i=Ax(o.graphOptimizationLevel??"all"),s=Ox(o.executionMode??"sequential"),a=typeof o.logId=="string"?pt(o.logId,t):0,u=o.logSeverityLevel??2;if(!Number.isInteger(u)||u<0||u>4)throw new Error(`log serverity level is not valid: ${u}`);let l=o.logVerbosityLevel??0;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log verbosity level is not valid: ${l}`);let d=typeof o.optimizedModelFilePath=="string"?pt(o.optimizedModelFilePath,t):0;if(n=e._OrtCreateSessionOptions(i,!!o.enableCpuMemArena,!!o.enableMemPattern,s,!!o.enableProfiling,0,a,u,l,d),n===0&&Qe("Can't create session options."),o.executionProviders&&Cx(n,o.executionProviders,t),o.freeDimensionOverrides)for(let[f,p]of Object.entries(o.freeDimensionOverrides)){if(typeof f!="string")throw new Error(`free dimension override name must be a string: ${f}`);if(typeof p!="number"||!Number.isInteger(p)||p<0)throw new Error(`free dimension override value must be a non-negative integer: ${p}`);let g=pt(f,t);e._OrtAddFreeDimensionOverride(n,g,p)!==0&&Qe(`Can't set a free dimension override: ${f} - ${p}.`)}return o.extra!==void 0&&wo(o.extra,"",new WeakSet,(f,p)=>{let g=pt(f,t),b=pt(p,t);e._OrtAddSessionConfigEntry(n,g,b)!==0&&Qe(`Can't set a session config entry: ${f} - ${p}.`)}),[n,t]}catch(i){throw n!==0&&e._OrtReleaseSessionOptions(n),t.forEach(s=>e._free(s)),i}}});var Ws,fn,xo,qi,$o,ji,Hs,ut=B(()=>{"use strict";Ws=r=>{switch(r){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${r}`)}},fn=r=>{switch(r){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${r}`)}},xo=r=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][r],qi=r=>{switch(r){case"float16":return Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${r}`)}},$o=r=>{switch(r){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${r}`)}},ji=r=>r==="float32"||r==="int32"||r==="int64"||r==="bool"||r==="float16"||r==="uint32",Hs=r=>{switch(r){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${r}`)}}});var Px,kx,zh,Nh,Fh,Dx,nt,Vr=B(()=>{"use strict";ut();Px=["V","I","W","E","F"],kx=(r,e)=>{console.log(`[${Px[r]},${new Date().toISOString()}]${e}`)},Fh=(r,e)=>{zh=r,Nh=e},Dx=(r,e)=>{let n=$o(r),t=$o(zh);n>=t&&kx(n,typeof e=="function"?e():e)},nt=(...r)=>{Nh&&Dx(...r)}});var Vh,Gh=B(()=>{"use strict";ut();Vh=(r,e)=>new(qi(e))(r)});var Ki=B(()=>{"use strict"});var Xi,Bx,Uh,js,qs,Hh,qh=B(()=>{"use strict";Vr();Ki();Xi=r=>Math.ceil(r/16)*16,Bx=1,Uh=()=>Bx++,js=async(r,e,n,t)=>{let o=Xi(n),i=r.device.createBuffer({size:o,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let s=r.getCommandEncoder();r.endComputePass(),s.copyBufferToBuffer(e,0,i,0,o),r.flush(),await i.mapAsync(GPUMapMode.READ);let a=i.getMappedRange();if(t){let u=t();return u.set(new Uint8Array(a,0,n)),u}else return new Uint8Array(a.slice(0,n))}finally{i.destroy()}},qs=class{constructor(e){this.backend=e;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map}upload(e,n){let t=n.buffer,o=n.byteOffset,i=n.byteLength,s=Xi(i),a=this.storageCache.get(e);if(!a)throw new Error("gpu data for uploading does not exist");if(a.originalSize!==i)throw new Error(`inconsistent data size. gpu data size=${a.originalSize}, data size=${i}`);let u=this.backend.device.createBuffer({mappedAtCreation:!0,size:s,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),l=u.getMappedRange();new Uint8Array(l).set(new Uint8Array(t,o,i)),u.unmap();let d=this.backend.getCommandEncoder();this.backend.endComputePass(),d.copyBufferToBuffer(u,0,a.gpuData.buffer,0,s),nt("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`),this.buffersForUploadingPending.push(u)}memcpy(e,n){let t=this.storageCache.get(e);if(!t)throw new Error("source gpu data for memcpy does not exist");let o=this.storageCache.get(n);if(!o)throw new Error("destination gpu data for memcpy does not exist");if(t.originalSize!==o.originalSize)throw new Error("inconsistent source and destination gpu data size");let i=Xi(t.originalSize),s=this.backend.getCommandEncoder();this.backend.endComputePass(),s.copyBufferToBuffer(t.gpuData.buffer,0,o.gpuData.buffer,0,i)}registerExternalBuffer(e,n,t){let o;if(t){if(o=this.externalBuffers.get(t),o===void 0)throw new Error("previous buffer is not registered");if(e===t)return nt("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${n}) => id=${o}, buffer is the same, skip.`),o;this.externalBuffers.delete(t)}else o=Uh();return this.storageCache.set(o,{gpuData:{id:o,type:0,buffer:e},originalSize:n}),this.externalBuffers.set(e,o),nt("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${n}) => id=${o}, registered.`),o}unregisterExternalBuffer(e){let n=this.externalBuffers.get(e);n!==void 0&&(this.storageCache.delete(n),this.externalBuffers.delete(e),nt("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${n}`))}create(e,n=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let t=Xi(e),o,i=(n&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,s=(n&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(i||s){let u=i?this.freeBuffers:this.freeUniformBuffers,l=u.get(t);l||(l=[],u.set(t,l)),l.length>0?o=l.pop():o=this.backend.device.createBuffer({size:t,usage:n})}else o=this.backend.device.createBuffer({size:t,usage:n});let a={id:Uh(),type:0,buffer:o};return this.storageCache.set(a.id,{gpuData:a,originalSize:e}),nt("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${a.id}`),a}get(e){return this.storageCache.get(e)?.gpuData}release(e){let n=this.storageCache.get(e);if(!n)throw new Error("releasing data does not exist");return nt("verbose",()=>`[WebGPU] GpuDataManager.release(id=${e}), gpuDataId=${n.gpuData.id}`),this.storageCache.delete(e),this.buffersPending.push(n.gpuData.buffer),n.originalSize}async download(e,n){let t=this.storageCache.get(e);if(!t)throw new Error("data does not exist");await js(this.backend,t.gpuData.buffer,t.originalSize,n)}refreshPendingBuffers(){for(let e of this.buffersForUploadingPending)e.destroy();this.buffersForUploadingPending=[];for(let e of this.buffersPending)(e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(e.size).push(e):(e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(e.size).push(e):e.destroy();this.buffersPending=[]}dispose(){this.freeBuffers.forEach(e=>{e.forEach(n=>{n.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(n=>{n.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map}},Hh=(...r)=>new qs(...r)});var Ks,be,ot=B(()=>{"use strict";Ks=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},be=r=>new Ks(r)});var Xs,gr,V,pn,Yi,Zi,Ji,Re=B(()=>{"use strict";Xs=class{static calcMatMulShape(e,n){return e[1]!==n[0]?void 0:[e[0],n[1]]}},gr=class{static calcShape(e,n,t=!1){let o=e.length,i=n.length;if(o===0)return n;if(i===0)return e;let s=Math.max(e.length,n.length),a=new Array(s);if(t){if(o<2||i<2)return;let u=Xs.calcMatMulShape([e[o-2],e[o-1]],[n[i-2],n[i-1]]);if(u===void 0)return;[a[s-2],a[s-1]]=u}for(let u=t?3:1;u<=s;u++){let l=o-u<0?1:e[o-u],d=i-u<0?1:n[i-u];if(l!==d&&l>1&&d>1)return;a[s-u]=Math.max(l,d)}return a}static isValidBroadcast(e,n){let t=e.length,o=n.length;if(t>o)return!1;for(let i=1;i<=t;i++)if(e[t-i]!==1&&e[t-i]!==n[o-i])return!1;return!0}},V=class r{static size(e){return r.getSizeFromDimensionRange(e,0,e.length)}static sizeFromDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,n,e.length)}static sizeToDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeToDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,0,n)}static getSizeFromDimensionRange(e,n,t){let o=1;for(let i=n;i<t;i++){if(e[i]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");o*=e[i]}return o}static computeStrides(e){let n=e.length;if(n===0)return[];if(n===1)return[1];let t=new Array(n);t[n-1]=1,t[n-2]=e[n-1];for(let o=n-3;o>=0;--o)t[o]=t[o+1]*e[o+1];return t}static normalizeAxis(e,n){if(e<-n&&e>=n)throw new Error("unsupported axis for this operation.");return e<0?e+n:e}static normalizeAxes(e,n){return e.map(t=>this.normalizeAxis(t,n??e.length))}static sortBasedOnPerm(e,n){return n?n.map(t=>e[t]):e.slice().reverse()}static padShape(e,n){let t=e.length;return e.map((o,i)=>o+n[i]+n[i+t])}static areEqual(e,n){return e.length!==n.length?!1:e.every((t,o)=>t===n[o])}},pn=class r{static adjustPoolAttributes(e,n,t,o,i,s){if(!e&&t.length!==n.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let a=0;a<n.length-2;a++)a>=t.length?t.push(n[a+2]):t[a]=n[a+2];for(let a=0;a<t.length;a++)if(a<o.length){if(o[a]<0)throw new Error("strides should be greater than or equal to 1")}else o.push(1);for(let a=0;a<t.length;a++)if(a<i.length){if(i[a]<0)throw new Error("dilations should be greater than or equal to 1")}else i.push(1);for(let a=0;a<t.length*2;a++)if(a<s.length){if(s[a]<0)throw new Error("pad should be greater than or equal to 1")}else s.push(0);for(let a=0;a<t.length;a++){if(t[a]<=0)throw new Error("kernel shapes need to be greater than 0");if(s[a]>=t[a]||s[a+t.length]>=t[a])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(e,n,t,o,i,s,a){if(a){if(i.length!==2*(e.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(n.length!==e.length-2)throw new Error("length of strides should be the length of data dimensions");if(o.length!==e.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let u=0;u<e.length-2;u++)r.adjustPadAndReturnShape(e[u+(s?1:2)],n[u],t[u],o[u],i,u,u+e.length-2,a)}}static computePoolOutputShape(e,n,t,o,i,s,a){if(n.length<=0)throw new Error("input shape must be of size greater than 0");let u=[n[0],n[1]];return r.computeShapeHelper(e,n,u,t,o,i,s,a),u}static computeConvOutputShape(e,n,t,o,i,s,a){if(e.length<=0||n.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let u=[e[0],n[0]];return r.computeShapeHelper(!1,e,u,t,o,i,s,a),u}static computeShapeHelper(e,n,t,o,i,s,a,u){if(e)for(let l=0;l<n.length-2;l++)t.push(1);else for(let l=0;l<n.length-2;l++)t.push(r.adjustPadAndReturnShape(n[l+2],o[l],i[l],s[l],a,l,l+n.length-2,u))}static adjustPadAndReturnShape(e,n,t,o,i,s,a,u){let l=t*(o-1)+1;if(u&&u!=="NOTSET")switch(u){case"VALID":return i[s]=0,i[a]=0,Math.floor((e-l)/n+1);case"SAME_LOWER":case"SAME_UPPER":if(t!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let f=((e+n-1)/n-1)*n+o-e;return i[s]=Math.floor(u==="SAME_LOWER"?(f+1)/2:f/2),i[a]=f-i[s],Math.floor((e+f-o)/n+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((e+i[s]+i[a]-l)/n+1)}},Yi=class{static getShapeOfGemmResult(e,n,t,o,i){if(e.length!==2||t.length!==2)throw new Error("shape need to be of size 2");let s,a,u;n?(s=e[1],a=e[0]):(s=e[0],a=e[1]);let l=-1;if(o?(u=t[0],l=1):(u=t[1],l=0),t[l]!==a)throw new Error("dimension mismatch");if(s<=0||u<=0||a<=0)throw new Error("invalid shape specified");if(i&&!gr.isValidBroadcast(i,[s,u]))throw new Error("gemm: invalid bias shape for broadcast");return[s,u,a]}},Zi=-34028234663852886e22,Ji=34028234663852886e22});var Rx,Zs,et,Gr,ee,bt,Ot,or,zt,qe,Js,W,te,Qi,Ys,jh,Mn,tt,ke=B(()=>{"use strict";ut();Re();Rx=64,Zs=(r,e)=>{if(e===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(r){case 10:return e>1?`vec${e}<f16>`:"f16";case 1:return e>1?`vec${e}<f32>`:"f32";case 6:return e>1?`vec${e}<i32>`:"i32";case 12:return e>1?`vec${e}<u32>`:"u32";case 7:if(e>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(e>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(e!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${r}`)}},et=(r,e=1)=>{let n=Zs(r,e);return typeof n=="string"?n:n[0]},Gr=(r,e=1)=>{let n=Zs(r,e);return typeof n=="string"?n:n[1]},ee=r=>r.length===0?[]:[{type:"uint32",data:r},{type:"uint32",data:V.computeStrides(r)}],bt=r=>r%4===0?4:r%2===0?2:1,Ot=(r="f32",e,n="0")=>!e||e===1?`${r}(${n})`:`vec${e}<${r}>(${n})`,or=(r,e,n)=>r==="f32"?n:e===1?`f32(${n})`:`vec${e}f(${n})`,zt=(r,e)=>e===4?`(${r}.x + ${r}.y + ${r}.z + ${r}.w)`:e===2?`(${r}.x + ${r}.y)`:e===3?`(${r}.x + ${r}.y + ${r}.z)`:r,qe=(r,e,n)=>r.startsWith("uniforms.")&&n>4?typeof e=="string"?`${r}[(${e}) / 4][(${e}) % 4]`:`${r}[${Math.floor(e/4)}][${e%4}]`:n>1?`${r}[${e}]`:r,Js=(r,e,n,t,o)=>{let i=typeof n=="number",s=i?n:n.length,a=[...new Array(s).keys()],u=s<2?"u32":s<=4?`vec${s}<u32>`:`array<u32, ${s}>`,l=Zs(e,o),d=typeof l=="string"?l:l[1],f=typeof l=="string"?l:l[0],p={indices:u,value:d,storage:f,tensor:e},g=X=>typeof X=="string"?X:`${X}u`,b={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},y=i?"uniforms.":"",T=`${y}${r}_shape`,x=`${y}${r}_strides`,_="";for(let X=0;X<s-1;X++)_+=`
    let dim${X} = current / ${qe(x,X,s)};
    let rest${X} = current % ${qe(x,X,s)};
    indices[${X}] = dim${X};
    current = rest${X};
    `;_+=`indices[${s-1}] = current;`;let O=s<2?"":`
  fn o2i_${r}(offset: u32) -> ${p.indices} {
    var indices: ${p.indices};
    var current = offset;
    ${_}
    return indices;
  }`,C=X=>(b.offsetToIndices=!0,s<2?X:`o2i_${r}(${X})`),N=[];if(s>=2)for(let X=s-1;X>=0;X--)N.push(`${qe(x,X,s)} * (indices[${X}])`);let k=s<2?"":`
  fn i2o_${r}(indices: ${p.indices}) -> u32 {
    return ${N.join("+")};
  }`,U=X=>(b.indicesToOffset=!0,s<2?X:`i2o_${r}(${X})`),G=(...X)=>s===0?"0u":`${p.indices}(${X.map(g).join(",")})`,H=(X,ie)=>s<2?`${X}`:`${qe(X,ie,s)}`,ne=(X,ie,Ie)=>s<2?`${X}=${Ie};`:`${qe(X,ie,s)}=${Ie};`,P={},J=(X,ie)=>{b.broadcastedIndicesToOffset=!0;let Ie=`${ie.name}broadcastedIndicesTo${r}Offset`;if(Ie in P)return`${Ie}(${X})`;let Tt=[];for(let Bt=s-1;Bt>=0;Bt--){let at=ie.indicesGet("outputIndices",Bt+ie.rank-s);Tt.push(`${H(x,Bt)} * (${at} % ${H(T,Bt)})`)}return P[Ie]=`fn ${Ie}(outputIndices: ${ie.type.indices}) -> u32 {
             return ${Tt.length>0?Tt.join("+"):"0u"};
           }`,`${Ie}(${X})`},Te=(X,ie)=>(()=>{if(p.storage===p.value)return`${r}[${X}]=${ie};`;if(p.storage==="vec2<u32>"&&p.value==="i32")return`${r}[${X}]=vec2<u32>(u32(${ie}), select(0u, 0xFFFFFFFFu, ${ie} < 0));`;if(p.storage==="vec2<u32>"&&p.value==="u32")return`${r}[${X}]=vec2<u32>(u32(${ie}), 0u);`;if(p.storage==="u32"&&p.value==="vec4<bool>")return`${r}[${X}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${ie}));`;throw new Error(`not supported combination of storage type ${p.storage} and value type ${p.value} yet`)})(),se=X=>(()=>{if(p.storage===p.value)return`${r}[${X}]`;if(p.storage==="vec2<u32>"&&p.value==="i32")return`i32(${r}[${X}].x)`;if(p.storage==="vec2<u32>"&&p.value==="u32")return`u32(${r}[${X}].x)`;if(p.storage==="u32"&&p.value==="vec4<bool>")return`vec4<bool>(bool(${r}[${X}] & 0xFFu), bool(${r}[${X}] & 0xFF00u), bool(${r}[${X}] & 0xFF0000u), bool(${r}[${X}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${p.storage} and value type ${p.value} yet`)})(),De=s<2?"":`
  fn get_${r}ByIndices(indices: ${p.indices}) -> ${d} {
    return ${se(`i2o_${r}(indices)`)};
  }`,re=s<2?"":(()=>{let X=a.map(Ie=>`d${Ie}: u32`).join(", "),ie=a.map(Ie=>`d${Ie}`).join(", ");return`
  fn get_${r}(${X}) -> ${d} {
    return get_${r}ByIndices(${G(ie)});
  }`})(),Ce=(...X)=>{if(X.length!==s)throw new Error(`indices length must be ${s}`);let ie=X.map(g).join(",");return s===0?se("0u"):s===1?se(ie[0]):(b.get=!0,b.getByIndices=!0,b.indicesToOffset=!0,`get_${r}(${ie})`)},Ne=X=>s<2?se(X):(b.getByIndices=!0,b.indicesToOffset=!0,`get_${r}ByIndices(${X})`),Se=s<2?"":`
  fn set_${r}ByIndices(indices: ${p.indices}, value: ${d}) {
    ${Te(`i2o_${r}(indices)`,"value")}
  }`,$e=s<2?"":(()=>{let X=a.map(Ie=>`d${Ie}: u32`).join(", "),ie=a.map(Ie=>`d${Ie}`).join(", ");return`
  fn set_${r}(${X}, value: ${d}) {
    set_${r}ByIndices(${G(ie)}, value);
  }`})();return{impl:()=>{let X=[],ie=!1;return b.offsetToIndices&&(X.push(O),ie=!0),b.indicesToOffset&&(X.push(k),ie=!0),b.broadcastedIndicesToOffset&&(Object.values(P).forEach(Ie=>X.push(Ie)),ie=!0),b.set&&(X.push($e),ie=!0),b.setByIndices&&(X.push(Se),ie=!0),b.get&&(X.push(re),ie=!0),b.getByIndices&&(X.push(De),ie=!0),!i&&ie&&X.unshift(`const ${T} = ${p.indices}(${n.join(",")});`,`const ${x} = ${p.indices}(${V.computeStrides(n).join(",")});`),X.join(`
`)},type:p,offsetToIndices:C,indicesToOffset:U,broadcastedIndicesToOffset:J,indices:G,indicesGet:H,indicesSet:ne,set:(...X)=>{if(X.length!==s+1)throw new Error(`indices length must be ${s}`);let ie=X[s];if(typeof ie!="string")throw new Error("value must be string");let Ie=X.slice(0,s).map(g).join(",");return s===0?Te("0u",ie):s===1?Te(Ie[0],ie):(b.set=!0,b.setByIndices=!0,b.indicesToOffset=!0,`set_${r}(${Ie}, ${ie})`)},setByOffset:Te,setByIndices:(X,ie)=>s<2?Te(X,ie):(b.setByIndices=!0,b.indicesToOffset=!0,`set_${r}ByIndices(${X}, ${ie});`),get:Ce,getByOffset:se,getByIndices:Ne,usage:t,name:r,strides:x,shape:T,rank:s}},W=(r,e,n,t=1)=>Js(r,e,n,"input",t),te=(r,e,n,t=1)=>Js(r,e,n,"output",t),Qi=(r,e,n,t=1)=>Js(r,e,n,"internal",t),Ys=class{constructor(e){this.normalizedDispatchGroup=e;this.internalVariables=[];this.variables=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e=="number"?`${e}u`:e}) { return; }`}mainStart(e=Rx){let n=typeof e=="number"?e:e[0],t=typeof e=="number"?1:e[1],o=typeof e=="number"?1:e[2],i=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,s=i?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,a=i?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${n*t*o}u + local_idx;`;return`@compute @workgroup_size(${n}, ${t}, ${o})
  fn main(${s}) {
    ${a}
  `}appendVariableUniforms(e){e.rank!==0&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,n){if(e.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let t=e.usage==="input"?"read":"read_write",o=e.type.storage;return`@group(0) @binding(${n}) var<storage, ${t}> ${e.name}: array<${o}>;`}declareVariables(...e){return e.map(n=>this.declareVariable(n,this.variableIndex++)).join(`
`)}registerInternalVariable(e){if(e.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach(n=>this.registerInternalVariable(n)),this}registerUniform(e,n,t=1){return this.uniforms.push({name:e,type:n,length:t}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let e=[];for(let{name:n,type:t,length:o}of this.uniforms)if(o&&o>4)e.push(`${n}:array<vec4<${t}>, ${Math.ceil(o/4)}>`);else{let i=o==null||o===1?t:`vec${o}<${t}>`;e.push(`${n}:${i}`)}return`
      struct Uniforms { ${e.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(e=>e.impl()).join(`
`)+this.internalVariables.map(e=>e.impl()).join(`
`)}},jh=r=>new Ys(r),Mn=(r,e)=>{let n=r.length,t=[];for(let o=0;o<n;o++){let i=n-1-o,s=r[i]||1;(e[e.length-1-o]||1)>1&&s===1&&t.unshift(i)}return t},tt=r=>!0});var Mx,Kh,Lx,zx,ir,Xh,Yh,Ln=B(()=>{"use strict";Re();ot();ke();Mx=r=>{if(!r||r.length!==1)throw new Error("Transpose requires 1 input.")},Kh=(r,e)=>e&&e.length!==r?[...new Array(r).keys()].reverse():e,Lx=(r,e)=>V.sortBasedOnPerm(r,Kh(r.length,e)),zx=(r,e,n,t)=>{let o=[];o.push(`fn perm(i: ${t.type.indices}) -> ${n.type.indices} {
    var a: ${n.type.indices};`);for(let i=0;i<e;++i)o.push(n.indicesSet("a",r[i],`i[${i}]`));return o.push("return a;}"),o.join(`
`)},ir=(r,e)=>{let n=r.dataType,t=r.dims.length,o=Kh(t,e),i=tt(t),s=Lx(r.dims,o),a=i?s.length:s,u=i?t:r.dims,l=te("output",n,a),d=W("a",n,u),f=p=>`
  ${p.registerUniform("output_size","u32").declareVariables(d,l)}

  ${zx(o,t,d,l)}

  ${p.mainStart()}
    ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${l.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${l.setByOffset("global_idx",d.getByIndices("aIndices"))}
  }`;return{name:"Transpose",shaderCache:{hint:`${e}`,inputDependencies:i?["rank"]:["dims"]},getRunData:p=>{let g=V.size(s);return{outputs:[{dims:s,dataType:p[0].dataType}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:i?[{type:"uint32",data:g},...ee(p[0].dims),...ee(s)]:[{type:"uint32",data:g}]}},getShaderSource:f}},Xh=(r,e)=>{Mx(r.inputs),r.compute(ir(r.inputs[0],e.perm))},Yh=r=>be({perm:r.perm})});var Nx,Fx,Vx,Gx,Ux,Wx,Hx,qx,jx,Kx,br,Zh,Jh,Qh,em,tm,rm,nm,om,im,am,sm=B(()=>{"use strict";Re();ke();ea();Ln();Nx={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},Fx={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},Vx={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},Gx={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},Ux=(r,e)=>{let n=[];for(let t=e-r;t<e;++t)n.push(t);return n},Wx=(r,e)=>{let n=[],t=r.length;for(let i=0;i<t;i++)e.indexOf(i)===-1&&n.push(r[i]);let o=e.map(i=>r[i]);return[n,o]},Hx=(r,e)=>{let n=r.length+e.length,t=[],o=0;for(let i=0;i<n;i++)e.indexOf(i)===-1?t.push(r[o++]):t.push(1);return t},qx=(r,e)=>{for(let n=0;n<r.length;++n)if(r[r.length-n-1]!==e-1-n)return!1;return!0},jx=(r,e)=>{let n=[];if(!qx(r,e)){for(let t=0;t<e;++t)r.indexOf(t)===-1&&n.push(t);r.forEach(t=>n.push(t))}return n},Kx=(r,e,n,t,o,i,s)=>{let a=n[0].dims,u=V.size(i),l=V.size(s),d=W("_A",n[0].dataType,a),f=te("output",o,i),p=32,g=`
          var<workgroup> aBestValues : array<${f.type.storage}, ${p}>;
       `;return{name:r,shaderCache:e,getShaderSource:y=>`
        ${y.registerUniform("reduceSize","u32").declareVariables(d,f)}
        ${g}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${y.mainStart(p)}

          let outputIndex = global_idx / ${p};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = ${f.type.storage}(${Vx[t]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${p}) {
           let candidate = ${f.type.storage}(${d.getByOffset("offset + k")});
           bestValue = ${Nx[t]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${p}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${Fx[t]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${f.setByOffset("outputIndex",`${t==="mean"?`bestValue / ${f.type.storage}(uniforms.reduceSize)`:`${Gx[t]}`}`)};
         }
        }`,getRunData:()=>({outputs:[{dims:i,dataType:o}],dispatchGroup:{x:u},programUniforms:[{type:"uint32",data:l}]})}},br=(r,e,n,t)=>{let o=r.inputs.length===1?n:Qs(r.inputs,n),i=o.axes;i.length===0&&!o.noopWithEmptyAxes&&(i=r.inputs[0].dims.map((g,b)=>b));let s=V.normalizeAxes(i,r.inputs[0].dims.length),a=s,u=r.inputs[0],l=jx(a,r.inputs[0].dims.length);l.length>0&&(u=r.compute(ir(r.inputs[0],l),{inputs:[0],outputs:[-1]})[0],a=Ux(a.length,u.dims.length));let[d,f]=Wx(u.dims,a),p=d;o.keepDims&&(p=Hx(d,s)),r.compute(Kx(e,{hint:o.cacheKey,inputDependencies:["type"]},[u],t,r.inputs[0].dataType,p,f),{inputs:[u]})},Zh=(r,e)=>{br(r,"ReduceMeanShared",e,"mean")},Jh=(r,e)=>{br(r,"ReduceL1Shared",e,"l1")},Qh=(r,e)=>{br(r,"ReduceL2Shared",e,"l2")},em=(r,e)=>{br(r,"ReduceLogSumExpShared",e,"logSumExp")},tm=(r,e)=>{br(r,"ReduceMaxShared",e,"max")},rm=(r,e)=>{br(r,"ReduceMinShared",e,"min")},nm=(r,e)=>{br(r,"ReduceProdShared",e,"prod")},om=(r,e)=>{br(r,"ReduceSumShared",e,"sum")},im=(r,e)=>{br(r,"ReduceSumSquareShared",e,"sumSquare")},am=(r,e)=>{br(r,"ReduceLogSumShared",e,"logSum")}});var yr,Xx,ta,Qs,vr,Yx,Zx,Jx,Qx,e2,t2,r2,n2,o2,i2,wr,um,lm,dm,cm,fm,pm,hm,mm,gm,bm,ea=B(()=>{"use strict";Re();ot();ke();sm();yr=r=>{if(!r||r.length===0||r.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(r.length===2&&r[1].dims.length!==1)throw new Error("Invalid axes input dims.")},Xx=r=>["","",`var value = ${r.getByIndices("input_indices")};`,""],ta=(r,e,n,t,o,i,s=!1,a=!1)=>{let u=[],l=n[0].dims,d=l.length,f=V.normalizeAxes(o,d),p=!a&&f.length===0;l.forEach((T,x)=>{p||f.indexOf(x)>=0?s&&u.push(1):u.push(T)});let g=u.length,b=V.size(u);return{name:r,shaderCache:e,getShaderSource:T=>{let x=[],_=W("_A",n[0].dataType,d),O=te("output",i,g),C=t(_,O,f),N=C[2];for(let k=0,U=0;k<d;k++)p||f.indexOf(k)>=0?(s&&U++,N=`for(var j${k}: u32 = 0; j${k} < ${l[k]}; j${k}++) {
                  ${C[2].includes("last_index")?`let last_index = j${k};`:""}
                  ${_.indicesSet("input_indices",k,`j${k}`)}
                  ${N}
                }`):(x.push(`${_.indicesSet("input_indices",k,O.indicesGet("output_indices",U))};`),U++);return`

        ${T.registerUniform("output_size","u32").declareVariables(_,O)}

        ${T.mainStart()}
          ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${_.type.indices};
          let output_indices = ${O.offsetToIndices("global_idx")};

          ${x.join(`
`)}
          ${C[0]}       // init ops for reduce max/min
          ${C[1]}
          ${N}
          ${C[3]}
          ${C.length===4?O.setByOffset("global_idx","value"):C.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:u,dataType:i}],dispatchGroup:{x:Math.ceil(b/64)},programUniforms:[{type:"uint32",data:b},...ee(l),...ee(u)]})}},Qs=(r,e)=>{let n=[];return r[1].dims[0]>0&&r[1].getBigInt64Array().forEach(t=>n.push(Number(t))),be({axes:n,keepDims:e.keepDims,noopWithEmptyAxes:e.noopWithEmptyAxes})},vr=(r,e,n,t)=>{let o=r.inputs,i=o.length===1?n:Qs(o,n);r.compute(ta(e,{hint:i.cacheKey,inputDependencies:["rank"]},[o[0]],i.noopWithEmptyAxes&&i.axes.length===0?Xx:t,i.axes,o[0].dataType,i.keepDims,i.noopWithEmptyAxes),{inputs:[0]})},Yx=(r,e)=>{yr(r.inputs),vr(r,"ReduceLogSum",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,"value = log(value);"])},Zx=(r,e)=>{yr(r.inputs),vr(r,"ReduceL1",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += abs(${t.getByIndices("input_indices")});`,""])},Jx=(r,e)=>{yr(r.inputs),vr(r,"ReduceL2",e,(t,o)=>[`var t = ${o.type.value}(0); var value = ${o.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},Qx=(r,e)=>{yr(r.inputs),vr(r,"ReduceLogSumExp",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += exp(${t.getByIndices("input_indices")});`,"value = log(value);"])},e2=(r,e)=>{yr(r.inputs),vr(r,"ReduceMax",e,(t,o,i)=>{let s=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(t.indicesSet("input_indices",a,0));return[`${s.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = max(value, ${t.getByIndices("input_indices")});`,""]})},t2=(r,e)=>{yr(r.inputs),vr(r,"ReduceMean",e,(t,o,i)=>{let s=1;for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&(s*=r.inputs[0].dims[a]);return["var sum = f32(0);","",`sum += f32(${t.getByIndices("input_indices")});`,`let value = ${o.type.value}(sum / ${s});`]})},r2=(r,e)=>{yr(r.inputs),vr(r,"ReduceMin",e,(t,o,i)=>{let s=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`input_indices[${a}] = 0;`);return[`${s.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = min(value, ${t.getByIndices("input_indices")});`,""]})},n2=(r,e)=>{yr(r.inputs),vr(r,"ReduceProd",e,(t,o)=>[`var value = ${o.type.storage}(1);`,"",`value *= ${t.getByIndices("input_indices")};`,""])},o2=(r,e)=>{yr(r.inputs),vr(r,"ReduceSum",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,""])},i2=(r,e)=>{yr(r.inputs),vr(r,"ReduceSumSquare",e,(t,o)=>[`var t = ${o.type.value}(0); var value = ${o.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += t * t;`,""])},wr=(r,e,n)=>{if(e.length===0)return n;let t=1,o=1;for(let i=0;i<e.length;i++)e.indexOf(i)===-1?t*=r[i]:o*=r[i];return o<32&&t>1024},um=(r,e)=>{wr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?t2(r,e):Zh(r,e)},lm=(r,e)=>{wr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Zx(r,e):Jh(r,e)},dm=(r,e)=>{wr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Jx(r,e):Qh(r,e)},cm=(r,e)=>{wr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Qx(r,e):em(r,e)},fm=(r,e)=>{wr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?e2(r,e):tm(r,e)},pm=(r,e)=>{wr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?r2(r,e):rm(r,e)},hm=(r,e)=>{wr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?n2(r,e):nm(r,e)},mm=(r,e)=>{wr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?o2(r,e):om(r,e)},gm=(r,e)=>{wr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?i2(r,e):im(r,e)},bm=(r,e)=>{wr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Yx(r,e):am(r,e)}});var ym,vm,wm,eu,xm=B(()=>{"use strict";ut();ot();ea();ym=r=>{if(!r||r.length===0||r.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(r[0].dataType!==1)throw new Error("Invalid input type.")},vm=(r,e)=>{ym(r.inputs);let n=(t,o,i)=>{let s=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`input_indices[${a}] = 0;`);return[`${s.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${t.getByIndices("input_indices")} ${e.selectLastIndex>0?"<=":"<"} value) {
         value = ${t.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",o.setByOffset("global_idx","best_index")]};r.compute(ta("ArgMin",{hint:e.cacheKey,inputDependencies:["rank"]},[r.inputs[0]],n,[e.axis],7,e.keepDims),{inputs:[0]})},wm=(r,e)=>{ym(r.inputs);let n=(t,o,i)=>{let s=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`input_indices[${a}] = 0;`);return[`${s.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${t.getByIndices("input_indices")} ${e.selectLastIndex>0?">=":">"} value) {
         value = ${t.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",o.setByOffset("global_idx","best_index")]};r.compute(ta("argMax",{hint:e.cacheKey,inputDependencies:["rank"]},[r.inputs[0]],n,[e.axis],7,e.keepDims),{inputs:[0]})},eu=r=>be(r)});var a2,$m,s2,u2,l2,ra,d2,Tm,tu=B(()=>{"use strict";ot();Ki();ke();a2=(r,e)=>{let n=r[0],t=r[1],o=r[2],i=r[3],s=r[4],a=r[5];if(s&&a)throw new Error("Attention cannot have both past and relative_position_bias");if(n.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let u=n.dims[0],l=n.dims[1],d=n.dims[2];if(o.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(t.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(t.dims[0]!==d)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(o.dims[0]!==t.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let f=o.dims[0]/3,p=f,g=p;if(e.qkvHiddenSizes.length>0){if(e.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let O of e.qkvHiddenSizes)if(O%e.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");f=e.qkvHiddenSizes[0],p=e.qkvHiddenSizes[1],g=e.qkvHiddenSizes[2]}let b=l;if(f!==p)throw new Error("qkv_hidden_sizes first element should be same as the second");if(o.dims[0]!==f+p+g)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let y=0;if(s){if(p!==g)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(s.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(s.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(s.dims[1]!==u)throw new Error('Input "past" second dimension must be batch_size');if(s.dims[2]!==e.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(s.dims[4]!==p/e.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');e.pastPresentShareBuffer||(y=s.dims[3])}let T=b+y,x=-1,_=0;if(i)throw new Error("Mask not supported");if(s)throw new Error("past is not supported");if(a)throw new Error("relativePositionBias is not supported");return{batchSize:u,sequenceLength:l,pastSequenceLength:y,kvSequenceLength:b,totalSequenceLength:T,maxSequenceLength:x,inputHiddenSize:d,hiddenSize:f,vHiddenSize:g,headSize:Math.floor(f/e.numHeads),vHeadSize:Math.floor(g/e.numHeads),numHeads:e.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:e.maskFilterValue,maskType:_,scale:e.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},$m=r=>be({...r}),s2=(r,e,n,t)=>{let o=bt(t),i=te("x",e.dataType,e.dims,o),s="threadMaxVector";o===2?s="max(threadMaxVector.x, threadMaxVector.y)":o===4&&(s="max(max(threadMaxVector.x, threadMaxVector.y), max(threadMaxVector.z, threadMaxVector.w))");let a=et(e.dataType),u=64,l=t/o;l<u?u=1:l/8<64&&(u=Math.ceil(l/8));let d=Math.ceil(t/o/u),f=p=>`
  const dInv: ${a} = 1 / ${t};
  const dComp = ${t/o};
  var<workgroup> wgMax: array<f32, ${u}>;
  var<workgroup> wgSum: array<f32, ${u}>;

  ${p.declareVariables(i)}
  @compute @workgroup_size(${u}, 1, 1)
  fn main(@builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_index : u32) {
    let localOffset = local_index * ${d};
    let offset: u32 = workgroup_id.x * dComp + localOffset;

    var threadMaxVector = ${Ot("f32",o,"-3.402823e+38f")};
    for (var i: u32 = 0; i < ${d} && i + localOffset < dComp; i++) {
      threadMaxVector = max(${or(a,o,"x[offset + i]")}, threadMaxVector);
    }
    wgMax[local_index] = ${s};
    workgroupBarrier();

    var maxValue = -3.402823e+38f;
    for (var i = 0u; i < ${u}; i++) {
      maxValue = max(wgMax[i], maxValue);
    }

    var sumVector = ${Ot("f32",o,"0")};
    for (var i: u32 = 0; i < ${d} && i + localOffset < dComp; i++) {
      sumVector += exp(${or(a,o,"x[offset + i]")} - maxValue);
    }
    wgSum[local_index] = ${zt("sumVector",o)};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${u}; i++) {
      sum += wgSum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < ${d} && i + localOffset < dComp; i++) {
        x[offset + i] = ${Ot(a,o,"dInv")};
      }
    } else {
      for (var i: u32 = 0; i < ${d} && i + localOffset < dComp; i++) {
        let f32input = ${or(a,o,"x[offset + i]")};
        x[offset + i] = ${i.type.value}(exp(f32input - maxValue) / sum);
      }
    }
  }`;r.compute({name:"AttentionProbsSoftmax",shaderCache:{hint:`${t}`},getShaderSource:f,getRunData:()=>({outputs:[],dispatchGroup:{x:n}})},{inputs:[e],outputs:[]})},u2=(r,e,n,t,o,i)=>{let s=[o.batchSize,o.numHeads,o.sequenceLength,o.kvSequenceLength+o.pastSequenceLength],a=i.scale===0?1/Math.sqrt(o.headSize):i.scale,u=et(e.dataType),l=bt(o.headSize),d=W("q",e.dataType,e.dims,l),f=W("key",n.dataType,n.dims,l),p=te("output",e.dataType,s),g=o.headSize/l,b=o.sequenceLength,y=o.totalSequenceLength,T=g,x=12,_={x:Math.ceil(o.totalSequenceLength/x),y:Math.ceil(o.sequenceLength/x),z:o.batchSize*o.numHeads},O=[e,n],C=k=>`
  const M: u32 = ${b}u;
  const N: u32 = ${y}u;
  const K: u32 = ${T}u;
  const alpha: ${u} = ${a};
  const beta: ${u} = 1.0;
  const TILE_SIZE = ${x}u;

  var<workgroup> tileQ: array<${d.type.storage}, ${x*x}>;
  var<workgroup> tileK: array<${d.type.storage}, ${x*x}>;

  ${k.declareVariables(d,f,p)}

  @compute @workgroup_size(${x}, ${x}, 1)
  fn main(@builtin(workgroup_id) workgroup_id : vec3<u32>,
   @builtin(local_invocation_id) local_id : vec3<u32>, @builtin(local_invocation_index) local_index : u32) {
   let global_idx = (workgroup_id.z * ${_.x*_.y}u +
          workgroup_id.y * ${_.x}u + workgroup_id.x) * ${x*x}u + local_index;

    // x holds the N and y holds the M
    let headIdx = workgroup_id.z;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let lm = m + local_id.y;
    let ln = n + local_id.x;

    let qOffset = ${o.sequenceLength*g} * headIdx + m * K;
    let kOffset = ${o.kvSequenceLength*g} * headIdx + n * K;

    var value = ${Ot(u,l)};
    for (var w: u32 = 0u; w < K; w += TILE_SIZE) {
      if (m + local_id.y < M && w + local_id.x < K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * K + w + local_id.x];
      }
      if (n + local_id.y < N && w + local_id.x < K) {
        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * K + w + local_id.x];
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k<TILE_SIZE && w+k < K; k++) {
        value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k];
      }

      workgroupBarrier();
    }

    let headOffset = headIdx * M * N;
    if (lm < M && ln < N) {
      let outputIdx = headOffset + lm * N + ln;
      output[outputIdx] = ${zt("value",l)} * alpha;
    }
  }`,N=r.compute({name:"AttentionProbs",shaderCache:{hint:JSON.stringify(o)},getRunData:()=>({outputs:[{dims:s,dataType:e.dataType,gpuDataType:0}],dispatchGroup:_}),getShaderSource:C},{inputs:O,outputs:[-1]})[0];return s2(r,N,o.batchSize*o.numHeads*o.sequenceLength,o.totalSequenceLength),N},l2=(r,e,n,t)=>{let o=[t.batchSize,t.sequenceLength,t.vHiddenSize],i=W("probs",e.dataType,e.dims),s=W("v",n.dataType,n.dims),a=te("output",e.dataType,o),u=et(e.dataType),l=12,d={x:Math.ceil(t.vHeadSize/l),y:Math.ceil(t.sequenceLength/l),z:t.batchSize*t.numHeads},f=p=>`
  const M: u32 = ${t.sequenceLength}u;
  const N: u32 = ${t.vHeadSize}u;
  const K: u32 = ${t.totalSequenceLength}u;
  const numHeads: u32 = ${t.numHeads}u;
  const TILE_SIZE = ${l}u;

  var<workgroup> tileQ: array<${i.type.storage}, ${l*l}>;
  var<workgroup> tileK: array<${i.type.storage}, ${l*l}>;

  ${p.declareVariables(i,s,a)}

  @compute @workgroup_size(${l}, ${l}, 1)
  fn main(@builtin(workgroup_id) workgroup_id : vec3<u32>,
   @builtin(local_invocation_id) local_id : vec3<u32>, @builtin(local_invocation_index) local_index : u32) {
   let global_idx = (workgroup_id.z * ${d.x*d.y}u +
          workgroup_id.y * ${d.x}u + workgroup_id.x) * ${l*l}u + local_index;

   let headIdx = workgroup_id.z;
   let m = workgroup_id.y * TILE_SIZE + local_id.y;
   let n = workgroup_id.x * TILE_SIZE + local_id.x;

   let offsetA = headIdx * (M * K) + m * K;
   let offsetB = headIdx * (N * K) + n;

   var value = ${u}(0);
   for (var w: u32 = 0u; w < K; w += TILE_SIZE) {
     if (m < M && w + local_id.x < K) {
       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
     }
     if (n < N && w + local_id.y < K) {
       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * N];
     }
     workgroupBarrier();
     for (var k: u32 = 0u; k<TILE_SIZE && w+k < K; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   let batchIdx = workgroup_id.z / ${t.numHeads};
   let currentBatchHeadNumber = workgroup_id.z % ${t.numHeads};
   let headOffset = (batchIdx * M * ${t.numHeads} + currentBatchHeadNumber) * ${t.vHeadSize};
   if (m < M && n < N) {
     let outputIdx = batchIdx * ${t.sequenceLength*t.vHiddenSize} + m * ${t.vHiddenSize}
       + currentBatchHeadNumber * ${t.vHeadSize} + n;
     output[outputIdx] = value;
   }
  }`;return r.compute({name:"AttentionScore",shaderCache:{hint:JSON.stringify(t)},getRunData:()=>({outputs:[{dims:o,dataType:e.dataType,gpuDataType:0}],dispatchGroup:d}),getShaderSource:f},{inputs:[e,n],outputs:[0]})[0]},ra=(r,e,n,t,o,i,s,a,u,l,d)=>{let f=u2(r,e,n,u,l,d);l2(r,f,t,l)},d2=(r,e)=>{let n=[e.batchSize,e.numHeads,e.sequenceLength,e.headSize],t=et(r.inputs[0].dataType),o=e.sequenceLength,i=e.inputHiddenSize,s=e.headSize,a=12,u={x:Math.ceil(e.headSize/a),y:Math.ceil(e.sequenceLength/a),z:e.batchSize*e.numHeads},l=()=>`
  const M: u32 = ${o}u;
  const K: u32 = ${i}u;
  const N: u32 = ${s}u;
  const numHeads: u32 = ${e.numHeads};
  const ldb = ${e.hiddenSize+e.hiddenSize+e.vHiddenSize}u;
  const TILE_SIZE = ${a}u;

  var<workgroup> tileInput: array<${t}, ${a*a}>;
  var<workgroup> tileWeightQ: array<${t}, ${a*a}>;
  var<workgroup> tileWeightK: array<${t}, ${a*a}>;
  var<workgroup> tileWeightV: array<${t}, ${a*a}>;

  @group(0) @binding(0) var<storage, read> input: array<${t}>;
  @group(0) @binding(1) var<storage, read> weight: array<${t}>;
  @group(0) @binding(2) var<storage, read> bias: array<${t}>;
  @group(0) @binding(3) var<storage, read_write> outputQ: array<${t}>;
  @group(0) @binding(4) var<storage, read_write> outputK: array<${t}>;
  @group(0) @binding(5) var<storage, read_write> outputV: array<${t}>;

  @compute @workgroup_size(${a}, ${a}, 1)
  fn main(@builtin(workgroup_id) workgroup_id : vec3<u32>,
   @builtin(local_invocation_id) local_id : vec3<u32>, @builtin(local_invocation_index) local_index : u32) {
   let global_idx = (workgroup_id.z * ${u.x*u.y}u +
          workgroup_id.y * ${u.x}u + workgroup_id.x) * ${a*a}u + local_index;

    let batchIndex = workgroup_id.z / ${e.numHeads};
    let headNumber = workgroup_id.z % ${e.numHeads};
    let m = workgroup_id.y * TILE_SIZE + local_id.y;
    let n = workgroup_id.x * TILE_SIZE + local_id.x;

    let inputOffset = batchIndex * (M * K) + m * K;
    let biasOffsetQ = headNumber * ${e.headSize};
    let biasOffsetK = ${e.hiddenSize} + biasOffsetQ;
    let biasOffsetV = ${e.hiddenSize} + biasOffsetK;

    var valueQ = ${t}(0);
    var valueK = ${t}(0);
    var valueV = ${t}(0);
    for (var w: u32 = 0u; w < K; w += TILE_SIZE) {
      if (m < M && w + local_id.x < K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < N && w + local_id.y < K) {
        let offset = n + (w + local_id.y) * ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * N + n) % ${e.headSize};
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * M * N;
    if (m < M && n < N) {
      let outputIdx = offset + m * N + n;
      outputQ[outputIdx] = valueQ;
      outputK[outputIdx] = valueK;
      outputV[outputIdx] = valueV;
    }
  }`,d=[r.inputs[0],r.inputs[1],r.inputs[2]];return r.compute({name:"AttentionPrepare",shaderCache:{hint:JSON.stringify(e)},getRunData:()=>({outputs:[{dims:n,dataType:r.inputs[0].dataType,gpuDataType:0},{dims:n,dataType:r.inputs[0].dataType,gpuDataType:0},{dims:n,dataType:r.inputs[0].dataType,gpuDataType:0}],dispatchGroup:u}),getShaderSource:l},{inputs:d,outputs:[-1,-1,-1]})},Tm=(r,e)=>{let n=a2(r.inputs,e),[t,o,i]=d2(r,n);return ra(r,t,o,i,r.inputs[4],void 0,void 0,void 0,r.inputs[5],n,e)}});var c2,f2,p2,_m,Sm=B(()=>{"use strict";It();Re();ot();ke();c2=(r,e)=>{if(!r||r.length!==5)throw new Error("BatchNormalization requires 5 inputs");let n=(t,o,i)=>{let s=o.length;if(s!==t.length)throw new Error(`${i}: num dimensions != ${s}`);o.forEach((a,u)=>{if(a!==t[u])throw new Error(`${i}: dim[${u}] do not match`)})};if(r[0].dims.length>1){let t=e.format==="NHWC"?e.spatial?r[0].dims.slice(-1):r[0].dims.slice(-1).concat(r[0].dims.slice(1,r[0].dims.length-1)):r[0].dims.slice(1,e.spatial?2:void 0);n(r[1].dims,t,"Invalid input scale"),n(r[2].dims,t,"Invalid input B"),n(r[3].dims,t,"Invalid input mean"),n(r[4].dims,t,"Invalid input var")}else n(r[1].dims,[1],"Invalid input scale"),n(r[2].dims,[1],"Invalid input B"),n(r[3].dims,[1],"Invalid input mean"),n(r[4].dims,[1],"Invalid input var")},f2=(r,e)=>{let{epsilon:n,spatial:t,format:o}=e,i=r[0].dims,s=t?bt(i[i.length-1]):1,a=o==="NHWC"&&i.length>1?s:1,u=V.size(i)/s,l=tt(i.length)&&t,d=l?i.length:i,f=W("x",r[0].dataType,r[0].dims,s),p=W("scale",r[1].dataType,r[1].dims,a),g=W("bias",r[2].dataType,r[2].dims,a),b=W("inputMean",r[3].dataType,r[3].dims,a),y=W("inputVar",r[4].dataType,r[4].dims,a),T=te("y",r[0].dataType,d,s),x=()=>{let O="";if(t)O=`let cOffset = ${i.length===1?"0u":o==="NHWC"?`outputIndices[${i.length-1}] / ${s}`:"outputIndices[1]"};`;else if(o==="NCHW")O=`
            ${T.indicesSet("outputIndices","0","0")}
            let cOffset = ${T.indicesToOffset("outputIndices")};`;else{O=`var cIndices = ${p.type.indices}(0);
                       cIndices[0] = outputIndices[${i.length-1}];`;for(let C=1;C<p.rank;C++)O+=`cIndices[${C}] = outputIndices[${C}];`;O+=`let cOffset = ${p.indicesToOffset("cIndices")};`}return O},_=O=>`
  const epsilon = ${n};
  ${O.registerUniform("outputSize","u32").declareVariables(f,p,g,b,y,T)}
  ${O.mainStart()}
  ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${T.offsetToIndices(`global_idx * ${s}`)};
    ${x()}
    let scale = ${p.getByOffset("cOffset")};
    let bias = ${g.getByOffset("cOffset")};
    let inputMean = ${b.getByOffset("cOffset")};
    let inputVar = ${y.getByOffset("cOffset")};
    let x = ${f.getByOffset("global_idx")};
    let value = (x - inputMean) / sqrt(inputVar + epsilon) * scale + bias;
    ${T.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${e.epsilon}_${e.format}_${t}_${s}`,inputDependencies:l?["rank","type","type","type","type"]:void 0},getShaderSource:_,getRunData:()=>({outputs:[{dims:r[0].dims,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:l?[{type:"uint32",data:u},...ee(i)]:[{type:"uint32",data:u}]})}},p2=r=>be(r),_m=(r,e)=>{let{inputs:n,outputCount:t}=r,o=p2({...e,outputCount:t});if(ye.webgpu.validateInputContent&&c2(n,o),e.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");r.compute(f2(n,o))}});var h2,m2,Im,Am=B(()=>{"use strict";Re();ke();h2=r=>{if(r[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(r[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(r[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(r[0].dims[2]!==r[1].dims[0])throw new Error("last dimension of input and bias are not the same")},m2=r=>{let e=r[0].dims,n=r[0].dims[2],t=V.size(e)/4,o=r[0].dataType,i=W("input",o,e,4),s=W("bias",o,[n],4),a=W("residual",o,e,4),u=te("output",o,e,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:e,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(t/64)}}),getShaderSource:d=>`
  const channels = ${n}u / 4;
  ${d.declareVariables(i,s,a,u)}

  ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes(t)}
    let value = ${i.getByOffset("global_idx")}
      + ${s.getByOffset("global_idx % channels")} + ${a.getByOffset("global_idx")};
    ${u.setByOffset("global_idx","value")}
  }`}},Im=r=>{h2(r.inputs),r.compute(m2(r.inputs))}});var g2,Ke,Om,Em,Cm,Pm,km,Dm,Bm,Rm,Mm,b2,Lm,zm,Nm,Fm,na,Vm,oa,Gm,Um,Wm,Hm,qm,jm,Km,Xm,Ym,Zm,Jm,Qm,eg,tg,rg,ng,og,ru=B(()=>{"use strict";ut();Re();ot();ke();g2=(r,e,n,t,o,i)=>{let s=Math.ceil(e/4),a="";typeof o=="string"?a=`${o}(a)`:a=o("a");let u=W("inputData",n,[s],4),l=te("outputData",t,[s],4);return`
      ${r.registerUniform("vec_size","u32").declareVariables(u,l)}

  ${i??""}

  ${r.mainStart()}
    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${u.getByOffset("global_idx")};
    ${l.setByOffset("global_idx",a)}
  }`},Ke=(r,e,n,t,o,i=r.dataType)=>({name:e,shaderCache:{hint:o,inputDependencies:["type"]},getShaderSource:s=>g2(s,V.size(r.dims),r.dataType,i,n,t),getRunData:s=>({outputs:[{dims:r.dims,dataType:i}],dispatchGroup:{x:Math.ceil(V.size(s[0].dims)/64/4)},programUniforms:[{type:"uint32",data:Math.ceil(V.size(r.dims)/4)}]})}),Om=r=>{r.compute(Ke(r.inputs[0],"Abs","abs"))},Em=r=>{r.compute(Ke(r.inputs[0],"Acos","acos"))},Cm=r=>{r.compute(Ke(r.inputs[0],"Acosh","acosh"))},Pm=r=>{r.compute(Ke(r.inputs[0],"Asin","asin"))},km=r=>{r.compute(Ke(r.inputs[0],"Asinh","asinh"))},Dm=r=>{r.compute(Ke(r.inputs[0],"Atan","atan"))},Bm=r=>{r.compute(Ke(r.inputs[0],"Atanh","atanh"))},Rm=r=>be(r),Mm=(r,e)=>{let n;switch(e.to){case 10:n="vec4<f16>";break;case 1:n="vec4<f32>";break;case 12:n="vec4<u32>";break;case 6:n="vec4<i32>";break;case 9:n="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${e.to}`)}r.compute(Ke(r.inputs[0],"Cast",n,void 0,e.cacheKey,e.to))},b2=r=>{let e=r.length>=2&&r[1].data!==0?r[1].getFloat32Array()[0]:Zi,n=r.length>=3&&r[2].data!==0?r[2].getFloat32Array()[0]:Ji;return be({min:e,max:n})},Lm=(r,e)=>{let n=r.inputs.length===1?e:b2(r.inputs),t=Gr(r.inputs[0].dataType);r.compute(Ke(r.inputs[0],"Clip",o=>`clamp(${o}, clip_min_, clip_max_)`,`
    const clip_min_: vec4<${t}> = vec4(${t}(${n.min}));
    const clip_max_: vec4<${t}> = vec4(${t}(${n.max}));
`,n.cacheKey),{inputs:[0]})},zm=r=>{r.compute(Ke(r.inputs[0],"Ceil","ceil"))},Nm=r=>{r.compute(Ke(r.inputs[0],"Cos","cos"))},Fm=r=>{r.compute(Ke(r.inputs[0],"Cosh","cosh"))},na=r=>be(r),Vm=(r,e)=>{let n=Gr(r.inputs[0].dataType);r.compute(Ke(r.inputs[0],"Elu",t=>`elu_vf32(${t})`,`
  const elu_alpha_ = ${n}(${e.alpha});

  fn elu_f32(a: ${n}) -> ${n} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${n}>) -> vec4<${n}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,e.cacheKey))},oa=(r,e="f32")=>`
const r0: ${e} = 0.3275911;
const r1: ${e} = 0.254829592;
const r2: ${e} = -0.284496736;
const r3: ${e} = 1.421413741;
const r4: ${e} = -1.453152027;
const r5: ${e} = 1.061405429;

fn erf_vf32(v: ${r}) -> ${r} {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,Gm=r=>{let e=Gr(r.inputs[0].dataType);r.compute(Ke(r.inputs[0],"Erf",n=>`erf_vf32(${n})`,oa(`vec4<${e}>`,e)))},Um=r=>{r.compute(Ke(r.inputs[0],"Exp","exp"))},Wm=r=>{r.compute(Ke(r.inputs[0],"Floor","floor"))},Hm=r=>{let e=Gr(r.inputs[0].dataType);r.compute(Ke(r.inputs[0],"Gelu",n=>`0.5 * ${n} * (1.0 + erf_vf32(${n} * 0.7071067811865475))`,oa(`vec4<${e}>`,e)))},qm=(r,e)=>{let n=Gr(r.inputs[0].dataType);r.compute(Ke(r.inputs[0],"LeakyRelu",t=>`select(leaky_relu_alpha_ * ${t}, ${t}, ${t} >= vec4<${n}>(0.0))`,`const leaky_relu_alpha_ = ${n}(${e.alpha});`,e.cacheKey))},jm=r=>{r.compute(Ke(r.inputs[0],"Not",e=>`!${e}`))},Km=r=>{r.compute(Ke(r.inputs[0],"Neg",e=>`-${e}`))},Xm=r=>{r.compute(Ke(r.inputs[0],"Reciprocal",e=>`1.0/${e}`))},Ym=r=>{let e=Gr(r.inputs[0].dataType);r.compute(Ke(r.inputs[0],"Relu",n=>`select(vec4<${e}>(0.0), ${n}, ${n} > vec4<${e}>(0.0))`))},Zm=r=>{r.compute(Ke(r.inputs[0],"Sigmoid",e=>`(1.0 / (1.0 + exp(-${e})))`))},Jm=r=>{r.compute(Ke(r.inputs[0],"Sin","sin"))},Qm=r=>{r.compute(Ke(r.inputs[0],"Sinh","sinh"))},eg=r=>{r.compute(Ke(r.inputs[0],"Sqrt","sqrt"))},tg=r=>{r.compute(Ke(r.inputs[0],"Tan","tan"))},rg=r=>{r.compute(Ke(r.inputs[0],"Tanh","tanh"))},ng=(r,e)=>{let n=Gr(r.inputs[0].dataType);return r.compute(Ke(r.inputs[0],"ThresholdedRelu",t=>`select(vec4<${n}>(0.0), ${t}, ${t} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${n}>(${e.alpha});`,e.cacheKey)),0},og=r=>{r.compute(Ke(r.inputs[0],"Log","log"))}});var v2,w2,ig,ag=B(()=>{"use strict";Re();ke();ru();v2=r=>{if(r[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(r[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(r[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(r[0].dims[2]!==r[1].dims[0])throw new Error("last dimension of input and bias are not the same")},w2=r=>{let e=r[0].dims.slice();e[2]=e[2]/2;let n=W("input",r[0].dataType,r[0].dims,4),t=W("bias",r[0].dataType,[r[0].dims[2]],4),o=te("output",r[0].dataType,e,4),i=V.size(e)/4,s=et(r[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:e,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)}}),getShaderSource:u=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${r[0].dims[2]/4/2}u;

  ${u.declareVariables(n,t,o)}

  ${oa(`vec4<${s}>`,s)}

  ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes(i)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${o.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},ig=r=>{v2(r.inputs),r.compute(w2(r.inputs))}});var x2,$2,xr,sg,ug,lg,dg,cg,fg,pg,hg,mg,gg,bg=B(()=>{"use strict";ut();Re();ke();x2=(r,e,n,t,o,i,s,a,u,l,d,f,p)=>{let g,b;typeof a=="string"?g=b=(k,U)=>`${a}((${k}),(${U}))`:typeof a=="function"?g=b=a:(g=a.scalar,b=a.vector);let y=f?e.length:e,T=f?n.length:n,x=f?t.length:t,_=te("outputData",d,x,4),O=W("aData",u,y,4),C=W("bData",l,T,4),N;if(o)if(i){let k=V.size(e)===1,U=V.size(n)===1,G=e.length>0&&e[e.length-1]%4===0,H=n.length>0&&n[n.length-1]%4===0;k||U?N=_.setByOffset("global_idx",b(k?`${O.type.value}(${O.getByOffset("0")}.x)`:O.getByOffset("global_idx"),U?`${C.type.value}(${C.getByOffset("0")}.x)`:C.getByOffset("global_idx"))):N=`
            let outputIndices = ${_.offsetToIndices("global_idx * 4u")};
            let offsetA = ${O.broadcastedIndicesToOffset("outputIndices",_)};
            let offsetB = ${C.broadcastedIndicesToOffset("outputIndices",_)};
            ${_.setByOffset("global_idx",b(s||G?O.getByOffset("offsetA / 4u"):`${O.type.value}(${O.getByOffset("offsetA / 4u")}[offsetA % 4u])`,s||H?C.getByOffset("offsetB / 4u"):`${C.type.value}(${C.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else N=_.setByOffset("global_idx",b(O.getByOffset("global_idx"),C.getByOffset("global_idx")));else{if(!i)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let k=(U,G,H="")=>{let ne=`aData[indexA${G}][componentA${G}]`,P=`bData[indexB${G}][componentB${G}]`;return`
            let outputIndices${G} = ${_.offsetToIndices(`global_idx * 4u + ${G}u`)};
            let offsetA${G} = ${O.broadcastedIndicesToOffset(`outputIndices${G}`,_)};
            let offsetB${G} = ${C.broadcastedIndicesToOffset(`outputIndices${G}`,_)};
            let indexA${G} = offsetA${G} / 4u;
            let indexB${G} = offsetB${G} / 4u;
            let componentA${G} = offsetA${G} % 4u;
            let componentB${G} = offsetB${G} % 4u;
            ${U}[${G}] = ${H}(${g(ne,P)});
          `};d===9?N=`
            var data = vec4<u32>(0);
            ${k("data",0,"u32")}
            ${k("data",1,"u32")}
            ${k("data",2,"u32")}
            ${k("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:N=`
            ${k("outputData[global_idx]",0)}
            ${k("outputData[global_idx]",1)}
            ${k("outputData[global_idx]",2)}
            ${k("outputData[global_idx]",3)}
          `}return`
        ${r.registerUniform("vec_size","u32").declareVariables(O,C,_)}

        ${p??""}

        ${r.mainStart()}
        ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${N}
      }`},$2=(r,e,n,t,o,i,s=n.dataType)=>{let a=!V.areEqual(n.dims,t.dims),u=n.dims,l=V.size(n.dims),d=!1,f=!1,p=[a];if(a){let b=gr.calcShape(n.dims,t.dims,!1);if(!b)throw new Error("Can't perform binary op on the given tensors");u=b,l=V.size(u);let y=V.size(n.dims)===1,T=V.size(t.dims)===1,x=n.dims.length>0&&n.dims[n.dims.length-1]%4===0,_=t.dims.length>0&&t.dims[t.dims.length-1]%4===0;p.push(y),p.push(T),p.push(x),p.push(_);let O=1;for(let C=1;C<u.length;C++){let N=n.dims[n.dims.length-C]??1,k=t.dims[t.dims.length-C]??1;if(N===k)O*=N;else break}O%4===0?(f=!0,d=!0):(y||T||x||_)&&(d=!0)}else d=!0;p.push(d);let g=tt(n.dims.length)&&tt(t.dims.length)&&tt(u.length);return{name:r,shaderCache:{hint:e+p.map(b=>b.toString()).join("_"),inputDependencies:g?["rank","rank"]:["dims","dims"]},getShaderSource:b=>x2(b,n.dims,t.dims,u,d,a,f,o,n.dataType,t.dataType,s,g,i),getRunData:()=>({outputs:[{dims:u,dataType:s}],dispatchGroup:{x:Math.ceil(l/64/4)},programUniforms:g?[{type:"uint32",data:Math.ceil(V.size(u)/4)},...ee(n.dims),...ee(t.dims),...ee(u)]:[{type:"uint32",data:Math.ceil(V.size(u)/4)}]})}},xr=(r,e,n,t,o,i)=>{r.compute($2(e,o??"",r.inputs[0],r.inputs[1],n,t,i))},sg=r=>{xr(r,"Add",(e,n)=>`${e}+${n}`)},ug=r=>{xr(r,"Div",(e,n)=>`${e}/${n}`)},lg=r=>{xr(r,"Equal",{scalar:(e,n)=>`u32(${e}==${n})`,vector:(e,n)=>`vec4<u32>(${e}==${n})`},void 0,void 0,9)},dg=r=>{xr(r,"Mul",(e,n)=>`${e}*${n}`)},cg=r=>{let e=W("input",r.inputs[0].dataType,r.inputs[0].dims).type.value;xr(r,"Pow",{scalar:(t,o)=>`pow_custom(${t},${o})`,vector:(t,o)=>`pow_vector_custom(${t},${o})`},`
    fn pow_custom(a : ${e}, b : ${e}) -> ${e} {
      if (b == ${e}(0.0)) {
        return ${e}(1.0);
      } else if (a < ${e}(0.0) && f32(b) != floor(f32(b))) {
        return ${e}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${e}(1.0), round(f32(abs(b) % ${e}(2.0))) != 1.0) * ${e}(${e==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${e}>, b : vec4<${e}>) -> vec4<${e}> {
      // TODO: implement vectorized pow
      return vec4<${e}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},fg=r=>{xr(r,"Sub",(e,n)=>`${e}-${n}`)},pg=r=>{xr(r,"Greater",{scalar:(e,n)=>`u32(${e}>${n})`,vector:(e,n)=>`vec4<u32>(${e}>${n})`},void 0,void 0,9)},hg=r=>{xr(r,"Less",{scalar:(e,n)=>`u32(${e}<${n})`,vector:(e,n)=>`vec4<u32>(${e}<${n})`},void 0,void 0,9)},mg=r=>{xr(r,"GreaterOrEqual",{scalar:(e,n)=>`u32(${e}>=${n})`,vector:(e,n)=>`vec4<u32>(${e}>=${n})`},void 0,void 0,9)},gg=r=>{xr(r,"LessOrEqual",{scalar:(e,n)=>`u32(${e}<=${n})`,vector:(e,n)=>`vec4<u32>(${e}<=${n})`},void 0,void 0,9)}});var _2,S2,I2,A2,yg,vg,wg=B(()=>{"use strict";Re();ot();ke();_2=r=>{if(!r||r.length<1)throw new Error("too few inputs");let e=r[0].dataType,n=r[0].dims.length;for(let t of r){if(t.dataType!==e)throw new Error("input tensors should be one type");if(t.dims.length!==n)throw new Error("input tensors should have the same shape")}},S2=(r,e)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${r}u>(${e});
    for (var i: u32 = 0u; i < ${r}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${r}u;
  }`,I2=(r,e)=>{let n=r.length,t=[];for(let o=0;o<n;++o){let i=e.setByOffset("global_idx",r[o].getByIndices("indices"));n===1?t.push(i):o===0?t.push(`if (inputIndex == ${o}u) { ${i} }`):o===n-1?t.push(`else { ${i} }`):t.push(`else if (inputIndex == ${o}) { ${i} }`)}return t.join(`
`)},A2=(r,e)=>{let n=r[0].dims.slice();if(e>=n.length||e<-1*n.length)throw new Error("axis specified for concat doesn't match input dimensionality");let t=e<0?n.length+e:e,o=n.slice(0);for(let C=1;C<r.length;C++){let N=r[C].dims.slice();for(let k=0;k<n.length;k++)if(k===t)o[t]+=N[k];else if(n[k]!==N[k])throw new Error("non concat dimensions must match")}let i=V.size(o),s=new Array(r.length),a=new Array(r.length),u=r[0].dataType,l=0,d=[],f=[],p=[],g=[{type:"uint32",data:i}];for(let C=0;C<r.length;++C)l+=r[C].dims[t],s[C]=l,p.push(tt(r[C].dims.length)),f.push(p[C]?r[C].dims.length:r[C].dims),a[C]=W(`input${C}`,u,f[C]),d.push(p[C]?"rank":"dims"),g.push({type:"uint32",data:s[C]});for(let C=0;C<r.length;++C)p[C]&&g.push(...ee(r[C].dims));let b=tt(o.length);b&&g.push(...ee(o));let y=b?o.length:o,T=te("output",u,y),x=T.indicesGet("indices",t),_=Array.from(Array(s.length).keys()).map(C=>`uniforms.sizeInConcatAxis${C}`).join(","),O=C=>`

  ${(()=>{C.registerUniform("outputSize","u32");for(let N=0;N<r.length;N++)C.registerUniform(`sizeInConcatAxis${N}`,"u32");return C.declareVariables(...a,T)})()}

  ${S2(s.length,_)}

  ${C.mainStart()}
    ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${T.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${x});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${s.length}u>(${_});
      ${x} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${I2(a,T)}
  }`;return{name:"Concat",shaderCache:{hint:`${e}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:o,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:g}),getShaderSource:O}},yg=(r,e)=>{_2(r.inputs),r.compute(A2(r.inputs,e.axis))},vg=r=>be({axis:r.axis})});var $r,ia,Ur=B(()=>{"use strict";Re();$r=(r,e)=>{switch(r.activation){case"Relu":return{activationFunction:"",applyActivation:`value = max(value, ${e}(0.0));`};case"Sigmoid":return{activationFunction:"",applyActivation:`value = (${e}(1.0) / (${e}(1.0) + exp(-value)));`};case"Clip":return{activationFunction:`const clip_min_=${e}(${r.clipMin});const clip_max_=${e}(${r.clipMax});`,applyActivation:"value = clamp(value, clip_min_, clip_max_);"};default:return{activationFunction:"",applyActivation:""}}},ia=r=>{let e=r?.activation||"";if(e==="Clip"){let[n,t]=r?.activation_params||[Zi,Ji];return{activation:e,clipMax:t,clipMin:n,activationCacheKey:`${e}:${n},${t}`}}return{activation:e,activationCacheKey:e}}});var $t,aa,sa=B(()=>{"use strict";$t=(r,e)=>{switch(r){case 1:return e;case 2:return`vec2<${e}>`;case 3:return`vec3<${e}>`;case 4:return`vec4<${e}>`;default:throw new Error(`${r}-component is not supported.`)}},aa=r=>`
      ${r?"value = value + getBiasByOutputCoords(coords);":""}
      `});var ua,nu=B(()=>{"use strict";ua=r=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${r}.x), i32(${r}.y), i32(${r}.z), 1));
}
`});var O2,E2,To,xg,C2,_o,P2,la,So=B(()=>{"use strict";Re();ke();Ur();sa();O2=(r,e)=>r?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${e?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${e?", batchIndices":""});
        `,E2=(r,e)=>r?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${e===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${e===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${e===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,To=(r,e,n="f32",t,o=!1,i=32,s=!1,a=32)=>{let u=e[1]*r[1],l=e[0]*r[0],d=o?u:i,f=o?i:u,p=d/e[0],g=i/e[1];if(!((o&&p===4&&r[1]===4||!o&&(p===3||p===4))&&d%e[0]===0&&i%e[1]===0&&r[0]===4))throw new Error(`If transposeA ${o} is true, innerElementSize ${p} and workPerThread[1] ${r[1]} must be 4.
      Otherwise, innerElementSize ${p} must be 3 or 4.
  tileAWidth ${d} must be divisible by workgroupSize[0]${e[0]}. tileInner ${i} must be divisible by workgroupSize[1] ${e[1]}. colPerThread ${r[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${p}<${n}>, ${d/p}>, ${f}>;
var<workgroup> mm_Bsub: array<array<vec4<${n}>, ${l/r[0]}>, ${i}>;

const rowPerThread = ${r[1]};
const colPerThread = ${r[0]};
const innerElementSize = ${p};
const tileInner = ${i};

@compute @workgroup_size(${e[0]}, ${e[1]}, ${e[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${s?"0":"i32(globalId.z)"};
  ${t?`let batchIndices = ${t.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${u};

  let numTiles = ${s?`${Math.ceil(a/i)}`:"(uniforms.dimInner - 1) / tileInner + 1"};
  var kStart = ${s?`i32(globalId.z) * ${a}`:"0"};

  var acc: array<vec4<${n}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${g};
  for (var t = 0; t < numTiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${O2(o,t)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${g}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${t?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${p===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${E2(o,p)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},xg=(r,e)=>r?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${e?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${e?", batchIndices":""});
            `,C2=r=>r?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",_o=(r,e,n="f32",t,o=!1,i=32,s=!1,a=32,u=!1)=>{let l=r[1]*e[1],d=r[0]*e[0],f=o?l:i,p=o?i:l;if(!(p%e[1]===0&&f%e[0]===0&&i%e[1]===0))throw new Error(`tileAHight ${p} must be divisible by workgroupSize[1]${e[1]}, tileAWidth ${f} must be divisible by workgroupSize[0]${e[0]}, tileInner ${i} must be divisible by workgroupSize[1]${e[1]}`);let g=p/e[1],b=f/e[0],y=i/e[1],T=u?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${l};
    let globalColStart = i32(workgroupId.x) * ${d};

    // Loop over shared dimension.
    for (var t = 0; t < numTiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${p}; inputRow = inputRow + ${e[1]}) {
        for (var inputCol = localCol; inputCol < ${f}; inputCol = inputCol + ${e[0]}) {
          ${xg(o,t)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${i}; inputRow = inputRow + ${e[1]}) {
            for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${e[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${t?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${n}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${e[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${o?`mm_Asub[k][localRow + innerRow * ${e[1]}];`:`mm_Asub[localRow + innerRow * ${e[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${e[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${e[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${l};

let tileRowA = i32(localId.y) * ${g};
let tileColA = i32(localId.x) * ${b};
let tileRowB = i32(localId.y) * ${y};
// Loop over shared dimension.
for (var t = 0; t < numTiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${g}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${b}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${xg(o,t)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${y}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${t?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${n}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${C2(o)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${n}, ${f}>, ${p}>;
  var<workgroup> mm_Bsub : array<array<${n}, ${d}>, ${i}>;
  const rowPerThread = ${r[1]};
  const colPerThread = ${r[0]};
  const tileInner = ${i};

@compute @workgroup_size(${e[0]}, ${e[1]}, ${e[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${s?"0":"i32(globalId.z)"};
    ${t?`let batchIndices = ${t.offsetToIndices("u32(batch)")};`:""}
    let numTiles = ${s?`${Math.ceil(a/i)}`:"(uniforms.dimInner - 1) / tileInner + 1"};
    var kStart = ${s?`i32(globalId.z) * ${a}`:"0"};

    var acc : array<array<${n}, colPerThread>, rowPerThread>;

    // Without this initialization strange values show up in acc.
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = 0.0;
      }
    }
    ${T}
  }
`},P2=(r,e,n,t,o,i=!1)=>{let[s,a,u]=o,[l,d,f,p]=t,g=Mn(s,u),b=Mn(a,u),y=et(t[0].type.tensor),T=()=>{let O=d.rank,C=l.rank,N=`var aIndices: ${d.type.indices};`;for(let k=O-2-1,U=C-1;k>=0;k--,U--)N+=`
aIndices[${k}] = ${C>1?`batchIndices[${U}]`:"batchIndices"};`;return g.forEach(k=>{N+=`
aIndices[${k}] = 0;`}),N+=`
aIndices[${O-2}] = u32(row);
                   aIndices[${O-1}] = u32(colIn);`,N},x=()=>{let O=f.rank,C=l.rank,N=`var bIndices: ${f.type.indices};`;for(let k=O-2-1,U=C-1;k>=0;k--,U--)N+=`
bIndices[${k}] = ${C>1?`batchIndices[${U}]`:"batchIndices"};`;return b.forEach(k=>{N+=`
bIndices[${k}] = 0;`}),N+=`
bIndices[${O-2}] = u32(row);
                   bIndices[${O-1}] = u32(colIn);`,N};return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${l.type.indices}) -> ${$t(r,y)} {
      var value = ${$t(r,y)}(0.0);
      let col = colIn * ${r};
      if(row < uniforms.dimAOuter && col < uniforms.dimInner)
      {
        ${T()}
        value = ${d.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${l.type.indices}) -> ${$t(r,y)} {
      var value = ${$t(r,y)}(0.0);
      let col = colIn * ${r};
      if(row < uniforms.dimInner && col < uniforms.dimBOuter)
      {
        ${x()}
        value = ${f.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${$t(r,y)}) {
      let col = colIn * ${r};
      if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${e?`value = value + ${i?"bias[colIn]":`${$t(r,y)}(bias[row])`};`:""}
        ${n}
        ${p.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},la=(r,e,n,t,o=!1)=>{let i=r[0].dims,s=r[1].dims,a=i.slice(0,-2),u=s.slice(0,-2),l=t?t.slice(0,-2):n.slice(0,-2),d=tt(l.length),f=d?l.length:l,p=Qi("batchDims",r[0].dataType,f,1),g=V.size(l),b=i[i.length-2],y=i[i.length-1],T=s[s.length-1],x=y%4===0&&T%4===0,_=b<=8?[4,1,1]:[4,4,1],O=[8,8,1],C=[Math.ceil(T/O[0]/_[0]),Math.ceil(b/O[1]/_[1]),Math.ceil(g/O[2]/_[2])],N=et(r[0].dataType),k=x?4:1,U=[...a,b,y/k],G=tt(U.length),H=G?U.length:U,ne=[...u,y,T/k],P=tt(ne.length),J=P?ne.length:ne,Te=[g,b,T/k],se=W("a",r[0].dataType,H,k),De=W("b",r[1].dataType,J,k),re=te("result",r[0].dataType,Te.length,k),Ce=[se,De],Ne=[{type:"int32",data:b},{type:"int32",data:T},{type:"int32",data:y}];d&&Ne.push(...ee(l)),G&&Ne.push(...ee(U)),P&&Ne.push(...ee(ne));let Se=[];Se.push(G?"rank":"dims"),Se.push(P?"rank":"dims");let $e=r.length>2,{activationFunction:ht,applyActivation:it}=$r(e,re.type.value),yt=P2(k,$e,it,[p,se,De,re],[a,u,l],o);if($e){let ie=o?k:1;Ce.push(W("bias",r[2].dataType,r[2].dims.length,ie)),Ne.push(...ee(r[2].dims)),Se.push("rank")}Ne.push(...ee(Te));let X=ie=>`
  ${ie.registerUniform("dimAOuter","i32").registerUniform("dimBOuter","i32").registerUniform("dimInner","i32").registerInternalVariables(p).declareVariables(...Ce,re)}
  ${ht}
  ${yt}
  ${x?To(_,O,N,p):_o(_,O,N,p)}
                   `;return{name:"MatMul",shaderCache:{hint:e.activationCacheKey+`${_}${x}${o}`,inputDependencies:Se},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:C[0],y:C[1],z:C[2]},programUniforms:Ne}),getShaderSource:X}}});var k2,$g,Tg=B(()=>{"use strict";Vr();ke();Ur();sa();nu();So();k2=(r,e,n,t,o=!1,i,s=4,a=4,u=4,l="f32")=>{let d=P=>{switch(P){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${l}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${P} is not supported.`)}},f=P=>{switch(P){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${P} is not supported.`)}},p=r?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,g=r?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,b=r?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",y=r?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",T=r?"row":"col",x=r?"col":"row",_=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${r?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${T} / outWidth;
    let outCol = ${T} % outWidth;

    let WRow = ${x} / (filterDims[1] * inChannels);
    let WCol = ${x} / inChannels % filterDims[1];
    let xRow = outRow * stride[0] + dilation[0] * WRow - pad[0];
    let xCol = outCol * stride[1] + dilation[1] * WCol - pad[1];
    let xCh = ${x} % inChannels;
    var resData = ${$t(s,l)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${b} && xCol >= 0 && xCol < ${y}) {
      ${p}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${d(s)}
    }
    return resData;`,O=r?e&&t?`
    let col = colIn * ${s};
    ${_}`:`
    let col = colIn * ${s};
    if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      ${_}
    }
    return ${$t(s,l)}(0.0);`:t&&n?`
    let col = colIn * ${s};
    ${_}`:`
    let col = colIn * ${s};
    if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
      ${_}
    }
    return ${$t(s,l)}(0.0);`,C=`${f(a)}`,N=$t(u,l),k=r?$t(s,l):$t(a,l),U=r?$t(a,l):$t(s,l),{activationFunction:G,applyActivation:H}=$r(i,N);return`
    ${G}
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${k} {
      ${r?O:C}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${U} {
      ${r?C:O}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${N}) {
      let col = colIn * ${u};
      if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
      {
      var value = valueIn;
      let outWidth = ${r?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${g}
      ${aa(o)}
      ${H}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},$g=(r,e,n,t,o,i,s,a)=>{let u=e.format==="NHWC",l=u?r[0].dims[3]:r[0].dims[1],d=n[0],f=u?n[2]:n[3],p=u?n[1]:n[2],g=u?n[3]:n[1],b=u&&(l%4===0||l%3===0)&&g%4===0,y=u?g:f*p,T=u?f*p:g,x=[8,8,1],_=t<=8?[4,1,1]:[4,4,1],O=[Math.ceil(y/x[0]/_[0]),Math.ceil(T/x[1]/_[1]),Math.ceil(d/x[2]/_[2])];nt("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${O}`);let C=b?u&&l%4!==0?3:4:1,N=x[1]*_[1],k=x[0]*_[0],U=Math.max(x[0]*C,x[1]),G=t%N===0,H=o%k===0,ne=i%U===0,P=b?[C,4,4]:[1,1,1],J=et(r[0].dataType),Te=b?4:1,se=[{type:"int32",data:t},{type:"int32",data:o},{type:"int32",data:i}],De=W("x",r[0].dataType,r[0].dims.length,C===3?1:C),re=W("w",r[1].dataType,r[1].dims.length,Te),Ce=[De,re];se.push(...ee(r[0].dims)),se.push(...ee(r[1].dims));let Ne=`
      fn setOutputAtIndex(flatIndex : i32, value : ${b?`vec4<${J}>`:J}) {
        result[flatIndex] = ${b?`vec4<${J}>`:J}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${b?`vec4<${J}>`:J}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${b?"/ 4":""}, value);
      }`;if(s){let $e=W("bias",r[2].dataType,r[2].dims.length,Te);Ce.push($e),se.push(...ee(r[2].dims)),Ne+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${b?`vec4<${J}>`:J} {
          return bias[coords.${u?"w":"y"}${b?"/ 4":""}];
        }`}let Se=te("result",r[0].dataType,n.length,Te);return se.push(...ee(n)),{name:"Conv2DMatMul",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:O[0],y:O[1],z:O[2]},programUniforms:se}),getShaderSource:$e=>`
        ${ua("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${$e.registerUniform("dimAOuter","i32").registerUniform("dimBOuter","i32").registerUniform("dimInner","i32").declareVariables(...Ce,Se)}
        const filterDims : vec2<i32> = vec2<i32>(${e.kernelShape[0]}, ${e.kernelShape[1]});
        const pad : vec2<i32> = vec2<i32>(${e.pads[0]}, ${e.pads[1]});
        const stride : vec2<i32> = vec2<i32>(${e.strides[0]}, ${e.strides[1]});
        const dilation : vec2<i32> = vec2<i32>(${e.dilations[0]}, ${e.dilations[1]});
        ${Ne}
        ${k2(u,G,H,ne,s,e,P[0],P[1],P[2],J)}
            ${b?To(_,x,J,void 0,!u,U):_o(_,x,J,void 0,!u,U,!1,void 0,a)}`}}});var ou,_g=B(()=>{"use strict";Re();ke();au();Ur();ou=(r,e,n)=>{let t=r.length>2,o=t?"value += b[output_channel];":"",i=r[0].dims,s=r[1].dims,a=s[0]/e.group,u=e.format==="NHWC",l=iu(i,s,e.dilations,e.pads,e.strides,u),d=V.size(l),f=te("output",r[0].dataType,l),{activationFunction:p,applyActivation:g}=$r(e,f.type.value),b=W("x",r[0].dataType,i),y=W("w",r[1].dataType,s),T=[b,y];t&&T.push(W("b",r[2].dataType,r[2].dims));let x=_=>`
  const strides: vec2<u32> = vec2(${e.strides[0]}u, ${e.strides[1]}u);
  const pads: vec2<u32> = vec2(${e.pads[0]}u, ${e.pads[1]}u);

  ${_.declareVariables(...T,f)}

  ${p}

  ${_.mainStart()}
    ${_.guardAgainstOutOfBoundsWorkgroupSizes(d)}

    let outputIndices = ${f.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${u?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${u?1:2}], outputIndices[${u?2:3}]) * strides - pads;
    let group_id: u32 = output_channel / ${a}u;

    var value: ${f.type.value} = ${f.type.value}(0);
    for (var wInChannel: u32 = 0u; wInChannel < ${s[1]}u; wInChannel++) {
      let input_channel = group_id * ${s[1]}u + wInChannel;
      for (var wHeight: u32 = 0u; wHeight < ${s[2]}u; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * ${e.dilations[0]}u;

        if (xHeight < 0u || xHeight >= ${i[u?1:2]}u) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < ${s[3]}u; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * ${e.dilations[1]}u;
          if (xWidth < 0u || xWidth >= ${i[u?2:3]}u) {
            continue;
          }

          let xVal = ${u?b.get("batch","xHeight","xWidth","input_channel"):b.get("batch","input_channel","xHeight","xWidth")};
          let wVal = ${y.get("output_channel","wInChannel","wHeight","wWidth")};
          value += xVal*wVal;
        }
      }
    }
    ${o}
    ${g}
    ${f.setByOffset("global_idx","value")}
  }`;return{name:"GroupedConv",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:n?n(l):l,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)}}),getShaderSource:x}}});var su,D2,Sg,uu=B(()=>{"use strict";Re();So();ke();Ur();su=(r,e,n,t,o=!1)=>{let i=r[0].dims,s=r[1].dims,a=i[i.length-2],u=s[s.length-1],l=i[i.length-1],d=bt(u),f=bt(l),p=bt(a),g=V.size(n)/d/p,b=r.length>2,y=t?t.slice(0,-2):n.slice(0,-2),x=[V.size(y),a,u],_=[{type:"uint32",data:g},{type:"uint32",data:a},{type:"uint32",data:u},{type:"uint32",data:l},...ee(y),...ee(i),...ee(s)];b&&_.push(...ee(r[2].dims)),_.push(...ee(x));let O=C=>{let N=Qi("batch_dims",r[0].dataType,y.length),k=W("a",r[0].dataType,i.length,f),U=W("b",r[1].dataType,s.length,d),G=te("output",r[0].dataType,x.length,d),{activationFunction:H,applyActivation:ne}=$r(e,G.type.value),P=[k,U],J="";if(b){let Se=o?d:1;P.push(W("bias",r[2].dataType,r[2].dims.length,Se)),J=`${o?`value += bias[col / ${Se}];`:`value += ${G.type.value}(bias[row + i]);`}`}let Te=i.slice(0,-2),se=s.slice(0,-2),De=Mn(Te,y),re=Mn(se,y),Ce=(Se,$e)=>{let ht=Se.rank,it=Se.name;if(ht===2)return`var ${it}_indices = ${Se.type.indices}(0u, 0u);`;let yt=N.rank,X=`var ${it}_indices: ${Se.type.indices};`;for(let ie=ht-2-1,Ie=yt-1;ie>=0;ie--,Ie--)X+=`
${it}_indices[${ie}] = ${yt>1?`batch_indices[${Ie}]`:"batch_indices"};`;return $e.forEach(ie=>{X+=`
${it}_indices[${ie}] = 0;`}),X+=`${it}_indices[${ht-2}] = 0u;
                     ${it}_indices[${ht-1}] = 0u;`,X},Ne=()=>{let Se=`var a_data: ${k.type.value};`;for(let $e=0;$e<f;$e++)Se+=`
              let b_data${$e} = b[(b_offset + (k + ${$e}) * uniforms.N + col) / ${d}];`;for(let $e=0;$e<p;$e++){Se+=`a_data = a[(a_offset + (row + ${$e}) * uniforms.K + k) / ${f}];`;for(let ht=0;ht<f;ht++)Se+=`
            values[${$e}] = fma(${U.type.value}(a_data${f===1?"":`[${ht}]`}), b_data${ht}, values[${$e}]);
`}return Se};return`
  ${C.registerUniform("outputSize","u32").registerUniform("M","u32").registerUniform("N","u32").registerUniform("K","u32").registerInternalVariables(N).declareVariables(...P,G)}
  ${H}
  ${C.mainStart()}
    ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    let col = (global_idx % (uniforms.N / ${d})) * ${d};
    var index1 = global_idx / (uniforms.N / ${d});
    let stride1 = uniforms.M / ${p};
    let row = (index1 % stride1) * ${p};
    let batch = index1 / stride1;

    ${n.length===2?"":`let batch_indices = ${N.offsetToIndices("batch")};`}
    ${Ce(k,De)}
    let a_offset = ${k.indicesToOffset("a_indices")};
    ${Ce(U,re)}
    let b_offset = ${U.indicesToOffset("b_indices")};
    var values: array<${G.type.value}, ${p}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${f}) {
      ${Ne()}
    }
    for (var i = 0u; i < ${p}u; i++) {
      var value = values[i];
      ${J}
      ${ne}
      let cur_indices = ${G.type.indices}(batch, row + i, col);
      let offset = ${G.indicesToOffset("cur_indices")};
      ${G.setByOffset(`offset / ${d}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${e.activationCacheKey}_${d}_${f}_${p}_${o}`,inputDependencies:b?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:_}),getShaderSource:O}},D2=r=>{if(!r||r.length!==2)throw new Error("MatMul requires 2 inputs.");if(r[0].dims[r[0].dims.length-1]!==r[1].dims[r[1].dims.length-2])throw new Error("shared dimension does not match.")},Sg=r=>{D2(r.inputs);let e=gr.calcShape(r.inputs[0].dims,r.inputs[1].dims,!0);if(!e)throw new Error("Can't use matmul on the given tensors");let n=e[e.length-1],t=r.inputs[0].dims[r.inputs[0].dims.length-1];n<8&&t<8?r.compute(su(r.inputs,{activation:"",activationCacheKey:""},e)):r.compute(la(r.inputs,{activation:"",activationCacheKey:""},e))}});var iu,Ig,B2,Ag,lu,R2,M2,du,au=B(()=>{"use strict";Re();ot();Tg();So();_g();Ur();uu();Ln();iu=(r,e,n,t,o,i)=>{let s=r[0],a=r.slice(i?1:2,i?3:4),u=a.length,l=e[0],f=e.slice(2).map((b,y)=>b+(b-1)*(n[y]-1)),g=a.map((b,y)=>b+t[y]+t[y+u]).map((b,y)=>Math.floor((b-f[y]+o[y])/o[y]));return g.splice(0,0,s),g.splice(i?3:1,0,l),g},Ig=[2,3,1,0],B2=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4&&r[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(r[0].dims.length!==r[1].dims.length)throw new Error("filter does not have same dimension as input");let n=r[0].dims[e.format==="NHWC"?r[0].dims.length-1:1],t=r[1].dims[1]*e.group;if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(r.length===3&&(r[2].dims.length!==1||r[1].dims[0]!==r[2].dims[0]))throw new Error("invalid bias");let o=r[0].dims.length-2;if(e.dilations.length!==o)throw new Error(`dilations should be ${o}D`);if(e.strides.length!==o)throw new Error(`strides should be ${o}D`);if(e.pads.length!==o*2)throw new Error(`pads should be ${o*2}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape")},Ag=(r,e)=>{let n=r.kernelShape.slice();for(let i=2;i<e[1].dims.length;++i)n[i-2]===0&&(n[i-2]=e[1].dims[i]);let t=r.pads.slice();pn.adjustPadsBasedOnAutoPad(e[0].dims,r.strides,r.dilations,n,t,r.format==="NHWC",r.autoPad);let o=Object.assign({},r);return Object.assign(o,{kernelShape:n,pads:t,cacheKey:r.cacheKey}),o},lu=r=>{let e=ia(r),n=r.format,t=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][r.auto_pad],o=r.dilations,i=r.group,s=r.kernel_shape,a=r.pads,u=r.strides,l=r.w_is_const();return be({autoPad:t,format:n,dilations:o,group:i,kernelShape:s,pads:a,strides:u,wIsConst:l,...e})},R2=(r,e,n)=>{let t=Ag(n,e);if(n.group!==1){r.compute(ou(e,t));return}let o=n.format==="NHWC",i=e.length===3,s=e[0].dims[o?1:2],a=e[0].dims[o?2:3],u=e[0].dims[o?3:1],l=e[1].dims[2],d=e[1].dims[3],f=iu(e[0].dims,e[1].dims,n.dilations,t.pads,n.strides,o),p=f[o?1:2],g=f[o?2:3],b=f[o?3:1],y=o&&l===s&&d===a&&n.pads[0]===0&&n.pads[1]===0;if(y||l===1&&d===1&&n.dilations[0]===1&&n.dilations[1]===1&&n.strides[0]===1&&n.strides[1]===1&&n.pads[0]===0&&n.pads[1]===0){let k=f[0],U,G,H,ne=[];if(o){let Te=r.kernelCustomData.wT??r.compute(ir(e[1],Ig),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];if(n.wIsConst&&!r.kernelCustomData.wT&&(r.kernelCustomData.wT=Te),y){let se=s*a*u;U=e[0].reshape([1,k,se]),G=Te.reshape([1,se,b]),H=[1,k,b]}else U=e[0].reshape([k,s*a,u]),G=Te.reshape([1,u,b]),H=[k,p*g,b];ne.push(U),ne.push(G)}else U=e[0].reshape([k,u,s*a]),G=e[1].reshape([1,b,u]),H=[k,b,p*g],ne.push(G),ne.push(U);i&&ne.push(e[2]);let P=H[2],J=ne[0].dims[ne[0].dims.length-1];P<8&&J<8?r.compute(su(ne,t,f,H,o),{inputs:ne}):r.compute(la(ne,t,f,H,o),{inputs:ne});return}let T=!0,x=r.kernelCustomData.wT??r.compute(ir(e[1],Ig),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!r.kernelCustomData.wT&&(r.kernelCustomData.wT=x);let _=[e[0],x];i&&_.push(e[2]);let O=o?p*g:b,C=o?b:p*g,N=l*d*u;r.compute($g(_,t,f,O,C,N,i,T),{inputs:_})},M2=(r,e)=>{let n=e.format==="NHWC",t=[r.inputs[0].reshape(n?[r.inputs[0].dims[0],1,r.inputs[0].dims[1],r.inputs[0].dims[2]]:[r.inputs[0].dims[0],r.inputs[0].dims[1],1,r.inputs[0].dims[2]]),r.inputs[1].reshape([r.inputs[1].dims[0],r.inputs[1].dims[1],1,r.inputs[1].dims[2]])];r.inputs.length===3&&t.push(r.inputs[2]);let o=[0,e.pads[0],0,e.pads[1]],i=[1].concat(e.strides),s=[1].concat(e.dilations),a=[1].concat(e.kernelShape),u=Ag({...e,pads:o,strides:i,dilations:s,kernelShape:a},t);r.compute(ou(t,u,l=>n?[l[0],l[2],l[3]]:[]))},du=(r,e)=>{B2(r.inputs,e),r.inputs[0].dims.length===3?M2(r,e):R2(r,r.inputs,e)}});var L2,Og,Eg=B(()=>{"use strict";Vr();ke();Ur();sa();nu();So();L2=(r,e=!1,n,t=4)=>{let o=$t(t,"f32"),i=_=>{switch(_){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];
            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];
            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];
            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${_} is not supported.`)}},s=r?`
      let coord = vec4<i32>(batch, iXR, iXC, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, iXR, iXC);
      `,a=r?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,u=r?"outBackprop[1]":"outBackprop[2]",l=r?"outBackprop[2]":"outBackprop[3]",d=r?"row":"col",f=r?"col":"row",p=`
      let inChannels = ${r?"outBackprop[3]":"outBackprop[1]"};
      let outWidth = ${r?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      let outRow = ${d} / outWidth;
      let outCol = ${d} % outWidth;

      let WRow = ${f} / (filterDims[1] * inChannels);
      let WCol = ${f} / inChannels % filterDims[1];
      let xR = f32(outRow - pads[0] + dilation[0] * WRow) / f32(strides[0]);
      let xC = f32(outCol - pads[1] + dilation[1] * WCol) / f32(strides[1]);
      if (xR < 0.0 || xR >= f32(${u}) || fract(xR) > 0.0) {
        return ${o}(0.0);
      }
      if (xC < 0.0 || xC >= f32(${l}) || fract(xC) > 0.0) {
        return ${o}(0.0);
      }
      let iXR = i32(xR);
      let iXC = i32(xC);
      let xCh = ${f} % inChannels;
      ${s}
      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${t}];`,g=r?`
      let col = colIn * ${t};
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${p}
      }
      return ${o}(0.0);`:`
      let col = colIn * ${t};
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${p}
      }
      return ${o}(0.0);`,b=`
      let col = colIn * ${t};
      let inChannels = ${r?"outBackprop[3]":"outBackprop[1]"};
      let coordX = filterDims.x - 1 - row / (filterDims[1] * inChannels);
      let coordY = filterDims.y - 1 - (row / inChannels) % filterDims[1];
      if (${r?"row < uniforms.dimInner && col < uniforms.dimBOuter":"row < uniforms.dimInner && col < uniforms.dimAOuter"}  && coordX >= 0 && coordY >= 0) {
        let rowInner = row % inChannels;
        let coord = vec4<i32>(coordX, coordY, col, rowInner);
        ${i(t)}
      }
      return ${o}(0.0);
      `,{activationFunction:y,applyActivation:T}=$r(n,o);return`
      ${y}
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${o} {
    ${r?g:b}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${o} {
    ${r?b:g}
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${o}) {
    let col = colIn * ${t};
    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
      var value = valueInput;
      let outWidth = ${r?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${a}
      ${aa(e)}
      ${T}
      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${t}] = value;
    }
  }`},Og=(r,e,n,t,o,i,s,a)=>{let u=e.format==="NHWC",l=u?r[0].dims[3]:r[0].dims[1],d=n[0],f=u?n[2]:n[3],p=u?n[1]:n[2],g=u?n[3]:n[1],b=u?l%4===0&&g%4===0:f%4===0&&g%4===0,y=u?g:f*p,T=u?f*p:g,x=b?[8,8,1]:[y<=4||T<=4?4:16,y>4&&T<=4?4:16,1],_=b?[4,4,1]:[y<=4?1:4,y>4&&T<=4?1:4,1],O=[Math.ceil(y/x[0]/_[0]),Math.ceil(T/x[1]/_[1]),Math.ceil(d/x[2]/_[2])];nt("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${O}`);let C=b?4:1,N=Math.max(x[0]*C,x[1]),k=b?4:1,U=[{type:"int32",data:t},{type:"int32",data:o},{type:"int32",data:i}],G=W("x",r[0].dataType,r[0].dims.length,k),H=W("w",r[1].dataType,r[1].dims.length,1),ne=te("result",r[0].dataType,n.length,k),P=[G,H];U.push(...ee(r[0].dims)),U.push(...ee(r[1].dims));let J="";if(s){let Te=W("bias",r[2].dataType,r[2].dims.length,k);P.push(Te),U.push(...ee(r[2].dims)),J+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${b?"vec4<f32>":"f32"} {
          return bias[coords.${u?"w":"y"}${b?"/ 4":""}];
        }`}return U.push(...ee(n)),{name:"Conv2DTransposeMatMul",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:O[0],y:O[1],z:O[2]},programUniforms:U}),getShaderSource:Te=>`
        ${ua("uniforms.result_strides")}
        ${Te.registerUniform("dimAOuter","i32").registerUniform("dimBOuter","i32").registerUniform("dimInner","i32").declareVariables(...P,ne)};
        const outBackprop : vec4<i32> = vec4<i32>(${r[0].dims.join(",")});
        const filterDims : vec2<i32> = vec2<i32>(${e.kernelShape[u?1:2]}, ${e.kernelShape[u?2:3]});
        const effectiveFilterDims : vec2<i32> = filterDims + vec2<i32>(
              ${e.dilations[0]<=1?0:(e.kernelShape[u?1:2]-1)*(e.dilations[0]-1)},
              ${e.dilations[1]<=1?0:(e.kernelShape[u?2:3]-1)*(e.dilations[1]-1)});
        const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${e.pads[0]+e.pads[2]})/2,
                                         i32(effectiveFilterDims[1]) - 1 - (${e.pads[1]+e.pads[3]})/2);
        const strides : vec2<i32> = vec2<i32>(${e.strides[0]}, ${e.strides[1]});
        const dilation : vec2<i32> = vec2<i32>(${e.dilations[0]}, ${e.dilations[1]});
        const dimAOuter : i32 = ${t};
        const dimBOuter : i32 = ${o};
        const dimInner : i32 = ${i};
        ${J}
        ${L2(u,s,e,C)}
        ${b?To(_,x,"f32",void 0,!u,N):_o(_,x,"f32",void 0,!u,N,!1,void 0,a)}`}}});var z2,cu,Cg=B(()=>{"use strict";Vr();Re();ke();z2=(r,e,n,t,o,i,s=!1,a)=>{let u=n.format==="NHWC",l=u?1:2,d=u?2:3,f=u?3:1,p=V.size(t),g=s?2:1,b=n.group,y=e[1].dims,T=y[0]/b,x=y[1],_=`
  fn setOutputAtIndex(flatIndex : u32, value : ${s?`vec4<${a}>`:a}) {
    result[flatIndex] = ${s?`vec4<${a}>`:a}(value);
  }`;o&&(_+=`
    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${s?`vec4<${a}>`:a} {
      return bias[coords.${u?"w":"y"}${s?"/ 4":""}];
    }`);let O=s?4:1,C=W("W",e[1].dataType,e[1].dims,O),N=W("Dy",e[0].dataType,e[0].dims,O),k=[N,C];o&&k.push(W("bias",e[2].dataType,[t[f]],O));let U=te("result",e[0].dataType,t,O),G=`{
        let batch: u32 = ${i?"global_id.z":"workgroup_id.z"} / outShape[1];
        let r = ${i?"global_id.z":"workgroup_id.z"} % outShape[1];
        let c = ${i?"global_id.y":"workgroup_id.y"} * ${g};
        let d1: u32 = ${i?"global_id.x":"workgroup_id.x"} * 4;

        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(pads);

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd: array<vec4<${a}>, ${g}>;
        for (var i = 0; i < ${g}; i++) {
          dotProd[i] = vec4<${a}>(0.0);
        }
        for (var wR: u32 = 0; wR < filterDims[0]; wR = wR + 1) {
          var dyR = (${a}(dyCorner.x) + ${a}(wR)) / ${a}(strides.x);
          let wRPerm = filterDims[0] - 1 - wR;
          if (dyR < 0.0 || dyR >= ${a}(outBackprop[1]) ||
              fract(dyR) > 0.0 || wRPerm < 0) {
            continue;
          }
          let idyR: u32 = u32(dyR);

          for (var wC: u32 = 0; wC < filterDims[1]; wC = wC + 1) {
            let dyC = (${a}(dyCorner.y) + ${a}(wC)) / ${a}(strides.y);
            let dyC2 = (${a}(dyCorner.y) + 1.0 + ${a}(wC)) / ${a}(strides.y);
            let wCPerm = filterDims[1] - 1 - wC;
            if (wCPerm < 0) {
              continue;
            }
            var bDyCVal = true;
            var bDyCVal2 = true;
            if (dyC < 0.0 || dyC >= ${a}(outBackprop[2]) ||
                fract(dyC) > 0.0) {
              bDyCVal = false;
            }
            if (dyC2 < 0.0 || dyC2 >= ${a}(outBackprop[2]) ||
                fract(dyC2) > 0.0) {
              bDyCVal2 = false;
            }

            let idyC: u32 = u32(dyC);
            let idyC2: u32 = u32(dyC2);
            if (bDyCVal && bDyCVal2) {
              let d2Length = outBackprop[3];
              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${N.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${a}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;

                xValue =  ${N.get("batch","idyR","idyC2","d2")};

                dotProd[1] = dotProd[1] + vec4<${a}>(dot(xValue, wValue0),
                                                    dot(xValue, wValue1),
                                                    dot(xValue, wValue2),
                                                    dot(xValue, wValue3));
              }
            } else if (bDyCVal) {
              let d2Length = outBackprop[${f}];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${N.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${a}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;
              }
            } else if (bDyCVal2) {
              let d2Length = outBackprop[3];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${C.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${N.get("batch","idyR","idyC2","d2")};
                let tmpval = vec4<${a}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[1] = dotProd[1] + tmpval;
              }
            }
          }
        }

        for (var i: u32 = 0; i < ${g}; i = i + 1) {
          let value = dotProd[i] + ${o?"bias[c+i]":`vec4<${a}>(0.0)`};
          ${U.set("batch","r","c + i","d1","value")};
        }
      }`,H=`
          let outputIndices = ${U.offsetToIndices("global_idx")};
          let batch = ${U.indicesGet("outputIndices",0)};
          let d1 = ${U.indicesGet("outputIndices",f)};
          let r = ${U.indicesGet("outputIndices",l)};
          let c = ${U.indicesGet("outputIndices",d)};
          let dyCorner = vec2<i32>(i32(r), i32(c)) - pads;
          let dyRCorner = dyCorner.x;
          let dyCCorner = dyCorner.y;
          let groupId = d1 / ${x};
          let wOutChannel = d1 - groupId * ${x};
          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
          // ? = to be determined. : = across all values in that axis.
          var dotProd = ${a}(0.0);
          for (var wR: u32 = 0; wR < effectiveFilterDims.x; wR = wR + 1) {
            if (wR % dilations.x != 0) {
              continue;
            }
            let dyR = (${a}(dyRCorner) + ${a}(wR)) / ${a}(strides[0]);
            let wRPerm = filterDims.x - 1 - wR / dilations.x;
            if (dyR < 0.0 || dyR >= ${a}(outBackprop[${l}]) || fract(dyR) > 0.0 ||
                wRPerm < 0) {
              continue;
            }
            let idyR: u32 = u32(dyR);

            for (var wC: u32 = 0; wC < effectiveFilterDims.y; wC = wC + 1) {
              if (wC % dilations.y != 0) {
                continue;
              }
              let dyC = (${a}(dyCCorner) + ${a}(wC)) / ${a}(strides.y);
              let wCPerm = filterDims.y - 1 - wC / dilations.y;
              if (dyC < 0.0 || dyC >= ${a}(outBackprop[${d}]) ||
                  fract(dyC) > 0.0 || wCPerm < 0) {
                continue;
              }
              let idyC: u32 = u32(dyC);
              var inputChannel = groupId * ${T};
              for (var d2: u32 = 0; d2 < ${T}; d2 = d2 + 1) {
                let xValue = ${u?N.get("batch","idyR","idyC","inputChannel"):N.get("batch","inputChannel","idyR","idyC")};
                let wValue = ${C.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};
                dotProd = dotProd + xValue * wValue;
                inputChannel = inputChannel + 1;
              }
            }
          }
          let value = dotProd + ${o?"bias[d1]":`${a}(0.0)`};
          ${U.setByOffset("global_idx","value")};
        `;return`
  ${r.declareVariables(...k,U)}
  ${_}
  const outShape : vec4<u32> = vec4<u32>(${t.join(",")});
  const outBackprop : vec4<u32> = vec4<u32>(${e[0].dims.join(",")});
  const strides : vec2<u32> = vec2<u32>(${n.strides[0]}, ${n.strides[1]});
  const filterDims : vec2<u32> = vec2<u32>(${n.kernelShape[u?1:2]}, ${n.kernelShape[u?2:3]});
  const dilations : vec2<u32> = vec2<u32>(${n.dilations[0]}, ${n.dilations[1]});
  const effectiveFilterDims : vec2<u32> = filterDims + vec2<u32>(
          ${n.dilations[0]<=1?0:(n.kernelShape[u?1:2]-1)*(n.dilations[0]-1)},
          ${n.dilations[1]<=1?0:(n.kernelShape[u?2:3]-1)*(n.dilations[1]-1)});
  const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${n.pads[0]+n.pads[2]})/2,
                                     i32(effectiveFilterDims[1]) - 1 - (${n.pads[1]+n.pads[3]})/2);
    ${r.mainStart()}
    ${r.guardAgainstOutOfBoundsWorkgroupSizes(p)};
  ${s?G:H}}`},cu=(r,e,n)=>{let t=r.length>2,o=e.outputShape,i=V.size(o),s=[Math.ceil(i/64),1,1];nt("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${s}`);let a=et(r[0].dataType);return{name:"ConvTranspose2D",shaderCache:{hint:e.cacheKey},getRunData:()=>({dispatchGroup:{x:s[0],y:s[1],z:s[2]},outputs:[{dims:n?n(o):o,dataType:r[0].dataType}]}),getShaderSource:u=>z2(u,r,e,o,t,s[1]===1&&s[2]===1,!1,a)}}});var N2,F2,V2,Pg,kg,G2,U2,W2,H2,Dg,Bg=B(()=>{"use strict";ot();Eg();Cg();Ur();Ln();N2=(r,e,n,t,o,i)=>(r-1)*e+n+(t-1)*o+1-i,F2=(r,e,n,t,o)=>{let i=Math.floor(r/2);e==="SAME_UPPER"?(n[t]=i,n[o]=r-i):e==="SAME_LOWER"&&(n[t]=r-i,n[o]=i)},V2=(r,e,n,t,o,i,s,a,u,l)=>{let d=r.length-2,f=l.length===0;if(u.length===0)for(let b=0;b<d;++b)u.push(0);let p=r[0],g=e[a?3:1]*o;for(let b=0,y=r.length-d-(a?1:0);b<d;++b,++y){let T=r[y],x=f?T*s[b]:l[b],_=N2(T,s[b],i[b],e[y],n[b],x);F2(_,t,i,b,b+d),f&&l.push(s[b]*(T-1)+u[b]+(e[y]-1)*n[b]+1-i[b]-i[b+d])}l.splice(0,0,p),l.splice(a?3:1,0,g)},Pg=(r,e)=>{let n=r.kernelShape.slice();if(r.kernelShape.length===0||r.kernelShape.reduce((p,g)=>p*g,1)===0){n.length=0;for(let p=2;p<e[1].dims.length;++p)n.push(e[1].dims[p])}let t=r.format==="NHWC";n.splice(0,0,e[1].dims[0]),n.splice(t?3:1,0,e[1].dims[1]);let o=r.pads.slice(),i=r.outputShape.slice(),s=r.outputPadding.slice(),a=e[0].dims,u=r.dilations.slice();if(u.reduce((p,g)=>p+g,0)===0){let p=e[0].dims.length-2;u=new Array(p).fill(1)}let l=r.strides.slice();if(l.reduce((p,g)=>p+g,0)===0){let p=e[0].dims.length-2;l=new Array(p).fill(1)}V2(a,n,u,r.autoPad,r.group,o,l,t,s,i);let d=Object.assign({},r),f=r.cacheKey+[n.join("n,"),o.join(","),l.join(","),s.join(","),i.join(","),u.join(",")].join("_");return Object.assign(d,{kernelShape:n,pads:o,outputPadding:s,outputShape:i,dilations:u,strides:l,cacheKey:f}),d},kg=r=>{let e=ia(r),n=r.format,t=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof r.autoPad>"u"?0:r.autoPad],o=r.dilations,i=r.group,s=r.kernelShape,a=r.pads,u=r.strides,l=r.wIsConst(),d=r.outputPadding,f=r.outputShape;return be({autoPad:t,format:n,dilations:o,group:i,kernelShape:s,outputPadding:d,outputShape:f,pads:a,strides:u,wIsConst:l,...e})},G2=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4&&r[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(r[0].dims.length!==r[1].dims.length)throw new Error("filter does not have same dimension as input");let n=r[0].dims[e.format==="NHWC"?r[0].dims.length-1:1],t=r[1].dims[0];if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let o=r[1].dims[1]*e.group;if(r.length===3&&(r[2].dims.length!==1||r[2].dims[0]!==o))throw new Error("invalid bias");let i=r[0].dims.length-2;if(e.dilations.reduce((d,f)=>d+f,0)>0&&e.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(e.strides.reduce((d,f)=>d+f,0)>0&&e.strides.length!==i)throw new Error(`strides should be ${i}D`);if(e.pads.reduce((d,f)=>d+f,0)>0&&e.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(e.outputPadding.length!==i&&e.outputPadding.length!==0)throw new Error(`output_padding should be ${i}D`);if(e.kernelShape.reduce((d,f)=>d+f,0)>0&&e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape");if(e.outputShape.length!==0&&e.outputShape.length!==r[0].dims.length-2)throw new Error("invalid output shape")},U2=[2,3,1,0],W2=(r,e,n)=>{let t=Pg(n,e),o=n.format==="NHWC",i=t.outputShape,s=i[o?3:1],a=e[0].dims[o?3:1];if(t.group!==1||s===1&&a===1){r.compute(cu(e,t));return}let u=i[o?1:2],l=i[o?2:3],d=e[1].dims[2],f=e[1].dims[3],p=o?u*l:s,g=o?s:u*l,b=d*f*a,y=!0,T=r.kernelCustomData.wT??r.compute(ir(e[1],U2),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!r.kernelCustomData.wT&&(r.kernelCustomData.wT=T);let x=[e[0],T],_=e.length===3;_&&(!o&&e[2].dims.length===1?x.push(e[2].reshape([e[2].dims[0],1,1])):x.push(e[2])),r.compute(Og(x,t,i,p,g,b,_,y),{inputs:x})},H2=(r,e)=>{let n=e.format==="NHWC",t=[r.inputs[0].reshape(n?[r.inputs[0].dims[0],1,r.inputs[0].dims[1],r.inputs[0].dims[2]]:[r.inputs[0].dims[0],r.inputs[0].dims[1],1,r.inputs[0].dims[2]]),r.inputs[1].reshape([r.inputs[1].dims[0],r.inputs[1].dims[1],1,r.inputs[1].dims[2]])];t.length===3&&t.push(r.inputs[2]);let o=e.kernelShape;(o.length===0||o[0]===0)&&(o=[r.inputs[1].dims[2]]);let i=e.dilations;(i.length===0||i[0]===0)&&(i=[1]);let s=e.strides;(s.length===0||s[0]===0)&&(s=[1]);let a=e.pads;a.length===0&&(a=[0,0]),a=[0,a[0],0,a[1]],s=[1].concat(s),i=[1].concat(i),o=[1].concat(o);let u=Pg({...e,pads:a,strides:s,dilations:i,kernelShape:o},t);r.compute(cu(t,u,l=>n?[l[0],l[2],l[3]]:[l[0],l[1],l[3]]))},Dg=(r,e)=>{G2(r.inputs,e),r.inputs[0].dims.length===3?H2(r,e):W2(r,r.inputs,e)}});var q2,Rg,Mg,Lg=B(()=>{"use strict";ut();Re();ot();ke();q2=(r,e,n,t)=>{let o=V.size(e),i=e.length,s=W("input",r,i),a=te("output",r,i),u=n.dataType===6?n.getInt32Array()[0]:Number(n.getBigInt64Array()[0]),l=V.normalizeAxis(u,i),d=f=>{let p=` i32(${s.indicesGet("inputIndices","uniforms.axis")}) `,g=qe("uniforms.input_shape","uniforms.axis",i),b=t.reverse?p+(t.exclusive?" + 1":""):"0",y=t.reverse?g:p+(t.exclusive?"":" + 1");return`
                ${f.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(s,a)}
                ${f.mainStart()}
                  ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${a.offsetToIndices("global_idx")};
                  var sum = ${a.type.value}(0);
                  let first : i32 = ${b};
                  let last : i32 = ${y};
                  for (var i : i32 = first; i < last; i++) {
                    ${s.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${s.getByIndices("inputIndices")};
                  }
                  ${a.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:e,dataType:r}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:[{type:"uint32",data:o},{type:"int32",data:l},...ee(e),...ee(e)]}),getShaderSource:d}},Rg=(r,e)=>{let n=r.inputs[0].dims,t=r.inputs[0].dataType,o=r.inputs[1];r.compute(q2(t,n,o,e),{inputs:[0]})},Mg=r=>{let e=r.exclusive===1,n=r.reverse===1;return be({exclusive:e,reverse:n})}});var fu,da,zg,j2,K2,pu,hu,Ng,X2,Fg,Vg,Gg=B(()=>{"use strict";Re();ot();ke();fu="[a-zA-Z]|\\.\\.\\.",da="("+fu+")+",zg="^"+da+"$",j2="("+da+",)*"+da,K2="^"+j2+"$",pu=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,n){let t=this.symbolToIndices.get(e);t===void 0?t=[n]:t.push(n),this.symbolToIndices.set(e,t)}},hu=class{constructor(e,n){this.equation=n;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[t,o]=n.includes("->")?n.split("->",2):[n,""];if(!t.match(RegExp(K2)))throw new Error("Invalid LHS term");if(t.split(",").forEach((a,u)=>{let l=e[u].dims.slice();if(!a.match(RegExp(zg)))throw new Error("Invalid LHS term");let d=this.processTerm(a,!0,l,u);this.lhs.push(d)}),o==="")o+=[...this.symbolToInfo.entries()].filter(([a,u])=>u.count===1||a==="...").map(([a])=>a).join("");else if(!o.match(RegExp(da)))throw new Error("Invalid RHS");o.match(RegExp(fu,"g"))?.forEach(a=>{if(a==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let u=this.symbolToInfo.get(a);if(u===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(u.dimValue)}}),this.rhs=this.processTerm(o,!1,this.outputDims)}addSymbol(e,n,t){let o=this.symbolToInfo.get(e);if(o!==void 0){if(o.dimValue!==n&&o.count!==1)throw new Error("Dimension mismatch");o.count++,o.inputIndices.push(t)}else o={count:1,dimValue:n,inputIndices:[t]};this.symbolToInfo.set(e,o)}processTerm(e,n,t,o=-1){let i=t.length,s=!1,a=[],u=0;if(!e.match(RegExp(zg))&&!n&&e!=="")throw new Error("Invalid LHS term");let l=e.match(RegExp(fu,"g")),d=new pu(o);return l?.forEach((f,p)=>{if(f==="..."){if(s)throw new Error("Only one ellipsis is allowed per input term");s=!0;let g=i-l.length+1;if(g<0)throw new Error("Ellipsis out of bounds");if(a=t.slice(u,u+g),this.hasEllipsis){if(this.ellipsisDims.length!==a.length||this.ellipsisDims.toString()!==a.toString())throw new Error("Ellipsis dimensions mismatch")}else if(n)this.hasEllipsis=!0,this.ellipsisDims=a;else throw new Error("Ellipsis must be specified in the LHS");for(let b=0;b<a.length;b++){let y=String.fromCharCode("0".charCodeAt(0)+b);d.addSymbol(y,p+b),this.addSymbol(y,t[u++],o)}}else d.addSymbol(f,p+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(f,t[u++],o)}),d}},Ng=r=>r+"_max",X2=(r,e,n,t,o)=>{let s=e.map((g,b)=>r[b]?g.length:g).map((g,b)=>W(`input${b}`,n,g)),a=V.size(o),u=tt(o.length),l=u?o.length:o,d=te("output",n,l),f=[...t.symbolToInfo.keys()].filter(g=>!t.rhs.symbolToIndices.has(g)),p=g=>{let b=[],y="var prod = 1.0;",T="var sum = 0.0;",x="sum += prod;",_=[],O=[],C=[],N=[],k=t.symbolToInfo.size===t.rhs.symbolToIndices.size;t.symbolToInfo.forEach((G,H)=>{if(t.rhs.symbolToIndices.has(H)){let ne=t.rhs.symbolToIndices.get(H)?.[0];ne!==void 0&&t.lhs.forEach((P,J)=>{if(G.inputIndices.includes(J)){let Te=P.symbolToIndices.get(H);if(Te===void 0)throw new Error("Invalid symbol error");Te.forEach(se=>{b.push(`${s[J].indicesSet(`input${J}Indices`,se,d.indicesGet("outputIndices",ne))}`)})}})}else t.lhs.forEach((ne,P)=>{if(G.inputIndices.includes(P)){let J=ne.symbolToIndices.get(H);if(J===void 0)throw new Error("Invalid symbol error");J.forEach(Te=>{_.push(`${s[P].indicesSet(`input${P}Indices`,Te,`${H}`)}`)}),N.push(`prod *= ${s[P].getByIndices(`input${P}Indices`)};`)}}),O.push(`for(var ${H}: u32 = 0; ${H} < uniforms.${Ng(H)}; ${H}++) {`),C.push("}")});let U=k?[...b,`let sum = ${s.map((G,H)=>G.getByIndices(`input${H}Indices`)).join(" * ")};`]:[...b,T,...O,..._,y,...N,x,...C];return`
            ${g.registerUniforms(f.map(G=>({name:`${Ng(G)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...s,d)}

            ${g.mainStart()}
            ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${d.offsetToIndices("global_idx")};
            ${s.map((G,H)=>`var input${H}Indices: ${s[H].type.indices};`).join(`
`)}
            ${U.join(`
`)};
            ${d.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:t.equation,inputDependencies:r.map(g=>g?"rank":"dims")},getRunData:()=>{let g=f.filter(y=>t.symbolToInfo.has(y)).map(y=>({type:"uint32",data:t.symbolToInfo.get(y)?.dimValue||0}));g.push({type:"uint32",data:a});let b=e.filter((y,T)=>r[T]).map((y,T)=>[...ee(y)]).reduce((y,T)=>y.concat(T),g);return u&&b.push(...ee(o)),{outputs:[{dims:o,dataType:n}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:b}},getShaderSource:p}},Fg=(r,e)=>{let n=new hu(r.inputs,e.equation),t=r.inputs.map((s,a)=>tt(s.dims.length)),o=n.outputDims,i=r.inputs.map((s,a)=>s.dims);r.compute(X2(t,i,r.inputs[0].dataType,n,o))},Vg=r=>{let e=r.equation.replace(/\s+/g,"");return be({equation:e})}});var Y2,Ug,Z2,J2,Wg,Hg=B(()=>{"use strict";ut();Re();ke();Y2=r=>{if(!r||r.length!==2)throw new Error("Expand requires 2 input.");let e=r[0].dims,n=Array.from(r[1].getBigInt64Array(),Number),t=n.length<e.length?0:n.length-e.length,o=e.length<n.length?0:e.length-n.length;for(;t<n.length&&o<e.length;++t,++o)if(n[t]!==e[o]&&n[t]!==1&&e[o]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Ug=(r,e)=>{let n=r.length-e.length,t=[];for(let o=0;o<n;++o)t.push(r[o]);for(let o=0;o<e.length;++o)t.push(e[o]===1?r[o+n]:e[o]);return t},Z2=(r,e)=>r.length>e.length?Ug(r,e):Ug(e,r),J2=r=>{let e=r[0].dims,n=Array.from(r[1].getBigInt64Array(),Number),t=Z2(e,n),o=r[0].dataType,i=o===9?4:1,s=Math.ceil(V.size(t)/i),a=tt(e.length),u=tt(t.length),l=f=>{let p=a?e.length:e,g=u?t.length:t,b=W("input",o,p,i),y=te("output",o,g,i),T;if(o===9){let x=(_,O,C="")=>`
          let outputIndices${O} = ${y.offsetToIndices(`outputOffset + ${O}u`)};
          let offset${O} = ${b.broadcastedIndicesToOffset(`outputIndices${O}`,y)};
          let index${O} = offset${O} / 4u;
          let component${O} = offset${O} % 4u;
          ${_}[${O}] = ${C}(${b.getByOffset(`index${O}`)}[component${O}]);
        `;T=`
        let outputOffset = global_idx * ${i};
        var data = vec4<u32>(0);
        ${x("data",0,"u32")}
        ${x("data",1,"u32")}
        ${x("data",2,"u32")}
        ${x("data",3,"u32")}
        ${y.setByOffset("global_idx","data")}
      }`}else T=`
        let outputIndices = ${y.offsetToIndices("global_idx")};
        let inputOffset = ${b.broadcastedIndicesToOffset("outputIndices",y)};
        ${y.setByOffset("global_idx",b.getByOffset("inputOffset"))}
      }`;return`
    ${f.registerUniform("vec_size","u32").declareVariables(b,y)}
    ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${T}`},d=[{type:"uint32",data:s}];return a&&d.push(...ee(e)),u&&d.push(...ee(t)),{name:"Expand",shaderCache:{hint:`${t.length}`,inputDependencies:[a?"rank":"dims"]},getShaderSource:l,getRunData:()=>({outputs:[{dims:t,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:d})}},Wg=r=>{Y2(r.inputs),r.compute(J2(r.inputs),{inputs:[0]})}});var Q2,e1,qg,jg,Kg=B(()=>{"use strict";ut();Re();ot();ke();Q2=r=>{if(!r||r.length!==2)throw new Error("Gather requires 2 inputs.")},e1=(r,e)=>{let n=r[0].dims,t=r[1].dims,o=n.length,i=V.normalizeAxis(e.axis,o),s=n.slice(0);s.splice(i,1,...t);let a=n[i],u=r[0].dataType===9?4:1,l=Math.ceil(V.size(s)/u),d=tt(r[0].dims.length),f=d?r[0].dims.length:r[0].dims,p=tt(r[1].dims.length),g=p?r[1].dims.length:r[1].dims,b=tt(s.length),y=b?s.length:s,T=[{type:"uint32",data:l},{type:"int32",data:a},{type:"uint32",data:i}];d&&T.push(...ee(r[0].dims)),p&&T.push(...ee(r[1].dims)),b&&T.push(...ee(s));let x=[];x.push(d?"rank":"dims"),x.push(p?"rank":"dims");let _=O=>{let C=W("data",r[0].dataType,f,u),N=W("inputIndices",r[1].dataType,g),k=te("output",r[0].dataType,y,u),U=H=>{let ne=t.length,P=`var indicesIndices${H}  = ${N.type.indices}(0);`;for(let J=0;J<ne;J++)P+=`${ne>1?`indicesIndices${H}[${J}]`:`indicesIndices${H}`} = ${s.length>1?`outputIndices${H}[uniforms.axis + ${J}]`:`outputIndices${H}`};`;P+=`
          var idx${H} = ${N.getByIndices(`indicesIndices${H}`)};
          if (idx${H} < 0) {
            idx${H} = idx${H} + uniforms.axisDimLimit;
          }
          var dataIndices${H} = ${C.type.indices}(0);
        `;for(let J=0,Te=0;J<o;J++)J===i?(P+=`${o>1?`dataIndices${H}[${J}]`:`dataIndices${H}`} = u32(idx${H});`,Te+=ne):(P+=`${o>1?`dataIndices${H}[${J}]`:`dataIndices${H}`} = ${s.length>1?`outputIndices${H}[${Te}]`:`outputIndices${H}`};`,Te++);return P},G;if(r[0].dataType===9){let H=(ne,P,J="")=>`
          let outputIndices${P} = ${k.offsetToIndices(`outputOffset + ${P}u`)};
          ${U(P)};
          let offset${P} = ${C.indicesToOffset(`dataIndices${P}`)};
          let index${P} = offset${P} / 4u;
          let component${P} = offset${P} % 4u;
          ${ne}[${P}] = ${J}(${C.getByOffset(`index${P}`)}[component${P}]);
        `;G=`
        let outputOffset = global_idx * ${u};
        var value = vec4<u32>(0);
        ${H("value",0,"u32")}
        ${H("value",1,"u32")}
        ${H("value",2,"u32")}
        ${H("value",3,"u32")}
        ${k.setByOffset("global_idx","value")}
      `}else G=`
      let outputIndices = ${k.offsetToIndices("global_idx")};
      ${U("")};
      let value = ${C.getByIndices("dataIndices")};
      ${k.setByOffset("global_idx","value")};
      `;return`
      ${O.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(C,N,k)}
      ${O.mainStart()}
        ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${G}
      }`};return{name:"Gather",shaderCache:{hint:e.cacheKey,inputDependencies:x},getRunData:()=>({outputs:[{dims:s,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:T}),getShaderSource:_}},qg=r=>be({axis:r.axis}),jg=(r,e)=>{let n=r.inputs;Q2(n),r.compute(e1(r.inputs,e))}});var t1,r1,Xg,Yg,Zg=B(()=>{"use strict";Re();ot();ke();t1=r=>{if(!r||r.length!==2)throw new Error("GatherElements requires 2 inputs.");if(r[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(r[0].dims.length!==r[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},r1=(r,e)=>{let n=r[0].dims,t=r[0].dataType,o=n.length,i=r[1].dims,s=r[1].dataType,a=V.normalizeAxis(e.axis,o),u=n[a],l=i.slice(0),d=V.size(l),f=W("input",t,o),p=W("indicesInput",s,i.length),g=te("output",t,l.length),b=[{type:"uint32",data:d},{type:"int32",data:u},{type:"uint32",data:a}];return b.push(...ee(n)),b.push(...ee(i)),b.push(...ee(l)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:l,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:b}),getShaderSource:x=>`
      ${x.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(f,p,g)}
      ${x.mainStart()}
      ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${g.offsetToIndices("global_idx")};

      var idx = ${p.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${f.type.indices}(outputIndices);
      ${f.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${f.getByIndices("inputIndices")};

      ${g.setByOffset("global_idx","value")};
  }`}},Xg=r=>be({axis:r.axis}),Yg=(r,e)=>{let n=r.inputs;t1(n),r.compute(r1(r.inputs,e))}});var n1,o1,i1,Jg,Qg,eb=B(()=>{"use strict";Re();ot();ke();n1=r=>{if(!r)throw new Error("Input is missing");if(r.length<2||r.length>3)throw new Error("Invaid input number.");if(r.length===3&&r[2].dims.length>2)throw new Error("Invalid input shape of C");if(r[0].dataType!==r[1].dataType||r.length===3&&r[0].dataType!==r[2].dataType)throw new Error("Input types are mismatched")},o1=(r,e,n)=>{if(n.length===0)return"0u";let t=n.length===1&&r!==1||n.length===2&&n[0]!==r,o=n[n.length-1]!==e,i="0u";return t||(i+=`+ m * ${n[n.length-1]}u`),o||(i+="+n"),i},i1=(r,e)=>{let n=r[0].dims.slice(),t=r[1].dims.slice(),[o,i,s]=Yi.getShapeOfGemmResult(n,e.transA,t,e.transB,r.length===3?r[2].dims:void 0),a=[o,i];if(!a)throw new Error("Can't use gemm on the given tensors");let u=V.size(a),l="";e.transA&&e.transB?l="value += a[k * M + m] * b[n * K + k];":e.transA&&!e.transB?l="value += a[k * M + m] * b[k * N + n];":!e.transA&&e.transB?l="value += a[m * K + k] * b[n * K + k];":!e.transA&&!e.transB&&(l="value += a[m * K + k] * b[k * N + n];");let d=et(r[0].dataType),f=e.alpha===1?"":"value *= alpha;",p=r.length===3?`value += beta * c[${o1(o,i,r[2].dims)}];`:"",g=[`@group(0) @binding(0) var<storage, read> a : array<${d}>;`,`@group(0) @binding(1) var<storage, read> b : array<${d}>;`];r.length===3&&g.push(`@group(0) @binding(2) var<storage, read> c : array<${d}>;`);let b=y=>`
  const M: u32 = ${o}u;
  const N: u32 = ${i}u;
  const K: u32 = ${s}u;
  const alpha = ${d}(${e.alpha});
  const beta = ${d}(${e.beta});

  ${g.join(`
`)}
  @group(0) @binding(${r.length}) var<storage, read_write> output : array<${d}>;

  ${y.mainStart()}
    ${y.guardAgainstOutOfBoundsWorkgroupSizes(u)}

    let m = global_idx / N;
    let n = global_idx % N;

    var value = ${d}(0);
    for (var k: u32 = 0u; k<${s}u; k++) {
      ${l}
    }

    ${f}
    ${p}
    output[global_idx] = value;

  }`;return{name:"Gemm",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:a,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)}}),getShaderSource:b}},Jg=(r,e)=>{n1(r.inputs),r.compute(i1(r.inputs,e))},Qg=r=>be(r)});var a1,s1,u1,l1,tb,rb,nb=B(()=>{"use strict";ut();Re();ot();ke();a1={name:"InstanceNormalization"},s1=(r,e)=>{let n=r[0].dims,t=n,o=2,i=V.sizeToDimension(n,o),s=V.sizeFromDimension(n,o),a=bt(s),u=s/a,l=n[1],d=W("x",r[0].dataType,[n[0],n[1],u],a),f=W("scale",r[1].dataType,r[1].dims),p=W("bias",r[2].dataType,r[2].dims),g=te("output",r[0].dataType,[n[0],n[1],u],a),b=[d,f,p,g],y=d.type.value,T=a===1?"f32":`vec${a}<f32>`,x=64,_=O=>`

  const C: u32 = ${l};
  const normSize: u32 = ${s};
  const epsilon: f32 = ${e.epsilon};
  var<workgroup> meanShared : f32;
  var<workgroup> squaredNormShared : f32;
  var<workgroup> workgroupShared : array<${T}, ${x}>;
  const workgroupSize = ${x}u;
  ${O.declareVariables(...b)}
  ${O.mainStart(x)}
    let norm = global_idx / workgroupSize;
    let batch = norm / C;
    let channel = norm % C;
    let localIndex = local_id.x;

    // initialize workgroup memory
    var initial = ${T}(0);
    for (var h = localIndex; h < ${u}; h += workgroupSize) {
      initial = initial + ${T}(${d.get("batch","channel","h")});
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the mean of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      meanShared = ${zt("workgroupShared[0]",a)} / f32(normSize);
    }
    workgroupBarrier();

    // reinitialize workgroup memory.
    initial = ${T}(0);
    for (var h = localIndex; h < ${u}; h += workgroupSize) {
      let deviation =  ${T}(${d.get("batch","channel","h")}) - ${T}(meanShared);
      initial = initial + deviation * deviation;
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the sum of square of deviation of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      squaredNormShared = ${zt("workgroupShared[0]",a)};
    }
    workgroupBarrier();

    let invStdDev = 1 / sqrt(squaredNormShared / f32(normSize) + epsilon);
    let channelScale = invStdDev * f32(${f.getByOffset("channel")});
    let channelShift = f32(${p.getByOffset("channel")}) - meanShared * channelScale;
    for (var h = localIndex; h < ${u}; h += workgroupSize) {
      let value = ${d.get("batch","channel","h")} * ${y}(${T}(channelScale)) + ${y}(${T}(channelShift));
      ${g.set("batch","channel","h","value")};
    }
  }`;return{...a1,shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:t,dataType:r[0].dataType}],dispatchGroup:{x:i}}),getShaderSource:_}},u1=(r,e,n,t,o,i,s,a)=>{let u=bt(s),l=W("input",e.dataType,e.dims,u),d=W("scale",n.dataType,n.dims,u),f=W("bias",t.dataType,t.dims,u),p=64,g=u===1?"vec2f":`mat2x${u}f`,b=u===1?"f32":`vec${u}f`,y=(N,k)=>`${g}(${N}, ${k})`,T=o*s/u,x=Math.ceil(i/p),_=N=>`
  const H: u32 = ${i};
  const C: u32 = ${s/u};
  const imageSize: u32 = ${i*s/u};

  ${N.declareVariables(l)}
  @group(0) @binding(1) var<storage, read_write> output : array<${g}>;

  ${N.mainStart(p)}
    let currentImageNumber = global_idx / ${p} / C;
    let currentChannelNumber = (global_idx / ${p}) % C;
    let wgId = global_idx % ${p};
    let wgOffset = wgId * ${x};
    if (wgOffset >= H) {
        return;
    }
    let wgMax = min(wgOffset + ${x}, H);

    let offset = currentImageNumber * imageSize + currentChannelNumber;
    var sum = ${Ot("f32",u)};
    var squaredSum = ${Ot("f32",u)};
    for (var i: u32 = wgOffset; i < wgMax; i++) {
        let value = ${b}(input[offset + i * C]);
        sum += value;
        squaredSum += value * value;
    }
    output[global_idx] = ${y("sum","squaredSum")};
  }`,O=r.compute({name:"InstanceNormComputeMean",shaderCache:{hint:JSON.stringify({components:u,n:o,h:i,c:s})},getRunData:()=>({outputs:[{dims:[o,s,p,2],dataType:1}],dispatchGroup:{x:o*s/u}}),getShaderSource:_},{inputs:[e],outputs:[-1]})[0],C=N=>`
  const H: u32 = ${i};
  const C: u32 = ${s/u};
  const imageSize: u32 = ${p*s/u};
  const epsilon: f32 = ${a};

  @group(0) @binding(0) var<storage, read> input : array<${g}>;
  @group(0) @binding(1) var<storage, read> scale : array<${d.type.storage}>;
  @group(0) @binding(2) var<storage, read> bias : array<${f.type.storage}>;
  @group(0) @binding(3) var<storage, read_write> output : array<${g}>;

  ${N.mainStart()}
    ${N.guardAgainstOutOfBoundsWorkgroupSizes(T)}
    let currentImageNumber = global_idx / C;
    let currentChannelNumber = global_idx % C;

    let offset = currentImageNumber * imageSize;
    var sum = ${Ot("f32",u)};
    var squaredSum = ${Ot("f32",u)};
    for (var i: u32 = 0; i < ${p}; i++) {
        let value = input[offset + i + currentChannelNumber * ${p}];
        sum += value[0];
        squaredSum += value[1];
    }
    sum = sum / f32(H);
    squaredSum = squaredSum / f32(H);
    let invStdDev = 1 / sqrt(squaredSum - sum * sum + epsilon);
    let channelScale = invStdDev * ${b}(scale[currentChannelNumber]);
    let channelShift = ${b}(bias[currentChannelNumber]) - sum * channelScale;

    output[global_idx] = ${y("channelScale","channelShift")};
  }`;return r.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:JSON.stringify({components:u,n:o,h:i,c:s,epsilon:a})},getRunData:()=>({outputs:[{dims:[o,s,2],dataType:1}],dispatchGroup:{x:Math.ceil(T/64)}}),getShaderSource:C},{inputs:[O,n,t],outputs:[-1]})[0]},l1=(r,e,n)=>{let t=e[0].dims,o=t,i=t[0],s=t[t.length-1],a=V.sizeFromDimension(t,1)/s,u=bt(s),l=V.size(o)/u,d=W("input",e[0].dataType,e[0].dims,u),f=te("output",e[0].dataType,o,u),p=et(e[0].dataType),g=u===1?"vec2f":`mat2x${u}f`,b=u===1?p:`vec${u}<${p}>`,y=u1(r,e[0],e[1],e[2],i,a,s,n.epsilon),T=x=>`
  const H: u32 = ${a};
  const C: u32 = ${s/u};

  @group(0) @binding(0) var<storage, read> input : array<${d.type.storage}>;
  @group(0) @binding(1) var<storage, read> scaleInput : array<${g}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${f.type.storage}>;

  ${x.mainStart()}
    let currentImageNumber = global_idx / (C * H);
    let currentChannelNumber = global_idx % C;

    let scaleOffset = currentImageNumber * C + currentChannelNumber;
    let scale = scaleInput[scaleOffset];
    output[global_idx] = fma(input[global_idx], ${b}(scale[0]), ${b}(scale[1]));
  }`;r.compute({name:"InstanceNormalization",shaderCache:{hint:`${n.cacheKey}`},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)}}),getShaderSource:T},{inputs:[e[0],y]})},tb=r=>be({epsilon:r.epsilon,format:r.format}),rb=(r,e)=>{e.format==="NHWC"?l1(r,r.inputs,e):r.compute(s1(r.inputs,e))}});var d1,c1,ob,ib,ab=B(()=>{"use strict";ut();Re();ot();ke();d1=r=>{if(!r||r.length<2)throw new Error("layerNorm requires at least 2 inputs.")},c1=(r,e,n)=>{let t=r[0].dims,o=r[1],i=r[2],s=t,a=V.normalizeAxis(e.axis,t.length),u=V.sizeToDimension(t,a),l=V.sizeFromDimension(t,a),d=V.size(o.dims),f=i?V.size(i.dims):0;if(d!==l||i&&f!==l)throw new Error(`Size of X.shape()[axis:] == ${l}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${d} and bias size of ${f}`);let p=[];for(let C=0;C<t.length;++C)C<a?p.push(t[C]):p.push(1);let g=bt(l),b=et(r[0].dataType),y=[W("x",r[0].dataType,r[0].dims,g),W("scale",o.dataType,o.dims,g)];i&&y.push(W("bias",i.dataType,i.dims,g)),y.push(te("output",r[0].dataType,s,g));let T=n>1,x=n>2;T&&y.push(te("meanDataOutput",1,p)),x&&y.push(te("invStdOutput",1,p));let _=C=>`
  const normSize: f32 = ${l};
  const normSizeVectorized: u32 = ${l/g};
  const epsilon: f32 = ${e.epsilon};

  ${C.declareVariables(...y)}
  ${C.mainStart()}
    ${C.guardAgainstOutOfBoundsWorkgroupSizes(u)}
    let offset = global_idx * normSizeVectorized;
    var meanVector = ${Ot("f32",g)};
    var meanSquareVector = ${Ot("f32",g)};

    for (var h: u32 = 0u; h < normSizeVectorized; h++) {
      let value = ${or(b,g,"x[h + offset]")};
      meanVector += value;
      meanSquareVector += value * value;
    }
    let mean = ${zt("meanVector",g)} / normSize;
    let meanSquare = sqrt(${zt("meanSquareVector",g)} 
      / normSize - mean * mean + epsilon);

    for (var j: u32 = 0; j < normSizeVectorized; j++) {
      let f32input = ${or(b,g,"x[j + offset]")};
      let f32scale = ${or(b,g,"scale[j]")};
      output[j + offset] = ${y[0].type.value}((f32input - mean) / meanSquare * f32scale
        ${i?`+ ${or(b,g,"bias[j]")}`:""}
      );
    }

    ${T?"meanDataOutput[global_idx] = mean":""};
    ${x?"invStdOutput[global_idx] = 1 / meanSquare":""};
  }`,O=[{dims:s,dataType:r[0].dataType}];return T&&O.push({dims:p,dataType:1}),x&&O.push({dims:p,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${e.cacheKey}|${n}|${r.length}`},getRunData:()=>({outputs:O,dispatchGroup:{x:Math.ceil(u/64)}}),getShaderSource:_}},ob=r=>be({axis:r.axis,epsilon:r.epsilon}),ib=(r,e)=>{d1(r.inputs),r.compute(c1(r.inputs,e,r.outputCount))}});var f1,ub,sb,p1,mu,lb,db=B(()=>{"use strict";Re();ot();Ki();tu();ke();Ln();f1=(r,e)=>{let n=r[0],t=r[1],o=r[2],i=r[3],s=r[4],a=r[5],u=r[6],l=r[7];if(n.dims.length!==3&&n.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let d=!1,f=n.dims[0],p=n.dims[1],g=n.dims.length===3?d?n.dims[2]/3:n.dims[2]:e.numHeads*n.dims[4],b=p,y=0,T=0,x=Math.floor(g/e.numHeads);if(u&&l){if(u.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(l.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');y=u.dims[2],T=u.dims[2]}else if(u||l)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let _;if(t){if(n.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(t.dims.length<3||t.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(n.dims[0]!==t.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(t.dims.length===3){if(t.dims[2]!==n.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');_=2,b=t.dims[1]}else if(t.dims.length===5){if(t.dims[2]!==e.numHeads||t.dims[3]!==2||t.dims[4]!==x)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(o)throw new Error('Expect "value" be none when "key" has packed kv format.');_=5,b=t.dims[1]}else{if(t.dims[1]!==e.numHeads||t.dims[3]!==x)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');_=0,b=t.dims[2]}}else{if(n.dims.length!==3&&n.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(n.dims.length===5&&(n.dims[2]!==e.numHeads||n.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');_=3}if(i){if(i.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(o&&n.dims.length===5&&n.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let O=0;if(s){O=8;let G=s.dims;throw G.length===1?G[0]===f?O=1:G[0]===3*f+2&&(O=3):G.length===2&&G[0]===f&&G[1]===b&&(O=5),O===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)'):new Error("Mask not supported")}let C=!1,N=g;if(o){if(o.dims.length!==3&&o.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(n.dims[0]!==o.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(o.dims.length===3){if(b!==o.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');N=o.dims[2]}else{if(b!==o.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');N=o.dims[1]*o.dims[3],C=!0}}let k=y+b,U=!1;if(s)throw new Error("Key padding mask is not supported");if(a)throw new Error("extraAddQk is not supported");if(u)throw new Error("pastKey is not supported");if(l)throw new Error("pastValue is not supported");return{batchSize:f,sequenceLength:p,pastSequenceLength:y,kvSequenceLength:b,totalSequenceLength:k,maxSequenceLength:T,inputHiddenSize:0,hiddenSize:g,vHiddenSize:N,headSize:x,vHeadSize:Math.floor(N/e.numHeads),numHeads:e.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:e.maskFilterValue,maskType:O,scale:e.scale,broadcastResPosBias:U,passPastInKv:C,qkvFormat:_}},ub=r=>be({...r}),sb=be({perm:[0,2,1,3]}),p1=(r,e,n,t,o,i,s)=>{let a=[t,o,i],u=V.size(a),l=et(e.dataType),d=f=>`
  const biasOffset = ${s}u;
  const hiddenSize = ${i}u;

  @group(0) @binding(0) var<storage, read> qkv: array<${l}>;
  @group(0) @binding(1) var<storage, read> bias: array<${l}>;
  @group(0) @binding(2) var<storage, read_write> qkv_with_bias: array<${l}>;

  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes(u)}
    let biasOffsetIdx = (global_idx % hiddenSize) + biasOffset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[biasOffsetIdx];
  }`;return r.compute({name:"MultiHeadAttentionAddBias",shaderCache:{hint:JSON.stringify({batchSize:t,sequenceLength:o,hiddenSize:i,biasOffset:s})},getRunData:()=>({outputs:[{dims:a,dataType:e.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(u/64)}}),getShaderSource:d},{inputs:[e,n],outputs:[-1]})[0]},mu=(r,e,n,t,o,i,s,a)=>{let u=i;if(s){if(t===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return u=p1(r,i,s,e,t,n*o,a),u=u.reshape([e,t,n,o]),r.compute(ir(u,sb.perm),{inputs:[u],outputs:[-1]})[0]}else return i.dims.length===3&&(u=i.reshape([e,t,n,o])),r.compute(ir(u,sb.perm),{inputs:[u],outputs:[-1]})[0]},lb=(r,e)=>{let n=f1(r.inputs,e);if(r.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(r.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let t=r.inputs[1]&&r.inputs[2]&&r.inputs[1].dims.length===4&&r.inputs[2].dims.length===4,o=mu(r,n.batchSize,n.numHeads,n.sequenceLength,n.headSize,r.inputs[0],r.inputs[3],0);if(t)return ra(r,o,r.inputs[1],r.inputs[2],r.inputs[4],void 0,void 0,void 0,r.inputs[5],n,e);let i=mu(r,n.batchSize,n.numHeads,n.kvSequenceLength,n.headSize,r.inputs[1],r.inputs[3],n.hiddenSize),s=mu(r,n.batchSize,n.numHeads,n.kvSequenceLength,n.vHeadSize,r.inputs[2],r.inputs[3],2*n.hiddenSize);ra(r,o,i,s,r.inputs[4],void 0,r.inputs[6],r.inputs[7],r.inputs[5],n,e)}});var h1,m1,g1,b1,y1,v1,w1,x1,$1,cb,fb,pb=B(()=>{"use strict";ut();Re();ot();ke();h1=r=>{if(!r||r.length<1)throw new Error("Too few inputs");if(r[0].dataType!==1)throw new Error("Input type must be float.");if(r.length>=2){let e=r[0].dims.length*2===r[1].dims[0];if(r.length===4&&(e=r[3].dims[0]*2===r[1].dims[0]),!e)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},m1=(r,e,n,t,o,i)=>{let s=e.length,a="";for(let u=s-1;u>=0;--u)a+=`
            k = i32(${r.indicesGet("indices",u)}) - ${t[u]};
            if (k < 0) {
              break;
            }
            if (k >= ${e[u]}) {
              break;
            }
            offset += k * ${n[u]};
        `;return`
          value = ${o}(${i});
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${a}
            value = x[offset];
          }
      `},g1=(r,e,n,t)=>{let o=e.length,i="";for(let s=o-1;s>=0;--s)i+=`
                k = i32(${r.indicesGet("indices",s)}) - ${t[s]};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = ${2*(e[s]-1)};
                  k = k % _2n_1;
                  if(k >= ${e[s]}) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * ${n[s]};
            `;return`
              var offset = 0;
              var k = 0;
              ${i}
              value = x[offset];
          `},b1=(r,e,n,t)=>{let o=e.length,i="";for(let s=o-1;s>=0;--s)i+=`
                k = i32(${r.indicesGet("indices",s)}) - ${t[s]};
                if (k < 0) {
                  k = 0;
                }
                if (k >= ${e[s]}) {
                  k = ${e[s]-1};
                }
                offset += k * ${n[s]};
            `;return`
              var offset = 0;
              var k = 0;
              ${i}
              value = x[offset];
          `},y1=(r,e,n,t)=>{let o=e.length,i="";for(let s=o-1;s>=0;--s)i+=`
                k = i32(${r.indicesGet("indices",s)}) - ${t[s]};
                if (k < 0)  {
                  k += ${e[s]};
                }
                if (k >= ${e[s]}) {
                  k -= ${e[s]};
                }
                offset += k * ${n[s]};
            `;return`
              var offset = 0;
              var k = 0;
              ${i}
              value = x[offset];
          `},v1=(r,e,n,t,o)=>{switch(t.mode){case 0:return m1(r,e,n,t.pads,o,t.value);case 1:return g1(r,e,n,t.pads);case 2:return b1(r,e,n,t.pads);case 3:return y1(r,e,n,t.pads);default:throw new Error("Invalid mode")}},w1=(r,e,n,t)=>{let o=e[0].dims,i=V.padShape(o.slice(),n.pads),s=V.size(i),a=V.computeStrides(o),u=te("output",e[0].dataType,i),l=W("x",e[0].dataType,o),d=v1(u,o,a,n,t);return`
              ${r.declareVariables(l,u)}
              ${r.mainStart()}
              ${r.guardAgainstOutOfBoundsWorkgroupSizes(s)}

              let indices = ${u.offsetToIndices("global_idx")};

              var value = ${t}(0);
              ${d}
              output[global_idx] = value;
          }`},x1=(r,e)=>{let n=V.padShape(r[0].dims.slice(),e.pads);return{name:"Pad",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(V.size(n)/64)}}),getShaderSource:t=>w1(t,r,e,"f32")}},$1=(r,e)=>{if(r.length>1){let n=r[1].getBigInt64Array(),t=r.length>=3&&r[2].data?r[2].getFloat32Array()[0]:0,o=r[0].dims.length,i=new Int32Array(2*o).fill(0);if(r.length>=4){let a=r[3].getBigInt64Array();for(let u=0;u<a.length;u++)i[Number(a[u])]=Number(n[u]),i[Number(a[u])+o]=Number(n[u+a.length])}else n.forEach((a,u)=>i[Number(u)]=Number(a));let s=[];return i.forEach(a=>s.push(a)),be({mode:e.mode,value:t,pads:s})}else return e},cb=(r,e)=>{h1(r.inputs);let n=$1(r.inputs,e);r.compute(x1(r.inputs,n),{inputs:[0]})},fb=r=>{let e=r.mode,n=r.value,t=r.pads;return be({mode:e,value:n,pads:t})}});var ca,hb,mb,gb,bb,T1,_1,yb,vb,wb,xb,$b,Tb,_b,Sb,Ib,Ab,Ob,Eb,Cb=B(()=>{"use strict";It();Re();ke();ca=r=>{if(ye.webgpu.validateInputContent&&(!r||r.length!==1))throw new Error("Pool ops requires 1 input.")},hb=(r,e,n)=>{let t=e.format==="NHWC",o=r.dims.slice();t&&o.splice(1,0,o.pop());let i=Object.hasOwnProperty.call(e,"dilations"),s=e.kernelShape.slice(),a=e.strides.slice(),u=i?e.dilations.slice():[],l=e.pads.slice();pn.adjustPoolAttributes(n,o,s,a,u,l);let d=pn.computePoolOutputShape(n,o,a,u,s,l,e.autoPad),f=Object.assign({},e);i?Object.assign(f,{kernelShape:s,strides:a,pads:l,dilations:u,cacheKey:e.cacheKey}):Object.assign(f,{kernelShape:s,strides:a,pads:l,cacheKey:e.cacheKey});let p=d.slice();return p.push(p.splice(1,1)[0]),[f,t?p:d]},mb=(r,e)=>{let n=e.format==="NHWC",t=V.size(r),o=V.size(e.kernelShape),i=[{type:"uint32",data:t},{type:"uint32",data:o}],s=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(e.kernelShape.length<=2){let a=e.kernelShape[e.kernelShape.length-1],u=e.strides[e.strides.length-1],l=e.pads[e.pads.length/2-1],d=e.pads[e.pads.length-1],f=!!(l+d);i.push({type:"uint32",data:a},{type:"uint32",data:u},{type:"uint32",data:l},{type:"uint32",data:d}),s.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let p=!1;if(e.kernelShape.length===2){let g=e.kernelShape[e.kernelShape.length-2],b=e.strides[e.strides.length-2],y=e.pads[e.pads.length/2-2],T=e.pads[e.pads.length-2];p=!!(y+T),i.push({type:"uint32",data:g},{type:"uint32",data:b},{type:"uint32",data:y},{type:"uint32",data:T}),s.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[i,s,!0,f,p]}else{if(n)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let a=V.computeStrides(e.kernelShape);i.push({type:"uint32",data:a},{type:"uint32",data:e.pads},{type:"uint32",data:e.strides}),s.push({name:"kernelStrides",type:"u32",length:a.length},{name:"pads",type:"u32",length:e.pads.length},{name:"strides",type:"u32",length:e.strides.length});let u=e.pads.reduce((l,d)=>l+d);return[i,s,!!u,!1,!1]}},gb=(r,e,n,t,o,i,s,a,u,l,d,f)=>{let p=o.format==="NHWC",g=e.type.value,b=te("output",e.type.tensor,t);if(o.kernelShape.length<=2){let y="",T="",x="",_=n-(p?2:1);if(d?y=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${_}] = indices[${_}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${_}] < 0 || xIndices[${_}]
                      >= uniforms.x_shape[${_}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${e.indicesToOffset("xIndices")}];
                  ${i}
                }`:y=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${_}] = indices[${_}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${e.indicesToOffset("xIndices")}];
                  ${i}
                }`,o.kernelShape.length===2){let C=n-(p?3:2);f?T=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${C}] = indices[${C}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${C}] < 0 || xIndices[${C}] >= uniforms.x_shape[${C}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:T=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${C}] = indices[${C}] * uniforms.sh - uniforms.phStart + j;
                `,x=`
              }
            `}return`
            ${r.registerUniforms(u).declareVariables(e,b)}

            ${r.mainStart()}
              ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${b.offsetToIndices("global_idx")};
              var xIndices = ${b.offsetToIndices("global_idx")};

              var value = ${g}(${a});
              var pad = 0;
              ${T}
              ${y}
              ${x}
              ${s}

              output[global_idx] = value;
            }`}else{if(p)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let y=o.kernelShape.length,T=o.pads.length,x="";return l?x=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${e.indicesToOffset("xIndices")}];
                ${i}
              }`:x=`
              }
              let x_val = x[${e.indicesToOffset("xIndices")}];
              ${i}
            `,`
            ${r.registerUniforms(u).declareVariables(e,b)}

            ${r.mainStart()}
              ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${b.offsetToIndices("global_idx")};
              var xIndices = ${b.offsetToIndices("global_idx")};

              var offsets: array<u32, ${y}>;

              var value = ${g}(${a});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${y-1}u; j++) {
                  offsets[j] = offset / ${qe("uniforms.kernelStrides","j",y)};
                  offset -= offsets[j] * ${qe("uniforms.kernelStrides","j",y)};
                }
                offsets[${y-1}] = offset;

                isPad = false;
                for (var j = ${n-y}u; j < ${n}u; j++) {
                  xIndices[j] = indices[j] * ${qe("uniforms.strides",`j - ${n-y}u`,y)}
                    + offsets[j - ${n-y}u] - ${qe("uniforms.pads","j - 2u",T)};
                  ${x}
              }
              ${s}

              output[global_idx] = value;
            }`}},bb=r=>`${r.format};${r.ceilMode};${r.autoPad};${r.kernelShape.length}`,T1=r=>`${bb(r)};${r.countIncludePad}`,_1=r=>`${bb(r)};${r.storageOrder};${r.dilations}`,yb=r=>({format:r.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][r.auto_pad],ceilMode:r.ceil_mode,kernelShape:r.kernel_shape,strides:r.strides,pads:r.pads}),vb=(r,e,n,t)=>{let[o,i]=hb(e,t,n),s=W("x",e.dataType,e.dims.length),a=s.type.value,u="value += x_val;",l="";o.countIncludePad?l+=`value /= ${a}(uniforms.kernelSize);`:l+=`value /= ${a}(i32(uniforms.kernelSize) - pad);`;let[d,f,p,g,b]=mb(i,o);d.push(...ee(e.dims),...ee(i));let y=["rank"];return{name:r,shaderCache:{hint:`${t.cacheKey};${p};${g};${b}`,inputDependencies:y},getRunData:()=>({outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(V.size(i)/64)},programUniforms:d}),getShaderSource:T=>gb(T,s,e.dims.length,i.length,o,u,l,0,f,p,g,b)}},wb=r=>{let e=r.count_include_pad!==0,n=yb(r);if(n.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let t={countIncludePad:e,...n,cacheKey:""};return{...t,cacheKey:T1(t)}},xb=(r,e)=>{ca(r.inputs),r.compute(vb("AveragePool",r.inputs[0],!1,e))},$b={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},Tb=r=>{let e=r.format;return{format:e,...$b,cacheKey:e}},_b=(r,e)=>{ca(r.inputs),r.compute(vb("GlobalAveragePool",r.inputs[0],!0,e))},Sb=(r,e,n,t)=>{let[o,i]=hb(e,t,n),s=`
      value = max(x_val, value);
    `,a="",u=W("x",e.dataType,e.dims.length),l=["rank"],[d,f,p,g,b]=mb(i,o);return d.push(...ee(e.dims),...ee(i)),{name:r,shaderCache:{hint:`${t.cacheKey};${p};${g};${b}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(V.size(i)/64)},programUniforms:d}),getShaderSource:y=>gb(y,u,e.dims.length,i.length,o,s,a,-1e5,f,p,g,b)}},Ib=(r,e)=>{ca(r.inputs),r.compute(Sb("MaxPool",r.inputs[0],!1,e))},Ab=r=>{let e=r.storage_order,n=r.dilations,t=yb(r);if(e!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(t.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let o={storageOrder:e,dilations:n,...t,cacheKey:""};return{...o,cacheKey:_1(o)}},Ob=r=>{let e=r.format;return{format:e,...$b,cacheKey:e}},Eb=(r,e)=>{ca(r.inputs),r.compute(Sb("GlobalMaxPool",r.inputs[0],!0,e))}});var I1,A1,Pb,kb=B(()=>{"use strict";It();ut();ke();I1=(r,e,n)=>{let t=r===e,o=r<e&&n<0,i=r>e&&n>0;if(t||o||i)throw new Error("Range these inputs' contents are invalid.")},A1=(r,e,n,t)=>{let o=Math.abs(Math.ceil((e-r)/n)),i=[o],s=o,a=te("output",t,i),u=a.type.storage,l=d=>`
        ${d.declareVariables(a)}
        ${d.mainStart()}
        ${d.guardAgainstOutOfBoundsWorkgroupSizes(s)}
        output[global_idx] = ${u}(${r}) + ${u}(global_idx) * ${u}(${n});
      }`;return{name:"Range",shaderCache:{hint:[r,e,n].map(d=>d.toString()).join("_")},getShaderSource:l,getRunData:()=>({outputs:[{dims:i,dataType:t}],dispatchGroup:{x:Math.ceil(s/64)}})}},Pb=r=>{let e=0,n=0,t=0;r.inputs[0].dataType===6?(e=r.inputs[0].getInt32Array()[0],n=r.inputs[1].getInt32Array()[0],t=r.inputs[2].getInt32Array()[0]):r.inputs[0].dataType===1&&(e=r.inputs[0].getFloat32Array()[0],n=r.inputs[1].getFloat32Array()[0],t=r.inputs[2].getFloat32Array()[0]),ye.webgpu.validateInputContent&&I1(e,n,t),r.compute(A1(e,n,t,r.inputs[0].dataType),{inputs:[]})}});var O1,E1,C1,P1,k1,D1,B1,R1,M1,L1,z1,Db,N1,F1,V1,G1,U1,Bb,Rb,Mb=B(()=>{"use strict";Re();ot();ke();O1=(r,e)=>{if(r.every(n=>n>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),r.length>0){if(e.mode==="linear"){if(!(r.length===2||r.length===3||r.length===4&&r[0]===1&&r[1]===1||r.length===4&&r[0]===1&&r[3]===1||r.length===5&&r[0]===1&&r[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(e.mode==="cubic"&&!(r.length===2||r.length===4&&r[0]===1&&r[1]===1||r.length===4&&r[0]===1&&r[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},E1=(r,e,n)=>{e.every(o=>o>=0&&o<n||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let t=new Array(n).fill(1);return e.forEach((o,i)=>t[o]=r[i]),t},C1=(r,e,n,t,o,i)=>{let[s,a,u]=n>10?[1,2,3]:[-1,r.length>1?1:-1,-1],l=r[0].dims.length;if(s>0&&r.length>s&&r[s].dims.length>0)r[s].getFloat32Array().forEach(d=>i.push(d));else if(e.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(a>0&&r.length>a&&r[a].dims.length>0){if(r[a].getFloat32Array().forEach(d=>t.push(d)),t.length!==0&&t.length!==l&&n>=18&&t.length!==e.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");O1(t,e),e.axes.length>0&&E1(t,e.axes,l).forEach((d,f)=>t[f]=d)}if(u>0&&r.length>u&&(r[u].getBigInt64Array().forEach(d=>o.push(Number(d))),o.length!==l||n>=18&&o.length===e.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(e.axes.length>0){if(t.length!==e.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(o.length!==e.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof t<"u"&&typeof o<"u"&&t.length>0&&o.length>l)throw new Error("Resize requires only of scales or sizes to be specified")},P1=(r,e)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: ${e}, lengthResized: u32,
     lengthOriginal: u32, roiStart: ${e}, roiEnd: ${e}) -> ${e} { `+(()=>{switch(r){case"asymmetric":return`return ${e}(xResized) / xScale;`;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${e}(xResized) + 0.5) / xScale - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${e}(xResized) + 0.5) / xScale;`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating
                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
                    // offset-by-one error later in floor().
                    let whole = ${e}(xResized * (lengthOriginal - 1) / (lengthResized - 1));
                    let fract =
                        ${e}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${e}(lengthResized - 1);
                    return whole + fract;
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return roiStart * ${e}(lengthOriginal - 1) +
                        (${e}(xResized) * (roiEnd - roiStart) * ${e}(lengthOriginal - 1)) /
                        ${e}(lengthResized - 1);
                  } else {
                    return 0.5 * (roiStart + roiEnd) * ${e}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = xScale * ${e}(lengthResized);
                  const adjustment = ${e}(lengthResized) / outputWidth;
                  const center = ${e}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${e}(xResized) + 0.5) / xScale) - 0.5;`;case"half_pixel":return`return ((${e}(xResized) + 0.5) / xScale) - 0.5;`;default:throw new Error(`Coordinate transform mode ${r} is not supported`)}})()+"}",k1=(r,e,n)=>`fn getNearestPixelFromOriginal(xOriginal: ${n}, isDownSample: bool) -> ${n} {`+(()=>{switch(r){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(e<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${r} is not supported`)}})()+"}",D1=(r,e,n)=>{let t=new Array(n).fill(0).concat(new Array(n).fill(1)),o=r.length===0?t:r.slice();return e.length>0?(e.forEach((i,s)=>{t[i]=o[s],t[s+n]=o[e.length+s]}),t):o},B1=(r,e,n,t)=>{let o=[];if(n.length>0)if(t.length>0){if(r.forEach(i=>o.push(i)),Math.max(...t)>r.length)throw new Error("axes is out of bound");t.forEach((i,s)=>o[i]=n[s])}else n.forEach(i=>o.push(i));else{if(e.length===0)throw new Error("Resize requires either scales or sizes.");o=r.map((i,s)=>Math.round(i*e[s]))}return o},R1=(r,e,n)=>{let t=(()=>{switch(n.keepAspectRatioPolicy){case"not_larger":return n.axes.length>0?Math.min(...n.axes.map(i=>e[i]),Number.MAX_VALUE):Math.min(...e,Number.MAX_VALUE);case"not_smaller":return n.axes.length>0?Math.max(...n.axes.map(i=>e[i]),Number.MIN_VALUE):Math.max(...e,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${n.keepAspectRatioPolicy} is not supported`)}})();e.fill(1,0,e.length);let o=r.slice();return n.axes.length>0?(n.axes.forEach(i=>e[i]=t),n.axes.forEach(i=>o[i]=Math.round(r[i]*e[i]))):(e.fill(t,0,e.length),o.forEach((i,s)=>o[s]=Math.round(i*e[s]))),o},M1=(r,e,n,t,o)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${r.type.indices}) -> array<${r.type.value}, ${n.length}> {
      var original_indices: array<${r.type.value}, ${n.length}>;
      for (var i:u32 = 0; i < ${n.length}; i++) {
        var output_index = ${r.indicesGet("output_indices","i")};
        var scale = ${qe("uniforms.scales","i",t)};
        var roi_low = ${qe("uniforms.roi","i",o)};
        var roi_hi = ${qe("uniforms.roi",`i + ${e.length}`,o)};
        if (scale == 1.0) {
          original_indices[i] = ${r.type.value}(output_index);
        } else {
          var input_shape_i = ${qe("uniforms.input_shape","i",e.length)};
          var output_shape_i = ${qe("uniforms.output_shape","i",n.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,L1=(r,e,n,t,o,i,s)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> ${r.type.indices} {
      var input_indices: ${r.type.indices};
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${qe("uniforms.scales","i",o)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${qe("uniforms.roi","i",i)};
          var roi_hi = ${qe("uniforms.roi",`i + ${n.length}`,i)};
          var input_shape_i = ${qe("uniforms.input_shape","i",n.length)};
          var output_shape_i = ${qe("uniforms.output_shape","i",t.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${s} || (original_idx >= 0 && original_idx < ${e.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${e.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${r.indicesSet("input_indices","i"," input_index")}
      }
      return input_indices;
    }`,z1=(r,e)=>`
    fn checkInputIndices(input_indices: ${r.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${e.length}; i++) {
        var input_index = ${r.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${qe("uniforms.input_shape","i",e.length)}) {
          return false;
        }
      }
      return true;
    }`,Db=(r,e,n,t)=>r.rank>t?`
    ${r.indicesSet("input_indices",e,"channel")};
    ${r.indicesSet("input_indices",n,"batch")};
`:"",N1=(r,e,n,t,o)=>{let[s,a,u,l]=n.length===2?[-1,0,1,-1]:[0,2,3,1],d=r.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${d} {
      var input_indices: ${r.type.indices};
      ${r.indicesSet("input_indices",a,`max(0, min(row, ${n[a]} - 1))`)};
      ${r.indicesSet("input_indices",u,`max(0, min(col, ${n[u]} - 1))`)};
      ${Db(r,l,s,2)}
      return ${r.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${e.type.indices}) -> ${d} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${d} = originalIndices[${a}];
      var col:${d} = originalIndices[${u}];
      ${t?`if (row < 0 || row > (${n[a]} - 1) || col < 0 || col > (${n[u]} - 1)) {
        return ${o};
      }`:""};
      row = max(0, min(row, ${n[a]} - 1));
      col = max(0, min(col, ${n[u]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${n.length>2?`u32(originalIndices[${l}])`:"0"};
      var batch: u32 =  ${n.length>2?`u32(originalIndices[${s}])`:"0"};
      var x11: ${d} = getInputValue(batch, channel, row1, col1);
      var x12: ${d} = getInputValue(batch, channel, row1, col2);
      var x21: ${d} = getInputValue(batch, channel, row2, col1);
      var x22: ${d} = getInputValue(batch, channel, row2, col2);
      var dx1: ${d} = abs(row - ${d}(row1));
      var dx2: ${d} = abs(${d}(row2) - row);
      var dy1: ${d} = abs(col - ${d}(col1));
      var dy2: ${d} = abs(${d}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},F1=(r,e,n,t,o,i,s,a,u,l)=>{let d=n.length===2,f=!0,[p,g]=d?[0,1]:f?[2,3]:[1,2],b=r.type.value,y=T=>{let x=T===p?"row":"col";return`
      fn ${x}CubicInterpolation(input_indices: ${r.type.indices}, output_indices: ${e.type.indices}) -> ${b} {
        var output_index = ${e.indicesGet("output_indices",T)};
        var originalIdx: ${b} = getOriginalCoordinateFromResizedCoordinate(output_index, ${o[T]},
        ${t[T]}, ${n[T]}, ${i[T]}, ${i[T]} + ${n.length});
        var fractOriginalIdx: ${b} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${a} && (originalIdx < 0 || originalIdx > (${n[T]} - 1))) {
          return ${u};
        }
        var data: array<${b}, 4> = array<${b}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${x}: ${b} = originalIdx + ${b}(i);
          if (${x} < 0 || ${x} >= ${n[T]}) {
            ${(()=>l?`coefs[i + 1] = 0.0;
                        continue;`:a?`return ${u};`:`${x} = max(0, min(${x}, ${n[T]} - 1));`)()};
          }
        var input_indices_copy: ${r.type.indices} = input_indices;
          ${r.indicesSet("input_indices_copy",T,`u32(${x})`)};
          data[i + 1] = ${T===p?r.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${y(p)};
    ${y(g)};
  fn getCubicInterpolationCoefs(s: ${b}) -> array<${b}, 4> {
    var absS = abs(s);
    var coeffs: array<${b}, 4> = array<${b}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${b} = 1.0 - absS;
    var twoMinusAbsS: ${b} = 2.0 - absS;
    var onePlusAbsS: ${b} = 1.0 + absS;
    coeffs[0] = ((${s} * onePlusAbsS - 5 * ${s}) * onePlusAbsS + 8 * ${s}) * onePlusAbsS - 4 * ${s};
    coeffs[1] = ((${s} + 2) * absS - (${s} + 3)) * absS * absS + 1;
    coeffs[2] = ((${s} + 2) * oneMinusAbsS - (${s} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${s} * twoMinusAbsS - 5 * ${s}) * twoMinusAbsS + 8 * ${s}) * twoMinusAbsS - 4 * ${s};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${b}, 4>, coefs: array<${b}, 4>) -> ${b} {
    var coefsSum: ${b} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${e.type.indices}) -> ${b} {
    var input_indices: ${r.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},V1=(r,e,n,t,o)=>{let[s,a,u,l,d]=n.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],f=r.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${f} {
      var input_indices: ${r.type.indices};
      ${r.indicesSet("input_indices",a,`max(0, min(depth, ${n[a]} - 1))`)};
      ${r.indicesSet("input_indices",u,`max(0, min(height, ${n[u]} - 1))`)};
      ${r.indicesSet("input_indices",l,`max(0, min(width, ${n[l]} - 1))`)};
      ${Db(r,d,s,3)}
      return ${r.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${e.type.indices}) -> ${f} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${f} = originalIndices[${a}];
      var height:${f} = originalIndices[${u}];
      var width:${f} = originalIndices[${l}];
      ${t?`if (depth < 0 || depth > (${n[a]} - 1) || height < 0 || height > (${n[u]} - 1) || width < 0 || (width > ${n[l]} - 1)) {
      return ${o};
        }`:""};

    depth = max(0, min(depth, ${n[a]} - 1));
      height = max(0, min(height, ${n[u]} - 1));
      width = max(0, min(width, ${n[l]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${n.length>3?`u32(originalIndices[${d}])`:"0"};
      var batch: u32 =  ${n.length>3?`u32(originalIndices[${s}])`:"0"};

      var x111: ${f} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${f} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${f} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${f} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${f} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${f} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${f} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${f} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${f} = abs(depth - ${f}(depth1));
      var dx2: ${f} = abs(${f}(depth2) - depth);
      var dy1: ${f} = abs(height - ${f}(height1));
      var dy2: ${f} = abs(${f}(height2) - height);
      var dz1: ${f} = abs(width - ${f}(width1));
      var dz2: ${f} = abs(${f}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},G1=(r,e,n,t,o,i)=>{let s=r.dims,a=D1(i,e.axes,s.length),u=B1(s,t,o,e.axes),l=t.slice();t.length===0&&(l=s.map((_,O)=>_===0?1:u[O]/_),e.keepAspectRatioPolicy!=="stretch"&&(u=R1(s,l,e)));let d=te("output",r.dataType,u.length),f=W("input",r.dataType,s.length),p=V.size(u),g=s.length===u.length&&s.every((_,O)=>_===u[O]),b=e.coordinateTransformMode==="tf_crop_and_resize",y=e.extrapolationValue,T=f.type.value,x=_=>`
      ${g?"":`
      ${P1(e.coordinateTransformMode,T)};
      ${(()=>{switch(e.mode){case"nearest":return`
              ${z1(f,s)};
              ${k1(e.nearestMode,n,T)};
              ${L1(f,d,s,u,l.length,a.length,b)};
              `;case"linear":return`
              ${M1(d,s,u,l.length,a.length)};
              ${(()=>{if(s.length===2||s.length===4)return`${N1(f,d,s,b,y)}`;if(s.length===3||s.length===5)return`${V1(f,d,s,b,y)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(s.length===2||s.length===4)return`${F1(f,d,s,u,l,a,e.cubicCoeffA,b,e.extrapolationValue,e.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${_.registerUniform("output_size","u32").registerUniform("scales","f32",l.length).registerUniform("roi","f32",a.length).declareVariables(f,d)}
      ${_.mainStart()}
        ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${g?"output[global_idx] = input[global_idx];":`
        let output_indices = ${d.offsetToIndices("global_idx")};
        var input_indices: ${f.type.indices};
        ${(()=>{switch(e.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${f.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${e.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${s.length===2||s.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${e.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${e.cacheKey}|${n}|${l.length>0?l:""}|${o.length>0?o:""}|${a.length>0?a:""}|${g}|${s}`,inputDependencies:["rank"]},getShaderSource:x,getRunData:()=>({outputs:[{dims:u,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:[{type:"uint32",data:p},{type:"float32",data:l},{type:"float32",data:a},...ee(s),...ee(u)]})}},U1=r=>{let e=r.customDataBuffer;return new Uint32Array(e,e.byteOffset,1)[0]},Bb=(r,e)=>{let n=[],t=[],o=[],i=U1(r);if(e.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");C1(r.inputs,e,i,n,t,o),r.compute(G1(r.inputs[0],e,i,n,t,o),{inputs:[0]})},Rb=r=>{let e=r.antialias,n=r.axes,t=r.coordinateTransformMode,o=r.cubicCoeffA,i=r.excludeOutside!==0,s=r.extrapolationValue,a=r.keepAspectRatioPolicy,u=r.mode,l=r.nearestMode===""?"simple":r.nearestMode;return be({antialias:e,axes:n,coordinateTransformMode:t,cubicCoeffA:o,excludeOutside:i,extrapolationValue:s,keepAspectRatioPolicy:a,mode:u,nearestMode:l})}});var W1,H1,Lb,zb,Nb=B(()=>{"use strict";ut();Re();ot();ke();W1=r=>{if(!r||r.length<3)throw new Error("layerNorm requires at least 3 inputs.");let e=r[0],n=r[1],t=r[2];if(e.dataType!==n.dataType||e.dataType!==t.dataType)throw new Error("All inputs must have the same data type");if(e.dims.length!==3&&e.dims.length!==2)throw new Error("Input must be 2D or 3D");if(n.dims.length!==3&&n.dims.length!==2)throw new Error("Skip must be 2D or 3D");let o=e.dims[e.dims.length-1],i=e.dims[e.dims.length-2];if(n.dims[n.dims.length-1]!==o)throw new Error("Skip must have the same hidden size as input");if(n.dims[n.dims.length-2]!==i)throw new Error("Skip must have the same sequence length as input");if(t.dims.length!==1)throw new Error("Gamma must be 1D");if(t.dims[t.dims.length-1]!==o)throw new Error("Gamma must have the same hidden size as input");if(r.length>3){let s=r[3];if(s.dims.length!==1)throw new Error("Beta must be 1D");if(s.dims[s.dims.length-1]!==o)throw new Error("Beta must have the same hidden size as input")}if(r.length>4){let s=r[4];if(s.dims.length!==1)throw new Error("Bias must be 1D");if(s.dims[s.dims.length-1]!==o)throw new Error("Bias must have the same hidden size as input")}},H1=(r,e,n,t)=>{let o=r[0].dims,i=V.size(o),s=o,a=i,u=o.slice(-1)[0],l=t?o.slice(0,-1).concat(1):[],d=r.length>3,f=r.length>4,p=t&&n>1,g=t&&n>2,b=n>3,y=bt(u),T=[W("x",r[0].dataType,r[0].dims,y),W("skip",r[1].dataType,r[1].dims,y),W("gamma",r[2].dataType,r[2].dims,y)];d&&T.push(W("beta",r[3].dataType,r[3].dims,y)),f&&T.push(W("bias",r[4].dataType,r[4].dims,y)),T.push(te("output",r[0].dataType,s,y)),p&&T.push(te("meanOutput",1,l)),g&&T.push(te("invStdOutput",1,l)),b&&T.push(te("inputSkipBiasSum",r[0].dataType,s,y));let x=et(r[0].dataType),_=C=>`
      const hiddenSize: f32 = ${u};
      const hiddenSizeVectorized: u32 = ${u/y};
      const epsilon: f32 = ${e.epsilon};

      ${C.declareVariables(...T)}

      ${C.mainStart()}
        ${C.guardAgainstOutOfBoundsWorkgroupSizes(a/u)}
        let offset = global_idx * hiddenSizeVectorized;
        var sum = ${Ot("f32",y)};
        var squareSum = ${Ot("f32",y)};
        for (var i: u32 = 0; i < hiddenSizeVectorized; i++) {
          let skipValue = skip[offset + i];
          let biasValue = ${f?"bias[i]":"0.0"};
          let inputValue = x[offset + i];
          let value = inputValue + skipValue + biasValue;
          ${b?"inputSkipBiasSum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32Value = ${or(x,y,"value")};
          sum += f32Value;
          squareSum += f32Value * f32Value;
        }
        let mean = ${zt("sum",y)} / hiddenSize;
        let variance = sqrt(${zt("squareSum",y)} / hiddenSize - mean * mean + epsilon);
        ${p?"meanOutput[global_idx] = mean;":""}
        ${g?"invStdOutput[global_idx] = 1.0 / variance;":""}
        for (var i: u32 = 0; i < hiddenSizeVectorized; i++) {
          output[offset + i] = (output[offset + i] - ${x}(mean)) / ${x}(variance) * gamma[i]
           + ${d?"beta[i]":"0.0"};
        }
      }`,O=[{dims:s,dataType:r[0].dataType}];return n>1&&O.push({dims:l,dataType:1}),n>2&&O.push({dims:l,dataType:1}),n>3&&O.push({dims:o,dataType:r[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:e.cacheKey},getShaderSource:_,getRunData:()=>({outputs:O,dispatchGroup:{x:Math.ceil(a/u/64)}})}},Lb=(r,e)=>{W1(r.inputs);let t=[0];r.outputCount>1&&t.push(-3),r.outputCount>2&&t.push(-3),r.outputCount>3&&t.push(3),r.compute(H1(r.inputs,e,r.outputCount,!1),{outputs:t})},zb=r=>{let e=r.epsilon;return be({epsilon:e})}});var q1,fa,j1,Fb,K1,X1,Vb,Gb,Ub=B(()=>{"use strict";ut();Re();ot();ke();q1=(r,e)=>{if(!r||r.length<1)throw new Error("too few inputs");if(e.axes.length!==0){if(e.axes.length!==e.starts.length||e.axes.length!==e.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(e.starts.length!==e.ends.length)throw new Error("starts and ends must have the same length");r.slice(1).forEach((n,t)=>{if(r[t+1].dataType!==6&&r[t+1].dataType!==7)throw new Error(`Input ${t} must be an array of int32 or int64`)})},fa=(r,e)=>{let n=[];if(r.length>e)if(r[e].dataType===7)r[e].getBigInt64Array().forEach(t=>n.push(Number(t)));else if(r[e].dataType===6)r[e].getInt32Array().forEach(t=>n.push(Number(t)));else throw new Error(`Input ${e} must be an array of int32 or int64`);return n},j1=(r,e)=>{if(r.length>1){let n=fa(r,1),t=fa(r,2),o=fa(r,3);return o.length===0&&(o=[...Array(r[0].dims.length).keys()]),be({starts:n,ends:t,axes:o})}else return e},Fb=(r,e,n,t,o)=>{let i=r;return r<0&&(i+=n[t[e]]),o[e]<0?Math.max(0,Math.min(i,n[t[e]]-1)):Math.max(0,Math.min(i,n[t[e]]))},K1=(r,e,n)=>`fn calculateInputIndices(output_indices: ${e.type.indices}) -> ${r.type.indices} {
          var input_indices: ${r.type.indices};
          var carry = 0u;
          for (var i = ${n.length}; i >= 0; i--) {
            let input_shape_i = ${qe("uniforms.input_shape","i",n.length)};
            let steps_i = ${qe("uniforms.steps","i",n.length)};
            let signs_i = ${qe("uniforms.signs","i",n.length)};
            let starts_i = ${qe("uniforms.starts","i",n.length)};
            var output_index = ${e.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${r.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,X1=(r,e)=>{let n=r[0].dims,t=V.size(n),o=e.axes.length>0?V.normalizeAxes(e.axes,n.length):[...Array(n.length).keys()],i=fa(r,4);i.forEach(x=>x!==0||(()=>{throw new Error("step cannot be 0")})),i.length===0&&(i=Array(o.length).fill(1));let s=e.starts.map((x,_)=>Fb(x,_,n,o,i)),a=e.ends.map((x,_)=>Fb(x,_,n,o,i));if(o.length!==s.length||o.length!==a.length)throw new Error("start, ends and axes should have the same number of elements");if(o.length!==n.length)for(let x=0;x<n.length;++x)o.includes(x)||(s.splice(x,0,0),a.splice(x,0,n[x]),i.splice(x,0,1));let u=i.map(x=>Math.sign(x));i.forEach((x,_,O)=>{if(x<0){let C=(a[_]-s[_])/x,N=s[_],k=N+C*i[_];s[_]=k,a[_]=N,O[_]=-x}});let l=n.slice(0);o.forEach((x,_)=>{l[x]=Math.ceil((a[x]-s[x])/i[x])});let d={dims:l,dataType:r[0].dataType},f=te("output",r[0].dataType,l.length),p=W("input",r[0].dataType,r[0].dims.length),g=V.size(l),b=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:s.length},{name:"signs",type:"i32",length:u.length},{name:"steps",type:"u32",length:i.length}],y=[{type:"uint32",data:g},{type:"uint32",data:s},{type:"int32",data:u},{type:"uint32",data:i},...ee(r[0].dims),...ee(l)],T=x=>`
      ${x.registerUniforms(b).declareVariables(p,f)}
        ${K1(p,f,n)}
        ${x.mainStart()}
          ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${f.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${f.setByOffset("global_idx",p.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${u.length}_${s.length}_${i.length}`,inputDependencies:["rank"]},getShaderSource:T,getRunData:()=>({outputs:[d],dispatchGroup:{x:Math.ceil(t/64)},programUniforms:y})}},Vb=(r,e)=>{q1(r.inputs,e);let n=j1(r.inputs,e);r.compute(X1(r.inputs,n),{inputs:[0]})},Gb=r=>{let e=r.starts,n=r.ends,t=r.axes;return be({starts:e,ends:n,axes:t})}});var Y1,Z1,Wb,Hb,qb=B(()=>{"use strict";Re();ot();ke();Y1=r=>{if(!r||r.length!==1)throw new Error("Softmax op requires 1 input.")},Z1=(r,e)=>{let n=r.dims,t=V.size(n),o=64,i=e.axis;if(i<0&&(i=n.length+i),i<n.length-1)throw new Error("softmax only supports last axis for now.");let s=n[i],a=t/s,u=bt(s),l=s/u,d=(T,x)=>x===4?`max(max(${T}.x, ${T}.y), max(${T}.z, ${T}.w))`:x===2?`max(${T}.x, ${T}.y)`:x===3?`max(max(${T}.x, ${T}.y), ${T}.z)`:T,f=W("x",r.dataType,r.dims,u),p=te("result",r.dataType,r.dims,u),g=f.type.value,b=et(r.dataType)==="f32"?`var threadMax = ${g}(-3.402823e+38f);`:`var threadMax = ${g}(-65504.0h);`,y=T=>`
      var<workgroup> rowMaxShared : ${g};
      var<workgroup> rowSumShared : ${g};
      var<workgroup> threadShared : array<${g}, ${o}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${g} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${g}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${T.registerUniform("packedCols","i32").declareVariables(f,p)}
      ${T.mainStart()}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${o};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${b}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${g}(${d("threadShared[0]",u)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${g}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${g}(${zt("threadShared[0]",u)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`;return{name:"Softmax",shaderCache:{hint:`${u}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:n,dataType:r.dataType}],dispatchGroup:{x:a},programUniforms:[{type:"uint32",data:l}]}),getShaderSource:y}},Wb=(r,e)=>{Y1(r.inputs),r.compute(Z1(r.inputs[0],e))},Hb=r=>be({axis:r.axis})});var J1,Q1,e$,t$,r$,jb,Kb,Xb=B(()=>{"use strict";Re();ot();ke();J1=r=>{if(!r||r.length<1)throw new Error("too few inputs")},Q1=(r,e)=>{let n=[],t=e.numOutputs;return r[1].dims[0]>0&&(r[1].getBigInt64Array().forEach(o=>n.push(Number(o))),t=n.length),be({numOutputs:t,axis:e.axis,splitSizes:n})},e$=r=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${r}u; i += 1u ) {
    if (index < ${qe("uniforms.size_in_split_axis","i",r)}) {
        return i;
    }
    }
    return ${r}u;
}`,t$=r=>{let e=r.length,n=[];for(let t=0;t<e;++t){let o=r[t].setByIndices("indices","input[global_idx]");e===1?n.push(o):t===0?n.push(`if (output_number == ${t}u) { ${o} }`):t===e-1?n.push(`else { ${o} }`):n.push(`else if (output_number == ${t}) { ${o} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${r[0].type.indices}, global_idx: u32) {
        ${n.join(`
`)}
      }`},r$=(r,e)=>{let n=r[0].dims,t=V.size(n),o=r[0].dataType,i=V.normalizeAxis(e.axis,n.length),s=new Array(e.numOutputs),a=W("input",o,n),u=new Array(e.numOutputs),l=[],d=[],f=0,p=[{type:"uint32",data:t}];for(let b=0;b<e.numOutputs;b++){f+=e.splitSizes[b],u[b]=f;let y=n.slice();y[e.axis]=e.splitSizes[b],d.push(y),s[b]=te(`output${b}`,o,y),l.push({dims:d[b],dataType:r[0].dataType})}p.push({type:"uint32",data:u}),p.push(...ee(n)),d.forEach(b=>p.push(...ee(b)));let g=b=>`
  ${b.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",u.length).declareVariables(a,...s)}
  ${e$(u.length)}
  ${t$(s)}

  ${b.mainStart()}
    ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${a.offsetToIndices("global_idx")};
    var index = ${a.indicesGet("indices",i)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${qe("uniforms.size_in_split_axis","output_number - 1u",u.length)};
      ${a.indicesSet("indices",i,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:e.cacheKey,inputDependencies:["rank"]},getShaderSource:g,getRunData:()=>({outputs:l,dispatchGroup:{x:Math.ceil(t/64)},programUniforms:p})}},jb=(r,e)=>{J1(r.inputs);let n=r.inputs.length===1?e:Q1(r.inputs,e);r.compute(r$(r.inputs,n),{inputs:[0]})},Kb=r=>{let e=r.axis,n=r.splitSizes,t=r.numOutputs<0?n.length:r.numOutputs;if(t!==n.length)throw new Error("numOutputs and splitSizes lengh must be equal");return be({axis:e,numOutputs:t,splitSizes:n})}});var Yb,n$,o$,i$,Zb,Jb=B(()=>{"use strict";ut();Re();ke();Yb=r=>Array.from(r.getBigInt64Array(),Number),n$=r=>{if(!r||r.length!==2)throw new Error("Tile requires 2 inputs.");if(r[0].dataType!==1&&r[0].dataType!==6&&r[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(r[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(r[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Yb(r[1]).length!==r[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},o$=(r,e)=>{let n=[];for(let t=0;t<r.length;++t)n.push(r[t]*e[t]);return n},i$=r=>{let e=r[0].dims,n=Yb(r[1]),t=o$(e,n),o=V.size(t),i=r[0].dataType,s=W("input",i,e.length),a=te("output",i,t.length),u=l=>`
      const inputShape = ${s.indices(...e)};
      ${l.registerUniform("output_size","u32").declareVariables(s,a)}
      ${l.mainStart()}
      ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${a.offsetToIndices("global_idx")};
      var input_indices: ${s.type.indices};
      for (var i = 0; i < ${e.length}; i++) {
        let input_dim_i = ${s.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${a.indicesGet("output_indices","i")}  % input_dim_i;

        ${s.indicesSet("input_indices","i","input_dim_value")}
      }
      ${a.setByOffset("global_idx",s.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${n}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:[{type:"uint32",data:o},...ee(r[0].dims),...ee(t)]}),getShaderSource:u}},Zb=r=>{n$(r.inputs),r.compute(i$(r.inputs),{inputs:[0]})}});var a$,s$,Qb,ey=B(()=>{"use strict";ut();Re();ke();a$=(r,e,n,t,o)=>{let i=te("output_data",o,n.length,4),s=W("a_data",e[1].dataType,e[1].dims.length,4),a=W("b_data",e[2].dataType,e[2].dims.length,4),u=W("c_data",e[0].dataType,e[0].dims.length,4),l,d=(f,p,g)=>`select(${p}, ${f}, ${g})`;if(!t)l=i.setByOffset("global_idx",d(s.getByOffset("global_idx"),a.getByOffset("global_idx"),u.getByOffset("global_idx")));else{let f=(p,g,b="")=>{let y=`a_data[index_a${g}][component_a${g}]`,T=`b_data[index_b${g}][component_b${g}]`,x=`bool(c_data[index_c${g}] & ${4278190080>>>(3-g)*8}u)`;return`
            let output_indices${g} = ${i.offsetToIndices(`global_idx * 4u + ${g}u`)};
            let offset_a${g} = ${s.broadcastedIndicesToOffset(`output_indices${g}`,i)};
            let offset_b${g} = ${a.broadcastedIndicesToOffset(`output_indices${g}`,i)};
            let offset_c${g} = ${u.broadcastedIndicesToOffset(`output_indices${g}`,i)};
            let index_a${g} = offset_a${g} / 4u;
            let index_b${g} = offset_b${g} / 4u;
            let index_c${g} = offset_c${g} / 4u;
            let component_a${g} = offset_a${g} % 4u;
            let component_b${g} = offset_b${g} % 4u;
            ${p}[${g}] = ${b}(${d(y,T,x)});
          `};o===9?l=`
            var data = vec4<u32>(0);
            ${f("data",0,"u32")}
            ${f("data",1,"u32")}
            ${f("data",2,"u32")}
            ${f("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:l=`
            ${f("output_data[global_idx]",0)}
            ${f("output_data[global_idx]",1)}
            ${f("output_data[global_idx]",2)}
            ${f("output_data[global_idx]",3)}
          `}return`
        ${r.registerUniform("vec_size","u32").declareVariables(u,s,a,i)}
        ${r.mainStart()}
        ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${l}
      }`},s$=r=>{let e=r[1].dims,n=r[2].dims,t=r[0].dims,o=r[1].dataType,i=!(V.areEqual(e,n)&&V.areEqual(n,t)),s=e,a=V.size(e),u=Math.ceil(a/4);if(i){let l=gr.calcShape(gr.calcShape(e,n,!1),t,!1);if(!l)throw new Error("Can't perform where op on the given tensors");s=l,a=V.size(s)}return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:l=>a$(l,r,s,i,o),getRunData:()=>({outputs:[{dims:s,dataType:o}],dispatchGroup:{x:Math.ceil(a/64/4)},programUniforms:[{type:"uint32",data:u},...ee(t),...ee(e),...ee(n),...ee(s)]})}},Qb=r=>{r.compute(s$(r.inputs))}});var ty,ry=B(()=>{"use strict";xm();tu();Sm();Am();ag();bg();wg();au();Bg();Lg();Gg();Hg();Kg();Zg();eb();nb();ab();uu();db();pb();Cb();kb();ea();Mb();Nb();Ub();qb();Xb();Jb();Ln();ru();ey();ty=new Map([["Abs",[Om]],["Acos",[Em]],["Acosh",[Cm]],["Add",[sg]],["ArgMax",[wm,eu]],["ArgMin",[vm,eu]],["Asin",[Pm]],["Asinh",[km]],["Atan",[Dm]],["Atanh",[Bm]],["Attention",[Tm,$m]],["AveragePool",[xb,wb]],["BatchNormalization",[_m]],["BiasAdd",[Im]],["BiasSplitGelu",[ig]],["Cast",[Mm,Rm]],["Ceil",[zm]],["Clip",[Lm]],["Concat",[yg,vg]],["Conv",[du,lu]],["ConvTranspose",[Dg,kg]],["Cos",[Nm]],["Cosh",[Fm]],["CumSum",[Rg,Mg]],["Div",[ug]],["Einsum",[Fg,Vg]],["Elu",[Vm,na]],["Equal",[lg]],["Erf",[Gm]],["Exp",[Um]],["Expand",[Wg]],["Floor",[Wm]],["FusedConv",[du,lu]],["Gather",[jg,qg]],["GatherElements",[Yg,Xg]],["Gelu",[Hm]],["Gemm",[Jg,Qg]],["GlobalAveragePool",[_b,Tb]],["GlobalMaxPool",[Eb,Ob]],["Greater",[pg]],["GreaterOrEqual",[mg]],["InstanceNormalization",[rb,tb]],["LayerNormalization",[ib,ob]],["LeakyRelu",[qm,na]],["Less",[hg]],["LessOrEqual",[gg]],["Log",[og]],["MatMul",[Sg]],["MaxPool",[Ib,Ab]],["Mul",[dg]],["MultiHeadAttention",[lb,ub]],["Neg",[Km]],["Not",[jm]],["Pad",[cb,fb]],["Pow",[cg]],["Range",[Pb]],["Reciprocal",[Xm]],["ReduceMin",[pm]],["ReduceMean",[um]],["ReduceMax",[fm]],["ReduceSum",[mm]],["ReduceProd",[hm]],["ReduceL1",[lm]],["ReduceL2",[dm]],["ReduceLogSum",[bm]],["ReduceLogSumExp",[cm]],["ReduceSumSquare",[gm]],["Relu",[Ym]],["Resize",[Bb,Rb]],["Sigmoid",[Zm]],["Sin",[Jm]],["Sinh",[Qm]],["Slice",[Vb,Gb]],["SkipLayerNormalization",[Lb,zb]],["Split",[jb,Kb]],["Sqrt",[eg]],["Softmax",[Wb,Hb]],["Sub",[fg]],["Tan",[tg]],["Tanh",[rg]],["ThresholdedRelu",[ng,na]],["Tile",[Zb]],["Transpose",[Xh,Yh]],["Where",[Qb]]])});var pa,ny=B(()=>{"use strict";It();ut();Vr();ke();pa=class{constructor(e){this.backend=e;this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,n){this.repo.set(e,n)}run(e,n,t,o,i,s,a){Vt(e.programInfo.name);let u=this.backend.device,l=this.backend.getComputePassEncoder();l.setPipeline(e.computePipeline);let d=[];for(let p of o)d.push({binding:d.length,resource:{buffer:p.buffer}});for(let p of i)d.push({binding:d.length,resource:{buffer:p.buffer}});a&&d.push({binding:d.length,resource:a});let f=u.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:d,label:e.programInfo.name});if(l.setBindGroup(0,f),l.dispatchWorkgroups(...s),this.backend.pendingDispatchNumber++,this.backend.isQueryEnabled()){typeof this.backend.queryData>"u"&&(this.backend.queryData=this.backend.gpuDataManager.create(this.backend.querySetCount*8,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE));let p=this.backend.gpuDataManager.create(this.backend.querySetCount*8,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.backend.endComputePass(),this.backend.getCommandEncoder().resolveQuerySet(this.backend.querySet,0,2,this.backend.queryData.buffer,0),this.backend.getCommandEncoder().copyBufferToBuffer(this.backend.queryData.buffer,0,p.buffer,0,this.backend.querySetCount*8),this.backend.flush();let g=this.backend.currentKernelId,b=this.backend.kernels.get(g);p.buffer.mapAsync(GPUMapMode.READ).then(()=>{let y=new BigUint64Array(p.buffer.getMappedRange()),[T,x]=y,[_,O]=b;p.buffer.unmap(),typeof this.backend.queryTimeBase>"u"&&(this.backend.queryTimeBase=T);let C=Number(T-this.backend.queryTimeBase),N=Number(x-this.backend.queryTimeBase);if(!Number.isSafeInteger(C)||!Number.isSafeInteger(N))throw new RangeError("incorrect timestamp range");if(this.backend.gpuDataManager.release(p.id),this.backend.env.webgpu.profiling?.ondata)this.backend.env.webgpu.profiling.ondata({version:1,inputsMetadata:n.map(k=>({dims:k.dims,dataType:fn(k.dataType)})),outputsMetadata:t.map(k=>({dims:k.dims,dataType:fn(k.dataType)})),kernelId:g,kernelType:_,kernelName:O,startTime:C,endTime:N});else{let k="";n.forEach((G,H)=>{k+=`input[${H}]: [${G.dims}] | ${fn(G.dataType)}, `});let U="";t.forEach((G,H)=>{U+=`output[${H}]: [${G.dims}] | ${fn(G.dataType)}, `}),console.log(`[profiling] kernel "${g}|${O}|${e.programInfo.name}" ${k}${U}execution time: ${N-C} ns`)}})}this.backend.pendingDispatchNumber>=16&&this.backend.flush(),Gt(e.programInfo.name)}dispose(){}build(e,n){Vt(e.name);let t=this.backend.device,o=[];t.features.has("shader-f16")&&o.push("enable f16;");let i=jh(n),s=e.getShaderSource(i),a=`${o.join(`
`)}
${i.additionalImplementations}
${s}`,u=t.createShaderModule({code:a,label:e.name});nt("verbose",()=>`[WebGPU] ${e.name} shader code: ${a}`);let l=t.createComputePipeline({compute:{module:u,entryPoint:"main"},layout:"auto",label:e.name});return Gt(e.name),{programInfo:e,computePipeline:l}}normalizeDispatchGroupSize(e){let n=typeof e=="number"?e:e.x,t=typeof e=="number"?1:e.y||1,o=typeof e=="number"?1:e.z||1,i=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(n<=i&&t<=i&&o<=i)return[n,t,o];let s=n*t*o,a=Math.ceil(Math.sqrt(s));if(a>i){if(a=Math.ceil(Math.cbrt(s)),a>i)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[a,a,a]}else return[a,a,1]}}});var u$,l$,ha,oy=B(()=>{"use strict";It();Vr();Gh();qh();ry();ny();u$=(r,e)=>{if(e.length!==r.length)throw new Error(`inputDependencies length ${e.length} is not equal to inputTensors length ${r.length}.`);let n=[];for(let t=0;t<r.length;++t){let o=r[t].dataType;switch(e[t]){case"none":{n.push("");break}case"type":{n.push(`${o}`);break}case"rank":{let i=r[t].dims.length;n.push(`${o};${i}`);break}case"dims":{let i=r[t].dims.join(",");n.push(`${o};${i}`);break}default:throw new Error(`unsupported input dependency: ${e[t]}`)}}return n.join("|")},l$=(r,e,n)=>{let t=r.name;return r.shaderCache?.hint&&(t+="["+r.shaderCache.hint+"]"),t+=":"+n+`:${u$(e,r.shaderCache?.inputDependencies??new Array(e.length).fill("dims"))}`,t},ha=class{constructor(){this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.pendingDispatchNumber=0;this.querySetCount=2;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,n){this.env=e;let t=[],o={requiredLimits:{maxComputeWorkgroupStorageSize:n.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:n.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:n.limits.maxStorageBufferBindingSize,maxBufferSize:n.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:n.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:n.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:n.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:n.limits.maxComputeWorkgroupSizeZ},requiredFeatures:t};n.features.has("timestamp-query")&&t.push("timestamp-query"),n.features.has("shader-f16")&&t.push("shader-f16"),this.device=await n.requestDevice(o),this.gpuDataManager=Hh(this),this.programManager=new pa(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Fh(e.logLevel,!!e.debug),this.device.onuncapturederror=i=>{i.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${i.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device})}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e={};this.isQueryEnabled()&&(typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),e.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1}),this.computePassEncoder=this.getCommandEncoder().beginComputePass(e)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){this.commandEncoder&&(this.endComputePass(),this.device.queue.submit([this.getCommandEncoder().finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0)}isQueryEnabled(){return this.device.features.has("timestamp-query")&&(this.env.webgpu.profiling?.mode==="default"||!this.env.webgpu.profiling?.mode&&this.env.webgpu.profilingMode==="default")}run(e,n,t,o,i){Vt(e.name);let s=[];for(let _=0;_<n.length;++_){let O=this.gpuDataManager.get(n[_].data);if(!O)throw new Error(`no GPU data for input: ${n[_].data}`);s[_]=O}let{outputs:a,dispatchGroup:u,programUniforms:l}=e.getRunData(n),d=t.length===0?a.map((_,O)=>O):t;if(d.length!==a.length)throw new Error(`Output size ${d.length} must be equal to ${a.length}.`);let f=[],p=[];for(let _=0;_<a.length;++_){if(!Number.isInteger(d[_])||d[_]<-3||d[_]>=a.length)throw new Error(`Invalid output index: ${d[_]}`);if(d[_]===-3)continue;let O=d[_]===-1,C=d[_]===-2,N=O||C?i(a[_].dataType,a[_].dims):o(d[_],a[_].dataType,a[_].dims),k=this.gpuDataManager.get(N.data);if(!k)throw new Error(`no GPU data for output: ${N.data}`);if(O&&this.temporaryData.push(k),C){let U=this.kernelPersistentData.get(this.currentKernelId);U||(U=[],this.kernelPersistentData.set(this.currentKernelId,U)),U.push(k)}f.push(N),p.push(k)}let g;if(l){let _=0,O=[];l.forEach(U=>{let G=typeof U.data=="number"?[U.data]:U.data;if(G.length===0)return;let H=G.length<=2?G.length*4:16;_=Math.ceil(_/H)*H,O.push(_),_+=G.length>4?Math.ceil(G.length/4)*16:G.length*4});let C=16;_=Math.ceil(_/C)*C;let N=new ArrayBuffer(_);l.forEach((U,G)=>{let H=O[G],ne=typeof U.data=="number"?[U.data]:U.data;U.type==="int32"?new Int32Array(N,H,ne.length).set(ne):U.type==="uint32"?new Uint32Array(N,H,ne.length).set(ne):new Float32Array(N,H,ne.length).set(ne)});let k=this.gpuDataManager.create(_,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(k.buffer,0,N,0,_),this.gpuDataManager.release(k.id),g={offset:0,size:_,buffer:k.buffer}}let b=this.programManager.normalizeDispatchGroupSize(u),y=b[1]===1&&b[2]===1,T=l$(e,n,y),x=this.programManager.getArtifact(T);return x||(x=this.programManager.build(e,b),this.programManager.setArtifact(T,x),nt("info",()=>`[artifact] key: ${T}, programName: ${e.name}`)),nt("info",()=>`[ProgramManager] run "${e.name}" (key=${T}) with ${b[0]}x${b[1]}x${b[2]}`),this.programManager.run(x,n,f,s,p,b,g),Gt(e.name),f}upload(e,n){this.gpuDataManager.upload(e,n)}memcpy(e,n){this.gpuDataManager.memcpy(e,n)}async download(e,n){await this.gpuDataManager.download(e,n)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,n,t,o){let i=ty.get(e);if(!i)throw new Error(`kernel not implemented: ${e}`);this.kernels.set(n,[e,o,i[0],[i[1],t]])}releaseKernel(e){let n=this.kernelPersistentData.get(e);if(n){for(let t of n)this.gpuDataManager.release(t.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,n,t){let o=this.kernels.get(e);if(!o)throw new Error(`kernel not created: ${e}`);let[i,s,a,u]=o;if(this.currentKernelId!==null)throw new Error(`kernel "[${i}] ${s}" is not allowed to be called recursively`);this.currentKernelId=e,u[0]&&(u[1]=u[0](u[1]),u[0]=void 0),nt("info",()=>`[WebGPU] Start to run kernel "[${i}] ${s}"...`);let l=this.env.debug;this.temporaryData=[];try{return l&&this.device.pushErrorScope("validation"),a(n,u[1]),0}catch(d){return t.push(Promise.resolve(`[WebGPU] Kernel "[${i}] ${s}" failed. ${d}`)),1}finally{l&&t.push(this.device.popErrorScope().then(d=>d?`GPU validation error for kernel "[${i}] ${s}": ${d.message}`:null));for(let d of this.temporaryData)this.gpuDataManager.release(d.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,n,t,o){let i=this.sessionExternalDataMapping.get(e);i||(i=new Map,this.sessionExternalDataMapping.set(e,i));let s=i.get(n),a=this.gpuDataManager.registerExternalBuffer(t,o,s?.[1]);return i.set(n,[a,t]),a}unregisterBuffers(e){let n=this.sessionExternalDataMapping.get(e);n&&(n.forEach(t=>this.gpuDataManager.unregisterExternalBuffer(t[1])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let n=this.gpuDataManager.get(e);if(!n)throw new Error(`no GPU data for buffer: ${e}`);return n.buffer}createDownloader(e,n,t){return async()=>{let o=await js(this,e,n);return Vh(o.buffer,t)}}}});var iy={};Br(iy,{init:()=>d$});var Io,gu,d$,ay=B(()=>{"use strict";ut();oy();Vr();Re();Io=class r{constructor(e,n,t,o){this.module=e;this.dataType=n;this.data=t;this.dims=o}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let e=V.size(this.dims);return e===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,e)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let e=V.size(this.dims);return e===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,e)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let e=V.size(this.dims);return e===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,e)}reshape(e){if(V.size(e)!==V.size(this.dims))throw new Error("Invalid new shape");return new r(this.module,this.dataType,this.data,e)}},gu=class{constructor(e,n,t){this.module=e;this.backend=n;this.customDataOffset=0;this.customDataSize=0;let o=e.HEAPU32,i=t>>>2;this.opKernelContext=o[i++];let s=o[i++];this.outputCount=o[i++],this.customDataOffset=o[i++],this.customDataSize=o[i++];let a=[];for(let u=0;u<s;u++){let l=o[i++],d=o[i++],f=o[i++],p=[];for(let g=0;g<f;g++)p.push(o[i++]);a.push(new Io(e,l,d,p))}this.inputs=a}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(e,n){let t=n?.inputs?.map(a=>typeof a=="number"?this.inputs[a]:a)??this.inputs,o=n?.outputs??[],i=(a,u,l)=>new Io(this.module,u,this.output(a,l),l),s=(a,u)=>{let l=xo(a);if(!l)throw new Error(`Unsupported data type: ${a}`);let d=l*V.size(u);return new Io(this.module,a,this.backend.gpuDataManager.create(d).id,u)};return this.backend.run(e,t,o,i,s)}output(e,n){let t=this.module.stackSave();try{let o=this.module.stackAlloc((1+n.length)*4),i=o>>2;this.module.HEAPU32[i++]=n.length;for(let s=0;s<n.length;s++)this.module.HEAPU32[i++]=n[s];return this.module._JsepOutput(this.opKernelContext,e,o)}catch(o){throw new Error(`Failed to generate kernel's output[${e}] with dims [${n}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${o}`)}finally{this.module.stackRestore(t)}}},d$=async(r,e,n)=>{let t=r.jsepInit;if(!t)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");let o=new ha;await o.initialize(e,n),t(o,i=>o.alloc(i),i=>o.free(i),(i,s,a,u=!1)=>{if(u)nt("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${i}, dst=${s}, size=${a}`),o.memcpy(i,s);else{nt("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${i}, gpuDataId=${s}, size=${a}`);let l=r.HEAPU8.subarray(i,i+a);o.upload(s,l)}},async(i,s,a)=>{nt("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${i}, dataOffset=${s}, size=${a}`),await o.download(i,()=>r.HEAPU8.subarray(s,s+a))},(i,s,a)=>o.createKernel(i,s,a,e.debug||o.isQueryEnabled()?r.UTF8ToString(r._JsepGetNodeName(s)):`${s}`),i=>o.releaseKernel(i),(i,s,a,u)=>{nt("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${a}, kernel=${i}, contextDataOffset=${s}`);let l=new gu(r,o,s);return o.computeKernel(i,l,u)})}});var c$,uy,ly,Ao,f$,bu,dy,cy,sy,fy,py,hy,my=B(()=>{"use strict";Rh();Lh();ut();Rn();Hi();c$=(r,e)=>{st()._OrtInit(r,e)!==0&&Qe("Can't initialize onnxruntime.")},uy=async r=>{c$(r.wasm.numThreads,$o(r.logLevel))},ly=async(r,e)=>{if(e==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let n=await navigator.gpu.requestAdapter();if(!n)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.');if(!r.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");let t=(ay(),Ar(iy)).init;await t(st(),r,n)}},Ao=new Map,f$=r=>{let e=st(),n=e.stackSave();try{let t=e.stackAlloc(8);return e._OrtGetInputOutputCount(r,t,t+4)!==0&&Qe("Can't get session input/output count."),[e.HEAP32[t/4],e.HEAP32[t/4+1]]}finally{e.stackRestore(n)}},bu=r=>{let e=st(),n=e._malloc(r.byteLength);if(n===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${r.byteLength}.`);return e.HEAPU8.set(r,n),[n,r.byteLength]},dy=(r,e)=>{let n,t,o=st();Array.isArray(r)?[n,t]=r:r.buffer===o.HEAPU8.buffer?[n,t]=[r.byteOffset,r.byteLength]:[n,t]=bu(r);let i=0,s=0,a=0,u=[],l=[],d=[];try{[s,u]=Mh(e),i=o._OrtCreateSession(n,t,s),i===0&&Qe("Can't create a session.");let[f,p]=f$(i),g=[],b=[],y=[];for(let x=0;x<f;x++){let _=o._OrtGetInputName(i,x);_===0&&Qe("Can't get an input name."),l.push(_),g.push(o.UTF8ToString(_))}for(let x=0;x<p;x++){let _=o._OrtGetOutputName(i,x);_===0&&Qe("Can't get an output name."),d.push(_);let O=o.UTF8ToString(_);b.push(O);{let C=typeof e?.preferredOutputLocation=="string"?e.preferredOutputLocation:e?.preferredOutputLocation?.[O]??"cpu";if(C!=="cpu"&&C!=="cpu-pinned"&&C!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${C}.`);y.push(C)}}let T=null;return y.some(x=>x==="gpu-buffer")&&(a=o._OrtCreateBinding(i),a===0&&Qe("Can't create IO binding."),T={handle:a,outputPreferredLocations:y,outputPreferredLocationsEncoded:y.map(x=>Hs(x))}),Ao.set(i,[i,l,d,T]),[i,g,b]}catch(f){throw l.forEach(p=>o._OrtFree(p)),d.forEach(p=>o._OrtFree(p)),a!==0&&o._OrtReleaseBinding(a),i!==0&&o._OrtReleaseSession(i),f}finally{o._free(n),s!==0&&o._OrtReleaseSessionOptions(s),u.forEach(f=>o._free(f))}},cy=r=>{let e=st(),n=Ao.get(r);if(!n)throw new Error(`cannot release session. invalid session id: ${r}`);let[t,o,i,s]=n;s&&e._OrtReleaseBinding(s.handle),e.jsepUnregisterBuffers?.(r),o.forEach(a=>e._OrtFree(a)),i.forEach(a=>e._OrtFree(a)),e._OrtReleaseSession(t),Ao.delete(r)},sy=(r,e,n,t,o)=>{if(!r){e.push(0);return}let i=st(),s=r[0],a=r[1],u=r[3],l,d;if(s==="string"&&u==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(u==="gpu-buffer"){let g=r[2].gpuBuffer,b=xo(Ws(s));d=a.reduce((y,T)=>y*T,1)*b,l=i.jsepRegisterBuffer(t,o,g,d)}else{let g=r[2];if(Array.isArray(g)){d=4*g.length,l=i._malloc(d),n.push(l);let b=l/4;for(let y=0;y<g.length;y++){if(typeof g[y]!="string")throw new TypeError(`tensor data at index ${y} is not a string`);i.HEAPU32[b++]=pt(g[y],n)}}else d=g.byteLength,l=i._malloc(d),n.push(l),i.HEAPU8.set(new Uint8Array(g.buffer,g.byteOffset,d),l)}let f=i.stackSave(),p=i.stackAlloc(4*a.length);try{let g=p/4;a.forEach(y=>i.HEAP32[g++]=y);let b=i._OrtCreateTensor(Ws(s),l,d,p,a.length,Hs(u));b===0&&Qe(`Can't create tensor for input/output. session=${t}, index=${o}.`),e.push(b)}finally{i.stackRestore(f)}},fy=async(r,e,n,t,o,i)=>{let s=st(),a=Ao.get(r);if(!a)throw new Error(`cannot run inference. invalid session id: ${r}`);let[u,l,d,f]=a,p=e.length,g=t.length,b=0,y=[],T=[],x=[],_=[],O=s.stackSave(),C=s.stackAlloc(p*4),N=s.stackAlloc(p*4),k=s.stackAlloc(g*4),U=s.stackAlloc(g*4);try{[b,y]=Bh(i);for(let se=0;se<p;se++)sy(n[se],T,_,r,e[se]);for(let se=0;se<g;se++)sy(o[se],x,_,r,p+t[se]);let G=C/4,H=N/4,ne=k/4,P=U/4;for(let se=0;se<p;se++)s.HEAPU32[G++]=T[se],s.HEAPU32[H++]=l[e[se]];for(let se=0;se<g;se++)s.HEAPU32[ne++]=x[se],s.HEAPU32[P++]=d[t[se]];if(f){let{handle:se,outputPreferredLocations:De,outputPreferredLocationsEncoded:re}=f;if(l.length!==p)throw new Error(`input count from feeds (${p}) is expected to be always equal to model's input count (${l.length}).`);for(let Ce=0;Ce<p;Ce++){let Ne=e[Ce];await s._OrtBindInput(se,l[Ne],T[Ce])!==0&&Qe(`Can't bind input[${Ce}] for session=${r}.`)}for(let Ce=0;Ce<g;Ce++){let Ne=t[Ce];o[Ce]?.[3]?s._OrtBindOutput(se,d[Ne],x[Ce],0)!==0&&Qe(`Can't bind pre-allocated output[${Ce}] for session=${r}.`):s._OrtBindOutput(se,d[Ne],0,re[Ne])!==0&&Qe(`Can't bind output[${Ce}] to ${De[Ce]} for session=${r}.`)}}let J;f?J=await s._OrtRunWithBinding(u,f.handle,g,k,b):J=await s._OrtRun(u,N,C,p,U,g,k,b),J!==0&&Qe("failed to call OrtRun().");let Te=[];for(let se=0;se<g;se++){let De=s.HEAPU32[k/4+se];if(De===x[se]){Te.push(o[se]);continue}let re=s.stackSave(),Ce=s.stackAlloc(4*4),Ne=!1,Se,$e=0;try{s._OrtGetTensorData(De,Ce,Ce+4,Ce+8,Ce+12)!==0&&Qe(`Can't access output tensor data on index ${se}.`);let it=Ce/4,yt=s.HEAPU32[it++];$e=s.HEAPU32[it++];let X=s.HEAPU32[it++],ie=s.HEAPU32[it++],Ie=[];for(let at=0;at<ie;at++)Ie.push(s.HEAPU32[X/4+at]);s._OrtFree(X);let Tt=Ie.reduce((at,vt)=>at*vt,1);Se=fn(yt);let Bt=f?.outputPreferredLocations[t[se]];if(Se==="string"){if(Bt==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let at=[],vt=$e/4;for(let Et=0;Et<Tt;Et++){let ar=s.HEAPU32[vt++],Nt=Et===Tt-1?void 0:s.HEAPU32[vt]-ar;at.push(s.UTF8ToString(ar,Nt))}Te.push([Se,Ie,at,"cpu"])}else if(Bt==="gpu-buffer"&&Tt>0){let at=s.jsepGetBuffer($e),vt=xo(yt);if(vt===void 0||!ji(Se))throw new Error(`Unsupported data type: ${Se}`);Ne=!0,Te.push([Se,Ie,{gpuBuffer:at,download:s.jsepCreateDownloader(at,Tt*vt,Se),dispose:()=>{s._OrtReleaseTensor(De)}},"gpu-buffer"])}else{let at=qi(Se),vt=new at(Tt);new Uint8Array(vt.buffer,vt.byteOffset,vt.byteLength).set(s.HEAPU8.subarray($e,$e+vt.byteLength)),Te.push([Se,Ie,vt,"cpu"])}}finally{s.stackRestore(re),Se==="string"&&$e&&s._free($e),Ne||s._OrtReleaseTensor(De)}}return f&&s._OrtClearBoundOutputs(f.handle),Te}finally{s.stackRestore(O),T.forEach(G=>s._OrtReleaseTensor(G)),x.forEach(G=>s._OrtReleaseTensor(G)),_.forEach(G=>s._free(G)),b!==0&&s._OrtReleaseRunOptions(b),y.forEach(G=>s._free(G))}},py=r=>{let e=st(),n=Ao.get(r);if(!n)throw new Error("invalid session id");let t=n[0],o=e._OrtEndProfiling(t);o===0&&Qe("Can't get an profile file name."),e._OrtFree(o)},hy=r=>{let e=[];for(let n of r){let t=n[2];!Array.isArray(t)&&"buffer"in t&&e.push(t.buffer)}return e}});var gy=Xe(($M,h$)=>{h$.exports='/*!\n * ONNX Runtime Web v1.17.0\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n"use strict";(()=>{var gn=Object.defineProperty;var Lu=Object.getOwnPropertyDescriptor;var Fu=Object.getOwnPropertyNames;var qu=Object.prototype.hasOwnProperty;var K=(e,t)=>()=>(e&&(t=e(e=0)),t);var dr=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),Dr=(e,t)=>{for(var r in t)gn(e,r,{get:t[r],enumerable:!0})},ju=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of Fu(t))!qu.call(e,n)&&n!==r&&gn(e,n,{get:()=>t[n],enumerable:!(o=Lu(t,n))||o.enumerable});return e};var Wt=e=>ju(gn({},"__esModule",{value:!0}),e);var yn={};Dr(yn,{readFile:()=>Ku});var Ku,bn=K(()=>{Ku=void 0});var wn={};Dr(wn,{join:()=>Yu});var Yu,vn=K(()=>{Yu=void 0});var xo=dr((So,$n)=>{"use strict";var $o=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){var r=t,o,n;r.ready=new Promise((d,m)=>{o=d,n=m}),r.jsepInit=(d,m,w,_,O,F,H,de)=>{r.Za=d,r.Oa=m,r.Qa=w,r.Ja=_,r.Pa=O,r.ra=F,r.Ra=H,r.Sa=de,m=(J,ae,te)=>(...ge)=>{let Se=Qe,k=ae?.();ge=J(...ge);let ue=ae?.();return k!==ue&&(J=ue,te(k),ae=te=null),Qe!=Se?Ir():ge},w=J=>async(...ae)=>{try{if(r.Da)throw Error("Session already started");let te=r.Da={Ta:ae[0],errors:[]},ge=await J(...ae);if(r.Da!==te)throw Error("Session mismatch");d.flush();let Se=te.errors;if(0<Se.length){let k=await Promise.all(Se);if(k=k.filter(ue=>ue),0<k.length)throw Error(k.join(`\n`))}return ge}finally{r.Da=null}},r._OrtRun=w(m(r._OrtRun,()=>r._OrtRun,J=>r._OrtRun=J)),r._OrtRunWithBinding=w(m(r._OrtRunWithBinding,()=>r._OrtRunWithBinding,J=>r._OrtRunWithBinding=J)),r._OrtBindInput=m(r._OrtBindInput,()=>r._OrtBindInput,J=>r._OrtBindInput=J),r.jsepRegisterBuffer=(J,ae,te,ge)=>d.registerBuffer(J,ae,te,ge),r.jsepUnregisterBuffers=J=>{d.unregisterBuffers(J)},r.jsepGetBuffer=J=>d.getBuffer(J),r.jsepCreateDownloader=(J,ae,te)=>d.createDownloader(J,ae,te)};var s=Object.assign({},r),u="./this.program",l=(d,m)=>{throw m},a=typeof window=="object",p=typeof importScripts=="function",h=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",y="",g,v,b;if(h){var x=(bn(),Wt(yn)),I=(vn(),Wt(wn));y=p?I.dirname(y)+"/":__dirname+"/",g=(d,m)=>(d=d.startsWith("file://")?new URL(d):I.normalize(d),x.readFileSync(d,m?void 0:"utf8")),b=d=>(d=g(d,!0),d.buffer||(d=new Uint8Array(d)),d),v=(d,m,w,_=!0)=>{d=d.startsWith("file://")?new URL(d):I.normalize(d),x.readFile(d,_?void 0:"utf8",(O,F)=>{O?w(O):m(_?F.buffer:F)})},!r.thisProgram&&1<process.argv.length&&(u=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),l=(d,m)=>{throw process.exitCode=d,m},r.inspect=()=>"[Emscripten Module object]"}else(a||p)&&(p?y=self.location.href:typeof document<"u"&&document.currentScript&&(y=document.currentScript.src),e&&(y=e),y.indexOf("blob:")!==0?y=y.substr(0,y.replace(/[?#].*/,"").lastIndexOf("/")+1):y="",g=d=>{var m=new XMLHttpRequest;return m.open("GET",d,!1),m.send(null),m.responseText},p&&(b=d=>{var m=new XMLHttpRequest;return m.open("GET",d,!1),m.responseType="arraybuffer",m.send(null),new Uint8Array(m.response)}),v=(d,m,w)=>{var _=new XMLHttpRequest;_.open("GET",d,!0),_.responseType="arraybuffer",_.onload=()=>{_.status==200||_.status==0&&_.response?m(_.response):w()},_.onerror=w,_.send(null)});var $=r.print||console.log.bind(console),C=r.printErr||console.error.bind(console);Object.assign(r,s),s=null,r.thisProgram&&(u=r.thisProgram),r.quit&&(l=r.quit);var P;r.wasmBinary&&(P=r.wasmBinary);var A=r.noExitRuntime||!0;typeof WebAssembly!="object"&&He("no native wasm support detected");var z,T,N=!1,U,G,Q,B,q,pe,ee;function we(){var d=z.buffer;r.HEAP8=G=new Int8Array(d),r.HEAP16=new Int16Array(d),r.HEAP32=B=new Int32Array(d),r.HEAPU8=Q=new Uint8Array(d),r.HEAPU16=new Uint16Array(d),r.HEAPU32=q=new Uint32Array(d),r.HEAPF32=pe=new Float32Array(d),r.HEAPF64=ee=new Float64Array(d)}var Z=[],ye=[],Ce=[];function fe(){var d=r.preRun.shift();Z.unshift(d)}var ce=0,We=null,Be=null;function He(d){throw r.onAbort&&r.onAbort(d),d="Aborted("+d+")",C(d),N=!0,U=1,d=new WebAssembly.RuntimeError(d+". Build with -sASSERTIONS for more info."),n(d),d}function L(d){return d.startsWith("data:application/octet-stream;base64,")}var X;if(X="ort-wasm-simd.wasm",!L(X)){var he=X;X=r.locateFile?r.locateFile(he,y):y+he}function Fe(d){if(d==X&&P)return new Uint8Array(P);if(b)return b(d);throw"both async and sync fetching of the wasm failed"}function Ze(d){if(!P&&(a||p)){if(typeof fetch=="function"&&!d.startsWith("file://"))return fetch(d,{credentials:"same-origin"}).then(m=>{if(!m.ok)throw"failed to load wasm binary file at \'"+d+"\'";return m.arrayBuffer()}).catch(()=>Fe(d));if(v)return new Promise((m,w)=>{v(d,_=>m(new Uint8Array(_)),w)})}return Promise.resolve().then(()=>Fe(d))}function Me(d,m,w){return Ze(d).then(_=>WebAssembly.instantiate(_,m)).then(_=>_).then(w,_=>{C("failed to asynchronously prepare wasm: "+_),He(_)})}function Ge(d,m){var w=X;return P||typeof WebAssembly.instantiateStreaming!="function"||L(w)||w.startsWith("file://")||h||typeof fetch!="function"?Me(w,d,m):fetch(w,{credentials:"same-origin"}).then(_=>WebAssembly.instantiateStreaming(_,d).then(m,function(O){return C("wasm streaming compile failed: "+O),C("falling back to ArrayBuffer instantiation"),Me(w,d,m)}))}var Ke,nt={923216:d=>{r.ra("Abs",d,void 0)},923267:d=>{r.ra("Neg",d,void 0)},923318:d=>{r.ra("Floor",d,void 0)},923371:d=>{r.ra("Ceil",d,void 0)},923423:d=>{r.ra("Reciprocal",d,void 0)},923481:d=>{r.ra("Sqrt",d,void 0)},923533:d=>{r.ra("Exp",d,void 0)},923584:d=>{r.ra("Erf",d,void 0)},923635:d=>{r.ra("Sigmoid",d,void 0)},923690:d=>{r.ra("Log",d,void 0)},923741:d=>{r.ra("Sin",d,void 0)},923792:d=>{r.ra("Cos",d,void 0)},923843:d=>{r.ra("Tan",d,void 0)},923894:d=>{r.ra("Asin",d,void 0)},923946:d=>{r.ra("Acos",d,void 0)},923998:d=>{r.ra("Atan",d,void 0)},924050:d=>{r.ra("Sinh",d,void 0)},924102:d=>{r.ra("Cosh",d,void 0)},924154:d=>{r.ra("Asinh",d,void 0)},924207:d=>{r.ra("Acosh",d,void 0)},924260:d=>{r.ra("Atanh",d,void 0)},924313:d=>{r.ra("Tanh",d,void 0)},924365:d=>{r.ra("Not",d,void 0)},924416:(d,m,w)=>{r.ra("Clip",d,{min:m,max:w})},924485:d=>{r.ra("Clip",d,void 0)},924537:(d,m)=>{r.ra("Elu",d,{alpha:m})},924595:d=>{r.ra("Relu",d,void 0)},924647:(d,m)=>{r.ra("LeakyRelu",d,{alpha:m})},924711:(d,m)=>{r.ra("ThresholdedRelu",d,{alpha:m})},924781:(d,m)=>{r.ra("Cast",d,{to:m})},924839:d=>{r.ra("Add",d,void 0)},924890:d=>{r.ra("Sub",d,void 0)},924941:d=>{r.ra("Mul",d,void 0)},924992:d=>{r.ra("Div",d,void 0)},925043:d=>{r.ra("Pow",d,void 0)},925094:d=>{r.ra("Equal",d,void 0)},925147:d=>{r.ra("Greater",d,void 0)},925202:d=>{r.ra("GreaterOrEqual",d,void 0)},925264:d=>{r.ra("Less",d,void 0)},925316:d=>{r.ra("LessOrEqual",d,void 0)},925375:(d,m,w,_,O)=>{r.ra("ReduceMean",d,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:_?Array.from(B.subarray(O>>>0,O+_>>>0)):[]})},925539:(d,m,w,_,O)=>{r.ra("ReduceMax",d,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:_?Array.from(B.subarray(O>>>0,O+_>>>0)):[]})},925702:(d,m,w,_,O)=>{r.ra("ReduceMin",d,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:_?Array.from(B.subarray(O>>>0,O+_>>>0)):[]})},925865:(d,m,w,_,O)=>{r.ra("ReduceProd",d,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:_?Array.from(B.subarray(O>>>0,O+_>>>0)):[]})},926029:(d,m,w,_,O)=>{r.ra("ReduceSum",d,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:_?Array.from(B.subarray(O>>>0,O+_>>>0)):[]})},926192:(d,m,w,_,O)=>{r.ra("ReduceL1",d,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:_?Array.from(B.subarray(O>>>0,O+_>>>0)):[]})},926354:(d,m,w,_,O)=>{r.ra("ReduceL2",d,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:_?Array.from(B.subarray(O>>>0,O+_>>>0)):[]})},926516:(d,m,w,_,O)=>{r.ra("ReduceLogSum",d,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:_?Array.from(B.subarray(O>>>0,O+_>>>0)):[]})},926682:(d,m,w,_,O)=>{r.ra("ReduceSumSquare",d,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:_?Array.from(B.subarray(O>>>0,O+_>>>0)):[]})},926851:(d,m,w,_,O)=>{r.ra("ReduceLogSumExp",d,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:_?Array.from(B.subarray(O>>>0,O+_>>>0)):[]})},927020:d=>{r.ra("Where",d,void 0)},927073:(d,m,w)=>{r.ra("Transpose",d,{perm:m?Array.from(B.subarray(w>>>0,w+m>>>0)):[]})},927186:(d,m,w,_,O,F,H,de,J,ae,te,ge,Se,k,ue)=>{r.ra("ConvTranspose",d,{format:J?"NHWC":"NCHW",autoPad:m,dilations:[w],group:_,kernel_shape:[O],pads:[F,H],strides:[de],wIsConst:()=>!!G[ae>>>0],outputPadding:te?Array.from(B.subarray(ge>>>0,ge+te>>>0)):[],outputShape:Se?Array.from(B.subarray(k>>>0,k+Se>>>0)):[],activation:ze(ue)})},927600:(d,m,w,_,O,F,H,de,J,ae,te,ge,Se,k)=>{r.ra("ConvTranspose",d,{format:de?"NHWC":"NCHW",autoPad:m,dilations:Array.from(B.subarray(w>>>0,w+2>>>0)),group:_,kernelShape:Array.from(B.subarray(O>>>0,O+2>>>0)),pads:Array.from(B.subarray(F>>>0,F+4>>>0)),strides:Array.from(B.subarray(H>>>0,H+2>>>0)),wIsConst:()=>!!G[J>>>0],outputPadding:0<ae?Array.from(B.subarray(te>>>0,te+ae>>>0)):[],outputShape:0<ge?Array.from(B.subarray(Se>>>0,Se+ge>>>0)):[],activation:ze(k)})},928157:(d,m,w,_,O,F,H,de,J,ae,te,ge,Se,k,ue)=>{r.ra("ConvTranspose",d,{format:J?"NHWC":"NCHW",autoPad:m,dilations:[w],group:_,kernel_shape:[O],pads:[F,H],strides:[de],wIsConst:()=>!!G[ae>>>0],outputPadding:te?Array.from(B.subarray(ge>>>0,ge+te>>>0)):[],outputShape:Se?Array.from(B.subarray(k>>>0,k+Se>>>0)):[],activation:ze(ue)})},928571:(d,m,w,_,O,F,H,de,J,ae,te,ge,Se,k)=>{r.ra("ConvTranspose",d,{format:de?"NHWC":"NCHW",autoPad:m,dilations:Array.from(B.subarray(w>>>0,w+2>>>0)),group:_,kernelShape:Array.from(B.subarray(O>>>0,O+2>>>0)),pads:Array.from(B.subarray(F>>>0,F+4>>>0)),strides:Array.from(B.subarray(H>>>0,H+2>>>0)),wIsConst:()=>!!G[J>>>0],outputPadding:0<ae?Array.from(B.subarray(te>>>0,te+ae>>>0)):[],outputShape:0<ge?Array.from(B.subarray(Se>>>0,Se+ge>>>0)):[],activation:ze(k)})},929128:(d,m)=>{r.ra("GlobalAveragePool",d,{format:m?"NHWC":"NCHW"})},929219:(d,m,w,_,O,F,H,de,J,ae,te,ge,Se,k,ue,ve)=>{r.ra("AveragePool",d,{format:ve?"NHWC":"NCHW",auto_pad:m,ceil_mode:w,count_include_pad:_,storage_order:O,dilations:[F,H],kernel_shape:[de,J],pads:[ae,te,ge,Se],strides:[k,ue]})},929503:(d,m)=>{r.ra("GlobalAveragePool",d,{format:m?"NHWC":"NCHW"})},929594:(d,m,w,_,O,F,H,de,J,ae,te,ge,Se,k,ue,ve)=>{r.ra("AveragePool",d,{format:ve?"NHWC":"NCHW",auto_pad:m,ceil_mode:w,count_include_pad:_,storage_order:O,dilations:[F,H],kernel_shape:[de,J],pads:[ae,te,ge,Se],strides:[k,ue]})},929878:(d,m)=>{r.ra("GlobalMaxPool",d,{format:m?"NHWC":"NCHW"})},929965:(d,m,w,_,O,F,H,de,J,ae,te,ge,Se,k,ue,ve)=>{r.ra("MaxPool",d,{format:ve?"NHWC":"NCHW",auto_pad:m,ceil_mode:w,count_include_pad:_,storage_order:O,dilations:[F,H],kernel_shape:[de,J],pads:[ae,te,ge,Se],strides:[k,ue]})},930245:(d,m)=>{r.ra("GlobalMaxPool",d,{format:m?"NHWC":"NCHW"})},930332:(d,m,w,_,O,F,H,de,J,ae,te,ge,Se,k,ue,ve)=>{r.ra("MaxPool",d,{format:ve?"NHWC":"NCHW",auto_pad:m,ceil_mode:w,count_include_pad:_,storage_order:O,dilations:[F,H],kernel_shape:[de,J],pads:[ae,te,ge,Se],strides:[k,ue]})},930612:(d,m,w,_,O)=>{r.ra("Gemm",d,{alpha:m,beta:w,transA:_,transB:O})},930716:d=>{r.ra("MatMul",d,void 0)},930770:(d,m,w,_)=>{r.ra("ArgMax",d,{keepDims:!!m,selectLastIndex:!!w,axis:_})},930878:(d,m,w,_)=>{r.ra("ArgMin",d,{keepDims:!!m,selectLastIndex:!!w,axis:_})},930986:(d,m)=>{r.ra("Softmax",d,{axis:m})},931049:(d,m)=>{r.ra("Concat",d,{axis:m})},931109:(d,m,w,_,O)=>{r.ra("Split",d,{axis:m,numOutputs:w,splitSizes:_?Array.from(B.subarray(O>>>0,O+_>>>0)):[]})},931254:d=>{r.ra("Expand",d,void 0)},931308:(d,m)=>{r.ra("Gather",d,{axis:Number(m)})},931379:(d,m)=>{r.ra("GatherElements",d,{axis:Number(m)})},931458:(d,m,w,_,O,F,H,de,J,ae,te)=>{r.ra("Resize",d,{antialias:m,axes:w?Array.from(B.subarray(_>>>0,_+w>>>0)):[],coordinateTransformMode:ze(O),cubicCoeffA:F,excludeOutside:H,extrapolationValue:de,keepAspectRatioPolicy:ze(J),mode:ze(ae),nearestMode:ze(te)})},931809:(d,m,w,_,O,F,H)=>{r.ra("Slice",d,{starts:m?Array.from(B.subarray(w>>>0,w+m>>>0)):[],ends:_?Array.from(B.subarray(O>>>0,O+_>>>0)):[],axes:F?Array.from(B.subarray(H>>>0,H+F>>>0)):[]})},932040:d=>{r.ra("Tile",d,void 0)},932092:(d,m,w)=>{r.ra("LayerNormalization",d,{axis:Number(m),epsilon:Number(w)})},932199:(d,m,w)=>{r.ra("InstanceNormalization",d,{epsilon:m,format:w?"NHWC":"NCHW"})},932313:(d,m,w)=>{r.ra("InstanceNormalization",d,{epsilon:m,format:w?"NHWC":"NCHW"})},932427:d=>{r.ra("Range",d,void 0)},932480:(d,m)=>{r.ra("Einsum",d,{equation:ze(m)})},932561:(d,m,w,_,O)=>{r.ra("Pad",d,{mode:m,value:w,pads:_?Array.from(B.subarray(O>>>0,O+_>>>0)):[]})},932693:(d,m,w,_,O,F)=>{r.ra("BatchNormalization",d,{epsilon:m,momentum:w,spatial:!!O,trainingMode:!!_,format:F?"NHWC":"NCHW"})},932862:(d,m,w,_,O,F)=>{r.ra("BatchNormalization",d,{epsilon:m,momentum:w,spatial:!!O,trainingMode:!!_,format:F?"NHWC":"NCHW"})},933031:(d,m,w)=>{r.ra("CumSum",d,{exclusive:Number(m),reverse:Number(w)})},933128:(d,m,w,_,O,F,H,de,J)=>{r.ra("Attention",d,{numHeads:m,isUnidirectional:w,maskFilterValue:_,scale:O,doRotary:F,qkvHiddenSizes:H?Array.from(B.subarray(Number(de)>>>0,Number(de)+H>>>0)):[],pastPresentShareBuffer:!!J})},933400:d=>{r.ra("Gelu",d,void 0)},933452:(d,m,w,_,O,F)=>{r.ra("MultiHeadAttention",d,{numHeads:m,isUnidirectional:w,maskFilterValue:_,scale:O,doRotary:F})},933611:d=>{r.ra("BiasAdd",d,void 0)},933666:d=>{r.ra("BiasSplitGelu",d,void 0)},933727:(d,m)=>{r.ra("SkipLayerNormalization",d,{epsilon:m})},933808:(d,m,w,_,O,F,H,de,J,ae,te,ge,Se)=>{r.ra("Conv",d,{format:J?"NHWC":"NCHW",auto_pad:m,dilations:[w],group:_,kernel_shape:[O],pads:F?Array.from(B.subarray(H>>>0,H+F>>>0)):[],strides:[de],w_is_const:()=>!!G[ae>>>0],activation:ze(te),activation_params:ge?Array.from(pe.subarray(Se>>>0,Se+ge>>>0)):[]})},934189:(d,m,w,_,O,F,H,de,J,ae,te,ge,Se,k,ue,ve)=>{r.ra("Conv",d,{format:ge?"NHWC":"NCHW",auto_pad:m,dilations:[w,_],group:O,kernel_shape:[F,H],pads:de?Array.from(B.subarray(J>>>0,J+de>>>0)):[],strides:[ae,te],w_is_const:()=>!!G[Se>>>0],activation:ze(k),activation_params:ue?Array.from(pe.subarray(ve>>>0,ve+ue>>>0)):[]})},934591:d=>{r.Ra(d)},934625:(d,m)=>r.Sa(d,m,r.Da.Ta,r.Da.errors),934737:d=>r.Oa(d),934770:d=>r.Qa(d),934802:(d,m,w)=>{r.Ja(d,m,w,!0)},934841:(d,m,w)=>{r.Ja(d,m,w)}};function Je(d){this.name="ExitStatus",this.message=`Program terminated with exit(${d})`,this.status=d}var xt=d=>{for(;0<d.length;)d.shift()(r)};function Ct(d){this.Ha=d-24,this.Ma=function(m){q[this.Ha+4>>2>>>0]=m},this.La=function(m){q[this.Ha+8>>2>>>0]=m},this.Ya=function(m,w){this.Ka(),this.Ma(m),this.La(w)},this.Ka=function(){q[this.Ha+16>>2>>>0]=0}}var jt=0,wr=0,et=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Kt=(d,m,w)=>{m>>>=0;var _=m+w;for(w=m;d[w]&&!(w>=_);)++w;if(16<w-m&&d.buffer&&et)return et.decode(d.subarray(m,w));for(_="";m<w;){var O=d[m++];if(O&128){var F=d[m++]&63;if((O&224)==192)_+=String.fromCharCode((O&31)<<6|F);else{var H=d[m++]&63;O=(O&240)==224?(O&15)<<12|F<<6|H:(O&7)<<18|F<<12|H<<6|d[m++]&63,65536>O?_+=String.fromCharCode(O):(O-=65536,_+=String.fromCharCode(55296|O>>10,56320|O&1023))}}else _+=String.fromCharCode(O)}return _},ze=(d,m)=>(d>>>=0)?Kt(Q,d,m):"",Rt=d=>{for(var m=0,w=0;w<d.length;++w){var _=d.charCodeAt(w);127>=_?m++:2047>=_?m+=2:55296<=_&&57343>=_?(m+=4,++w):m+=3}return m},Yt=(d,m,w,_)=>{if(w>>>=0,!(0<_))return 0;var O=w;_=w+_-1;for(var F=0;F<d.length;++F){var H=d.charCodeAt(F);if(55296<=H&&57343>=H){var de=d.charCodeAt(++F);H=65536+((H&1023)<<10)|de&1023}if(127>=H){if(w>=_)break;m[w++>>>0]=H}else{if(2047>=H){if(w+1>=_)break;m[w++>>>0]=192|H>>6}else{if(65535>=H){if(w+2>=_)break;m[w++>>>0]=224|H>>12}else{if(w+3>=_)break;m[w++>>>0]=240|H>>18,m[w++>>>0]=128|H>>12&63}m[w++>>>0]=128|H>>6&63}m[w++>>>0]=128|H&63}}return m[w>>>0]=0,w-O},mt=d=>d%4===0&&(d%100!==0||d%400===0),vr=[0,31,60,91,121,152,182,213,244,274,305,335],ft=[0,31,59,90,120,151,181,212,243,273,304,334],Bt=d=>{var m=Rt(d)+1,w=Vt(m);return w&&Yt(d,Q,w,m),w},yt=[],Mt=(d,m)=>{yt.length=0;var w;for(m>>=2;w=Q[d++>>>0];)m+=w!=105&m,yt.push(w==105?B[m>>>0]:ee[m++>>>1]),++m;return yt},Dt={},Zt=()=>{if(!zt){var d={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:u||"./this.program"},m;for(m in Dt)Dt[m]===void 0?delete d[m]:d[m]=Dt[m];var w=[];for(m in d)w.push(`${m}=${d[m]}`);zt=w}return zt},zt,$r=[null,[],[]],qe=[31,29,31,30,31,30,31,31,30,31,30,31],Xt=[31,28,31,30,31,30,31,31,30,31,30,31];function Jt(d){var m=Array(Rt(d)+1);return Yt(d,m,0,m.length),m}function oe(d,m,w,_){function O(k,ue,ve){for(k=typeof k=="number"?k.toString():k||"";k.length<ue;)k=ve[0]+k;return k}function F(k,ue){return O(k,ue,"0")}function H(k,ue){function ve(lr){return 0>lr?-1:0<lr?1:0}var gt;return(gt=ve(k.getFullYear()-ue.getFullYear()))===0&&(gt=ve(k.getMonth()-ue.getMonth()))===0&&(gt=ve(k.getDate()-ue.getDate())),gt}function de(k){switch(k.getDay()){case 0:return new Date(k.getFullYear()-1,11,29);case 1:return k;case 2:return new Date(k.getFullYear(),0,3);case 3:return new Date(k.getFullYear(),0,2);case 4:return new Date(k.getFullYear(),0,1);case 5:return new Date(k.getFullYear()-1,11,31);case 6:return new Date(k.getFullYear()-1,11,30)}}function J(k){var ue=k.Ba;for(k=new Date(new Date(k.Ca+1900,0,1).getTime());0<ue;){var ve=k.getMonth(),gt=(mt(k.getFullYear())?qe:Xt)[ve];if(ue>gt-k.getDate())ue-=gt-k.getDate()+1,k.setDate(1),11>ve?k.setMonth(ve+1):(k.setMonth(0),k.setFullYear(k.getFullYear()+1));else{k.setDate(k.getDate()+ue);break}}return ve=new Date(k.getFullYear()+1,0,4),ue=de(new Date(k.getFullYear(),0,4)),ve=de(ve),0>=H(ue,k)?0>=H(ve,k)?k.getFullYear()+1:k.getFullYear():k.getFullYear()-1}d>>>=0,m>>>=0,w>>>=0,_>>>=0;var ae=B[_+40>>2>>>0];_={Wa:B[_>>2>>>0],Va:B[_+4>>2>>>0],Ea:B[_+8>>2>>>0],Ia:B[_+12>>2>>>0],Fa:B[_+16>>2>>>0],Ca:B[_+20>>2>>>0],wa:B[_+24>>2>>>0],Ba:B[_+28>>2>>>0],$a:B[_+32>>2>>>0],Ua:B[_+36>>2>>>0],Xa:ae?ze(ae):""},w=ze(w),ae={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var te in ae)w=w.replace(new RegExp(te,"g"),ae[te]);var ge="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Se="January February March April May June July August September October November December".split(" ");ae={"%a":k=>ge[k.wa].substring(0,3),"%A":k=>ge[k.wa],"%b":k=>Se[k.Fa].substring(0,3),"%B":k=>Se[k.Fa],"%C":k=>F((k.Ca+1900)/100|0,2),"%d":k=>F(k.Ia,2),"%e":k=>O(k.Ia,2," "),"%g":k=>J(k).toString().substring(2),"%G":k=>J(k),"%H":k=>F(k.Ea,2),"%I":k=>(k=k.Ea,k==0?k=12:12<k&&(k-=12),F(k,2)),"%j":k=>{for(var ue=0,ve=0;ve<=k.Fa-1;ue+=(mt(k.Ca+1900)?qe:Xt)[ve++]);return F(k.Ia+ue,3)},"%m":k=>F(k.Fa+1,2),"%M":k=>F(k.Va,2),"%n":()=>`\n`,"%p":k=>0<=k.Ea&&12>k.Ea?"AM":"PM","%S":k=>F(k.Wa,2),"%t":()=>"	","%u":k=>k.wa||7,"%U":k=>F(Math.floor((k.Ba+7-k.wa)/7),2),"%V":k=>{var ue=Math.floor((k.Ba+7-(k.wa+6)%7)/7);if(2>=(k.wa+371-k.Ba-2)%7&&ue++,ue)ue==53&&(ve=(k.wa+371-k.Ba)%7,ve==4||ve==3&&mt(k.Ca)||(ue=1));else{ue=52;var ve=(k.wa+7-k.Ba-1)%7;(ve==4||ve==5&&mt(k.Ca%400-1))&&ue++}return F(ue,2)},"%w":k=>k.wa,"%W":k=>F(Math.floor((k.Ba+7-(k.wa+6)%7)/7),2),"%y":k=>(k.Ca+1900).toString().substring(2),"%Y":k=>k.Ca+1900,"%z":k=>{k=k.Ua;var ue=0<=k;return k=Math.abs(k)/60,(ue?"+":"-")+("0000"+(k/60*100+k%60)).slice(-4)},"%Z":k=>k.Xa,"%%":()=>"%"},w=w.replace(/%%/g,"\\0\\0");for(te in ae)w.includes(te)&&(w=w.replace(new RegExp(te,"g"),ae[te](_)));return w=w.replace(/\\0\\0/g,"%"),te=Jt(w),te.length>m?0:(G.set(te,d>>>0),te.length-1)}function ht(d){try{d()}catch(m){He(m)}}function Sr(d){var m={},w;for(w in d)(function(_){var O=d[_];m[_]=typeof O=="function"?function(){_t.push(_);try{return O.apply(null,arguments)}finally{N||(_t.pop()===_||He(),Qe&&ot===1&&_t.length===0&&(ot=0,ht(sr),typeof Fibers<"u"&&Fibers.ab()))}}:O})(w);return m}var ot=0,Qe=null,xr=0,_t=[],Qt={},er={},Cr=0,It=null,_r=[];function Ir(){return new Promise((d,m)=>{It={resolve:d,reject:m}})}function Ar(){var d=Vt(65548),m=d+12;q[d>>2>>>0]=m,q[d+4>>2>>>0]=m+65536,m=_t[0];var w=Qt[m];return w===void 0&&(w=Cr++,Qt[m]=w,er[w]=m),B[d+8>>2>>>0]=w,d}function Tr(d){if(!N){if(ot===0){var m=!1,w=!1;d((_=0)=>{if(!N&&(xr=_,m=!0,w)){ot=2,ht(()=>Ut(Qe)),typeof Browser<"u"&&Browser.Ga.Na&&Browser.Ga.resume(),_=!1;try{var O=(0,T[er[B[Qe+8>>2>>>0]]])()}catch(de){O=de,_=!0}var F=!1;if(!Qe){var H=It;H&&(It=null,(_?H.reject:H.resolve)(O),F=!0)}if(_&&!F)throw O}}),w=!0,m||(ot=1,Qe=Ar(),typeof Browser<"u"&&Browser.Ga.Na&&Browser.Ga.pause(),ht(()=>ir(Qe)))}else ot===2?(ot=0,ht(At),tr(Qe),Qe=null,_r.forEach(_=>{if(!N)try{if(_(),!A)try{U=U=_=U,A||(r.onExit&&r.onExit(_),N=!0),l(_,new Je(_))}catch(O){O instanceof Je||O=="unwind"||l(1,O)}}catch(O){O instanceof Je||O=="unwind"||l(1,O)}})):He(`invalid state: ${ot}`);return xr}}function Er(d){return Tr(m=>{d().then(m)})}var Or={n:function(d,m,w){return Er(async()=>{await r.Pa(d,m,w)})},a:function(d,m,w){throw d>>>=0,new Ct(d).Ya(m>>>0,w>>>0),jt=d,wr++,jt},g:function(){return 0},J:function(){},z:function(){},B:function(){},L:function(){return 0},H:function(){},C:function(){},G:function(){},l:function(){},A:function(){},x:function(){},I:function(){},y:function(){},m:()=>!0,q:function(d,m,w){d=m+2097152>>>0<4194305-!!d?(d>>>0)+4294967296*m:NaN,w>>>=0,d=new Date(1e3*d),B[w>>2>>>0]=d.getUTCSeconds(),B[w+4>>2>>>0]=d.getUTCMinutes(),B[w+8>>2>>>0]=d.getUTCHours(),B[w+12>>2>>>0]=d.getUTCDate(),B[w+16>>2>>>0]=d.getUTCMonth(),B[w+20>>2>>>0]=d.getUTCFullYear()-1900,B[w+24>>2>>>0]=d.getUTCDay(),B[w+28>>2>>>0]=(d.getTime()-Date.UTC(d.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},r:function(d,m,w){d=m+2097152>>>0<4194305-!!d?(d>>>0)+4294967296*m:NaN,w>>>=0,d=new Date(1e3*d),B[w>>2>>>0]=d.getSeconds(),B[w+4>>2>>>0]=d.getMinutes(),B[w+8>>2>>>0]=d.getHours(),B[w+12>>2>>>0]=d.getDate(),B[w+16>>2>>>0]=d.getMonth(),B[w+20>>2>>>0]=d.getFullYear()-1900,B[w+24>>2>>>0]=d.getDay(),B[w+28>>2>>>0]=(mt(d.getFullYear())?vr:ft)[d.getMonth()]+d.getDate()-1|0,B[w+36>>2>>>0]=-(60*d.getTimezoneOffset()),m=new Date(d.getFullYear(),6,1).getTimezoneOffset();var _=new Date(d.getFullYear(),0,1).getTimezoneOffset();B[w+32>>2>>>0]=(m!=_&&d.getTimezoneOffset()==Math.min(_,m))|0},s:function(d){d>>>=0;var m=new Date(B[d+20>>2>>>0]+1900,B[d+16>>2>>>0],B[d+12>>2>>>0],B[d+8>>2>>>0],B[d+4>>2>>>0],B[d>>2>>>0],0),w=B[d+32>>2>>>0],_=m.getTimezoneOffset(),O=new Date(m.getFullYear(),6,1).getTimezoneOffset(),F=new Date(m.getFullYear(),0,1).getTimezoneOffset(),H=Math.min(F,O);return 0>w?B[d+32>>2>>>0]=+(O!=F&&H==_):0<w!=(H==_)&&(O=Math.max(F,O),m.setTime(m.getTime()+6e4*((0<w?H:O)-_))),B[d+24>>2>>>0]=m.getDay(),B[d+28>>2>>>0]=(mt(m.getFullYear())?vr:ft)[m.getMonth()]+m.getDate()-1|0,B[d>>2>>>0]=m.getSeconds(),B[d+4>>2>>>0]=m.getMinutes(),B[d+8>>2>>>0]=m.getHours(),B[d+12>>2>>>0]=m.getDate(),B[d+16>>2>>>0]=m.getMonth(),B[d+20>>2>>>0]=m.getYear(),d=m.getTime()/1e3,rr((Ke=d,1<=+Math.abs(Ke)?0<Ke?+Math.floor(Ke/4294967296)>>>0:~~+Math.ceil((Ke-+(~~Ke>>>0))/4294967296)>>>0:0)),d>>>0},o:function(){return-52},p:function(){},v:function(d,m,w){function _(J){return(J=J.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?J[1]:"GMT"}w>>>=0;var O=new Date().getFullYear(),F=new Date(O,0,1),H=new Date(O,6,1);O=F.getTimezoneOffset();var de=H.getTimezoneOffset();q[d>>>0>>2>>>0]=60*Math.max(O,de),B[m>>>0>>2>>>0]=+(O!=de),d=_(F),m=_(H),d=Bt(d),m=Bt(m),de<O?(q[w>>2>>>0]=d,q[w+4>>2>>>0]=m):(q[w>>2>>>0]=m,q[w+4>>2>>>0]=d)},e:()=>{He("")},b:function(d,m,w){return d>>>=0,m=Mt(m>>>0,w>>>0),nt[d].apply(null,m)},i:function(d,m,w){return d>>>=0,m=Mt(m>>>0,w>>>0),nt[d].apply(null,m)},h:function(){return Date.now()},w:function(){return 4294901760},c:()=>performance.now(),K:function(d,m,w){return m>>>=0,Q.copyWithin(d>>>0>>>0,m>>>0,m+(w>>>0)>>>0)},u:function(d){d>>>=0;var m=Q.length;if(4294901760<d)return!1;for(var w=1;4>=w;w*=2){var _=m*(1+.2/w);_=Math.min(_,d+100663296);var O=Math;_=Math.max(d,_);e:{O=O.min.call(O,4294901760,_+(65536-_%65536)%65536)-z.buffer.byteLength+65535>>>16;try{z.grow(O),we();var F=1;break e}catch{}F=void 0}if(F)return!0}return!1},D:function(d,m){d>>>=0,m>>>=0;var w=0;return Zt().forEach(function(_,O){var F=m+w;for(O=q[d+4*O>>2>>>0]=F,F=0;F<_.length;++F)G[O++>>0>>>0]=_.charCodeAt(F);G[O>>0>>>0]=0,w+=_.length+1}),0},E:function(d,m){d>>>=0,m>>>=0;var w=Zt();q[d>>2>>>0]=w.length;var _=0;return w.forEach(function(O){_+=O.length+1}),q[m>>2>>>0]=_,0},f:()=>52,k:function(){return 52},t:function(){return 70},j:function(d,m,w,_){m>>>=0,w>>>=0,_>>>=0;for(var O=0,F=0;F<w;F++){var H=q[m>>2>>>0],de=q[m+4>>2>>>0];m+=8;for(var J=0;J<de;J++){var ae=Q[H+J>>>0],te=$r[d];ae===0||ae===10?((d===1?$:C)(Kt(te,0)),te.length=0):te.push(ae)}O+=de}return q[_>>2>>>0]=O,0},F:oe,d:function(d,m,w,_){return oe(d>>>0,m>>>0,w>>>0,_>>>0)}};(function(){function d(w){if(w=w.exports,w=Sr(w),T=w=bt(w),z=T.M,we(),ye.unshift(T.N),ce--,r.monitorRunDependencies&&r.monitorRunDependencies(ce),ce==0&&(We!==null&&(clearInterval(We),We=null),Be)){var _=Be;Be=null,_()}return w}var m={a:Or};if(ce++,r.monitorRunDependencies&&r.monitorRunDependencies(ce),r.instantiateWasm)try{return r.instantiateWasm(m,d)}catch(w){C("Module.instantiateWasm callback failed with error: "+w),n(w)}return Ge(m,function(w){d(w.instance)}).catch(n),{}})(),r._OrtInit=(d,m)=>(r._OrtInit=T.O)(d,m),r._OrtGetLastError=(d,m)=>(r._OrtGetLastError=T.P)(d,m),r._OrtCreateSessionOptions=(d,m,w,_,O,F,H,de,J,ae)=>(r._OrtCreateSessionOptions=T.Q)(d,m,w,_,O,F,H,de,J,ae),r._OrtAppendExecutionProvider=(d,m)=>(r._OrtAppendExecutionProvider=T.R)(d,m),r._OrtAddFreeDimensionOverride=(d,m,w)=>(r._OrtAddFreeDimensionOverride=T.S)(d,m,w),r._OrtAddSessionConfigEntry=(d,m,w)=>(r._OrtAddSessionConfigEntry=T.T)(d,m,w),r._OrtReleaseSessionOptions=d=>(r._OrtReleaseSessionOptions=T.U)(d),r._OrtCreateSession=(d,m,w)=>(r._OrtCreateSession=T.V)(d,m,w),r._OrtReleaseSession=d=>(r._OrtReleaseSession=T.W)(d),r._OrtGetInputOutputCount=(d,m,w)=>(r._OrtGetInputOutputCount=T.X)(d,m,w),r._OrtGetInputName=(d,m)=>(r._OrtGetInputName=T.Y)(d,m),r._OrtGetOutputName=(d,m)=>(r._OrtGetOutputName=T.Z)(d,m),r._OrtFree=d=>(r._OrtFree=T._)(d),r._OrtCreateTensor=(d,m,w,_,O,F)=>(r._OrtCreateTensor=T.$)(d,m,w,_,O,F),r._OrtGetTensorData=(d,m,w,_,O)=>(r._OrtGetTensorData=T.aa)(d,m,w,_,O),r._OrtReleaseTensor=d=>(r._OrtReleaseTensor=T.ba)(d),r._OrtCreateRunOptions=(d,m,w,_)=>(r._OrtCreateRunOptions=T.ca)(d,m,w,_),r._OrtAddRunConfigEntry=(d,m,w)=>(r._OrtAddRunConfigEntry=T.da)(d,m,w),r._OrtReleaseRunOptions=d=>(r._OrtReleaseRunOptions=T.ea)(d),r._OrtCreateBinding=d=>(r._OrtCreateBinding=T.fa)(d),r._OrtBindInput=(d,m,w)=>(r._OrtBindInput=T.ga)(d,m,w),r._OrtBindOutput=(d,m,w,_)=>(r._OrtBindOutput=T.ha)(d,m,w,_),r._OrtClearBoundOutputs=d=>(r._OrtClearBoundOutputs=T.ia)(d),r._OrtReleaseBinding=d=>(r._OrtReleaseBinding=T.ja)(d),r._OrtRunWithBinding=(d,m,w,_,O)=>(r._OrtRunWithBinding=T.ka)(d,m,w,_,O),r._OrtRun=(d,m,w,_,O,F,H,de)=>(r._OrtRun=T.la)(d,m,w,_,O,F,H,de),r._OrtEndProfiling=d=>(r._OrtEndProfiling=T.ma)(d),r._JsepOutput=(d,m,w)=>(r._JsepOutput=T.na)(d,m,w),r._JsepGetNodeName=d=>(r._JsepGetNodeName=T.oa)(d);var Vt=r._malloc=d=>(Vt=r._malloc=T.pa)(d),tr=r._free=d=>(tr=r._free=T.qa)(d),rr=d=>(rr=T.sa)(d),nr=()=>(nr=T.ta)(),or=d=>(or=T.ua)(d),ar=d=>(ar=T.va)(d),ir=d=>(ir=T.xa)(d),sr=()=>(sr=T.ya)(),Ut=d=>(Ut=T.za)(d),At=()=>(At=T.Aa)();r.___start_em_js=934874,r.___stop_em_js=935035;function bt(d){d=Object.assign({},d);var m=_=>()=>_()>>>0,w=_=>O=>_(O)>>>0;return d.__errno_location=m(d.__errno_location),d.malloc=w(d.malloc),d.stackSave=m(d.stackSave),d.stackAlloc=w(d.stackAlloc),d}r.stackAlloc=ar,r.stackSave=nr,r.stackRestore=or,r.UTF8ToString=ze,r.stringToUTF8=(d,m,w)=>Yt(d,Q,m,w),r.lengthBytesUTF8=Rt;var Tt;Be=function d(){Tt||ur(),Tt||(Be=d)};function ur(){function d(){if(!Tt&&(Tt=!0,r.calledRun=!0,!N)){if(xt(ye),o(r),r.onRuntimeInitialized&&r.onRuntimeInitialized(),r.postRun)for(typeof r.postRun=="function"&&(r.postRun=[r.postRun]);r.postRun.length;){var m=r.postRun.shift();Ce.unshift(m)}xt(Ce)}}if(!(0<ce)){if(r.preRun)for(typeof r.preRun=="function"&&(r.preRun=[r.preRun]);r.preRun.length;)fe();xt(Z),0<ce||(r.setStatus?(r.setStatus("Running..."),setTimeout(function(){setTimeout(function(){r.setStatus("")},1),d()},1)):d())}}if(r.preInit)for(typeof r.preInit=="function"&&(r.preInit=[r.preInit]);0<r.preInit.length;)r.preInit.pop()();return ur(),t.ready}})();typeof So=="object"&&typeof $n=="object"?$n.exports=$o:typeof define=="function"&&define.amd&&define([],()=>$o)});var Co=dr(()=>{});var _o=dr(()=>{});var Io={};Dr(Io,{cpus:()=>Zu});var Zu,Ao=K(()=>{Zu=void 0});var Oo=dr((Eo,Sn)=>{"use strict";var To=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){function r(){return we.buffer!=ce.buffer&&he(),ce}function o(){return we.buffer!=ce.buffer&&he(),We}function n(){return we.buffer!=ce.buffer&&he(),Be}function s(){return we.buffer!=ce.buffer&&he(),He}function u(){return we.buffer!=ce.buffer&&he(),L}function l(){return we.buffer!=ce.buffer&&he(),X}var a=t,p,h;a.ready=new Promise((i,c)=>{p=i,h=c}),a.jsepInit=(i,c,f,S,E,M,W,ie)=>{a.Qb=i,a.xb=c,a.zb=f,a.kb=S,a.yb=E,a.Ea=M,a.Ab=W,a.Bb=ie,c=(re,ne,le)=>(...xe)=>{let Ie=at,R=ne?.();xe=re(...xe);let me=ne?.();return R!==me&&(re=me,le(R),ne=le=null),at!=Ie?Du():xe},f=re=>async(...ne)=>{try{if(a.bb)throw Error("Session already started");let le=a.bb={Fb:ne[0],errors:[]},xe=await re(...ne);if(a.bb!==le)throw Error("Session mismatch");i.flush();let Ie=le.errors;if(0<Ie.length){let R=await Promise.all(Ie);if(R=R.filter(me=>me),0<R.length)throw Error(R.join(`\n`))}return xe}finally{a.bb=null}},a._OrtRun=f(c(a._OrtRun,()=>a._OrtRun,re=>a._OrtRun=re)),a._OrtRunWithBinding=f(c(a._OrtRunWithBinding,()=>a._OrtRunWithBinding,re=>a._OrtRunWithBinding=re)),a._OrtBindInput=c(a._OrtBindInput,()=>a._OrtBindInput,re=>a._OrtBindInput=re),a.jsepRegisterBuffer=(re,ne,le,xe)=>i.registerBuffer(re,ne,le,xe),a.jsepUnregisterBuffers=re=>{i.unregisterBuffers(re)},a.jsepGetBuffer=re=>i.getBuffer(re),a.jsepCreateDownloader=(re,ne,le)=>i.createDownloader(re,ne,le)};var y=Object.assign({},a),g="./this.program",v=(i,c)=>{throw c},b=typeof window=="object",x=typeof importScripts=="function",I=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",$=a.ENVIRONMENT_IS_PTHREAD||!1,C="";function P(i){return a.locateFile?a.locateFile(i,C):C+i}var A,z,T;if(I){var N=(bn(),Wt(yn)),U=(vn(),Wt(wn));C=x?U.dirname(C)+"/":__dirname+"/",A=(c,f)=>(c=c.startsWith("file://")?new URL(c):U.normalize(c),N.readFileSync(c,f?void 0:"utf8")),T=c=>(c=A(c,!0),c.buffer||(c=new Uint8Array(c)),c),z=(c,f,S,E=!0)=>{c=c.startsWith("file://")?new URL(c):U.normalize(c),N.readFile(c,E?void 0:"utf8",(M,W)=>{M?S(M):f(E?W.buffer:W)})},!a.thisProgram&&1<process.argv.length&&(g=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),v=(c,f)=>{throw process.exitCode=c,f},a.inspect=()=>"[Emscripten Module object]";let i;try{i=Co()}catch(c){throw console.error(\'The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?\'),c}global.Worker=i.Worker}else(b||x)&&(x?C=self.location.href:typeof document<"u"&&document.currentScript&&(C=document.currentScript.src),typeof e<"u"&&e&&(C=e),C.indexOf("blob:")!==0?C=C.substr(0,C.replace(/[?#].*/,"").lastIndexOf("/")+1):C="",I||(A=i=>{var c=new XMLHttpRequest;return c.open("GET",i,!1),c.send(null),c.responseText},x&&(T=i=>{var c=new XMLHttpRequest;return c.open("GET",i,!1),c.responseType="arraybuffer",c.send(null),new Uint8Array(c.response)}),z=(i,c,f)=>{var S=new XMLHttpRequest;S.open("GET",i,!0),S.responseType="arraybuffer",S.onload=()=>{S.status==200||S.status==0&&S.response?c(S.response):f()},S.onerror=f,S.send(null)}));I&&typeof performance>"u"&&(global.performance=_o().performance);var G=console.log.bind(console),Q=console.error.bind(console);I&&(G=(...i)=>N.writeSync(1,i.join(" ")+`\n`),Q=(...i)=>N.writeSync(2,i.join(" ")+`\n`));var B=a.print||G,q=a.printErr||Q;Object.assign(a,y),y=null,a.thisProgram&&(g=a.thisProgram),a.quit&&(v=a.quit);var pe;a.wasmBinary&&(pe=a.wasmBinary);var ee=a.noExitRuntime||!0;typeof WebAssembly!="object"&&et("no native wasm support detected");var we,Z,ye,Ce=!1,fe,ce,We,Be,He,L,X;function he(){var i=we.buffer;a.HEAP8=ce=new Int8Array(i),a.HEAP16=new Int16Array(i),a.HEAP32=Be=new Int32Array(i),a.HEAPU8=We=new Uint8Array(i),a.HEAPU16=new Uint16Array(i),a.HEAPU32=He=new Uint32Array(i),a.HEAPF32=L=new Float32Array(i),a.HEAPF64=X=new Float64Array(i)}var Fe=a.INITIAL_MEMORY||16777216;if(5242880<=Fe||et("INITIAL_MEMORY should be larger than STACK_SIZE, was "+Fe+"! (STACK_SIZE=5242880)"),$)we=a.wasmMemory;else if(a.wasmMemory)we=a.wasmMemory;else if(we=new WebAssembly.Memory({initial:Fe/65536,maximum:65536,shared:!0}),!(we.buffer instanceof SharedArrayBuffer))throw q("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),I&&q("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");he(),Fe=we.buffer.byteLength;var Ze=[],Me=[],Ge=[],Ke=0;function nt(){return ee||0<Ke}var Je=0,xt=null,Ct=null;function jt(){Je++,a.monitorRunDependencies&&a.monitorRunDependencies(Je)}function wr(){if(Je--,a.monitorRunDependencies&&a.monitorRunDependencies(Je),Je==0&&(xt!==null&&(clearInterval(xt),xt=null),Ct)){var i=Ct;Ct=null,i()}}function et(i){throw a.onAbort&&a.onAbort(i),i="Aborted("+i+")",q(i),Ce=!0,fe=1,i=new WebAssembly.RuntimeError(i+". Build with -sASSERTIONS for more info."),h(i),i}function Kt(i){return i.startsWith("data:application/octet-stream;base64,")}var ze;ze="ort-wasm-simd-threaded.wasm",Kt(ze)||(ze=P(ze));function Rt(i){if(i==ze&&pe)return new Uint8Array(pe);if(T)return T(i);throw"both async and sync fetching of the wasm failed"}function Yt(i){if(!pe&&(b||x)){if(typeof fetch=="function"&&!i.startsWith("file://"))return fetch(i,{credentials:"same-origin"}).then(c=>{if(!c.ok)throw"failed to load wasm binary file at \'"+i+"\'";return c.arrayBuffer()}).catch(()=>Rt(i));if(z)return new Promise((c,f)=>{z(i,S=>c(new Uint8Array(S)),f)})}return Promise.resolve().then(()=>Rt(i))}function mt(i,c,f){return Yt(i).then(S=>WebAssembly.instantiate(S,c)).then(S=>S).then(f,S=>{q("failed to asynchronously prepare wasm: "+S),et(S)})}function vr(i,c){var f=ze;return pe||typeof WebAssembly.instantiateStreaming!="function"||Kt(f)||f.startsWith("file://")||I||typeof fetch!="function"?mt(f,i,c):fetch(f,{credentials:"same-origin"}).then(S=>WebAssembly.instantiateStreaming(S,i).then(c,function(E){return q("wasm streaming compile failed: "+E),q("falling back to ArrayBuffer instantiation"),mt(f,i,c)}))}var ft,Bt={1444288:i=>{a.Ea("Abs",i,void 0)},1444339:i=>{a.Ea("Neg",i,void 0)},1444390:i=>{a.Ea("Floor",i,void 0)},1444443:i=>{a.Ea("Ceil",i,void 0)},1444495:i=>{a.Ea("Reciprocal",i,void 0)},1444553:i=>{a.Ea("Sqrt",i,void 0)},1444605:i=>{a.Ea("Exp",i,void 0)},1444656:i=>{a.Ea("Erf",i,void 0)},1444707:i=>{a.Ea("Sigmoid",i,void 0)},1444762:i=>{a.Ea("Log",i,void 0)},1444813:i=>{a.Ea("Sin",i,void 0)},1444864:i=>{a.Ea("Cos",i,void 0)},1444915:i=>{a.Ea("Tan",i,void 0)},1444966:i=>{a.Ea("Asin",i,void 0)},1445018:i=>{a.Ea("Acos",i,void 0)},1445070:i=>{a.Ea("Atan",i,void 0)},1445122:i=>{a.Ea("Sinh",i,void 0)},1445174:i=>{a.Ea("Cosh",i,void 0)},1445226:i=>{a.Ea("Asinh",i,void 0)},1445279:i=>{a.Ea("Acosh",i,void 0)},1445332:i=>{a.Ea("Atanh",i,void 0)},1445385:i=>{a.Ea("Tanh",i,void 0)},1445437:i=>{a.Ea("Not",i,void 0)},1445488:(i,c,f)=>{a.Ea("Clip",i,{min:c,max:f})},1445557:i=>{a.Ea("Clip",i,void 0)},1445609:(i,c)=>{a.Ea("Elu",i,{alpha:c})},1445667:i=>{a.Ea("Relu",i,void 0)},1445719:(i,c)=>{a.Ea("LeakyRelu",i,{alpha:c})},1445783:(i,c)=>{a.Ea("ThresholdedRelu",i,{alpha:c})},1445853:i=>{a.Ab(i)},1445887:(i,c)=>a.Bb(i,c,a.bb.Fb,a.bb.errors),1445999:(i,c)=>{a.Ea("Cast",i,{to:c})},1446057:i=>{a.Ea("Add",i,void 0)},1446108:i=>{a.Ea("Sub",i,void 0)},1446159:i=>{a.Ea("Mul",i,void 0)},1446210:i=>{a.Ea("Div",i,void 0)},1446261:i=>{a.Ea("Pow",i,void 0)},1446312:i=>{a.Ea("Equal",i,void 0)},1446365:i=>{a.Ea("Greater",i,void 0)},1446420:i=>{a.Ea("GreaterOrEqual",i,void 0)},1446482:i=>{a.Ea("Less",i,void 0)},1446534:i=>{a.Ea("LessOrEqual",i,void 0)},1446593:(i,c,f,S,E)=>{a.Ea("ReduceMean",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:S?Array.from(n().subarray(E>>>0,E+S>>>0)):[]})},1446757:(i,c,f,S,E)=>{a.Ea("ReduceMax",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:S?Array.from(n().subarray(E>>>0,E+S>>>0)):[]})},1446920:(i,c,f,S,E)=>{a.Ea("ReduceMin",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:S?Array.from(n().subarray(E>>>0,E+S>>>0)):[]})},1447083:(i,c,f,S,E)=>{a.Ea("ReduceProd",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:S?Array.from(n().subarray(E>>>0,E+S>>>0)):[]})},1447247:(i,c,f,S,E)=>{a.Ea("ReduceSum",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:S?Array.from(n().subarray(E>>>0,E+S>>>0)):[]})},1447410:(i,c,f,S,E)=>{a.Ea("ReduceL1",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:S?Array.from(n().subarray(E>>>0,E+S>>>0)):[]})},1447572:(i,c,f,S,E)=>{a.Ea("ReduceL2",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:S?Array.from(n().subarray(E>>>0,E+S>>>0)):[]})},1447734:(i,c,f,S,E)=>{a.Ea("ReduceLogSum",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:S?Array.from(n().subarray(E>>>0,E+S>>>0)):[]})},1447900:(i,c,f,S,E)=>{a.Ea("ReduceSumSquare",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:S?Array.from(n().subarray(E>>>0,E+S>>>0)):[]})},1448069:(i,c,f,S,E)=>{a.Ea("ReduceLogSumExp",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:S?Array.from(n().subarray(E>>>0,E+S>>>0)):[]})},1448238:i=>{a.Ea("Where",i,void 0)},1448291:(i,c,f)=>{a.Ea("Transpose",i,{perm:c?Array.from(n().subarray(f>>>0,f+c>>>0)):[]})},1448404:(i,c,f,S,E,M,W,ie,re,ne,le,xe,Ie)=>{a.Ea("Conv",i,{format:re?"NHWC":"NCHW",auto_pad:c,dilations:[f],group:S,kernel_shape:[E],pads:M?Array.from(n().subarray(W>>>0,W+M>>>0)):[],strides:[ie],w_is_const:()=>!!r()[ne>>>0],activation:qe(le),activation_params:xe?Array.from(u().subarray(Ie>>>0,Ie+xe>>>0)):[]})},1448785:(i,c,f,S,E,M,W,ie,re,ne,le,xe,Ie,R,me,_e)=>{a.Ea("Conv",i,{format:xe?"NHWC":"NCHW",auto_pad:c,dilations:[f,S],group:E,kernel_shape:[M,W],pads:ie?Array.from(n().subarray(re>>>0,re+ie>>>0)):[],strides:[ne,le],w_is_const:()=>!!r()[Ie>>>0],activation:qe(R),activation_params:me?Array.from(u().subarray(_e>>>0,_e+me>>>0)):[]})},1449187:(i,c,f,S,E,M,W,ie,re,ne,le,xe,Ie,R,me)=>{a.Ea("ConvTranspose",i,{format:re?"NHWC":"NCHW",autoPad:c,dilations:[f],group:S,kernel_shape:[E],pads:[M,W],strides:[ie],wIsConst:()=>!!r()[ne>>>0],outputPadding:le?Array.from(n().subarray(xe>>>0,xe+le>>>0)):[],outputShape:Ie?Array.from(n().subarray(R>>>0,R+Ie>>>0)):[],activation:qe(me)})},1449601:(i,c,f,S,E,M,W,ie,re,ne,le,xe,Ie,R)=>{a.Ea("ConvTranspose",i,{format:ie?"NHWC":"NCHW",autoPad:c,dilations:Array.from(n().subarray(f>>>0,f+2>>>0)),group:S,kernelShape:Array.from(n().subarray(E>>>0,E+2>>>0)),pads:Array.from(n().subarray(M>>>0,M+4>>>0)),strides:Array.from(n().subarray(W>>>0,W+2>>>0)),wIsConst:()=>!!r()[re>>>0],outputPadding:0<ne?Array.from(n().subarray(le>>>0,le+ne>>>0)):[],outputShape:0<xe?Array.from(n().subarray(Ie>>>0,Ie+xe>>>0)):[],activation:qe(R)})},1450158:(i,c,f,S,E,M,W,ie,re,ne,le,xe,Ie,R,me)=>{a.Ea("ConvTranspose",i,{format:re?"NHWC":"NCHW",autoPad:c,dilations:[f],group:S,kernel_shape:[E],pads:[M,W],strides:[ie],wIsConst:()=>!!r()[ne>>>0],outputPadding:le?Array.from(n().subarray(xe>>>0,xe+le>>>0)):[],outputShape:Ie?Array.from(n().subarray(R>>>0,R+Ie>>>0)):[],activation:qe(me)})},1450572:(i,c,f,S,E,M,W,ie,re,ne,le,xe,Ie,R)=>{a.Ea("ConvTranspose",i,{format:ie?"NHWC":"NCHW",autoPad:c,dilations:Array.from(n().subarray(f>>>0,f+2>>>0)),group:S,kernelShape:Array.from(n().subarray(E>>>0,E+2>>>0)),pads:Array.from(n().subarray(M>>>0,M+4>>>0)),strides:Array.from(n().subarray(W>>>0,W+2>>>0)),wIsConst:()=>!!r()[re>>>0],outputPadding:0<ne?Array.from(n().subarray(le>>>0,le+ne>>>0)):[],outputShape:0<xe?Array.from(n().subarray(Ie>>>0,Ie+xe>>>0)):[],activation:qe(R)})},1451129:(i,c)=>{a.Ea("GlobalAveragePool",i,{format:c?"NHWC":"NCHW"})},1451220:(i,c,f,S,E,M,W,ie,re,ne,le,xe,Ie,R,me,_e)=>{a.Ea("AveragePool",i,{format:_e?"NHWC":"NCHW",auto_pad:c,ceil_mode:f,count_include_pad:S,storage_order:E,dilations:[M,W],kernel_shape:[ie,re],pads:[ne,le,xe,Ie],strides:[R,me]})},1451504:(i,c)=>{a.Ea("GlobalAveragePool",i,{format:c?"NHWC":"NCHW"})},1451595:(i,c,f,S,E,M,W,ie,re,ne,le,xe,Ie,R,me,_e)=>{a.Ea("AveragePool",i,{format:_e?"NHWC":"NCHW",auto_pad:c,ceil_mode:f,count_include_pad:S,storage_order:E,dilations:[M,W],kernel_shape:[ie,re],pads:[ne,le,xe,Ie],strides:[R,me]})},1451879:(i,c)=>{a.Ea("GlobalMaxPool",i,{format:c?"NHWC":"NCHW"})},1451966:(i,c,f,S,E,M,W,ie,re,ne,le,xe,Ie,R,me,_e)=>{a.Ea("MaxPool",i,{format:_e?"NHWC":"NCHW",auto_pad:c,ceil_mode:f,count_include_pad:S,storage_order:E,dilations:[M,W],kernel_shape:[ie,re],pads:[ne,le,xe,Ie],strides:[R,me]})},1452246:(i,c)=>{a.Ea("GlobalMaxPool",i,{format:c?"NHWC":"NCHW"})},1452333:(i,c,f,S,E,M,W,ie,re,ne,le,xe,Ie,R,me,_e)=>{a.Ea("MaxPool",i,{format:_e?"NHWC":"NCHW",auto_pad:c,ceil_mode:f,count_include_pad:S,storage_order:E,dilations:[M,W],kernel_shape:[ie,re],pads:[ne,le,xe,Ie],strides:[R,me]})},1452613:(i,c,f,S,E)=>{a.Ea("Gemm",i,{alpha:c,beta:f,transA:S,transB:E})},1452717:i=>{a.Ea("MatMul",i,void 0)},1452771:(i,c,f,S)=>{a.Ea("ArgMax",i,{keepDims:!!c,selectLastIndex:!!f,axis:S})},1452879:(i,c,f,S)=>{a.Ea("ArgMin",i,{keepDims:!!c,selectLastIndex:!!f,axis:S})},1452987:(i,c)=>{a.Ea("Softmax",i,{axis:c})},1453050:(i,c)=>{a.Ea("Concat",i,{axis:c})},1453110:(i,c,f,S,E)=>{a.Ea("Split",i,{axis:c,numOutputs:f,splitSizes:S?Array.from(n().subarray(E>>>0,E+S>>>0)):[]})},1453255:i=>{a.Ea("Expand",i,void 0)},1453309:(i,c)=>{a.Ea("Gather",i,{axis:Number(c)})},1453380:(i,c)=>{a.Ea("GatherElements",i,{axis:Number(c)})},1453459:(i,c,f,S,E,M,W,ie,re,ne,le)=>{a.Ea("Resize",i,{antialias:c,axes:f?Array.from(n().subarray(S>>>0,S+f>>>0)):[],coordinateTransformMode:qe(E),cubicCoeffA:M,excludeOutside:W,extrapolationValue:ie,keepAspectRatioPolicy:qe(re),mode:qe(ne),nearestMode:qe(le)})},1453810:(i,c,f,S,E,M,W)=>{a.Ea("Slice",i,{starts:c?Array.from(n().subarray(f>>>0,f+c>>>0)):[],ends:S?Array.from(n().subarray(E>>>0,E+S>>>0)):[],axes:M?Array.from(n().subarray(W>>>0,W+M>>>0)):[]})},1454041:i=>{a.Ea("Tile",i,void 0)},1454093:(i,c,f)=>{a.Ea("LayerNormalization",i,{axis:Number(c),epsilon:Number(f)})},1454200:(i,c,f)=>{a.Ea("InstanceNormalization",i,{epsilon:c,format:f?"NHWC":"NCHW"})},1454314:(i,c,f)=>{a.Ea("InstanceNormalization",i,{epsilon:c,format:f?"NHWC":"NCHW"})},1454428:i=>{a.Ea("Range",i,void 0)},1454481:(i,c)=>{a.Ea("Einsum",i,{equation:qe(c)})},1454562:(i,c,f,S,E)=>{a.Ea("Pad",i,{mode:c,value:f,pads:S?Array.from(n().subarray(E>>>0,E+S>>>0)):[]})},1454694:(i,c,f,S,E,M)=>{a.Ea("BatchNormalization",i,{epsilon:c,momentum:f,spatial:!!E,trainingMode:!!S,format:M?"NHWC":"NCHW"})},1454863:(i,c,f,S,E,M)=>{a.Ea("BatchNormalization",i,{epsilon:c,momentum:f,spatial:!!E,trainingMode:!!S,format:M?"NHWC":"NCHW"})},1455032:(i,c,f)=>{a.Ea("CumSum",i,{exclusive:Number(c),reverse:Number(f)})},1455129:(i,c,f,S,E,M,W,ie,re)=>{a.Ea("Attention",i,{numHeads:c,isUnidirectional:f,maskFilterValue:S,scale:E,doRotary:M,qkvHiddenSizes:W?Array.from(n().subarray(Number(ie)>>>0,Number(ie)+W>>>0)):[],pastPresentShareBuffer:!!re})},1455401:i=>{a.Ea("Gelu",i,void 0)},1455453:(i,c,f,S,E,M)=>{a.Ea("MultiHeadAttention",i,{numHeads:c,isUnidirectional:f,maskFilterValue:S,scale:E,doRotary:M})},1455612:i=>{a.Ea("BiasAdd",i,void 0)},1455667:i=>{a.Ea("BiasSplitGelu",i,void 0)},1455728:(i,c)=>{a.Ea("SkipLayerNormalization",i,{epsilon:c})},1455809:i=>a.xb(i),1455842:i=>a.zb(i),1455874:(i,c,f)=>{a.kb(i,c,f,!0)},1455913:(i,c,f)=>{a.kb(i,c,f)}};function yt(i){this.name="ExitStatus",this.message=`Program terminated with exit(${i})`,this.status=i}function Mt(i){i.terminate(),i.onmessage=()=>{}}function Dt(i){(i=oe.Qa[i])||et(),oe.Eb(i)}function Zt(i){var c=oe.ub();if(!c)return 6;oe.Za.push(c),oe.Qa[i.Xa]=c,c.Xa=i.Xa;var f={cmd:"run",start_routine:i.Gb,arg:i.sb,pthread_ptr:i.Xa};return I&&c.unref(),c.postMessage(f,i.Mb),0}var zt=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,$r=(i,c,f)=>{c>>>=0;var S=c+f;for(f=c;i[f]&&!(f>=S);)++f;if(16<f-c&&i.buffer&&zt)return zt.decode(i.buffer instanceof SharedArrayBuffer?i.slice(c,f):i.subarray(c,f));for(S="";c<f;){var E=i[c++];if(E&128){var M=i[c++]&63;if((E&224)==192)S+=String.fromCharCode((E&31)<<6|M);else{var W=i[c++]&63;E=(E&240)==224?(E&15)<<12|M<<6|W:(E&7)<<18|M<<12|W<<6|i[c++]&63,65536>E?S+=String.fromCharCode(E):(E-=65536,S+=String.fromCharCode(55296|E>>10,56320|E&1023))}}else S+=String.fromCharCode(E)}return S},qe=(i,c)=>(i>>>=0)?$r(o(),i,c):"";function Xt(i){if($)return H(1,1,i);fe=i,nt()||(oe.Hb(),a.onExit&&a.onExit(i),Ce=!0),v(i,new yt(i))}var Jt=i=>{if(fe=i,$)throw Sr(i),"unwind";Xt(i)},oe={Ya:[],Za:[],ob:[],Qa:{},gb:function(){$?oe.wb():oe.vb()},vb:function(){for(var i=a.numThreads;i--;)oe.jb();Ze.unshift(()=>{jt(),oe.Cb(()=>wr())})},wb:function(){oe.receiveObjectTransfer=oe.Db,oe.threadInitTLS=oe.nb,oe.setExitStatus=oe.mb,ee=!1},mb:function(i){fe=i},Sb:["$terminateWorker"],Hb:function(){for(var i of oe.Za)Mt(i);for(i of oe.Ya)Mt(i);oe.Ya=[],oe.Za=[],oe.Qa=[]},Eb:function(i){var c=i.Xa;delete oe.Qa[c],oe.Ya.push(i),oe.Za.splice(oe.Za.indexOf(i),1),i.Xa=0,pn(c)},Db:function(){},nb:function(){oe.ob.forEach(i=>i())},lb:i=>new Promise(c=>{i.onmessage=M=>{M=M.data;var W=M.cmd;if(M.targetThread&&M.targetThread!=Rr()){var ie=oe.Qa[M.Rb];ie?ie.postMessage(M,M.transferList):q(\'Internal error! Worker sent a message "\'+W+\'" to target pthread \'+M.targetThread+", but that thread no longer exists!")}else W==="checkMailbox"?At():W==="spawnThread"?Zt(M):W==="cleanupThread"?Dt(M.thread):W==="killThread"?(M=M.thread,W=oe.Qa[M],delete oe.Qa[M],Mt(W),pn(M),oe.Za.splice(oe.Za.indexOf(W),1),W.Xa=0):W==="cancelThread"?oe.Qa[M.thread].postMessage({cmd:"cancel"}):W==="loaded"?(i.loaded=!0,I&&!i.Xa&&i.unref(),c(i)):W==="alert"?alert("Thread "+M.threadId+": "+M.text):M.target==="setimmediate"?i.postMessage(M):W==="callHandler"?a[M.handler](...M.args):W&&q("worker sent an unknown command "+W)},i.onerror=M=>{throw q("worker sent an error! "+M.filename+":"+M.lineno+": "+M.message),M},I&&(i.on("message",function(M){i.onmessage({data:M})}),i.on("error",function(M){i.onerror(M)}));var f=[],S=["onExit","onAbort","print","printErr"],E;for(E of S)a.hasOwnProperty(E)&&f.push(E);i.postMessage({cmd:"load",handlers:f,urlOrBlob:a.mainScriptUrlOrBlob||e,wasmMemory:we,wasmModule:ye})}),Cb:function(i){if($)return i();Promise.all(oe.Ya.map(oe.lb)).then(i)},jb:function(){var i=P("ort-wasm-simd-threaded.worker.js");i=new Worker(i),oe.Ya.push(i)},ub:function(){return oe.Ya.length==0&&(oe.jb(),oe.lb(oe.Ya[0])),oe.Ya.pop()}};a.PThread=oe;var ht=i=>{for(;0<i.length;)i.shift()(a)};a.establishStackSpace=function(){var i=Rr(),c=n()[i+52>>2>>>0];i=n()[i+56>>2>>>0],mo(c,c-i),Br(c)};function Sr(i){if($)return H(2,0,i);Jt(i)}a.invokeEntryPoint=function(i,c){i=fo.apply(null,[i,c]),nt()?oe.mb(i):mn(i)};function ot(i){this.fb=i-24,this.rb=function(c){s()[this.fb+4>>2>>>0]=c},this.qb=function(c){s()[this.fb+8>>2>>>0]=c},this.gb=function(c,f){this.pb(),this.rb(c),this.qb(f)},this.pb=function(){s()[this.fb+16>>2>>>0]=0}}var Qe=0,xr=0;function _t(i,c,f,S){return $?H(3,1,i,c,f,S):Qt(i,c,f,S)}function Qt(i,c,f,S){if(i>>>=0,c>>>=0,f>>>=0,S>>>=0,typeof SharedArrayBuffer>"u")return q("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var E=[];return $&&E.length===0?_t(i,c,f,S):(i={Gb:f,Xa:i,sb:S,Mb:E},$?(i.Ob="spawnThread",postMessage(i,E),0):Zt(i))}function er(i,c,f){return $?H(4,1,i,c,f):0}function Cr(i,c){if($)return H(5,1,i,c)}var It=i=>{for(var c=0,f=0;f<i.length;++f){var S=i.charCodeAt(f);127>=S?c++:2047>=S?c+=2:55296<=S&&57343>=S?(c+=4,++f):c+=3}return c},_r=(i,c,f,S)=>{if(f>>>=0,!(0<S))return 0;var E=f;S=f+S-1;for(var M=0;M<i.length;++M){var W=i.charCodeAt(M);if(55296<=W&&57343>=W){var ie=i.charCodeAt(++M);W=65536+((W&1023)<<10)|ie&1023}if(127>=W){if(f>=S)break;c[f++>>>0]=W}else{if(2047>=W){if(f+1>=S)break;c[f++>>>0]=192|W>>6}else{if(65535>=W){if(f+2>=S)break;c[f++>>>0]=224|W>>12}else{if(f+3>=S)break;c[f++>>>0]=240|W>>18,c[f++>>>0]=128|W>>12&63}c[f++>>>0]=128|W>>6&63}c[f++>>>0]=128|W&63}}return c[f>>>0]=0,f-E},Ir=(i,c,f)=>_r(i,o(),c,f);function Ar(i,c){if($)return H(6,1,i,c)}function Tr(i,c,f){if($)return H(7,1,i,c,f)}function Er(i,c,f){return $?H(8,1,i,c,f):0}function Or(i,c){if($)return H(9,1,i,c)}function Vt(i,c,f){if($)return H(10,1,i,c,f)}function tr(i,c,f,S){if($)return H(11,1,i,c,f,S)}function rr(i,c,f,S){if($)return H(12,1,i,c,f,S)}function nr(i,c,f,S){if($)return H(13,1,i,c,f,S)}function or(i){if($)return H(14,1,i)}function ar(i,c){if($)return H(15,1,i,c)}function ir(i,c,f){if($)return H(16,1,i,c,f)}var sr=i=>{if(!Ce)try{if(i(),!nt())try{$?mn(fe):Jt(fe)}catch(c){c instanceof yt||c=="unwind"||v(1,c)}}catch(c){c instanceof yt||c=="unwind"||v(1,c)}};function Ut(i){i>>>=0,typeof Atomics.Nb=="function"&&(Atomics.Nb(n(),i>>2,i).value.then(At),i+=128,Atomics.store(n(),i>>2,1))}a.__emscripten_thread_mailbox_await=Ut;function At(){var i=Rr();i&&(Ut(i),sr(()=>co()))}a.checkMailbox=At;var bt=i=>i%4===0&&(i%100!==0||i%400===0),Tt=[0,31,60,91,121,152,182,213,244,274,305,335],ur=[0,31,59,90,120,151,181,212,243,273,304,334];function d(i,c,f,S,E,M,W,ie){return $?H(17,1,i,c,f,S,E,M,W,ie):-52}function m(i,c,f,S,E,M,W){if($)return H(18,1,i,c,f,S,E,M,W)}var w=i=>{var c=It(i)+1,f=cn(c);return f&&Ir(i,f,c),f},_=[],O=(i,c)=>{_.length=0;var f;for(c>>=2;f=o()[i++>>>0];)c+=f!=105&c,_.push(f==105?n()[c>>>0]:l()[c++>>>1]),++c;return _},F=i=>{var c=fn();return i=i(),Br(c),i};function H(i,c){var f=arguments.length-2,S=arguments;return F(()=>{for(var E=hn(8*f),M=E>>3,W=0;W<f;W++){var ie=S[2+W];l()[M+W>>>0]=ie}return lo(i,f,E,c)})}var de=[],J={},ae=()=>{if(!te){var i={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:g||"./this.program"},c;for(c in J)J[c]===void 0?delete i[c]:i[c]=J[c];var f=[];for(c in i)f.push(`${c}=${i[c]}`);te=f}return te},te;function ge(i,c){if($)return H(19,1,i,c);i>>>=0,c>>>=0;var f=0;return ae().forEach(function(S,E){var M=c+f;for(E=s()[i+4*E>>2>>>0]=M,M=0;M<S.length;++M)r()[E++>>0>>>0]=S.charCodeAt(M);r()[E>>0>>>0]=0,f+=S.length+1}),0}function Se(i,c){if($)return H(20,1,i,c);i>>>=0,c>>>=0;var f=ae();s()[i>>2>>>0]=f.length;var S=0;return f.forEach(function(E){S+=E.length+1}),s()[c>>2>>>0]=S,0}function k(i){return $?H(21,1,i):52}function ue(i,c,f,S){return $?H(22,1,i,c,f,S):52}function ve(i,c,f,S,E){return $?H(23,1,i,c,f,S,E):70}var gt=[null,[],[]];function lr(i,c,f,S){if($)return H(24,1,i,c,f,S);c>>>=0,f>>>=0,S>>>=0;for(var E=0,M=0;M<f;M++){var W=s()[c>>2>>>0],ie=s()[c+4>>2>>>0];c+=8;for(var re=0;re<ie;re++){var ne=o()[W+re>>>0],le=gt[i];ne===0||ne===10?((i===1?B:q)($r(le,0)),le.length=0):le.push(ne)}E+=ie}return s()[S>>2>>>0]=E,0}var to=[31,29,31,30,31,30,31,31,30,31,30,31],ro=[31,28,31,30,31,30,31,31,30,31,30,31];function ku(i){var c=Array(It(i)+1);return _r(i,c,0,c.length),c}var Pu=(i,c)=>{r().set(i,c>>>0)};function no(i,c,f,S){function E(R,me,_e){for(R=typeof R=="number"?R.toString():R||"";R.length<me;)R=_e[0]+R;return R}function M(R,me){return E(R,me,"0")}function W(R,me){function _e(vo){return 0>vo?-1:0<vo?1:0}var Et;return(Et=_e(R.getFullYear()-me.getFullYear()))===0&&(Et=_e(R.getMonth()-me.getMonth()))===0&&(Et=_e(R.getDate()-me.getDate())),Et}function ie(R){switch(R.getDay()){case 0:return new Date(R.getFullYear()-1,11,29);case 1:return R;case 2:return new Date(R.getFullYear(),0,3);case 3:return new Date(R.getFullYear(),0,2);case 4:return new Date(R.getFullYear(),0,1);case 5:return new Date(R.getFullYear()-1,11,31);case 6:return new Date(R.getFullYear()-1,11,30)}}function re(R){var me=R.$a;for(R=new Date(new Date(R.ab+1900,0,1).getTime());0<me;){var _e=R.getMonth(),Et=(bt(R.getFullYear())?to:ro)[_e];if(me>Et-R.getDate())me-=Et-R.getDate()+1,R.setDate(1),11>_e?R.setMonth(_e+1):(R.setMonth(0),R.setFullYear(R.getFullYear()+1));else{R.setDate(R.getDate()+me);break}}return _e=new Date(R.getFullYear()+1,0,4),me=ie(new Date(R.getFullYear(),0,4)),_e=ie(_e),0>=W(me,R)?0>=W(_e,R)?R.getFullYear()+1:R.getFullYear():R.getFullYear()-1}i>>>=0,c>>>=0,f>>>=0,S>>>=0;var ne=n()[S+40>>2>>>0];S={Kb:n()[S>>2>>>0],Jb:n()[S+4>>2>>>0],cb:n()[S+8>>2>>>0],ib:n()[S+12>>2>>>0],eb:n()[S+16>>2>>>0],ab:n()[S+20>>2>>>0],Wa:n()[S+24>>2>>>0],$a:n()[S+28>>2>>>0],Tb:n()[S+32>>2>>>0],Ib:n()[S+36>>2>>>0],Lb:ne?qe(ne):""},f=qe(f),ne={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var le in ne)f=f.replace(new RegExp(le,"g"),ne[le]);var xe="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Ie="January February March April May June July August September October November December".split(" ");ne={"%a":R=>xe[R.Wa].substring(0,3),"%A":R=>xe[R.Wa],"%b":R=>Ie[R.eb].substring(0,3),"%B":R=>Ie[R.eb],"%C":R=>M((R.ab+1900)/100|0,2),"%d":R=>M(R.ib,2),"%e":R=>E(R.ib,2," "),"%g":R=>re(R).toString().substring(2),"%G":R=>re(R),"%H":R=>M(R.cb,2),"%I":R=>(R=R.cb,R==0?R=12:12<R&&(R-=12),M(R,2)),"%j":R=>{for(var me=0,_e=0;_e<=R.eb-1;me+=(bt(R.ab+1900)?to:ro)[_e++]);return M(R.ib+me,3)},"%m":R=>M(R.eb+1,2),"%M":R=>M(R.Jb,2),"%n":()=>`\n`,"%p":R=>0<=R.cb&&12>R.cb?"AM":"PM","%S":R=>M(R.Kb,2),"%t":()=>"	","%u":R=>R.Wa||7,"%U":R=>M(Math.floor((R.$a+7-R.Wa)/7),2),"%V":R=>{var me=Math.floor((R.$a+7-(R.Wa+6)%7)/7);if(2>=(R.Wa+371-R.$a-2)%7&&me++,me)me==53&&(_e=(R.Wa+371-R.$a)%7,_e==4||_e==3&&bt(R.ab)||(me=1));else{me=52;var _e=(R.Wa+7-R.$a-1)%7;(_e==4||_e==5&&bt(R.ab%400-1))&&me++}return M(me,2)},"%w":R=>R.Wa,"%W":R=>M(Math.floor((R.$a+7-(R.Wa+6)%7)/7),2),"%y":R=>(R.ab+1900).toString().substring(2),"%Y":R=>R.ab+1900,"%z":R=>{R=R.Ib;var me=0<=R;return R=Math.abs(R)/60,(me?"+":"-")+("0000"+(R/60*100+R%60)).slice(-4)},"%Z":R=>R.Lb,"%%":()=>"%"},f=f.replace(/%%/g,"\\0\\0");for(le in ne)f.includes(le)&&(f=f.replace(new RegExp(le,"g"),ne[le](S)));return f=f.replace(/\\0\\0/g,"%"),le=ku(f),le.length>c?0:(Pu(le,i),le.length-1)}function kr(i){try{i()}catch(c){et(c)}}function Ru(i){var c={},f;for(f in i)(function(S){var E=i[S];c[S]=typeof E=="function"?function(){Pr.push(S);try{return E.apply(null,arguments)}finally{Ce||(Pr.pop()===S||et(),at&&wt===1&&Pr.length===0&&(wt=0,Ke+=1,kr(go),typeof Fibers<"u"&&Fibers.Ub()))}}:E})(f);return c}var wt=0,at=null,oo=0,Pr=[],ao={},io={},Bu=0,dn=null,Mu=[];function Du(){return new Promise((i,c)=>{dn={resolve:i,reject:c}})}function zu(){var i=cn(65548),c=i+12;s()[i>>2>>>0]=c,s()[i+4>>2>>>0]=c+65536,c=Pr[0];var f=ao[c];return f===void 0&&(f=Bu++,ao[c]=f,io[f]=c),c=f,n()[i+8>>2>>>0]=c,i}function Vu(){var i=n()[at+8>>2>>>0];return i=Z[io[i]],--Ke,i()}function Uu(i){if(!Ce){if(wt===0){var c=!1,f=!1;i((S=0)=>{if(!Ce&&(oo=S,c=!0,f)){wt=2,kr(()=>yo(at)),typeof Browser<"u"&&Browser.hb.tb&&Browser.hb.resume(),S=!1;try{var E=Vu()}catch(ie){E=ie,S=!0}var M=!1;if(!at){var W=dn;W&&(dn=null,(S?W.reject:W.resolve)(E),M=!0)}if(S&&!M)throw E}}),f=!0,c||(wt=1,at=zu(),typeof Browser<"u"&&Browser.hb.tb&&Browser.hb.pause(),kr(()=>ho(at)))}else wt===2?(wt=0,kr(bo),so(at),at=null,Mu.forEach(S=>sr(S))):et(`invalid state: ${wt}`);return oo}}function Wu(i){return Uu(c=>{i().then(c)})}oe.gb();var Nu=[null,Xt,Sr,_t,er,Cr,Ar,Tr,Er,Or,Vt,tr,rr,nr,or,ar,ir,d,m,ge,Se,k,ue,ve,lr],Hu={r:function(i,c,f){return Wu(async()=>{await a.yb(i,c,f)})},b:function(i,c,f){throw i>>>=0,new ot(i).gb(c>>>0,f>>>0),Qe=i,xr++,Qe},P:function(i){uo(i>>>0,!x,1,!b,131072,!1),oe.nb()},n:function(i){i>>>=0,$?postMessage({cmd:"cleanupThread",thread:i}):Dt(i)},K:Qt,g:er,V:Cr,F:Ar,H:Tr,y:Er,T:Or,L:Vt,S:tr,p:rr,G:nr,D:or,U:ar,E:ir,q:()=>!0,B:function(i,c){i>>>=0,i==c>>>0?setTimeout(()=>At()):$?postMessage({targetThread:i,cmd:"checkMailbox"}):(i=oe.Qa[i])&&i.postMessage({cmd:"checkMailbox"})},N:function(){return-1},O:Ut,X:function(i){I&&oe.Qa[i>>>0].ref()},u:function(i,c,f){i=c+2097152>>>0<4194305-!!i?(i>>>0)+4294967296*c:NaN,f>>>=0,i=new Date(1e3*i),n()[f>>2>>>0]=i.getUTCSeconds(),n()[f+4>>2>>>0]=i.getUTCMinutes(),n()[f+8>>2>>>0]=i.getUTCHours(),n()[f+12>>2>>>0]=i.getUTCDate(),n()[f+16>>2>>>0]=i.getUTCMonth(),n()[f+20>>2>>>0]=i.getUTCFullYear()-1900,n()[f+24>>2>>>0]=i.getUTCDay(),i=(i.getTime()-Date.UTC(i.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,n()[f+28>>2>>>0]=i},v:function(i,c,f){i=c+2097152>>>0<4194305-!!i?(i>>>0)+4294967296*c:NaN,f>>>=0,i=new Date(1e3*i),n()[f>>2>>>0]=i.getSeconds(),n()[f+4>>2>>>0]=i.getMinutes(),n()[f+8>>2>>>0]=i.getHours(),n()[f+12>>2>>>0]=i.getDate(),n()[f+16>>2>>>0]=i.getMonth(),n()[f+20>>2>>>0]=i.getFullYear()-1900,n()[f+24>>2>>>0]=i.getDay(),c=(bt(i.getFullYear())?Tt:ur)[i.getMonth()]+i.getDate()-1|0,n()[f+28>>2>>>0]=c,n()[f+36>>2>>>0]=-(60*i.getTimezoneOffset()),c=new Date(i.getFullYear(),6,1).getTimezoneOffset();var S=new Date(i.getFullYear(),0,1).getTimezoneOffset();i=(c!=S&&i.getTimezoneOffset()==Math.min(S,c))|0,n()[f+32>>2>>>0]=i},w:function(i){i>>>=0;var c=new Date(n()[i+20>>2>>>0]+1900,n()[i+16>>2>>>0],n()[i+12>>2>>>0],n()[i+8>>2>>>0],n()[i+4>>2>>>0],n()[i>>2>>>0],0),f=n()[i+32>>2>>>0],S=c.getTimezoneOffset(),E=new Date(c.getFullYear(),6,1).getTimezoneOffset(),M=new Date(c.getFullYear(),0,1).getTimezoneOffset(),W=Math.min(M,E);return 0>f?n()[i+32>>2>>>0]=+(E!=M&&W==S):0<f!=(W==S)&&(E=Math.max(M,E),c.setTime(c.getTime()+6e4*((0<f?W:E)-S))),n()[i+24>>2>>>0]=c.getDay(),f=(bt(c.getFullYear())?Tt:ur)[c.getMonth()]+c.getDate()-1|0,n()[i+28>>2>>>0]=f,n()[i>>2>>>0]=c.getSeconds(),n()[i+4>>2>>>0]=c.getMinutes(),n()[i+8>>2>>>0]=c.getHours(),n()[i+12>>2>>>0]=c.getDate(),n()[i+16>>2>>>0]=c.getMonth(),n()[i+20>>2>>>0]=c.getYear(),i=c.getTime()/1e3,po((ft=i,1<=+Math.abs(ft)?0<ft?+Math.floor(ft/4294967296)>>>0:~~+Math.ceil((ft-+(~~ft>>>0))/4294967296)>>>0:0)),i>>>0},s:d,t:m,A:function(i,c,f){function S(ne){return(ne=ne.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?ne[1]:"GMT"}i>>>=0,c>>>=0,f>>>=0;var E=new Date().getFullYear(),M=new Date(E,0,1),W=new Date(E,6,1);E=M.getTimezoneOffset();var ie=W.getTimezoneOffset(),re=Math.max(E,ie);s()[i>>2>>>0]=60*re,n()[c>>2>>>0]=+(E!=ie),i=S(M),c=S(W),i=w(i),c=w(c),ie<E?(s()[f>>2>>>0]=i,s()[f+4>>2>>>0]=c):(s()[f>>2>>>0]=c,s()[f+4>>2>>>0]=i)},e:()=>{et("")},c:function(i,c,f){return i>>>=0,c=O(c>>>0,f>>>0),Bt[i].apply(null,c)},l:function(i,c,f){return i>>>=0,c=O(c>>>0,f>>>0),Bt[i].apply(null,c)},o:function(){},k:function(){return Date.now()},W:()=>{throw Ke+=1,"unwind"},C:function(){return 4294901760},d:()=>performance.timeOrigin+performance.now(),i:function(){return I?(Ao(),Wt(Io)).cpus().length:navigator.hardwareConcurrency},M:function(i,c,f,S){for(oe.Pb=c>>>0,de.length=f,c=S>>>0>>3,S=0;S<f;S++)de[S]=l()[c+S>>>0];return(0>i?Bt[-i-1]:Nu[i]).apply(null,de)},z:function(i){i>>>=0;var c=o().length;if(i<=c||4294901760<i)return!1;for(var f=1;4>=f;f*=2){var S=c*(1+.2/f);S=Math.min(S,i+100663296);var E=Math;S=Math.max(i,S);e:{E=E.min.call(E,4294901760,S+(65536-S%65536)%65536)-we.buffer.byteLength+65535>>>16;try{we.grow(E),he();var M=1;break e}catch{}M=void 0}if(M)return!0}return!1},Q:ge,R:Se,J:Jt,h:k,m:ue,x:ve,j:lr,a:we||a.wasmMemory,I:no,f:function(i,c,f,S){return no(i>>>0,c>>>0,f>>>0,S>>>0)}};(function(){function i(f,S){return f=f.exports,f=Ru(f),Z=f=Gu(f),oe.ob.push(Z.Da),Me.unshift(Z.Y),ye=S,wr(),f}var c={a:Hu};if(jt(),a.instantiateWasm)try{return a.instantiateWasm(c,i)}catch(f){q("Module.instantiateWasm callback failed with error: "+f),h(f)}return vr(c,function(f){i(f.instance,f.module)}).catch(h),{}})(),a._OrtInit=(i,c)=>(a._OrtInit=Z.Z)(i,c),a._OrtGetLastError=(i,c)=>(a._OrtGetLastError=Z._)(i,c),a._OrtCreateSessionOptions=(i,c,f,S,E,M,W,ie,re,ne)=>(a._OrtCreateSessionOptions=Z.$)(i,c,f,S,E,M,W,ie,re,ne),a._OrtAppendExecutionProvider=(i,c)=>(a._OrtAppendExecutionProvider=Z.aa)(i,c),a._OrtAddFreeDimensionOverride=(i,c,f)=>(a._OrtAddFreeDimensionOverride=Z.ba)(i,c,f),a._OrtAddSessionConfigEntry=(i,c,f)=>(a._OrtAddSessionConfigEntry=Z.ca)(i,c,f),a._OrtReleaseSessionOptions=i=>(a._OrtReleaseSessionOptions=Z.da)(i),a._OrtCreateSession=(i,c,f)=>(a._OrtCreateSession=Z.ea)(i,c,f),a._OrtReleaseSession=i=>(a._OrtReleaseSession=Z.fa)(i),a._OrtGetInputOutputCount=(i,c,f)=>(a._OrtGetInputOutputCount=Z.ga)(i,c,f),a._OrtGetInputName=(i,c)=>(a._OrtGetInputName=Z.ha)(i,c),a._OrtGetOutputName=(i,c)=>(a._OrtGetOutputName=Z.ia)(i,c),a._OrtFree=i=>(a._OrtFree=Z.ja)(i),a._OrtCreateTensor=(i,c,f,S,E,M)=>(a._OrtCreateTensor=Z.ka)(i,c,f,S,E,M),a._OrtGetTensorData=(i,c,f,S,E)=>(a._OrtGetTensorData=Z.la)(i,c,f,S,E),a._OrtReleaseTensor=i=>(a._OrtReleaseTensor=Z.ma)(i),a._OrtCreateRunOptions=(i,c,f,S)=>(a._OrtCreateRunOptions=Z.na)(i,c,f,S),a._OrtAddRunConfigEntry=(i,c,f)=>(a._OrtAddRunConfigEntry=Z.oa)(i,c,f),a._OrtReleaseRunOptions=i=>(a._OrtReleaseRunOptions=Z.pa)(i),a._OrtCreateBinding=i=>(a._OrtCreateBinding=Z.qa)(i),a._OrtBindInput=(i,c,f)=>(a._OrtBindInput=Z.ra)(i,c,f),a._OrtBindOutput=(i,c,f,S)=>(a._OrtBindOutput=Z.sa)(i,c,f,S),a._OrtClearBoundOutputs=i=>(a._OrtClearBoundOutputs=Z.ta)(i),a._OrtReleaseBinding=i=>(a._OrtReleaseBinding=Z.ua)(i),a._OrtRunWithBinding=(i,c,f,S,E)=>(a._OrtRunWithBinding=Z.va)(i,c,f,S,E),a._OrtRun=(i,c,f,S,E,M,W,ie)=>(a._OrtRun=Z.wa)(i,c,f,S,E,M,W,ie),a._OrtEndProfiling=i=>(a._OrtEndProfiling=Z.xa)(i),a._JsepOutput=(i,c,f)=>(a._JsepOutput=Z.ya)(i,c,f),a._JsepGetNodeName=i=>(a._JsepGetNodeName=Z.za)(i);var Rr=a._pthread_self=()=>(Rr=a._pthread_self=Z.Aa)(),cn=a._malloc=i=>(cn=a._malloc=Z.Ba)(i),so=a._free=i=>(so=a._free=Z.Ca)(i);a.__emscripten_tls_init=()=>(a.__emscripten_tls_init=Z.Da)();var uo=a.__emscripten_thread_init=(i,c,f,S,E,M)=>(uo=a.__emscripten_thread_init=Z.Fa)(i,c,f,S,E,M);a.__emscripten_thread_crashed=()=>(a.__emscripten_thread_crashed=Z.Ga)();var lo=(i,c,f,S)=>(lo=Z.Ha)(i,c,f,S),pn=i=>(pn=Z.Ia)(i),mn=a.__emscripten_thread_exit=i=>(mn=a.__emscripten_thread_exit=Z.Ja)(i),co=a.__emscripten_check_mailbox=()=>(co=a.__emscripten_check_mailbox=Z.Ka)(),po=i=>(po=Z.La)(i),mo=(i,c)=>(mo=Z.Ma)(i,c),fn=()=>(fn=Z.Na)(),Br=i=>(Br=Z.Oa)(i),hn=i=>(hn=Z.Pa)(i),fo=a.dynCall_ii=(i,c)=>(fo=a.dynCall_ii=Z.Ra)(i,c),ho=i=>(ho=Z.Sa)(i),go=()=>(go=Z.Ta)(),yo=i=>(yo=Z.Ua)(i),bo=()=>(bo=Z.Va)();a.___start_em_js=1455946,a.___stop_em_js=1456107;function Gu(i){i=Object.assign({},i);var c=S=>()=>S()>>>0,f=S=>E=>S(E)>>>0;return i.__errno_location=c(i.__errno_location),i.pthread_self=c(i.pthread_self),i.malloc=f(i.malloc),i.stackSave=c(i.stackSave),i.stackAlloc=f(i.stackAlloc),i}a.keepRuntimeAlive=nt,a.wasmMemory=we,a.stackAlloc=hn,a.stackSave=fn,a.stackRestore=Br,a.UTF8ToString=qe,a.stringToUTF8=Ir,a.lengthBytesUTF8=It,a.ExitStatus=yt,a.PThread=oe;var Mr;Ct=function i(){Mr||wo(),Mr||(Ct=i)};function wo(){function i(){if(!Mr&&(Mr=!0,a.calledRun=!0,!Ce)&&($||ht(Me),p(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),!$)){if(a.postRun)for(typeof a.postRun=="function"&&(a.postRun=[a.postRun]);a.postRun.length;){var c=a.postRun.shift();Ge.unshift(c)}ht(Ge)}}if(!(0<Je))if($)p(a),$||ht(Me),startWorker(a);else{if(a.preRun)for(typeof a.preRun=="function"&&(a.preRun=[a.preRun]);a.preRun.length;)Ze.unshift(a.preRun.shift());ht(Ze),0<Je||(a.setStatus?(a.setStatus("Running..."),setTimeout(function(){setTimeout(function(){a.setStatus("")},1),i()},1)):i())}}if(a.preInit)for(typeof a.preInit=="function"&&(a.preInit=[a.preInit]);0<a.preInit.length;)a.preInit.pop()();return wo(),t.ready}})();typeof Eo=="object"&&typeof Sn=="object"?Sn.exports=To:typeof define=="function"&&define.amd&&define([],()=>To)});var ko=dr((Zc,Xu)=>{Xu.exports=\'"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>(0,eval)(fs.readFileSync(e,"utf8")+"//# sourceURL="+e),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason??e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err("worker.js received unknown command "+e.data.cmd),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed&&Module.__emscripten_thread_crashed(),a}}self.onmessage=handleMessage;\\n\'});var _n,Ot,pr,Vr,mr,zo,In,Ue=K(()=>{"use strict";_n=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},Ot=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},pr=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],Vr=e=>{switch(e){case"float16":return Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},mr=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},zo=e=>e==="float32"||e==="int32"||e==="int64"||e==="bool"||e==="float16"||e==="uint32",In=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}});var Ur=K(()=>{});var Vo=K(()=>{Ur()});var Uo,Wo=K(()=>{Uo="1.17.0"});var No,kt,An=K(()=>{Wo();No="warning",kt={wasm:{},webgl:{},webgpu:{},versions:{common:Uo},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);No=e}},get logLevel(){return No}};Object.defineProperty(kt,"logLevel",{enumerable:!0})});var Nt,Ho=K(()=>{An();Nt=kt});var Go=K(()=>{});var Lo=K(()=>{Wr()});var qo=K(()=>{});var jo=K(()=>{Wr()});var Wr=K(()=>{Go();Lo();qo();jo()});var Nr=K(()=>{Wr()});var il,Ko,Ht,Gt,Tn=K(()=>{An();il=(e,t)=>{kt.wasm.trace&&console.timeStamp(`${e}::ORT::${t}`)},Ko=(e,t)=>{let r=new Error().stack?.split(/\\r\\n|\\r|\\n/g)||[],o=!1;for(let n=0;n<r.length;n++){if(o&&!r[n].includes("TRACE_FUNC")){let s=`FUNC_${e}::${r[n].trim().split(" ")[1]}`;t&&(s+=`::${t}`),il("CPU",s);return}r[n].includes("TRACE_FUNC")&&(o=!0)}},Ht=e=>{kt.wasm.trace&&Ko("BEGIN",e)},Gt=e=>{kt.wasm.trace&&Ko("END",e)}});var Yo=K(()=>{Ur();Nr();Tn()});var Zo=K(()=>{Yo()});var Xo=K(()=>{});var Jo=K(()=>{Ur();Nr()});var Qo=K(()=>{Jo()});var Lt=K(()=>{Vo();Ho();Zo();Nr();Tn();Xo();Qo()});var ll,dl,ea,ta,ra,cl,Pe,vt=K(()=>{"use strict";Ue();ll=["V","I","W","E","F"],dl=(e,t)=>{console.log(`[${ll[e]},${new Date().toISOString()}]${t}`)},ra=(e,t)=>{ea=e,ta=t},cl=(e,t)=>{let r=mr(e),o=mr(ea);r>=o&&dl(r,typeof t=="function"?t():t)},Pe=(...e)=>{ta&&cl(...e)}});var na,oa=K(()=>{"use strict";Ue();na=(e,t)=>new(Vr(t))(e)});var Hr=K(()=>{"use strict"});var Gr,pl,aa,On,En,sa,ua=K(()=>{"use strict";vt();Hr();Gr=e=>Math.ceil(e/16)*16,pl=1,aa=()=>pl++,On=async(e,t,r,o)=>{let n=Gr(r),s=e.device.createBuffer({size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let u=e.getCommandEncoder();e.endComputePass(),u.copyBufferToBuffer(t,0,s,0,n),e.flush(),await s.mapAsync(GPUMapMode.READ);let l=s.getMappedRange();if(o){let a=o();return a.set(new Uint8Array(l,0,r)),a}else return new Uint8Array(l.slice(0,r))}finally{s.destroy()}},En=class{constructor(t){this.backend=t;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map}upload(t,r){let o=r.buffer,n=r.byteOffset,s=r.byteLength,u=Gr(s),l=this.storageCache.get(t);if(!l)throw new Error("gpu data for uploading does not exist");if(l.originalSize!==s)throw new Error(`inconsistent data size. gpu data size=${l.originalSize}, data size=${s}`);let a=this.backend.device.createBuffer({mappedAtCreation:!0,size:u,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),p=a.getMappedRange();new Uint8Array(p).set(new Uint8Array(o,n,s)),a.unmap();let h=this.backend.getCommandEncoder();this.backend.endComputePass(),h.copyBufferToBuffer(a,0,l.gpuData.buffer,0,u),Pe("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${t})`),this.buffersForUploadingPending.push(a)}memcpy(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("source gpu data for memcpy does not exist");let n=this.storageCache.get(r);if(!n)throw new Error("destination gpu data for memcpy does not exist");if(o.originalSize!==n.originalSize)throw new Error("inconsistent source and destination gpu data size");let s=Gr(o.originalSize),u=this.backend.getCommandEncoder();this.backend.endComputePass(),u.copyBufferToBuffer(o.gpuData.buffer,0,n.gpuData.buffer,0,s)}registerExternalBuffer(t,r,o){let n;if(o){if(n=this.externalBuffers.get(o),n===void 0)throw new Error("previous buffer is not registered");if(t===o)return Pe("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${n}, buffer is the same, skip.`),n;this.externalBuffers.delete(o)}else n=aa();return this.storageCache.set(n,{gpuData:{id:n,type:0,buffer:t},originalSize:r}),this.externalBuffers.set(t,n),Pe("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${n}, registered.`),n}unregisterExternalBuffer(t){let r=this.externalBuffers.get(t);r!==void 0&&(this.storageCache.delete(r),this.externalBuffers.delete(t),Pe("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${r}`))}create(t,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let o=Gr(t),n,s=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,u=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(s||u){let a=s?this.freeBuffers:this.freeUniformBuffers,p=a.get(o);p||(p=[],a.set(o,p)),p.length>0?n=p.pop():n=this.backend.device.createBuffer({size:o,usage:r})}else n=this.backend.device.createBuffer({size:o,usage:r});let l={id:aa(),type:0,buffer:n};return this.storageCache.set(l.id,{gpuData:l,originalSize:t}),Pe("verbose",()=>`[WebGPU] GpuDataManager.create(size=${t}) => id=${l.id}`),l}get(t){return this.storageCache.get(t)?.gpuData}release(t){let r=this.storageCache.get(t);if(!r)throw new Error("releasing data does not exist");return Pe("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${r.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(r.gpuData.buffer),r.originalSize}async download(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("data does not exist");await On(this.backend,o.gpuData.buffer,o.originalSize,r)}refreshPendingBuffers(){for(let t of this.buffersForUploadingPending)t.destroy();this.buffersForUploadingPending=[];for(let t of this.buffersPending)(t.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(t.size).push(t):(t.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(t.size).push(t):t.destroy();this.buffersPending=[]}dispose(){this.freeBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map}},sa=(...e)=>new En(...e)});var kn,se,Re=K(()=>{"use strict";kn=class{constructor(t){Object.assign(this,t)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(t=>`${this[t]}`).join(";")),this.key}},se=e=>new kn(e)});var Pn,it,D,Pt,Lr,Fr,qr,$e=K(()=>{"use strict";Pn=class{static calcMatMulShape(t,r){return t[1]!==r[0]?void 0:[t[0],r[1]]}},it=class{static calcShape(t,r,o=!1){let n=t.length,s=r.length;if(n===0)return r;if(s===0)return t;let u=Math.max(t.length,r.length),l=new Array(u);if(o){if(n<2||s<2)return;let a=Pn.calcMatMulShape([t[n-2],t[n-1]],[r[s-2],r[s-1]]);if(a===void 0)return;[l[u-2],l[u-1]]=a}for(let a=o?3:1;a<=u;a++){let p=n-a<0?1:t[n-a],h=s-a<0?1:r[s-a];if(p!==h&&p>1&&h>1)return;l[u-a]=Math.max(p,h)}return l}static isValidBroadcast(t,r){let o=t.length,n=r.length;if(o>n)return!1;for(let s=1;s<=o;s++)if(t[o-s]!==1&&t[o-s]!==r[n-s])return!1;return!0}},D=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,o){let n=1;for(let s=r;s<o;s++){if(t[s]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");n*=t[s]}return n}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let o=new Array(r);o[r-1]=1,o[r-2]=t[r-1];for(let n=r-3;n>=0;--n)o[n]=o[n+1]*t[n+1];return o}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(o=>this.normalizeAxis(o,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(o=>t[o]):t.slice().reverse()}static padShape(t,r){let o=t.length;return t.map((n,s)=>n+r[s]+r[s+o])}static areEqual(t,r){return t.length!==r.length?!1:t.every((o,n)=>o===r[n])}},Pt=class e{static adjustPoolAttributes(t,r,o,n,s,u){if(!t&&o.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let l=0;l<r.length-2;l++)l>=o.length?o.push(r[l+2]):o[l]=r[l+2];for(let l=0;l<o.length;l++)if(l<n.length){if(n[l]<0)throw new Error("strides should be greater than or equal to 1")}else n.push(1);for(let l=0;l<o.length;l++)if(l<s.length){if(s[l]<0)throw new Error("dilations should be greater than or equal to 1")}else s.push(1);for(let l=0;l<o.length*2;l++)if(l<u.length){if(u[l]<0)throw new Error("pad should be greater than or equal to 1")}else u.push(0);for(let l=0;l<o.length;l++){if(o[l]<=0)throw new Error("kernel shapes need to be greater than 0");if(u[l]>=o[l]||u[l+o.length]>=o[l])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,o,n,s,u,l){if(l){if(s.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(n.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let a=0;a<t.length-2;a++)e.adjustPadAndReturnShape(t[a+(u?1:2)],r[a],o[a],n[a],s,a,a+t.length-2,l)}}static computePoolOutputShape(t,r,o,n,s,u,l){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let a=[r[0],r[1]];return e.computeShapeHelper(t,r,a,o,n,s,u,l),a}static computeConvOutputShape(t,r,o,n,s,u,l){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let a=[t[0],r[0]];return e.computeShapeHelper(!1,t,a,o,n,s,u,l),a}static computeShapeHelper(t,r,o,n,s,u,l,a){if(t)for(let p=0;p<r.length-2;p++)o.push(1);else for(let p=0;p<r.length-2;p++)o.push(e.adjustPadAndReturnShape(r[p+2],n[p],s[p],u[p],l,p,p+r.length-2,a))}static adjustPadAndReturnShape(t,r,o,n,s,u,l,a){let p=o*(n-1)+1;if(a&&a!=="NOTSET")switch(a){case"VALID":return s[u]=0,s[l]=0,Math.floor((t-p)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(o!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let y=((t+r-1)/r-1)*r+n-t;return s[u]=Math.floor(a==="SAME_LOWER"?(y+1)/2:y/2),s[l]=y-s[u],Math.floor((t+y-n)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+s[u]+s[l]-p)/r+1)}},Lr=class{static getShapeOfGemmResult(t,r,o,n,s){if(t.length!==2||o.length!==2)throw new Error("shape need to be of size 2");let u,l,a;r?(u=t[1],l=t[0]):(u=t[0],l=t[1]);let p=-1;if(n?(a=o[0],p=1):(a=o[1],p=0),o[p]!==l)throw new Error("dimension mismatch");if(u<=0||a<=0||l<=0)throw new Error("invalid shape specified");if(s&&!it.isValidBroadcast(s,[u,a]))throw new Error("gemm: invalid bias shape for broadcast");return[u,a,l]}},Fr=-34028234663852886e22,qr=34028234663852886e22});var ml,Bn,Oe,$t,j,Ne,je,tt,Xe,Ae,Mn,V,Y,jr,Rn,la,Ft,ke,be=K(()=>{"use strict";Ue();$e();ml=64,Bn=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}},Oe=(e,t=1)=>{let r=Bn(e,t);return typeof r=="string"?r:r[0]},$t=(e,t=1)=>{let r=Bn(e,t);return typeof r=="string"?r:r[1]},j=e=>e.length===0?[]:[{type:"uint32",data:e},{type:"uint32",data:D.computeStrides(e)}],Ne=e=>e%4===0?4:e%2===0?2:1,je=(e="f32",t,r="0")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,tt=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}f(${r})`,Xe=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,Ae=(e,t,r)=>e.startsWith("uniforms.")&&r>4?typeof t=="string"?`${e}[(${t}) / 4][(${t}) % 4]`:`${e}[${Math.floor(t/4)}][${t%4}]`:r>1?`${e}[${t}]`:e,Mn=(e,t,r,o,n)=>{let s=typeof r=="number",u=s?r:r.length,l=[...new Array(u).keys()],a=u<2?"u32":u<=4?`vec${u}<u32>`:`array<u32, ${u}>`,p=Bn(t,n),h=typeof p=="string"?p:p[1],y=typeof p=="string"?p:p[0],g={indices:a,value:h,storage:y,tensor:t},v=L=>typeof L=="string"?L:`${L}u`,b={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},x=s?"uniforms.":"",I=`${x}${e}_shape`,$=`${x}${e}_strides`,C="";for(let L=0;L<u-1;L++)C+=`\n    let dim${L} = current / ${Ae($,L,u)};\n    let rest${L} = current % ${Ae($,L,u)};\n    indices[${L}] = dim${L};\n    current = rest${L};\n    `;C+=`indices[${u-1}] = current;`;let P=u<2?"":`\n  fn o2i_${e}(offset: u32) -> ${g.indices} {\n    var indices: ${g.indices};\n    var current = offset;\n    ${C}\n    return indices;\n  }`,A=L=>(b.offsetToIndices=!0,u<2?L:`o2i_${e}(${L})`),z=[];if(u>=2)for(let L=u-1;L>=0;L--)z.push(`${Ae($,L,u)} * (indices[${L}])`);let T=u<2?"":`\n  fn i2o_${e}(indices: ${g.indices}) -> u32 {\n    return ${z.join("+")};\n  }`,N=L=>(b.indicesToOffset=!0,u<2?L:`i2o_${e}(${L})`),U=(...L)=>u===0?"0u":`${g.indices}(${L.map(v).join(",")})`,G=(L,X)=>u<2?`${L}`:`${Ae(L,X,u)}`,Q=(L,X,he)=>u<2?`${L}=${he};`:`${Ae(L,X,u)}=${he};`,B={},q=(L,X)=>{b.broadcastedIndicesToOffset=!0;let he=`${X.name}broadcastedIndicesTo${e}Offset`;if(he in B)return`${he}(${L})`;let Fe=[];for(let Ze=u-1;Ze>=0;Ze--){let Me=X.indicesGet("outputIndices",Ze+X.rank-u);Fe.push(`${G($,Ze)} * (${Me} % ${G(I,Ze)})`)}return B[he]=`fn ${he}(outputIndices: ${X.type.indices}) -> u32 {\n             return ${Fe.length>0?Fe.join("+"):"0u"};\n           }`,`${he}(${L})`},pe=(L,X)=>(()=>{if(g.storage===g.value)return`${e}[${L}]=${X};`;if(g.storage==="vec2<u32>"&&g.value==="i32")return`${e}[${L}]=vec2<u32>(u32(${X}), select(0u, 0xFFFFFFFFu, ${X} < 0));`;if(g.storage==="vec2<u32>"&&g.value==="u32")return`${e}[${L}]=vec2<u32>(u32(${X}), 0u);`;if(g.storage==="u32"&&g.value==="vec4<bool>")return`${e}[${L}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${X}));`;throw new Error(`not supported combination of storage type ${g.storage} and value type ${g.value} yet`)})(),ee=L=>(()=>{if(g.storage===g.value)return`${e}[${L}]`;if(g.storage==="vec2<u32>"&&g.value==="i32")return`i32(${e}[${L}].x)`;if(g.storage==="vec2<u32>"&&g.value==="u32")return`u32(${e}[${L}].x)`;if(g.storage==="u32"&&g.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${L}] & 0xFFu), bool(${e}[${L}] & 0xFF00u), bool(${e}[${L}] & 0xFF0000u), bool(${e}[${L}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${g.storage} and value type ${g.value} yet`)})(),we=u<2?"":`\n  fn get_${e}ByIndices(indices: ${g.indices}) -> ${h} {\n    return ${ee(`i2o_${e}(indices)`)};\n  }`,Z=u<2?"":(()=>{let L=l.map(he=>`d${he}: u32`).join(", "),X=l.map(he=>`d${he}`).join(", ");return`\n  fn get_${e}(${L}) -> ${h} {\n    return get_${e}ByIndices(${U(X)});\n  }`})(),ye=(...L)=>{if(L.length!==u)throw new Error(`indices length must be ${u}`);let X=L.map(v).join(",");return u===0?ee("0u"):u===1?ee(X[0]):(b.get=!0,b.getByIndices=!0,b.indicesToOffset=!0,`get_${e}(${X})`)},Ce=L=>u<2?ee(L):(b.getByIndices=!0,b.indicesToOffset=!0,`get_${e}ByIndices(${L})`),fe=u<2?"":`\n  fn set_${e}ByIndices(indices: ${g.indices}, value: ${h}) {\n    ${pe(`i2o_${e}(indices)`,"value")}\n  }`,ce=u<2?"":(()=>{let L=l.map(he=>`d${he}: u32`).join(", "),X=l.map(he=>`d${he}`).join(", ");return`\n  fn set_${e}(${L}, value: ${h}) {\n    set_${e}ByIndices(${U(X)}, value);\n  }`})();return{impl:()=>{let L=[],X=!1;return b.offsetToIndices&&(L.push(P),X=!0),b.indicesToOffset&&(L.push(T),X=!0),b.broadcastedIndicesToOffset&&(Object.values(B).forEach(he=>L.push(he)),X=!0),b.set&&(L.push(ce),X=!0),b.setByIndices&&(L.push(fe),X=!0),b.get&&(L.push(Z),X=!0),b.getByIndices&&(L.push(we),X=!0),!s&&X&&L.unshift(`const ${I} = ${g.indices}(${r.join(",")});`,`const ${$} = ${g.indices}(${D.computeStrides(r).join(",")});`),L.join(`\n`)},type:g,offsetToIndices:A,indicesToOffset:N,broadcastedIndicesToOffset:q,indices:U,indicesGet:G,indicesSet:Q,set:(...L)=>{if(L.length!==u+1)throw new Error(`indices length must be ${u}`);let X=L[u];if(typeof X!="string")throw new Error("value must be string");let he=L.slice(0,u).map(v).join(",");return u===0?pe("0u",X):u===1?pe(he[0],X):(b.set=!0,b.setByIndices=!0,b.indicesToOffset=!0,`set_${e}(${he}, ${X})`)},setByOffset:pe,setByIndices:(L,X)=>u<2?pe(L,X):(b.setByIndices=!0,b.indicesToOffset=!0,`set_${e}ByIndices(${L}, ${X});`),get:ye,getByOffset:ee,getByIndices:Ce,usage:o,name:e,strides:$,shape:I,rank:u}},V=(e,t,r,o=1)=>Mn(e,t,r,"input",o),Y=(e,t,r,o=1)=>Mn(e,t,r,"output",o),jr=(e,t,r,o=1)=>Mn(e,t,r,"internal",o),Rn=class{constructor(t){this.normalizedDispatchGroup=t;this.internalVariables=[];this.variables=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(t){return`if (global_idx >= ${typeof t=="number"?`${t}u`:t}) { return; }`}mainStart(t=ml){let r=typeof t=="number"?t:t[0],o=typeof t=="number"?1:t[1],n=typeof t=="number"?1:t[2],s=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,u=s?`@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(local_invocation_index) local_idx : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(num_workgroups) num_workgroups : vec3<u32>`,l=s?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +\n          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${r*o*n}u + local_idx;`;return`@compute @workgroup_size(${r}, ${o}, ${n})\n  fn main(${u}) {\n    ${l}\n  `}appendVariableUniforms(t){t.rank!==0&&(t.shape.startsWith("uniforms.")&&this.uniforms.push({name:t.shape.replace("uniforms.",""),type:"u32",length:t.rank}),t.strides.startsWith("uniforms.")&&this.uniforms.push({name:t.strides.replace("uniforms.",""),type:"u32",length:t.rank}))}declareVariable(t,r){if(t.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(t),this.appendVariableUniforms(t);let o=t.usage==="input"?"read":"read_write",n=t.type.storage;return`@group(0) @binding(${r}) var<storage, ${o}> ${t.name}: array<${n}>;`}declareVariables(...t){return t.map(r=>this.declareVariable(r,this.variableIndex++)).join(`\n`)}registerInternalVariable(t){if(t.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(t),this.appendVariableUniforms(t)}registerInternalVariables(...t){return t.forEach(r=>this.registerInternalVariable(r)),this}registerUniform(t,r,o=1){return this.uniforms.push({name:t,type:r,length:o}),this}registerUniforms(t){return this.uniforms=this.uniforms.concat(t),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let t=[];for(let{name:r,type:o,length:n}of this.uniforms)if(n&&n>4)t.push(`${r}:array<vec4<${o}>, ${Math.ceil(n/4)}>`);else{let s=n==null||n===1?o:`vec${n}<${o}>`;t.push(`${r}:${s}`)}return`\n      struct Uniforms { ${t.join(", ")} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(t=>t.impl()).join(`\n`)+this.internalVariables.map(t=>t.impl()).join(`\n`)}},la=e=>new Rn(e),Ft=(e,t)=>{let r=e.length,o=[];for(let n=0;n<r;n++){let s=r-1-n,u=e[s]||1;(t[t.length-1-n]||1)>1&&u===1&&o.unshift(s)}return o},ke=e=>!0});var fl,da,hl,gl,rt,ca,pa,qt=K(()=>{"use strict";$e();Re();be();fl=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},da=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,hl=(e,t)=>D.sortBasedOnPerm(e,da(e.length,t)),gl=(e,t,r,o)=>{let n=[];n.push(`fn perm(i: ${o.type.indices}) -> ${r.type.indices} {\n    var a: ${r.type.indices};`);for(let s=0;s<t;++s)n.push(r.indicesSet("a",e[s],`i[${s}]`));return n.push("return a;}"),n.join(`\n`)},rt=(e,t)=>{let r=e.dataType,o=e.dims.length,n=da(o,t),s=ke(o),u=hl(e.dims,n),l=s?u.length:u,a=s?o:e.dims,p=Y("output",r,l),h=V("a",r,a),y=g=>`\n  ${g.registerUniform("output_size","u32").declareVariables(h,p)}\n\n  ${gl(n,o,h,p)}\n\n  ${g.mainStart()}\n    ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${p.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${p.setByOffset("global_idx",h.getByIndices("aIndices"))}\n  }`;return{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:s?["rank"]:["dims"]},getRunData:g=>{let v=D.size(u);return{outputs:[{dims:u,dataType:g[0].dataType}],dispatchGroup:{x:Math.ceil(v/64)},programUniforms:s?[{type:"uint32",data:v},...j(g[0].dims),...j(u)]:[{type:"uint32",data:v}]}},getShaderSource:y}},ca=(e,t)=>{fl(e.inputs),e.compute(rt(e.inputs[0],t.perm))},pa=e=>se({perm:e.perm})});var yl,bl,wl,vl,$l,Sl,xl,Cl,_l,Il,st,ma,fa,ha,ga,ya,ba,wa,va,$a,Sa,xa=K(()=>{"use strict";$e();be();Kr();qt();yl={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},bl={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},wl={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},vl={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},$l=(e,t)=>{let r=[];for(let o=t-e;o<t;++o)r.push(o);return r},Sl=(e,t)=>{let r=[],o=e.length;for(let s=0;s<o;s++)t.indexOf(s)===-1&&r.push(e[s]);let n=t.map(s=>e[s]);return[r,n]},xl=(e,t)=>{let r=e.length+t.length,o=[],n=0;for(let s=0;s<r;s++)t.indexOf(s)===-1?o.push(e[n++]):o.push(1);return o},Cl=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},_l=(e,t)=>{let r=[];if(!Cl(e,t)){for(let o=0;o<t;++o)e.indexOf(o)===-1&&r.push(o);e.forEach(o=>r.push(o))}return r},Il=(e,t,r,o,n,s,u)=>{let l=r[0].dims,a=D.size(s),p=D.size(u),h=V("_A",r[0].dataType,l),y=Y("output",n,s),g=32,v=`\n          var<workgroup> aBestValues : array<${y.type.storage}, ${g}>;\n       `;return{name:e,shaderCache:t,getShaderSource:x=>`\n        ${x.registerUniform("reduceSize","u32").declareVariables(h,y)}\n        ${v}\n        fn DIV_CEIL(a : u32, b : u32) -> u32 {\n          return ((a - 1u) / b + 1u);\n         }\n         ${x.mainStart(g)}\n\n          let outputIndex = global_idx / ${g};\n          let offset = outputIndex * uniforms.reduceSize;\n\n          var bestValue = ${y.type.storage}(${wl[o]});\n          let Length = uniforms.reduceSize;\n          for (var k = local_idx; k < Length; k = k + ${g}) {\n           let candidate = ${y.type.storage}(${h.getByOffset("offset + k")});\n           bestValue = ${yl[o]};\n          }\n          aBestValues[local_idx] = bestValue;\n          workgroupBarrier();\n\n         var reduceSize = min(Length, ${g}u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (local_idx < currentSize) {\n            let candidate = aBestValues[local_idx + interval];\n            bestValue = ${bl[o]};\n            aBestValues[local_idx] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (local_idx == 0u) {\n          ${y.setByOffset("outputIndex",`${o==="mean"?`bestValue / ${y.type.storage}(uniforms.reduceSize)`:`${vl[o]}`}`)};\n         }\n        }`,getRunData:()=>({outputs:[{dims:s,dataType:n}],dispatchGroup:{x:a},programUniforms:[{type:"uint32",data:p}]})}},st=(e,t,r,o)=>{let n=e.inputs.length===1?r:Dn(e.inputs,r),s=n.axes;s.length===0&&!n.noopWithEmptyAxes&&(s=e.inputs[0].dims.map((v,b)=>b));let u=D.normalizeAxes(s,e.inputs[0].dims.length),l=u,a=e.inputs[0],p=_l(l,e.inputs[0].dims.length);p.length>0&&(a=e.compute(rt(e.inputs[0],p),{inputs:[0],outputs:[-1]})[0],l=$l(l.length,a.dims.length));let[h,y]=Sl(a.dims,l),g=h;n.keepDims&&(g=xl(h,u)),e.compute(Il(t,{hint:n.cacheKey,inputDependencies:["type"]},[a],o,e.inputs[0].dataType,g,y),{inputs:[a]})},ma=(e,t)=>{st(e,"ReduceMeanShared",t,"mean")},fa=(e,t)=>{st(e,"ReduceL1Shared",t,"l1")},ha=(e,t)=>{st(e,"ReduceL2Shared",t,"l2")},ga=(e,t)=>{st(e,"ReduceLogSumExpShared",t,"logSumExp")},ya=(e,t)=>{st(e,"ReduceMaxShared",t,"max")},ba=(e,t)=>{st(e,"ReduceMinShared",t,"min")},wa=(e,t)=>{st(e,"ReduceProdShared",t,"prod")},va=(e,t)=>{st(e,"ReduceSumShared",t,"sum")},$a=(e,t)=>{st(e,"ReduceSumSquareShared",t,"sumSquare")},Sa=(e,t)=>{st(e,"ReduceLogSumShared",t,"logSum")}});var ut,Al,Yr,Dn,lt,Tl,El,Ol,kl,Pl,Rl,Bl,Ml,Dl,zl,dt,Ca,_a,Ia,Aa,Ta,Ea,Oa,ka,Pa,Ra,Kr=K(()=>{"use strict";$e();Re();be();xa();ut=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},Al=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],Yr=(e,t,r,o,n,s,u=!1,l=!1)=>{let a=[],p=r[0].dims,h=p.length,y=D.normalizeAxes(n,h),g=!l&&y.length===0;p.forEach((I,$)=>{g||y.indexOf($)>=0?u&&a.push(1):a.push(I)});let v=a.length,b=D.size(a);return{name:e,shaderCache:t,getShaderSource:I=>{let $=[],C=V("_A",r[0].dataType,h),P=Y("output",s,v),A=o(C,P,y),z=A[2];for(let T=0,N=0;T<h;T++)g||y.indexOf(T)>=0?(u&&N++,z=`for(var j${T}: u32 = 0; j${T} < ${p[T]}; j${T}++) {\n                  ${A[2].includes("last_index")?`let last_index = j${T};`:""}\n                  ${C.indicesSet("input_indices",T,`j${T}`)}\n                  ${z}\n                }`):($.push(`${C.indicesSet("input_indices",T,P.indicesGet("output_indices",N))};`),N++);return`\n\n        ${I.registerUniform("output_size","u32").declareVariables(C,P)}\n\n        ${I.mainStart()}\n          ${I.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var input_indices: ${C.type.indices};\n          let output_indices = ${P.offsetToIndices("global_idx")};\n\n          ${$.join(`\n`)}\n          ${A[0]}       // init ops for reduce max/min\n          ${A[1]}\n          ${z}\n          ${A[3]}\n          ${A.length===4?P.setByOffset("global_idx","value"):A.slice(4).join(`\n`)}\n        }`},getRunData:()=>({outputs:[{dims:a,dataType:s}],dispatchGroup:{x:Math.ceil(b/64)},programUniforms:[{type:"uint32",data:b},...j(p),...j(a)]})}},Dn=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(o=>r.push(Number(o))),se({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},lt=(e,t,r,o)=>{let n=e.inputs,s=n.length===1?r:Dn(n,r);e.compute(Yr(t,{hint:s.cacheKey,inputDependencies:["rank"]},[n[0]],s.noopWithEmptyAxes&&s.axes.length===0?Al:o,s.axes,n[0].dataType,s.keepDims,s.noopWithEmptyAxes),{inputs:[0]})},Tl=(e,t)=>{ut(e.inputs),lt(e,"ReduceLogSum",t,(o,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,"value = log(value);"])},El=(e,t)=>{ut(e.inputs),lt(e,"ReduceL1",t,(o,n)=>[`var value = ${n.type.storage}(0);`,"",`value += abs(${o.getByIndices("input_indices")});`,""])},Ol=(e,t)=>{ut(e.inputs),lt(e,"ReduceL2",t,(o,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},kl=(e,t)=>{ut(e.inputs),lt(e,"ReduceLogSumExp",t,(o,n)=>[`var value = ${n.type.storage}(0);`,"",`value += exp(${o.getByIndices("input_indices")});`,"value = log(value);"])},Pl=(e,t)=>{ut(e.inputs),lt(e,"ReduceMax",t,(o,n,s)=>{let u=[];for(let l=0;l<o.rank;l++)(s.indexOf(l)>=0||s.length===0)&&u.push(o.indicesSet("input_indices",l,0));return[`${u.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = max(value, ${o.getByIndices("input_indices")});`,""]})},Rl=(e,t)=>{ut(e.inputs),lt(e,"ReduceMean",t,(o,n,s)=>{let u=1;for(let l=0;l<o.rank;l++)(s.indexOf(l)>=0||s.length===0)&&(u*=e.inputs[0].dims[l]);return["var sum = f32(0);","",`sum += f32(${o.getByIndices("input_indices")});`,`let value = ${n.type.value}(sum / ${u});`]})},Bl=(e,t)=>{ut(e.inputs),lt(e,"ReduceMin",t,(o,n,s)=>{let u=[];for(let l=0;l<o.rank;l++)(s.indexOf(l)>=0||s.length===0)&&u.push(`input_indices[${l}] = 0;`);return[`${u.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = min(value, ${o.getByIndices("input_indices")});`,""]})},Ml=(e,t)=>{ut(e.inputs),lt(e,"ReduceProd",t,(o,n)=>[`var value = ${n.type.storage}(1);`,"",`value *= ${o.getByIndices("input_indices")};`,""])},Dl=(e,t)=>{ut(e.inputs),lt(e,"ReduceSum",t,(o,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,""])},zl=(e,t)=>{ut(e.inputs),lt(e,"ReduceSumSquare",t,(o,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += t * t;`,""])},dt=(e,t,r)=>{if(t.length===0)return r;let o=1,n=1;for(let s=0;s<t.length;s++)t.indexOf(s)===-1?o*=e[s]:n*=e[s];return n<32&&o>1024},Ca=(e,t)=>{dt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Rl(e,t):ma(e,t)},_a=(e,t)=>{dt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?El(e,t):fa(e,t)},Ia=(e,t)=>{dt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ol(e,t):ha(e,t)},Aa=(e,t)=>{dt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?kl(e,t):ga(e,t)},Ta=(e,t)=>{dt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Pl(e,t):ya(e,t)},Ea=(e,t)=>{dt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Bl(e,t):ba(e,t)},Oa=(e,t)=>{dt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ml(e,t):wa(e,t)},ka=(e,t)=>{dt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Dl(e,t):va(e,t)},Pa=(e,t)=>{dt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?zl(e,t):$a(e,t)},Ra=(e,t)=>{dt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Tl(e,t):Sa(e,t)}});var Ba,Ma,Da,zn,za=K(()=>{"use strict";Ue();Re();Kr();Ba=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},Ma=(e,t)=>{Ba(e.inputs);let r=(o,n,s)=>{let u=[];for(let l=0;l<o.rank;l++)(s.indexOf(l)>=0||s.length===0)&&u.push(`input_indices[${l}] = 0;`);return[`${u.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {\n         value = ${o.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",n.setByOffset("global_idx","best_index")]};e.compute(Yr("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},Da=(e,t)=>{Ba(e.inputs);let r=(o,n,s)=>{let u=[];for(let l=0;l<o.rank;l++)(s.indexOf(l)>=0||s.length===0)&&u.push(`input_indices[${l}] = 0;`);return[`${u.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {\n         value = ${o.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",n.setByOffset("global_idx","best_index")]};e.compute(Yr("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},zn=e=>se(e)});var Vl,Va,Ul,Wl,Nl,Zr,Hl,Ua,Vn=K(()=>{"use strict";Re();Hr();be();Vl=(e,t)=>{let r=e[0],o=e[1],n=e[2],s=e[3],u=e[4],l=e[5];if(u&&l)throw new Error("Attention cannot have both past and relative_position_bias");if(r.dims.length!==3)throw new Error(\'Input "input" must have 3 dimensions\');let a=r.dims[0],p=r.dims[1],h=r.dims[2];if(n.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimensions\');if(o.dims.length!==2)throw new Error(\'Input "weights" is expected to have 2 dimensions\');if(o.dims[0]!==h)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(n.dims[0]!==o.dims[1])throw new Error(\'Input "bias" dimension 0 should have same length as dimension 1 of input "weights"\');let y=n.dims[0]/3,g=y,v=g;if(t.qkvHiddenSizes.length>0){if(t.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let P of t.qkvHiddenSizes)if(P%t.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");y=t.qkvHiddenSizes[0],g=t.qkvHiddenSizes[1],v=t.qkvHiddenSizes[2]}let b=p;if(y!==g)throw new Error("qkv_hidden_sizes first element should be same as the second");if(n.dims[0]!==y+g+v)throw new Error(\'Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes\');let x=0;if(u){if(g!==v)throw new Error(\'Input "past" expect k_hidden_size == v_hidden_size\');if(u.dims.length!==5)throw new Error(\'Input "past" must have 5 dimensions\');if(u.dims[0]!==2)throw new Error(\'Input "past" first dimension must be 2\');if(u.dims[1]!==a)throw new Error(\'Input "past" second dimension must be batch_size\');if(u.dims[2]!==t.numHeads)throw new Error(\'Input "past" third dimension must be num_heads\');if(u.dims[4]!==g/t.numHeads)throw new Error(\'Input "past" fifth dimension must be k_hidden_size / num_heads\');t.pastPresentShareBuffer||(x=u.dims[3])}let I=b+x,$=-1,C=0;if(s)throw new Error("Mask not supported");if(u)throw new Error("past is not supported");if(l)throw new Error("relativePositionBias is not supported");return{batchSize:a,sequenceLength:p,pastSequenceLength:x,kvSequenceLength:b,totalSequenceLength:I,maxSequenceLength:$,inputHiddenSize:h,hiddenSize:y,vHiddenSize:v,headSize:Math.floor(y/t.numHeads),vHeadSize:Math.floor(v/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:C,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},Va=e=>se({...e}),Ul=(e,t,r,o)=>{let n=Ne(o),s=Y("x",t.dataType,t.dims,n),u="threadMaxVector";n===2?u="max(threadMaxVector.x, threadMaxVector.y)":n===4&&(u="max(max(threadMaxVector.x, threadMaxVector.y), max(threadMaxVector.z, threadMaxVector.w))");let l=Oe(t.dataType),a=64,p=o/n;p<a?a=1:p/8<64&&(a=Math.ceil(p/8));let h=Math.ceil(o/n/a),y=g=>`\n  const dInv: ${l} = 1 / ${o};\n  const dComp = ${o/n};\n  var<workgroup> wgMax: array<f32, ${a}>;\n  var<workgroup> wgSum: array<f32, ${a}>;\n\n  ${g.declareVariables(s)}\n  @compute @workgroup_size(${a}, 1, 1)\n  fn main(@builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(local_invocation_index) local_index : u32) {\n    let localOffset = local_index * ${h};\n    let offset: u32 = workgroup_id.x * dComp + localOffset;\n\n    var threadMaxVector = ${je("f32",n,"-3.402823e+38f")};\n    for (var i: u32 = 0; i < ${h} && i + localOffset < dComp; i++) {\n      threadMaxVector = max(${tt(l,n,"x[offset + i]")}, threadMaxVector);\n    }\n    wgMax[local_index] = ${u};\n    workgroupBarrier();\n\n    var maxValue = -3.402823e+38f;\n    for (var i = 0u; i < ${a}; i++) {\n      maxValue = max(wgMax[i], maxValue);\n    }\n\n    var sumVector = ${je("f32",n,"0")};\n    for (var i: u32 = 0; i < ${h} && i + localOffset < dComp; i++) {\n      sumVector += exp(${tt(l,n,"x[offset + i]")} - maxValue);\n    }\n    wgSum[local_index] = ${Xe("sumVector",n)};\n    workgroupBarrier();\n\n    var sum: f32 = 0;\n    for (var i = 0u; i < ${a}; i++) {\n      sum += wgSum[i];\n    }\n\n    if (sum == 0) {\n      for (var i: u32 = 0; i < ${h} && i + localOffset < dComp; i++) {\n        x[offset + i] = ${je(l,n,"dInv")};\n      }\n    } else {\n      for (var i: u32 = 0; i < ${h} && i + localOffset < dComp; i++) {\n        let f32input = ${tt(l,n,"x[offset + i]")};\n        x[offset + i] = ${s.type.value}(exp(f32input - maxValue) / sum);\n      }\n    }\n  }`;e.compute({name:"AttentionProbsSoftmax",shaderCache:{hint:`${o}`},getShaderSource:y,getRunData:()=>({outputs:[],dispatchGroup:{x:r}})},{inputs:[t],outputs:[]})},Wl=(e,t,r,o,n,s)=>{let u=[n.batchSize,n.numHeads,n.sequenceLength,n.kvSequenceLength+n.pastSequenceLength],l=s.scale===0?1/Math.sqrt(n.headSize):s.scale,a=Oe(t.dataType),p=Ne(n.headSize),h=V("q",t.dataType,t.dims,p),y=V("key",r.dataType,r.dims,p),g=Y("output",t.dataType,u),v=n.headSize/p,b=n.sequenceLength,x=n.totalSequenceLength,I=v,$=12,C={x:Math.ceil(n.totalSequenceLength/$),y:Math.ceil(n.sequenceLength/$),z:n.batchSize*n.numHeads},P=[t,r],A=T=>`\n  const M: u32 = ${b}u;\n  const N: u32 = ${x}u;\n  const K: u32 = ${I}u;\n  const alpha: ${a} = ${l};\n  const beta: ${a} = 1.0;\n  const TILE_SIZE = ${$}u;\n\n  var<workgroup> tileQ: array<${h.type.storage}, ${$*$}>;\n  var<workgroup> tileK: array<${h.type.storage}, ${$*$}>;\n\n  ${T.declareVariables(h,y,g)}\n\n  @compute @workgroup_size(${$}, ${$}, 1)\n  fn main(@builtin(workgroup_id) workgroup_id : vec3<u32>,\n   @builtin(local_invocation_id) local_id : vec3<u32>, @builtin(local_invocation_index) local_index : u32) {\n   let global_idx = (workgroup_id.z * ${C.x*C.y}u +\n          workgroup_id.y * ${C.x}u + workgroup_id.x) * ${$*$}u + local_index;\n\n    // x holds the N and y holds the M\n    let headIdx = workgroup_id.z;\n    let m = workgroup_id.y * TILE_SIZE;\n    let n = workgroup_id.x * TILE_SIZE;\n    let lm = m + local_id.y;\n    let ln = n + local_id.x;\n\n    let qOffset = ${n.sequenceLength*v} * headIdx + m * K;\n    let kOffset = ${n.kvSequenceLength*v} * headIdx + n * K;\n\n    var value = ${je(a,p)};\n    for (var w: u32 = 0u; w < K; w += TILE_SIZE) {\n      if (m + local_id.y < M && w + local_id.x < K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * K + w + local_id.x];\n      }\n      if (n + local_id.y < N && w + local_id.x < K) {\n        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * K + w + local_id.x];\n      }\n      workgroupBarrier();\n\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < K; k++) {\n        value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = headIdx * M * N;\n    if (lm < M && ln < N) {\n      let outputIdx = headOffset + lm * N + ln;\n      output[outputIdx] = ${Xe("value",p)} * alpha;\n    }\n  }`,z=e.compute({name:"AttentionProbs",shaderCache:{hint:JSON.stringify(n)},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType,gpuDataType:0}],dispatchGroup:C}),getShaderSource:A},{inputs:P,outputs:[-1]})[0];return Ul(e,z,n.batchSize*n.numHeads*n.sequenceLength,n.totalSequenceLength),z},Nl=(e,t,r,o)=>{let n=[o.batchSize,o.sequenceLength,o.vHiddenSize],s=V("probs",t.dataType,t.dims),u=V("v",r.dataType,r.dims),l=Y("output",t.dataType,n),a=Oe(t.dataType),p=12,h={x:Math.ceil(o.vHeadSize/p),y:Math.ceil(o.sequenceLength/p),z:o.batchSize*o.numHeads},y=g=>`\n  const M: u32 = ${o.sequenceLength}u;\n  const N: u32 = ${o.vHeadSize}u;\n  const K: u32 = ${o.totalSequenceLength}u;\n  const numHeads: u32 = ${o.numHeads}u;\n  const TILE_SIZE = ${p}u;\n\n  var<workgroup> tileQ: array<${s.type.storage}, ${p*p}>;\n  var<workgroup> tileK: array<${s.type.storage}, ${p*p}>;\n\n  ${g.declareVariables(s,u,l)}\n\n  @compute @workgroup_size(${p}, ${p}, 1)\n  fn main(@builtin(workgroup_id) workgroup_id : vec3<u32>,\n   @builtin(local_invocation_id) local_id : vec3<u32>, @builtin(local_invocation_index) local_index : u32) {\n   let global_idx = (workgroup_id.z * ${h.x*h.y}u +\n          workgroup_id.y * ${h.x}u + workgroup_id.x) * ${p*p}u + local_index;\n\n   let headIdx = workgroup_id.z;\n   let m = workgroup_id.y * TILE_SIZE + local_id.y;\n   let n = workgroup_id.x * TILE_SIZE + local_id.x;\n\n   let offsetA = headIdx * (M * K) + m * K;\n   let offsetB = headIdx * (N * K) + n;\n\n   var value = ${a}(0);\n   for (var w: u32 = 0u; w < K; w += TILE_SIZE) {\n     if (m < M && w + local_id.x < K) {\n       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];\n     }\n     if (n < N && w + local_id.y < K) {\n       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * N];\n     }\n     workgroupBarrier();\n     for (var k: u32 = 0u; k<TILE_SIZE && w+k < K; k++) {\n       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];\n     }\n     workgroupBarrier();\n   }\n\n   // we need to transpose output from BNSH_v to BSND_v\n   let batchIdx = workgroup_id.z / ${o.numHeads};\n   let currentBatchHeadNumber = workgroup_id.z % ${o.numHeads};\n   let headOffset = (batchIdx * M * ${o.numHeads} + currentBatchHeadNumber) * ${o.vHeadSize};\n   if (m < M && n < N) {\n     let outputIdx = batchIdx * ${o.sequenceLength*o.vHiddenSize} + m * ${o.vHiddenSize}\n       + currentBatchHeadNumber * ${o.vHeadSize} + n;\n     output[outputIdx] = value;\n   }\n  }`;return e.compute({name:"AttentionScore",shaderCache:{hint:JSON.stringify(o)},getRunData:()=>({outputs:[{dims:n,dataType:t.dataType,gpuDataType:0}],dispatchGroup:h}),getShaderSource:y},{inputs:[t,r],outputs:[0]})[0]},Zr=(e,t,r,o,n,s,u,l,a,p,h)=>{let y=Wl(e,t,r,a,p,h);Nl(e,y,o,p)},Hl=(e,t)=>{let r=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],o=Oe(e.inputs[0].dataType),n=t.sequenceLength,s=t.inputHiddenSize,u=t.headSize,l=12,a={x:Math.ceil(t.headSize/l),y:Math.ceil(t.sequenceLength/l),z:t.batchSize*t.numHeads},p=()=>`\n  const M: u32 = ${n}u;\n  const K: u32 = ${s}u;\n  const N: u32 = ${u}u;\n  const numHeads: u32 = ${t.numHeads};\n  const ldb = ${t.hiddenSize+t.hiddenSize+t.vHiddenSize}u;\n  const TILE_SIZE = ${l}u;\n\n  var<workgroup> tileInput: array<${o}, ${l*l}>;\n  var<workgroup> tileWeightQ: array<${o}, ${l*l}>;\n  var<workgroup> tileWeightK: array<${o}, ${l*l}>;\n  var<workgroup> tileWeightV: array<${o}, ${l*l}>;\n\n  @group(0) @binding(0) var<storage, read> input: array<${o}>;\n  @group(0) @binding(1) var<storage, read> weight: array<${o}>;\n  @group(0) @binding(2) var<storage, read> bias: array<${o}>;\n  @group(0) @binding(3) var<storage, read_write> outputQ: array<${o}>;\n  @group(0) @binding(4) var<storage, read_write> outputK: array<${o}>;\n  @group(0) @binding(5) var<storage, read_write> outputV: array<${o}>;\n\n  @compute @workgroup_size(${l}, ${l}, 1)\n  fn main(@builtin(workgroup_id) workgroup_id : vec3<u32>,\n   @builtin(local_invocation_id) local_id : vec3<u32>, @builtin(local_invocation_index) local_index : u32) {\n   let global_idx = (workgroup_id.z * ${a.x*a.y}u +\n          workgroup_id.y * ${a.x}u + workgroup_id.x) * ${l*l}u + local_index;\n\n    let batchIndex = workgroup_id.z / ${t.numHeads};\n    let headNumber = workgroup_id.z % ${t.numHeads};\n    let m = workgroup_id.y * TILE_SIZE + local_id.y;\n    let n = workgroup_id.x * TILE_SIZE + local_id.x;\n\n    let inputOffset = batchIndex * (M * K) + m * K;\n    let biasOffsetQ = headNumber * ${t.headSize};\n    let biasOffsetK = ${t.hiddenSize} + biasOffsetQ;\n    let biasOffsetV = ${t.hiddenSize} + biasOffsetK;\n\n    var valueQ = ${o}(0);\n    var valueK = ${o}(0);\n    var valueV = ${o}(0);\n    for (var w: u32 = 0u; w < K; w += TILE_SIZE) {\n      if (m < M && w + local_id.x < K) {\n        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];\n      }\n      if (n < N && w + local_id.y < K) {\n        let offset = n + (w + local_id.y) * ldb;\n        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];\n        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];\n        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];\n      }\n      workgroupBarrier();\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < K; k++) {\n        let inputTileOffset = TILE_SIZE * local_id.y + k;\n        let weightTileOffset = TILE_SIZE * k + local_id.x;\n        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];\n        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];\n        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = (m * N + n) % ${t.headSize};\n    valueQ += bias[headOffset + biasOffsetQ];\n    valueK += bias[headOffset + biasOffsetK];\n    valueV += bias[headOffset + biasOffsetV];\n\n    let offset = workgroup_id.z * M * N;\n    if (m < M && n < N) {\n      let outputIdx = offset + m * N + n;\n      outputQ[outputIdx] = valueQ;\n      outputK[outputIdx] = valueK;\n      outputV[outputIdx] = valueV;\n    }\n  }`,h=[e.inputs[0],e.inputs[1],e.inputs[2]];return e.compute({name:"AttentionPrepare",shaderCache:{hint:JSON.stringify(t)},getRunData:()=>({outputs:[{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:a}),getShaderSource:p},{inputs:h,outputs:[-1,-1,-1]})},Ua=(e,t)=>{let r=Vl(e.inputs,t),[o,n,s]=Hl(e,r);return Zr(e,o,n,s,e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t)}});var Gl,Ll,Fl,Wa,Na=K(()=>{"use strict";Lt();$e();Re();be();Gl=(e,t)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let r=(o,n,s)=>{let u=n.length;if(u!==o.length)throw new Error(`${s}: num dimensions != ${u}`);n.forEach((l,a)=>{if(l!==o[a])throw new Error(`${s}: dim[${a}] do not match`)})};if(e[0].dims.length>1){let o=t.format==="NHWC"?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);r(e[1].dims,o,"Invalid input scale"),r(e[2].dims,o,"Invalid input B"),r(e[3].dims,o,"Invalid input mean"),r(e[4].dims,o,"Invalid input var")}else r(e[1].dims,[1],"Invalid input scale"),r(e[2].dims,[1],"Invalid input B"),r(e[3].dims,[1],"Invalid input mean"),r(e[4].dims,[1],"Invalid input var")},Ll=(e,t)=>{let{epsilon:r,spatial:o,format:n}=t,s=e[0].dims,u=o?Ne(s[s.length-1]):1,l=n==="NHWC"&&s.length>1?u:1,a=D.size(s)/u,p=ke(s.length)&&o,h=p?s.length:s,y=V("x",e[0].dataType,e[0].dims,u),g=V("scale",e[1].dataType,e[1].dims,l),v=V("bias",e[2].dataType,e[2].dims,l),b=V("inputMean",e[3].dataType,e[3].dims,l),x=V("inputVar",e[4].dataType,e[4].dims,l),I=Y("y",e[0].dataType,h,u),$=()=>{let P="";if(o)P=`let cOffset = ${s.length===1?"0u":n==="NHWC"?`outputIndices[${s.length-1}] / ${u}`:"outputIndices[1]"};`;else if(n==="NCHW")P=`\n            ${I.indicesSet("outputIndices","0","0")}\n            let cOffset = ${I.indicesToOffset("outputIndices")};`;else{P=`var cIndices = ${g.type.indices}(0);\n                       cIndices[0] = outputIndices[${s.length-1}];`;for(let A=1;A<g.rank;A++)P+=`cIndices[${A}] = outputIndices[${A}];`;P+=`let cOffset = ${g.indicesToOffset("cIndices")};`}return P},C=P=>`\n  const epsilon = ${r};\n  ${P.registerUniform("outputSize","u32").declareVariables(y,g,v,b,x,I)}\n  ${P.mainStart()}\n  ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n    var outputIndices = ${I.offsetToIndices(`global_idx * ${u}`)};\n    ${$()}\n    let scale = ${g.getByOffset("cOffset")};\n    let bias = ${v.getByOffset("cOffset")};\n    let inputMean = ${b.getByOffset("cOffset")};\n    let inputVar = ${x.getByOffset("cOffset")};\n    let x = ${y.getByOffset("global_idx")};\n    let value = (x - inputMean) / sqrt(inputVar + epsilon) * scale + bias;\n    ${I.setByOffset("global_idx","value")}\n  }`;return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${o}_${u}`,inputDependencies:p?["rank","type","type","type","type"]:void 0},getShaderSource:C,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:p?[{type:"uint32",data:a},...j(s)]:[{type:"uint32",data:a}]})}},Fl=e=>se(e),Wa=(e,t)=>{let{inputs:r,outputCount:o}=e,n=Fl({...t,outputCount:o});if(Nt.webgpu.validateInputContent&&Gl(r,n),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(Ll(r,n))}});var ql,jl,Ha,Ga=K(()=>{"use strict";$e();be();ql=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},jl=e=>{let t=e[0].dims,r=e[0].dims[2],o=D.size(t)/4,n=e[0].dataType,s=V("input",n,t,4),u=V("bias",n,[r],4),l=V("residual",n,t,4),a=Y("output",n,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:h=>`\n  const channels = ${r}u / 4;\n  ${h.declareVariables(s,u,l,a)}\n\n  ${h.mainStart()}\n    ${h.guardAgainstOutOfBoundsWorkgroupSizes(o)}\n    let value = ${s.getByOffset("global_idx")}\n      + ${u.getByOffset("global_idx % channels")} + ${l.getByOffset("global_idx")};\n    ${a.setByOffset("global_idx","value")}\n  }`}},Ha=e=>{ql(e.inputs),e.compute(jl(e.inputs))}});var Kl,Te,La,Fa,qa,ja,Ka,Ya,Za,Xa,Ja,Yl,Qa,ei,ti,ri,Xr,ni,Jr,oi,ai,ii,si,ui,li,di,ci,pi,mi,fi,hi,gi,yi,bi,wi,vi,Un=K(()=>{"use strict";Ue();$e();Re();be();Kl=(e,t,r,o,n,s)=>{let u=Math.ceil(t/4),l="";typeof n=="string"?l=`${n}(a)`:l=n("a");let a=V("inputData",r,[u],4),p=Y("outputData",o,[u],4);return`\n      ${e.registerUniform("vec_size","u32").declareVariables(a,p)}\n\n  ${s??""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n\n    let a = ${a.getByOffset("global_idx")};\n    ${p.setByOffset("global_idx",l)}\n  }`},Te=(e,t,r,o,n,s=e.dataType)=>({name:t,shaderCache:{hint:n,inputDependencies:["type"]},getShaderSource:u=>Kl(u,D.size(e.dims),e.dataType,s,r,o),getRunData:u=>({outputs:[{dims:e.dims,dataType:s}],dispatchGroup:{x:Math.ceil(D.size(u[0].dims)/64/4)},programUniforms:[{type:"uint32",data:Math.ceil(D.size(e.dims)/4)}]})}),La=e=>{e.compute(Te(e.inputs[0],"Abs","abs"))},Fa=e=>{e.compute(Te(e.inputs[0],"Acos","acos"))},qa=e=>{e.compute(Te(e.inputs[0],"Acosh","acosh"))},ja=e=>{e.compute(Te(e.inputs[0],"Asin","asin"))},Ka=e=>{e.compute(Te(e.inputs[0],"Asinh","asinh"))},Ya=e=>{e.compute(Te(e.inputs[0],"Atan","atan"))},Za=e=>{e.compute(Te(e.inputs[0],"Atanh","atanh"))},Xa=e=>se(e),Ja=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute \'to\' from \'Cast\' operator): ${t.to}`)}e.compute(Te(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},Yl=e=>{let t=e.length>=2&&e[1].data!==0?e[1].getFloat32Array()[0]:Fr,r=e.length>=3&&e[2].data!==0?e[2].getFloat32Array()[0]:qr;return se({min:t,max:r})},Qa=(e,t)=>{let r=e.inputs.length===1?t:Yl(e.inputs),o=$t(e.inputs[0].dataType);e.compute(Te(e.inputs[0],"Clip",n=>`clamp(${n}, clip_min_, clip_max_)`,`\n    const clip_min_: vec4<${o}> = vec4(${o}(${r.min}));\n    const clip_max_: vec4<${o}> = vec4(${o}(${r.max}));\n`,r.cacheKey),{inputs:[0]})},ei=e=>{e.compute(Te(e.inputs[0],"Ceil","ceil"))},ti=e=>{e.compute(Te(e.inputs[0],"Cos","cos"))},ri=e=>{e.compute(Te(e.inputs[0],"Cosh","cosh"))},Xr=e=>se(e),ni=(e,t)=>{let r=$t(e.inputs[0].dataType);e.compute(Te(e.inputs[0],"Elu",o=>`elu_vf32(${o})`,`\n  const elu_alpha_ = ${r}(${t.alpha});\n\n  fn elu_f32(a: ${r}) -> ${r} {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<${r}>) -> vec4<${r}> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,t.cacheKey))},Jr=(e,t="f32")=>`\nconst r0: ${t} = 0.3275911;\nconst r1: ${t} = 0.254829592;\nconst r2: ${t} = -0.284496736;\nconst r3: ${t} = 1.421413741;\nconst r4: ${t} = -1.453152027;\nconst r5: ${t} = 1.061405429;\n\nfn erf_vf32(v: ${e}) -> ${e} {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,oi=e=>{let t=$t(e.inputs[0].dataType);e.compute(Te(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,Jr(`vec4<${t}>`,t)))},ai=e=>{e.compute(Te(e.inputs[0],"Exp","exp"))},ii=e=>{e.compute(Te(e.inputs[0],"Floor","floor"))},si=e=>{let t=$t(e.inputs[0].dataType);e.compute(Te(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,Jr(`vec4<${t}>`,t)))},ui=(e,t)=>{let r=$t(e.inputs[0].dataType);e.compute(Te(e.inputs[0],"LeakyRelu",o=>`select(leaky_relu_alpha_ * ${o}, ${o}, ${o} >= vec4<${r}>(0.0))`,`const leaky_relu_alpha_ = ${r}(${t.alpha});`,t.cacheKey))},li=e=>{e.compute(Te(e.inputs[0],"Not",t=>`!${t}`))},di=e=>{e.compute(Te(e.inputs[0],"Neg",t=>`-${t}`))},ci=e=>{e.compute(Te(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},pi=e=>{let t=$t(e.inputs[0].dataType);e.compute(Te(e.inputs[0],"Relu",r=>`select(vec4<${t}>(0.0), ${r}, ${r} > vec4<${t}>(0.0))`))},mi=e=>{e.compute(Te(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},fi=e=>{e.compute(Te(e.inputs[0],"Sin","sin"))},hi=e=>{e.compute(Te(e.inputs[0],"Sinh","sinh"))},gi=e=>{e.compute(Te(e.inputs[0],"Sqrt","sqrt"))},yi=e=>{e.compute(Te(e.inputs[0],"Tan","tan"))},bi=e=>{e.compute(Te(e.inputs[0],"Tanh","tanh"))},wi=(e,t)=>{let r=$t(e.inputs[0].dataType);return e.compute(Te(e.inputs[0],"ThresholdedRelu",o=>`select(vec4<${r}>(0.0), ${o}, ${o} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${r}>(${t.alpha});`,t.cacheKey)),0},vi=e=>{e.compute(Te(e.inputs[0],"Log","log"))}});var Xl,Jl,$i,Si=K(()=>{"use strict";$e();be();Un();Xl=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Jl=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=V("input",e[0].dataType,e[0].dims,4),o=V("bias",e[0].dataType,[e[0].dims[2]],4),n=Y("output",e[0].dataType,t,4),s=D.size(t)/4,u=Oe(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:a=>`\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${e[0].dims[2]/4/2}u;\n\n  ${a.declareVariables(r,o,n)}\n\n  ${Jr(`vec4<${u}>`,u)}\n\n  ${a.mainStart()}\n    ${a.guardAgainstOutOfBoundsWorkgroupSizes(s)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${n.setByOffset("global_idx","valueLeft * geluRight")}\n  }`}},$i=e=>{Xl(e.inputs),e.compute(Jl(e.inputs))}});var Ql,ed,ct,xi,Ci,_i,Ii,Ai,Ti,Ei,Oi,ki,Pi,Ri=K(()=>{"use strict";Ue();$e();be();Ql=(e,t,r,o,n,s,u,l,a,p,h,y,g)=>{let v,b;typeof l=="string"?v=b=(T,N)=>`${l}((${T}),(${N}))`:typeof l=="function"?v=b=l:(v=l.scalar,b=l.vector);let x=y?t.length:t,I=y?r.length:r,$=y?o.length:o,C=Y("outputData",h,$,4),P=V("aData",a,x,4),A=V("bData",p,I,4),z;if(n)if(s){let T=D.size(t)===1,N=D.size(r)===1,U=t.length>0&&t[t.length-1]%4===0,G=r.length>0&&r[r.length-1]%4===0;T||N?z=C.setByOffset("global_idx",b(T?`${P.type.value}(${P.getByOffset("0")}.x)`:P.getByOffset("global_idx"),N?`${A.type.value}(${A.getByOffset("0")}.x)`:A.getByOffset("global_idx"))):z=`\n            let outputIndices = ${C.offsetToIndices("global_idx * 4u")};\n            let offsetA = ${P.broadcastedIndicesToOffset("outputIndices",C)};\n            let offsetB = ${A.broadcastedIndicesToOffset("outputIndices",C)};\n            ${C.setByOffset("global_idx",b(u||U?P.getByOffset("offsetA / 4u"):`${P.type.value}(${P.getByOffset("offsetA / 4u")}[offsetA % 4u])`,u||G?A.getByOffset("offsetB / 4u"):`${A.type.value}(${A.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}\n          `}else z=C.setByOffset("global_idx",b(P.getByOffset("global_idx"),A.getByOffset("global_idx")));else{if(!s)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let T=(N,U,G="")=>{let Q=`aData[indexA${U}][componentA${U}]`,B=`bData[indexB${U}][componentB${U}]`;return`\n            let outputIndices${U} = ${C.offsetToIndices(`global_idx * 4u + ${U}u`)};\n            let offsetA${U} = ${P.broadcastedIndicesToOffset(`outputIndices${U}`,C)};\n            let offsetB${U} = ${A.broadcastedIndicesToOffset(`outputIndices${U}`,C)};\n            let indexA${U} = offsetA${U} / 4u;\n            let indexB${U} = offsetB${U} / 4u;\n            let componentA${U} = offsetA${U} % 4u;\n            let componentB${U} = offsetB${U} % 4u;\n            ${N}[${U}] = ${G}(${v(Q,B)});\n          `};h===9?z=`\n            var data = vec4<u32>(0);\n            ${T("data",0,"u32")}\n            ${T("data",1,"u32")}\n            ${T("data",2,"u32")}\n            ${T("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:z=`\n            ${T("outputData[global_idx]",0)}\n            ${T("outputData[global_idx]",1)}\n            ${T("outputData[global_idx]",2)}\n            ${T("outputData[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(P,A,C)}\n\n        ${g??""}\n\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${z}\n      }`},ed=(e,t,r,o,n,s,u=r.dataType)=>{let l=!D.areEqual(r.dims,o.dims),a=r.dims,p=D.size(r.dims),h=!1,y=!1,g=[l];if(l){let b=it.calcShape(r.dims,o.dims,!1);if(!b)throw new Error("Can\'t perform binary op on the given tensors");a=b,p=D.size(a);let x=D.size(r.dims)===1,I=D.size(o.dims)===1,$=r.dims.length>0&&r.dims[r.dims.length-1]%4===0,C=o.dims.length>0&&o.dims[o.dims.length-1]%4===0;g.push(x),g.push(I),g.push($),g.push(C);let P=1;for(let A=1;A<a.length;A++){let z=r.dims[r.dims.length-A]??1,T=o.dims[o.dims.length-A]??1;if(z===T)P*=z;else break}P%4===0?(y=!0,h=!0):(x||I||$||C)&&(h=!0)}else h=!0;g.push(h);let v=ke(r.dims.length)&&ke(o.dims.length)&&ke(a.length);return{name:e,shaderCache:{hint:t+g.map(b=>b.toString()).join("_"),inputDependencies:v?["rank","rank"]:["dims","dims"]},getShaderSource:b=>Ql(b,r.dims,o.dims,a,h,l,y,n,r.dataType,o.dataType,u,v,s),getRunData:()=>({outputs:[{dims:a,dataType:u}],dispatchGroup:{x:Math.ceil(p/64/4)},programUniforms:v?[{type:"uint32",data:Math.ceil(D.size(a)/4)},...j(r.dims),...j(o.dims),...j(a)]:[{type:"uint32",data:Math.ceil(D.size(a)/4)}]})}},ct=(e,t,r,o,n,s)=>{e.compute(ed(t,n??"",e.inputs[0],e.inputs[1],r,o,s))},xi=e=>{ct(e,"Add",(t,r)=>`${t}+${r}`)},Ci=e=>{ct(e,"Div",(t,r)=>`${t}/${r}`)},_i=e=>{ct(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},Ii=e=>{ct(e,"Mul",(t,r)=>`${t}*${r}`)},Ai=e=>{let t=V("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;ct(e,"Pow",{scalar:(o,n)=>`pow_custom(${o},${n})`,vector:(o,n)=>`pow_vector_custom(${o},${n})`},`\n    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {\n      if (b == ${t}(0.0)) {\n        return ${t}(1.0);\n      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {\n        return ${t}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {\n      // TODO: implement vectorized pow\n      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `)},Ti=e=>{ct(e,"Sub",(t,r)=>`${t}-${r}`)},Ei=e=>{ct(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},Oi=e=>{ct(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},ki=e=>{ct(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},Pi=e=>{ct(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}});var rd,nd,od,ad,Bi,Mi,Di=K(()=>{"use strict";$e();Re();be();rd=e=>{if(!e||e.length<1)throw new Error("too few inputs");let t=e[0].dataType,r=e[0].dims.length;for(let o of e){if(o.dataType!==t)throw new Error("input tensors should be one type");if(o.dims.length!==r)throw new Error("input tensors should have the same shape")}},nd=(e,t)=>`\n  fn calculateInputIndex(index: u32) -> u32 {\n    let sizeInConcatAxis = array<u32, ${e}u>(${t});\n    for (var i: u32 = 0u; i < ${e}; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${e}u;\n  }`,od=(e,t)=>{let r=e.length,o=[];for(let n=0;n<r;++n){let s=t.setByOffset("global_idx",e[n].getByIndices("indices"));r===1?o.push(s):n===0?o.push(`if (inputIndex == ${n}u) { ${s} }`):n===r-1?o.push(`else { ${s} }`):o.push(`else if (inputIndex == ${n}) { ${s} }`)}return o.join(`\n`)},ad=(e,t)=>{let r=e[0].dims.slice();if(t>=r.length||t<-1*r.length)throw new Error("axis specified for concat doesn\'t match input dimensionality");let o=t<0?r.length+t:t,n=r.slice(0);for(let A=1;A<e.length;A++){let z=e[A].dims.slice();for(let T=0;T<r.length;T++)if(T===o)n[o]+=z[T];else if(r[T]!==z[T])throw new Error("non concat dimensions must match")}let s=D.size(n),u=new Array(e.length),l=new Array(e.length),a=e[0].dataType,p=0,h=[],y=[],g=[],v=[{type:"uint32",data:s}];for(let A=0;A<e.length;++A)p+=e[A].dims[o],u[A]=p,g.push(ke(e[A].dims.length)),y.push(g[A]?e[A].dims.length:e[A].dims),l[A]=V(`input${A}`,a,y[A]),h.push(g[A]?"rank":"dims"),v.push({type:"uint32",data:u[A]});for(let A=0;A<e.length;++A)g[A]&&v.push(...j(e[A].dims));let b=ke(n.length);b&&v.push(...j(n));let x=b?n.length:n,I=Y("output",a,x),$=I.indicesGet("indices",o),C=Array.from(Array(u.length).keys()).map(A=>`uniforms.sizeInConcatAxis${A}`).join(","),P=A=>`\n\n  ${(()=>{A.registerUniform("outputSize","u32");for(let z=0;z<e.length;z++)A.registerUniform(`sizeInConcatAxis${z}`,"u32");return A.declareVariables(...l,I)})()}\n\n  ${nd(u.length,C)}\n\n  ${A.mainStart()}\n    ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n    var indices = ${I.offsetToIndices("global_idx")};\n\n    let inputIndex = calculateInputIndex(${$});\n    if (inputIndex != 0u) {\n      let sizeInConcatAxis = array<u32, ${u.length}u>(${C});\n      ${$} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${od(l,I)}\n  }`;return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:h},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:v}),getShaderSource:P}},Bi=(e,t)=>{rd(e.inputs),e.compute(ad(e.inputs,t.axis))},Mi=e=>se({axis:e.axis})});var pt,Qr,St=K(()=>{"use strict";$e();pt=(e,t)=>{switch(e.activation){case"Relu":return{activationFunction:"",applyActivation:`value = max(value, ${t}(0.0));`};case"Sigmoid":return{activationFunction:"",applyActivation:`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`};case"Clip":return{activationFunction:`const clip_min_=${t}(${e.clipMin});const clip_max_=${t}(${e.clipMax});`,applyActivation:"value = clamp(value, clip_min_, clip_max_);"};default:return{activationFunction:"",applyActivation:""}}},Qr=e=>{let t=e?.activation||"";if(t==="Clip"){let[r,o]=e?.activation_params||[Fr,qr];return{activation:t,clipMax:o,clipMin:r,activationCacheKey:`${t}:${r},${o}`}}return{activation:t,activationCacheKey:t}}});var Le,en,tn=K(()=>{"use strict";Le=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},en=e=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      `});var rn,Wn=K(()=>{"use strict";rn=e=>`\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));\n}\n`});var id,sd,fr,zi,ud,hr,ld,nn,gr=K(()=>{"use strict";$e();be();St();tn();id=(e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `,sd=(e,t)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`,fr=(e,t,r="f32",o,n=!1,s=32,u=!1,l=32)=>{let a=t[1]*e[1],p=t[0]*e[0],h=n?a:s,y=n?s:a,g=h/t[0],v=s/t[1];if(!((n&&g===4&&e[1]===4||!n&&(g===3||g===4))&&h%t[0]===0&&s%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${n} is true, innerElementSize ${g} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${g} must be 3 or 4.\n  tileAWidth ${h} must be divisible by workgroupSize[0]${t[0]}. tileInner ${s} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub: array<array<vec${g}<${r}>, ${h/g}>, ${y}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${r}>, ${p/e[0]}>, ${s}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${g};\nconst tileInner = ${s};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${u?"0":"i32(globalId.z)"};\n  ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n  let globalRowStart = i32(workgroupId.y) * ${a};\n\n  let numTiles = ${u?`${Math.ceil(l/s)}`:"(uniforms.dimInner - 1) / tileInner + 1"};\n  var kStart = ${u?`i32(globalId.z) * ${l}`:"0"};\n\n  var acc: array<vec4<${r}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${v};\n  for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${id(n,o)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${v}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${o?", batchIndices":""});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${g===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${sd(n,g)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`},zi=(e,t)=>e?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${t?", batchIndices":""});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${t?", batchIndices":""});\n            `,ud=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",hr=(e,t,r="f32",o,n=!1,s=32,u=!1,l=32,a=!1)=>{let p=e[1]*t[1],h=e[0]*t[0],y=n?p:s,g=n?s:p;if(!(g%t[1]===0&&y%t[0]===0&&s%t[1]===0))throw new Error(`tileAHight ${g} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${y} must be divisible by workgroupSize[0]${t[0]}, tileInner ${s} must be divisible by workgroupSize[1]${t[1]}`);let v=g/t[1],b=y/t[0],x=s/t[1],I=a?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${p};\n    let globalColStart = i32(workgroupId.x) * ${h};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${g}; inputRow = inputRow + ${t[1]}) {\n        for (var inputCol = localCol; inputCol < ${y}; inputCol = inputCol + ${t[0]}) {\n          ${zi(n,o)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${t[1]}) {\n            for (var inputCol = localCol; inputCol < ${h}; inputCol = inputCol + ${t[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${o?", batchIndices":""});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${r}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${n?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${p};\n\nlet tileRowA = i32(localId.y) * ${v};\nlet tileColA = i32(localId.x) * ${b};\nlet tileRowB = i32(localId.y) * ${x};\n// Loop over shared dimension.\nfor (var t = 0; t < numTiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${v}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${b}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${zi(n,o)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${x}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${o?", batchIndices":""});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${r}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${ud(n)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<${r}, ${y}>, ${g}>;\n  var<workgroup> mm_Bsub : array<array<${r}, ${h}>, ${s}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${s};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${u?"0":"i32(globalId.z)"};\n    ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n    let numTiles = ${u?`${Math.ceil(l/s)}`:"(uniforms.dimInner - 1) / tileInner + 1"};\n    var kStart = ${u?`i32(globalId.z) * ${l}`:"0"};\n\n    var acc : array<array<${r}, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${I}\n  }\n`},ld=(e,t,r,o,n,s=!1)=>{let[u,l,a]=n,[p,h,y,g]=o,v=Ft(u,a),b=Ft(l,a),x=Oe(o[0].type.tensor),I=()=>{let P=h.rank,A=p.rank,z=`var aIndices: ${h.type.indices};`;for(let T=P-2-1,N=A-1;T>=0;T--,N--)z+=`\naIndices[${T}] = ${A>1?`batchIndices[${N}]`:"batchIndices"};`;return v.forEach(T=>{z+=`\naIndices[${T}] = 0;`}),z+=`\naIndices[${P-2}] = u32(row);\n                   aIndices[${P-1}] = u32(colIn);`,z},$=()=>{let P=y.rank,A=p.rank,z=`var bIndices: ${y.type.indices};`;for(let T=P-2-1,N=A-1;T>=0;T--,N--)z+=`\nbIndices[${T}] = ${A>1?`batchIndices[${N}]`:"batchIndices"};`;return b.forEach(T=>{z+=`\nbIndices[${T}] = 0;`}),z+=`\nbIndices[${P-2}] = u32(row);\n                   bIndices[${P-1}] = u32(colIn);`,z};return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${p.type.indices}) -> ${Le(e,x)} {\n      var value = ${Le(e,x)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dimAOuter && col < uniforms.dimInner)\n      {\n        ${I()}\n        value = ${h.getByIndices("aIndices")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${p.type.indices}) -> ${Le(e,x)} {\n      var value = ${Le(e,x)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dimInner && col < uniforms.dimBOuter)\n      {\n        ${$()}\n        value = ${y.getByIndices("bIndices")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${Le(e,x)}) {\n      let col = colIn * ${e};\n      if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${t?`value = value + ${s?"bias[colIn]":`${Le(e,x)}(bias[row])`};`:""}\n        ${r}\n        ${g.setByIndices("vec3<u32>(coords)","value")}\n      }\n    }\n    `},nn=(e,t,r,o,n=!1)=>{let s=e[0].dims,u=e[1].dims,l=s.slice(0,-2),a=u.slice(0,-2),p=o?o.slice(0,-2):r.slice(0,-2),h=ke(p.length),y=h?p.length:p,g=jr("batchDims",e[0].dataType,y,1),v=D.size(p),b=s[s.length-2],x=s[s.length-1],I=u[u.length-1],$=x%4===0&&I%4===0,C=b<=8?[4,1,1]:[4,4,1],P=[8,8,1],A=[Math.ceil(I/P[0]/C[0]),Math.ceil(b/P[1]/C[1]),Math.ceil(v/P[2]/C[2])],z=Oe(e[0].dataType),T=$?4:1,N=[...l,b,x/T],U=ke(N.length),G=U?N.length:N,Q=[...a,x,I/T],B=ke(Q.length),q=B?Q.length:Q,pe=[v,b,I/T],ee=V("a",e[0].dataType,G,T),we=V("b",e[1].dataType,q,T),Z=Y("result",e[0].dataType,pe.length,T),ye=[ee,we],Ce=[{type:"int32",data:b},{type:"int32",data:I},{type:"int32",data:x}];h&&Ce.push(...j(p)),U&&Ce.push(...j(N)),B&&Ce.push(...j(Q));let fe=[];fe.push(U?"rank":"dims"),fe.push(B?"rank":"dims");let ce=e.length>2,{activationFunction:We,applyActivation:Be}=pt(t,Z.type.value),He=ld(T,ce,Be,[g,ee,we,Z],[l,a,p],n);if(ce){let X=n?T:1;ye.push(V("bias",e[2].dataType,e[2].dims.length,X)),Ce.push(...j(e[2].dims)),fe.push("rank")}Ce.push(...j(pe));let L=X=>`\n  ${X.registerUniform("dimAOuter","i32").registerUniform("dimBOuter","i32").registerUniform("dimInner","i32").registerInternalVariables(g).declareVariables(...ye,Z)}\n  ${We}\n  ${He}\n  ${$?fr(C,P,z,g):hr(C,P,z,g)}\n                   `;return{name:"MatMul",shaderCache:{hint:t.activationCacheKey+`${C}${$}${n}`,inputDependencies:fe},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:A[0],y:A[1],z:A[2]},programUniforms:Ce}),getShaderSource:L}}});var dd,Vi,Ui=K(()=>{"use strict";vt();be();St();tn();Wn();gr();dd=(e,t,r,o,n=!1,s,u=4,l=4,a=4,p="f32")=>{let h=B=>{switch(B){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${p}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${B} is not supported.`)}},y=B=>{switch(B){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${B} is not supported.`)}},g=e?`\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    `:`\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    `,v=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,b=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",x=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",I=e?"row":"col",$=e?"col":"row",C=`\n    let inChannels = i32(uniforms.w_shape[2]);\n    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n    let outRow = ${I} / outWidth;\n    let outCol = ${I} % outWidth;\n\n    let WRow = ${$} / (filterDims[1] * inChannels);\n    let WCol = ${$} / inChannels % filterDims[1];\n    let xRow = outRow * stride[0] + dilation[0] * WRow - pad[0];\n    let xCol = outCol * stride[1] + dilation[1] * WCol - pad[1];\n    let xCh = ${$} % inChannels;\n    var resData = ${Le(u,p)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the \'same\' padding type.\n    if (xRow >= 0 && xRow < ${b} && xCol >= 0 && xCol < ${x}) {\n      ${g}\n      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));\n      ${h(u)}\n    }\n    return resData;`,P=e?t&&o?`\n    let col = colIn * ${u};\n    ${C}`:`\n    let col = colIn * ${u};\n    if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n      ${C}\n    }\n    return ${Le(u,p)}(0.0);`:o&&r?`\n    let col = colIn * ${u};\n    ${C}`:`\n    let col = colIn * ${u};\n    if (row < uniforms.dimInner && col < uniforms.dimBOuter) {\n      ${C}\n    }\n    return ${Le(u,p)}(0.0);`,A=`${y(l)}`,z=Le(a,p),T=e?Le(u,p):Le(l,p),N=e?Le(l,p):Le(u,p),{activationFunction:U,applyActivation:G}=pt(s,z);return`\n    ${U}\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${T} {\n      ${e?P:A}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${N} {\n      ${e?A:P}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${z}) {\n      let col = colIn * ${a};\n      if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${v}\n      ${en(n)}\n      ${G}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`},Vi=(e,t,r,o,n,s,u,l)=>{let a=t.format==="NHWC",p=a?e[0].dims[3]:e[0].dims[1],h=r[0],y=a?r[2]:r[3],g=a?r[1]:r[2],v=a?r[3]:r[1],b=a&&(p%4===0||p%3===0)&&v%4===0,x=a?v:y*g,I=a?y*g:v,$=[8,8,1],C=o<=8?[4,1,1]:[4,4,1],P=[Math.ceil(x/$[0]/C[0]),Math.ceil(I/$[1]/C[1]),Math.ceil(h/$[2]/C[2])];Pe("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${P}`);let A=b?a&&p%4!==0?3:4:1,z=$[1]*C[1],T=$[0]*C[0],N=Math.max($[0]*A,$[1]),U=o%z===0,G=n%T===0,Q=s%N===0,B=b?[A,4,4]:[1,1,1],q=Oe(e[0].dataType),pe=b?4:1,ee=[{type:"int32",data:o},{type:"int32",data:n},{type:"int32",data:s}],we=V("x",e[0].dataType,e[0].dims.length,A===3?1:A),Z=V("w",e[1].dataType,e[1].dims.length,pe),ye=[we,Z];ee.push(...j(e[0].dims)),ee.push(...j(e[1].dims));let Ce=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${b?`vec4<${q}>`:q}) {\n        result[flatIndex] = ${b?`vec4<${q}>`:q}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${b?`vec4<${q}>`:q}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${b?"/ 4":""}, value);\n      }`;if(u){let ce=V("bias",e[2].dataType,e[2].dims.length,pe);ye.push(ce),ee.push(...j(e[2].dims)),Ce+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${b?`vec4<${q}>`:q} {\n          return bias[coords.${a?"w":"y"}${b?"/ 4":""}];\n        }`}let fe=Y("result",e[0].dataType,r.length,pe);return ee.push(...j(r)),{name:"Conv2DMatMul",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:P[0],y:P[1],z:P[2]},programUniforms:ee}),getShaderSource:ce=>`\n        ${rn("uniforms.result_strides")}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${ce.registerUniform("dimAOuter","i32").registerUniform("dimBOuter","i32").registerUniform("dimInner","i32").declareVariables(...ye,fe)}\n        const filterDims : vec2<i32> = vec2<i32>(${t.kernelShape[0]}, ${t.kernelShape[1]});\n        const pad : vec2<i32> = vec2<i32>(${t.pads[0]}, ${t.pads[1]});\n        const stride : vec2<i32> = vec2<i32>(${t.strides[0]}, ${t.strides[1]});\n        const dilation : vec2<i32> = vec2<i32>(${t.dilations[0]}, ${t.dilations[1]});\n        ${Ce}\n        ${dd(a,U,G,Q,u,t,B[0],B[1],B[2],q)}\n            ${b?fr(C,$,q,void 0,!a,N):hr(C,$,q,void 0,!a,N,!1,void 0,l)}`}}});var Nn,Wi=K(()=>{"use strict";$e();be();Gn();St();Nn=(e,t,r)=>{let o=e.length>2,n=o?"value += b[output_channel];":"",s=e[0].dims,u=e[1].dims,l=u[0]/t.group,a=t.format==="NHWC",p=Hn(s,u,t.dilations,t.pads,t.strides,a),h=D.size(p),y=Y("output",e[0].dataType,p),{activationFunction:g,applyActivation:v}=pt(t,y.type.value),b=V("x",e[0].dataType,s),x=V("w",e[1].dataType,u),I=[b,x];o&&I.push(V("b",e[2].dataType,e[2].dims));let $=C=>`\n  const strides: vec2<u32> = vec2(${t.strides[0]}u, ${t.strides[1]}u);\n  const pads: vec2<u32> = vec2(${t.pads[0]}u, ${t.pads[1]}u);\n\n  ${C.declareVariables(...I,y)}\n\n  ${g}\n\n  ${C.mainStart()}\n    ${C.guardAgainstOutOfBoundsWorkgroupSizes(h)}\n\n    let outputIndices = ${y.offsetToIndices("global_idx")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${a?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${a?1:2}], outputIndices[${a?2:3}]) * strides - pads;\n    let group_id: u32 = output_channel / ${l}u;\n\n    var value: ${y.type.value} = ${y.type.value}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < ${u[1]}u; wInChannel++) {\n      let input_channel = group_id * ${u[1]}u + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < ${u[2]}u; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * ${t.dilations[0]}u;\n\n        if (xHeight < 0u || xHeight >= ${s[a?1:2]}u) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < ${u[3]}u; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * ${t.dilations[1]}u;\n          if (xWidth < 0u || xWidth >= ${s[a?2:3]}u) {\n            continue;\n          }\n\n          let xVal = ${a?b.get("batch","xHeight","xWidth","input_channel"):b.get("batch","input_channel","xHeight","xWidth")};\n          let wVal = ${x.get("output_channel","wInChannel","wHeight","wWidth")};\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${n}\n    ${v}\n    ${y.setByOffset("global_idx","value")}\n  }`;return{name:"GroupedConv",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:r?r(p):p,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)}}),getShaderSource:$}}});var Ln,cd,Ni,Fn=K(()=>{"use strict";$e();gr();be();St();Ln=(e,t,r,o,n=!1)=>{let s=e[0].dims,u=e[1].dims,l=s[s.length-2],a=u[u.length-1],p=s[s.length-1],h=Ne(a),y=Ne(p),g=Ne(l),v=D.size(r)/h/g,b=e.length>2,x=o?o.slice(0,-2):r.slice(0,-2),$=[D.size(x),l,a],C=[{type:"uint32",data:v},{type:"uint32",data:l},{type:"uint32",data:a},{type:"uint32",data:p},...j(x),...j(s),...j(u)];b&&C.push(...j(e[2].dims)),C.push(...j($));let P=A=>{let z=jr("batch_dims",e[0].dataType,x.length),T=V("a",e[0].dataType,s.length,y),N=V("b",e[1].dataType,u.length,h),U=Y("output",e[0].dataType,$.length,h),{activationFunction:G,applyActivation:Q}=pt(t,U.type.value),B=[T,N],q="";if(b){let fe=n?h:1;B.push(V("bias",e[2].dataType,e[2].dims.length,fe)),q=`${n?`value += bias[col / ${fe}];`:`value += ${U.type.value}(bias[row + i]);`}`}let pe=s.slice(0,-2),ee=u.slice(0,-2),we=Ft(pe,x),Z=Ft(ee,x),ye=(fe,ce)=>{let We=fe.rank,Be=fe.name;if(We===2)return`var ${Be}_indices = ${fe.type.indices}(0u, 0u);`;let He=z.rank,L=`var ${Be}_indices: ${fe.type.indices};`;for(let X=We-2-1,he=He-1;X>=0;X--,he--)L+=`\n${Be}_indices[${X}] = ${He>1?`batch_indices[${he}]`:"batch_indices"};`;return ce.forEach(X=>{L+=`\n${Be}_indices[${X}] = 0;`}),L+=`${Be}_indices[${We-2}] = 0u;\n                     ${Be}_indices[${We-1}] = 0u;`,L},Ce=()=>{let fe=`var a_data: ${T.type.value};`;for(let ce=0;ce<y;ce++)fe+=`\n              let b_data${ce} = b[(b_offset + (k + ${ce}) * uniforms.N + col) / ${h}];`;for(let ce=0;ce<g;ce++){fe+=`a_data = a[(a_offset + (row + ${ce}) * uniforms.K + k) / ${y}];`;for(let We=0;We<y;We++)fe+=`\n            values[${ce}] = fma(${N.type.value}(a_data${y===1?"":`[${We}]`}), b_data${We}, values[${ce}]);\n`}return fe};return`\n  ${A.registerUniform("outputSize","u32").registerUniform("M","u32").registerUniform("N","u32").registerUniform("K","u32").registerInternalVariables(z).declareVariables(...B,U)}\n  ${G}\n  ${A.mainStart()}\n    ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n    let col = (global_idx % (uniforms.N / ${h})) * ${h};\n    var index1 = global_idx / (uniforms.N / ${h});\n    let stride1 = uniforms.M / ${g};\n    let row = (index1 % stride1) * ${g};\n    let batch = index1 / stride1;\n\n    ${r.length===2?"":`let batch_indices = ${z.offsetToIndices("batch")};`}\n    ${ye(T,we)}\n    let a_offset = ${T.indicesToOffset("a_indices")};\n    ${ye(N,Z)}\n    let b_offset = ${N.indicesToOffset("b_indices")};\n    var values: array<${U.type.value}, ${g}>;\n    for (var k: u32 = 0u; k < uniforms.K; k = k + ${y}) {\n      ${Ce()}\n    }\n    for (var i = 0u; i < ${g}u; i++) {\n      var value = values[i];\n      ${q}\n      ${Q}\n      let cur_indices = ${U.type.indices}(batch, row + i, col);\n      let offset = ${U.indicesToOffset("cur_indices")};\n      ${U.setByOffset(`offset / ${h}`,"value")};\n    }\n  }\n  `};return{name:"MatMulNaive",shaderCache:{hint:`${t.activationCacheKey}_${h}_${y}_${g}_${n}`,inputDependencies:b?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(v/64)},programUniforms:C}),getShaderSource:P}},cd=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},Ni=e=>{cd(e.inputs);let t=it.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can\'t use matmul on the given tensors");let r=t[t.length-1],o=e.inputs[0].dims[e.inputs[0].dims.length-1];r<8&&o<8?e.compute(Ln(e.inputs,{activation:"",activationCacheKey:""},t)):e.compute(nn(e.inputs,{activation:"",activationCacheKey:""},t))}});var Hn,Hi,pd,Gi,qn,md,fd,jn,Gn=K(()=>{"use strict";$e();Re();Ui();gr();Wi();St();Fn();qt();Hn=(e,t,r,o,n,s)=>{let u=e[0],l=e.slice(s?1:2,s?3:4),a=l.length,p=t[0],y=t.slice(2).map((b,x)=>b+(b-1)*(r[x]-1)),v=l.map((b,x)=>b+o[x]+o[x+a]).map((b,x)=>Math.floor((b-y[x]+n[x])/n[x]));return v.splice(0,0,u),v.splice(s?3:1,0,p),v},Hi=[2,3,1,0],pd=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[1]*t.group;if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let n=e[0].dims.length-2;if(t.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(t.strides.length!==n)throw new Error(`strides should be ${n}D`);if(t.pads.length!==n*2)throw new Error(`pads should be ${n*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},Gi=(e,t)=>{let r=e.kernelShape.slice();for(let s=2;s<t[1].dims.length;++s)r[s-2]===0&&(r[s-2]=t[1].dims[s]);let o=e.pads.slice();Pt.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,o,e.format==="NHWC",e.autoPad);let n=Object.assign({},e);return Object.assign(n,{kernelShape:r,pads:o,cacheKey:e.cacheKey}),n},qn=e=>{let t=Qr(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],n=e.dilations,s=e.group,u=e.kernel_shape,l=e.pads,a=e.strides,p=e.w_is_const();return se({autoPad:o,format:r,dilations:n,group:s,kernelShape:u,pads:l,strides:a,wIsConst:p,...t})},md=(e,t,r)=>{let o=Gi(r,t);if(r.group!==1){e.compute(Nn(t,o));return}let n=r.format==="NHWC",s=t.length===3,u=t[0].dims[n?1:2],l=t[0].dims[n?2:3],a=t[0].dims[n?3:1],p=t[1].dims[2],h=t[1].dims[3],y=Hn(t[0].dims,t[1].dims,r.dilations,o.pads,r.strides,n),g=y[n?1:2],v=y[n?2:3],b=y[n?3:1],x=n&&p===u&&h===l&&r.pads[0]===0&&r.pads[1]===0;if(x||p===1&&h===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let T=y[0],N,U,G,Q=[];if(n){let pe=e.kernelCustomData.wT??e.compute(rt(t[1],Hi),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=pe),x){let ee=u*l*a;N=t[0].reshape([1,T,ee]),U=pe.reshape([1,ee,b]),G=[1,T,b]}else N=t[0].reshape([T,u*l,a]),U=pe.reshape([1,a,b]),G=[T,g*v,b];Q.push(N),Q.push(U)}else N=t[0].reshape([T,a,u*l]),U=t[1].reshape([1,b,a]),G=[T,b,g*v],Q.push(U),Q.push(N);s&&Q.push(t[2]);let B=G[2],q=Q[0].dims[Q[0].dims.length-1];B<8&&q<8?e.compute(Ln(Q,o,y,G,n),{inputs:Q}):e.compute(nn(Q,o,y,G,n),{inputs:Q});return}let I=!0,$=e.kernelCustomData.wT??e.compute(rt(t[1],Hi),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=$);let C=[t[0],$];s&&C.push(t[2]);let P=n?g*v:b,A=n?b:g*v,z=p*h*a;e.compute(Vi(C,o,y,P,A,z,s,I),{inputs:C})},fd=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&o.push(e.inputs[2]);let n=[0,t.pads[0],0,t.pads[1]],s=[1].concat(t.strides),u=[1].concat(t.dilations),l=[1].concat(t.kernelShape),a=Gi({...t,pads:n,strides:s,dilations:u,kernelShape:l},o);e.compute(Nn(o,a,p=>r?[p[0],p[2],p[3]]:[]))},jn=(e,t)=>{pd(e.inputs,t),e.inputs[0].dims.length===3?fd(e,t):md(e,e.inputs,t)}});var hd,Li,Fi=K(()=>{"use strict";vt();be();St();tn();Wn();gr();hd=(e,t=!1,r,o=4)=>{let n=Le(o,"f32"),s=C=>{switch(C){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];\n            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];\n            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];\n            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];\n            return vec4<f32>(v0, v1, v2, v3);\n            `;default:throw new Error(`innerElementSize ${C} is not supported.`)}},u=e?`\n      let coord = vec4<i32>(batch, iXR, iXC, xCh);\n      `:`\n      let coord = vec4<i32>(batch, xCh, iXR, iXC);\n      `,l=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,a=e?"outBackprop[1]":"outBackprop[2]",p=e?"outBackprop[2]":"outBackprop[3]",h=e?"row":"col",y=e?"col":"row",g=`\n      let inChannels = ${e?"outBackprop[3]":"outBackprop[1]"};\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      let outRow = ${h} / outWidth;\n      let outCol = ${h} % outWidth;\n\n      let WRow = ${y} / (filterDims[1] * inChannels);\n      let WCol = ${y} / inChannels % filterDims[1];\n      let xR = f32(outRow - pads[0] + dilation[0] * WRow) / f32(strides[0]);\n      let xC = f32(outCol - pads[1] + dilation[1] * WCol) / f32(strides[1]);\n      if (xR < 0.0 || xR >= f32(${a}) || fract(xR) > 0.0) {\n        return ${n}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(${p}) || fract(xC) > 0.0) {\n        return ${n}(0.0);\n      }\n      let iXR = i32(xR);\n      let iXC = i32(xC);\n      let xCh = ${y} % inChannels;\n      ${u}\n      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${o}];`,v=e?`\n      let col = colIn * ${o};\n      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n        ${g}\n      }\n      return ${n}(0.0);`:`\n      let col = colIn * ${o};\n      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {\n        ${g}\n      }\n      return ${n}(0.0);`,b=`\n      let col = colIn * ${o};\n      let inChannels = ${e?"outBackprop[3]":"outBackprop[1]"};\n      let coordX = filterDims.x - 1 - row / (filterDims[1] * inChannels);\n      let coordY = filterDims.y - 1 - (row / inChannels) % filterDims[1];\n      if (${e?"row < uniforms.dimInner && col < uniforms.dimBOuter":"row < uniforms.dimInner && col < uniforms.dimAOuter"}  && coordX >= 0 && coordY >= 0) {\n        let rowInner = row % inChannels;\n        let coord = vec4<i32>(coordX, coordY, col, rowInner);\n        ${s(o)}\n      }\n      return ${n}(0.0);\n      `,{activationFunction:x,applyActivation:I}=pt(r,n);return`\n      ${x}\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${n} {\n    ${e?v:b}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${n} {\n    ${e?b:v}\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${n}) {\n    let col = colIn * ${o};\n    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {\n      var value = valueInput;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${l}\n      ${en(t)}\n      ${I}\n      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${o}] = value;\n    }\n  }`},Li=(e,t,r,o,n,s,u,l)=>{let a=t.format==="NHWC",p=a?e[0].dims[3]:e[0].dims[1],h=r[0],y=a?r[2]:r[3],g=a?r[1]:r[2],v=a?r[3]:r[1],b=a?p%4===0&&v%4===0:y%4===0&&v%4===0,x=a?v:y*g,I=a?y*g:v,$=b?[8,8,1]:[x<=4||I<=4?4:16,x>4&&I<=4?4:16,1],C=b?[4,4,1]:[x<=4?1:4,x>4&&I<=4?1:4,1],P=[Math.ceil(x/$[0]/C[0]),Math.ceil(I/$[1]/C[1]),Math.ceil(h/$[2]/C[2])];Pe("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${P}`);let A=b?4:1,z=Math.max($[0]*A,$[1]),T=b?4:1,N=[{type:"int32",data:o},{type:"int32",data:n},{type:"int32",data:s}],U=V("x",e[0].dataType,e[0].dims.length,T),G=V("w",e[1].dataType,e[1].dims.length,1),Q=Y("result",e[0].dataType,r.length,T),B=[U,G];N.push(...j(e[0].dims)),N.push(...j(e[1].dims));let q="";if(u){let pe=V("bias",e[2].dataType,e[2].dims.length,T);B.push(pe),N.push(...j(e[2].dims)),q+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${b?"vec4<f32>":"f32"} {\n          return bias[coords.${a?"w":"y"}${b?"/ 4":""}];\n        }`}return N.push(...j(r)),{name:"Conv2DTransposeMatMul",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:P[0],y:P[1],z:P[2]},programUniforms:N}),getShaderSource:pe=>`\n        ${rn("uniforms.result_strides")}\n        ${pe.registerUniform("dimAOuter","i32").registerUniform("dimBOuter","i32").registerUniform("dimInner","i32").declareVariables(...B,Q)};\n        const outBackprop : vec4<i32> = vec4<i32>(${e[0].dims.join(",")});\n        const filterDims : vec2<i32> = vec2<i32>(${t.kernelShape[a?1:2]}, ${t.kernelShape[a?2:3]});\n        const effectiveFilterDims : vec2<i32> = filterDims + vec2<i32>(\n              ${t.dilations[0]<=1?0:(t.kernelShape[a?1:2]-1)*(t.dilations[0]-1)},\n              ${t.dilations[1]<=1?0:(t.kernelShape[a?2:3]-1)*(t.dilations[1]-1)});\n        const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${t.pads[0]+t.pads[2]})/2,\n                                         i32(effectiveFilterDims[1]) - 1 - (${t.pads[1]+t.pads[3]})/2);\n        const strides : vec2<i32> = vec2<i32>(${t.strides[0]}, ${t.strides[1]});\n        const dilation : vec2<i32> = vec2<i32>(${t.dilations[0]}, ${t.dilations[1]});\n        const dimAOuter : i32 = ${o};\n        const dimBOuter : i32 = ${n};\n        const dimInner : i32 = ${s};\n        ${q}\n        ${hd(a,u,t,A)}\n        ${b?fr(C,$,"f32",void 0,!a,z):hr(C,$,"f32",void 0,!a,z,!1,void 0,l)}`}}});var gd,Kn,qi=K(()=>{"use strict";vt();$e();be();gd=(e,t,r,o,n,s,u=!1,l)=>{let a=r.format==="NHWC",p=a?1:2,h=a?2:3,y=a?3:1,g=D.size(o),v=u?2:1,b=r.group,x=t[1].dims,I=x[0]/b,$=x[1],C=`\n  fn setOutputAtIndex(flatIndex : u32, value : ${u?`vec4<${l}>`:l}) {\n    result[flatIndex] = ${u?`vec4<${l}>`:l}(value);\n  }`;n&&(C+=`\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${u?`vec4<${l}>`:l} {\n      return bias[coords.${a?"w":"y"}${u?"/ 4":""}];\n    }`);let P=u?4:1,A=V("W",t[1].dataType,t[1].dims,P),z=V("Dy",t[0].dataType,t[0].dims,P),T=[z,A];n&&T.push(V("bias",t[2].dataType,[o[y]],P));let N=Y("result",t[0].dataType,o,P),U=`{\n        let batch: u32 = ${s?"global_id.z":"workgroup_id.z"} / outShape[1];\n        let r = ${s?"global_id.z":"workgroup_id.z"} % outShape[1];\n        let c = ${s?"global_id.y":"workgroup_id.y"} * ${v};\n        let d1: u32 = ${s?"global_id.x":"workgroup_id.x"} * 4;\n\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(pads);\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd: array<vec4<${l}>, ${v}>;\n        for (var i = 0; i < ${v}; i++) {\n          dotProd[i] = vec4<${l}>(0.0);\n        }\n        for (var wR: u32 = 0; wR < filterDims[0]; wR = wR + 1) {\n          var dyR = (${l}(dyCorner.x) + ${l}(wR)) / ${l}(strides.x);\n          let wRPerm = filterDims[0] - 1 - wR;\n          if (dyR < 0.0 || dyR >= ${l}(outBackprop[1]) ||\n              fract(dyR) > 0.0 || wRPerm < 0) {\n            continue;\n          }\n          let idyR: u32 = u32(dyR);\n\n          for (var wC: u32 = 0; wC < filterDims[1]; wC = wC + 1) {\n            let dyC = (${l}(dyCorner.y) + ${l}(wC)) / ${l}(strides.y);\n            let dyC2 = (${l}(dyCorner.y) + 1.0 + ${l}(wC)) / ${l}(strides.y);\n            let wCPerm = filterDims[1] - 1 - wC;\n            if (wCPerm < 0) {\n              continue;\n            }\n            var bDyCVal = true;\n            var bDyCVal2 = true;\n            if (dyC < 0.0 || dyC >= ${l}(outBackprop[2]) ||\n                fract(dyC) > 0.0) {\n              bDyCVal = false;\n            }\n            if (dyC2 < 0.0 || dyC2 >= ${l}(outBackprop[2]) ||\n                fract(dyC2) > 0.0) {\n              bDyCVal2 = false;\n            }\n\n            let idyC: u32 = u32(dyC);\n            let idyC2: u32 = u32(dyC2);\n            if (bDyCVal && bDyCVal2) {\n              let d2Length = outBackprop[3];\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${A.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${A.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${A.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${A.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${z.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${l}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n\n                xValue =  ${z.get("batch","idyR","idyC2","d2")};\n\n                dotProd[1] = dotProd[1] + vec4<${l}>(dot(xValue, wValue0),\n                                                    dot(xValue, wValue1),\n                                                    dot(xValue, wValue2),\n                                                    dot(xValue, wValue3));\n              }\n            } else if (bDyCVal) {\n              let d2Length = outBackprop[${y}];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${A.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${A.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${A.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${A.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${z.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${l}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n              }\n            } else if (bDyCVal2) {\n              let d2Length = outBackprop[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${A.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${A.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${A.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${A.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${z.get("batch","idyR","idyC2","d2")};\n                let tmpval = vec4<${l}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[1] = dotProd[1] + tmpval;\n              }\n            }\n          }\n        }\n\n        for (var i: u32 = 0; i < ${v}; i = i + 1) {\n          let value = dotProd[i] + ${n?"bias[c+i]":`vec4<${l}>(0.0)`};\n          ${N.set("batch","r","c + i","d1","value")};\n        }\n      }`,G=`\n          let outputIndices = ${N.offsetToIndices("global_idx")};\n          let batch = ${N.indicesGet("outputIndices",0)};\n          let d1 = ${N.indicesGet("outputIndices",y)};\n          let r = ${N.indicesGet("outputIndices",p)};\n          let c = ${N.indicesGet("outputIndices",h)};\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - pads;\n          let dyRCorner = dyCorner.x;\n          let dyCCorner = dyCorner.y;\n          let groupId = d1 / ${$};\n          let wOutChannel = d1 - groupId * ${$};\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n          // ? = to be determined. : = across all values in that axis.\n          var dotProd = ${l}(0.0);\n          for (var wR: u32 = 0; wR < effectiveFilterDims.x; wR = wR + 1) {\n            if (wR % dilations.x != 0) {\n              continue;\n            }\n            let dyR = (${l}(dyRCorner) + ${l}(wR)) / ${l}(strides[0]);\n            let wRPerm = filterDims.x - 1 - wR / dilations.x;\n            if (dyR < 0.0 || dyR >= ${l}(outBackprop[${p}]) || fract(dyR) > 0.0 ||\n                wRPerm < 0) {\n              continue;\n            }\n            let idyR: u32 = u32(dyR);\n\n            for (var wC: u32 = 0; wC < effectiveFilterDims.y; wC = wC + 1) {\n              if (wC % dilations.y != 0) {\n                continue;\n              }\n              let dyC = (${l}(dyCCorner) + ${l}(wC)) / ${l}(strides.y);\n              let wCPerm = filterDims.y - 1 - wC / dilations.y;\n              if (dyC < 0.0 || dyC >= ${l}(outBackprop[${h}]) ||\n                  fract(dyC) > 0.0 || wCPerm < 0) {\n                continue;\n              }\n              let idyC: u32 = u32(dyC);\n              var inputChannel = groupId * ${I};\n              for (var d2: u32 = 0; d2 < ${I}; d2 = d2 + 1) {\n                let xValue = ${a?z.get("batch","idyR","idyC","inputChannel"):z.get("batch","inputChannel","idyR","idyC")};\n                let wValue = ${A.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};\n                dotProd = dotProd + xValue * wValue;\n                inputChannel = inputChannel + 1;\n              }\n            }\n          }\n          let value = dotProd + ${n?"bias[d1]":`${l}(0.0)`};\n          ${N.setByOffset("global_idx","value")};\n        `;return`\n  ${e.declareVariables(...T,N)}\n  ${C}\n  const outShape : vec4<u32> = vec4<u32>(${o.join(",")});\n  const outBackprop : vec4<u32> = vec4<u32>(${t[0].dims.join(",")});\n  const strides : vec2<u32> = vec2<u32>(${r.strides[0]}, ${r.strides[1]});\n  const filterDims : vec2<u32> = vec2<u32>(${r.kernelShape[a?1:2]}, ${r.kernelShape[a?2:3]});\n  const dilations : vec2<u32> = vec2<u32>(${r.dilations[0]}, ${r.dilations[1]});\n  const effectiveFilterDims : vec2<u32> = filterDims + vec2<u32>(\n          ${r.dilations[0]<=1?0:(r.kernelShape[a?1:2]-1)*(r.dilations[0]-1)},\n          ${r.dilations[1]<=1?0:(r.kernelShape[a?2:3]-1)*(r.dilations[1]-1)});\n  const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${r.pads[0]+r.pads[2]})/2,\n                                     i32(effectiveFilterDims[1]) - 1 - (${r.pads[1]+r.pads[3]})/2);\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(g)};\n  ${u?U:G}}`},Kn=(e,t,r)=>{let o=e.length>2,n=t.outputShape,s=D.size(n),u=[Math.ceil(s/64),1,1];Pe("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${u}`);let l=Oe(e[0].dataType);return{name:"ConvTranspose2D",shaderCache:{hint:t.cacheKey},getRunData:()=>({dispatchGroup:{x:u[0],y:u[1],z:u[2]},outputs:[{dims:r?r(n):n,dataType:e[0].dataType}]}),getShaderSource:a=>gd(a,e,t,n,o,u[1]===1&&u[2]===1,!1,l)}}});var yd,bd,wd,ji,Ki,vd,$d,Sd,xd,Yi,Zi=K(()=>{"use strict";Re();Fi();qi();St();qt();yd=(e,t,r,o,n,s)=>(e-1)*t+r+(o-1)*n+1-s,bd=(e,t,r,o,n)=>{let s=Math.floor(e/2);t==="SAME_UPPER"?(r[o]=s,r[n]=e-s):t==="SAME_LOWER"&&(r[o]=e-s,r[n]=s)},wd=(e,t,r,o,n,s,u,l,a,p)=>{let h=e.length-2,y=p.length===0;if(a.length===0)for(let b=0;b<h;++b)a.push(0);let g=e[0],v=t[l?3:1]*n;for(let b=0,x=e.length-h-(l?1:0);b<h;++b,++x){let I=e[x],$=y?I*u[b]:p[b],C=yd(I,u[b],s[b],t[x],r[b],$);bd(C,o,s,b,b+h),y&&p.push(u[b]*(I-1)+a[b]+(t[x]-1)*r[b]+1-s[b]-s[b+h])}p.splice(0,0,g),p.splice(l?3:1,0,v)},ji=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((g,v)=>g*v,1)===0){r.length=0;for(let g=2;g<t[1].dims.length;++g)r.push(t[1].dims[g])}let o=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(o?3:1,0,t[1].dims[1]);let n=e.pads.slice(),s=e.outputShape.slice(),u=e.outputPadding.slice(),l=t[0].dims,a=e.dilations.slice();if(a.reduce((g,v)=>g+v,0)===0){let g=t[0].dims.length-2;a=new Array(g).fill(1)}let p=e.strides.slice();if(p.reduce((g,v)=>g+v,0)===0){let g=t[0].dims.length-2;p=new Array(g).fill(1)}wd(l,r,a,e.autoPad,e.group,n,p,o,u,s);let h=Object.assign({},e),y=e.cacheKey+[r.join("n,"),n.join(","),p.join(","),u.join(","),s.join(","),a.join(",")].join("_");return Object.assign(h,{kernelShape:r,pads:n,outputPadding:u,outputShape:s,dilations:a,strides:p,cacheKey:y}),h},Ki=e=>{let t=Qr(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],n=e.dilations,s=e.group,u=e.kernelShape,l=e.pads,a=e.strides,p=e.wIsConst(),h=e.outputPadding,y=e.outputShape;return se({autoPad:o,format:r,dilations:n,group:s,kernelShape:u,outputPadding:h,outputShape:y,pads:l,strides:a,wIsConst:p,...t})},vd=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[0];if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let n=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==n))throw new Error("invalid bias");let s=e[0].dims.length-2;if(t.dilations.reduce((h,y)=>h+y,0)>0&&t.dilations.length!==s)throw new Error(`dilations should be ${s}D`);if(t.strides.reduce((h,y)=>h+y,0)>0&&t.strides.length!==s)throw new Error(`strides should be ${s}D`);if(t.pads.reduce((h,y)=>h+y,0)>0&&t.pads.length!==s*2)throw new Error(`pads should be ${s*2}D`);if(t.outputPadding.length!==s&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${s}D`);if(t.kernelShape.reduce((h,y)=>h+y,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},$d=[2,3,1,0],Sd=(e,t,r)=>{let o=ji(r,t),n=r.format==="NHWC",s=o.outputShape,u=s[n?3:1],l=t[0].dims[n?3:1];if(o.group!==1||u===1&&l===1){e.compute(Kn(t,o));return}let a=s[n?1:2],p=s[n?2:3],h=t[1].dims[2],y=t[1].dims[3],g=n?a*p:u,v=n?u:a*p,b=h*y*l,x=!0,I=e.kernelCustomData.wT??e.compute(rt(t[1],$d),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=I);let $=[t[0],I],C=t.length===3;C&&(!n&&t[2].dims.length===1?$.push(t[2].reshape([t[2].dims[0],1,1])):$.push(t[2])),e.compute(Li($,o,s,g,v,b,C,x),{inputs:$})},xd=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];o.length===3&&o.push(e.inputs[2]);let n=t.kernelShape;(n.length===0||n[0]===0)&&(n=[e.inputs[1].dims[2]]);let s=t.dilations;(s.length===0||s[0]===0)&&(s=[1]);let u=t.strides;(u.length===0||u[0]===0)&&(u=[1]);let l=t.pads;l.length===0&&(l=[0,0]),l=[0,l[0],0,l[1]],u=[1].concat(u),s=[1].concat(s),n=[1].concat(n);let a=ji({...t,pads:l,strides:u,dilations:s,kernelShape:n},o);e.compute(Kn(o,a,p=>r?[p[0],p[2],p[3]]:[p[0],p[1],p[3]]))},Yi=(e,t)=>{vd(e.inputs,t),e.inputs[0].dims.length===3?xd(e,t):Sd(e,e.inputs,t)}});var Cd,Xi,Ji,Qi=K(()=>{"use strict";Ue();$e();Re();be();Cd=(e,t,r,o)=>{let n=D.size(t),s=t.length,u=V("input",e,s),l=Y("output",e,s),a=r.dataType===6?r.getInt32Array()[0]:Number(r.getBigInt64Array()[0]),p=D.normalizeAxis(a,s),h=y=>{let g=` i32(${u.indicesGet("inputIndices","uniforms.axis")}) `,v=Ae("uniforms.input_shape","uniforms.axis",s),b=o.reverse?g+(o.exclusive?" + 1":""):"0",x=o.reverse?v:g+(o.exclusive?"":" + 1");return`\n                ${y.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(u,l)}\n                ${y.mainStart()}\n                  ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n                  var inputIndices = ${l.offsetToIndices("global_idx")};\n                  var sum = ${l.type.value}(0);\n                  let first : i32 = ${b};\n                  let last : i32 = ${x};\n                  for (var i : i32 = first; i < last; i++) {\n                    ${u.indicesSet("inputIndices","uniforms.axis","u32(i)")};\n                    sum = sum + ${u.getByIndices("inputIndices")};\n                  }\n                  ${l.setByOffset("global_idx","sum")};\n                }`};return{name:"CumSum",shaderCache:{hint:o.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:[{type:"uint32",data:n},{type:"int32",data:p},...j(t),...j(t)]}),getShaderSource:h}},Xi=(e,t)=>{let r=e.inputs[0].dims,o=e.inputs[0].dataType,n=e.inputs[1];e.compute(Cd(o,r,n,t),{inputs:[0]})},Ji=e=>{let t=e.exclusive===1,r=e.reverse===1;return se({exclusive:t,reverse:r})}});var Yn,on,es,_d,Id,Zn,Xn,ts,Ad,rs,ns,os=K(()=>{"use strict";$e();Re();be();Yn="[a-zA-Z]|\\\\.\\\\.\\\\.",on="("+Yn+")+",es="^"+on+"$",_d="("+on+",)*"+on,Id="^"+_d+"$",Zn=class{constructor(t=-1){this.symbolToIndices=new Map,this.inputIndex=t}addSymbol(t,r){let o=this.symbolToIndices.get(t);o===void 0?o=[r]:o.push(r),this.symbolToIndices.set(t,o)}},Xn=class{constructor(t,r){this.equation=r;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[o,n]=r.includes("->")?r.split("->",2):[r,""];if(!o.match(RegExp(Id)))throw new Error("Invalid LHS term");if(o.split(",").forEach((l,a)=>{let p=t[a].dims.slice();if(!l.match(RegExp(es)))throw new Error("Invalid LHS term");let h=this.processTerm(l,!0,p,a);this.lhs.push(h)}),n==="")n+=[...this.symbolToInfo.entries()].filter(([l,a])=>a.count===1||l==="...").map(([l])=>l).join("");else if(!n.match(RegExp(on)))throw new Error("Invalid RHS");n.match(RegExp(Yn,"g"))?.forEach(l=>{if(l==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let a=this.symbolToInfo.get(l);if(a===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(a.dimValue)}}),this.rhs=this.processTerm(n,!1,this.outputDims)}addSymbol(t,r,o){let n=this.symbolToInfo.get(t);if(n!==void 0){if(n.dimValue!==r&&n.count!==1)throw new Error("Dimension mismatch");n.count++,n.inputIndices.push(o)}else n={count:1,dimValue:r,inputIndices:[o]};this.symbolToInfo.set(t,n)}processTerm(t,r,o,n=-1){let s=o.length,u=!1,l=[],a=0;if(!t.match(RegExp(es))&&!r&&t!=="")throw new Error("Invalid LHS term");let p=t.match(RegExp(Yn,"g")),h=new Zn(n);return p?.forEach((y,g)=>{if(y==="..."){if(u)throw new Error("Only one ellipsis is allowed per input term");u=!0;let v=s-p.length+1;if(v<0)throw new Error("Ellipsis out of bounds");if(l=o.slice(a,a+v),this.hasEllipsis){if(this.ellipsisDims.length!==l.length||this.ellipsisDims.toString()!==l.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=l;else throw new Error("Ellipsis must be specified in the LHS");for(let b=0;b<l.length;b++){let x=String.fromCharCode("0".charCodeAt(0)+b);h.addSymbol(x,g+b),this.addSymbol(x,o[a++],n)}}else h.addSymbol(y,g+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(y,o[a++],n)}),h}},ts=e=>e+"_max",Ad=(e,t,r,o,n)=>{let u=t.map((v,b)=>e[b]?v.length:v).map((v,b)=>V(`input${b}`,r,v)),l=D.size(n),a=ke(n.length),p=a?n.length:n,h=Y("output",r,p),y=[...o.symbolToInfo.keys()].filter(v=>!o.rhs.symbolToIndices.has(v)),g=v=>{let b=[],x="var prod = 1.0;",I="var sum = 0.0;",$="sum += prod;",C=[],P=[],A=[],z=[],T=o.symbolToInfo.size===o.rhs.symbolToIndices.size;o.symbolToInfo.forEach((U,G)=>{if(o.rhs.symbolToIndices.has(G)){let Q=o.rhs.symbolToIndices.get(G)?.[0];Q!==void 0&&o.lhs.forEach((B,q)=>{if(U.inputIndices.includes(q)){let pe=B.symbolToIndices.get(G);if(pe===void 0)throw new Error("Invalid symbol error");pe.forEach(ee=>{b.push(`${u[q].indicesSet(`input${q}Indices`,ee,h.indicesGet("outputIndices",Q))}`)})}})}else o.lhs.forEach((Q,B)=>{if(U.inputIndices.includes(B)){let q=Q.symbolToIndices.get(G);if(q===void 0)throw new Error("Invalid symbol error");q.forEach(pe=>{C.push(`${u[B].indicesSet(`input${B}Indices`,pe,`${G}`)}`)}),z.push(`prod *= ${u[B].getByIndices(`input${B}Indices`)};`)}}),P.push(`for(var ${G}: u32 = 0; ${G} < uniforms.${ts(G)}; ${G}++) {`),A.push("}")});let N=T?[...b,`let sum = ${u.map((U,G)=>U.getByIndices(`input${G}Indices`)).join(" * ")};`]:[...b,I,...P,...C,x,...z,$,...A];return`\n            ${v.registerUniforms(y.map(U=>({name:`${ts(U)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...u,h)}\n\n            ${v.mainStart()}\n            ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n            var outputIndices = ${h.offsetToIndices("global_idx")};\n            ${u.map((U,G)=>`var input${G}Indices: ${u[G].type.indices};`).join(`\n`)}\n            ${N.join(`\n`)};\n            ${h.setByOffset("global_idx","sum")};\n          }`};return{name:"Einsum",shaderCache:{hint:o.equation,inputDependencies:e.map(v=>v?"rank":"dims")},getRunData:()=>{let v=y.filter(x=>o.symbolToInfo.has(x)).map(x=>({type:"uint32",data:o.symbolToInfo.get(x)?.dimValue||0}));v.push({type:"uint32",data:l});let b=t.filter((x,I)=>e[I]).map((x,I)=>[...j(x)]).reduce((x,I)=>x.concat(I),v);return a&&b.push(...j(n)),{outputs:[{dims:n,dataType:r}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:b}},getShaderSource:g}},rs=(e,t)=>{let r=new Xn(e.inputs,t.equation),o=e.inputs.map((u,l)=>ke(u.dims.length)),n=r.outputDims,s=e.inputs.map((u,l)=>u.dims);e.compute(Ad(o,s,e.inputs[0].dataType,r,n))},ns=e=>{let t=e.equation.replace(/\\s+/g,"");return se({equation:t})}});var Td,as,Ed,Od,is,ss=K(()=>{"use strict";Ue();$e();be();Td=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=r.length<t.length?0:r.length-t.length,n=t.length<r.length?0:t.length-r.length;for(;o<r.length&&n<t.length;++o,++n)if(r[o]!==t[n]&&r[o]!==1&&t[n]!==1)throw new Error("Expand requires shape to be broadcastable to input")},as=(e,t)=>{let r=e.length-t.length,o=[];for(let n=0;n<r;++n)o.push(e[n]);for(let n=0;n<t.length;++n)o.push(t[n]===1?e[n+r]:t[n]);return o},Ed=(e,t)=>e.length>t.length?as(e,t):as(t,e),Od=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=Ed(t,r),n=e[0].dataType,s=n===9?4:1,u=Math.ceil(D.size(o)/s),l=ke(t.length),a=ke(o.length),p=y=>{let g=l?t.length:t,v=a?o.length:o,b=V("input",n,g,s),x=Y("output",n,v,s),I;if(n===9){let $=(C,P,A="")=>`\n          let outputIndices${P} = ${x.offsetToIndices(`outputOffset + ${P}u`)};\n          let offset${P} = ${b.broadcastedIndicesToOffset(`outputIndices${P}`,x)};\n          let index${P} = offset${P} / 4u;\n          let component${P} = offset${P} % 4u;\n          ${C}[${P}] = ${A}(${b.getByOffset(`index${P}`)}[component${P}]);\n        `;I=`\n        let outputOffset = global_idx * ${s};\n        var data = vec4<u32>(0);\n        ${$("data",0,"u32")}\n        ${$("data",1,"u32")}\n        ${$("data",2,"u32")}\n        ${$("data",3,"u32")}\n        ${x.setByOffset("global_idx","data")}\n      }`}else I=`\n        let outputIndices = ${x.offsetToIndices("global_idx")};\n        let inputOffset = ${b.broadcastedIndicesToOffset("outputIndices",x)};\n        ${x.setByOffset("global_idx",b.getByOffset("inputOffset"))}\n      }`;return`\n    ${y.registerUniform("vec_size","u32").declareVariables(b,x)}\n    ${y.mainStart()}\n    ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n    ${I}`},h=[{type:"uint32",data:u}];return l&&h.push(...j(t)),a&&h.push(...j(o)),{name:"Expand",shaderCache:{hint:`${o.length}`,inputDependencies:[l?"rank":"dims"]},getShaderSource:p,getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:h})}},is=e=>{Td(e.inputs),e.compute(Od(e.inputs),{inputs:[0]})}});var kd,Pd,us,ls,ds=K(()=>{"use strict";Ue();$e();Re();be();kd=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},Pd=(e,t)=>{let r=e[0].dims,o=e[1].dims,n=r.length,s=D.normalizeAxis(t.axis,n),u=r.slice(0);u.splice(s,1,...o);let l=r[s],a=e[0].dataType===9?4:1,p=Math.ceil(D.size(u)/a),h=ke(e[0].dims.length),y=h?e[0].dims.length:e[0].dims,g=ke(e[1].dims.length),v=g?e[1].dims.length:e[1].dims,b=ke(u.length),x=b?u.length:u,I=[{type:"uint32",data:p},{type:"int32",data:l},{type:"uint32",data:s}];h&&I.push(...j(e[0].dims)),g&&I.push(...j(e[1].dims)),b&&I.push(...j(u));let $=[];$.push(h?"rank":"dims"),$.push(g?"rank":"dims");let C=P=>{let A=V("data",e[0].dataType,y,a),z=V("inputIndices",e[1].dataType,v),T=Y("output",e[0].dataType,x,a),N=G=>{let Q=o.length,B=`var indicesIndices${G}  = ${z.type.indices}(0);`;for(let q=0;q<Q;q++)B+=`${Q>1?`indicesIndices${G}[${q}]`:`indicesIndices${G}`} = ${u.length>1?`outputIndices${G}[uniforms.axis + ${q}]`:`outputIndices${G}`};`;B+=`\n          var idx${G} = ${z.getByIndices(`indicesIndices${G}`)};\n          if (idx${G} < 0) {\n            idx${G} = idx${G} + uniforms.axisDimLimit;\n          }\n          var dataIndices${G} = ${A.type.indices}(0);\n        `;for(let q=0,pe=0;q<n;q++)q===s?(B+=`${n>1?`dataIndices${G}[${q}]`:`dataIndices${G}`} = u32(idx${G});`,pe+=Q):(B+=`${n>1?`dataIndices${G}[${q}]`:`dataIndices${G}`} = ${u.length>1?`outputIndices${G}[${pe}]`:`outputIndices${G}`};`,pe++);return B},U;if(e[0].dataType===9){let G=(Q,B,q="")=>`\n          let outputIndices${B} = ${T.offsetToIndices(`outputOffset + ${B}u`)};\n          ${N(B)};\n          let offset${B} = ${A.indicesToOffset(`dataIndices${B}`)};\n          let index${B} = offset${B} / 4u;\n          let component${B} = offset${B} % 4u;\n          ${Q}[${B}] = ${q}(${A.getByOffset(`index${B}`)}[component${B}]);\n        `;U=`\n        let outputOffset = global_idx * ${a};\n        var value = vec4<u32>(0);\n        ${G("value",0,"u32")}\n        ${G("value",1,"u32")}\n        ${G("value",2,"u32")}\n        ${G("value",3,"u32")}\n        ${T.setByOffset("global_idx","value")}\n      `}else U=`\n      let outputIndices = ${T.offsetToIndices("global_idx")};\n      ${N("")};\n      let value = ${A.getByIndices("dataIndices")};\n      ${T.setByOffset("global_idx","value")};\n      `;return`\n      ${P.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(A,z,T)}\n      ${P.mainStart()}\n        ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        ${U}\n      }`};return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:$},getRunData:()=>({outputs:[{dims:u,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:I}),getShaderSource:C}},us=e=>se({axis:e.axis}),ls=(e,t)=>{let r=e.inputs;kd(r),e.compute(Pd(e.inputs,t))}});var Rd,Bd,cs,ps,ms=K(()=>{"use strict";$e();Re();be();Rd=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and\n                     indices input tensors be of same rank.`)},Bd=(e,t)=>{let r=e[0].dims,o=e[0].dataType,n=r.length,s=e[1].dims,u=e[1].dataType,l=D.normalizeAxis(t.axis,n),a=r[l],p=s.slice(0),h=D.size(p),y=V("input",o,n),g=V("indicesInput",u,s.length),v=Y("output",o,p.length),b=[{type:"uint32",data:h},{type:"int32",data:a},{type:"uint32",data:l}];return b.push(...j(r)),b.push(...j(s)),b.push(...j(p)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:p,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:b}),getShaderSource:$=>`\n      ${$.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(y,g,v)}\n      ${$.mainStart()}\n      ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n      let outputIndices = ${v.offsetToIndices("global_idx")};\n\n      var idx = ${g.getByOffset("global_idx")};\n      if (idx < 0) {\n        idx = idx + uniforms.axisDimLimit;\n      }\n      var inputIndices = ${y.type.indices}(outputIndices);\n      ${y.indicesSet("inputIndices","uniforms.axis","u32(idx)")};\n      let value = ${y.getByIndices("inputIndices")};\n\n      ${v.setByOffset("global_idx","value")};\n  }`}},cs=e=>se({axis:e.axis}),ps=(e,t)=>{let r=e.inputs;Rd(r),e.compute(Bd(e.inputs,t))}});var Md,Dd,zd,fs,hs,gs=K(()=>{"use strict";$e();Re();be();Md=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},Dd=(e,t,r)=>{if(r.length===0)return"0u";let o=r.length===1&&e!==1||r.length===2&&r[0]!==e,n=r[r.length-1]!==t,s="0u";return o||(s+=`+ m * ${r[r.length-1]}u`),n||(s+="+n"),s},zd=(e,t)=>{let r=e[0].dims.slice(),o=e[1].dims.slice(),[n,s,u]=Lr.getShapeOfGemmResult(r,t.transA,o,t.transB,e.length===3?e[2].dims:void 0),l=[n,s];if(!l)throw new Error("Can\'t use gemm on the given tensors");let a=D.size(l),p="";t.transA&&t.transB?p="value += a[k * M + m] * b[n * K + k];":t.transA&&!t.transB?p="value += a[k * M + m] * b[k * N + n];":!t.transA&&t.transB?p="value += a[m * K + k] * b[n * K + k];":!t.transA&&!t.transB&&(p="value += a[m * K + k] * b[k * N + n];");let h=Oe(e[0].dataType),y=t.alpha===1?"":"value *= alpha;",g=e.length===3?`value += beta * c[${Dd(n,s,e[2].dims)}];`:"",v=[`@group(0) @binding(0) var<storage, read> a : array<${h}>;`,`@group(0) @binding(1) var<storage, read> b : array<${h}>;`];e.length===3&&v.push(`@group(0) @binding(2) var<storage, read> c : array<${h}>;`);let b=x=>`\n  const M: u32 = ${n}u;\n  const N: u32 = ${s}u;\n  const K: u32 = ${u}u;\n  const alpha = ${h}(${t.alpha});\n  const beta = ${h}(${t.beta});\n\n  ${v.join(`\n`)}\n  @group(0) @binding(${e.length}) var<storage, read_write> output : array<${h}>;\n\n  ${x.mainStart()}\n    ${x.guardAgainstOutOfBoundsWorkgroupSizes(a)}\n\n    let m = global_idx / N;\n    let n = global_idx % N;\n\n    var value = ${h}(0);\n    for (var k: u32 = 0u; k<${u}u; k++) {\n      ${p}\n    }\n\n    ${y}\n    ${g}\n    output[global_idx] = value;\n\n  }`;return{name:"Gemm",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:l,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)}}),getShaderSource:b}},fs=(e,t)=>{Md(e.inputs),e.compute(zd(e.inputs,t))},hs=e=>se(e)});var Vd,Ud,Wd,Nd,ys,bs,ws=K(()=>{"use strict";Ue();$e();Re();be();Vd={name:"InstanceNormalization"},Ud=(e,t)=>{let r=e[0].dims,o=r,n=2,s=D.sizeToDimension(r,n),u=D.sizeFromDimension(r,n),l=Ne(u),a=u/l,p=r[1],h=V("x",e[0].dataType,[r[0],r[1],a],l),y=V("scale",e[1].dataType,e[1].dims),g=V("bias",e[2].dataType,e[2].dims),v=Y("output",e[0].dataType,[r[0],r[1],a],l),b=[h,y,g,v],x=h.type.value,I=l===1?"f32":`vec${l}<f32>`,$=64,C=P=>`\n\n  const C: u32 = ${p};\n  const normSize: u32 = ${u};\n  const epsilon: f32 = ${t.epsilon};\n  var<workgroup> meanShared : f32;\n  var<workgroup> squaredNormShared : f32;\n  var<workgroup> workgroupShared : array<${I}, ${$}>;\n  const workgroupSize = ${$}u;\n  ${P.declareVariables(...b)}\n  ${P.mainStart($)}\n    let norm = global_idx / workgroupSize;\n    let batch = norm / C;\n    let channel = norm % C;\n    let localIndex = local_id.x;\n\n    // initialize workgroup memory\n    var initial = ${I}(0);\n    for (var h = localIndex; h < ${a}; h += workgroupSize) {\n      initial = initial + ${I}(${h.get("batch","channel","h")});\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the mean of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      meanShared = ${Xe("workgroupShared[0]",l)} / f32(normSize);\n    }\n    workgroupBarrier();\n\n    // reinitialize workgroup memory.\n    initial = ${I}(0);\n    for (var h = localIndex; h < ${a}; h += workgroupSize) {\n      let deviation =  ${I}(${h.get("batch","channel","h")}) - ${I}(meanShared);\n      initial = initial + deviation * deviation;\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the sum of square of deviation of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      squaredNormShared = ${Xe("workgroupShared[0]",l)};\n    }\n    workgroupBarrier();\n\n    let invStdDev = 1 / sqrt(squaredNormShared / f32(normSize) + epsilon);\n    let channelScale = invStdDev * f32(${y.getByOffset("channel")});\n    let channelShift = f32(${g.getByOffset("channel")}) - meanShared * channelScale;\n    for (var h = localIndex; h < ${a}; h += workgroupSize) {\n      let value = ${h.get("batch","channel","h")} * ${x}(${I}(channelScale)) + ${x}(${I}(channelShift));\n      ${v.set("batch","channel","h","value")};\n    }\n  }`;return{...Vd,shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:s}}),getShaderSource:C}},Wd=(e,t,r,o,n,s,u,l)=>{let a=Ne(u),p=V("input",t.dataType,t.dims,a),h=V("scale",r.dataType,r.dims,a),y=V("bias",o.dataType,o.dims,a),g=64,v=a===1?"vec2f":`mat2x${a}f`,b=a===1?"f32":`vec${a}f`,x=(z,T)=>`${v}(${z}, ${T})`,I=n*u/a,$=Math.ceil(s/g),C=z=>`\n  const H: u32 = ${s};\n  const C: u32 = ${u/a};\n  const imageSize: u32 = ${s*u/a};\n\n  ${z.declareVariables(p)}\n  @group(0) @binding(1) var<storage, read_write> output : array<${v}>;\n\n  ${z.mainStart(g)}\n    let currentImageNumber = global_idx / ${g} / C;\n    let currentChannelNumber = (global_idx / ${g}) % C;\n    let wgId = global_idx % ${g};\n    let wgOffset = wgId * ${$};\n    if (wgOffset >= H) {\n        return;\n    }\n    let wgMax = min(wgOffset + ${$}, H);\n\n    let offset = currentImageNumber * imageSize + currentChannelNumber;\n    var sum = ${je("f32",a)};\n    var squaredSum = ${je("f32",a)};\n    for (var i: u32 = wgOffset; i < wgMax; i++) {\n        let value = ${b}(input[offset + i * C]);\n        sum += value;\n        squaredSum += value * value;\n    }\n    output[global_idx] = ${x("sum","squaredSum")};\n  }`,P=e.compute({name:"InstanceNormComputeMean",shaderCache:{hint:JSON.stringify({components:a,n,h:s,c:u})},getRunData:()=>({outputs:[{dims:[n,u,g,2],dataType:1}],dispatchGroup:{x:n*u/a}}),getShaderSource:C},{inputs:[t],outputs:[-1]})[0],A=z=>`\n  const H: u32 = ${s};\n  const C: u32 = ${u/a};\n  const imageSize: u32 = ${g*u/a};\n  const epsilon: f32 = ${l};\n\n  @group(0) @binding(0) var<storage, read> input : array<${v}>;\n  @group(0) @binding(1) var<storage, read> scale : array<${h.type.storage}>;\n  @group(0) @binding(2) var<storage, read> bias : array<${y.type.storage}>;\n  @group(0) @binding(3) var<storage, read_write> output : array<${v}>;\n\n  ${z.mainStart()}\n    ${z.guardAgainstOutOfBoundsWorkgroupSizes(I)}\n    let currentImageNumber = global_idx / C;\n    let currentChannelNumber = global_idx % C;\n\n    let offset = currentImageNumber * imageSize;\n    var sum = ${je("f32",a)};\n    var squaredSum = ${je("f32",a)};\n    for (var i: u32 = 0; i < ${g}; i++) {\n        let value = input[offset + i + currentChannelNumber * ${g}];\n        sum += value[0];\n        squaredSum += value[1];\n    }\n    sum = sum / f32(H);\n    squaredSum = squaredSum / f32(H);\n    let invStdDev = 1 / sqrt(squaredSum - sum * sum + epsilon);\n    let channelScale = invStdDev * ${b}(scale[currentChannelNumber]);\n    let channelShift = ${b}(bias[currentChannelNumber]) - sum * channelScale;\n\n    output[global_idx] = ${x("channelScale","channelShift")};\n  }`;return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:JSON.stringify({components:a,n,h:s,c:u,epsilon:l})},getRunData:()=>({outputs:[{dims:[n,u,2],dataType:1}],dispatchGroup:{x:Math.ceil(I/64)}}),getShaderSource:A},{inputs:[P,r,o],outputs:[-1]})[0]},Nd=(e,t,r)=>{let o=t[0].dims,n=o,s=o[0],u=o[o.length-1],l=D.sizeFromDimension(o,1)/u,a=Ne(u),p=D.size(n)/a,h=V("input",t[0].dataType,t[0].dims,a),y=Y("output",t[0].dataType,n,a),g=Oe(t[0].dataType),v=a===1?"vec2f":`mat2x${a}f`,b=a===1?g:`vec${a}<${g}>`,x=Wd(e,t[0],t[1],t[2],s,l,u,r.epsilon),I=$=>`\n  const H: u32 = ${l};\n  const C: u32 = ${u/a};\n\n  @group(0) @binding(0) var<storage, read> input : array<${h.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scaleInput : array<${v}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${y.type.storage}>;\n\n  ${$.mainStart()}\n    let currentImageNumber = global_idx / (C * H);\n    let currentChannelNumber = global_idx % C;\n\n    let scaleOffset = currentImageNumber * C + currentChannelNumber;\n    let scale = scaleInput[scaleOffset];\n    output[global_idx] = fma(input[global_idx], ${b}(scale[0]), ${b}(scale[1]));\n  }`;e.compute({name:"InstanceNormalization",shaderCache:{hint:`${r.cacheKey}`},getRunData:()=>({outputs:[{dims:n,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)}}),getShaderSource:I},{inputs:[t[0],x]})},ys=e=>se({epsilon:e.epsilon,format:e.format}),bs=(e,t)=>{t.format==="NHWC"?Nd(e,e.inputs,t):e.compute(Ud(e.inputs,t))}});var Hd,Gd,vs,$s,Ss=K(()=>{"use strict";Ue();$e();Re();be();Hd=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Gd=(e,t,r)=>{let o=e[0].dims,n=e[1],s=e[2],u=o,l=D.normalizeAxis(t.axis,o.length),a=D.sizeToDimension(o,l),p=D.sizeFromDimension(o,l),h=D.size(n.dims),y=s?D.size(s.dims):0;if(h!==p||s&&y!==p)throw new Error(`Size of X.shape()[axis:] == ${p}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${h} and bias size of ${y}`);let g=[];for(let A=0;A<o.length;++A)A<l?g.push(o[A]):g.push(1);let v=Ne(p),b=Oe(e[0].dataType),x=[V("x",e[0].dataType,e[0].dims,v),V("scale",n.dataType,n.dims,v)];s&&x.push(V("bias",s.dataType,s.dims,v)),x.push(Y("output",e[0].dataType,u,v));let I=r>1,$=r>2;I&&x.push(Y("meanDataOutput",1,g)),$&&x.push(Y("invStdOutput",1,g));let C=A=>`\n  const normSize: f32 = ${p};\n  const normSizeVectorized: u32 = ${p/v};\n  const epsilon: f32 = ${t.epsilon};\n\n  ${A.declareVariables(...x)}\n  ${A.mainStart()}\n    ${A.guardAgainstOutOfBoundsWorkgroupSizes(a)}\n    let offset = global_idx * normSizeVectorized;\n    var meanVector = ${je("f32",v)};\n    var meanSquareVector = ${je("f32",v)};\n\n    for (var h: u32 = 0u; h < normSizeVectorized; h++) {\n      let value = ${tt(b,v,"x[h + offset]")};\n      meanVector += value;\n      meanSquareVector += value * value;\n    }\n    let mean = ${Xe("meanVector",v)} / normSize;\n    let meanSquare = sqrt(${Xe("meanSquareVector",v)} \n      / normSize - mean * mean + epsilon);\n\n    for (var j: u32 = 0; j < normSizeVectorized; j++) {\n      let f32input = ${tt(b,v,"x[j + offset]")};\n      let f32scale = ${tt(b,v,"scale[j]")};\n      output[j + offset] = ${x[0].type.value}((f32input - mean) / meanSquare * f32scale\n        ${s?`+ ${tt(b,v,"bias[j]")}`:""}\n      );\n    }\n\n    ${I?"meanDataOutput[global_idx] = mean":""};\n    ${$?"invStdOutput[global_idx] = 1 / meanSquare":""};\n  }`,P=[{dims:u,dataType:e[0].dataType}];return I&&P.push({dims:g,dataType:1}),$&&P.push({dims:g,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${t.cacheKey}|${r}|${e.length}`},getRunData:()=>({outputs:P,dispatchGroup:{x:Math.ceil(a/64)}}),getShaderSource:C}},vs=e=>se({axis:e.axis,epsilon:e.epsilon}),$s=(e,t)=>{Hd(e.inputs),e.compute(Gd(e.inputs,t,e.outputCount))}});var Ld,Cs,xs,Fd,Jn,_s,Is=K(()=>{"use strict";$e();Re();Hr();Vn();be();qt();Ld=(e,t)=>{let r=e[0],o=e[1],n=e[2],s=e[3],u=e[4],l=e[5],a=e[6],p=e[7];if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let h=!1,y=r.dims[0],g=r.dims[1],v=r.dims.length===3?h?r.dims[2]/3:r.dims[2]:t.numHeads*r.dims[4],b=g,x=0,I=0,$=Math.floor(v/t.numHeads);if(a&&p){if(a.dims.length!==4)throw new Error(\'Input "past_key" is expected to have 4 dimensions\');if(p.dims.length!==4)throw new Error(\'Input "past_value" is expected to have 4 dimensions\');x=a.dims[2],I=a.dims[2]}else if(a||p)throw new Error(\'Input "past_key" and "past_value" shall be both present or both absent\');let C;if(o){if(r.dims.length!==3)throw new Error(\'Input "query" is expected to have 3 dimensions when key is given\');if(o.dims.length<3||o.dims.length>5)throw new Error(\'Input "key" is expected to have 3, 4, or 5 dimensions\');if(r.dims[0]!==o.dims[0])throw new Error(\'Input "query" and "key" shall have same dim 0 (batch size)\');if(o.dims.length===3){if(o.dims[2]!==r.dims[2])throw new Error(\'Input "query" and "key" shall have same dim 2 (hidden_size)\');C=2,b=o.dims[1]}else if(o.dims.length===5){if(o.dims[2]!==t.numHeads||o.dims[3]!==2||o.dims[4]!==$)throw new Error(\'Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv\');if(n)throw new Error(\'Expect "value" be none when "key" has packed kv format.\');C=5,b=o.dims[1]}else{if(o.dims[1]!==t.numHeads||o.dims[3]!==$)throw new Error(\'Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key\');C=0,b=o.dims[2]}}else{if(r.dims.length!==3&&r.dims.length!==5)throw new Error(\'Input "query" is expected to have 3 or 5 dimensions when key is empty\');if(r.dims.length===5&&(r.dims[2]!==t.numHeads||r.dims[3]!==3))throw new Error(\'Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv\');C=3}if(s){if(s.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimension\');if(n&&r.dims.length===5&&r.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let P=0;if(u){P=8;let U=u.dims;throw U.length===1?U[0]===y?P=1:U[0]===3*y+2&&(P=3):U.length===2&&U[0]===y&&U[1]===b&&(P=5),P===8?new Error(\'Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)\'):new Error("Mask not supported")}let A=!1,z=v;if(n){if(n.dims.length!==3&&n.dims.length!==4)throw new Error(\'Input "value" is expected to have 3 or 4 dimensions\');if(r.dims[0]!==n.dims[0])throw new Error(\'Input "query" and "value" shall have same dim 0 (batch_size)\');if(n.dims.length===3){if(b!==n.dims[1])throw new Error(\'Input "key" and "value" shall have the same dim 1 (kv_sequence_length)\');z=n.dims[2]}else{if(b!==n.dims[2])throw new Error(\'Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)\');z=n.dims[1]*n.dims[3],A=!0}}let T=x+b,N=!1;if(u)throw new Error("Key padding mask is not supported");if(l)throw new Error("extraAddQk is not supported");if(a)throw new Error("pastKey is not supported");if(p)throw new Error("pastValue is not supported");return{batchSize:y,sequenceLength:g,pastSequenceLength:x,kvSequenceLength:b,totalSequenceLength:T,maxSequenceLength:I,inputHiddenSize:0,hiddenSize:v,vHiddenSize:z,headSize:$,vHeadSize:Math.floor(z/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:P,scale:t.scale,broadcastResPosBias:N,passPastInKv:A,qkvFormat:C}},Cs=e=>se({...e}),xs=se({perm:[0,2,1,3]}),Fd=(e,t,r,o,n,s,u)=>{let l=[o,n,s],a=D.size(l),p=Oe(t.dataType),h=y=>`\n  const biasOffset = ${u}u;\n  const hiddenSize = ${s}u;\n\n  @group(0) @binding(0) var<storage, read> qkv: array<${p}>;\n  @group(0) @binding(1) var<storage, read> bias: array<${p}>;\n  @group(0) @binding(2) var<storage, read_write> qkv_with_bias: array<${p}>;\n\n  ${y.mainStart()}\n    ${y.guardAgainstOutOfBoundsWorkgroupSizes(a)}\n    let biasOffsetIdx = (global_idx % hiddenSize) + biasOffset;\n\n    qkv_with_bias[global_idx] = qkv[global_idx] + bias[biasOffsetIdx];\n  }`;return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{hint:JSON.stringify({batchSize:o,sequenceLength:n,hiddenSize:s,biasOffset:u})},getRunData:()=>({outputs:[{dims:l,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(a/64)}}),getShaderSource:h},{inputs:[t,r],outputs:[-1]})[0]},Jn=(e,t,r,o,n,s,u,l)=>{let a=s;if(u){if(o===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return a=Fd(e,s,u,t,o,r*n,l),a=a.reshape([t,o,r,n]),e.compute(rt(a,xs.perm),{inputs:[a],outputs:[-1]})[0]}else return s.dims.length===3&&(a=s.reshape([t,o,r,n])),e.compute(rt(a,xs.perm),{inputs:[a],outputs:[-1]})[0]},_s=(e,t)=>{let r=Ld(e.inputs,t);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(e.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let o=e.inputs[1]&&e.inputs[2]&&e.inputs[1].dims.length===4&&e.inputs[2].dims.length===4,n=Jn(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,e.inputs[0],e.inputs[3],0);if(o)return Zr(e,n,e.inputs[1],e.inputs[2],e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t);let s=Jn(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.headSize,e.inputs[1],e.inputs[3],r.hiddenSize),u=Jn(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.vHeadSize,e.inputs[2],e.inputs[3],2*r.hiddenSize);Zr(e,n,s,u,e.inputs[4],void 0,e.inputs[6],e.inputs[7],e.inputs[5],r,t)}});var qd,jd,Kd,Yd,Zd,Xd,Jd,Qd,ec,As,Ts,Es=K(()=>{"use strict";Ue();$e();Re();be();qd=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1)throw new Error("Input type must be float.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},jd=(e,t,r,o,n,s)=>{let u=t.length,l="";for(let a=u-1;a>=0;--a)l+=`\n            k = i32(${e.indicesGet("indices",a)}) - ${o[a]};\n            if (k < 0) {\n              break;\n            }\n            if (k >= ${t[a]}) {\n              break;\n            }\n            offset += k * ${r[a]};\n        `;return`\n          value = ${n}(${s});\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${l}\n            value = x[offset];\n          }\n      `},Kd=(e,t,r,o)=>{let n=t.length,s="";for(let u=n-1;u>=0;--u)s+=`\n                k = i32(${e.indicesGet("indices",u)}) - ${o[u]};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = ${2*(t[u]-1)};\n                  k = k % _2n_1;\n                  if(k >= ${t[u]}) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * ${r[u]};\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${s}\n              value = x[offset];\n          `},Yd=(e,t,r,o)=>{let n=t.length,s="";for(let u=n-1;u>=0;--u)s+=`\n                k = i32(${e.indicesGet("indices",u)}) - ${o[u]};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= ${t[u]}) {\n                  k = ${t[u]-1};\n                }\n                offset += k * ${r[u]};\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${s}\n              value = x[offset];\n          `},Zd=(e,t,r,o)=>{let n=t.length,s="";for(let u=n-1;u>=0;--u)s+=`\n                k = i32(${e.indicesGet("indices",u)}) - ${o[u]};\n                if (k < 0)  {\n                  k += ${t[u]};\n                }\n                if (k >= ${t[u]}) {\n                  k -= ${t[u]};\n                }\n                offset += k * ${r[u]};\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${s}\n              value = x[offset];\n          `},Xd=(e,t,r,o,n)=>{switch(o.mode){case 0:return jd(e,t,r,o.pads,n,o.value);case 1:return Kd(e,t,r,o.pads);case 2:return Yd(e,t,r,o.pads);case 3:return Zd(e,t,r,o.pads);default:throw new Error("Invalid mode")}},Jd=(e,t,r,o)=>{let n=t[0].dims,s=D.padShape(n.slice(),r.pads),u=D.size(s),l=D.computeStrides(n),a=Y("output",t[0].dataType,s),p=V("x",t[0].dataType,n),h=Xd(a,n,l,r,o);return`\n              ${e.declareVariables(p,a)}\n              ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n\n              let indices = ${a.offsetToIndices("global_idx")};\n\n              var value = ${o}(0);\n              ${h}\n              output[global_idx] = value;\n          }`},Qd=(e,t)=>{let r=D.padShape(e[0].dims.slice(),t.pads);return{name:"Pad",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(D.size(r)/64)}}),getShaderSource:o=>Jd(o,e,t,"f32")}},ec=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),o=e.length>=3&&e[2].data?e[2].getFloat32Array()[0]:0,n=e[0].dims.length,s=new Int32Array(2*n).fill(0);if(e.length>=4){let l=e[3].getBigInt64Array();for(let a=0;a<l.length;a++)s[Number(l[a])]=Number(r[a]),s[Number(l[a])+n]=Number(r[a+l.length])}else r.forEach((l,a)=>s[Number(a)]=Number(l));let u=[];return s.forEach(l=>u.push(l)),se({mode:t.mode,value:o,pads:u})}else return t},As=(e,t)=>{qd(e.inputs);let r=ec(e.inputs,t);e.compute(Qd(e.inputs,r),{inputs:[0]})},Ts=e=>{let t=e.mode,r=e.value,o=e.pads;return se({mode:t,value:r,pads:o})}});var an,Os,ks,Ps,Rs,tc,rc,Bs,Ms,Ds,zs,Vs,Us,Ws,Ns,Hs,Gs,Ls,Fs,qs=K(()=>{"use strict";Lt();$e();be();an=e=>{if(Nt.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},Os=(e,t,r)=>{let o=t.format==="NHWC",n=e.dims.slice();o&&n.splice(1,0,n.pop());let s=Object.hasOwnProperty.call(t,"dilations"),u=t.kernelShape.slice(),l=t.strides.slice(),a=s?t.dilations.slice():[],p=t.pads.slice();Pt.adjustPoolAttributes(r,n,u,l,a,p);let h=Pt.computePoolOutputShape(r,n,l,a,u,p,t.autoPad),y=Object.assign({},t);s?Object.assign(y,{kernelShape:u,strides:l,pads:p,dilations:a,cacheKey:t.cacheKey}):Object.assign(y,{kernelShape:u,strides:l,pads:p,cacheKey:t.cacheKey});let g=h.slice();return g.push(g.splice(1,1)[0]),[y,o?g:h]},ks=(e,t)=>{let r=t.format==="NHWC",o=D.size(e),n=D.size(t.kernelShape),s=[{type:"uint32",data:o},{type:"uint32",data:n}],u=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let l=t.kernelShape[t.kernelShape.length-1],a=t.strides[t.strides.length-1],p=t.pads[t.pads.length/2-1],h=t.pads[t.pads.length-1],y=!!(p+h);s.push({type:"uint32",data:l},{type:"uint32",data:a},{type:"uint32",data:p},{type:"uint32",data:h}),u.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let g=!1;if(t.kernelShape.length===2){let v=t.kernelShape[t.kernelShape.length-2],b=t.strides[t.strides.length-2],x=t.pads[t.pads.length/2-2],I=t.pads[t.pads.length-2];g=!!(x+I),s.push({type:"uint32",data:v},{type:"uint32",data:b},{type:"uint32",data:x},{type:"uint32",data:I}),u.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[s,u,!0,y,g]}else{if(r)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let l=D.computeStrides(t.kernelShape);s.push({type:"uint32",data:l},{type:"uint32",data:t.pads},{type:"uint32",data:t.strides}),u.push({name:"kernelStrides",type:"u32",length:l.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length});let a=t.pads.reduce((p,h)=>p+h);return[s,u,!!a,!1,!1]}},Ps=(e,t,r,o,n,s,u,l,a,p,h,y)=>{let g=n.format==="NHWC",v=t.type.value,b=Y("output",t.type.tensor,o);if(n.kernelShape.length<=2){let x="",I="",$="",C=r-(g?2:1);if(h?x=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${C}] = indices[${C}] * uniforms.sw - uniforms.pwStart + i;\n                  if (xIndices[${C}] < 0 || xIndices[${C}]\n                      >= uniforms.x_shape[${C}]) {\n                    pad++;\n                    continue;\n                  }\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${s}\n                }`:x=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${C}] = indices[${C}] * uniforms.sw - uniforms.pwStart + i;\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${s}\n                }`,n.kernelShape.length===2){let A=r-(g?3:2);y?I=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${A}] = indices[${A}] * uniforms.sh - uniforms.phStart + j;\n                  if (xIndices[${A}] < 0 || xIndices[${A}] >= uniforms.x_shape[${A}]) {\n                    pad += i32(uniforms.kw);\n                    continue;\n                  }\n              `:I=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${A}] = indices[${A}] * uniforms.sh - uniforms.phStart + j;\n                `,$=`\n              }\n            `}return`\n            ${e.registerUniforms(a).declareVariables(t,b)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n              let indices = ${b.offsetToIndices("global_idx")};\n              var xIndices = ${b.offsetToIndices("global_idx")};\n\n              var value = ${v}(${l});\n              var pad = 0;\n              ${I}\n              ${x}\n              ${$}\n              ${u}\n\n              output[global_idx] = value;\n            }`}else{if(g)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let x=n.kernelShape.length,I=n.pads.length,$="";return p?$=`\n                if (xIndices[j] >= uniforms.x_shape[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${t.indicesToOffset("xIndices")}];\n                ${s}\n              }`:$=`\n              }\n              let x_val = x[${t.indicesToOffset("xIndices")}];\n              ${s}\n            `,`\n            ${e.registerUniforms(a).declareVariables(t,b)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n              let indices = ${b.offsetToIndices("global_idx")};\n              var xIndices = ${b.offsetToIndices("global_idx")};\n\n              var offsets: array<u32, ${x}>;\n\n              var value = ${v}(${l});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${x-1}u; j++) {\n                  offsets[j] = offset / ${Ae("uniforms.kernelStrides","j",x)};\n                  offset -= offsets[j] * ${Ae("uniforms.kernelStrides","j",x)};\n                }\n                offsets[${x-1}] = offset;\n\n                isPad = false;\n                for (var j = ${r-x}u; j < ${r}u; j++) {\n                  xIndices[j] = indices[j] * ${Ae("uniforms.strides",`j - ${r-x}u`,x)}\n                    + offsets[j - ${r-x}u] - ${Ae("uniforms.pads","j - 2u",I)};\n                  ${$}\n              }\n              ${u}\n\n              output[global_idx] = value;\n            }`}},Rs=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,tc=e=>`${Rs(e)};${e.countIncludePad}`,rc=e=>`${Rs(e)};${e.storageOrder};${e.dilations}`,Bs=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),Ms=(e,t,r,o)=>{let[n,s]=Os(t,o,r),u=V("x",t.dataType,t.dims.length),l=u.type.value,a="value += x_val;",p="";n.countIncludePad?p+=`value /= ${l}(uniforms.kernelSize);`:p+=`value /= ${l}(i32(uniforms.kernelSize) - pad);`;let[h,y,g,v,b]=ks(s,n);h.push(...j(t.dims),...j(s));let x=["rank"];return{name:e,shaderCache:{hint:`${o.cacheKey};${g};${v};${b}`,inputDependencies:x},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(D.size(s)/64)},programUniforms:h}),getShaderSource:I=>Ps(I,u,t.dims.length,s.length,n,a,p,0,y,g,v,b)}},Ds=e=>{let t=e.count_include_pad!==0,r=Bs(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let o={countIncludePad:t,...r,cacheKey:""};return{...o,cacheKey:tc(o)}},zs=(e,t)=>{an(e.inputs),e.compute(Ms("AveragePool",e.inputs[0],!1,t))},Vs={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},Us=e=>{let t=e.format;return{format:t,...Vs,cacheKey:t}},Ws=(e,t)=>{an(e.inputs),e.compute(Ms("GlobalAveragePool",e.inputs[0],!0,t))},Ns=(e,t,r,o)=>{let[n,s]=Os(t,o,r),u=`\n      value = max(x_val, value);\n    `,l="",a=V("x",t.dataType,t.dims.length),p=["rank"],[h,y,g,v,b]=ks(s,n);return h.push(...j(t.dims),...j(s)),{name:e,shaderCache:{hint:`${o.cacheKey};${g};${v};${b}`,inputDependencies:p},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(D.size(s)/64)},programUniforms:h}),getShaderSource:x=>Ps(x,a,t.dims.length,s.length,n,u,l,-1e5,y,g,v,b)}},Hs=(e,t)=>{an(e.inputs),e.compute(Ns("MaxPool",e.inputs[0],!1,t))},Gs=e=>{let t=e.storage_order,r=e.dilations,o=Bs(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(o.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let n={storageOrder:t,dilations:r,...o,cacheKey:""};return{...n,cacheKey:rc(n)}},Ls=e=>{let t=e.format;return{format:t,...Vs,cacheKey:t}},Fs=(e,t)=>{an(e.inputs),e.compute(Ns("GlobalMaxPool",e.inputs[0],!0,t))}});var oc,ac,js,Ks=K(()=>{"use strict";Lt();Ue();be();oc=(e,t,r)=>{let o=e===t,n=e<t&&r<0,s=e>t&&r>0;if(o||n||s)throw new Error("Range these inputs\' contents are invalid.")},ac=(e,t,r,o)=>{let n=Math.abs(Math.ceil((t-e)/r)),s=[n],u=n,l=Y("output",o,s),a=l.type.storage,p=h=>`\n        ${h.declareVariables(l)}\n        ${h.mainStart()}\n        ${h.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n        output[global_idx] = ${a}(${e}) + ${a}(global_idx) * ${a}(${r});\n      }`;return{name:"Range",shaderCache:{hint:[e,t,r].map(h=>h.toString()).join("_")},getShaderSource:p,getRunData:()=>({outputs:[{dims:s,dataType:o}],dispatchGroup:{x:Math.ceil(u/64)}})}},js=e=>{let t=0,r=0,o=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],o=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],o=e.inputs[2].getFloat32Array()[0]),Nt.webgpu.validateInputContent&&oc(t,r,o),e.compute(ac(t,r,o,e.inputs[0].dataType),{inputs:[]})}});var ic,sc,uc,lc,dc,cc,pc,mc,fc,hc,gc,Ys,yc,bc,wc,vc,$c,Zs,Xs,Js=K(()=>{"use strict";$e();Re();be();ic=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and\n            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},sc=(e,t,r)=>{t.every(n=>n>=0&&n<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let o=new Array(r).fill(1);return t.forEach((n,s)=>o[n]=e[s]),o},uc=(e,t,r,o,n,s)=>{let[u,l,a]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],p=e[0].dims.length;if(u>0&&e.length>u&&e[u].dims.length>0)e[u].getFloat32Array().forEach(h=>s.push(h));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(l>0&&e.length>l&&e[l].dims.length>0){if(e[l].getFloat32Array().forEach(h=>o.push(h)),o.length!==0&&o.length!==p&&r>=18&&o.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");ic(o,t),t.axes.length>0&&sc(o,t.axes,p).forEach((h,y)=>o[y]=h)}if(a>0&&e.length>a&&(e[a].getBigInt64Array().forEach(h=>n.push(Number(h))),n.length!==p||r>=18&&n.length===t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(o.length!==t.axes.length)throw new Error(\'Resize requires "scales" input size to be of axes rank when axes attributes is specified\');if(n.length!==t.axes.length)throw new Error(\'Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified\')}if(typeof o<"u"&&typeof n<"u"&&o.length>0&&n.length>p)throw new Error("Resize requires only of scales or sizes to be specified")},lc=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: ${t}, lengthResized: u32,\n     lengthOriginal: u32, roiStart: ${t}, roiEnd: ${t}) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`return ${t}(xResized) / xScale;`;case"pytorch_half_pixel":return`if (lengthResized > 1) {\n                    return (${t}(xResized) + 0.5) / xScale - 0.5;\n                  } else {\n                    return 0.0;\n                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / xScale;`;case"align_corners":return`if (lengthResized == 1) {\n                    return 0.0;\n                  } else {\n                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating\n                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an\n                    // offset-by-one error later in floor().\n                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));\n                    let fract =\n                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);\n                    return whole + fract;\n                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {\n                    return roiStart * ${t}(lengthOriginal - 1) +\n                        (${t}(xResized) * (roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /\n                        ${t}(lengthResized - 1);\n                  } else {\n                    return 0.5 * (roiStart + roiEnd) * ${t}(lengthOriginal - 1);\n                  }`;case"half_pixel_symmetric":return`const outputWidth = xScale * ${t}(lengthResized);\n                  const adjustment = ${t}(lengthResized) / outputWidth;\n                  const center = ${t}(lengthOriginal) / 2;\n                  const offset = center * (1 - adjustment);\n                  return offset + ((${t}(xResized) + 0.5) / xScale) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / xScale) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",dc=(e,t,r)=>`fn getNearestPixelFromOriginal(xOriginal: ${r}, isDownSample: bool) -> ${r} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",cc=(e,t,r)=>{let o=new Array(r).fill(0).concat(new Array(r).fill(1)),n=e.length===0?o:e.slice();return t.length>0?(t.forEach((s,u)=>{o[s]=n[u],o[u+r]=n[t.length+u]}),o):n},pc=(e,t,r,o)=>{let n=[];if(r.length>0)if(o.length>0){if(e.forEach(s=>n.push(s)),Math.max(...o)>e.length)throw new Error("axes is out of bound");o.forEach((s,u)=>n[s]=r[u])}else r.forEach(s=>n.push(s));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");n=e.map((s,u)=>Math.round(s*t[u]))}return n},mc=(e,t,r)=>{let o=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map(s=>t[s]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map(s=>t[s]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let n=e.slice();return r.axes.length>0?(r.axes.forEach(s=>t[s]=o),r.axes.forEach(s=>n[s]=Math.round(e[s]*t[s]))):(t.fill(o,0,t.length),n.forEach((s,u)=>n[u]=Math.round(s*t[u]))),n},fc=(e,t,r,o,n)=>`\n    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${r.length}> {\n      var original_indices: array<${e.type.value}, ${r.length}>;\n      for (var i:u32 = 0; i < ${r.length}; i++) {\n        var output_index = ${e.indicesGet("output_indices","i")};\n        var scale = ${Ae("uniforms.scales","i",o)};\n        var roi_low = ${Ae("uniforms.roi","i",n)};\n        var roi_hi = ${Ae("uniforms.roi",`i + ${t.length}`,n)};\n        if (scale == 1.0) {\n          original_indices[i] = ${e.type.value}(output_index);\n        } else {\n          var input_shape_i = ${Ae("uniforms.input_shape","i",t.length)};\n          var output_shape_i = ${Ae("uniforms.output_shape","i",r.length)};\n          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                           input_shape_i, roi_low, roi_hi);\n        }\n      }\n      return original_indices;\n    }`,hc=(e,t,r,o,n,s,u)=>`\n    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n      var input_indices: ${e.type.indices};\n      for (var i:u32 = 0; i < ${o.length}; i++) {\n        var output_index = ${t.indicesGet("output_indices","i")};\n        var input_index: u32;\n        var scale = ${Ae("uniforms.scales","i",n)};\n        if (scale == 1.0) {\n          input_index = output_index;\n        } else {\n          var roi_low = ${Ae("uniforms.roi","i",s)};\n          var roi_hi = ${Ae("uniforms.roi",`i + ${r.length}`,s)};\n          var input_shape_i = ${Ae("uniforms.input_shape","i",r.length)};\n          var output_shape_i = ${Ae("uniforms.output_shape","i",o.length)};\n          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                        input_shape_i, roi_low, roi_hi);\n          if (!${u} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {\n            if (original_idx < 0) {\n              input_index = 0;\n            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {\n              input_index = input_shape_i - 1;\n            } else {\n              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));\n            }\n          } else {\n            input_index = u32(original_idx);\n          }\n        }\n        ${e.indicesSet("input_indices","i"," input_index")}\n      }\n      return input_indices;\n    }`,gc=(e,t)=>`\n    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var input_index = ${e.indicesGet("input_indices","i")};\n        if (input_index < 0 || input_index >= ${Ae("uniforms.input_shape","i",t.length)}) {\n          return false;\n        }\n      }\n      return true;\n    }`,Ys=(e,t,r,o)=>e.rank>o?`\n    ${e.indicesSet("input_indices",t,"channel")};\n    ${e.indicesSet("input_indices",r,"batch")};\n`:"",yc=(e,t,r,o,n)=>{let[u,l,a,p]=r.length===2?[-1,0,1,-1]:[0,2,3,1],h=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${h} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",l,`max(0, min(row, ${r[l]} - 1))`)};\n      ${e.indicesSet("input_indices",a,`max(0, min(col, ${r[a]} - 1))`)};\n      ${Ys(e,p,u,2)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${h} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var row:${h} = originalIndices[${l}];\n      var col:${h} = originalIndices[${a}];\n      ${o?`if (row < 0 || row > (${r[l]} - 1) || col < 0 || col > (${r[a]} - 1)) {\n        return ${n};\n      }`:""};\n      row = max(0, min(row, ${r[l]} - 1));\n      col = max(0, min(col, ${r[a]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = ${r.length>2?`u32(originalIndices[${p}])`:"0"};\n      var batch: u32 =  ${r.length>2?`u32(originalIndices[${u}])`:"0"};\n      var x11: ${h} = getInputValue(batch, channel, row1, col1);\n      var x12: ${h} = getInputValue(batch, channel, row1, col2);\n      var x21: ${h} = getInputValue(batch, channel, row2, col1);\n      var x22: ${h} = getInputValue(batch, channel, row2, col2);\n      var dx1: ${h} = abs(row - ${h}(row1));\n      var dx2: ${h} = abs(${h}(row2) - row);\n      var dy1: ${h} = abs(col - ${h}(col1));\n      var dy2: ${h} = abs(${h}(col2) - col);\n      if (row1 == row2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (col1 == col2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`},bc=(e,t,r,o,n,s,u,l,a,p)=>{let h=r.length===2,y=!0,[g,v]=h?[0,1]:y?[2,3]:[1,2],b=e.type.value,x=I=>{let $=I===g?"row":"col";return`\n      fn ${$}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${b} {\n        var output_index = ${t.indicesGet("output_indices",I)};\n        var originalIdx: ${b} = getOriginalCoordinateFromResizedCoordinate(output_index, ${n[I]},\n        ${o[I]}, ${r[I]}, ${s[I]}, ${s[I]} + ${r.length});\n        var fractOriginalIdx: ${b} = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${l} && (originalIdx < 0 || originalIdx > (${r[I]} - 1))) {\n          return ${a};\n        }\n        var data: array<${b}, 4> = array<${b}, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${$}: ${b} = originalIdx + ${b}(i);\n          if (${$} < 0 || ${$} >= ${r[I]}) {\n            ${(()=>p?`coefs[i + 1] = 0.0;\n                        continue;`:l?`return ${a};`:`${$} = max(0, min(${$}, ${r[I]} - 1));`)()};\n          }\n        var input_indices_copy: ${e.type.indices} = input_indices;\n          ${e.indicesSet("input_indices_copy",I,`u32(${$})`)};\n          data[i + 1] = ${I===g?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${x(g)};\n    ${x(v)};\n  fn getCubicInterpolationCoefs(s: ${b}) -> array<${b}, 4> {\n    var absS = abs(s);\n    var coeffs: array<${b}, 4> = array<${b}, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: ${b} = 1.0 - absS;\n    var twoMinusAbsS: ${b} = 2.0 - absS;\n    var onePlusAbsS: ${b} = 1.0 + absS;\n    coeffs[0] = ((${u} * onePlusAbsS - 5 * ${u}) * onePlusAbsS + 8 * ${u}) * onePlusAbsS - 4 * ${u};\n    coeffs[1] = ((${u} + 2) * absS - (${u} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${u} + 2) * oneMinusAbsS - (${u} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${u} * twoMinusAbsS - 5 * ${u}) * twoMinusAbsS + 8 * ${u}) * twoMinusAbsS - 4 * ${u};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<${b}, 4>, coefs: array<${b}, 4>) -> ${b} {\n    var coefsSum: ${b} = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${b} {\n    var input_indices: ${e.type.indices} = output_indices;\n    return colCubicInterpolation(input_indices, output_indices);\n  }\n    `},wc=(e,t,r,o,n)=>{let[u,l,a,p,h]=r.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],y=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${y} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",l,`max(0, min(depth, ${r[l]} - 1))`)};\n      ${e.indicesSet("input_indices",a,`max(0, min(height, ${r[a]} - 1))`)};\n      ${e.indicesSet("input_indices",p,`max(0, min(width, ${r[p]} - 1))`)};\n      ${Ys(e,h,u,3)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${y} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var depth:${y} = originalIndices[${l}];\n      var height:${y} = originalIndices[${a}];\n      var width:${y} = originalIndices[${p}];\n      ${o?`if (depth < 0 || depth > (${r[l]} - 1) || height < 0 || height > (${r[a]} - 1) || width < 0 || (width > ${r[p]} - 1)) {\n      return ${n};\n        }`:""};\n\n    depth = max(0, min(depth, ${r[l]} - 1));\n      height = max(0, min(height, ${r[a]} - 1));\n      width = max(0, min(width, ${r[p]} - 1));\n      var depth1: u32 = u32(depth);\n      var height1: u32 = u32(height);\n      var width1: u32 = u32(width);\n      var depth2: u32 = u32(depth + 1);\n      var height2: u32 = u32(height + 1);\n      var width2: u32 = u32(width + 1);\n      var channel: u32 = ${r.length>3?`u32(originalIndices[${h}])`:"0"};\n      var batch: u32 =  ${r.length>3?`u32(originalIndices[${u}])`:"0"};\n\n      var x111: ${y} = getInputValue(batch, channel, depth1, height1, width1);\n      var x112: ${y} = getInputValue(batch, channel, depth1, height1, width2);\n      var x121: ${y} = getInputValue(batch, channel, depth1, height2, width1);\n      var x122: ${y} = getInputValue(batch, channel, depth1, height2, width2);\n      var x211: ${y} = getInputValue(batch, channel, depth2, height1, width1);\n      var x212: ${y} = getInputValue(batch, channel, depth2, height1, width2);\n      var x221: ${y} = getInputValue(batch, channel, depth2, height2, width1);\n      var x222: ${y} = getInputValue(batch, channel, depth2, height2, width2);\n      var dx1: ${y} = abs(depth - ${y}(depth1));\n      var dx2: ${y} = abs(${y}(depth2) - depth);\n      var dy1: ${y} = abs(height - ${y}(height1));\n      var dy2: ${y} = abs(${y}(height2) - height);\n      var dz1: ${y} = abs(width - ${y}(width1));\n      var dz2: ${y} = abs(${y}(width2) - width);\n      if (depth1 == depth2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (height1 == height2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      if (width1 == width2) {\n        dz1 = 0.5;\n        dz2 = 0.5;\n      }\n      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +\n              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);\n    }`},vc=(e,t,r,o,n,s)=>{let u=e.dims,l=cc(s,t.axes,u.length),a=pc(u,o,n,t.axes),p=o.slice();o.length===0&&(p=u.map((C,P)=>C===0?1:a[P]/C),t.keepAspectRatioPolicy!=="stretch"&&(a=mc(u,p,t)));let h=Y("output",e.dataType,a.length),y=V("input",e.dataType,u.length),g=D.size(a),v=u.length===a.length&&u.every((C,P)=>C===a[P]),b=t.coordinateTransformMode==="tf_crop_and_resize",x=t.extrapolationValue,I=y.type.value,$=C=>`\n      ${v?"":`\n      ${lc(t.coordinateTransformMode,I)};\n      ${(()=>{switch(t.mode){case"nearest":return`\n              ${gc(y,u)};\n              ${dc(t.nearestMode,r,I)};\n              ${hc(y,h,u,a,p.length,l.length,b)};\n              `;case"linear":return`\n              ${fc(h,u,a,p.length,l.length)};\n              ${(()=>{if(u.length===2||u.length===4)return`${yc(y,h,u,b,x)}`;if(u.length===3||u.length===5)return`${wc(y,h,u,b,x)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};\n            `;case"cubic":return`\n            ${(()=>{if(u.length===2||u.length===4)return`${bc(y,h,u,a,p,l,t.cubicCoeffA,b,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};\n            `;default:throw Error("Invalid resize mode")}})()};\n      `}\n      ${C.registerUniform("output_size","u32").registerUniform("scales","f32",p.length).registerUniform("roi","f32",l.length).declareVariables(y,h)}\n      ${C.mainStart()}\n        ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n        ${v?"output[global_idx] = input[global_idx];":`\n        let output_indices = ${h.offsetToIndices("global_idx")};\n        var input_indices: ${y.type.indices};\n        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);\n                if (checkInputIndices(input_indices)) {\n                  output[global_idx] = ${y.getByIndices("input_indices")};\n                } else {\n                  output[global_idx] = ${t.extrapolationValue};\n                }`;case"linear":return`output[global_idx] = ${u.length===2||u.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};\n`}\n      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${p.length>0?p:""}|${n.length>0?n:""}|${l.length>0?l:""}|${v}|${u}`,inputDependencies:["rank"]},getShaderSource:$,getRunData:()=>({outputs:[{dims:a,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:[{type:"uint32",data:g},{type:"float32",data:p},{type:"float32",data:l},...j(u),...j(a)]})}},$c=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},Zs=(e,t)=>{let r=[],o=[],n=[],s=$c(e);if(t.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");uc(e.inputs,t,s,r,o,n),e.compute(vc(e.inputs[0],t,s,r,o,n),{inputs:[0]})},Xs=e=>{let t=e.antialias,r=e.axes,o=e.coordinateTransformMode,n=e.cubicCoeffA,s=e.excludeOutside!==0,u=e.extrapolationValue,l=e.keepAspectRatioPolicy,a=e.mode,p=e.nearestMode===""?"simple":e.nearestMode;return se({antialias:t,axes:r,coordinateTransformMode:o,cubicCoeffA:n,excludeOutside:s,extrapolationValue:u,keepAspectRatioPolicy:l,mode:a,nearestMode:p})}});var Sc,xc,Qs,eu,tu=K(()=>{"use strict";Ue();$e();Re();be();Sc=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],o=e[2];if(t.dataType!==r.dataType||t.dataType!==o.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let n=t.dims[t.dims.length-1],s=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==n)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==s)throw new Error("Skip must have the same sequence length as input");if(o.dims.length!==1)throw new Error("Gamma must be 1D");if(o.dims[o.dims.length-1]!==n)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let u=e[3];if(u.dims.length!==1)throw new Error("Beta must be 1D");if(u.dims[u.dims.length-1]!==n)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let u=e[4];if(u.dims.length!==1)throw new Error("Bias must be 1D");if(u.dims[u.dims.length-1]!==n)throw new Error("Bias must have the same hidden size as input")}},xc=(e,t,r,o)=>{let n=e[0].dims,s=D.size(n),u=n,l=s,a=n.slice(-1)[0],p=o?n.slice(0,-1).concat(1):[],h=e.length>3,y=e.length>4,g=o&&r>1,v=o&&r>2,b=r>3,x=Ne(a),I=[V("x",e[0].dataType,e[0].dims,x),V("skip",e[1].dataType,e[1].dims,x),V("gamma",e[2].dataType,e[2].dims,x)];h&&I.push(V("beta",e[3].dataType,e[3].dims,x)),y&&I.push(V("bias",e[4].dataType,e[4].dims,x)),I.push(Y("output",e[0].dataType,u,x)),g&&I.push(Y("meanOutput",1,p)),v&&I.push(Y("invStdOutput",1,p)),b&&I.push(Y("inputSkipBiasSum",e[0].dataType,u,x));let $=Oe(e[0].dataType),C=A=>`\n      const hiddenSize: f32 = ${a};\n      const hiddenSizeVectorized: u32 = ${a/x};\n      const epsilon: f32 = ${t.epsilon};\n\n      ${A.declareVariables(...I)}\n\n      ${A.mainStart()}\n        ${A.guardAgainstOutOfBoundsWorkgroupSizes(l/a)}\n        let offset = global_idx * hiddenSizeVectorized;\n        var sum = ${je("f32",x)};\n        var squareSum = ${je("f32",x)};\n        for (var i: u32 = 0; i < hiddenSizeVectorized; i++) {\n          let skipValue = skip[offset + i];\n          let biasValue = ${y?"bias[i]":"0.0"};\n          let inputValue = x[offset + i];\n          let value = inputValue + skipValue + biasValue;\n          ${b?"inputSkipBiasSum[offset + i] = value;":""}\n          output[offset + i] = value;\n          let f32Value = ${tt($,x,"value")};\n          sum += f32Value;\n          squareSum += f32Value * f32Value;\n        }\n        let mean = ${Xe("sum",x)} / hiddenSize;\n        let variance = sqrt(${Xe("squareSum",x)} / hiddenSize - mean * mean + epsilon);\n        ${g?"meanOutput[global_idx] = mean;":""}\n        ${v?"invStdOutput[global_idx] = 1.0 / variance;":""}\n        for (var i: u32 = 0; i < hiddenSizeVectorized; i++) {\n          output[offset + i] = (output[offset + i] - ${$}(mean)) / ${$}(variance) * gamma[i]\n           + ${h?"beta[i]":"0.0"};\n        }\n      }`,P=[{dims:u,dataType:e[0].dataType}];return r>1&&P.push({dims:p,dataType:1}),r>2&&P.push({dims:p,dataType:1}),r>3&&P.push({dims:n,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:t.cacheKey},getShaderSource:C,getRunData:()=>({outputs:P,dispatchGroup:{x:Math.ceil(l/a/64)}})}},Qs=(e,t)=>{Sc(e.inputs);let o=[0];e.outputCount>1&&o.push(-3),e.outputCount>2&&o.push(-3),e.outputCount>3&&o.push(3),e.compute(xc(e.inputs,t,e.outputCount,!1),{outputs:o})},eu=e=>{let t=e.epsilon;return se({epsilon:t})}});var Cc,sn,_c,ru,Ic,Ac,nu,ou,au=K(()=>{"use strict";Ue();$e();Re();be();Cc=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,o)=>{if(e[o+1].dataType!==6&&e[o+1].dataType!==7)throw new Error(`Input ${o} must be an array of int32 or int64`)})},sn=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(o=>r.push(Number(o)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(o=>r.push(Number(o)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},_c=(e,t)=>{if(e.length>1){let r=sn(e,1),o=sn(e,2),n=sn(e,3);return n.length===0&&(n=[...Array(e[0].dims.length).keys()]),se({starts:r,ends:o,axes:n})}else return t},ru=(e,t,r,o,n)=>{let s=e;return e<0&&(s+=r[o[t]]),n[t]<0?Math.max(0,Math.min(s,r[o[t]]-1)):Math.max(0,Math.min(s,r[o[t]]))},Ic=(e,t,r)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n          var input_indices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${r.length}; i >= 0; i--) {\n            let input_shape_i = ${Ae("uniforms.input_shape","i",r.length)};\n            let steps_i = ${Ae("uniforms.steps","i",r.length)};\n            let signs_i = ${Ae("uniforms.signs","i",r.length)};\n            let starts_i = ${Ae("uniforms.starts","i",r.length)};\n            var output_index = ${t.indicesGet("output_indices","i")};\n            var input_index = output_index * steps_i + starts_i + carry;\n            carry = input_index / input_shape_i;\n            input_index = input_index % input_shape_i;\n            if (signs_i < 0) {\n              input_index = input_shape_i - input_index - 1u + starts_i;\n            }\n            ${e.indicesSet("input_indices","i","input_index")};\n          }\n          return input_indices;\n      }`,Ac=(e,t)=>{let r=e[0].dims,o=D.size(r),n=t.axes.length>0?D.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],s=sn(e,4);s.forEach($=>$!==0||(()=>{throw new Error("step cannot be 0")})),s.length===0&&(s=Array(n.length).fill(1));let u=t.starts.map(($,C)=>ru($,C,r,n,s)),l=t.ends.map(($,C)=>ru($,C,r,n,s));if(n.length!==u.length||n.length!==l.length)throw new Error("start, ends and axes should have the same number of elements");if(n.length!==r.length)for(let $=0;$<r.length;++$)n.includes($)||(u.splice($,0,0),l.splice($,0,r[$]),s.splice($,0,1));let a=s.map($=>Math.sign($));s.forEach(($,C,P)=>{if($<0){let A=(l[C]-u[C])/$,z=u[C],T=z+A*s[C];u[C]=T,l[C]=z,P[C]=-$}});let p=r.slice(0);n.forEach(($,C)=>{p[$]=Math.ceil((l[$]-u[$])/s[$])});let h={dims:p,dataType:e[0].dataType},y=Y("output",e[0].dataType,p.length),g=V("input",e[0].dataType,e[0].dims.length),v=D.size(p),b=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:u.length},{name:"signs",type:"i32",length:a.length},{name:"steps",type:"u32",length:s.length}],x=[{type:"uint32",data:v},{type:"uint32",data:u},{type:"int32",data:a},{type:"uint32",data:s},...j(e[0].dims),...j(p)],I=$=>`\n      ${$.registerUniforms(b).declareVariables(g,y)}\n        ${Ic(g,y,r)}\n        ${$.mainStart()}\n          ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n          let output_indices = ${y.offsetToIndices("global_idx")};\n          let input_indices = calculateInputIndices(output_indices);\n          ${y.setByOffset("global_idx",g.getByIndices("input_indices"))}\n      }`;return{name:"Slice",shaderCache:{hint:`${a.length}_${u.length}_${s.length}`,inputDependencies:["rank"]},getShaderSource:I,getRunData:()=>({outputs:[h],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:x})}},nu=(e,t)=>{Cc(e.inputs,t);let r=_c(e.inputs,t);e.compute(Ac(e.inputs,r),{inputs:[0]})},ou=e=>{let t=e.starts,r=e.ends,o=e.axes;return se({starts:t,ends:r,axes:o})}});var Tc,Ec,iu,su,uu=K(()=>{"use strict";$e();Re();be();Tc=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},Ec=(e,t)=>{let r=e.dims,o=D.size(r),n=64,s=t.axis;if(s<0&&(s=r.length+s),s<r.length-1)throw new Error("softmax only supports last axis for now.");let u=r[s],l=o/u,a=Ne(u),p=u/a,h=(I,$)=>$===4?`max(max(${I}.x, ${I}.y), max(${I}.z, ${I}.w))`:$===2?`max(${I}.x, ${I}.y)`:$===3?`max(max(${I}.x, ${I}.y), ${I}.z)`:I,y=V("x",e.dataType,e.dims,a),g=Y("result",e.dataType,e.dims,a),v=y.type.value,b=Oe(e.dataType)==="f32"?`var threadMax = ${v}(-3.402823e+38f);`:`var threadMax = ${v}(-65504.0h);`,x=I=>`\n      var<workgroup> rowMaxShared : ${v};\n      var<workgroup> rowSumShared : ${v};\n      var<workgroup> threadShared : array<${v}, ${n}>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${v} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${v}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n      ${I.registerUniform("packedCols","i32").declareVariables(y,g)}\n      ${I.mainStart()}\n        let gindex = i32(global_idx);\n        let lindex = i32(local_idx);\n        const wg = ${n};\n        let row = gindex / wg;\n        let cols = uniforms.packedCols;\n        let row_stride : i32 = uniforms.packedCols;\n\n        // find the rows max\n        ${b}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = ${v}(${h("threadShared[0]",a)});\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = ${v}(0.0);\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = ${v}(${Xe("threadShared[0]",a)});\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`;return{name:"Softmax",shaderCache:{hint:`${a}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.dataType}],dispatchGroup:{x:l},programUniforms:[{type:"uint32",data:p}]}),getShaderSource:x}},iu=(e,t)=>{Tc(e.inputs),e.compute(Ec(e.inputs[0],t))},su=e=>se({axis:e.axis})});var Oc,kc,Pc,Rc,Bc,lu,du,cu=K(()=>{"use strict";$e();Re();be();Oc=e=>{if(!e||e.length<1)throw new Error("too few inputs")},kc=(e,t)=>{let r=[],o=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(n=>r.push(Number(n))),o=r.length),se({numOutputs:o,axis:t.axis,splitSizes:r})},Pc=e=>`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n    if (index < ${Ae("uniforms.size_in_split_axis","i",e)}) {\n        return i;\n    }\n    }\n    return ${e}u;\n}`,Rc=e=>{let t=e.length,r=[];for(let o=0;o<t;++o){let n=e[o].setByIndices("indices","input[global_idx]");t===1?r.push(n):o===0?r.push(`if (output_number == ${o}u) { ${n} }`):o===t-1?r.push(`else { ${n} }`):r.push(`else if (output_number == ${o}) { ${n} }`)}return`\n      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${r.join(`\n`)}\n      }`},Bc=(e,t)=>{let r=e[0].dims,o=D.size(r),n=e[0].dataType,s=D.normalizeAxis(t.axis,r.length),u=new Array(t.numOutputs),l=V("input",n,r),a=new Array(t.numOutputs),p=[],h=[],y=0,g=[{type:"uint32",data:o}];for(let b=0;b<t.numOutputs;b++){y+=t.splitSizes[b],a[b]=y;let x=r.slice();x[t.axis]=t.splitSizes[b],h.push(x),u[b]=Y(`output${b}`,n,x),p.push({dims:h[b],dataType:e[0].dataType})}g.push({type:"uint32",data:a}),g.push(...j(r)),h.forEach(b=>g.push(...j(b)));let v=b=>`\n  ${b.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",a.length).declareVariables(l,...u)}\n  ${Pc(a.length)}\n  ${Rc(u)}\n\n  ${b.mainStart()}\n    ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}\n\n    var indices = ${l.offsetToIndices("global_idx")};\n    var index = ${l.indicesGet("indices",s)};\n    let output_number = calculateOutputIndex(index);\n    if (output_number != 0) {\n      index -= ${Ae("uniforms.size_in_split_axis","output_number - 1u",a.length)};\n      ${l.indicesSet("indices",s,"index")};\n    }\n    writeBufferData(output_number, indices, global_idx);\n  }`;return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:v,getRunData:()=>({outputs:p,dispatchGroup:{x:Math.ceil(o/64)},programUniforms:g})}},lu=(e,t)=>{Oc(e.inputs);let r=e.inputs.length===1?t:kc(e.inputs,t);e.compute(Bc(e.inputs,r),{inputs:[0]})},du=e=>{let t=e.axis,r=e.splitSizes,o=e.numOutputs<0?r.length:e.numOutputs;if(o!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return se({axis:t,numOutputs:o,splitSizes:r})}});var pu,Mc,Dc,zc,mu,fu=K(()=>{"use strict";Ue();$e();be();pu=e=>Array.from(e.getBigInt64Array(),Number),Mc=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(pu(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},Dc=(e,t)=>{let r=[];for(let o=0;o<e.length;++o)r.push(e[o]*t[o]);return r},zc=e=>{let t=e[0].dims,r=pu(e[1]),o=Dc(t,r),n=D.size(o),s=e[0].dataType,u=V("input",s,t.length),l=Y("output",s,o.length),a=p=>`\n      const inputShape = ${u.indices(...t)};\n      ${p.registerUniform("output_size","u32").declareVariables(u,l)}\n      ${p.mainStart()}\n      ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let output_indices = ${l.offsetToIndices("global_idx")};\n      var input_indices: ${u.type.indices};\n      for (var i = 0; i < ${t.length}; i++) {\n        let input_dim_i = ${u.indicesGet("uniforms.input_shape","i")};\n        let input_dim_value = ${l.indicesGet("output_indices","i")}  % input_dim_i;\n\n        ${u.indicesSet("input_indices","i","input_dim_value")}\n      }\n      ${l.setByOffset("global_idx",u.getByIndices("input_indices"))}\n    }`;return{name:"Tile",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:[{type:"uint32",data:n},...j(e[0].dims),...j(o)]}),getShaderSource:a}},mu=e=>{Mc(e.inputs),e.compute(zc(e.inputs),{inputs:[0]})}});var Vc,Uc,hu,gu=K(()=>{"use strict";Ue();$e();be();Vc=(e,t,r,o,n)=>{let s=Y("output_data",n,r.length,4),u=V("a_data",t[1].dataType,t[1].dims.length,4),l=V("b_data",t[2].dataType,t[2].dims.length,4),a=V("c_data",t[0].dataType,t[0].dims.length,4),p,h=(y,g,v)=>`select(${g}, ${y}, ${v})`;if(!o)p=s.setByOffset("global_idx",h(u.getByOffset("global_idx"),l.getByOffset("global_idx"),a.getByOffset("global_idx")));else{let y=(g,v,b="")=>{let x=`a_data[index_a${v}][component_a${v}]`,I=`b_data[index_b${v}][component_b${v}]`,$=`bool(c_data[index_c${v}] & ${4278190080>>>(3-v)*8}u)`;return`\n            let output_indices${v} = ${s.offsetToIndices(`global_idx * 4u + ${v}u`)};\n            let offset_a${v} = ${u.broadcastedIndicesToOffset(`output_indices${v}`,s)};\n            let offset_b${v} = ${l.broadcastedIndicesToOffset(`output_indices${v}`,s)};\n            let offset_c${v} = ${a.broadcastedIndicesToOffset(`output_indices${v}`,s)};\n            let index_a${v} = offset_a${v} / 4u;\n            let index_b${v} = offset_b${v} / 4u;\n            let index_c${v} = offset_c${v} / 4u;\n            let component_a${v} = offset_a${v} % 4u;\n            let component_b${v} = offset_b${v} % 4u;\n            ${g}[${v}] = ${b}(${h(x,I,$)});\n          `};n===9?p=`\n            var data = vec4<u32>(0);\n            ${y("data",0,"u32")}\n            ${y("data",1,"u32")}\n            ${y("data",2,"u32")}\n            ${y("data",3,"u32")}\n            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:p=`\n            ${y("output_data[global_idx]",0)}\n            ${y("output_data[global_idx]",1)}\n            ${y("output_data[global_idx]",2)}\n            ${y("output_data[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(a,u,l,s)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${p}\n      }`},Uc=e=>{let t=e[1].dims,r=e[2].dims,o=e[0].dims,n=e[1].dataType,s=!(D.areEqual(t,r)&&D.areEqual(r,o)),u=t,l=D.size(t),a=Math.ceil(l/4);if(s){let p=it.calcShape(it.calcShape(t,r,!1),o,!1);if(!p)throw new Error("Can\'t perform where op on the given tensors");u=p,l=D.size(u)}return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:p=>Vc(p,e,u,s,n),getRunData:()=>({outputs:[{dims:u,dataType:n}],dispatchGroup:{x:Math.ceil(l/64/4)},programUniforms:[{type:"uint32",data:a},...j(o),...j(t),...j(r),...j(u)]})}},hu=e=>{e.compute(Uc(e.inputs))}});var yu,bu=K(()=>{"use strict";za();Vn();Na();Ga();Si();Ri();Di();Gn();Zi();Qi();os();ss();ds();ms();gs();ws();Ss();Fn();Is();Es();qs();Ks();Kr();Js();tu();au();uu();cu();fu();qt();Un();gu();yu=new Map([["Abs",[La]],["Acos",[Fa]],["Acosh",[qa]],["Add",[xi]],["ArgMax",[Da,zn]],["ArgMin",[Ma,zn]],["Asin",[ja]],["Asinh",[Ka]],["Atan",[Ya]],["Atanh",[Za]],["Attention",[Ua,Va]],["AveragePool",[zs,Ds]],["BatchNormalization",[Wa]],["BiasAdd",[Ha]],["BiasSplitGelu",[$i]],["Cast",[Ja,Xa]],["Ceil",[ei]],["Clip",[Qa]],["Concat",[Bi,Mi]],["Conv",[jn,qn]],["ConvTranspose",[Yi,Ki]],["Cos",[ti]],["Cosh",[ri]],["CumSum",[Xi,Ji]],["Div",[Ci]],["Einsum",[rs,ns]],["Elu",[ni,Xr]],["Equal",[_i]],["Erf",[oi]],["Exp",[ai]],["Expand",[is]],["Floor",[ii]],["FusedConv",[jn,qn]],["Gather",[ls,us]],["GatherElements",[ps,cs]],["Gelu",[si]],["Gemm",[fs,hs]],["GlobalAveragePool",[Ws,Us]],["GlobalMaxPool",[Fs,Ls]],["Greater",[Ei]],["GreaterOrEqual",[ki]],["InstanceNormalization",[bs,ys]],["LayerNormalization",[$s,vs]],["LeakyRelu",[ui,Xr]],["Less",[Oi]],["LessOrEqual",[Pi]],["Log",[vi]],["MatMul",[Ni]],["MaxPool",[Hs,Gs]],["Mul",[Ii]],["MultiHeadAttention",[_s,Cs]],["Neg",[di]],["Not",[li]],["Pad",[As,Ts]],["Pow",[Ai]],["Range",[js]],["Reciprocal",[ci]],["ReduceMin",[Ea]],["ReduceMean",[Ca]],["ReduceMax",[Ta]],["ReduceSum",[ka]],["ReduceProd",[Oa]],["ReduceL1",[_a]],["ReduceL2",[Ia]],["ReduceLogSum",[Ra]],["ReduceLogSumExp",[Aa]],["ReduceSumSquare",[Pa]],["Relu",[pi]],["Resize",[Zs,Xs]],["Sigmoid",[mi]],["Sin",[fi]],["Sinh",[hi]],["Slice",[nu,ou]],["SkipLayerNormalization",[Qs,eu]],["Split",[lu,du]],["Sqrt",[gi]],["Softmax",[iu,su]],["Sub",[Ti]],["Tan",[yi]],["Tanh",[bi]],["ThresholdedRelu",[wi,Xr]],["Tile",[mu]],["Transpose",[ca,pa]],["Where",[hu]]])});var un,wu=K(()=>{"use strict";Lt();Ue();vt();be();un=class{constructor(t){this.backend=t;this.repo=new Map,this.attributesBound=!1}getArtifact(t){return this.repo.get(t)}setArtifact(t,r){this.repo.set(t,r)}run(t,r,o,n,s,u,l){Ht(t.programInfo.name);let a=this.backend.device,p=this.backend.getComputePassEncoder();p.setPipeline(t.computePipeline);let h=[];for(let g of n)h.push({binding:h.length,resource:{buffer:g.buffer}});for(let g of s)h.push({binding:h.length,resource:{buffer:g.buffer}});l&&h.push({binding:h.length,resource:l});let y=a.createBindGroup({layout:t.computePipeline.getBindGroupLayout(0),entries:h,label:t.programInfo.name});if(p.setBindGroup(0,y),p.dispatchWorkgroups(...u),this.backend.pendingDispatchNumber++,this.backend.isQueryEnabled()){typeof this.backend.queryData>"u"&&(this.backend.queryData=this.backend.gpuDataManager.create(this.backend.querySetCount*8,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE));let g=this.backend.gpuDataManager.create(this.backend.querySetCount*8,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.backend.endComputePass(),this.backend.getCommandEncoder().resolveQuerySet(this.backend.querySet,0,2,this.backend.queryData.buffer,0),this.backend.getCommandEncoder().copyBufferToBuffer(this.backend.queryData.buffer,0,g.buffer,0,this.backend.querySetCount*8),this.backend.flush();let v=this.backend.currentKernelId,b=this.backend.kernels.get(v);g.buffer.mapAsync(GPUMapMode.READ).then(()=>{let x=new BigUint64Array(g.buffer.getMappedRange()),[I,$]=x,[C,P]=b;g.buffer.unmap(),typeof this.backend.queryTimeBase>"u"&&(this.backend.queryTimeBase=I);let A=Number(I-this.backend.queryTimeBase),z=Number($-this.backend.queryTimeBase);if(!Number.isSafeInteger(A)||!Number.isSafeInteger(z))throw new RangeError("incorrect timestamp range");if(this.backend.gpuDataManager.release(g.id),this.backend.env.webgpu.profiling?.ondata)this.backend.env.webgpu.profiling.ondata({version:1,inputsMetadata:r.map(T=>({dims:T.dims,dataType:Ot(T.dataType)})),outputsMetadata:o.map(T=>({dims:T.dims,dataType:Ot(T.dataType)})),kernelId:v,kernelType:C,kernelName:P,startTime:A,endTime:z});else{let T="";r.forEach((U,G)=>{T+=`input[${G}]: [${U.dims}] | ${Ot(U.dataType)}, `});let N="";o.forEach((U,G)=>{N+=`output[${G}]: [${U.dims}] | ${Ot(U.dataType)}, `}),console.log(`[profiling] kernel "${v}|${P}|${t.programInfo.name}" ${T}${N}execution time: ${z-A} ns`)}})}this.backend.pendingDispatchNumber>=16&&this.backend.flush(),Gt(t.programInfo.name)}dispose(){}build(t,r){Ht(t.name);let o=this.backend.device,n=[];o.features.has("shader-f16")&&n.push("enable f16;");let s=la(r),u=t.getShaderSource(s),l=`${n.join(`\n`)}\n${s.additionalImplementations}\n${u}`,a=o.createShaderModule({code:l,label:t.name});Pe("verbose",()=>`[WebGPU] ${t.name} shader code: ${l}`);let p=o.createComputePipeline({compute:{module:a,entryPoint:"main"},layout:"auto",label:t.name});return Gt(t.name),{programInfo:t,computePipeline:p}}normalizeDispatchGroupSize(t){let r=typeof t=="number"?t:t.x,o=typeof t=="number"?1:t.y||1,n=typeof t=="number"?1:t.z||1,s=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=s&&o<=s&&n<=s)return[r,o,n];let u=r*o*n,l=Math.ceil(Math.sqrt(u));if(l>s){if(l=Math.ceil(Math.cbrt(u)),l>s)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[l,l,l]}else return[l,l,1]}}});var Wc,Nc,ln,vu=K(()=>{"use strict";Lt();vt();oa();ua();bu();wu();Wc=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let o=0;o<e.length;++o){let n=e[o].dataType;switch(t[o]){case"none":{r.push("");break}case"type":{r.push(`${n}`);break}case"rank":{let s=e[o].dims.length;r.push(`${n};${s}`);break}case"dims":{let s=e[o].dims.join(",");r.push(`${n};${s}`);break}default:throw new Error(`unsupported input dependency: ${t[o]}`)}}return r.join("|")},Nc=(e,t,r)=>{let o=e.name;return e.shaderCache?.hint&&(o+="["+e.shaderCache.hint+"]"),o+=":"+r+`:${Wc(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,o},ln=class{constructor(){this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.pendingDispatchNumber=0;this.querySetCount=2;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let t=this.kernelCustomData.get(this.currentKernelId);return t||(t={},this.kernelCustomData.set(this.currentKernelId,t)),t}async initialize(t,r){this.env=t;let o=[],n={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:o};r.features.has("timestamp-query")&&o.push("timestamp-query"),r.features.has("shader-f16")&&o.push("shader-f16"),this.device=await r.requestDevice(n),this.gpuDataManager=sa(this),this.programManager=new un(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,ra(t.logLevel,!!t.debug),this.device.onuncapturederror=s=>{s.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${s.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device})}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let t={};this.isQueryEnabled()&&(typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1}),this.computePassEncoder=this.getCommandEncoder().beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){this.commandEncoder&&(this.endComputePass(),this.device.queue.submit([this.getCommandEncoder().finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0)}isQueryEnabled(){return this.device.features.has("timestamp-query")&&(this.env.webgpu.profiling?.mode==="default"||!this.env.webgpu.profiling?.mode&&this.env.webgpu.profilingMode==="default")}run(t,r,o,n,s){Ht(t.name);let u=[];for(let C=0;C<r.length;++C){let P=this.gpuDataManager.get(r[C].data);if(!P)throw new Error(`no GPU data for input: ${r[C].data}`);u[C]=P}let{outputs:l,dispatchGroup:a,programUniforms:p}=t.getRunData(r),h=o.length===0?l.map((C,P)=>P):o;if(h.length!==l.length)throw new Error(`Output size ${h.length} must be equal to ${l.length}.`);let y=[],g=[];for(let C=0;C<l.length;++C){if(!Number.isInteger(h[C])||h[C]<-3||h[C]>=l.length)throw new Error(`Invalid output index: ${h[C]}`);if(h[C]===-3)continue;let P=h[C]===-1,A=h[C]===-2,z=P||A?s(l[C].dataType,l[C].dims):n(h[C],l[C].dataType,l[C].dims),T=this.gpuDataManager.get(z.data);if(!T)throw new Error(`no GPU data for output: ${z.data}`);if(P&&this.temporaryData.push(T),A){let N=this.kernelPersistentData.get(this.currentKernelId);N||(N=[],this.kernelPersistentData.set(this.currentKernelId,N)),N.push(T)}y.push(z),g.push(T)}let v;if(p){let C=0,P=[];p.forEach(N=>{let U=typeof N.data=="number"?[N.data]:N.data;if(U.length===0)return;let G=U.length<=2?U.length*4:16;C=Math.ceil(C/G)*G,P.push(C),C+=U.length>4?Math.ceil(U.length/4)*16:U.length*4});let A=16;C=Math.ceil(C/A)*A;let z=new ArrayBuffer(C);p.forEach((N,U)=>{let G=P[U],Q=typeof N.data=="number"?[N.data]:N.data;N.type==="int32"?new Int32Array(z,G,Q.length).set(Q):N.type==="uint32"?new Uint32Array(z,G,Q.length).set(Q):new Float32Array(z,G,Q.length).set(Q)});let T=this.gpuDataManager.create(C,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(T.buffer,0,z,0,C),this.gpuDataManager.release(T.id),v={offset:0,size:C,buffer:T.buffer}}let b=this.programManager.normalizeDispatchGroupSize(a),x=b[1]===1&&b[2]===1,I=Nc(t,r,x),$=this.programManager.getArtifact(I);return $||($=this.programManager.build(t,b),this.programManager.setArtifact(I,$),Pe("info",()=>`[artifact] key: ${I}, programName: ${t.name}`)),Pe("info",()=>`[ProgramManager] run "${t.name}" (key=${I}) with ${b[0]}x${b[1]}x${b[2]}`),this.programManager.run($,r,y,u,g,b,v),Gt(t.name),y}upload(t,r){this.gpuDataManager.upload(t,r)}memcpy(t,r){this.gpuDataManager.memcpy(t,r)}async download(t,r){await this.gpuDataManager.download(t,r)}alloc(t){return this.gpuDataManager.create(t).id}free(t){return this.gpuDataManager.release(t)}createKernel(t,r,o,n){let s=yu.get(t);if(!s)throw new Error(`kernel not implemented: ${t}`);this.kernels.set(r,[t,n,s[0],[s[1],o]])}releaseKernel(t){let r=this.kernelPersistentData.get(t);if(r){for(let o of r)this.gpuDataManager.release(o.id);this.kernelPersistentData.delete(t)}this.kernelCustomData.delete(t),this.kernels.delete(t)}computeKernel(t,r,o){let n=this.kernels.get(t);if(!n)throw new Error(`kernel not created: ${t}`);let[s,u,l,a]=n;if(this.currentKernelId!==null)throw new Error(`kernel "[${s}] ${u}" is not allowed to be called recursively`);this.currentKernelId=t,a[0]&&(a[1]=a[0](a[1]),a[0]=void 0),Pe("info",()=>`[WebGPU] Start to run kernel "[${s}] ${u}"...`);let p=this.env.debug;this.temporaryData=[];try{return p&&this.device.pushErrorScope("validation"),l(r,a[1]),0}catch(h){return o.push(Promise.resolve(`[WebGPU] Kernel "[${s}] ${u}" failed. ${h}`)),1}finally{p&&o.push(this.device.popErrorScope().then(h=>h?`GPU validation error for kernel "[${s}] ${u}": ${h.message}`:null));for(let h of this.temporaryData)this.gpuDataManager.release(h.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(t,r,o,n){let s=this.sessionExternalDataMapping.get(t);s||(s=new Map,this.sessionExternalDataMapping.set(t,s));let u=s.get(r),l=this.gpuDataManager.registerExternalBuffer(o,n,u?.[1]);return s.set(r,[l,o]),l}unregisterBuffers(t){let r=this.sessionExternalDataMapping.get(t);r&&(r.forEach(o=>this.gpuDataManager.unregisterExternalBuffer(o[1])),this.sessionExternalDataMapping.delete(t))}getBuffer(t){let r=this.gpuDataManager.get(t);if(!r)throw new Error(`no GPU data for buffer: ${t}`);return r.buffer}createDownloader(t,r,o){return async()=>{let n=await On(this,t,r);return na(n.buffer,o)}}}});var $u={};Dr($u,{init:()=>Hc});var yr,Qn,Hc,Su=K(()=>{"use strict";Ue();vu();vt();$e();yr=class e{constructor(t,r,o,n){this.module=t;this.dataType=r;this.data=o;this.dims=n}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=D.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=D.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=D.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(D.size(t)!==D.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,t)}},Qn=class{constructor(t,r,o){this.module=t;this.backend=r;this.customDataOffset=0;this.customDataSize=0;let n=t.HEAPU32,s=o>>>2;this.opKernelContext=n[s++];let u=n[s++];this.outputCount=n[s++],this.customDataOffset=n[s++],this.customDataSize=n[s++];let l=[];for(let a=0;a<u;a++){let p=n[s++],h=n[s++],y=n[s++],g=[];for(let v=0;v<y;v++)g.push(n[s++]);l.push(new yr(t,p,h,g))}this.inputs=l}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(t,r){let o=r?.inputs?.map(l=>typeof l=="number"?this.inputs[l]:l)??this.inputs,n=r?.outputs??[],s=(l,a,p)=>new yr(this.module,a,this.output(l,p),p),u=(l,a)=>{let p=pr(l);if(!p)throw new Error(`Unsupported data type: ${l}`);let h=p*D.size(a);return new yr(this.module,l,this.backend.gpuDataManager.create(h).id,a)};return this.backend.run(t,o,n,s,u)}output(t,r){let o=this.module.stackSave();try{let n=this.module.stackAlloc((1+r.length)*4),s=n>>2;this.module.HEAPU32[s++]=r.length;for(let u=0;u<r.length;u++)this.module.HEAPU32[s++]=r[u];return this.module._JsepOutput(this.opKernelContext,t,n)}catch(n){throw new Error(`Failed to generate kernel\'s output[${t}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${n}`)}finally{this.module.stackRestore(o)}}},Hc=async(e,t,r)=>{let o=e.jsepInit;if(!o)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");let n=new ln;await n.initialize(t,r),o(n,s=>n.alloc(s),s=>n.free(s),(s,u,l,a=!1)=>{if(a)Pe("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${s}, dst=${u}, size=${l}`),n.memcpy(s,u);else{Pe("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${s}, gpuDataId=${u}, size=${l}`);let p=e.HEAPU8.subarray(s,s+l);n.upload(u,p)}},async(s,u,l)=>{Pe("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${s}, dataOffset=${u}, size=${l}`),await n.download(s,()=>e.HEAPU8.subarray(u,u+l))},(s,u,l)=>n.createKernel(s,u,l,t.debug||n.isQueryEnabled()?e.UTF8ToString(e._JsepGetNodeName(u)):`${u}`),s=>n.releaseKernel(s),(s,u,l,a)=>{Pe("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${l}, kernel=${s}, contextDataOffset=${u}`);let p=new Qn(e,n,u);return n.computeKernel(s,p,a)})}});var Ro;Ro=xo();var Ju=Oo(),xn,Cn=!1,zr=!1,Po=!1,Qu=()=>{try{return typeof SharedArrayBuffer>"u"?!1:(typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch{return!1}},el=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},tl=(e,t)=>e?t?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":t?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Bo=async e=>{if(Cn)return Promise.resolve();if(zr)throw new Error("multiple calls to \'initializeWebAssembly()\' detected.");if(Po)throw new Error("previous call to \'initializeWebAssembly()\' failed.");zr=!0;let t=e.initTimeout,r=e.numThreads,o=e.simd,n=r>1&&Qu(),s=o&&el(),u=e.wasmPaths,l=typeof u=="string"?u:void 0,a=tl(s,n),p=typeof u=="object"?u[a]:void 0,h=!1,y=[];if(t>0&&y.push(new Promise(g=>{setTimeout(()=>{h=!0,g()},t)})),y.push(new Promise((g,v)=>{let b=n?Ju:Ro,x={locateFile:(I,$)=>{if(n&&I.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([ko()],{type:"text/javascript"}));if(I.endsWith(".wasm")){if(p)return p;let C=l??$;return a==="ort-wasm-simd.wasm"?C+"ort-wasm-simd.jsep.wasm":a==="ort-wasm-simd-threaded.wasm"?C+"ort-wasm-simd-threaded.jsep.wasm":C+a}return $+I}};if(n)if(x.numThreads=r,typeof Blob>"u")x.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let I=`var ortWasmThreaded=${b.toString()};`;x.mainScriptUrlOrBlob=new Blob([I],{type:"text/javascript"})}b(x).then(I=>{zr=!1,Cn=!0,xn=I,g()},I=>{zr=!1,Po=!0,v(I)})})),await Promise.race(y),h)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},De=()=>{if(Cn&&xn)return xn;throw new Error("WebAssembly is not initialized yet.")};var Ve=(e,t)=>{let r=De(),o=r.lengthBytesUTF8(e)+1,n=r._malloc(o);return r.stringToUTF8(e,n,o),t.push(n),n},cr=(e,t,r,o)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([n,s])=>{let u=t?t+n:n;if(typeof s=="object")cr(s,u+".",r,o);else if(typeof s=="string"||typeof s=="number")o(u,s.toString());else if(typeof s=="boolean")o(u,s?"1":"0");else throw new Error(`Can\'t handle extra config type: ${typeof s}`)})},Ee=e=>{let t=De(),r=t.stackSave();try{let o=t.stackAlloc(8);t._OrtGetLastError(o,o+4);let n=t.HEAP32[o/4],s=t.HEAPU32[o/4+1],u=s?t.UTF8ToString(s):"";throw new Error(`${e} ERROR_CODE: ${n}, ERROR_MESSAGE: ${u}`)}finally{t.stackRestore(r)}};var Mo=e=>{let t=De(),r=0,o=[],n=e||{};try{if(e?.logSeverityLevel===void 0)n.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)n.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(n.terminate=!1);let s=0;return e?.tag!==void 0&&(s=Ve(e.tag,o)),r=t._OrtCreateRunOptions(n.logSeverityLevel,n.logVerbosityLevel,!!n.terminate,s),r===0&&Ee("Can\'t create run options."),e?.extra!==void 0&&cr(e.extra,"",new WeakSet,(u,l)=>{let a=Ve(u,o),p=Ve(l,o);t._OrtAddRunConfigEntry(r,a,p)!==0&&Ee(`Can\'t set a run config entry: ${u} - ${l}.`)}),[r,o]}catch(s){throw r!==0&&t._OrtReleaseRunOptions(r),o.forEach(u=>t._free(u)),s}};var rl=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},nl=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},ol=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},al=(e,t,r)=>{for(let o of t){let n=typeof o=="string"?o:o.name;switch(n){case"xnnpack":n="XNNPACK";break;case"webnn":if(n="WEBNN",typeof o!="string"){let u=o;if(u?.deviceType){let l=Ve("deviceType",r),a=Ve(u.deviceType,r);De()._OrtAddSessionConfigEntry(e,l,a)!==0&&Ee(`Can\'t set a session config entry: \'deviceType\' - ${u.deviceType}.`)}if(u?.numThreads){let l=u.numThreads;(typeof l!="number"||!Number.isInteger(l)||l<0)&&(l=0);let a=Ve("numThreads",r),p=Ve(l.toString(),r);De()._OrtAddSessionConfigEntry(e,a,p)!==0&&Ee(`Can\'t set a session config entry: \'numThreads\' - ${u.numThreads}.`)}if(u?.powerPreference){let l=Ve("powerPreference",r),a=Ve(u.powerPreference,r);De()._OrtAddSessionConfigEntry(e,l,a)!==0&&Ee(`Can\'t set a session config entry: \'powerPreference\' - ${u.powerPreference}.`)}}break;case"webgpu":if(n="JS",typeof o!="string"){let u=o;if(u?.preferredLayout){if(u.preferredLayout!=="NCHW"&&u.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either \'NCHW\' or \'NHWC\': ${u.preferredLayout}`);let l=Ve("preferredLayout",r),a=Ve(u.preferredLayout,r);De()._OrtAddSessionConfigEntry(e,l,a)!==0&&Ee(`Can\'t set a session config entry: \'preferredLayout\' - ${u.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${n}`)}let s=Ve(n,r);De()._OrtAppendExecutionProvider(e,s)!==0&&Ee(`Can\'t append execution provider: ${n}.`)}},Do=e=>{let t=De(),r=0,o=[],n=e||{};ol(n);try{let s=rl(n.graphOptimizationLevel??"all"),u=nl(n.executionMode??"sequential"),l=typeof n.logId=="string"?Ve(n.logId,o):0,a=n.logSeverityLevel??2;if(!Number.isInteger(a)||a<0||a>4)throw new Error(`log serverity level is not valid: ${a}`);let p=n.logVerbosityLevel??0;if(!Number.isInteger(p)||p<0||p>4)throw new Error(`log verbosity level is not valid: ${p}`);let h=typeof n.optimizedModelFilePath=="string"?Ve(n.optimizedModelFilePath,o):0;if(r=t._OrtCreateSessionOptions(s,!!n.enableCpuMemArena,!!n.enableMemPattern,u,!!n.enableProfiling,0,l,a,p,h),r===0&&Ee("Can\'t create session options."),n.executionProviders&&al(r,n.executionProviders,o),n.freeDimensionOverrides)for(let[y,g]of Object.entries(n.freeDimensionOverrides)){if(typeof y!="string")throw new Error(`free dimension override name must be a string: ${y}`);if(typeof g!="number"||!Number.isInteger(g)||g<0)throw new Error(`free dimension override value must be a non-negative integer: ${g}`);let v=Ve(y,o);t._OrtAddFreeDimensionOverride(r,v,g)!==0&&Ee(`Can\'t set a free dimension override: ${y} - ${g}.`)}return n.extra!==void 0&&cr(n.extra,"",new WeakSet,(y,g)=>{let v=Ve(y,o),b=Ve(g,o);t._OrtAddSessionConfigEntry(r,v,b)!==0&&Ee(`Can\'t set a session config entry: ${y} - ${g}.`)}),[r,o]}catch(s){throw r!==0&&t._OrtReleaseSessionOptions(r),o.forEach(u=>t._free(u)),s}};Ue();var Gc=(e,t)=>{De()._OrtInit(e,t)!==0&&Ee("Can\'t initialize onnxruntime.")},Cu=async e=>{Gc(e.wasm.numThreads,mr(e.logLevel))},_u=async(e,t)=>{if(t==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let r=await navigator.gpu.requestAdapter();if(!r)throw new Error(\'Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.\');if(!e.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");let o=(Su(),Wt($u)).init;await o(De(),e,r)}},br=new Map,Lc=e=>{let t=De(),r=t.stackSave();try{let o=t.stackAlloc(8);return t._OrtGetInputOutputCount(e,o,o+4)!==0&&Ee("Can\'t get session input/output count."),[t.HEAP32[o/4],t.HEAP32[o/4+1]]}finally{t.stackRestore(r)}},eo=e=>{let t=De(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can\'t create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},Iu=(e,t)=>{let r,o,n=De();Array.isArray(e)?[r,o]=e:e.buffer===n.HEAPU8.buffer?[r,o]=[e.byteOffset,e.byteLength]:[r,o]=eo(e);let s=0,u=0,l=0,a=[],p=[],h=[];try{[u,a]=Do(t),s=n._OrtCreateSession(r,o,u),s===0&&Ee("Can\'t create a session.");let[y,g]=Lc(s),v=[],b=[],x=[];for(let $=0;$<y;$++){let C=n._OrtGetInputName(s,$);C===0&&Ee("Can\'t get an input name."),p.push(C),v.push(n.UTF8ToString(C))}for(let $=0;$<g;$++){let C=n._OrtGetOutputName(s,$);C===0&&Ee("Can\'t get an output name."),h.push(C);let P=n.UTF8ToString(C);b.push(P);{let A=typeof t?.preferredOutputLocation=="string"?t.preferredOutputLocation:t?.preferredOutputLocation?.[P]??"cpu";if(A!=="cpu"&&A!=="cpu-pinned"&&A!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${A}.`);x.push(A)}}let I=null;return x.some($=>$==="gpu-buffer")&&(l=n._OrtCreateBinding(s),l===0&&Ee("Can\'t create IO binding."),I={handle:l,outputPreferredLocations:x,outputPreferredLocationsEncoded:x.map($=>In($))}),br.set(s,[s,p,h,I]),[s,v,b]}catch(y){throw p.forEach(g=>n._OrtFree(g)),h.forEach(g=>n._OrtFree(g)),l!==0&&n._OrtReleaseBinding(l),s!==0&&n._OrtReleaseSession(s),y}finally{n._free(r),u!==0&&n._OrtReleaseSessionOptions(u),a.forEach(y=>n._free(y))}},Au=e=>{let t=De(),r=br.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[o,n,s,u]=r;u&&t._OrtReleaseBinding(u.handle),t.jsepUnregisterBuffers?.(e),n.forEach(l=>t._OrtFree(l)),s.forEach(l=>t._OrtFree(l)),t._OrtReleaseSession(o),br.delete(e)},xu=(e,t,r,o,n)=>{if(!e){t.push(0);return}let s=De(),u=e[0],l=e[1],a=e[3],p,h;if(u==="string"&&a==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(a==="gpu-buffer"){let v=e[2].gpuBuffer,b=pr(_n(u));h=l.reduce((x,I)=>x*I,1)*b,p=s.jsepRegisterBuffer(o,n,v,h)}else{let v=e[2];if(Array.isArray(v)){h=4*v.length,p=s._malloc(h),r.push(p);let b=p/4;for(let x=0;x<v.length;x++){if(typeof v[x]!="string")throw new TypeError(`tensor data at index ${x} is not a string`);s.HEAPU32[b++]=Ve(v[x],r)}}else h=v.byteLength,p=s._malloc(h),r.push(p),s.HEAPU8.set(new Uint8Array(v.buffer,v.byteOffset,h),p)}let y=s.stackSave(),g=s.stackAlloc(4*l.length);try{let v=g/4;l.forEach(x=>s.HEAP32[v++]=x);let b=s._OrtCreateTensor(_n(u),p,h,g,l.length,In(a));b===0&&Ee(`Can\'t create tensor for input/output. session=${o}, index=${n}.`),t.push(b)}finally{s.stackRestore(y)}},Tu=async(e,t,r,o,n,s)=>{let u=De(),l=br.get(e);if(!l)throw new Error(`cannot run inference. invalid session id: ${e}`);let[a,p,h,y]=l,g=t.length,v=o.length,b=0,x=[],I=[],$=[],C=[],P=u.stackSave(),A=u.stackAlloc(g*4),z=u.stackAlloc(g*4),T=u.stackAlloc(v*4),N=u.stackAlloc(v*4);try{[b,x]=Mo(s);for(let ee=0;ee<g;ee++)xu(r[ee],I,C,e,t[ee]);for(let ee=0;ee<v;ee++)xu(n[ee],$,C,e,g+o[ee]);let U=A/4,G=z/4,Q=T/4,B=N/4;for(let ee=0;ee<g;ee++)u.HEAPU32[U++]=I[ee],u.HEAPU32[G++]=p[t[ee]];for(let ee=0;ee<v;ee++)u.HEAPU32[Q++]=$[ee],u.HEAPU32[B++]=h[o[ee]];if(y){let{handle:ee,outputPreferredLocations:we,outputPreferredLocationsEncoded:Z}=y;if(p.length!==g)throw new Error(`input count from feeds (${g}) is expected to be always equal to model\'s input count (${p.length}).`);for(let ye=0;ye<g;ye++){let Ce=t[ye];await u._OrtBindInput(ee,p[Ce],I[ye])!==0&&Ee(`Can\'t bind input[${ye}] for session=${e}.`)}for(let ye=0;ye<v;ye++){let Ce=o[ye];n[ye]?.[3]?u._OrtBindOutput(ee,h[Ce],$[ye],0)!==0&&Ee(`Can\'t bind pre-allocated output[${ye}] for session=${e}.`):u._OrtBindOutput(ee,h[Ce],0,Z[Ce])!==0&&Ee(`Can\'t bind output[${ye}] to ${we[ye]} for session=${e}.`)}}let q;y?q=await u._OrtRunWithBinding(a,y.handle,v,T,b):q=await u._OrtRun(a,z,A,g,N,v,T,b),q!==0&&Ee("failed to call OrtRun().");let pe=[];for(let ee=0;ee<v;ee++){let we=u.HEAPU32[T/4+ee];if(we===$[ee]){pe.push(n[ee]);continue}let Z=u.stackSave(),ye=u.stackAlloc(4*4),Ce=!1,fe,ce=0;try{u._OrtGetTensorData(we,ye,ye+4,ye+8,ye+12)!==0&&Ee(`Can\'t access output tensor data on index ${ee}.`);let Be=ye/4,He=u.HEAPU32[Be++];ce=u.HEAPU32[Be++];let L=u.HEAPU32[Be++],X=u.HEAPU32[Be++],he=[];for(let Me=0;Me<X;Me++)he.push(u.HEAPU32[L/4+Me]);u._OrtFree(L);let Fe=he.reduce((Me,Ge)=>Me*Ge,1);fe=Ot(He);let Ze=y?.outputPreferredLocations[o[ee]];if(fe==="string"){if(Ze==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let Me=[],Ge=ce/4;for(let Ke=0;Ke<Fe;Ke++){let nt=u.HEAPU32[Ge++],Je=Ke===Fe-1?void 0:u.HEAPU32[Ge]-nt;Me.push(u.UTF8ToString(nt,Je))}pe.push([fe,he,Me,"cpu"])}else if(Ze==="gpu-buffer"&&Fe>0){let Me=u.jsepGetBuffer(ce),Ge=pr(He);if(Ge===void 0||!zo(fe))throw new Error(`Unsupported data type: ${fe}`);Ce=!0,pe.push([fe,he,{gpuBuffer:Me,download:u.jsepCreateDownloader(Me,Fe*Ge,fe),dispose:()=>{u._OrtReleaseTensor(we)}},"gpu-buffer"])}else{let Me=Vr(fe),Ge=new Me(Fe);new Uint8Array(Ge.buffer,Ge.byteOffset,Ge.byteLength).set(u.HEAPU8.subarray(ce,ce+Ge.byteLength)),pe.push([fe,he,Ge,"cpu"])}}finally{u.stackRestore(Z),fe==="string"&&ce&&u._free(ce),Ce||u._OrtReleaseTensor(we)}}return y&&u._OrtClearBoundOutputs(y.handle),pe}finally{u.stackRestore(P),I.forEach(U=>u._OrtReleaseTensor(U)),$.forEach(U=>u._OrtReleaseTensor(U)),C.forEach(U=>u._free(U)),b!==0&&u._OrtReleaseRunOptions(b),x.forEach(U=>u._free(U))}},Eu=e=>{let t=De(),r=br.get(e);if(!r)throw new Error("invalid session id");let o=r[0],n=t._OrtEndProfiling(o);n===0&&Ee("Can\'t get an profile file name."),t._OrtFree(n)},Ou=e=>{let t=[];for(let r of e){let o=r[2];!Array.isArray(o)&&"buffer"in o&&t.push(o.buffer)}return t};self.onmessage=e=>{let{type:t,in:r}=e.data;try{switch(t){case"init-wasm":Bo(r.wasm).then(()=>{Cu(r).then(()=>{postMessage({type:t})},o=>{postMessage({type:t,err:o})})},o=>{postMessage({type:t,err:o})});break;case"init-ep":{let{epName:o,env:n}=r;_u(n,o).then(()=>{postMessage({type:t})},s=>{postMessage({type:t,err:s})});break}case"copy-from":{let{buffer:o}=r,n=eo(o);postMessage({type:t,out:n});break}case"create":{let{model:o,options:n}=r,s=Iu(o,n);postMessage({type:t,out:s});break}case"release":Au(r),postMessage({type:t});break;case"run":{let{sessionId:o,inputIndices:n,inputs:s,outputIndices:u,options:l}=r;Tu(o,n,s,u,new Array(u.length).fill(null),l).then(a=>{a.some(p=>p[3]!=="cpu")?postMessage({type:t,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:t,out:a},Ou(a))},a=>{postMessage({type:t,err:a})});break}case"end-profiling":Eu(r),postMessage({type:t});break;default:}}catch(o){postMessage({type:t,err:o})}};})();\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n'});var hn,Zt,Oo,ga,ba,yu,vu,zn,Nn,m$,ma,by,yy,vy,wy,xy,$y,Ty,wu=B(()=>{"use strict";It();my();Rn();hn=()=>!!ye.wasm.proxy&&typeof document<"u",Oo=!1,ga=!1,ba=!1,vu=new Map,zn=(r,e)=>{let n=vu.get(r);n?n.push(e):vu.set(r,[e])},Nn=()=>{if(Oo||!ga||ba||!Zt)throw new Error("worker not ready")},m$=r=>{switch(r.data.type){case"init-wasm":Oo=!1,r.data.err?(ba=!0,yu[1](r.data.err)):(ga=!0,yu[0]());break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let e=vu.get(r.data.type);r.data.err?e.shift()[1](r.data.err):e.shift()[0](r.data.out);break}default:}},ma=typeof document<"u"?document?.currentScript?.src:void 0,by=async()=>{if(!ga){if(Oo)throw new Error("multiple calls to 'initWasm()' detected.");if(ba)throw new Error("previous call to 'initWasm()' failed.");if(Oo=!0,hn())return ye.wasm.wasmPaths===void 0&&ma&&ma.indexOf("blob:")!==0&&(ye.wasm.wasmPaths=ma.substr(0,+ma.lastIndexOf("/")+1)),new Promise((r,e)=>{Zt?.terminate();let n=URL.createObjectURL(new Blob([gy()],{type:"text/javascript"}));Zt=new Worker(n,{name:"ort-wasm-proxy-worker"}),Zt.onerror=o=>e(o),Zt.onmessage=m$,URL.revokeObjectURL(n),yu=[r,e];let t={type:"init-wasm",in:ye};Zt.postMessage(t)});try{await Dh(ye.wasm),await uy(ye),ga=!0}catch(r){throw ba=!0,r}finally{Oo=!1}}},yy=async r=>{if(hn())return Nn(),new Promise((e,n)=>{zn("init-ep",[e,n]);let t={type:"init-ep",in:{epName:r,env:ye}};Zt.postMessage(t)});await ly(ye,r)},vy=async r=>hn()?(Nn(),new Promise((e,n)=>{zn("copy-from",[e,n]);let t={type:"copy-from",in:{buffer:r}};Zt.postMessage(t,[r.buffer])})):bu(r),wy=async(r,e)=>{if(hn()){if(e?.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return Nn(),new Promise((n,t)=>{zn("create",[n,t]);let o={type:"create",in:{model:r,options:e}},i=[];r instanceof Uint8Array&&i.push(r.buffer),Zt.postMessage(o,i)})}else return dy(r,e)},xy=async r=>{if(hn())return Nn(),new Promise((e,n)=>{zn("release",[e,n]);let t={type:"release",in:r};Zt.postMessage(t)});cy(r)},$y=async(r,e,n,t,o,i)=>{if(hn()){if(n.some(s=>s[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(o.some(s=>s))throw new Error("pre-allocated output tensor is not supported for proxy.");return Nn(),new Promise((s,a)=>{zn("run",[s,a]);let u=n,l={type:"run",in:{sessionId:r,inputIndices:e,inputs:u,outputIndices:t,options:i}};Zt.postMessage(l,hy(u))})}else return fy(r,e,n,t,o,i)},Ty=async r=>{if(hn())return Nn(),new Promise((e,n)=>{zn("end-profiling",[e,n]);let t={type:"end-profiling",in:r};Zt.postMessage(t)});py(r)}});var _y,g$,ya,Sy=B(()=>{"use strict";It();wu();ut();_y=(r,e)=>{switch(r.location){case"cpu":return[r.type,r.dims,r.data,"cpu"];case"gpu-buffer":return[r.type,r.dims,{gpuBuffer:r.gpuBuffer},"gpu-buffer"];default:throw new Error(`invalid data location: ${r.location} for ${e()}`)}},g$=r=>{switch(r[3]){case"cpu":return new gt(r[0],r[2],r[1]);case"gpu-buffer":{let e=r[0];if(!ji(e))throw new Error(`not supported data type: ${e} for deserializing GPU tensor`);let{gpuBuffer:n,download:t,dispose:o}=r[2];return gt.fromGpuBuffer(n,{dataType:e,dims:r[1],download:t,dispose:o})}default:throw new Error(`invalid data location: ${r[3]}`)}},ya=class{async fetchModelAndCopyToWasmMemory(e){let n=await fetch(e);if(n.status!==200)throw new Error(`failed to load model: ${e}`);let t=await n.arrayBuffer();return vy(new Uint8Array(t))}async loadModel(e,n){Vt();let t;typeof e=="string"?typeof process<"u"&&process.versions&&process.versions.node?t=await(void 0)(e):t=await this.fetchModelAndCopyToWasmMemory(e):t=e,[this.sessionId,this.inputNames,this.outputNames]=await wy(t,n),Gt()}async dispose(){return xy(this.sessionId)}async run(e,n,t){Vt();let o=[],i=[];Object.entries(e).forEach(p=>{let g=p[0],b=p[1],y=this.inputNames.indexOf(g);if(y===-1)throw new Error(`invalid input '${g}'`);o.push(b),i.push(y)});let s=[],a=[];Object.entries(n).forEach(p=>{let g=p[0],b=p[1],y=this.outputNames.indexOf(g);if(y===-1)throw new Error(`invalid output '${g}'`);s.push(b),a.push(y)});let u=o.map((p,g)=>_y(p,()=>`input "${this.inputNames[i[g]]}"`)),l=s.map((p,g)=>p?_y(p,()=>`output "${this.outputNames[a[g]]}"`):null),d=await $y(this.sessionId,i,u,a,l,t),f={};for(let p=0;p<d.length;p++)f[this.outputNames[a[p]]]=s[p]??g$(d[p]);return Gt(),f}startProfiling(){}endProfiling(){Ty(this.sessionId)}}});var b$,va,Iy=B(()=>{"use strict";It();wu();Sy();b$=()=>{if((typeof ye.wasm.initTimeout!="number"||ye.wasm.initTimeout<0)&&(ye.wasm.initTimeout=0),typeof ye.wasm.simd!="boolean"&&(ye.wasm.simd=!0),typeof ye.wasm.proxy!="boolean"&&(ye.wasm.proxy=!1),typeof ye.wasm.trace!="boolean"&&(ye.wasm.trace=!1),typeof ye.wasm.numThreads!="number"||!Number.isInteger(ye.wasm.numThreads)||ye.wasm.numThreads<=0){let r=typeof navigator>"u"?(void 0)().length:navigator.hardwareConcurrency;ye.wasm.numThreads=Math.min(4,Math.ceil((r||1)/2))}},va=class{async init(e){b$(),await by(),await yy(e)}async createInferenceSessionHandler(e,n){let t=new ya;return await t.loadModel(e,n),Promise.resolve(t)}}});var Ay={};Br(Ay,{wasmBackend:()=>y$});var y$,Oy=B(()=>{"use strict";Iy();y$=new va});var w$={};Br(w$,{InferenceSession:()=>ul,TRACE:()=>Oa,TRACE_FUNC_BEGIN:()=>Vt,TRACE_FUNC_END:()=>Gt,Tensor:()=>gt,TrainingSession:()=>fl,default:()=>v$,env:()=>ye,registerBackend:()=>lr});It();It();It();var hl="1.17.0";var v$=Ca;{let r=(vh(),Ar(yh)).onnxjsBackend;lr("webgl",r,-10)}{let r=(Oy(),Ar(Ay)).wasmBackend;lr("webgpu",r,5),lr("cpu",r,10),lr("wasm",r,10),lr("xnnpack",r,9),lr("webnn",r,9)}Object.defineProperty(ye.versions,"web",{value:hl,enumerable:!0});return Ar(w$);})();
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/*! Bundled license information:

long/index.js:
  (**
   * @license
   * Copyright 2009 The Closure Library Authors
   * Copyright 2020 Daniel Wirtz / The long.js Authors.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *     http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *
   * SPDX-License-Identifier: Apache-2.0
   *)
*/
//# sourceMappingURL=ort.all.min.js.map
